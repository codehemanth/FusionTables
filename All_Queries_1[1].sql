	--------------------AVTEC Move Order Pick Tag DM--------------------------
--Move_Order_PickSlip--
SELECT 1 query
     , MMT.PICK_SLIP_NUMBER
     , esi_assemb.item_number ASSEMBLY_ITEM
	 , to_char(wwob.PLANNED_COMPLETION_DATE,'DD-MON-YY') COMPLETION_DATE
	 , TO_CHAR(wwob.PLANNED_start_DATE,'DD-MON-YY') JOB_DATE
	 , wwob.COMPLETED_QUANTITY JOB_QUANTITY
	 , MTRL.reference_name JOB_NAME
	 , mtrh.organization_id
     , MTRH.REQUEST_NUMBER MOVE_ORDER_NUMBER
     , MTRH.MOVE_ORDER_TYPE
     , MTRL.LINE_NUMBER
     , MTRL.LINE_ID
     , MTRL.TRANSACTION_SOURCE_TYPE_ID
     , MMT.TRANSACTION_ID
     , TO_NUMBER(NULL) PARENT_LINE_ID
     
     , MMT.INVENTORY_ITEM_ID
     , MSI.ITEM_NUMBER            --null C_ITEM_FLEXDAT
     , MSI.DESCRIPTION ITEM_DESCRIPTION
     , MMT.REVISION
     
     , MMT.SUBINVENTORY_CODE FR_SUBINV
     , DECODE(MMT.LOCATOR_ID, NULL, '', INV_PROJECT.GET_LOCSEGS(MMT.LOCATOR_ID, MMT.ORGANIZATION_ID )) SOURCE_LOCATOR
     
     , MMT.TRANSFER_SUBINVENTORY TO_SUBINV
     , DECODE(MMT.TRANSFER_LOCATOR_ID, NULL, '', INV_PROJECT.GET_LOCSEGS(MMT.TRANSFER_LOCATOR_ID, MMT.ORGANIZATION_ID )) TO_LOCATOR
     
     , MTRL.PJC_PROJECT_ID PROJECT_ID
     , MTRL.PJC_TASK_ID    TASK_ID
     
     , DECODE(MMT.DISTRIBUTION_ACCOUNT_ID, '', '', null) C_TO_ACCOUNT_FLEXDAT
     , CASE WHEN MTRL.REQUESTER_ID IS NULL 
                 THEN PER.USERNAME 
            ELSE 
                 (SELECT GLOBAL_NAME FROM INV_EMPLOYEES_CURRENT_V WHERE PERSON_ID = MTRL.REQUESTER_ID AND ROWNUM<2)
       END AS REQUESTER 
     , MMT.TRANSACTION_REFERENCE REFERENCE
     
     , MMT.TRANSACTION_UOM TRANSACTION_UOM
     , INV_MO_PICK_SLIP.get_uom_name(MMT.TRANSACTION_UOM) UOM_NAME	 	 	 	 
     , ABS(MMT.TRANSACTION_QUANTITY) TRANSACTION_QTY
	 ,NVL(MTRL.QUANTITY_DELIVERED,0) REQ_QTY
	 ,ABS(MMT.TRANSACTION_QUANTITY)-NVL(MTRL.QUANTITY_DELIVERED,0) SHORT_QTY
     , (SELECT DROPPING_ORDER FROM INV_SECONDARY_INVENTORIES WHERE SECONDARY_INVENTORY_NAME = MMT.TRANSFER_SUBINVENTORY AND ORGANIZATION_ID = MMT.ORGANIZATION_ID) SUB_DROPPING_ORDER
     , (SELECT DROPPING_ORDER FROM INV_ITEM_LOCATIONS WHERE INVENTORY_LOCATION_ID = MMT.TRANSFER_LOCATOR_ID AND ORGANIZATION_ID = MMT.ORGANIZATION_ID) LOC_DROPPING_ORDER
     
     , MMT.SECONDARY_UOM_CODE SEC_UOM
	 , INV_MO_PICK_SLIP.get_uom_name(MMT.SECONDARY_UOM_CODE) SEC_UOM_NAME	 	 	 
     , ABS(MMT.SECONDARY_TRANSACTION_QUANTITY) SEC_TRANSACTION_QTY

     , INV_MO_PICK_SLIP.cf_sec_uomformula(MMT.INVENTORY_ITEM_ID, MMT.SECONDARY_UOM_CODE) CF_SEC_UOM
     , INV_MO_PICK_SLIP.cf_sec_qtyformula(MMT.INVENTORY_ITEM_ID, ABS(MMT.SECONDARY_TRANSACTION_QUANTITY)) CF_SEC_QTY
		
     , INV_MO_PICK_SLIP.cf_project_numberformula(MTRL.PJC_PROJECT_ID) CF_PROJECT_NUMBER
     , INV_MO_PICK_SLIP.cf_task_numberformula(MTRL.PJC_TASK_ID,MTRL.PJC_PROJECT_ID) CF_TASK_NUMBER
	
     , INV_MO_PICK_SLIP.cf_so_infoformula(LINE_ID, MOVE_ORDER_TYPE) CF_SO_INFO
     , INV_MO_PICK_SLIP.CP_SO_ORDER_NUMBER_p CP_SO_ORDER_NUMBER
     , INV_MO_PICK_SLIP.CP_SO_LINE_NUMBER_p CP_SO_LINE_NUMBER
     , INV_MO_PICK_SLIP.CP_SO_DELIVERY_NAME_p CP_SO_DELIVERY_NAME
     , INV_MO_PICK_SLIP.CP_WO_ORDER_NUMBER_P CP_WO_ORDER_NUMBER
     , INV_MO_PICK_SLIP.CP_WO_OPERATION_SEQ_NUMBER_P CP_WO_OPERATION_SEQ_NUMBER
     , INV_MO_PICK_SLIP.CP_WO_WORK_CENTER_CODE_P CP_WO_WORK_CENTER_CODE
     , INV_MO_PICK_SLIP.CP_WO_WORK_AREA_CODE_P CP_WO_WORK_AREA_CODE
	 
     , 3 TASK_STATUS_ID	--INV_PICK_SLIP_TASK_STATUS (1- UnAllocated, 2-Allocated, 3-Completed)
     , INV_MO_PICK_SLIP.cf_task_statusformula(3) CF_TASK_STATUS
     , MMT.PROJECT_ID INV_PROJECT_ID
     , MMT.TASK_ID INV_TASK_ID
     , INV_MO_PICK_SLIP.cf_project_numberformula(MMT.PROJECT_ID) INV_PROJECT_NUMBER
     , INV_MO_PICK_SLIP.cf_task_numberformula(MMT.TASK_ID, MMT.PROJECT_ID) INV_TASK_NUMBER 
,lot.L_LOT_NUMBER
,lot.L_LOT_qty	 
	 
  FROM INV_MATERIAL_TXNS MMT   --MTL_MATERIAL_TRANSACTIONS
     , INV_TXN_REQUEST_HEADERS MTRH
     , INV_TXN_REQUEST_LINES MTRL
     , EGP_SYSTEM_ITEMS MSI
     , PER_USERS PER  --FND_USER
	 , wie_work_orders_b wwob
	 , egp_system_items_b esi_assemb
	 ,(SELECT TRANSACTION_ID L_TRANSACTION_ID
            , LOT_NUMBER L_LOT_NUMBER
            , ABS(TRANSACTION_QUANTITY) L_LOT_QTY
            , SERIAL_TRANSACTION_ID LS_SER_TXN_ID
         FROM INV_TRANSACTION_LOT_NUMBERS
       UNION ALL
       SELECT TRANSACTION_TEMP_ID 
            , LOT_NUMBER
            , ABS(TRANSACTION_QUANTITY) 
            , SERIAL_TRANSACTION_TEMP_ID
         FROM INV_TRANSACTION_LOTS_TEMP) lot
 WHERE  1=1 --MMT.ORGANIZATION_ID             = :P_ORG_ID
   AND MMT.MOVE_ORDER_LINE_ID          = MTRL.LINE_ID
   AND MTRL.HEADER_ID                  = MTRH.HEADER_ID
   AND MSI.ORGANIZATION_ID             = MMT.ORGANIZATION_ID
   AND MSI.INVENTORY_ITEM_ID           = MMT.INVENTORY_ITEM_ID
   AND PER.USERNAME                    = MTRL.CREATED_BY
   AND NVL(MMT.TRANSACTION_QUANTITY, 0) < 0
   AND  MTRH.request_number in (:P_REQUEST_NUMBER)
   AND wwob.work_order_number = MTRL.reference_name
   AND wwob.organization_id = MTRH.organization_id
   AND esi_assemb.organization_id = wwob.organization_id
   AND esi_assemb.inventory_item_id = wwob.inventory_item_id
   and MMT.TRANSACTION_ID=lot.L_TRANSACTION_ID(+)
UNION ALL

SELECT  2 query
     , (SELECT PICK_SLIP_NUMBER FROM INV_MATERIAL_TXNS_TEMP WHERE TRANSACTION_TEMP_ID = NVL(MMTT.PARENT_LINE_ID, MMTT.TRANSACTION_TEMP_ID) )PICK_SLIP_NUMBER
     , esi_assemb.item_number ASSEMBLY_ITEM
	 , to_char(wwob.PLANNED_COMPLETION_DATE,'DD-MON-YY') COMPLETION_DATE
	 , TO_CHAR(wwob.PLANNED_start_DATE,'DD-MON-YY') JOB_DATE
	 , wwob.COMPLETED_QUANTITY JOB_QUANTITY
	 , MTRL.reference_name JOB_NAME
	 , mtrh.organization_id
     , MTRH.REQUEST_NUMBER MOVE_ORDER_NUMBER
     , MTRH.MOVE_ORDER_TYPE
     , MTRL.LINE_NUMBER
     , MTRL.LINE_ID
     , MTRL.TRANSACTION_SOURCE_TYPE_ID
     , MMTT.TRANSACTION_TEMP_ID TRANSACTION_ID
     , MMTT.PARENT_LINE_ID
     
     , MMTT.INVENTORY_ITEM_ID
     , MSI.ITEM_NUMBER                --null C_ITEM_FLEXDAT
     , MSI.DESCRIPTION ITEM_DESCRIPTION
     , MMTT.REVISION
     
     , MMTT.SUBINVENTORY_CODE FR_SUBINV
     , DECODE(MMTT.LOCATOR_ID, NULL, '', INV_PROJECT.GET_LOCSEGS(MMTT.LOCATOR_ID, MMTT.ORGANIZATION_ID )) FR_LOCATOR
     
     , MMTT.TRANSFER_SUBINVENTORY TO_SUBINV
     , DECODE(MMTT.TRANSFER_TO_LOCATION, NULL, '', INV_PROJECT.GET_LOCSEGS(MMTT.TRANSFER_TO_LOCATION, MMTT.ORGANIZATION_ID )) TO_LOCATOR
     
     , MTRL.PJC_PROJECT_ID  PROJECT_ID
     , MTRL.PJC_TASK_ID     TAKS_ID
     
     , DECODE(MMTT.DISTRIBUTION_ACCOUNT_ID, '', '', null) C_TO_ACCOUNT_FLEXDAT
     , CASE WHEN MTRL.REQUESTER_ID IS NULL 
                 THEN PER.USERNAME 
            ELSE 
                 (SELECT GLOBAL_NAME FROM INV_EMPLOYEES_CURRENT_V WHERE PERSON_ID = MTRL.REQUESTER_ID AND ROWNUM<2)
       END AS REQUESTER 
     , MMTT.TRANSACTION_REFERENCE REFERENCE
     
     , MMTT.TRANSACTION_UOM TRANSACTION_UOM
     , INV_MO_PICK_SLIP.get_uom_name(MMTT.TRANSACTION_UOM) UOM_NAME	 	 	 
     , ABS(MMTT.TRANSACTION_QUANTITY) TRANSACTION_QTY
	 	 ,nVl(MMTT.PRIMARY_QUANTITY,0) REQ_QTY
	 ,ABS(MMTT.TRANSACTION_QUANTITY)-nVl(MMTT.PRIMARY_QUANTITY,0) SHORT_QTY
     
     , (SELECT DROPPING_ORDER FROM INV_SECONDARY_INVENTORIES WHERE SECONDARY_INVENTORY_NAME = MMTT.TRANSFER_SUBINVENTORY AND ORGANIZATION_ID = MMTT.ORGANIZATION_ID) SUB_DROPPING_ORDER
     , (SELECT DROPPING_ORDER FROM INV_ITEM_LOCATIONS WHERE INVENTORY_LOCATION_ID = MMTT.TRANSFER_TO_LOCATION AND ORGANIZATION_ID = MMTT.ORGANIZATION_ID) LOC_DROPPING_ORDER
     
     , MMTT.SECONDARY_UOM_CODE SEC_UOM
	 , INV_MO_PICK_SLIP.get_uom_name(MMTT.SECONDARY_UOM_CODE) SEC_UOM_NAME	 	 
     , ABS(MMTT.SECONDARY_TRANSACTION_QUANTITY) SEC_TRANSACTION_QTY
          
     
     , INV_MO_PICK_SLIP.cf_sec_uomformula(MMTT.INVENTORY_ITEM_ID, MMTT.SECONDARY_UOM_CODE) CF_SEC_UOM
     , INV_MO_PICK_SLIP.cf_sec_qtyformula(MMTT.INVENTORY_ITEM_ID, ABS(MMTT.SECONDARY_TRANSACTION_QUANTITY)) CF_SEC_QTY
	
     , INV_MO_PICK_SLIP.cf_project_numberformula(MTRL.PJC_PROJECT_ID) CF_PROJECT_NUMBER
     , INV_MO_PICK_SLIP.cf_task_numberformula(MTRL.PJC_TASK_ID, MTRL.PJC_PROJECT_ID) CF_TASK_NUMBER
	
     , INV_MO_PICK_SLIP.cf_so_infoformula(MTRL.LINE_ID, MTRH.MOVE_ORDER_TYPE) CF_SO_INFO
     , INV_MO_PICK_SLIP.CP_SO_ORDER_NUMBER_p CP_SO_ORDER_NUMBER
     , INV_MO_PICK_SLIP.CP_SO_LINE_NUMBER_p CP_SO_LINE_NUMBER
     , INV_MO_PICK_SLIP.CP_SO_DELIVERY_NAME_p CP_SO_DELIVERY_NAME
     , INV_MO_PICK_SLIP.CP_WO_ORDER_NUMBER_P CP_WO_ORDER_NUMBER
     , INV_MO_PICK_SLIP.CP_WO_OPERATION_SEQ_NUMBER_P CP_WO_OPERATION_SEQ_NUMBER
     , INV_MO_PICK_SLIP.CP_WO_WORK_CENTER_CODE_P CP_WO_WORK_CENTER_CODE
     , INV_MO_PICK_SLIP.CP_WO_WORK_AREA_CODE_P CP_WO_WORK_AREA_CODE

     , 2 TASK_STATUS_ID	--INV_PICK_SLIP_TASK_STATUS (1- UnAllocated, 2-Allocated, 3-Completed)
     , INV_MO_PICK_SLIP.cf_task_statusformula(2) CF_TASK_STATUS
     , MMTT.PROJECT_ID INV_PROJECT_ID
     , MMTT.TASK_ID INV_TASK_ID
     , INV_MO_PICK_SLIP.cf_project_numberformula(MMTT.PROJECT_ID) INV_PROJECT_NUMBER
     , INV_MO_PICK_SLIP.cf_task_numberformula(MMTT.TASK_ID, MMTT.PROJECT_ID) INV_TASK_NUMBER
	 ,lot.L_LOT_NUMBER
     ,lot.L_LOT_qty	
  FROM INV_MATERIAL_TXNS_TEMP MMTT
     , INV_TXN_REQUEST_HEADERS MTRH
     , INV_TXN_REQUEST_LINES MTRL
     , EGP_SYSTEM_ITEMS MSI
     , PER_USERS PER --FND_USER
	 , wie_work_orders_b wwob
	 , egp_system_items_b esi_assemb
	 ,(SELECT TRANSACTION_ID L_TRANSACTION_ID
            , LOT_NUMBER L_LOT_NUMBER
            , ABS(TRANSACTION_QUANTITY) L_LOT_QTY
            , SERIAL_TRANSACTION_ID LS_SER_TXN_ID
         FROM INV_TRANSACTION_LOT_NUMBERS
       UNION ALL
       SELECT TRANSACTION_TEMP_ID 
            , LOT_NUMBER
            , ABS(TRANSACTION_QUANTITY) 
            , SERIAL_TRANSACTION_TEMP_ID
         FROM INV_TRANSACTION_LOTS_TEMP) lot
 WHERE 1=1 -- MMTT.ORGANIZATION_ID            = :P_ORG_ID
   AND MTRL.LINE_ID                    = MMTT.MOVE_ORDER_LINE_ID
   AND MTRL.HEADER_ID                  = MTRH.HEADER_ID
   AND MSI.INVENTORY_ITEM_ID           = MMTT.INVENTORY_ITEM_ID
   AND MSI.ORGANIZATION_ID             = MMTT.ORGANIZATION_ID
   AND PER.USERNAME                    = MTRL.CREATED_BY     --FND.USER_ID
   AND NVL(MMTT.TRANSACTION_QUANTITY, 0) > 0
													--and MTRL.TO_SUBINVENTORY_CODE  =mmtt.SUBINVENTORY_CODE
   and MMTT.TRANSACTION_TEMP_ID=lot.L_TRANSACTION_ID(+)
      AND wwob.work_order_number = MTRL.reference_name
   AND wwob.organization_id = MTRH.organization_id
   AND esi_assemb.organization_id = wwob.organization_id
   AND esi_assemb.inventory_item_id = wwob.inventory_item_id
   AND NOT EXISTS (SELECT 1 FROM INV_MATERIAL_TXNS_TEMP WHERE PARENT_LINE_ID = MMTT.TRANSACTION_TEMP_ID)
   AND NVL(MMTT.PARENT_LINE_ID, MMTT.TRANSACTION_TEMP_ID) IN (SELECT NVL(MMTT.PARENT_LINE_ID, MMTT.TRANSACTION_TEMP_ID) 
                                                                FROM INV_MATERIAL_TXNS_TEMP MMTT
                                                                   , INV_TXN_REQUEST_LINES MTRL
                                                                   , INV_TXN_REQUEST_HEADERS MTRH 
                                                               WHERE MMTT.ORGANIZATION_ID =MMTT.ORGANIZATION_ID
                                                                 AND MTRL.LINE_ID = MMTT.MOVE_ORDER_LINE_ID
                                                                 AND MTRH.HEADER_ID = MTRL.HEADER_ID
                                                              )
 AND  MTRH.request_number in (:P_REQUEST_NUMBER)																
UNION ALL

SELECT  3 query
     , MTRL.PICK_SLIP_NUMBER
	 , esi_assemb.item_number ASSEMBLY_ITEM
	 , to_char(wwob.PLANNED_COMPLETION_DATE,'DD-MON-YY') COMPLETION_DATE
	 , TO_CHAR(wwob.PLANNED_start_DATE,'DD-MON-YY') JOB_DATE
	 , wwob.COMPLETED_QUANTITY JOB_QUANTITY
	 , MTRL.reference_name JOB_NAME
	 , mtrh.organization_id
     , MTRH.REQUEST_NUMBER MOVE_ORDER_NUMBER
     , MTRH.MOVE_ORDER_TYPE
     , MTRL.LINE_NUMBER
     , MTRL.LINE_ID
     , MTRL.TRANSACTION_SOURCE_TYPE_ID     
     , -99999 AS TRANSACTION_ID
     , TO_NUMBER(NULL) PARENT_LINE_ID
     
     , MTRL.INVENTORY_ITEM_ID
     , MSI.ITEM_NUMBER          --null C_ITEM_FLEXDAT
     , MSI.DESCRIPTION
     , MTRL.REVISION
     
     , MTRL.FROM_SUBINVENTORY_CODE FR_SUBINV
     , DECODE(MTRL.FROM_LOCATOR_ID, NULL, '', INV_PROJECT.GET_LOCSEGS(MTRL.FROM_LOCATOR_ID, mtrl.ORGANIZATION_ID )) FR_LOCATOR
     
     , MTRL.TO_SUBINVENTORY_CODE TO_SUBINV
     , DECODE(MTRL.TO_LOCATOR_ID, NULL, '', INV_PROJECT.GET_LOCSEGS(MTRL.TO_LOCATOR_ID, mtrl.ORGANIZATION_ID )) TO_LOCATOR
     
     , MTRL.PJC_PROJECT_ID  PROJECT_ID
     , MTRL.PJC_TASK_ID     TAKS_ID
     
     , DECODE(MTRL.TO_ACCOUNT_ID, '', '', null) C_TO_ACCOUNT_FLEXDAT
     , CASE WHEN MTRL.REQUESTER_ID IS NULL 
                 THEN PER.USERNAME 
            ELSE 
                 (SELECT GLOBAL_NAME FROM INV_EMPLOYEES_CURRENT_V WHERE PERSON_ID = MTRL.REQUESTER_ID AND ROWNUM<2)
       END AS REQUESTER 
     , MTRL.REFERENCE_NAME REFERENCE
     
     , MTRL.UOM_CODE TRANSACTION_UOM
	 , INV_MO_PICK_SLIP.get_uom_name(MTRL.UOM_CODE) UOM_NAME
     , ABS(NVL(MTRL.QUANTITY, 0) - NVL(MTRL.QUANTITY_DETAILED, 0)) TRANSACTION_QTY
     ,nVl(ABS(NVL(MTRL.QUANTITY, 0) - NVL(MTRL.QUANTITY_DETAILED, 0)),0) REQ_QTY
	 ,ABS(MTRL.QUANTITY)-NVL(ABS(NVL(MTRL.QUANTITY, 0) - NVL(MTRL.QUANTITY_DETAILED, 0)),0) SHORT_QTY
     , (SELECT DROPPING_ORDER FROM INV_SECONDARY_INVENTORIES WHERE SECONDARY_INVENTORY_NAME = MTRL.TO_SUBINVENTORY_CODE AND ORGANIZATION_ID = MTRL.ORGANIZATION_ID) SUB_DROPPING_ORDER
     , (SELECT DROPPING_ORDER FROM INV_ITEM_LOCATIONS WHERE INVENTORY_LOCATION_ID = MTRL.TO_LOCATOR_ID AND ORGANIZATION_ID = MTRL.ORGANIZATION_ID) LOC_DROPPING_ORDER
     
     , MTRL.SECONDARY_UOM_CODE SEC_UOM
	 , INV_MO_PICK_SLIP.get_uom_name(MTRL.SECONDARY_UOM_CODE) SEC_UOM_NAME	 
     , ABS(NVL(MTRL.SECONDARY_QUANTITY, 0) - NVL(MTRL.SECONDARY_QUANTITY_DETAILED, 0)) SEC_TRANSACTION_QTY
	 
	 , INV_MO_PICK_SLIP.cf_sec_uomformula(MTRL.INVENTORY_ITEM_ID, MTRL.SECONDARY_UOM_CODE) CF_SEC_UOM
	 , INV_MO_PICK_SLIP.cf_sec_qtyformula(MTRL.INVENTORY_ITEM_ID, ABS(NVL(MTRL.SECONDARY_QUANTITY, 0) - NVL(MTRL.SECONDARY_QUANTITY_DETAILED, 0))) CF_SEC_QTY
	
	 , INV_MO_PICK_SLIP.cf_project_numberformula(MTRL.PJC_PROJECT_ID) CF_PROJECT_NUMBER
	 , INV_MO_PICK_SLIP.cf_task_numberformula(MTRL.PJC_TASK_ID, MTRL.PJC_PROJECT_ID) CF_TASK_NUMBER
	
	 , INV_MO_PICK_SLIP.cf_so_infoformula(LINE_ID, MOVE_ORDER_TYPE) CF_SO_INFO
	 , INV_MO_PICK_SLIP.CP_SO_ORDER_NUMBER_p CP_SO_ORDER_NUMBER
	 , INV_MO_PICK_SLIP.CP_SO_LINE_NUMBER_p CP_SO_LINE_NUMBER
	 , INV_MO_PICK_SLIP.CP_SO_DELIVERY_NAME_p CP_SO_DELIVERY_NAME
         , INV_MO_PICK_SLIP.CP_WO_ORDER_NUMBER_P CP_WO_ORDER_NUMBER
         , INV_MO_PICK_SLIP.CP_WO_OPERATION_SEQ_NUMBER_P CP_WO_OPERATION_SEQ_NUMBER
         , INV_MO_PICK_SLIP.CP_WO_WORK_CENTER_CODE_P CP_WO_WORK_CENTER_CODE
         , INV_MO_PICK_SLIP.CP_WO_WORK_AREA_CODE_P CP_WO_WORK_AREA_CODE

	, 1 TASK_STATUS_ID	--INV_PICK_SLIP_TASK_STATUS (1- UnAllocated, 2-Allocated, 3-Completed)
	, INV_MO_PICK_SLIP.cf_task_statusformula(1) CF_TASK_STATUS
        , MTRL.PROJECT_ID INV_PROJECT_ID
        , MTRL.TASK_ID INV_TASK_ID
        , INV_MO_PICK_SLIP.cf_project_numberformula(MTRL.PROJECT_ID) INV_PROJECT_NUMBER
        , INV_MO_PICK_SLIP.cf_task_numberformula(MTRL.TASK_ID, MTRL.PROJECT_ID) INV_TASK_NUMBER
,lot.L_LOT_NUMBER
,lot.L_LOT_qty	
	FROM INV_TXN_REQUEST_HEADERS MTRH
     , INV_TXN_REQUEST_LINES MTRL
     , EGP_SYSTEM_ITEMS MSI
     , PER_USERS PER  --FND_USER
	 , wie_work_orders_b wwob
	 , egp_system_items_b esi_assemb
	 ,(SELECT TRANSACTION_ID L_TRANSACTION_ID
            , LOT_NUMBER L_LOT_NUMBER
            , ABS(TRANSACTION_QUANTITY) L_LOT_QTY
            , SERIAL_TRANSACTION_ID LS_SER_TXN_ID
         FROM INV_TRANSACTION_LOT_NUMBERS
       UNION ALL
       SELECT TRANSACTION_TEMP_ID 
            , LOT_NUMBER
            , ABS(TRANSACTION_QUANTITY) 
            , SERIAL_TRANSACTION_TEMP_ID
         FROM INV_TRANSACTION_LOTS_TEMP) lot
 WHERE 1=1 --MTRL.ORGANIZATION_ID            = :P_ORG_ID
   AND MTRL.HEADER_ID                  = MTRH.HEADER_ID
   AND MSI.INVENTORY_ITEM_ID           = MTRL.INVENTORY_ITEM_ID
   AND MSI.ORGANIZATION_ID             = MTRL.ORGANIZATION_ID
   AND PER.USERNAME                    = MTRL.CREATED_BY   --FND.USER_ID
   AND NVL(MTRL.QUANTITY, 0) > NVL(MTRL.QUANTITY_DETAILED, 0)
   and -99999 =lot.L_TRANSACTION_ID(+)
  -- AND MTRL.LINE_STATUS IN (3, 7)
   AND  MTRH.request_number in (:P_REQUEST_NUMBER)
         AND wwob.work_order_number = MTRL.reference_name
   AND wwob.organization_id = MTRH.organization_id
   AND esi_assemb.organization_id = wwob.organization_id
   AND esi_assemb.inventory_item_id = wwob.inventory_item_id
 ORDER BY 1, 8, 29, 30, 27, 28, 2, 3, 4, 5, 6, 7, 9, 31, 11, 12, 13, 14, 15, 16, 17, 18, 32, 20, 21, 22, 23
 --21--
 select * from INV_TXN_REQUEST_LINES where header_id in (  select header_id from INV_TXN_REQUEST_HEADERS MTRH where MTRH.request_number in (:P_REQUEST_NUMBER)	)
 --23--
 SELECT * FROM wie_work_orders_b WHERE  work_order_number ='OOH1014'
 --RFR--
 SELECT * FROM INV_MATERIAL_TXNS_TEMP
 --------------------------------------AVTEC Move Order PickSlip DM-----------------
 --Move_Order_PickSlip--
 SELECT 1 query
     , MMT.PICK_SLIP_NUMBER
     , esi_assemb.item_number ASSEMBLY_ITEM
	 , to_char(wwob.PLANNED_COMPLETION_DATE,'DD-MON-YY') COMPLETION_DATE
	 , TO_CHAR(wwob.PLANNED_start_DATE,'DD-MON-YY') JOB_DATE
	 , wwob.COMPLETED_QUANTITY JOB_QUANTITY
	 , MTRL.reference_name JOB_NAME
	 , mtrh.organization_id
     , MTRH.REQUEST_NUMBER MOVE_ORDER_NUMBER
     , MTRH.MOVE_ORDER_TYPE
     , MTRL.LINE_NUMBER
     , MTRL.LINE_ID
     , MTRL.TRANSACTION_SOURCE_TYPE_ID
     , MMT.TRANSACTION_ID
     , TO_NUMBER(NULL) PARENT_LINE_ID
     
     , MMT.INVENTORY_ITEM_ID
     , MSI.ITEM_NUMBER            --null C_ITEM_FLEXDAT
     , MSI.DESCRIPTION ITEM_DESCRIPTION
     , MMT.REVISION
     
     , MMT.SUBINVENTORY_CODE FR_SUBINV
     , DECODE(MMT.LOCATOR_ID, NULL, '', INV_PROJECT.GET_LOCSEGS(MMT.LOCATOR_ID, MMT.ORGANIZATION_ID )) SOURCE_LOCATOR
     
     , MMT.TRANSFER_SUBINVENTORY TO_SUBINV
     , DECODE(MMT.TRANSFER_LOCATOR_ID, NULL, '', INV_PROJECT.GET_LOCSEGS(MMT.TRANSFER_LOCATOR_ID, MMT.ORGANIZATION_ID )) TO_LOCATOR
     
     , MTRL.PJC_PROJECT_ID PROJECT_ID
     , MTRL.PJC_TASK_ID    TASK_ID
     
     , DECODE(MMT.DISTRIBUTION_ACCOUNT_ID, '', '', null) C_TO_ACCOUNT_FLEXDAT
     , CASE WHEN MTRL.REQUESTER_ID IS NULL 
                 THEN PER.USERNAME 
            ELSE 
                 (SELECT GLOBAL_NAME FROM INV_EMPLOYEES_CURRENT_V WHERE PERSON_ID = MTRL.REQUESTER_ID AND ROWNUM<2)
       END AS REQUESTER 
     , MMT.TRANSACTION_REFERENCE REFERENCE
     
     , MMT.TRANSACTION_UOM TRANSACTION_UOM
     , INV_MO_PICK_SLIP.get_uom_name(MMT.TRANSACTION_UOM) UOM_NAME	 	 	 	 
     , ABS(MMT.TRANSACTION_QUANTITY) TRANSACTION_QTY
	 ,NVL(MTRL.QUANTITY_DELIVERED,0) REQ_QTY
	 ,ABS(MMT.TRANSACTION_QUANTITY)-NVL(MTRL.QUANTITY_DELIVERED,0) SHORT_QTY
     , (SELECT DROPPING_ORDER FROM INV_SECONDARY_INVENTORIES WHERE SECONDARY_INVENTORY_NAME = MMT.TRANSFER_SUBINVENTORY AND ORGANIZATION_ID = MMT.ORGANIZATION_ID) SUB_DROPPING_ORDER
     , (SELECT DROPPING_ORDER FROM INV_ITEM_LOCATIONS WHERE INVENTORY_LOCATION_ID = MMT.TRANSFER_LOCATOR_ID AND ORGANIZATION_ID = MMT.ORGANIZATION_ID) LOC_DROPPING_ORDER
     
     , MMT.SECONDARY_UOM_CODE SEC_UOM
	 , INV_MO_PICK_SLIP.get_uom_name(MMT.SECONDARY_UOM_CODE) SEC_UOM_NAME	 	 	 
     , ABS(MMT.SECONDARY_TRANSACTION_QUANTITY) SEC_TRANSACTION_QTY

     , INV_MO_PICK_SLIP.cf_sec_uomformula(MMT.INVENTORY_ITEM_ID, MMT.SECONDARY_UOM_CODE) CF_SEC_UOM
     , INV_MO_PICK_SLIP.cf_sec_qtyformula(MMT.INVENTORY_ITEM_ID, ABS(MMT.SECONDARY_TRANSACTION_QUANTITY)) CF_SEC_QTY
		
     , INV_MO_PICK_SLIP.cf_project_numberformula(MTRL.PJC_PROJECT_ID) CF_PROJECT_NUMBER
     , INV_MO_PICK_SLIP.cf_task_numberformula(MTRL.PJC_TASK_ID,MTRL.PJC_PROJECT_ID) CF_TASK_NUMBER
	
     , INV_MO_PICK_SLIP.cf_so_infoformula(LINE_ID, MOVE_ORDER_TYPE) CF_SO_INFO
     , INV_MO_PICK_SLIP.CP_SO_ORDER_NUMBER_p CP_SO_ORDER_NUMBER
     , INV_MO_PICK_SLIP.CP_SO_LINE_NUMBER_p CP_SO_LINE_NUMBER
     , INV_MO_PICK_SLIP.CP_SO_DELIVERY_NAME_p CP_SO_DELIVERY_NAME
     , INV_MO_PICK_SLIP.CP_WO_ORDER_NUMBER_P CP_WO_ORDER_NUMBER
     , INV_MO_PICK_SLIP.CP_WO_OPERATION_SEQ_NUMBER_P CP_WO_OPERATION_SEQ_NUMBER
     , INV_MO_PICK_SLIP.CP_WO_WORK_CENTER_CODE_P CP_WO_WORK_CENTER_CODE
     , INV_MO_PICK_SLIP.CP_WO_WORK_AREA_CODE_P CP_WO_WORK_AREA_CODE
	 
     , 3 TASK_STATUS_ID	--INV_PICK_SLIP_TASK_STATUS (1- UnAllocated, 2-Allocated, 3-Completed)
     , INV_MO_PICK_SLIP.cf_task_statusformula(3) CF_TASK_STATUS
     , MMT.PROJECT_ID INV_PROJECT_ID
     , MMT.TASK_ID INV_TASK_ID
     , INV_MO_PICK_SLIP.cf_project_numberformula(MMT.PROJECT_ID) INV_PROJECT_NUMBER
     , INV_MO_PICK_SLIP.cf_task_numberformula(MMT.TASK_ID, MMT.PROJECT_ID) INV_TASK_NUMBER 
,lot.L_LOT_NUMBER
,lot.L_LOT_qty	 
	 
  FROM INV_MATERIAL_TXNS MMT   --MTL_MATERIAL_TRANSACTIONS
     , INV_TXN_REQUEST_HEADERS MTRH
     , INV_TXN_REQUEST_LINES MTRL
     , EGP_SYSTEM_ITEMS MSI
     , PER_USERS PER  --FND_USER
	 , wie_work_orders_b wwob
	 , egp_system_items_b esi_assemb
	 ,(SELECT TRANSACTION_ID L_TRANSACTION_ID
            , LOT_NUMBER L_LOT_NUMBER
            , ABS(TRANSACTION_QUANTITY) L_LOT_QTY
            , SERIAL_TRANSACTION_ID LS_SER_TXN_ID
         FROM INV_TRANSACTION_LOT_NUMBERS
       UNION ALL
       SELECT TRANSACTION_TEMP_ID 
            , LOT_NUMBER
            , ABS(TRANSACTION_QUANTITY) 
            , SERIAL_TRANSACTION_TEMP_ID
         FROM INV_TRANSACTION_LOTS_TEMP) lot
 WHERE  1=1 --MMT.ORGANIZATION_ID             = :P_ORG_ID
   AND MMT.MOVE_ORDER_LINE_ID          = MTRL.LINE_ID
   AND MTRL.HEADER_ID                  = MTRH.HEADER_ID
   AND MSI.ORGANIZATION_ID             = MMT.ORGANIZATION_ID
   AND MSI.INVENTORY_ITEM_ID           = MMT.INVENTORY_ITEM_ID
   AND PER.USERNAME                    = MTRL.CREATED_BY
   AND NVL(MMT.TRANSACTION_QUANTITY, 0) < 0
   AND  MTRH.request_number in (:P_REQUEST_NUMBER)
   AND wwob.work_order_number = MTRL.reference_name
   AND wwob.organization_id = MTRH.organization_id
   AND esi_assemb.organization_id = wwob.organization_id
   AND esi_assemb.inventory_item_id = wwob.inventory_item_id
   and MMT.TRANSACTION_ID=lot.L_TRANSACTION_ID(+)
UNION ALL

SELECT  2 query
     , (SELECT PICK_SLIP_NUMBER FROM INV_MATERIAL_TXNS_TEMP WHERE TRANSACTION_TEMP_ID = NVL(MMTT.PARENT_LINE_ID, MMTT.TRANSACTION_TEMP_ID) )PICK_SLIP_NUMBER
     , esi_assemb.item_number ASSEMBLY_ITEM
	 , to_char(wwob.PLANNED_COMPLETION_DATE,'DD-MON-YY') COMPLETION_DATE
	 , TO_CHAR(wwob.PLANNED_start_DATE,'DD-MON-YY') JOB_DATE
	 , wwob.COMPLETED_QUANTITY JOB_QUANTITY
	 , MTRL.reference_name JOB_NAME
	 , mtrh.organization_id
     , MTRH.REQUEST_NUMBER MOVE_ORDER_NUMBER
     , MTRH.MOVE_ORDER_TYPE
     , MTRL.LINE_NUMBER
     , MTRL.LINE_ID
     , MTRL.TRANSACTION_SOURCE_TYPE_ID
     , MMTT.TRANSACTION_TEMP_ID TRANSACTION_ID
     , MMTT.PARENT_LINE_ID
     
     , MMTT.INVENTORY_ITEM_ID
     , MSI.ITEM_NUMBER                --null C_ITEM_FLEXDAT
     , MSI.DESCRIPTION ITEM_DESCRIPTION
     , MMTT.REVISION
     
     , MMTT.SUBINVENTORY_CODE FR_SUBINV
     , DECODE(MMTT.LOCATOR_ID, NULL, '', INV_PROJECT.GET_LOCSEGS(MMTT.LOCATOR_ID, MMTT.ORGANIZATION_ID )) FR_LOCATOR
     
     , MMTT.TRANSFER_SUBINVENTORY TO_SUBINV
     , DECODE(MMTT.TRANSFER_TO_LOCATION, NULL, '', INV_PROJECT.GET_LOCSEGS(MMTT.TRANSFER_TO_LOCATION, MMTT.ORGANIZATION_ID )) TO_LOCATOR
     
     , MTRL.PJC_PROJECT_ID  PROJECT_ID
     , MTRL.PJC_TASK_ID     TAKS_ID
     
     , DECODE(MMTT.DISTRIBUTION_ACCOUNT_ID, '', '', null) C_TO_ACCOUNT_FLEXDAT
     , CASE WHEN MTRL.REQUESTER_ID IS NULL 
                 THEN PER.USERNAME 
            ELSE 
                 (SELECT GLOBAL_NAME FROM INV_EMPLOYEES_CURRENT_V WHERE PERSON_ID = MTRL.REQUESTER_ID AND ROWNUM<2)
       END AS REQUESTER 
     , MMTT.TRANSACTION_REFERENCE REFERENCE
     
     , MMTT.TRANSACTION_UOM TRANSACTION_UOM
     , INV_MO_PICK_SLIP.get_uom_name(MMTT.TRANSACTION_UOM) UOM_NAME	 	 	 
     , ABS(MMTT.TRANSACTION_QUANTITY) TRANSACTION_QTY
	 	 ,nVl(MMTT.PRIMARY_QUANTITY,0) REQ_QTY
	 ,ABS(MMTT.TRANSACTION_QUANTITY)-nVl(MMTT.PRIMARY_QUANTITY,0) SHORT_QTY
     
     , (SELECT DROPPING_ORDER FROM INV_SECONDARY_INVENTORIES WHERE SECONDARY_INVENTORY_NAME = MMTT.TRANSFER_SUBINVENTORY AND ORGANIZATION_ID = MMTT.ORGANIZATION_ID) SUB_DROPPING_ORDER
     , (SELECT DROPPING_ORDER FROM INV_ITEM_LOCATIONS WHERE INVENTORY_LOCATION_ID = MMTT.TRANSFER_TO_LOCATION AND ORGANIZATION_ID = MMTT.ORGANIZATION_ID) LOC_DROPPING_ORDER
     
     , MMTT.SECONDARY_UOM_CODE SEC_UOM
	 , INV_MO_PICK_SLIP.get_uom_name(MMTT.SECONDARY_UOM_CODE) SEC_UOM_NAME	 	 
     , ABS(MMTT.SECONDARY_TRANSACTION_QUANTITY) SEC_TRANSACTION_QTY
          
     
     , INV_MO_PICK_SLIP.cf_sec_uomformula(MMTT.INVENTORY_ITEM_ID, MMTT.SECONDARY_UOM_CODE) CF_SEC_UOM
     , INV_MO_PICK_SLIP.cf_sec_qtyformula(MMTT.INVENTORY_ITEM_ID, ABS(MMTT.SECONDARY_TRANSACTION_QUANTITY)) CF_SEC_QTY
	
     , INV_MO_PICK_SLIP.cf_project_numberformula(MTRL.PJC_PROJECT_ID) CF_PROJECT_NUMBER
     , INV_MO_PICK_SLIP.cf_task_numberformula(MTRL.PJC_TASK_ID, MTRL.PJC_PROJECT_ID) CF_TASK_NUMBER
	
     , INV_MO_PICK_SLIP.cf_so_infoformula(MTRL.LINE_ID, MTRH.MOVE_ORDER_TYPE) CF_SO_INFO
     , INV_MO_PICK_SLIP.CP_SO_ORDER_NUMBER_p CP_SO_ORDER_NUMBER
     , INV_MO_PICK_SLIP.CP_SO_LINE_NUMBER_p CP_SO_LINE_NUMBER
     , INV_MO_PICK_SLIP.CP_SO_DELIVERY_NAME_p CP_SO_DELIVERY_NAME
     , INV_MO_PICK_SLIP.CP_WO_ORDER_NUMBER_P CP_WO_ORDER_NUMBER
     , INV_MO_PICK_SLIP.CP_WO_OPERATION_SEQ_NUMBER_P CP_WO_OPERATION_SEQ_NUMBER
     , INV_MO_PICK_SLIP.CP_WO_WORK_CENTER_CODE_P CP_WO_WORK_CENTER_CODE
     , INV_MO_PICK_SLIP.CP_WO_WORK_AREA_CODE_P CP_WO_WORK_AREA_CODE

     , 2 TASK_STATUS_ID	--INV_PICK_SLIP_TASK_STATUS (1- UnAllocated, 2-Allocated, 3-Completed)
     , INV_MO_PICK_SLIP.cf_task_statusformula(2) CF_TASK_STATUS
     , MMTT.PROJECT_ID INV_PROJECT_ID
     , MMTT.TASK_ID INV_TASK_ID
     , INV_MO_PICK_SLIP.cf_project_numberformula(MMTT.PROJECT_ID) INV_PROJECT_NUMBER
     , INV_MO_PICK_SLIP.cf_task_numberformula(MMTT.TASK_ID, MMTT.PROJECT_ID) INV_TASK_NUMBER
	 ,lot.L_LOT_NUMBER
     ,lot.L_LOT_qty	
  FROM INV_MATERIAL_TXNS_TEMP MMTT
     , INV_TXN_REQUEST_HEADERS MTRH
     , INV_TXN_REQUEST_LINES MTRL
     , EGP_SYSTEM_ITEMS MSI
     , PER_USERS PER --FND_USER
	 , wie_work_orders_b wwob
	 , egp_system_items_b esi_assemb
	 ,(SELECT TRANSACTION_ID L_TRANSACTION_ID
            , LOT_NUMBER L_LOT_NUMBER
            , ABS(TRANSACTION_QUANTITY) L_LOT_QTY
            , SERIAL_TRANSACTION_ID LS_SER_TXN_ID
         FROM INV_TRANSACTION_LOT_NUMBERS
       UNION ALL
       SELECT TRANSACTION_TEMP_ID 
            , LOT_NUMBER
            , ABS(TRANSACTION_QUANTITY) 
            , SERIAL_TRANSACTION_TEMP_ID
         FROM INV_TRANSACTION_LOTS_TEMP) lot
 WHERE 1=1 -- MMTT.ORGANIZATION_ID            = :P_ORG_ID
   AND MTRL.LINE_ID                    = MMTT.MOVE_ORDER_LINE_ID
   AND MTRL.HEADER_ID                  = MTRH.HEADER_ID
   AND MSI.INVENTORY_ITEM_ID           = MMTT.INVENTORY_ITEM_ID
   AND MSI.ORGANIZATION_ID             = MMTT.ORGANIZATION_ID
   AND PER.USERNAME                    = MTRL.CREATED_BY     --FND.USER_ID
   AND NVL(MMTT.TRANSACTION_QUANTITY, 0) > 0
													--and MTRL.TO_SUBINVENTORY_CODE  =mmtt.SUBINVENTORY_CODE
   and MMTT.TRANSACTION_TEMP_ID=lot.L_TRANSACTION_ID(+)
      AND wwob.work_order_number = MTRL.reference_name
   AND wwob.organization_id = MTRH.organization_id
   AND esi_assemb.organization_id = wwob.organization_id
   AND esi_assemb.inventory_item_id = wwob.inventory_item_id
   AND NOT EXISTS (SELECT 1 FROM INV_MATERIAL_TXNS_TEMP WHERE PARENT_LINE_ID = MMTT.TRANSACTION_TEMP_ID)
   AND NVL(MMTT.PARENT_LINE_ID, MMTT.TRANSACTION_TEMP_ID) IN (SELECT NVL(MMTT.PARENT_LINE_ID, MMTT.TRANSACTION_TEMP_ID) 
                                                                FROM INV_MATERIAL_TXNS_TEMP MMTT
                                                                   , INV_TXN_REQUEST_LINES MTRL
                                                                   , INV_TXN_REQUEST_HEADERS MTRH 
                                                               WHERE MMTT.ORGANIZATION_ID =MMTT.ORGANIZATION_ID
                                                                 AND MTRL.LINE_ID = MMTT.MOVE_ORDER_LINE_ID
                                                                 AND MTRH.HEADER_ID = MTRL.HEADER_ID
                                                              )
 AND  MTRH.request_number in (:P_REQUEST_NUMBER)																
UNION ALL

SELECT  3 query
     , MTRL.PICK_SLIP_NUMBER
	 , esi_assemb.item_number ASSEMBLY_ITEM
	 , to_char(wwob.PLANNED_COMPLETION_DATE,'DD-MON-YY') COMPLETION_DATE
	 , TO_CHAR(wwob.PLANNED_start_DATE,'DD-MON-YY') JOB_DATE
	 , wwob.COMPLETED_QUANTITY JOB_QUANTITY
	 , MTRL.reference_name JOB_NAME
	 , mtrh.organization_id
     , MTRH.REQUEST_NUMBER MOVE_ORDER_NUMBER
     , MTRH.MOVE_ORDER_TYPE
     , MTRL.LINE_NUMBER
     , MTRL.LINE_ID
     , MTRL.TRANSACTION_SOURCE_TYPE_ID     
     , -99999 AS TRANSACTION_ID
     , TO_NUMBER(NULL) PARENT_LINE_ID
     
     , MTRL.INVENTORY_ITEM_ID
     , MSI.ITEM_NUMBER          --null C_ITEM_FLEXDAT
     , MSI.DESCRIPTION
     , MTRL.REVISION
     
     , MTRL.FROM_SUBINVENTORY_CODE FR_SUBINV
     , DECODE(MTRL.FROM_LOCATOR_ID, NULL, '', INV_PROJECT.GET_LOCSEGS(MTRL.FROM_LOCATOR_ID, mtrl.ORGANIZATION_ID )) FR_LOCATOR
     
     , MTRL.TO_SUBINVENTORY_CODE TO_SUBINV
     , DECODE(MTRL.TO_LOCATOR_ID, NULL, '', INV_PROJECT.GET_LOCSEGS(MTRL.TO_LOCATOR_ID, mtrl.ORGANIZATION_ID )) TO_LOCATOR
     
     , MTRL.PJC_PROJECT_ID  PROJECT_ID
     , MTRL.PJC_TASK_ID     TAKS_ID
     
     , DECODE(MTRL.TO_ACCOUNT_ID, '', '', null) C_TO_ACCOUNT_FLEXDAT
     , CASE WHEN MTRL.REQUESTER_ID IS NULL 
                 THEN PER.USERNAME 
            ELSE 
                 (SELECT GLOBAL_NAME FROM INV_EMPLOYEES_CURRENT_V WHERE PERSON_ID = MTRL.REQUESTER_ID AND ROWNUM<2)
       END AS REQUESTER 
     , MTRL.REFERENCE_NAME REFERENCE
     
     , MTRL.UOM_CODE TRANSACTION_UOM
	 , INV_MO_PICK_SLIP.get_uom_name(MTRL.UOM_CODE) UOM_NAME
     , ABS(NVL(MTRL.QUANTITY, 0) - NVL(MTRL.QUANTITY_DETAILED, 0)) TRANSACTION_QTY
     ,nVl(ABS(NVL(MTRL.QUANTITY, 0) - NVL(MTRL.QUANTITY_DETAILED, 0)),0) REQ_QTY
	 ,ABS(MTRL.QUANTITY)-NVL(ABS(NVL(MTRL.QUANTITY, 0) - NVL(MTRL.QUANTITY_DETAILED, 0)),0) SHORT_QTY
     , (SELECT DROPPING_ORDER FROM INV_SECONDARY_INVENTORIES WHERE SECONDARY_INVENTORY_NAME = MTRL.TO_SUBINVENTORY_CODE AND ORGANIZATION_ID = MTRL.ORGANIZATION_ID) SUB_DROPPING_ORDER
     , (SELECT DROPPING_ORDER FROM INV_ITEM_LOCATIONS WHERE INVENTORY_LOCATION_ID = MTRL.TO_LOCATOR_ID AND ORGANIZATION_ID = MTRL.ORGANIZATION_ID) LOC_DROPPING_ORDER
     
     , MTRL.SECONDARY_UOM_CODE SEC_UOM
	 , INV_MO_PICK_SLIP.get_uom_name(MTRL.SECONDARY_UOM_CODE) SEC_UOM_NAME	 
     , ABS(NVL(MTRL.SECONDARY_QUANTITY, 0) - NVL(MTRL.SECONDARY_QUANTITY_DETAILED, 0)) SEC_TRANSACTION_QTY
	 
	 , INV_MO_PICK_SLIP.cf_sec_uomformula(MTRL.INVENTORY_ITEM_ID, MTRL.SECONDARY_UOM_CODE) CF_SEC_UOM
	 , INV_MO_PICK_SLIP.cf_sec_qtyformula(MTRL.INVENTORY_ITEM_ID, ABS(NVL(MTRL.SECONDARY_QUANTITY, 0) - NVL(MTRL.SECONDARY_QUANTITY_DETAILED, 0))) CF_SEC_QTY
	
	 , INV_MO_PICK_SLIP.cf_project_numberformula(MTRL.PJC_PROJECT_ID) CF_PROJECT_NUMBER
	 , INV_MO_PICK_SLIP.cf_task_numberformula(MTRL.PJC_TASK_ID, MTRL.PJC_PROJECT_ID) CF_TASK_NUMBER
	
	 , INV_MO_PICK_SLIP.cf_so_infoformula(LINE_ID, MOVE_ORDER_TYPE) CF_SO_INFO
	 , INV_MO_PICK_SLIP.CP_SO_ORDER_NUMBER_p CP_SO_ORDER_NUMBER
	 , INV_MO_PICK_SLIP.CP_SO_LINE_NUMBER_p CP_SO_LINE_NUMBER
	 , INV_MO_PICK_SLIP.CP_SO_DELIVERY_NAME_p CP_SO_DELIVERY_NAME
         , INV_MO_PICK_SLIP.CP_WO_ORDER_NUMBER_P CP_WO_ORDER_NUMBER
         , INV_MO_PICK_SLIP.CP_WO_OPERATION_SEQ_NUMBER_P CP_WO_OPERATION_SEQ_NUMBER
         , INV_MO_PICK_SLIP.CP_WO_WORK_CENTER_CODE_P CP_WO_WORK_CENTER_CODE
         , INV_MO_PICK_SLIP.CP_WO_WORK_AREA_CODE_P CP_WO_WORK_AREA_CODE

	, 1 TASK_STATUS_ID	--INV_PICK_SLIP_TASK_STATUS (1- UnAllocated, 2-Allocated, 3-Completed)
	, INV_MO_PICK_SLIP.cf_task_statusformula(1) CF_TASK_STATUS
        , MTRL.PROJECT_ID INV_PROJECT_ID
        , MTRL.TASK_ID INV_TASK_ID
        , INV_MO_PICK_SLIP.cf_project_numberformula(MTRL.PROJECT_ID) INV_PROJECT_NUMBER
        , INV_MO_PICK_SLIP.cf_task_numberformula(MTRL.TASK_ID, MTRL.PROJECT_ID) INV_TASK_NUMBER
,lot.L_LOT_NUMBER
,lot.L_LOT_qty	
	FROM INV_TXN_REQUEST_HEADERS MTRH
     , INV_TXN_REQUEST_LINES MTRL
     , EGP_SYSTEM_ITEMS MSI
     , PER_USERS PER  --FND_USER
	 , wie_work_orders_b wwob
	 , egp_system_items_b esi_assemb
	 ,(SELECT TRANSACTION_ID L_TRANSACTION_ID
            , LOT_NUMBER L_LOT_NUMBER
            , ABS(TRANSACTION_QUANTITY) L_LOT_QTY
            , SERIAL_TRANSACTION_ID LS_SER_TXN_ID
         FROM INV_TRANSACTION_LOT_NUMBERS
       UNION ALL
       SELECT TRANSACTION_TEMP_ID 
            , LOT_NUMBER
            , ABS(TRANSACTION_QUANTITY) 
            , SERIAL_TRANSACTION_TEMP_ID
         FROM INV_TRANSACTION_LOTS_TEMP) lot
 WHERE 1=1 --MTRL.ORGANIZATION_ID            = :P_ORG_ID
   AND MTRL.HEADER_ID                  = MTRH.HEADER_ID
   AND MSI.INVENTORY_ITEM_ID           = MTRL.INVENTORY_ITEM_ID
   AND MSI.ORGANIZATION_ID             = MTRL.ORGANIZATION_ID
   AND PER.USERNAME                    = MTRL.CREATED_BY   --FND.USER_ID
   AND NVL(MTRL.QUANTITY, 0) > NVL(MTRL.QUANTITY_DETAILED, 0)
   and -99999 =lot.L_TRANSACTION_ID(+)
  -- AND MTRL.LINE_STATUS IN (3, 7)
   AND  MTRH.request_number in (:P_REQUEST_NUMBER)
         AND wwob.work_order_number = MTRL.reference_name
   AND wwob.organization_id = MTRH.organization_id
   AND esi_assemb.organization_id = wwob.organization_id
   AND esi_assemb.inventory_item_id = wwob.inventory_item_id
 ORDER BY 1, 8, 29, 30, 27, 28, 2, 3, 4, 5, 6, 7, 9, 31, 11, 12, 13, 14, 15, 16, 17, 18, 32, 20, 21, 22, 23
 --21--
 select * from INV_TXN_REQUEST_LINES where header_id in (  select header_id from INV_TXN_REQUEST_HEADERS MTRH where MTRH.request_number in (:P_REQUEST_NUMBER)	)
 --23--
 SELECT * FROM wie_work_orders_b WHERE  work_order_number ='OOH1014'
 --RFR--
 SELECT * FROM INV_MATERIAL_TXNS_TEMP
 -------------------------------------------AVTEC OSP Delivery Challan DM----------------------
 --DC--
 SELECT xep.name legal_entity_name,
         hl.address_line_1,
         hl.address_line_2,
         hl.town_or_city city,
         hl.region_2 state,
         hl.postal_code,
         NULL tel,
         NULL phone,
         'www.avtec.in' web,
         NULL tin_no,
         NULL cin,
         NULL gstn,
         NULL pan,
         NULL eway_bill_number,
         NULL eway_bill_date,
         NULL eway_bill_value,
         NULL vehicle_no,
         psv.vendor_name,
         hzl.address1 vendor_address1,
         hzl.address2 vendor_address2,
         hzl.city vendor_city,
         hzl.state vendor_state,
         hzl.postal_code vendor_postal_code,
         ph.segment1 po_number,
         pl.line_num po_line_number,
         esi_o.item_number osp_item,
         pl.quantity osp_item_qty,
         pl.unit_price osp_price,
         wnd.delivery_name dispatch_note_no,
         zr.registration_number supplier_gstn,
         NULL supplier_pan,
         NULL nature_of_processing,
         esi_r.item_number rm_item,
         esi_r.description rm_desc,
         wwoap.quantity * wwom.quantity_per_product rm_qty,
         NULL hsn,
         iumt.unit_of_measure rm_uom,
         NULL rm_price,
         NULL rm_value,
         NULL cgst_rate,
         NULL cgst,
         NULL sgst_rate,
         NULL sgst,
         NULL igst_rate,
         NULL igst,
         NULL total_value,
         TO_CHAR (wnd.confirm_date,
                  'DD-Mon-RRRR',
                  'NLS_DATE_LANGUAGE = AMERICAN')
            shipment_date,
         wwob.work_order_number,
         esi_a.item_number assembly_item
    FROM wie_wo_osp_action_details wwoap,
         inv_org_parameters iop,
         xle_entity_profiles xep,
         hr_organization_units hou,
         hr_locations hl,
         po_lines_all pl,
         po_headers_all ph,
         poz_suppliers_v psv,
         poz_supplier_sites_all_m pssm,
         hz_locations hzl,
         egp_system_items_b esi_o,
         wsh_new_deliveries wnd,
         zx_party_tax_profile zptp,
         zx_registrations zr,
         wie_wo_operation_materials wwom,
         egp_system_items_vl esi_r,
         inv_units_of_measure_b iumb,
         inv_units_of_measure_tl iumt,
         wie_wo_operations_b wwop,
         wie_work_orders_b wwob,
         egp_system_items_vl esi_a
   WHERE     1 = 1
         AND esi_a.inventory_item_id = wwob.inventory_item_id
         AND esi_a.organization_id = iop.organization_id
         AND wwob.work_order_id = wwop.work_order_id
         AND wwop.wo_operation_id = wwoap.wo_operation_id
         AND iumt.unit_of_measure_id = iumb.unit_of_measure_id
         AND iumb.uom_code = wwom.uom_code
         AND esi_r.inventory_item_id = wwom.inventory_item_id
         AND esi_r.organization_id = iop.organization_id
         AND wwom.wo_operation_id = wwoap.wo_operation_id
         AND zr.party_tax_profile_id(+) = zptp.party_tax_profile_id
         AND UPPER (zr.tax_regime_code(+)) LIKE '%GST%'
         AND (zr.effective_to IS NULL OR zr.effective_to > TRUNC (SYSDATE))
         AND zptp.party_id(+) = pssm.party_site_id
         AND zptp.supplier_flag(+) = 'Y'
         AND zptp.site_flag(+) = 'Y'
         AND TO_CHAR (wnd.delivery_id) = wwoap.doc_ref1
         AND esi_o.inventory_item_id = pl.item_id
         AND esi_o.organization_id = iop.organization_id
         AND hzl.location_id = pssm.location_id
         AND pssm.vendor_site_id = ph.vendor_site_id
         AND psv.vendor_id = ph.vendor_id
         AND ph.po_header_id = pl.po_header_id
         AND TO_CHAR (pl.po_line_id) = wwoap.doc_ref3
         AND hl.location_id = hou.location_id
         AND hou.organization_id = iop.organization_id
         AND xep.legal_entity_id = iop.legal_entity_id
         AND iop.organization_id = wwoap.organization_id
         AND wwoap.status = 'CONFIRMED'
         AND wwoap.document_type = 'SHIPMENT'
         AND wwoap.wo_osp_action_detail_id = 18003
ORDER BY wwom.material_seq_number
------------------------------AVTEC Pick Tag for In-Transit shipment DM-------------------------------------
--Move_Order_PickSlip--
SELECT 1 query
     , MMT.PICK_SLIP_NUMBER
     , esi_assemb.item_number ASSEMBLY_ITEM
	 , to_char(wwob.PLANNED_COMPLETION_DATE,'DD-MON-YY') COMPLETION_DATE
	 , TO_CHAR(wwob.PLANNED_start_DATE,'DD-MON-YY') JOB_DATE
	 , wwob.COMPLETED_QUANTITY JOB_QUANTITY
	 , MTRL.reference_name JOB_NAME
	 , mtrh.organization_id
     , MTRH.REQUEST_NUMBER MOVE_ORDER_NUMBER
     , MTRH.MOVE_ORDER_TYPE
     , MTRL.LINE_NUMBER
     , MTRL.LINE_ID
     , MTRL.TRANSACTION_SOURCE_TYPE_ID
     , MMT.TRANSACTION_ID
     , TO_NUMBER(NULL) PARENT_LINE_ID
     
     , MMT.INVENTORY_ITEM_ID
     , MSI.ITEM_NUMBER            --null C_ITEM_FLEXDAT
     , MSI.DESCRIPTION ITEM_DESCRIPTION
     , MMT.REVISION
     
     , MMT.SUBINVENTORY_CODE FR_SUBINV
     , DECODE(MMT.LOCATOR_ID, NULL, '', INV_PROJECT.GET_LOCSEGS(MMT.LOCATOR_ID, MMT.ORGANIZATION_ID )) SOURCE_LOCATOR
     
     , MMT.TRANSFER_SUBINVENTORY TO_SUBINV
     , DECODE(MMT.TRANSFER_LOCATOR_ID, NULL, '', INV_PROJECT.GET_LOCSEGS(MMT.TRANSFER_LOCATOR_ID, MMT.ORGANIZATION_ID )) TO_LOCATOR
     
     , MTRL.PJC_PROJECT_ID PROJECT_ID
     , MTRL.PJC_TASK_ID    TASK_ID
     
     , DECODE(MMT.DISTRIBUTION_ACCOUNT_ID, '', '', null) C_TO_ACCOUNT_FLEXDAT
     , CASE WHEN MTRL.REQUESTER_ID IS NULL 
                 THEN PER.USERNAME 
            ELSE 
                 (SELECT GLOBAL_NAME FROM INV_EMPLOYEES_CURRENT_V WHERE PERSON_ID = MTRL.REQUESTER_ID AND ROWNUM<2)
       END AS REQUESTER 
     , MMT.TRANSACTION_REFERENCE REFERENCE
     
     , MMT.TRANSACTION_UOM TRANSACTION_UOM
     , INV_MO_PICK_SLIP.get_uom_name(MMT.TRANSACTION_UOM) UOM_NAME	 	 	 	 
     , ABS(MMT.TRANSACTION_QUANTITY) TRANSACTION_QTY
	 ,NVL(MTRL.QUANTITY_DELIVERED,0) REQ_QTY
	 ,ABS(MMT.TRANSACTION_QUANTITY)-NVL(MTRL.QUANTITY_DELIVERED,0) SHORT_QTY
     , (SELECT DROPPING_ORDER FROM INV_SECONDARY_INVENTORIES WHERE SECONDARY_INVENTORY_NAME = MMT.TRANSFER_SUBINVENTORY AND ORGANIZATION_ID = MMT.ORGANIZATION_ID) SUB_DROPPING_ORDER
     , (SELECT DROPPING_ORDER FROM INV_ITEM_LOCATIONS WHERE INVENTORY_LOCATION_ID = MMT.TRANSFER_LOCATOR_ID AND ORGANIZATION_ID = MMT.ORGANIZATION_ID) LOC_DROPPING_ORDER
     
     , MMT.SECONDARY_UOM_CODE SEC_UOM
	 , INV_MO_PICK_SLIP.get_uom_name(MMT.SECONDARY_UOM_CODE) SEC_UOM_NAME	 	 	 
     , ABS(MMT.SECONDARY_TRANSACTION_QUANTITY) SEC_TRANSACTION_QTY

     , INV_MO_PICK_SLIP.cf_sec_uomformula(MMT.INVENTORY_ITEM_ID, MMT.SECONDARY_UOM_CODE) CF_SEC_UOM
     , INV_MO_PICK_SLIP.cf_sec_qtyformula(MMT.INVENTORY_ITEM_ID, ABS(MMT.SECONDARY_TRANSACTION_QUANTITY)) CF_SEC_QTY
		
     , INV_MO_PICK_SLIP.cf_project_numberformula(MTRL.PJC_PROJECT_ID) CF_PROJECT_NUMBER
     , INV_MO_PICK_SLIP.cf_task_numberformula(MTRL.PJC_TASK_ID,MTRL.PJC_PROJECT_ID) CF_TASK_NUMBER
	
     , INV_MO_PICK_SLIP.cf_so_infoformula(LINE_ID, MOVE_ORDER_TYPE) CF_SO_INFO
     , INV_MO_PICK_SLIP.CP_SO_ORDER_NUMBER_p CP_SO_ORDER_NUMBER
     , INV_MO_PICK_SLIP.CP_SO_LINE_NUMBER_p CP_SO_LINE_NUMBER
     , INV_MO_PICK_SLIP.CP_SO_DELIVERY_NAME_p CP_SO_DELIVERY_NAME
     , INV_MO_PICK_SLIP.CP_WO_ORDER_NUMBER_P CP_WO_ORDER_NUMBER
     , INV_MO_PICK_SLIP.CP_WO_OPERATION_SEQ_NUMBER_P CP_WO_OPERATION_SEQ_NUMBER
     , INV_MO_PICK_SLIP.CP_WO_WORK_CENTER_CODE_P CP_WO_WORK_CENTER_CODE
     , INV_MO_PICK_SLIP.CP_WO_WORK_AREA_CODE_P CP_WO_WORK_AREA_CODE
	 
     , 3 TASK_STATUS_ID	--INV_PICK_SLIP_TASK_STATUS (1- UnAllocated, 2-Allocated, 3-Completed)
     , INV_MO_PICK_SLIP.cf_task_statusformula(3) CF_TASK_STATUS
     , MMT.PROJECT_ID INV_PROJECT_ID
     , MMT.TASK_ID INV_TASK_ID
     , INV_MO_PICK_SLIP.cf_project_numberformula(MMT.PROJECT_ID) INV_PROJECT_NUMBER
     , INV_MO_PICK_SLIP.cf_task_numberformula(MMT.TASK_ID, MMT.PROJECT_ID) INV_TASK_NUMBER 
,lot.L_LOT_NUMBER
,lot.L_LOT_qty	 
	 
  FROM INV_MATERIAL_TXNS MMT   --MTL_MATERIAL_TRANSACTIONS
     , INV_TXN_REQUEST_HEADERS MTRH
     , INV_TXN_REQUEST_LINES MTRL
     , EGP_SYSTEM_ITEMS MSI
     , PER_USERS PER  --FND_USER
	 , wie_work_orders_b wwob
	 , egp_system_items_b esi_assemb
	 ,(SELECT TRANSACTION_ID L_TRANSACTION_ID
            , LOT_NUMBER L_LOT_NUMBER
            , ABS(TRANSACTION_QUANTITY) L_LOT_QTY
            , SERIAL_TRANSACTION_ID LS_SER_TXN_ID
         FROM INV_TRANSACTION_LOT_NUMBERS
       UNION ALL
       SELECT TRANSACTION_TEMP_ID 
            , LOT_NUMBER
            , ABS(TRANSACTION_QUANTITY) 
            , SERIAL_TRANSACTION_TEMP_ID
         FROM INV_TRANSACTION_LOTS_TEMP) lot
 WHERE  1=1 --MMT.ORGANIZATION_ID             = :P_ORG_ID
   AND MMT.MOVE_ORDER_LINE_ID          = MTRL.LINE_ID
   AND MTRL.HEADER_ID                  = MTRH.HEADER_ID
   AND MSI.ORGANIZATION_ID             = MMT.ORGANIZATION_ID
   AND MSI.INVENTORY_ITEM_ID           = MMT.INVENTORY_ITEM_ID
   AND PER.USERNAME                    = MTRL.CREATED_BY
   AND NVL(MMT.TRANSACTION_QUANTITY, 0) < 0
   AND  MTRH.request_number in (:P_REQUEST_NUMBER)
   AND wwob.work_order_number = MTRL.reference_name
   AND wwob.organization_id = MTRH.organization_id
   AND esi_assemb.organization_id = wwob.organization_id
   AND esi_assemb.inventory_item_id = wwob.inventory_item_id
   and MMT.TRANSACTION_ID=lot.L_TRANSACTION_ID(+)
UNION ALL

SELECT  2 query
     , (SELECT PICK_SLIP_NUMBER FROM INV_MATERIAL_TXNS_TEMP WHERE TRANSACTION_TEMP_ID = NVL(MMTT.PARENT_LINE_ID, MMTT.TRANSACTION_TEMP_ID) )PICK_SLIP_NUMBER
     , esi_assemb.item_number ASSEMBLY_ITEM
	 , to_char(wwob.PLANNED_COMPLETION_DATE,'DD-MON-YY') COMPLETION_DATE
	 , TO_CHAR(wwob.PLANNED_start_DATE,'DD-MON-YY') JOB_DATE
	 , wwob.COMPLETED_QUANTITY JOB_QUANTITY
	 , MTRL.reference_name JOB_NAME
	 , mtrh.organization_id
     , MTRH.REQUEST_NUMBER MOVE_ORDER_NUMBER
     , MTRH.MOVE_ORDER_TYPE
     , MTRL.LINE_NUMBER
     , MTRL.LINE_ID
     , MTRL.TRANSACTION_SOURCE_TYPE_ID
     , MMTT.TRANSACTION_TEMP_ID TRANSACTION_ID
     , MMTT.PARENT_LINE_ID
     
     , MMTT.INVENTORY_ITEM_ID
     , MSI.ITEM_NUMBER                --null C_ITEM_FLEXDAT
     , MSI.DESCRIPTION ITEM_DESCRIPTION
     , MMTT.REVISION
     
     , MMTT.SUBINVENTORY_CODE FR_SUBINV
     , DECODE(MMTT.LOCATOR_ID, NULL, '', INV_PROJECT.GET_LOCSEGS(MMTT.LOCATOR_ID, MMTT.ORGANIZATION_ID )) FR_LOCATOR
     
     , MMTT.TRANSFER_SUBINVENTORY TO_SUBINV
     , DECODE(MMTT.TRANSFER_TO_LOCATION, NULL, '', INV_PROJECT.GET_LOCSEGS(MMTT.TRANSFER_TO_LOCATION, MMTT.ORGANIZATION_ID )) TO_LOCATOR
     
     , MTRL.PJC_PROJECT_ID  PROJECT_ID
     , MTRL.PJC_TASK_ID     TAKS_ID
     
     , DECODE(MMTT.DISTRIBUTION_ACCOUNT_ID, '', '', null) C_TO_ACCOUNT_FLEXDAT
     , CASE WHEN MTRL.REQUESTER_ID IS NULL 
                 THEN PER.USERNAME 
            ELSE 
                 (SELECT GLOBAL_NAME FROM INV_EMPLOYEES_CURRENT_V WHERE PERSON_ID = MTRL.REQUESTER_ID AND ROWNUM<2)
       END AS REQUESTER 
     , MMTT.TRANSACTION_REFERENCE REFERENCE
     
     , MMTT.TRANSACTION_UOM TRANSACTION_UOM
     , INV_MO_PICK_SLIP.get_uom_name(MMTT.TRANSACTION_UOM) UOM_NAME	 	 	 
     , ABS(MMTT.TRANSACTION_QUANTITY) TRANSACTION_QTY
	 	 ,nVl(MMTT.PRIMARY_QUANTITY,0) REQ_QTY
	 ,ABS(MMTT.TRANSACTION_QUANTITY)-nVl(MMTT.PRIMARY_QUANTITY,0) SHORT_QTY
     
     , (SELECT DROPPING_ORDER FROM INV_SECONDARY_INVENTORIES WHERE SECONDARY_INVENTORY_NAME = MMTT.TRANSFER_SUBINVENTORY AND ORGANIZATION_ID = MMTT.ORGANIZATION_ID) SUB_DROPPING_ORDER
     , (SELECT DROPPING_ORDER FROM INV_ITEM_LOCATIONS WHERE INVENTORY_LOCATION_ID = MMTT.TRANSFER_TO_LOCATION AND ORGANIZATION_ID = MMTT.ORGANIZATION_ID) LOC_DROPPING_ORDER
     
     , MMTT.SECONDARY_UOM_CODE SEC_UOM
	 , INV_MO_PICK_SLIP.get_uom_name(MMTT.SECONDARY_UOM_CODE) SEC_UOM_NAME	 	 
     , ABS(MMTT.SECONDARY_TRANSACTION_QUANTITY) SEC_TRANSACTION_QTY
          
     
     , INV_MO_PICK_SLIP.cf_sec_uomformula(MMTT.INVENTORY_ITEM_ID, MMTT.SECONDARY_UOM_CODE) CF_SEC_UOM
     , INV_MO_PICK_SLIP.cf_sec_qtyformula(MMTT.INVENTORY_ITEM_ID, ABS(MMTT.SECONDARY_TRANSACTION_QUANTITY)) CF_SEC_QTY
	
     , INV_MO_PICK_SLIP.cf_project_numberformula(MTRL.PJC_PROJECT_ID) CF_PROJECT_NUMBER
     , INV_MO_PICK_SLIP.cf_task_numberformula(MTRL.PJC_TASK_ID, MTRL.PJC_PROJECT_ID) CF_TASK_NUMBER
	
     , INV_MO_PICK_SLIP.cf_so_infoformula(MTRL.LINE_ID, MTRH.MOVE_ORDER_TYPE) CF_SO_INFO
     , INV_MO_PICK_SLIP.CP_SO_ORDER_NUMBER_p CP_SO_ORDER_NUMBER
     , INV_MO_PICK_SLIP.CP_SO_LINE_NUMBER_p CP_SO_LINE_NUMBER
     , INV_MO_PICK_SLIP.CP_SO_DELIVERY_NAME_p CP_SO_DELIVERY_NAME
     , INV_MO_PICK_SLIP.CP_WO_ORDER_NUMBER_P CP_WO_ORDER_NUMBER
     , INV_MO_PICK_SLIP.CP_WO_OPERATION_SEQ_NUMBER_P CP_WO_OPERATION_SEQ_NUMBER
     , INV_MO_PICK_SLIP.CP_WO_WORK_CENTER_CODE_P CP_WO_WORK_CENTER_CODE
     , INV_MO_PICK_SLIP.CP_WO_WORK_AREA_CODE_P CP_WO_WORK_AREA_CODE

     , 2 TASK_STATUS_ID	--INV_PICK_SLIP_TASK_STATUS (1- UnAllocated, 2-Allocated, 3-Completed)
     , INV_MO_PICK_SLIP.cf_task_statusformula(2) CF_TASK_STATUS
     , MMTT.PROJECT_ID INV_PROJECT_ID
     , MMTT.TASK_ID INV_TASK_ID
     , INV_MO_PICK_SLIP.cf_project_numberformula(MMTT.PROJECT_ID) INV_PROJECT_NUMBER
     , INV_MO_PICK_SLIP.cf_task_numberformula(MMTT.TASK_ID, MMTT.PROJECT_ID) INV_TASK_NUMBER
	 ,lot.L_LOT_NUMBER
     ,lot.L_LOT_qty	
  FROM INV_MATERIAL_TXNS_TEMP MMTT
     , INV_TXN_REQUEST_HEADERS MTRH
     , INV_TXN_REQUEST_LINES MTRL
     , EGP_SYSTEM_ITEMS MSI
     , PER_USERS PER --FND_USER
	 , wie_work_orders_b wwob
	 , egp_system_items_b esi_assemb
	 ,(SELECT TRANSACTION_ID L_TRANSACTION_ID
            , LOT_NUMBER L_LOT_NUMBER
            , ABS(TRANSACTION_QUANTITY) L_LOT_QTY
            , SERIAL_TRANSACTION_ID LS_SER_TXN_ID
         FROM INV_TRANSACTION_LOT_NUMBERS
       UNION ALL
       SELECT TRANSACTION_TEMP_ID 
            , LOT_NUMBER
            , ABS(TRANSACTION_QUANTITY) 
            , SERIAL_TRANSACTION_TEMP_ID
         FROM INV_TRANSACTION_LOTS_TEMP) lot
 WHERE 1=1 -- MMTT.ORGANIZATION_ID            = :P_ORG_ID
   AND MTRL.LINE_ID                    = MMTT.MOVE_ORDER_LINE_ID
   AND MTRL.HEADER_ID                  = MTRH.HEADER_ID
   AND MSI.INVENTORY_ITEM_ID           = MMTT.INVENTORY_ITEM_ID
   AND MSI.ORGANIZATION_ID             = MMTT.ORGANIZATION_ID
   AND PER.USERNAME                    = MTRL.CREATED_BY     --FND.USER_ID
   AND NVL(MMTT.TRANSACTION_QUANTITY, 0) > 0
													--and MTRL.TO_SUBINVENTORY_CODE  =mmtt.SUBINVENTORY_CODE
   and MMTT.TRANSACTION_TEMP_ID=lot.L_TRANSACTION_ID(+)
      AND wwob.work_order_number = MTRL.reference_name
   AND wwob.organization_id = MTRH.organization_id
   AND esi_assemb.organization_id = wwob.organization_id
   AND esi_assemb.inventory_item_id = wwob.inventory_item_id
   AND NOT EXISTS (SELECT 1 FROM INV_MATERIAL_TXNS_TEMP WHERE PARENT_LINE_ID = MMTT.TRANSACTION_TEMP_ID)
   AND NVL(MMTT.PARENT_LINE_ID, MMTT.TRANSACTION_TEMP_ID) IN (SELECT NVL(MMTT.PARENT_LINE_ID, MMTT.TRANSACTION_TEMP_ID) 
                                                                FROM INV_MATERIAL_TXNS_TEMP MMTT
                                                                   , INV_TXN_REQUEST_LINES MTRL
                                                                   , INV_TXN_REQUEST_HEADERS MTRH 
                                                               WHERE MMTT.ORGANIZATION_ID =MMTT.ORGANIZATION_ID
                                                                 AND MTRL.LINE_ID = MMTT.MOVE_ORDER_LINE_ID
                                                                 AND MTRH.HEADER_ID = MTRL.HEADER_ID
                                                              )
 AND  MTRH.request_number in (:P_REQUEST_NUMBER)																
UNION ALL

SELECT  3 query
     , MTRL.PICK_SLIP_NUMBER
	 , esi_assemb.item_number ASSEMBLY_ITEM
	 , to_char(wwob.PLANNED_COMPLETION_DATE,'DD-MON-YY') COMPLETION_DATE
	 , TO_CHAR(wwob.PLANNED_start_DATE,'DD-MON-YY') JOB_DATE
	 , wwob.COMPLETED_QUANTITY JOB_QUANTITY
	 , MTRL.reference_name JOB_NAME
	 , mtrh.organization_id
     , MTRH.REQUEST_NUMBER MOVE_ORDER_NUMBER
     , MTRH.MOVE_ORDER_TYPE
     , MTRL.LINE_NUMBER
     , MTRL.LINE_ID
     , MTRL.TRANSACTION_SOURCE_TYPE_ID     
     , -99999 AS TRANSACTION_ID
     , TO_NUMBER(NULL) PARENT_LINE_ID
     
     , MTRL.INVENTORY_ITEM_ID
     , MSI.ITEM_NUMBER          --null C_ITEM_FLEXDAT
     , MSI.DESCRIPTION
     , MTRL.REVISION
     
     , MTRL.FROM_SUBINVENTORY_CODE FR_SUBINV
     , DECODE(MTRL.FROM_LOCATOR_ID, NULL, '', INV_PROJECT.GET_LOCSEGS(MTRL.FROM_LOCATOR_ID, mtrl.ORGANIZATION_ID )) FR_LOCATOR
     
     , MTRL.TO_SUBINVENTORY_CODE TO_SUBINV
     , DECODE(MTRL.TO_LOCATOR_ID, NULL, '', INV_PROJECT.GET_LOCSEGS(MTRL.TO_LOCATOR_ID, mtrl.ORGANIZATION_ID )) TO_LOCATOR
     
     , MTRL.PJC_PROJECT_ID  PROJECT_ID
     , MTRL.PJC_TASK_ID     TAKS_ID
     
     , DECODE(MTRL.TO_ACCOUNT_ID, '', '', null) C_TO_ACCOUNT_FLEXDAT
     , CASE WHEN MTRL.REQUESTER_ID IS NULL 
                 THEN PER.USERNAME 
            ELSE 
                 (SELECT GLOBAL_NAME FROM INV_EMPLOYEES_CURRENT_V WHERE PERSON_ID = MTRL.REQUESTER_ID AND ROWNUM<2)
       END AS REQUESTER 
     , MTRL.REFERENCE_NAME REFERENCE
     
     , MTRL.UOM_CODE TRANSACTION_UOM
	 , INV_MO_PICK_SLIP.get_uom_name(MTRL.UOM_CODE) UOM_NAME
     , ABS(NVL(MTRL.QUANTITY, 0) - NVL(MTRL.QUANTITY_DETAILED, 0)) TRANSACTION_QTY
     ,nVl(ABS(NVL(MTRL.QUANTITY, 0) - NVL(MTRL.QUANTITY_DETAILED, 0)),0) REQ_QTY
	 ,ABS(MTRL.QUANTITY)-NVL(ABS(NVL(MTRL.QUANTITY, 0) - NVL(MTRL.QUANTITY_DETAILED, 0)),0) SHORT_QTY
     , (SELECT DROPPING_ORDER FROM INV_SECONDARY_INVENTORIES WHERE SECONDARY_INVENTORY_NAME = MTRL.TO_SUBINVENTORY_CODE AND ORGANIZATION_ID = MTRL.ORGANIZATION_ID) SUB_DROPPING_ORDER
     , (SELECT DROPPING_ORDER FROM INV_ITEM_LOCATIONS WHERE INVENTORY_LOCATION_ID = MTRL.TO_LOCATOR_ID AND ORGANIZATION_ID = MTRL.ORGANIZATION_ID) LOC_DROPPING_ORDER
     
     , MTRL.SECONDARY_UOM_CODE SEC_UOM
	 , INV_MO_PICK_SLIP.get_uom_name(MTRL.SECONDARY_UOM_CODE) SEC_UOM_NAME	 
     , ABS(NVL(MTRL.SECONDARY_QUANTITY, 0) - NVL(MTRL.SECONDARY_QUANTITY_DETAILED, 0)) SEC_TRANSACTION_QTY
	 
	 , INV_MO_PICK_SLIP.cf_sec_uomformula(MTRL.INVENTORY_ITEM_ID, MTRL.SECONDARY_UOM_CODE) CF_SEC_UOM
	 , INV_MO_PICK_SLIP.cf_sec_qtyformula(MTRL.INVENTORY_ITEM_ID, ABS(NVL(MTRL.SECONDARY_QUANTITY, 0) - NVL(MTRL.SECONDARY_QUANTITY_DETAILED, 0))) CF_SEC_QTY
	
	 , INV_MO_PICK_SLIP.cf_project_numberformula(MTRL.PJC_PROJECT_ID) CF_PROJECT_NUMBER
	 , INV_MO_PICK_SLIP.cf_task_numberformula(MTRL.PJC_TASK_ID, MTRL.PJC_PROJECT_ID) CF_TASK_NUMBER
	
	 , INV_MO_PICK_SLIP.cf_so_infoformula(LINE_ID, MOVE_ORDER_TYPE) CF_SO_INFO
	 , INV_MO_PICK_SLIP.CP_SO_ORDER_NUMBER_p CP_SO_ORDER_NUMBER
	 , INV_MO_PICK_SLIP.CP_SO_LINE_NUMBER_p CP_SO_LINE_NUMBER
	 , INV_MO_PICK_SLIP.CP_SO_DELIVERY_NAME_p CP_SO_DELIVERY_NAME
         , INV_MO_PICK_SLIP.CP_WO_ORDER_NUMBER_P CP_WO_ORDER_NUMBER
         , INV_MO_PICK_SLIP.CP_WO_OPERATION_SEQ_NUMBER_P CP_WO_OPERATION_SEQ_NUMBER
         , INV_MO_PICK_SLIP.CP_WO_WORK_CENTER_CODE_P CP_WO_WORK_CENTER_CODE
         , INV_MO_PICK_SLIP.CP_WO_WORK_AREA_CODE_P CP_WO_WORK_AREA_CODE

	, 1 TASK_STATUS_ID	--INV_PICK_SLIP_TASK_STATUS (1- UnAllocated, 2-Allocated, 3-Completed)
	, INV_MO_PICK_SLIP.cf_task_statusformula(1) CF_TASK_STATUS
        , MTRL.PROJECT_ID INV_PROJECT_ID
        , MTRL.TASK_ID INV_TASK_ID
        , INV_MO_PICK_SLIP.cf_project_numberformula(MTRL.PROJECT_ID) INV_PROJECT_NUMBER
        , INV_MO_PICK_SLIP.cf_task_numberformula(MTRL.TASK_ID, MTRL.PROJECT_ID) INV_TASK_NUMBER
,lot.L_LOT_NUMBER
,lot.L_LOT_qty	
	FROM INV_TXN_REQUEST_HEADERS MTRH
     , INV_TXN_REQUEST_LINES MTRL
     , EGP_SYSTEM_ITEMS MSI
     , PER_USERS PER  --FND_USER
	 , wie_work_orders_b wwob
	 , egp_system_items_b esi_assemb
	 ,(SELECT TRANSACTION_ID L_TRANSACTION_ID
            , LOT_NUMBER L_LOT_NUMBER
            , ABS(TRANSACTION_QUANTITY) L_LOT_QTY
            , SERIAL_TRANSACTION_ID LS_SER_TXN_ID
         FROM INV_TRANSACTION_LOT_NUMBERS
       UNION ALL
       SELECT TRANSACTION_TEMP_ID 
            , LOT_NUMBER
            , ABS(TRANSACTION_QUANTITY) 
            , SERIAL_TRANSACTION_TEMP_ID
         FROM INV_TRANSACTION_LOTS_TEMP) lot
 WHERE 1=1 --MTRL.ORGANIZATION_ID            = :P_ORG_ID
   AND MTRL.HEADER_ID                  = MTRH.HEADER_ID
   AND MSI.INVENTORY_ITEM_ID           = MTRL.INVENTORY_ITEM_ID
   AND MSI.ORGANIZATION_ID             = MTRL.ORGANIZATION_ID
   AND PER.USERNAME                    = MTRL.CREATED_BY   --FND.USER_ID
   AND NVL(MTRL.QUANTITY, 0) > NVL(MTRL.QUANTITY_DETAILED, 0)
   and -99999 =lot.L_TRANSACTION_ID(+)
  -- AND MTRL.LINE_STATUS IN (3, 7)
   AND  MTRH.request_number in (:P_REQUEST_NUMBER)
         AND wwob.work_order_number = MTRL.reference_name
   AND wwob.organization_id = MTRH.organization_id
   AND esi_assemb.organization_id = wwob.organization_id
   AND esi_assemb.inventory_item_id = wwob.inventory_item_id
 ORDER BY 1, 8, 29, 30, 27, 28, 2, 3, 4, 5, 6, 7, 9, 31, 11, 12, 13, 14, 15, 16, 17, 18, 32, 20, 21, 22, 23
 --21--
 select * from INV_TXN_REQUEST_LINES where header_id in (  select header_id from INV_TXN_REQUEST_HEADERS MTRH where MTRH.request_number in (:P_REQUEST_NUMBER)	)
 --23--
 SELECT * FROM wie_work_orders_b WHERE  work_order_number ='OOH1014'
 --RFR--
 SELECT * FROM INV_MATERIAL_TXNS_TEMP
 --------------------------------
 ==================================================================================================================
 ------------------------------------JAQ_PROFORMA_INVOICE_DM--------------------
--Q1
select  dha.header_id,
       aa.ou_name bu_name,
       case when (select count(*)
          from doo_fulfill_lines_all dfla2,
               inv_org_parameters iop2
         where dfla2.fulfill_org_id=iop2.organization_id
           and dfla2.header_id = dha.header_id
           and iop2.attribute4 is not null) >= 1 then
       'IEC NO. '||(select rtrim(xmlagg(xmlelement(e,(aa.attribute4)||',')).
               extract ('//text()'),',') from
       (select distinct iop2.attribute4
          from doo_fulfill_lines_all dfla2,
               inv_org_parameters iop2
         where dfla2.fulfill_org_id=iop2.organization_id      
           and iop2.business_unit_id=nvl(:p_org,iop2.business_unit_id)
           and dfla2.header_id = dha.header_id
           and iop2.attribute4 is not null)aa)
       end exporter_reff,
       aa.address,
       (  aa.address_line_1
        || ' '
        || aa.address_line_2)exporter_add1,
       aa.town_or_city exp_city,
       aa.region_2 exp_state,
       aa.country exp_country,
       sc.party_name consignee_name,
       (   sc.address1
        || ' '
        || sc.address2
        || ' '
        || sc.address3|| ',')sc_add_1, 
       sc.city || ',' ship_city, 
       sc.state ship_state,
       sc.country ship_country,
       bc.party_name bill_to_name,
       (   bc.address1
        || ' '
        || bc.address2
        || ' '
        || bc.address3|| ',')bc_add_1, 
       bc.city || ',' bill_city, 
       bc.state bill_state,
       bc.country bill_country, 
       bank.bank_name,
       case when bank.acc_no is not null then
       bank.acc_no||' '||dha.transactional_currency_code end acc_no,
       bank.bank_address,  
       dha.order_number,
       to_char(dha.ordered_date,'DD-MM-YYYY HH:MI AM') order_date, 
       nvl(DHA.CUSTOMER_PO_NUMBER,
        (select max(ATTRIBUTE_CHAR1||' Dt.: '||to_char(ATTRIBUTE_DATE1,'dd/mm/yyyy')) from doo_headers_eff_b
          where CONTEXT_CODE = 'Purchase Order Details' and header_id = dha.header_id )) cust_ord_no_dt,
       dfla.fulfill_line_id,
       esi.item_number item_code,
       esi.description description,
       case when upper(esi.weight_uom_code) like '%KG%' then
             (esi.unit_weight)*dfla.ordered_qty 
             when upper(esi.weight_uom_code) like '%GM%' then
             (esi.unit_weight*1000)*dfla.ordered_qty
       end gross_weight,
       /*case when upper(esi.dimension_uom_code) like '%CUM%' then
             (((esi.unit_length)*
             (esi.unit_width)*
             (esi.unit_height))*dfla.ordered_qty) 
       end cbm,*/
       dfla.ordered_qty qty,
       dla.unit_list_price,
--       dla.unit_selling_price rate,
       (DLA.UNIT_SELLING_PRICE - nvl((SELECT round(sum(HEADER_CURRENCY_UNIT_PRICE),5)
                                     FROM DOO_ORDER_PRICING_DETAILS_V
                                    WHERE FULFILL_LINE_ID = dfla.FULFILL_LINE_ID
                                    AND PRICE_ELEMENT_USAGE_CODE = 'PRICE_ADJUSTMENT'
									AND NVL(PRICING_SOURCE_TYPE_CODE,'-') != 'ROUNDING_ADJUSTMENT'
                                    AND HEADER_CURRENCY_EXT_AMOUNT > 0),0) ) RATE,
--       (dfla.ordered_qty * dla.unit_selling_price)/*dfla.extended_amount*/ amount,
       (DFLA.ORDERED_QTY * (DLA.UNIT_SELLING_PRICE - nvl((SELECT round(sum(HEADER_CURRENCY_UNIT_PRICE),5)
                                                         FROM DOO_ORDER_PRICING_DETAILS_V
                                                        WHERE FULFILL_LINE_ID = dfla.FULFILL_LINE_ID
                                                        AND PRICE_ELEMENT_USAGE_CODE = 'PRICE_ADJUSTMENT'
														AND NVL(PRICING_SOURCE_TYPE_CODE,'-') != 'ROUNDING_ADJUSTMENT'
                                                        AND HEADER_CURRENCY_EXT_AMOUNT > 0),0) ) ) amount,
       dha.transactional_currency_code,
       case when dha.status_code = 'DOO_DRAFT' then 'Draft' else null end draft_status_print,
       (select meaning from fnd_lookup_values 
         where lookup_type = 'ORA_DOO_ORDER_TYPES' 
           and language = 'US'
           and lookup_code = dha.order_type_code) order_type,
       hdff.pre_carriage_by,
       /*(select max(modeoftransportpeo.lookup_code)
          from fusion.wsh_org_carrier_services warehousecarrierservicepeo,
               fusion.rcs_lookups modeoftransportpeo              ,
               fusion.wsh_carriers carrierpeo,
               fusion.msc_xref_mapping mxm,
               doo_fulfill_lines_all dfl
         where 1=1
           and warehousecarrierservicepeo.mode_of_transport = modeoftransportpeo.lookup_code
           and modeoftransportpeo.lookup_type = 'WSH_MODE_OF_TRANSPORT'
           and carrierpeo.carrier_id = warehousecarrierservicepeo.carrier_id
           and carrierpeo.carrier_id = mxm.source_value
           and entity_name = 'CARRIERS'
           and attribute_name = 'CARRIER_ID'
           and sr_instance_id in (select a.instance_id
                                    from fusion.msc_apps_instances a,
                                         fusion.hz_orig_systems_vl b
                                   where a.instance_id = b.orig_system_id
                                     and a.order_orch_type = 2
                                     and b.status = 'A')
           and mxm.target_value = dfl.carrier_id
           and dfla.header_id = dha.header_id)*/ 
       (select max(rl.lookup_code)
          from msc_xref_mapping mxm,
               wsh_carriers wc,
               wsh_org_carrier_services wocs,
               rcs_lookups rl
         where mxm.attribute_name='CARRIER_ID'
           and mxm.entity_name='CARRIERS'
           and wc.carrier_id = mxm.source_value
           and wc.carrier_id = wocs.carrier_id
           and wocs.organization_id is not null
           and rl.lookup_type = 'WSH_MODE_OF_TRANSPORT'
           and wocs.mode_of_transport = rl.lookup_code
           and mxm.target_value=nvl(dha.carrier_id,dfla.carrier_id))shipment_mode,
       hdff.port_of_loading,
       hdff.country_of_origin,
       sc.country final_destination,
       hdff.port_of_discharge,
       hdff.header_remarks,
       ldff.line_remarks,
       nvl(n.description, n.name) payment_term,
       nvl((select attribute_number4
          from doo_headers_eff_b
         where context_code='Export Discount'
           and header_id=dha.header_id),0) freight_amt,
       nvl((select attribute_number6
          from doo_headers_eff_b
         where context_code='Export Discount'
           and header_id=dha.header_id),0) documentation_amt,
       nvl((select attribute_number7
          from doo_headers_eff_b
         where context_code='Export Discount'
           and header_id=dha.header_id),0) insurance_amt,
       dha.change_version_number,
       to_char(dfla.schedule_ship_date,'DD-MM-YYYY')schedule_ship_date,
       (select max(fob_point_code) 
          from doo_headers_all_v 
         where header_id = dha.header_id) fob,
	   (select aa.ATTRIBUTE_CHAR5
          from doo_headers_eff_b aa 
         where aa.header_id = dha.header_id
		 and aa.ATTRIBUTE_CHAR5 is not null
		 AND aa.context_code = 'Export Details') fob_amount,
     (select substr(ecv.category_name,instr(ecv.category_name, '-', 1,1)+1) 
          from egp_categories_vl ecv 
         where ecv.category_id =
         (select distinct category_id 
            from egp_item_cat_assignments 
           where inventory_item_id=esi.inventory_item_id
             and organization_id = (select organization_id from inv_org_parameters where organization_code = 'IMO')
             and category_set_id = 
             (select category_set_id 
                from egp_category_sets_vl 
               where validate_flag='Y' 
                 and upper(description)='JAQ GST CATEGORY'))) hsn_code,
    /*CASE WHEN round((((nvl(esi.unit_length,0) / 1000) * (nvl(esi.unit_width,0) / 1000) * (nvl(esi.unit_height,0) / 1000)) * dfla.ordered_qty),3)=0 
    THEN NULL
    ELSE round((((nvl(esi.unit_length,0) / 1000) * (nvl(esi.unit_width,0) / 1000) * (nvl(esi.unit_height,0) / 1000)) * dfla.ordered_qty),3) END cbm,*/
    case when (select round((((nvl(egp.unit_length,0) / 1000) * (nvl(egp.unit_width,0) / 1000) * (nvl(egp.unit_height,0) / 1000)) * dfla.ordered_qty),3)
                 from egp_system_items_b egp 
                where egp.organization_id = (select organization_id from inv_org_parameters where organization_code = 'IMO')
                  and egp.inventory_item_id=esi.inventory_item_id)=0
    THEN NULL
    ELSE (select round((((nvl(egp.unit_length,0) / 1000) * (nvl(egp.unit_width,0) / 1000) * (nvl(egp.unit_height,0) / 1000)) * dfla.ordered_qty),3)
                 from egp_system_items_b egp 
                where egp.organization_id = (select organization_id from inv_org_parameters where organization_code = 'IMO')
                  and egp.inventory_item_id=esi.inventory_item_id) END cbm,
    nvl((select max(case  when (attribute_value_1 = 'DISCOUNT_PERCENT' or attribute_value_1 = 'MARKUP_PERCENT') then attribute_value_2
                     when (attribute_value_2 = 'DISCOUNT_PERCENT' or attribute_value_2 = 'MARKUP_PERCENT') then attribute_value_3
                     when (attribute_value_3 = 'DISCOUNT_PERCENT' or attribute_value_3 = 'MARKUP_PERCENT') then attribute_value_4
                     when (attribute_value_4 = 'DISCOUNT_PERCENT' or attribute_value_4 = 'MARKUP_PERCENT') then attribute_value_5
                     when (attribute_value_5 = 'DISCOUNT_PERCENT' or attribute_value_5 = 'MARKUP_PERCENT') then attribute_value_6
                     when (attribute_value_6 = 'DISCOUNT_PERCENT' or attribute_value_6 = 'MARKUP_PERCENT') then attribute_value_7
                     when (attribute_value_7 = 'DISCOUNT_PERCENT' or attribute_value_7 = 'MARKUP_PERCENT') then attribute_value_8
                     when (attribute_value_8 = 'DISCOUNT_PERCENT' or attribute_value_8 = 'MARKUP_PERCENT') then attribute_value_9
                     when (attribute_value_9 = 'DISCOUNT_PERCENT' or attribute_value_9 = 'MARKUP_PERCENT') then attribute_value_10 else '0' end)
        from doo_order_pricing_details_v dpd,
             qp_matrix_rules_vl qmr
        where 1 = 1
        and upper(dpd.explanation) like 'ADD%DISC%'
        and dpd.price_element_usage_code = 'PRICE_ADJUSTMENT'
        and dpd.fulfill_line_id = dfla.fulfill_line_id
        and qmr.dynamic_matrix_rule_id = dpd.pricing_source_id),0) add_disc_pct,
    (select nvl(sum(abs(header_currency_ext_amount)),0)
        from doo_order_pricing_details_v
        where 1 = 1
        and upper(explanation) like 'ADD%DISC%'
        and price_element_usage_code = 'PRICE_ADJUSTMENT'
        and fulfill_line_id = dfla.fulfill_line_id) add_disc,
    (select nvl(sum(abs(header_currency_ext_amount)),0)
        from doo_order_pricing_details_v
        where 1 = 1
        and upper(explanation) like 'CONTAIN%LOAD%'
        and price_element_usage_code = 'PRICE_ADJUSTMENT'
        and fulfill_line_id = dfla.fulfill_line_id) container_disc,
    (select nvl(sum(abs(header_currency_ext_amount)),0)
        from doo_order_pricing_details_v
        where 1 = 1
        and upper(explanation) like 'TRADE%DISC%'
        and price_element_usage_code = 'PRICE_ADJUSTMENT'
        and fulfill_line_id = dfla.fulfill_line_id) trade_disc,
    (select nvl(sum(abs(header_currency_ext_amount)),0)
        from doo_order_pricing_details_v
        where 1 = 1
        and upper(explanation) like 'SPECIAL%DISC%'
        and price_element_usage_code = 'PRICE_ADJUSTMENT'
        and fulfill_line_id = dfla.fulfill_line_id) special_disc,
    (select nvl(sum(abs(header_currency_ext_amount)),0)
        from doo_order_pricing_details_v
        where 1 = 1
        and upper(explanation) like 'CASH%DISC%'
        and price_element_usage_code = 'PRICE_ADJUSTMENT'
        and fulfill_line_id = dfla.fulfill_line_id) cash_disc,
    (select nvl(sum(abs(header_currency_ext_amount)),0)
       from doo_order_pricing_details_v
      where 1 = 1
        and (upper(explanation) like '%JW%DISPLAY%DISC%' or 
            upper(explanation) like 'DISPLAY%DISC%')
        and price_element_usage_code = 'PRICE_ADJUSTMENT'
        and fulfill_line_id = dfla.fulfill_line_id) jw_disp_disc,
     (select rtrim(xmlagg(xmlelement(e, aa.division || ',')).extract('//text()'),',')
          from
     (select distinct
       case when instr(ecv.description, '//') > 0 then 
                  substr(ecv.description,instr(ecv.description,'//',1,1)+2,instr(ecv.description,'//',1,2)-instr(ecv.description,'//',1,1)-2)
              when instr(ecv.description, '-') > 0 then regexp_substr(ecv.description,'[^-]+',1, 2)
              when instr(ecv.description, '.') > 0 then regexp_substr(ecv.description,'[^.]+',1,2) end division            
        from egp_categories_vl ecv, egp_item_categories eic, egp_category_sets_vl ecsv
        where ecv.category_id = eic.category_id and eic.category_set_id = ecsv.category_set_id
        and eic.organization_id = (select organization_id from inv_org_parameters where organization_code = 'IMO')
        and ecsv.description = 'Inventory Item Categories'
        and eic.inventory_item_id = esi.inventory_item_id
        group by case when instr(ecv.description, '//') > 0 then 
                  substr(ecv.description,instr(ecv.description,'//',1,1)+2,instr(ecv.description,'//',1,2)-instr(ecv.description,'//',1,1)-2)
              when instr(ecv.description, '-') > 0 then regexp_substr(ecv.description,'[^-]+',1, 2)
              when instr(ecv.description, '.') > 0 then regexp_substr(ecv.description,'[^.]+',1,2) end)aa) brand_grp,
         (    SELECT     conversion_rate
            FROM     gl_daily_rates gdr, gl_periods gp
            WHERE     from_currency         =             'PLN'
            AND     to_currency         =             dha.transactional_currency_code
            AND     conversion_type     =             'Corporate'
            AND     status_code         =             'C'
            AND     gdr.conversion_date =            dha.ordered_date
         )    conv_rate,
	

		 (case :v_lang when  'en_US' THEN (case when upper(dhA.order_type_code) like '%NFEI%' THEN 'SAMPLE PROFORMA INVOICE' ELSE 'PROFORMA INVOICE' END)
              when 'it_IT' THEN (case when upper(dhA.order_type_code) like '%NFEI%' THEN 'ESEMPIO DI FATTURA PROFORMA' ELSE 'FATTURA PROFORMA' END)
			  when 'pl-PL' THEN (case when upper(dhA.order_type_code) like '%NFEI%' THEN 'PRZYKŁADOWA FAKTURA PROFORMA' ELSE 'FAKTURA PROFORMA' END)
				ELSE (case when upper(dhA.order_type_code) like '%NFEI%' THEN 'SAMPLE PROFORMA INVOICE' ELSE 'PROFORMA INVOICE' END) 
				end
			) HDR_NAME,
			
	
       (case when upper(dhA.order_type_code) like '%NFEI%' THEN
       'FREE SAMPLE ITEMS NOT FOR SALE, HAVING NO COMMERCIAL VALUE. VALUE DECLARED FOR CUSTOM PURPOSE ONLY. NO FOREIGN EXCHANGE TRANSACTION INVOLVED'
        ELSE NULL END) NEFI_COND,
        REPLACE(IBY_AMOUNT_IN_WORDS.Get_Amount_In_Words(HDR_AMT.HDR_AMT,dha.transactional_currency_code,NULL,NULL),'*','') AMTTOWORDS,
    CASE WHEN (select count(party_id)
                 from HZ_ORGANIZATION_PROFILES
                where party_id = DHA.SOLD_TO_PARTY_ID
                  and EXTN_ATTRIBUTE_CHAR076 is not null) > 0
          and (select max(EXTN_ATTRIBUTE_CHAR076)
                 from HZ_ORGANIZATION_PROFILES
                where party_id = DHA.SOLD_TO_PARTY_ID) IN ('PRTL', 'APRVD') THEN
    (SELECT 'Email ID: '||MAX(hcp.EMAIL_ADDRESS)
       FROM HZ_CONTACT_POINTS HCP,
            HZ_PARTIES HP
      WHERE HP.PARTY_ID = DHA.SOLD_TO_PARTY_ID
        AND HCP.OWNER_TABLE_ID = HP.PREFERRED_CONTACT_PERSON_ID
        AND HCP.CONTACT_POINT_TYPE = 'EMAIL'
        AND HCP.PRIMARY_FLAG = 'Y')
         WHEN (select count(party_id)
                 from HZ_ORGANIZATION_PROFILES
                where party_id = DHA.SOLD_TO_PARTY_ID
                  and EXTN_ATTRIBUTE_CHAR076 is not null) = 0 then (SELECT 'Email ID: '||MAX(hcp.EMAIL_ADDRESS)
                                                                      FROM HZ_CONTACT_POINTS HCP,
                                                                           HZ_PARTIES HP
                                                                     WHERE HP.PARTY_ID = DHA.SOLD_TO_PARTY_ID
                                                                       AND HCP.OWNER_TABLE_ID = HP.PREFERRED_CONTACT_PERSON_ID
                                                                       AND HCP.CONTACT_POINT_TYPE = 'EMAIL'
                                                                       AND HCP.PRIMARY_FLAG = 'Y') else ' ' END GDPR_EMAIL,
    CASE WHEN (select count(party_id)
                 from HZ_ORGANIZATION_PROFILES
                where party_id = DHA.SOLD_TO_PARTY_ID
                  and EXTN_ATTRIBUTE_CHAR076 is not null) > 0
          and (select max(EXTN_ATTRIBUTE_CHAR076)
                 from HZ_ORGANIZATION_PROFILES
                where party_id = DHA.SOLD_TO_PARTY_ID) IN ('PRTL', 'APRVD') THEN
    (SELECT 'Phone No.: '||MAX(hcp.RAW_PHONE_NUMBER)
       FROM HZ_CONTACT_POINTS HCP,
            HZ_PARTIES HP
      WHERE HP.PARTY_ID = DHA.SOLD_TO_PARTY_ID
        AND HCP.OWNER_TABLE_ID = HP.PREFERRED_CONTACT_PERSON_ID
        AND HCP.CONTACT_POINT_TYPE = 'PHONE'
        AND HCP.PRIMARY_FLAG = 'Y')
         WHEN (select count(party_id)
                 from HZ_ORGANIZATION_PROFILES
                where party_id = DHA.SOLD_TO_PARTY_ID
                  and EXTN_ATTRIBUTE_CHAR076 is not null) = 0 then (SELECT 'Phone No.: '||MAX(hcp.RAW_PHONE_NUMBER)
                                                                       FROM HZ_CONTACT_POINTS HCP,
                                                                            HZ_PARTIES HP
                                                                      WHERE HP.PARTY_ID = DHA.SOLD_TO_PARTY_ID
                                                                        AND HCP.OWNER_TABLE_ID = HP.PREFERRED_CONTACT_PERSON_ID
                                                                        AND HCP.CONTACT_POINT_TYPE = 'PHONE'
                                                                        AND HCP.PRIMARY_FLAG = 'Y') else ' ' END GDPR_PHONE,
        (CASE WHEN (select count(party_id)
                 from HZ_ORGANIZATION_PROFILES
                where party_id = DHA.SOLD_TO_PARTY_ID
                  and EXTN_ATTRIBUTE_CHAR076 is not null) > 0
          and (select max(EXTN_ATTRIBUTE_CHAR076)
                 from HZ_ORGANIZATION_PROFILES
                where party_id = DHA.SOLD_TO_PARTY_ID) IN ('PRTL', 'APRVD') THEN
    (SELECT Z4.REGISTRATION_NUMBER
       FROM HZ_PARTIES Z1,
            HZ_PARTY_SITES Z2,
            ZX_PARTY_TAX_PROFILE Z3,
            ZX_REGISTRATIONS Z4
      WHERE 1 = 1
        AND Z1.PARTY_ID = Z2.PARTY_ID
        AND Z4.REGISTRATION_NUMBER IS NOT NULL
        AND Z2.PARTY_SITE_ID = Z3.PARTY_ID
        AND Z3.PARTY_TAX_PROFILE_ID = Z4.PARTY_TAX_PROFILE_ID
        AND Z1.PARTY_ID = SC.SC_PARTY_ID
        AND Z2.PARTY_SITE_ID = SC.SC_PARTY_SITE_ID
        AND Z4.TAX_REGIME_CODE NOT LIKE '%TDS%'
        AND Z4.TAX_REGIME_CODE = 'GST_REGIME_JAQ'
        AND TRUNC(SYSDATE) BETWEEN TRUNC(Z4.EFFECTIVE_FROM) AND TRUNC(NVL(Z4.EFFECTIVE_TO,SYSDATE))
        AND ROWNUM = 1)
         WHEN (select count(party_id)
                 from HZ_ORGANIZATION_PROFILES
                where party_id = DHA.SOLD_TO_PARTY_ID
                  and EXTN_ATTRIBUTE_CHAR076 is not null) = 0 THEN
    (SELECT Z4.REGISTRATION_NUMBER
       FROM HZ_PARTIES Z1,
            HZ_PARTY_SITES Z2,
            ZX_PARTY_TAX_PROFILE Z3,
            ZX_REGISTRATIONS Z4
      WHERE 1 = 1
        AND Z1.PARTY_ID = Z2.PARTY_ID
        AND Z4.REGISTRATION_NUMBER IS NOT NULL
        AND Z2.PARTY_SITE_ID = Z3.PARTY_ID
        AND Z3.PARTY_TAX_PROFILE_ID = Z4.PARTY_TAX_PROFILE_ID
        AND Z1.PARTY_ID = SC.SC_PARTY_ID
        AND Z2.PARTY_SITE_ID = SC.SC_PARTY_SITE_ID
        AND Z4.TAX_REGIME_CODE NOT LIKE '%TDS%'
        AND Z4.TAX_REGIME_CODE = 'GST_REGIME_JAQ'
        AND TRUNC(SYSDATE) BETWEEN TRUNC(Z4.EFFECTIVE_FROM) AND TRUNC(NVL(Z4.EFFECTIVE_TO,SYSDATE))
        AND ROWNUM = 1) ELSE ' ' END) SC_GSTIN,
    (CASE WHEN (select count(party_id)
                 from HZ_ORGANIZATION_PROFILES
                where party_id = DHA.SOLD_TO_PARTY_ID
                  and EXTN_ATTRIBUTE_CHAR076 is not null) > 0
          and (select max(EXTN_ATTRIBUTE_CHAR076)
                 from HZ_ORGANIZATION_PROFILES
                where party_id = DHA.SOLD_TO_PARTY_ID) IN ('PRTL', 'APRVD') THEN
    (SELECT Z4.REGISTRATION_NUMBER
       FROM HZ_PARTIES Z1,
            HZ_PARTY_SITES Z2,
            ZX_PARTY_TAX_PROFILE Z3,
            ZX_REGISTRATIONS Z4
      WHERE 1 = 1
        AND Z1.PARTY_ID = Z2.PARTY_ID
        AND Z4.REGISTRATION_NUMBER IS NOT NULL
        AND Z2.PARTY_SITE_ID = Z3.PARTY_ID
        AND Z3.PARTY_TAX_PROFILE_ID = Z4.PARTY_TAX_PROFILE_ID
        AND Z1.PARTY_ID = BC.BC_PARTY_ID
        AND Z2.PARTY_SITE_ID = BC.BC_PARTY_SITE_ID
        AND Z4.TAX_REGIME_CODE NOT LIKE '%TDS%'
        AND Z4.TAX_REGIME_CODE = 'GST_REGIME_JAQ'
        AND TRUNC(SYSDATE) BETWEEN TRUNC(Z4.EFFECTIVE_FROM) AND TRUNC(NVL(Z4.EFFECTIVE_TO,SYSDATE))
        AND ROWNUM = 1)
          WHEN (select count(party_id)
                 from HZ_ORGANIZATION_PROFILES
                where party_id = DHA.SOLD_TO_PARTY_ID
                  and EXTN_ATTRIBUTE_CHAR076 is not null) = 0 THEN
    (SELECT Z4.REGISTRATION_NUMBER
       FROM HZ_PARTIES Z1,
            HZ_PARTY_SITES Z2,
            ZX_PARTY_TAX_PROFILE Z3,
            ZX_REGISTRATIONS Z4
      WHERE 1 = 1
        AND Z1.PARTY_ID = Z2.PARTY_ID
        AND Z4.REGISTRATION_NUMBER IS NOT NULL
        AND Z2.PARTY_SITE_ID = Z3.PARTY_ID
        AND Z3.PARTY_TAX_PROFILE_ID = Z4.PARTY_TAX_PROFILE_ID
        AND Z1.PARTY_ID = BC.BC_PARTY_ID
        AND Z2.PARTY_SITE_ID = BC.BC_PARTY_SITE_ID
        AND Z4.TAX_REGIME_CODE NOT LIKE '%TDS%'
        AND Z4.TAX_REGIME_CODE = 'GST_REGIME_JAQ'
        AND TRUNC(SYSDATE) BETWEEN TRUNC(Z4.EFFECTIVE_FROM) AND TRUNC(NVL(Z4.EFFECTIVE_TO,SYSDATE))
        AND ROWNUM = 1) ELSE ' ' END) BC_GSTIN,
        SC.SHIP_ADDRESS,
        BC.BILL_ADDRESS
  from doo_headers_all dha
       ,doo_lines_all dla
       ,doo_fulfill_lines_all dfla
       ,egp_system_items_v esi
       ,hr_operating_units hou
       ,ra_terms n
       ,hz_cust_accounts hca
       ,(select distinct hle.hle_name ou_name,
                ou.organization_id, 
                lo.address_line_1,
                lo.address_line_2,
                lo.town_or_city,
                lo.region_2,
                ft.territory_short_name country,
               (lo.address_line_1||', '||lo.address_line_2||', '
               ||lo.town_or_city||', '||lo.region_2||', '||ft.territory_short_name) address
          from hr_operating_units ou,
               hr_locations lo,
               fnd_territories_vl ft,
               hr_all_organization_units haou,
               (select max(hle.name) hle_name,hle.legal_entity_id
                  from hr_legal_entities hle
                 group by hle.legal_entity_id) hle
         where 1 = 1
           and ou.organization_id = haou.organization_id
           and hle.legal_entity_id = ou.default_legal_context_id
           and haou.location_id = lo.location_id
           and ou.organization_id = haou.organization_id
           and lo.country = ft.territory_code)aa
       ,(select hp.party_name,
                hp.category_code,
                hca.account_number,
                hp.party_id SC_PARTY_ID,
                null site_use_id,
                hps.party_site_id SC_PARTY_SITE_ID,
                hcas.cust_account_id,
                hcas.cust_acct_site_id,
                null site_use_code,
                hl.location_id,
                hl.address1,
                hl.address2,
                hl.address3,
                hl.address4,
                hl.city,
                hl.state,
                hl.postal_code,
                ft.territory_short_name country,
                hp.jgzz_fiscal_code,
                dha.source_order_number,
                dha.header_id,
            ( decode(hl.address1,'','',hl.address1||', ')||
              decode(hl.address2,'','',hl.address2||', ')||
              decode(hl.address3,'','',hl.address3||', ')||
              decode(hl.address4,'','',hl.address4||', ')||chr(10)||
              decode(hl.city,'','',hl.city)||decode(hl.postal_code,'','',' - '||hl.postal_code||', ')||
              decode(hl.state,'','',hl.state||', ')||ft.territory_short_name ) SHIP_address
          from hz_parties hp,
               hz_parties hp_ship,
               doo_headers_all dha,
               doo_order_addresses doa,
               hz_cust_accounts hca,
               hz_cust_acct_sites_all hcas,
               hz_party_sites hps,
               hz_locations hl,
               fnd_territories_vl ft
         where hp.party_id = dha.sold_to_party_id
           and dha.header_id = doa.header_id(+)
           and (doa.address_use_type = 'SHIP_TO'
                or doa.address_use_type is null)
           and doa.party_site_id = hps.party_site_id(+)
           and hcas.party_site_id(+) = hps.party_site_id
           and hps.party_id = hp_ship.party_id(+)
           and hcas.cust_account_id = hca.cust_account_id(+)
           and hps.location_id = hl.location_id(+)
           --and dha.status_code NOT IN ('DOO_REFERENCE','CANCELED','DOO_DRAFT')
           and dha.request_cancel_date is null
           and dha.order_type_code not in ('Sales_Return')
           and hl.country = ft.territory_code) sc
      ,(select hp.party_name,
               hp.category_code,
               hca.account_number,
               hp.party_id BC_PARTY_ID,
               hcs.site_use_id,
               hps.party_site_id BC_PARTY_SITE_ID,
               hcas.cust_account_id,
               hcas.cust_acct_site_id,
               hcs.site_use_code,
               hl.location_id,
               hl.address1,
               hl.address2,
               hl.address3,
               hl.address4,
               hl.city,
               hl.state,
               hl.postal_code,
               ft.territory_short_name country,
               hp.jgzz_fiscal_code,
            ( decode(hl.address1,'','',hl.address1||', ')||
              decode(hl.address2,'','',hl.address2||', ')||
              decode(hl.address3,'','',hl.address3||', ')||
              decode(hl.address4,'','',hl.address4||', ')||chr(10)||
              decode(hl.city,'','',hl.city)||decode(hl.postal_code,'','',' - '||hl.postal_code||', ')||
              decode(hl.state,'','',hl.state||', ')||ft.territory_short_name ) bill_address
          from hz_parties hp,
               hz_party_sites hps,
               hz_cust_accounts hca,
               hz_cust_acct_sites_all hcas,
               hz_cust_site_uses_all hcs,
               hz_locations hl,
               fnd_territories_vl ft
         where     1 = 1
               and hp.party_id = hca.party_id
               and hp.party_id = hps.party_id
               and hps.party_site_id = hcas.party_site_id
               and hca.cust_account_id = hcas.cust_account_id
               and hcas.cust_acct_site_id =
                      hcs.cust_acct_site_id
               and hps.location_id = hl.location_id
               and hl.country = ft.territory_code) bc,
         (select cba.bank_account_name bank_name,
                ', EEFC ACCOUNT NO. '||cba.bank_account_num||
                ' FOR' acc_no,
               (case when cabv.site_address_line1 is null then '' else cabv.site_address_line1||', ' end ||
                case when cabv.site_address_line2 is null then '' else cabv.site_address_line2||', ' end ||
                case when cabv.site_address_line3 is null then '' else cabv.site_address_line3||', ' end ||
                case when cabv.site_address_line4 is null then '' else cabv.site_address_line4||', ' end ||
                case when cabv.site_city is null then '' else cabv.site_city||', ' end ||
                case when cabv.site_state is null then '' else cabv.site_state||', ' end ||
                case when cabv.site_zip is null then '' else cabv.site_zip||', ' end ||
                case when ft.territory_short_name is null then '' else ft.territory_short_name end )
                bank_address,
                cba.account_owner_org_id,
                cbu.org_id
           from ce_bank_accounts cba,
                ce_bank_acct_uses_all cbu,
                ce_all_banks_v cabv,
                fnd_territories_vl ft   
          where cbu.bank_account_id=cba.bank_account_id
            and cba.bank_id=cabv.pk_id
            and cba.bank_id=cabv.bank_party_id
            and site_country= ft.territory_code
            and cba.description='EEFC ACCOUNT'
                ) bank,
        (select aa.header_id,
                nvl((select fl.description
                   from fnd_lookups fl
                  where fl.lookup_type = 'WSH_MODE_OF_TRANSPORT'
                    and fl.enabled_flag='Y'
                    and fl.meaning=aa.attribute_char4),aa.attribute_char4) pre_carriage_by,
                (select ft.territory_short_name
                   from fnd_territories_vl ft
                  where ft.territory_code=aa.attribute_char1) country_of_origin,
                NVL((select fl.description
                       from fnd_lookups fl
                      where fl.lookup_type= 'XXFILIX_PORT_OF_LOADING'
                        and fl.enabled_flag='Y'
                        and fl.lookup_code=aa.attribute_char2),aa.attribute_char2) port_of_loading,
                (select fl.description
                   from fnd_lookups fl
                  where fl.lookup_type= 'XXFILIX_PORT_OF_LOADING'
                    and fl.enabled_flag='Y'
                    and fl.lookup_code=aa.attribute_char3) port_of_discharge,
                aa.attribute_char7 header_remarks
           from doo_headers_eff_b aa
          where context_code = 'Export Details') hdff,
        (select header_id,
                line_id,
                attribute_char1 line_remarks
           from doo_lines_eff_b) ldff,
      (SELECT SUM(HEADER_CURRENCY_EXT_AMOUNT) HDR_AMT,
            HEADER_ID
        FROM DOO_ORDER_PRICING_DETAILS_V
        WHERE PRICE_ELEMENT_USAGE_CODE in ('LIST_PRICE', 'PRICE_ADJUSTMENT', 'EXCLUSIVE_TAX', 'INCLUSIVE_TAX')
        GROUP BY HEADER_ID ) HDR_AMT                  
 where dha.header_id = dla.header_id
   and dha.header_id = dfla.header_id
   and dla.line_id = dfla.line_id
   and dha.org_id = hou.organization_id
   --and dha.open_flag = 'Y'
   and dha.change_version_number = (select max(dha1.change_version_number)
                                      from doo_headers_all dha1
                                     where dha1.header_id=dha.header_id)
   and dha.status_code NOT IN ('DOO_REFERENCE','CANCELED')  --,'DOO_DRAFT')
   and dha.request_cancel_date is null
   and dha.order_type_code not in ('Sales_Return')
   and hou.organization_id = aa.organization_id
   and dla.inventory_organization_id = esi.organization_id
   and dla.inventory_item_id = esi.inventory_item_id
   and dha.sold_to_party_id = sc.SC_party_id(+)
   and dfla.ship_to_party_site_id = sc.SC_party_site_id(+)
   and dha.header_id = sc.header_id(+)
   and dfla.bill_to_site_use_id = bc.site_use_id(+)
   and dha.legal_entity_id = bank.account_owner_org_id(+)
   and dha.org_id=bank.org_id(+)
   and dha.header_id = hdff.header_id(+)
   and dfla.header_id = ldff.header_id(+)
   and dfla.line_id = ldff.line_id(+)
   and dha.sold_to_party_id = hca.party_id
   and doo_cross_reference.getfulfillmentvalue('TERM_ID','PAYMENT_TERMS',dha.payment_term_id)=n.term_id(+)
   and (nvl(sc.country,'A') in (:p_country) or 'All' in (:p_country || 'All'))
   and (nvl(upper(sc.state),'A') in (:p_state) or 'All' in (:p_state || 'All'))
   and (nvl(sc.city,'A') in (:p_city) or 'All' in (:p_city || 'All'))
   and (sc.party_name in (:p_cust) or 'All' in (:p_cust || 'All'))
   and trunc(dha.ordered_date) >= nvl(:p_from_date, trunc(dha.ordered_date))
   and trunc(dha.ordered_date) <= nvl(:p_to_date, trunc(dha.ordered_date))
   and (hou.organization_id in (:p_org) or 'All' in (:p_org || 'All'))
   and (dfla.status_code in (:p_status) or 'All' in (:p_status || 'All'))
   and (dha.order_type_code in (:p_order_type) or 'All' in (:p_order_type || 'All'))
   and dha.order_number = nvl(:p_pi_no,dha.order_number)
   and (nvl(hca.attribute6,'No') in (:p_jw_cust) or 'All' in (:p_jw_cust || 'All'))
   and (dha.header_id in ( SELECT d.header_id
                            FROM doo_sales_credits d,
                                 ra_salesreps rs
                           WHERE d.salesperson_id = rs.party_id
                             and rs.NAME IN (:p_salesperson) ) or :p_salesperson is null)
   AND DHA.HEADER_ID = HDR_AMT.HEADER_ID          
 order by to_number(dha.order_number) desc
 
 --Q2_DISC
 select header_currency_ext_amount disc_amt,
       fulfill_line_id,
       (select max(qpt.name)
          from qp_pricing_terms_b qpb,
               qp_pricing_terms_tl qpt,
               qp_matrix_rules_vl qmr
         where qpb.pricing_term_id = qpt.pricing_term_id
           and qpt.language = 'US'
           and qpb.attribute_pricing_matrix_id = qmr.dynamic_matrix_id
           and dynamic_matrix_rule_id = pricing_source_id) disc_name
  from doo_order_pricing_details_v
 where 1 = 2
   and price_element_usage_code = 'PRICE_ADJUSTMENT'
 order by fulfill_line_id, order_charge_id, pricing_source_id
 
 --TAX
 SELECT HEADER_ID, Z_TAX ||' '||PERCENTAGE_RATE||'%' IGST_RATE, SUM(IGST_VALUE) IGST_VALUE
  FROM(
  SELECT  DHA.HEADER_ID,
	  (case :v_lang when 'it_IT' then (case when upper(ZR.TAX) = 'VAT_ITALY' then 'IVA_ITALIA' else ZR.TAX end)	
	  when 'pl-PL' then (case when upper(ZR.TAX) = 'VAT_POL' then 'VAT_POL' else ZR.TAX end)
	  else (ZR.TAX)
	  end) Z_TAX, ZR.PERCENTAGE_RATE,
--	  ||' '||ZR.PERCENTAGE_RATE||'%' IGST_RATE,
        (DFL.ORDERED_QTY * DOTD.HDR_CURR_TAX_UNIT_AMT) IGST_VALUE
   FROM DOO_FULFILL_LINES_ALL DFL,
        DOO_ORDER_CHARGES DOO,
        DOO_ORDER_CHARGE_COMPONENTS DOCC,
        DOO_ORDER_TAX_DETAILS DOTD,
        ZX_RATES_B ZR,
        DOO_HEADERS_ALL DHA
  WHERE DFL.FULFILL_LINE_ID = DOO.PARENT_ENTITY_ID
    AND DOO.ORDER_CHARGE_ID = DOCC.ORDER_CHARGE_ID
    AND DOCC.ORDER_CHARGE_COMPONENT_ID = DOTD.ORDER_CHARGE_COMPONENT_ID
    AND DOTD.TAX_RATE_ID = ZR.TAX_RATE_ID
   and dha.change_version_number = (select max(dha1.change_version_number)
                                      from doo_headers_all dha1
                                     where dha1.header_id=dha.header_id)
   and dha.status_code NOT IN ('DOO_REFERENCE','CANCELED'/*,'DOO_DRAFT'*/)
   and dha.request_cancel_date is null
   and dha.order_type_code not in ('Sales_Return')
    AND DHA.HEADER_ID = DFL.HEADER_ID
--    and nvl(:SHIP_COUNTRY,'A') = NVL(:EXP_COUNTRY,'A')
) DT
    GROUP BY HEADER_ID, Z_TAX ||' '||PERCENTAGE_RATE||'%'

--CHARGES
select header_id, 
(case :v_lang 
when 'it_IT' then 'Spese di trasporto'
when 'pl-PL' then 'Koszty transportu' 
else 'Freight charges' 
end) tax_rate,
       to_number(attribute_number4) freight_charges
  from doo_headers_eff_b
 where context_code='ExportsChargesDiscount'
-- and nvl(:SHIPTO_COUNTRY,'A') = NVL(:CONSIGNEE_COUNTRY,'A')
AND NVL(attribute_number4,0) > 0
union all
select header_id, 
(case :v_lang 
when 'it_IT' then 'Spese di documentazione' 
when 'pl-PL' then 'Opłaty za dokumentację' 
else 'Documentation charges' 
end) tax_rate,
       to_number(attribute_number6) document_charges
  from doo_headers_eff_b
 where context_code='ExportsChargesDiscount'
-- and nvl(:SHIPTO_COUNTRY,'A') = NVL(:CONSIGNEE_COUNTRY,'A')
AND NVL(attribute_number6,0) > 0
union all
select header_id, 
(case :v_lang 
when 'it_IT' then 'Spese assicurative'
when 'pl-PL' then 'Opłaty ubezpieczeniowe' 
else 'Insurance charges' 
end) tax_rate,
       to_number(attribute_number5) insurance_charges
  from doo_headers_eff_b
 where context_code='ExportsChargesDiscount'
-- and nvl(:SHIPTO_COUNTRY,'A') = NVL(:CONSIGNEE_COUNTRY,'A')
AND NVL(attribute_number5,0) > 0
union all
select header_id, 
(case :v_lang 
when 'it_IT' then 'Spese di ispezione' 
when 'pl-PL' then 'Opłaty inspekcyjne' 
else 'Inspection charges' 
end) tax_rate,
       to_number(attribute_number7) inspection_charges
  from doo_headers_eff_b
 where context_code='ExportsChargesDiscount'
-- and nvl(:SHIPTO_COUNTRY,'A') = NVL(:CONSIGNEE_COUNTRY,'A')
AND NVL(attribute_number7,0) > 0
union all
select header_id, 
(case :v_lang 
when 'it_IT' then 'Spese di installazione' 
when 'pl-PL' then 'Opłaty instalacyjne' 
else 'Installation charges' 
end) tax_rate,
       to_number(attribute_number8) inspection_charges
  from doo_headers_eff_b
 where context_code='ExportsChargesDiscount'
-- and nvl(:SHIPTO_COUNTRY,'A') = NVL(:CONSIGNEE_COUNTRY,'A')
AND NVL(attribute_number8,0) > 0
--------------------------------------JAQ_Customer_Statement_Report_DM---------------------------------

--Customer
SELECT 
       (SELECT hou.NAME
                 FROM hr_operating_units hou
                WHERE organization_id = RCTA.org_id)   OU_NAME,
 (SELECT  (        hla.address_line_1
                || ' '
                || hla.address_line_2
                || ' '
                || hla.address_line_3
                || ' '
                || hla.address_line_4
                || ' '
                || hla.town_or_city
                || ' '
                || hla.region_1
                || ' '
                || hla.region_2 
               ) addd 
            FROM hr_locations_all hla, hr_all_organization_units hrou
           WHERE     1 = 1
                 AND hrou.organization_id = RCTA.org_id
                 AND hla.location_id = hrou.location_id)
          || ' '||(SELECT ft.territory_short_name
            FROM fnd_territories_vl ft,
                 hr_locations_all hrl,
                 hr_all_organization_units hrou
           WHERE     1 = 1
                 AND hrl.country = ft.territory_code
                 AND hrou.organization_id = RCTA.org_id
                 AND hrl.location_id = hrou.location_id)
         || ' '||(SELECT postal_code
            FROM hr_locations_all hrl, hr_all_organization_units hrou
           WHERE     1 = 1
                 AND hrou.organization_id = RCTA.org_id
                 AND hrl.location_id = hrou.location_id) OU_ADDR,
       rcta.trx_number,
       to_char(rcta.trx_date,'DD/MM/YYYY') trx_date,
       rcta.INVOICE_CURRENCY_CODE CURRENCY_CODE,
       NVL(rcta.EXCHANGE_RATE,1) EXCHANGE_RATE,
       hca.account_number customer_number,
       hp.party_name customer_name,
       trx_amount.extended_amount INVOICE_AMOUNT,
       araa.AMOUNT_APPLIED RECEIPT_AMT,
	   (trx_amount.extended_amount-araa.AMOUNT_APPLIED ) Short_Excess,
	   araa.receipt_date,
       rctt.TYPE,
	   to_char(apsa.due_date,'DD/MM/YYYY') due_date,
	   null extra_day --multiple recepts dates ?
	   
FROM 

     hz_parties hp,
     hz_cust_accounts hca,
     ra_customer_trx_all rcta,
	 RA_CUST_TRX_TYPES_ALL rctt,
     ar_payment_schedules_all apsa,
	 (select  araa.applied_customer_trx_id,sum(araa.amount_applied) amount_applied,
       LISTAGG(distinct to_char(araa.APPLY_DATE,'DD/MM/YYYY'), ' / ') WITHIN GROUP (ORDER BY to_char(araa.APPLY_DATE,'DD/MM/YYYY')) receipt_date
	  from 
      ar_cash_receipts_all acra,
      ar_receivable_applications_all araa
	  where 1=1 
	  --and araa.applied_customer_trx_id = rcta.customer_trx_id
      AND acra.cash_receipt_id = araa.cash_receipt_id
	  --and araa.applied_customer_trx_id=81066
	  group by araa.applied_customer_trx_id
	   ) araa,
	   (SELECT rctla.customer_trx_id ,SUM (rctla.extended_amount) extended_amount
        FROM ra_customer_trx_lines_all rctla
		group by rctla.customer_trx_id 
		) trx_amount
		
WHERE 1 = 1

      AND hp.party_id = hca.party_id
      AND rcta.bill_to_customer_id = hca.cust_account_id
      AND rcta.customer_trx_id = apsa.customer_trx_id
      AND araa.applied_customer_trx_id = rcta.customer_trx_id
      --AND rcta.trx_number = '2122705200000279'
	  AND rctt.cust_trx_type_seq_id = RCTa.cust_trx_type_seq_id
	  AND (rcta.org_id IN ( :p_org_name) OR 'All' IN ( :p_org_name || 'All')) 
      AND apsa.gl_date <= :p_end_date
	  AND (hp.party_id in (:P_PARTY_NAME) or 'All' in (:P_PARTY_NAME || 'All'))
      AND (RCTa.INVOICE_CURRENCY_CODE IN (:P_CURR) OR 'All' IN (:P_CURR || 'All'))
	  and trx_amount.customer_trx_id=rcta.customer_trx_id
	  
UNION 	  
	 
	 
select 
 (SELECT hou.NAME
                 FROM hr_operating_units hou
                WHERE organization_id = acra.org_id)   OU_NAME,
 (SELECT  (   hla.address_line_1
                || ' '
                || hla.address_line_2
                || ' '
                || hla.address_line_3
                || ' '
                || hla.address_line_4
                || ' '
                ||hla.town_or_city
                || ' '
                || hla.region_1
                || ' '
                || hla.region_2 
               ) addd 
            FROM hr_locations_all hla, hr_all_organization_units hrou
           WHERE     1 = 1
                 AND hrou.organization_id = acra.org_id
                 AND hla.location_id = hrou.location_id)
          || ' '||(SELECT ft.territory_short_name
            FROM fnd_territories_vl ft,
                 hr_locations_all hrl,
                 hr_all_organization_units hrou
           WHERE     1 = 1
                 AND hrl.country = ft.territory_code
                 AND hrou.organization_id = acra.org_id
                 AND hrl.location_id = hrou.location_id)
         || ' '||(SELECT postal_code
            FROM hr_locations_all hrl, hr_all_organization_units hrou
           WHERE     1 = 1
                 AND hrou.organization_id = acra.org_id
                 AND hrl.location_id = hrou.location_id) OU_ADDR,
				 null trx_number,--acra.RECEIPT_NUMBER trx_number,
				 null trx_date,--to_char(acra.receipt_date,'DD/MM/YYYY') trx_date,
				 acra.CURRENCY_CODE,
				 NVL(acra.EXCHANGE_RATE,1) EXCHANGE_RATE,
				 HCA.account_number customer_number,
				 hp.party_name customer_name,
				 0 INVOICE_AMOUNT,
				 acra.amount RECEIPT_AMT,
				 (0-acra.amount) Short_Excess,
				 to_char(acra.receipt_date,'DD/MM/YYYY') receipt_date,
				 acra.TYPE,
				to_char(apsa.due_date,'DD/MM/YYYY') due_date,
				null extra_day
				 
FROM 

 ar_cash_receipts_all acra,
 ar_receivable_applications_all arra, 
 ar_payment_schedules_all apsa,
 HZ_CUST_ACCOUNTS HCA,
 HZ_PARTIES HP
 
WHERE acra.status  in ('APP', 'UNAPP')
AND acra.cash_receipt_id=arra.cash_receipt_id
AND acra.cash_receipt_id=apsa.cash_receipt_id
  	  AND (acra.org_id IN ( :p_org_name) OR 'All' IN ( :p_org_name || 'All')) 
      AND apsa.gl_date <= :p_end_date
AND (acra.CURRENCY_CODE IN (:P_CURR) OR 'All' IN (:P_CURR || 'All'))	  
--AND (hp.party_id in (:P_PARTY_NAME) or 'All' in (:P_PARTY_NAME || 'All'))
AND ACRA.PAY_FROM_CUSTOMER = HCA.CUST_ACCOUNT_ID
AND HCA.PARTY_ID = HP.PARTY_ID
 AND (hp.party_id in (:P_PARTY_NAME) or 'All' in (:P_PARTY_NAME || 'All'))
--------------------------------UCAL AR Invoice DM----------------------------------------
---Headers-----
/* Formatted on 10/08/2021 2:46:38 PM (QP5 v5.163.1008.3004) */
select case
          when upper (hp_bill.party_name) like '%BAJAJ%'
          then
             'BAJAJ-INVOICE'
          when upper (hp_bill.party_name) like '%HYUNDAI%'
          then
             'HYUNDAI-INVOICE'
          when upper (hp_bill.party_name) like '%TVS%'
          then
             'TVS-INVOICE'
          when upper (hp_bill.party_name) like '%TATA%'
          then
             'TATA-INVOICE'
          when upper (hp_bill.party_name) like '%HERO%'
          then
             'HERO-INVOICE'
          when upper (rctt.attribute1) = 'SUPPLEMENTARY'
          then
             'SUPPLEMENTARY-INVOICE'
          when upper (rctt.attribute1) = 'CG'
          then
             'CG-INVOICE'
          when upper (rctt.attribute1) = 'SCRAP'
          then
             'SCRAP-INVOICE'
          else
             'REGULAR-INVOICE'
       end
          inv_category,
       rcta.customer_trx_id,
       hca_bill.party_id,
       rcta.trx_number invoice_number,
       to_char (rcta.trx_date, 'DD-MON-RRRR', 'NLS_DATE_LANGUAGE = AMERICAN')
          invoice_date,
       xle.name legal_entity_name,
       hrl.address_line_1 io_address1,
       hrl.address_line_2 io_address2,
       hrl.address_line_3 io_address3,
       hrl.address_line_4 io_address4,
       hrl.town_or_city io_city,
       flv_bst.description || '-' || hrl.region_2 io_state, --added 19/4   flv_bst.DESCRIPTION||'-'||
       hrl.postal_code io_postal_code,
       hrl.country io_country,
       xle.legal_entity_identifier org_cin_no,
       to_char (systimestamp at time zone 'Asia/Calcutta',
                'DD-MON-RRRR',
                'NLS_DATE_LANGUAGE = AMERICAN')
          date_of_removal,
       to_char (systimestamp at time zone 'Asia/Calcutta', 'HH24:MI')
          time_of_removal,
       rctd.attribute1 org_gstin,
       substr (rctd.attribute1, 1, 2) org_state_code,
       (select reg.registration_number
          from xle_registrations reg, xle_jurisdictions_b jur
         where     reg.source_id = xle.legal_entity_id
               and reg.source_table = 'XLE_ENTITY_PROFILES'
               and jur.jurisdiction_id = reg.jurisdiction_id
               and jur.registration_code_le = 'PAN')
          org_pan_number,
       hp_bill.party_name buyer_name,
       hl_bill.address1 buyer_address1,
       hl_bill.address2 buyer_address2,
       hl_bill.address3 buyer_address3,
       hl_bill.address4 buyer_address4,
       hl_bill.state buyer_state_name,
       hl_bill.city buyer_city,
       hl_bill.postal_code buyer_postal_code,
       buyer_reg.registration_number buyer_gstin,
       flv_bst.description buyer_state_code,
       nvl (hp_ship.party_name, hp_bill.party_name) ship_to_name,
       nvl (hl_ship.address1, hl_bill.address1) ship_to_address1,
       nvl (hl_ship.address2, hl_bill.address2) ship_to_address2,
       nvl (hl_ship.address3, hl_bill.address3) ship_to_address3,
       nvl (hl_ship.address4, hl_bill.address4) ship_to_address4,
       nvl (hl_ship.city, hl_bill.city) ship_to_city,
       nvl (hl_ship.state, hl_bill.state) ship_to_state,
       nvl (hl_ship.postal_code, hl_bill.postal_code) ship_to_postal_code,
       nvl (ship_to_reg.registration_number, buyer_reg.registration_number)
          ship_to_gstin,
       nvl (flv_sst.description, flv_bst.description) ship_to_state_code,
       case
          when interface_header_context = 'DOO'
          then
             rcta.interface_header_attribute4
          else
             rctt.name
       end
          order_type,
       (select zre.extn_attribute_char006
          from mkt_ref_entities zre
         where zre.attribute_category = 'UCALCustomerVendorCode_c'
               and zre.extn_attribute_char001 =
                      to_char (hps_bill.party_site_number)
               and zre.extn_attribute_char002 = rctd.organization_code)
          vendor_code,
       nvl(rcta.purchase_order,rcta.attribute9) order_reference,
       nvl(wsh.transporter,psv_e.vendor_name) carrier,
       nvl(wsh.attribute2,rcta.attribute2) mode_of_transport,
       nvl(wsh.attribute3,rcta.attribute1) vehicle_no,
       case when wsh.customer_trx_id is null then
       rcta.attribute3 || ' ' || rcta.attribute4
       else
       wsh.attribute_number3 || ' ' || wsh.attribute4 end packing_details,
        (select distinct extn_attribute_char011
          from moo_ref_entities mre
         where     1 = 1
               and attribute_category = 'UCALEInvoicing_c'
               and mre.extn_attribute_char008 = rcta.trx_number
                and trunc(mre.extn_attribute_timestamp002)=trunc(rcta.trx_date)
                and mre.extn_attribute_char009='INV'
                and mre.extn_attribute_char012 is not null ) lr_rrr_air_no,
       (select distinct to_char(extn_attribute_timestamp003, 'DD-MON-RRRR', 'NLS_DATE_LANGUAGE = AMERICAN')
          from moo_ref_entities mre
         where     1 = 1
               and attribute_category = 'UCALEInvoicing_c'
               and mre.extn_attribute_char008 = rcta.trx_number
                and trunc(mre.extn_attribute_timestamp002)=trunc(rcta.trx_date)
                and mre.extn_attribute_char009='INV'
                and mre.extn_attribute_char012 is not null ) lr_rrr_air_date,
       nvl (hl_ship.state, hl_bill.state) place_of_delivery,
       rctd.attribute3 insurance_policy_no,
       rctd.insurance_policy_date insurance_date,
       null insured_for,
       null insurance_serial_no,
       nvl (
          wsh.attribute6,
          (select note.note_txt
             from zmm_notes note
            where note.source_object_code = 'AR_TRANSACTION'
                  and rcta.customer_trx_id = note.source_object_uid))
          remarks,
       wsh.attribute5 freight,
       null freight_amount,
       null recieved_date,
       null mrir_no,
       null received_qty,
       null rejection_qty,
       null rejection_code,
       null checked_by,
       null cardex_entry,
       null inspect_qty,
       null rejection,
       null reason_code,
       null qc_charge,
       null accept_qty,
       null place,
       null place_date,
       null place_time,
       (select distinct extn_attribute_char008
          from zca_ref_entities
         where     attribute_category = 'UCALEDIASN_c'
               and extn_attribute_char006 = rctd.organization_code
               and extn_attribute_char007 = rcta.trx_number )
          asn_number,
      (select distinct extn_attribute_char012 irn
          from moo_ref_entities mre
         where     1 = 1
               and attribute_category = 'UCALEInvoicing_c'
               and mre.extn_attribute_char008 = rcta.trx_number
                and trunc(mre.extn_attribute_timestamp002)=trunc(rcta.trx_date)
                and mre.extn_attribute_char009='INV'
                and mre.extn_attribute_char012 is not null )
          irn_number,
       (select extn_attribute_clob002 irn
          from moo_ref_entities mre
         where     1 = 1
               and attribute_category = 'UCALEInvoicing_c'
               and mre.extn_attribute_char008 = rcta.trx_number
               and trunc(mre.extn_attribute_timestamp002)=trunc(rcta.trx_date)
               and mre.extn_attribute_char009='INV'
               and mre.extn_attribute_char012 is not null and rownum=1)
          qr_code,
       rctd.total_amount*nvl(rcta.exchange_rate,1) total_amount,
       regexp_replace (
          iby_amount_in_words.get_amount_in_words (rctd.total_amount,
                                                   'INR',
                                                   2),
          '\*| And  Zero Paise|^And ',
          null)
          total_amount_in_words,
       nvl(igst.tax_amount,0) total_igst,
       regexp_replace (
          iby_amount_in_words.get_amount_in_words (nvl (igst.tax_amount, 0),
                                                   'INR',
                                                   2),
          '\*| And  Zero Paise|^And ',
          null)
          igst_amount_in_words,
       nvl(cgst.tax_amount,0) total_cgst,
       regexp_replace (
          iby_amount_in_words.get_amount_in_words (nvl (cgst.tax_amount, 0),
                                                   'INR',
                                                   2),
          '\*| And  Zero Paise|^And ',
          null)
          cgst_amount_in_words,
       nvl(sgst.tax_amount,0) total_sgst,
       regexp_replace (
          iby_amount_in_words.get_amount_in_words (nvl (sgst.tax_amount, 0),
                                                   'INR',
                                                   2),
          '\*| And  Zero Paise|^And ',
          null)
          sgst_amount_in_words,
      nvl( tcs.tax_amount,0) total_tcs,
       regexp_replace (
          iby_amount_in_words.get_amount_in_words (nvl (tcs.tax_amount, 0),
                                                   'INR',
                                                   2),
          '\*| And  Zero Paise|^And ',
          null)
          tcs_amount_in_words,
       rctd.total_amount*nvl(rcta.exchange_rate,1)
       - (  nvl (igst.tax_amount, 0)
          + nvl (cgst.tax_amount, 0)
          + nvl (sgst.tax_amount, 0)
          + nvl (tcs.tax_amount, 0))
          total_material_value,
       regexp_replace (
          iby_amount_in_words.get_amount_in_words (
             nvl (
                rctd.total_amount
                - (  nvl (igst.tax_amount, 0)
                   + nvl (cgst.tax_amount, 0)
                   + nvl (sgst.tax_amount, 0)
                   + nvl (tcs.tax_amount, 0)),
                0),
             'INR',
             2),
          '\*| And  Zero Paise|^And ',
          null)
          total_material_value_in_words,
       rcta.invoice_currency_code,
       'SI:' || rctd.organization_code || ':' || rcta.trx_number trx_qr_code,
       (select    distinct psv.vendor_name
       || chr (13)
       || hl.address1
       || ', '
       || hl.address2
       || chr (13)
       || hl.city
       || ' PIN - '
       || hl.postal_code
       || chr (13)
       || 'GSTN:'
       || zr.registration_number
       || ' STATE CODE:'
       || flv.description ship_from
  from ra_customer_trx_lines_all rctal,
       doo_document_references ddr,
       po_headers_all ph,
       poz_supplier_sites_all_m pssm,
       hz_locations hl,
       poz_suppliers_v psv,
       zx_party_tax_profile zptp,
       zx_registrations zr,
       fnd_lookup_values flv
 where     1 = 1
       and flv.lookup_type(+) = 'HRX_IN_STATES'
       and upper (flv.meaning(+)) = upper (hl.state)
       and zr.party_tax_profile_id(+) = zptp.party_tax_profile_id
       and (zr.effective_to is null or zr.effective_to > sysdate)
       and zr.tax_regime_code(+) like '%GST%'
       and zptp.party_id(+) = pssm.party_site_id
       and psv.vendor_id = ph.vendor_id
       and hl.location_id = pssm.location_id
       and pssm.vendor_site_id = ph.vendor_site_id
       and ph.po_header_id = ddr.doc_id
       and rctal.interface_line_attribute5 = to_char (ddr.fulfill_line_id)
       and rctal.customer_trx_id = rcta.customer_trx_id
       and ddr.doc_ref_type = 'DROPSHIP_PO_REFERENCE'
       ) ship_from
  from ra_customer_trx_all rcta,
       hr_operating_units hou,
       (  select rctd.customer_trx_id,
                 iop.organization_id,
                 iop.organization_code,
                 iop.legal_entity_id,
                 iop.attribute1,
                 iop.attribute3,
                  to_char (iop.attribute_date1, 'DD-MON-RRRR', 'NLS_DATE_LANGUAGE = AMERICAN') insurance_policy_date,
                 sum (amount) total_amount
            from ra_cust_trx_line_gl_dist_all rctd,
                 gl_code_combinations gcc,
                 inv_org_parameters iop,
                 xla_mapping_set_values xmsv
           where     1 = 1
                 and gcc.segment2 = xmsv.value_constant
                 and xmsv.input_value_constant1 = to_char (iop.organization_id)
                 and xmsv.enabled_flag = 'Y'
                 and xmsv.mapping_set_code = 'UFSL_INV_LOC_CST'
                 and gcc.code_combination_id = rctd.code_combination_id
                 and rctd.account_class = 'REC'
        group by rctd.customer_trx_id,
                 iop.organization_id,
                 iop.organization_code,
                 iop.legal_entity_id,
                 iop.attribute1,
                 iop.attribute3,
                 to_char (iop.attribute_date1, 'DD-MON-RRRR', 'NLS_DATE_LANGUAGE = AMERICAN')) rctd,
       hr_organization_units ood,
       xle_entity_profiles xle,
       hr_locations hrl,
       hz_cust_accounts hca_bill,
       hz_parties hp_bill,
       ra_cust_trx_types_all rctt,
       hz_cust_site_uses_all hcsu_bill,
       hz_cust_acct_sites_all hcas_bill,
       hz_party_sites hps_bill,
       hz_locations hl_bill,
       (select zr.registration_number, zptp.party_id
          from zx_party_tax_profile zptp, zx_registrations zr
         where     1 = 1
               and zptp.party_tax_profile_id = zr.party_tax_profile_id
               and zr.tax_regime_code like '%GST%'          -- added 21/4/2021
               and zptp.party_type_code = 'THIRD_PARTY_SITE'
               and zptp.customer_flag = 'Y'
               and (zr.effective_to is null or zr.effective_to > sysdate)) buyer_reg,
       hz_cust_accounts hca_ship,
       hz_parties hp_ship,
--       hz_cust_site_uses_all hcsu_ship,
hz_party_site_uses hcsu_ship,
       hz_cust_acct_sites_all hcas_ship,
       hz_party_sites hps_ship,
       hz_locations hl_ship,
       (select zr.registration_number, zptp.party_id
          from zx_party_tax_profile zptp, zx_registrations zr
         where     1 = 1
               and zptp.party_tax_profile_id = zr.party_tax_profile_id
               and zr.tax_regime_code like '%GST%'
               and zptp.party_type_code = 'THIRD_PARTY_SITE'
               and zptp.customer_flag = 'Y'
               and (zr.effective_to is null or zr.effective_to > sysdate)) ship_to_reg,
       fnd_lookup_values flv_bst,
       fnd_lookup_values flv_sst,
       (select distinct wnd.attribute1,
                        wnd.attribute2,
                        wnd.attribute3,
                        wnd.attribute4,
                        wnd.attribute5,
                        wnd.attribute6,
                        wnd.attribute_number3,
                        psv.vendor_name transporter,
                        rctla.customer_trx_id
          from wsh_new_deliveries wnd,
               ra_customer_trx_lines_all rctla,
               poz_supplier_sites_all_m pssm,
               poz_suppliers_v psv
         where     1 = 1
               and psv.vendor_id(+) = pssm.vendor_id
               and pssm.vendor_site_id(+) = wnd.attribute_number1
               and to_char (wnd.delivery_id) =
                      rctla.interface_line_attribute7) wsh,
       (  select trx_id, sum (unrounded_tax_amt) tax_amount
            from zx_lines
           where     entity_code = 'TRANSACTIONS'
                 and tax like '%IGST%'
                 and application_id = 222
        group by trx_id) igst,
       (  select trx_id, sum (unrounded_tax_amt) tax_amount
            from zx_lines
           where     entity_code = 'TRANSACTIONS'
                 and tax like '%CGST%'
                 and application_id = 222
        group by trx_id) cgst,
       (  select trx_id, sum (unrounded_tax_amt) tax_amount
            from zx_lines
           where     entity_code = 'TRANSACTIONS'
                 and tax like '%SGST%'
                 and application_id = 222
        group by trx_id) sgst,
       (  select trx_id, sum (unrounded_tax_amt) tax_amount
            from zx_lines
           where     entity_code = 'TRANSACTIONS'
                 and tax like '%TCS%'
                 and application_id = 222
        group by trx_id) tcs,
        poz_supplier_sites_all_m pssm_e,
       poz_suppliers_v psv_e
 where     1 = 1
   and psv_e.vendor_id(+) = pssm_e.vendor_id
       and to_char (pssm_e.vendor_site_id(+)) = rcta.attribute6
       and rcta.customer_trx_id = tcs.trx_id(+)
       and rcta.customer_trx_id = sgst.trx_id(+)
       and rcta.customer_trx_id = cgst.trx_id(+)
       and rcta.customer_trx_id = igst.trx_id(+)
       and upper (hl_ship.state) = upper (flv_sst.meaning(+))
       and flv_sst.lookup_type(+) = 'UCAL_IN_STATE_CODES'
       and flv_sst.enabled_flag(+) = 'Y'
       and upper (hl_bill.state) = upper (flv_bst.meaning(+))
       and flv_bst.lookup_type(+) = 'UCAL_IN_STATE_CODES'
       and flv_bst.enabled_flag(+) = 'Y'
       and rctt.cust_trx_type_seq_id = rcta.cust_trx_type_seq_id
       and hps_ship.party_site_id = ship_to_reg.party_id(+)
       and hps_bill.party_site_id = buyer_reg.party_id(+)
       and hl_ship.location_id(+) = hps_ship.location_id
       and hps_ship.party_site_id(+) = hcas_ship.party_site_id
       and hcas_ship.party_site_id(+) = hcsu_ship.party_site_id
       and hcsu_ship.party_site_use_id(+) = rcta.ship_to_party_site_use_id
       and hca_ship.party_id = hp_ship.party_id(+)
       and hca_ship.party_id(+) = rcta.ship_to_party_id
       and hl_bill.location_id = hps_bill.location_id
       and hps_bill.party_site_id = hcas_bill.party_site_id
       and hcas_bill.cust_acct_site_id = hcsu_bill.cust_acct_site_id
       and hcsu_bill.site_use_id = rcta.bill_to_site_use_id
       and hca_bill.party_id = hp_bill.party_id
       and hca_bill.cust_account_id = rcta.bill_to_customer_id
       and hrl.location_id = ood.location_id
       and xle.legal_entity_id = rctd.legal_entity_id
       and rctd.organization_id = ood.organization_id
       and rcta.customer_trx_id = rctd.customer_trx_id
       and rcta.org_id = hou.organization_id
       and rctt.type = 'INV'
       and rcta.customer_trx_id = wsh.customer_trx_id(+)
       and rcta.trx_date between nvl (:p_invoice_date_low, rcta.trx_date)
                             and nvl (:p_invoice_date_high, rcta.trx_date)
       and rcta.trx_number between nvl (:p_invoice_number_low,
                                        rcta.trx_number)
                               and nvl (:p_invoice_number_high,
                                        rcta.trx_number)
       and rctd.organization_code = :p_organization_code
       /*AND ( ( (rcta.trx_number,
                rcta.trx_date,
                (CASE
                    WHEN rctt.TYPE = 'INV' THEN 'INV'
                    WHEN rctt.TYPE = 'DM' THEN 'DBN'
                    WHEN rctt.TYPE = 'CM' THEN 'CRN'
                 END)) IN
                 (SELECT extn_attribute_char008,
                         extn_attribute_timestamp002,
                         extn_attribute_char009
                    FROM moo_ref_entities
                   WHERE     1 = 1
                         AND attribute_category = 'UCALEInvoicing_c'
                         AND extn_attribute_char012 IS NOT NULL))
            OR NVL (buyer_reg.registration_number, 'UNREGISTERED') =
                  'UNREGISTERED')*/ -- commented temporiraly
				  
--lines----


SELECT rctal.customer_trx_id,
       hca.party_id,
       esi.inventory_item_id,
       esi.organization_id,
       rctal.customer_trx_line_id,
       rctal.line_number sl_no,
       esi.item_number,
       NVL (
          (SELECT ep.tp_item_number
             FROM egp_trading_partner_items ep, egp_item_relationships_b eir
            WHERE     ep.tp_item_id = eir.tp_item_id
                  AND eir.inventory_item_id = esi.inventory_item_id
                  AND ep.tp_type = 'CUSTOMER'
                  AND ep.trading_partner_id = hca.party_id
                  AND (eir.end_date_active IS NULL
                       OR TRUNC (eir.end_date_active) > TRUNC (SYSDATE))
                  AND ROWNUM = 1),
          esi.item_number)
          part_no,
       SUBSTR (NVL (esi.description, rctal.description), 1, 30)
          description_of_goods,
       NVL (rctal.attribute1, esi.hsn_or_sac) hsn_of_goods,
       rctal.uom_code unit_uqc,
       NVL (rctal.quantity_invoiced, rctal.quantity_credited) quantity,
       (rctal.unit_selling_price * NVL(RCT.EXCHANGE_RATE,1)) rate_price,
       zldf.assessable_value,
       (rctal.quantity_invoiced * (rctal.unit_selling_price * NVL(RCT.EXCHANGE_RATE,1)))
       * NVL (rctal.tax_rate, 1)
          total_base_amount,
       NVL (cgst.cgst_rate, 0) cgst_rate,
       NVL (cgst.cgst_amount, 0) cgst_amount,
       NVL (sgst.sgst_rate, 0) sgst_rate,
       NVL (sgst.sgst_amount, 0) sgst_amount,
       NVL (igst.igst_rate, 0) igst_rate,
       NVL (igst.igst_amount, 0) igst_amount,
       NVL (tcs.tcs_rate, 0) tcs_rate,
       NVL (tcs.tcs_amount, 0) tcs_amount,
       0 gst_compensation_rate,
       0 gst_compensation_amount,
         (rctal.extended_amount * NVL(RCT.EXCHANGE_RATE,1))
       + NVL (sgst.sgst_amount, 0)
       + NVL (sgst.sgst_amount, 0)
       + NVL (cgst.cgst_amount, 0)
       + NVL (igst.igst_amount, 0)
       + NVL (tcs.tcs_amount, 0)
          total_amount_inc_tax,
         (rctal.quantity_invoiced * (rctal.1_selling_price * NVL(RCT.EXCHANGE_RATE,1)))
       + NVL (sgst.sgst_amount, 0)
       + NVL (cgst.cgst_amount, 0)
       + NVL (igst.igst_amount, 0)
       + NVL (tcs.tcs_amount, 0)
          tot_inv_bar,
       (rctal.quantity_invoiced * (rctal.unit_selling_price * NVL(RCT.EXCHANGE_RATE,1))) cf_tot_am,
       (zldf.assessable_value
        / NVL (rctal.quantity_invoiced, rctal.quantity_credited))
          assrate,
       (rctal.extended_amount * NVL(RCT.EXCHANGE_RATE,1)) VALUE
  FROM ra_customer_trx_lines_all rctal,
       ra_customer_trx_all rct,
       hz_cust_accounts hca,
       (SELECT DISTINCT rctd.customer_trx_id, iop.organization_id
          FROM ra_cust_trx_line_gl_dist_all rctd,
               gl_code_combinations gcc,
               inv_org_parameters iop,
               xla_mapping_set_values xmsv
         WHERE     1 = 1
               AND gcc.segment2 = xmsv.value_constant
               AND xmsv.input_value_constant1 = TO_CHAR (iop.organization_id)
               AND xmsv.enabled_flag = 'Y'
               AND xmsv.mapping_set_code = 'UFSL_INV_LOC_CST'
               AND gcc.code_combination_id = rctd.code_combination_id
               AND rctd.account_class = 'REC') rctd,
       (SELECT esib.organization_id,
               esib.inventory_item_id,
               esib.item_number,
               REGEXP_REPLACE (esit.description, '[^[:alnum:]'' '']', '')
                  description,
               eieb.attribute_char1 hsn_or_sac
          FROM egp_system_items_tl esit,
               egp_system_items_b esib,
               ego_item_eff_b eieb,
               inv_org_parameters iop
         WHERE     1 = 1
               AND iop.organization_id = esit.organization_id
               AND eieb.context_code(+) = 'UCAL Attributes'
               AND iop.master_organization_id = eieb.organization_id(+)
               AND esib.inventory_item_id = eieb.inventory_item_id(+)
               AND esit.organization_id = esib.organization_id
               AND esib.inventory_item_id = esit.inventory_item_id) esi,
       (SELECT DISTINCT trx_id,
                        trx_line_id,
                        unrounded_tax_amt igst_amount,
                        tax_rate igst_rate,
                        unrounded_taxable_amt igst_taxable
          FROM zx_lines
         WHERE     entity_code = 'TRANSACTIONS'
               AND tax LIKE '%IGST%'
               AND application_id = 222) igst,
       (SELECT DISTINCT trx_id,
                        trx_line_id,
                        unrounded_tax_amt cgst_amount,
                        tax_rate cgst_rate,
                        unrounded_taxable_amt cgst_taxable
          FROM zx_lines
         WHERE     entity_code = 'TRANSACTIONS'
               AND tax LIKE '%CGST%'
               AND application_id = 222) cgst,
       (SELECT DISTINCT trx_id,
                        trx_line_id,
                        unrounded_tax_amt sgst_amount,
                        tax_rate sgst_rate,
                        unrounded_taxable_amt sgst_taxable
          FROM zx_lines
         WHERE     entity_code = 'TRANSACTIONS'
               AND tax LIKE '%SGST%'
               AND application_id = 222) sgst,
       (SELECT DISTINCT trx_id,
                        trx_line_id,
                        unrounded_tax_amt tcs_amount,
                        tax_rate tcs_rate,
                        unrounded_taxable_amt tcs_taxable
          FROM zx_lines
         WHERE     entity_code = 'TRANSACTIONS'
               AND tax LIKE '%TCS%'
               AND application_id = 222) tcs,
       zx_lines_det_factors zldf
 WHERE     1 = 1
       AND rctal.customer_trx_id = zldf.trx_id(+)
       AND rctal.customer_trx_line_id = zldf.trx_line_id(+)
       AND zldf.entity_code(+) = 'TRANSACTIONS'
       AND rctal.customer_trx_id = tcs.trx_id(+)
       AND rctal.customer_trx_line_id = tcs.trx_line_id(+)
       AND rctal.customer_trx_id = igst.trx_id(+)
       AND rctal.customer_trx_line_id = igst.trx_line_id(+)
       AND rctal.customer_trx_id = sgst.trx_id(+)
       AND rctal.customer_trx_line_id = sgst.trx_line_id(+)
       AND rctal.customer_trx_id = cgst.trx_id(+)
       AND rctal.customer_trx_line_id = cgst.trx_line_id(+)
       AND esi.inventory_item_id(+) = rctal.inventory_item_id
       AND esi.organization_id(+) = rctd.organization_id
       AND rct.customer_trx_id = rctd.customer_trx_id
       AND rctal.line_type = 'LINE'
       AND hca.cust_account_id = rct.bill_to_customer_id
       AND rct.customer_trx_id = rctal.customer_trx_id
	   
	   -------------HyundaiQR-----------
	   /* Formatted on 20/08/2021 12:19:42 PM (QP5 v5.163.1008.3004) */
  SELECT (   'ED'
          || TRIM (purchase_order)
          || TRIM (ordered_item)
          || chr(10)
          || TRIM (trx_number)
          || chr(9)
          || TRIM (trx_date)
          || TRIM (TO_CHAR (SUM (qty)))
          || chr(9)
          || TRIM (TO_CHAR ( (SUM (amount)), '99999999999999.99'))
          || TRIM (chr(9))
          || TRIM (attribute_char1)
          || '0.00'
          || TRIM (chr(9))
          || SUM (sgst)
          || TRIM (chr(9))
          || '0.00'
          || TRIM (chr(9))
          || SUM (g)
          || chr(9)
          || TRIM (unit_selling)
          || chr(9)
          || TRIM (SUM (invoice_amount))
          || chr(9)
          || SUM (cgst)
          || TRIM (chr(9))
          || '0.00'
          || TRIM (chr(9))
          || '0.00'
          || TRIM (chr(9))
          || '0.00'
          || TRIM (chr(9))
          || '0.00'
          || TRIM (chr(9))
          || '0.00'
          || TRIM (chr(9))
          || '0.00'
          || TRIM (chr(9))
          || TRIM (cus_gst)
          || TRIM (chr(9))
          || '0.00'
          || TRIM (chr(9))
          || TRIM (irn)
          || TRIM (chr(9)))
            hyundai_qr_code,
         customer_trx_id
    FROM (  SELECT (rct.purchase_order),
                   (SELECT ep.tp_item_number
                      FROM egp_trading_partner_items ep,
                           egp_item_relationships_b eir
                     WHERE     ep.tp_item_id = eir.tp_item_id
                           AND eir.inventory_item_id = rtl.inventory_item_id
                           AND ep.tp_type = 'CUSTOMER'
                           AND ep.trading_partner_id = hca.party_id
                           AND (eir.end_date_active IS NULL
                                OR TRUNC (eir.end_date_active) > TRUNC (SYSDATE))
                           AND ROWNUM = 1)
                      ordered_item,
                   (rct.trx_number),
                   TO_CHAR (rct.trx_date, 'DDMMYYYY') trx_date,
                   (TO_CHAR (SUM (rtl.quantity_invoiced))) qty,
                   (TO_CHAR (
                       ( (SELECT NVL (SUM (jatrl.tax_amt), 0)
                            FROM zx_lines jatrl
                           WHERE     jatrl.trx_line_id = rtl.customer_trx_line_id
                                 AND jatrl.application_id = 222
                                 AND entity_code = 'TRANSACTIONS')
                        + SUM (
                             NVL (rtl.unit_selling_price, 0)
                             * NVL (rtl.quantity_invoiced, 0))),
                       '99999999999999.99'))
                      amount,
                   eieb.attribute_char1,
                   '0.00' h,
                   (SELECT NVL (TO_CHAR (SUM (jrtl.tax_amt), 9999999999999.99),
                                '0.00')
                              sgst
                      FROM zx_lines jrtl
                     WHERE     jrtl.entity_code = 'TRANSACTIONS'
                           AND jrtl.tax LIKE '%SGST%'
                           AND rtl.customer_trx_line_id = jrtl.trx_line_id
                           AND jrtl.application_id = 222)
                      sgst,
                   (SELECT NVL (TO_CHAR (SUM (jrtl.tax_amt), 9999999999999.99),
                                '0.00')
                              igst
                      FROM zx_lines jrtl
                     WHERE     jrtl.entity_code = 'TRANSACTIONS'
                           AND jrtl.tax LIKE '%IGST%'
                           AND rtl.customer_trx_line_id = jrtl.trx_line_id
                           AND jrtl.application_id = 222)
                      igst,
                   (SELECT NVL (TO_CHAR (SUM (jrtl.tax_amt), 9999999999999.99),
                                '0.00')
                              tcs
                      FROM zx_lines jrtl
                     WHERE     jrtl.entity_code = 'TRANSACTIONS'
                           AND jrtl.tax LIKE '%TCS%'
                           AND rtl.customer_trx_line_id = jrtl.trx_line_id
                           AND jrtl.application_id = 222)
                      g,
                   NVL (rtl.unit_selling_price, 0) unit_selling,
                   (TO_CHAR (
                       SUM (
                          NVL (rtl.quantity_invoiced, 0)
                          * NVL (rtl.unit_standard_price, 0)),
                       '99999999999999.99'))
                      invoice_amount,
                   (SELECT NVL (TO_CHAR (SUM (jrtl.tax_amt), 9999999999999.99),
                                '0.00')
                              cgst
                      FROM zx_lines jrtl
                     WHERE     jrtl.entity_code = 'TRANSACTIONS'
                           AND jrtl.tax LIKE '%CGST%'
                           AND rtl.customer_trx_line_id = jrtl.trx_line_id
                           AND jrtl.application_id = 222)
                      cgst,
                   '0.00' a,
                   '0.00' b,
                   '0.00' c,
                   '0.00' d,
                   '0.00' e,
                   '0.00' f,
                   --                   cust_gst.registration_number cus_gst,
                   rctd.attribute1 cus_gst,
                   (SELECT extn_attribute_char012
                      FROM moo_ref_entities mre
                     WHERE     1 = 1
                           AND attribute_category = 'UCALEInvoicing_c'
                           AND mre.extn_attribute_char008 = rct.trx_number
                           AND TRUNC (mre.extn_attribute_timestamp002) =
                                  TRUNC (rct.trx_date)
                           AND mre.extn_attribute_char009 = 'INV'
                           AND mre.extn_attribute_char012 IS NOT NULL)
                      irn,
                   rct.customer_trx_id
              FROM ra_customer_trx_all rct,
                   ra_customer_trx_lines_all rtl,
                   doo_fulfill_lines_all dfla,
                   hz_parties arc,
                   hz_cust_accounts hca,
                   hr_locations hla,
                   egp_system_items_vl msi,
                   (SELECT DISTINCT rctd.customer_trx_id,
                                    iop.organization_id,
                                    iop.organization_code,
                                    iop.legal_entity_id,
                                    iop.attribute1,
                                    hou.location_id,
                                    iop.master_organization_id
                      FROM ra_cust_trx_line_gl_dist_all rctd,
                           gl_code_combinations gcc,
                           inv_org_parameters iop,
                           xla_mapping_set_values xmsv,
                           hr_organization_units hou
                     WHERE     1 = 1
                           AND hou.organization_id = iop.organization_id
                           AND gcc.segment2 = xmsv.value_constant
                           AND xmsv.input_value_constant1 =
                                  TO_CHAR (iop.organization_id)
                           AND xmsv.enabled_flag = 'Y'
                           AND xmsv.mapping_set_code = 'UFSL_INV_LOC_CST'
                           AND gcc.code_combination_id = rctd.code_combination_id
                           AND rctd.account_class = 'REC') rctd,
                   hz_cust_site_uses_all hcsu,
                   hz_cust_acct_sites_all hcas,
                   (SELECT zr.registration_number, zptp.party_id
                      FROM zx_party_tax_profile zptp, zx_registrations zr
                     WHERE 1 = 1
                           AND zptp.party_tax_profile_id =
                                  zr.party_tax_profile_id
                           AND zr.registration_type_code LIKE '%GST%'
                           AND zptp.party_type_code = 'THIRD_PARTY_SITE'
                           AND zptp.customer_flag = 'Y'
                           AND (zr.effective_to IS NULL
                                OR zr.effective_to > SYSDATE)) cust_gst,
                   ego_item_eff_b eieb
             WHERE     1 = 1
                   AND eieb.context_code(+) = 'UCAL Attributes'
                   AND rctd.master_organization_id = eieb.organization_id(+)
                   AND msi.inventory_item_id = eieb.inventory_item_id(+)
                   AND cust_gst.party_id(+) = hcas.party_site_id
                   AND hcas.cust_acct_site_id = hcsu.cust_acct_site_id
                   AND hcsu.site_use_id = rct.bill_to_site_use_id
                   AND rct.customer_trx_id = rctd.customer_trx_id
                   AND rct.customer_trx_id = rtl.customer_trx_id
                   AND rtl.line_type = 'LINE'
                   AND rtl.interface_line_attribute6 =
                          TO_CHAR (dfla.fulfill_line_id)
                   AND hca.cust_account_id =
                          NVL (rct.sold_to_customer_id, rct.bill_to_customer_id)
                   AND arc.party_id = hca.party_id
                   AND rctd.location_id = hla.location_id
                   AND msi.inventory_item_id = rtl.inventory_item_id
                   AND msi.organization_id = rctd.organization_id
                   AND UPPER (arc.party_name) LIKE '%HYUNDAI%'
          GROUP BY rct.trx_number,
                   rct.customer_trx_id,
                   rtl.inventory_item_id,
                   hca.party_id,
                   rtl.unit_selling_price,
                   rct.interface_header_attribute2,
                   arc.party_name,
                   rct.trx_date,
                   dfla.ordered_qty,
                   rct.purchase_order,
                   eieb.attribute_char1,
                   cust_gst.registration_number,
                   rct.org_id,
                   rtl.customer_trx_line_id,
                   rctd.attribute1
          ORDER BY rct.trx_number) a
GROUP BY purchase_order,
         ordered_item,
         trx_number,
         trx_date,
         attribute_char1,
         unit_selling,
         h,
         a,
         b,
         c,
         d,
         e,
         f,
         cus_gst,
         irn,
         customer_trx_id
-----------HeroQR------------
SELECT rct.customer_trx_id,
         (SELECT zre.extn_attribute_char006
            FROM mkt_ref_entities zre
           WHERE zre.attribute_category = 'UCALCustomerVendorCode_c'
                 AND zre.extn_attribute_char001 =
                        TO_CHAR (hps.party_site_number)
                 AND zre.extn_attribute_char002 = rctd.organization_code)
         || CHR (9)
         || rct.purchase_order
         || CHR (9)
         || rct.trx_number
         || CHR (9)
         || (TO_CHAR (rct.trx_date, 'DD.MM.YYYY'))
         || CHR (9)
         || rctd.attribute1
         || CHR (9)
         || TRIM (
               TO_CHAR ( (SELECT SUM (rtla.extended_amount) invoice_amount
                            FROM ra_customer_trx_lines_all rtla
                           WHERE rtla.customer_trx_id = rct.customer_trx_id),
                        '99999999999999.99'))
         || CHR (9)
         || TRIM (
               TO_CHAR (SUM (rtl.quantity_invoiced * unit_standard_price),
                        '99999999999999.99'))
         || CHR (9)
         || rct.attribute3
         || CHR (9)
         || TRIM (TO_CHAR (SUM (sgst.sgst_amount), '99999999999999.99'))
         || CHR (9)
         || TRIM (TO_CHAR (SUM (igst.igst_amount), '99999999999999.99'))
         || CHR (9)
         || TRIM (TO_CHAR (SUM (cgst.cgst_amount), '99999999999999.99'))
         || CHR (9)
         || TRIM (ROUND (NVL (SUM (tcs.tcs_amount), 0), 2))
         || CHR (9)
         || (SELECT ep.tp_item_number
               FROM egp_trading_partner_items ep, egp_item_relationships_b eir
              WHERE     ep.tp_item_id = eir.tp_item_id
                    AND eir.inventory_item_id = esi.inventory_item_id
                    AND ep.tp_type = 'CUSTOMER'
                    AND ep.trading_partner_id = hca.party_id
                    AND (eir.end_date_active IS NULL
                         OR TRUNC (eir.end_date_active) > TRUNC (SYSDATE))
                    AND ROWNUM = 1)
         || CHR (9)
         || eieb.attribute_char1
         || CHR (9)
         || TRIM (TO_CHAR (SUM (rtl.quantity_invoiced)))
         || CHR (9)
         || TRIM (TO_CHAR (SUM (rtl.unit_selling_price), '99999999999999.99'))
         || CHR (9)
            hero_qrcode
    FROM ra_customer_trx_all rct,
         ra_customer_trx_lines_all rtl,
         (SELECT DISTINCT rctd.customer_trx_id,
                          iop.organization_id,
                          iop.organization_code,
                          iop.legal_entity_id,
                          iop.attribute1,
                          iop.master_organization_id
            FROM ra_cust_trx_line_gl_dist_all rctd,
                 gl_code_combinations gcc,
                 inv_org_parameters iop,
                 xla_mapping_set_values xmsv
           WHERE     1 = 1
                 AND gcc.segment2 = xmsv.value_constant
                 AND xmsv.input_value_constant1 = TO_CHAR (iop.organization_id)
                 AND xmsv.enabled_flag = 'Y'
                 AND xmsv.mapping_set_code = 'UFSL_INV_LOC_CST'
                 AND gcc.code_combination_id = rctd.code_combination_id
                 AND rctd.account_class = 'REC') rctd,
         egp_system_items_b esi,
         hr_organization_units hou,
         hr_locations_all hla,
         hz_cust_accounts hca,
         hz_parties hp,
         hz_cust_site_uses_all hcsu,
         hz_cust_acct_sites_all hcas,
         (SELECT DISTINCT trx_id,
                          trx_line_id,
                          unrounded_tax_amt sgst_amount,
                          tax_rate sgst_rate,
                          unrounded_taxable_amt sgst_taxable
            FROM zx_lines
           WHERE     entity_code = 'TRANSACTIONS'
                 AND tax LIKE '%SGST%'
                 AND application_id = 222) sgst,
         (SELECT DISTINCT trx_id,
                          trx_line_id,
                          unrounded_tax_amt cgst_amount,
                          tax_rate cgst_rate,
                          unrounded_taxable_amt cgst_taxable
            FROM zx_lines
           WHERE     entity_code = 'TRANSACTIONS'
                 AND tax LIKE '%CGST%'
                 AND application_id = 222) cgst,
         (SELECT DISTINCT trx_id,
                          trx_line_id,
                          unrounded_tax_amt igst_amount,
                          tax_rate igst_rate,
                          unrounded_taxable_amt igst_taxable
            FROM zx_lines
           WHERE     entity_code = 'TRANSACTIONS'
                 AND tax LIKE '%IGST%'
                 AND application_id = 222) igst,
         (SELECT DISTINCT trx_id,
                          trx_line_id,
                          unrounded_tax_amt tcs_amount,
                          tax_rate tcs_rate,
                          unrounded_taxable_amt tcs_taxable
            FROM zx_lines
           WHERE     entity_code = 'TRANSACTIONS'
                 AND tax LIKE '%TCS%'
                 AND application_id = 222) tcs,
         ego_item_eff_b eieb,
         hz_party_sites hps
   WHERE     1 = 1
         AND hps.party_site_id = hcas.party_site_id
         AND eieb.context_code(+) = 'UCAL Attributes'
         AND rctd.master_organization_id = eieb.organization_id(+)
         AND esi.inventory_item_id = eieb.inventory_item_id(+)
         AND rct.customer_trx_id = tcs.trx_id(+)
         AND rtl.customer_trx_line_id = tcs.trx_line_id(+)
         AND rct.customer_trx_id = igst.trx_id(+)
         AND rtl.customer_trx_line_id = igst.trx_line_id(+)
         AND rct.customer_trx_id = cgst.trx_id(+)
         AND rtl.customer_trx_line_id = cgst.trx_line_id(+)
         AND rct.customer_trx_id = sgst.trx_id(+)
         AND rtl.customer_trx_line_id = sgst.trx_line_id(+)
         AND hcas.cust_acct_site_id = hcsu.cust_acct_site_id
         AND hcsu.site_use_id = rct.bill_to_site_use_id
         AND hp.party_id = hca.party_id
         AND hca.cust_account_id = rct.bill_to_customer_id
         AND hla.location_id = hou.location_id
         AND rctd.organization_id = hou.organization_id
         AND esi.inventory_item_id = rtl.inventory_item_id
         AND esi.organization_id = rctd.organization_id
         AND rct.customer_trx_id = rctd.customer_trx_id
         AND rtl.line_type = 'LINE'
         AND rct.customer_trx_id = rtl.customer_trx_id
         AND UPPER (hp.party_name) LIKE '%HERO%'
GROUP BY rct.customer_trx_id,
         hps.party_site_number,
         rct.purchase_order,
         rct.trx_number,
         (TO_CHAR (rct.trx_date, 'DD.MM.YYYY')),
         rctd.attribute1,
         rct.attribute3,
         esi.inventory_item_id,
         eieb.attribute_char1,
         hca.party_id,
         rctd.organization_code
----------tATAqr--------------------
SELECT (   TRIM (purchase_order)
          || ','
          || TRIM (NVL (order_item_no, 0))
          || ','
          || TRIM (TO_CHAR (SUM (qty)))
          || ','
          || TRIM (trx_number)
          || ','
          || TRIM (trx_date)
          || ','
          || TRIM (SUM (bf_discount_amount))
          || ','
          || TRIM (SUM (invoice_amount))
          || ','
          || TRIM (NVL (vendor_code, 0))
          || ','
          || TRIM (upart)
          || ','
          || SUM (cgst)
          || ','
          || SUM (sgst)
          || ','
          || SUM (igst)
          || ','
          || SUM (ugst)
          || ','
          || SUM (cgst_per)
          || ','
          || SUM (sgst_per)
          || ','
          || SUM (igst_per)
          || ','
          || SUM (ugst_per)
          || ','
          || SUM (cess)
          || ','
          || SUM (tot_amount)
          || ','
          || TRIM (hsn))
            tata_qr_code,
         customer_trx_id
    FROM (  SELECT (rct.purchase_order),
                   --                   NVL (sol.attribute10, 0)
                   dfle.attribute_char1 order_item_no,
                   (TO_CHAR (SUM (rtl.quantity_invoiced))) qty,
                   (rct.trx_number),
                   TO_CHAR (rct.trx_date, 'DD.MM.YYYY') trx_date,
                   (TO_CHAR (
                       SUM (
                          NVL (rtl.quantity_invoiced, 0)
                          * NVL (rtl.unit_standard_price, 0)),
                       '99999999999999.99'))
                      bf_discount_amount,
                   (TO_CHAR (
                       SUM (
                          NVL (rtl.quantity_invoiced, 0)
                          * NVL (rtl.unit_standard_price, 0)),
                       '99999999999999.99'))
                      invoice_amount,
                   hcas.ece_tp_location_code vendor_code,
                   esi.item_number upart,
                   NVL (TO_CHAR (SUM (cgst.cgst_amount), 9999999999999.99),
                        '0.00')
                      cgst,
                   NVL (TO_CHAR (SUM (sgst.sgst_amount), 9999999999999.99),
                        '0.00')
                      sgst,
                   NVL (TO_CHAR (SUM (igst.igst_amount), 9999999999999.99),
                        '0.00')
                      igst,
                   0 ugst,
                   NVL (TO_CHAR (SUM (tcs.tcs_amount), 9999999999999.99), '0.00')
                      tcs,
                   NVL (TO_CHAR (SUM (cgst.cgst_rate), 9999999999999.99), '0.00')
                      cgst_per,
                   NVL (TO_CHAR (SUM (sgst.sgst_rate), 9999999999999.99), '0.00')
                      sgst_per,
                   NVL (TO_CHAR (SUM (igst.igst_rate), 9999999999999.99), '0.00')
                      igst_per,
                   0 ugst_per,
                   NVL (TO_CHAR (SUM (tcs.tcs_rate), 9999999999999.99), '0.00')
                      tcs_per,
                   0 cess,
                   (TO_CHAR (
                       (SELECT SUM (rtla.extended_amount) invoice_amount
                          FROM ra_customer_trx_lines_all rtla
                         WHERE rtla.customer_trx_id = rct.customer_trx_id),
                       '99999999999999.99'))
                      tot_amount,
                   NVL (TRIM (eieb.attribute_char1), '0') hsn,
                   rct.customer_trx_id
              FROM ra_customer_trx_all rct,
                   ra_customer_trx_lines_all rtl,
                   hz_cust_accounts hca,
                   hz_parties hp,
                   hz_cust_site_uses_all hcsu,
                   hz_cust_acct_sites_all hcas,
                   egp_system_items_b esi,
                   (SELECT DISTINCT rctd.customer_trx_id,
                                    iop.organization_id,
                                    iop.organization_code,
                                    iop.legal_entity_id,
                                    iop.attribute1,
                                    iop.master_organization_id
                      FROM ra_cust_trx_line_gl_dist_all rctd,
                           gl_code_combinations gcc,
                           inv_org_parameters iop,
                           xla_mapping_set_values xmsv
                     WHERE 1 = 1 AND gcc.segment2 = xmsv.value_constant
                           AND xmsv.input_value_constant1 =
                                  TO_CHAR (iop.organization_id)
                           AND xmsv.enabled_flag = 'Y'
                           AND xmsv.mapping_set_code = 'UFSL_INV_LOC_CST'
                           AND gcc.code_combination_id = rctd.code_combination_id
                           AND rctd.account_class = 'REC') rctd,
                   (SELECT DISTINCT trx_id,
                                    trx_line_id,
                                    unrounded_tax_amt sgst_amount,
                                    tax_rate sgst_rate,
                                    unrounded_taxable_amt sgst_taxable
                      FROM zx_lines
                     WHERE     entity_code = 'TRANSACTIONS'
                           AND tax LIKE '%SGST%'
                           AND application_id = 222) sgst,
                   (SELECT DISTINCT trx_id,
                                    trx_line_id,
                                    unrounded_tax_amt cgst_amount,
                                    tax_rate cgst_rate,
                                    unrounded_taxable_amt cgst_taxable
                      FROM zx_lines
                     WHERE     entity_code = 'TRANSACTIONS'
                           AND tax LIKE '%CGST%'
                           AND application_id = 222) cgst,
                   (SELECT DISTINCT trx_id,
                                    trx_line_id,
                                    unrounded_tax_amt igst_amount,
                                    tax_rate igst_rate,
                                    unrounded_taxable_amt igst_taxable
                      FROM zx_lines
                     WHERE     entity_code = 'TRANSACTIONS'
                           AND tax LIKE '%IGST%'
                           AND application_id = 222) igst,
                   (SELECT DISTINCT trx_id,
                                    trx_line_id,
                                    unrounded_tax_amt tcs_amount,
                                    tax_rate tcs_rate,
                                    unrounded_taxable_amt tcs_taxable
                      FROM zx_lines
                     WHERE     entity_code = 'TRANSACTIONS'
                           AND tax LIKE '%TCS%'
                           AND application_id = 222) tcs,
                   ego_item_eff_b eieb,
                   doo_fulfill_lines_eff_b dfle
             WHERE 1 = 1
                   AND rtl.interface_line_attribute6 =
                          TO_CHAR (dfle.fulfill_line_id(+))
                   AND eieb.context_code(+) = 'UCAL Attributes'
                   AND rctd.master_organization_id = eieb.organization_id(+)
                   AND esi.inventory_item_id = eieb.inventory_item_id(+)
                   AND rct.customer_trx_id = tcs.trx_id(+)
                   AND rtl.customer_trx_line_id = tcs.trx_line_id(+)
                   AND rct.customer_trx_id = igst.trx_id(+)
                   AND rtl.customer_trx_line_id = igst.trx_line_id(+)
                   AND rct.customer_trx_id = cgst.trx_id(+)
                   AND rtl.customer_trx_line_id = cgst.trx_line_id(+)
                   AND rct.customer_trx_id = sgst.trx_id(+)
                   AND rtl.customer_trx_line_id = sgst.trx_line_id(+)
                   AND esi.organization_id = rctd.organization_id
                   AND rct.customer_trx_id = rctd.customer_trx_id
                   AND esi.inventory_item_id = rtl.inventory_item_id
                   AND hcas.cust_acct_site_id = hcsu.cust_acct_site_id
                   AND hcsu.site_use_id = rct.bill_to_site_use_id
                   AND hp.party_id = hca.party_id
                   AND hca.cust_account_id = rct.bill_to_customer_id
                   AND rct.customer_trx_id = rtl.customer_trx_id
                   AND line_type = 'LINE'
                   AND UPPER (hp.party_name) LIKE '%TATA%'
          GROUP BY rct.purchase_order,
                   dfle.attribute_char1,
                   rct.trx_number,
                   TO_CHAR (rct.trx_date, 'DD.MM.YYYY'),
                   hcas.ece_tp_location_code,
                   esi.item_number,
                   NVL (TRIM (eieb.attribute_char1), '0'),
                   rct.customer_trx_id
          ORDER BY rct.trx_number) a
GROUP BY purchase_order,
         order_item_no,
         trx_number,
         trx_date,
         upart,
         hsn,
         vendor_code,
         customer_trx_id
--------UCAL BAJAJ EDI EXTRACT DM-------------

/* Formatted on 20/07/2021 8:59:01 AM (QP5 v5.163.1008.3004) */
SELECT CASE
          WHEN hps.party_site_name = 'AKRUDI' AND rctt.name LIKE '%OE INV'
          THEN
             'AK01'
          WHEN hps.party_site_name = 'AKRUDI' AND rctt.name LIKE '%SP INV'
          THEN
             'AK01'
          WHEN hps.party_site_name = 'AKRUDI' AND rctt.name LIKE '%OES INV'
          THEN
             'AK01'
          WHEN hps.party_site_name = 'AKRUDI' AND rctt.name LIKE '%RE INV'
          THEN
             'AK01'
          WHEN hps.party_site_name = 'CHAKKAN' AND rctt.name LIKE '%OE INV'
          THEN
             'CH01'
          WHEN hps.party_site_name = 'CHAKKAN' AND rctt.name LIKE '%SP INV'
          THEN
             'CH01'
          WHEN hps.party_site_name = 'CHAKKAN' AND rctt.name LIKE '%OES INV'
          THEN
             'CH01'
          WHEN hps.party_site_name = 'CHAKKAN' AND rctt.name LIKE '%RE INV'
          THEN
             'CH01'
          WHEN hps.party_site_name = 'WALUJ' AND rctt.name LIKE '%OE INV'
          THEN
             'WA01'
          WHEN hps.party_site_name = 'WALUJ' AND rctt.name LIKE '%SP INV'
          THEN
             'WA02'
          WHEN hps.party_site_name = 'WALUJ' AND rctt.name LIKE '%OES INV'
          THEN
             'WA02'
          WHEN hps.party_site_name = 'WALUJ' AND rctt.name LIKE '%RE INV'
          THEN
             'WA01'
          WHEN hps.party_site_name = 'PANTNAGAR' AND rctt.name LIKE '%OE INV'
          THEN
             'PT01'
          WHEN hps.party_site_name = 'PANTNAGAR' AND rctt.name LIKE '%SP INV'
          THEN
             'PT02'
          WHEN hps.party_site_name = 'PANTNAGAR'
               AND rctt.name LIKE '%OES INV'
          THEN
             'PT02'
          WHEN hps.party_site_name = 'PANTNAGAR' AND rctt.name LIKE '%RE INV'
          THEN
             'PT01'
          WHEN hps.party_site_name = 'JEENA' AND rctt.name LIKE '%OE INV'
          THEN
             'CH51'
          WHEN hps.party_site_name = 'JEENA' AND rctt.name LIKE '%RE INV'
          THEN
             'CH51'
       END
          plantid,
       zre.extn_attribute_char006 vendor_id,
       rctd.attribute1 gstnno,
       esi.hsn,
       NULL sac,
       (SELECT ep.tp_item_number
          FROM egp_trading_partner_items ep, egp_item_relationships_b eir
         WHERE     ep.tp_item_id = eir.tp_item_id
               AND eir.inventory_item_id = esi.inventory_item_id
               AND ep.tp_type = 'CUSTOMER'
               AND ep.trading_partner_id = hca.party_id
               AND (eir.end_date_active IS NULL
                    OR TRUNC (eir.end_date_active) > TRUNC (SYSDATE))
               AND ROWNUM = 1)
          item_number,
       rcta.purchase_order ponumber,
       dfle.attribute_char1 po_line_num,
       rcta.trx_number invnum,
       TO_CHAR (rcta.trx_date, 'YYYYMMDD') invdt,
       rctla.quantity_invoiced invqty,
       ROUND (rctla.unit_selling_price, 3) basicrate,
       ROUND (rctla.quantity_invoiced * rctla.unit_selling_price, 2)
          basicvalue,
       0 frieght,
       0 insurance,
       0 hecess,
       ROUND (rctla.quantity_invoiced * rctla.unit_selling_price, 2)
          sub_total,
       0 additional_value_to_be_added,
       ROUND (rctla.quantity_invoiced * rctla.unit_selling_price, 2)
          total_base_value,
       NVL (cgst.tax_rate, 0) cgst_rate,
       NVL (ROUND (cgst.tax_amount, 2), 0) cgst_amount,
       NVL (sgst.tax_rate, 0) sgst_rate,
       NVL (ROUND (sgst.tax_amount, 2), 0) sgst_amount,
       0 utgst_rate,
       0 utgst_amount,
       NVL (igst.tax_rate, 0) igst_rate,
       NVL (ROUND (igst.tax_amount, 2), 0) igst_amount,
       ROUND (
          (  tax_rate.unrounded_taxable_amt
           + NVL (igst.tax_amount, 0)
           + NVL (cgst.tax_amount, 0)
           + NVL (sgst.tax_amount, 0)
           + NVL (tcs.tax_amount, 0)),
          2)
          bill_amt,
       NVL (mrf.extn_attribute_char013, 0) eway_bill_number,
       NVL (TO_CHAR (mrf.extn_attribute_timestamp003, 'YYYYMMDD'), 0)
          eway_bill_date,
       NULL vehicle_no,
       0 empty_1,
       0 empty_2,
       CASE
          WHEN mrf.extn_attribute_clob002 IS NOT NULL
          THEN
             UTL_RAW.cast_to_varchar2 (
                UTL_ENCODE.base64_decode (
                   UTL_RAW.cast_to_raw (
                      UTL_RAW.cast_to_varchar2 (
                         UTL_ENCODE.base64_encode (
                            UTL_RAW.cast_to_raw (mrf.extn_attribute_clob002))))))
       END
          signed_qr_code,
       ' ' delivery_challan_no,
       ' ' delivery_challan_date,
       ' ' delivery_challan_amount,
       ROUND (tcs.tax_amount, 2) tcs_amount
  FROM ra_customer_trx_all rcta,
       hz_cust_accounts hca,
       hz_parties hp,
       ra_cust_trx_types_all rctt,
       hz_cust_site_uses_all hcsu,
       hz_cust_acct_sites_all hcas,
       hz_party_sites hps,
       ra_customer_trx_lines_all rctla,
       (SELECT DISTINCT rctd.customer_trx_id,
                        iop.organization_id,
                        iop.organization_code,
                        iop.legal_entity_id,
                        iop.attribute1
          FROM ra_cust_trx_line_gl_dist_all rctd,
               gl_code_combinations gcc,
               inv_org_parameters iop,
               xla_mapping_set_values xmsv
         WHERE     1 = 1
               AND gcc.segment2 = xmsv.value_constant
               AND xmsv.input_value_constant1 = TO_CHAR (iop.organization_id)
               AND xmsv.enabled_flag = 'Y'
               AND xmsv.mapping_set_code = 'UFSL_INV_LOC_CST'
               AND gcc.code_combination_id = rctd.code_combination_id
               AND rctd.account_class = 'REC') rctd,
       (SELECT esib.organization_id,
               esib.inventory_item_id,
               esib.item_number,
               REGEXP_REPLACE (esit.description, '[^[:alnum:]'' '']', '')
                  description,
               eieb.attribute_char1 hsn
          FROM egp_system_items_tl esit,
               egp_system_items_b esib,
               ego_item_eff_b eieb,
               inv_org_parameters iop
         WHERE     1 = 1
               AND iop.organization_id = esib.organization_id
               AND eieb.context_code(+) = 'UCAL Attributes'
               AND iop.master_organization_id = eieb.organization_id(+)
               AND esib.inventory_item_id = eieb.inventory_item_id(+)
               AND esit.organization_id = esib.organization_id
               AND esib.inventory_item_id = esit.inventory_item_id) esi,
       (  SELECT trx_id,
                 trx_line_id,
                 unrounded_tax_amt tax_amount,
                 tax_rate
            FROM zx_lines zl
           WHERE     1 = 1
                 AND zl.entity_code = 'TRANSACTIONS'
                 AND zl.tax LIKE '%SGST%'
                 AND zl.application_id = 222                 -- AR Application
        GROUP BY trx_id,
                 trx_line_id,
                 unrounded_tax_amt,
                 tax_rate) sgst,
       (  SELECT trx_id,
                 trx_line_id,
                 unrounded_tax_amt tax_amount,
                 tax_rate
            FROM zx_lines zl
           WHERE     1 = 1
                 AND zl.entity_code = 'TRANSACTIONS'
                 AND zl.tax LIKE '%CGST%'
                 AND zl.application_id = 222                 -- AR Application
        GROUP BY trx_id,
                 trx_line_id,
                 unrounded_tax_amt,
                 tax_rate) cgst,
       (  SELECT trx_id,
                 trx_line_id,
                 unrounded_tax_amt tax_amount,
                 tax_rate
            FROM zx_lines zl
           WHERE     1 = 1
                 AND zl.entity_code = 'TRANSACTIONS'
                 AND zl.tax LIKE '%IGST%'
                 AND zl.application_id = 222                 -- AR Application
        GROUP BY trx_id,
                 trx_line_id,
                 unrounded_tax_amt,
                 tax_rate) igst,
       (  SELECT trx_id, trx_line_id, unrounded_tax_amt tax_amount
            FROM zx_lines zl
           WHERE     1 = 1
                 AND zl.entity_code = 'TRANSACTIONS'
                 AND zl.tax LIKE '%TCS%'
                 AND zl.application_id = 222                 -- AR Application
        GROUP BY trx_id, trx_line_id, unrounded_tax_amt) tcs,
       (  SELECT SUM (tax_rate) tax_rate,
                 trx_id,
                 trx_line_id,
                 unrounded_taxable_amt
            FROM zx_lines zl
           WHERE     1 = 1
                 AND zl.entity_code = 'TRANSACTIONS'
                 AND zl.tax LIKE '%GST%'
                 AND zl.application_id = 222                 -- AR Application
        GROUP BY trx_id, trx_line_id, unrounded_taxable_amt) tax_rate,
       moo_ref_entities mrf,
       mkt_ref_entities zre,
       doo_fulfill_lines_eff_b dfle
 WHERE 1 = 1
       AND TO_CHAR (dfle.fulfill_line_id(+)) =
              rctla.interface_line_attribute5
       AND dfle.context_code(+) = 'Customer Purchase Order Line Number'
       AND zre.extn_attribute_char001(+) = TO_CHAR (hps.party_site_number)
       AND zre.extn_attribute_char002(+) = rctd.organization_code
       AND zre.attribute_category(+) = 'UCALCustomerVendorCode_c'
       AND mrf.attribute_category(+) = 'UCALEInvoicing_c'
       AND rcta.trx_number = mrf.extn_attribute_char008(+)
       AND rcta.trx_date = mrf.extn_attribute_timestamp002(+)
       AND CASE WHEN rctt.TYPE = 'INV' THEN 'INV' END =
              mrf.extn_attribute_char009(+)
       AND rctla.customer_trx_line_id = tax_rate.trx_line_id
       AND rctla.customer_trx_line_id = tcs.trx_line_id(+)
       AND rctla.customer_trx_line_id = igst.trx_line_id(+)
       AND rctla.customer_trx_line_id = cgst.trx_line_id(+)
       AND rctla.customer_trx_line_id = sgst.trx_line_id(+)
       AND esi.inventory_item_id = rctla.inventory_item_id
       AND esi.organization_id = rctd.organization_id
       AND rcta.customer_trx_id = rctd.customer_trx_id
       AND rcta.customer_trx_id = rctla.customer_trx_id
       AND rctla.line_type = 'LINE'
       AND hcas.party_site_id = hps.party_site_id
       AND hcas.cust_acct_site_id = hcsu.cust_acct_site_id
       AND hcsu.site_use_id = rcta.bill_to_site_use_id
       AND rcta.cust_trx_type_seq_id = rctt.cust_trx_type_seq_id
       AND hp.party_id = hca.party_id
       AND hca.cust_account_id = rcta.bill_to_customer_id
       AND UPPER (hp.party_name) LIKE '%BAJAJ%'
       AND rctt.TYPE = 'INV'
       AND NOT EXISTS
                  (SELECT extn_attribute_char008
                     FROM zca_ref_entities
                    WHERE     attribute_category = 'UCALEDIASN_c'
                          AND extn_attribute_char006 = rctd.organization_code
                          AND extn_attribute_char007 = rcta.trx_number)
       AND rcta.trx_number BETWEEN (NVL (:p_trx_number_low, rcta.trx_number))
                               AND (NVL (:p_trx_number_high, rcta.trx_number))
       AND rcta.trx_date BETWEEN NVL (:p_from_date, rcta.trx_date)
                             AND NVL (:p_to_date, rcta.trx_date)
  -------------------UCAL EInvoicing DM--------------------------------------------------
  /* Formatted on 10/08/2021 1:16:21 PM (QP5 v5.163.1008.3004) */
SELECT TO_CHAR (rcta.trx_date, 'DD/MM/YYYY', 'NLS_DATE_LANGUAGE=AMERICAN')
          document_date,
       rcta.trx_number document_number,
       DECODE (rctt.TYPE,  'INV', 'INV',  'DM', 'DBN',  'CM', 'CRN')
          document_type_code,
       CASE
          WHEN hca.class_code = 'Y' AND tax_rate.tax_rate > 0
          THEN
             'SEZWP'
          WHEN hca.class_code = 'Y' AND NVL (tax_rate.tax_rate, 0) = 0
          THEN
             'SEZWOP'
          WHEN hl_b.country <> 'IN' AND tax_rate.tax_rate > 0
          THEN
             'EXPWP'
          WHEN hl_b.country <> 'IN' AND NVL (tax_rate.tax_rate, 0) = 0
          THEN
             'EXPWOP'
          ELSE
             'B2B'
       END
          supply_type_code,
       hp_b.party_name recipient_legal_name,
       hp_b.party_name recipient_trade_name,
       zr_b.registration_number recipient_gstn,
       NVL (flv_bst.description, '96') rec_place_of_supply,
       hl_b.address1 recipient_address_1,
       hl_b.city recipient_place,
       NVL (flv_bst.description, '96') recipient_state_code,
       CASE
          WHEN rcta.invoice_currency_code = 'INR'
          THEN
             REGEXP_REPLACE (hl_b.postal_code, '[^[:alnum:]'' '']', '')
          ELSE
             '999999'
       END
          recipient_pin_code,
       rctla.line_number sl_no,
       NVL (esi.description, rctla.description) item_description,
       CASE WHEN UPPER (rctt.attribute1) = 'SERVICE' THEN 'S' ELSE 'G' END
          is_goods_or_service,
       NVL (rctla.attribute1, esi.hsn_or_sac) hsn_or_sac,
       ROUND ( (NVL (rctla.quantity_invoiced, rctla.quantity_credited)), 2)
          quantity,
       DECODE (rctla.uom_code, NULL, NULL, NVL (flv_uom.description, 'OTH'))
          unit_of_measurement,
       ABS (
          ROUND (rctla.unit_selling_price * NVL (rcta.exchange_rate, 1), 3))
          item_price,
       ABS (
          ROUND (
             (  NVL (rctla.quantity_invoiced, rctla.quantity_credited)
              * rctla.unit_selling_price
              * NVL (rcta.exchange_rate, 1)),
             2))
          gross_amount,
       0 item_discount_amount,
       ABS (
          ROUND (
             tax_rate.unrounded_taxable_amt * NVL (rcta.exchange_rate, 1),
             2))
          item_taxable_value,
       tax_rate.tax_rate gst_rate,
       ABS (NVL (igst.tax_amount, 0)) igst_amount,
       ABS (NVL (cgst.tax_amount, 0)) cgst_amount,
       ABS (NVL (sgst.tax_amount, 0)) sgst_amount,
       0 comp_cess_rate_ad,
       0 comp_cess_amount_ad,
       0 comp_cess_amount_non_ad,
       0 state_cess_rate_ad,
       0 state_cess_amount_ad,
       0 state_cess_amount_non_ad,
       ABS (
          ROUND (
             (SUM (
                 NVL (tcs.tax_amount, 0))
              OVER (
                 PARTITION BY TO_CHAR (rcta.trx_date,
                                       'DD/MM/YYYY',
                                       'NLS_DATE_LANGUAGE=AMERICAN'),
                              rcta.trx_number,
                              DECODE (rctt.TYPE,
                                      'INV', 'INV',
                                      'DM', 'DBN',
                                      'CM', 'CRN'))),
             2))
          other_charges,
       ABS (
          (  tax_rate.unrounded_taxable_amt * NVL (rcta.exchange_rate, 1)
           + NVL (igst.tax_amount, 0)
           + NVL (cgst.tax_amount, 0)
           + NVL (sgst.tax_amount, 0)
           + NVL (tcs.tax_amount, 0)))
          item_total_amount,
       ABS (
          ROUND (
             (SUM (
                 tax_rate.unrounded_taxable_amt * NVL (rcta.exchange_rate, 1))
              OVER (
                 PARTITION BY TO_CHAR (rcta.trx_date,
                                       'DD/MM/YYYY',
                                       'NLS_DATE_LANGUAGE=AMERICAN'),
                              rcta.trx_number,
                              DECODE (rctt.TYPE,
                                      'INV', 'INV',
                                      'DM', 'DBN',
                                      'CM', 'CRN'))),
             2))
          total_taxable_value,
       ABS (
          ROUND (
             (SUM (
                 NVL (igst.tax_amount, 0))
              OVER (
                 PARTITION BY TO_CHAR (rcta.trx_date,
                                       'DD/MM/YYYY',
                                       'NLS_DATE_LANGUAGE=AMERICAN'),
                              rcta.trx_number,
                              DECODE (rctt.TYPE,
                                      'INV', 'INV',
                                      'DM', 'DBN',
                                      'CM', 'CRN'))),
             2))
          igst_total_amount,
       ABS (
          ROUND (
             (SUM (
                 NVL (cgst.tax_amount, 0))
              OVER (
                 PARTITION BY TO_CHAR (rcta.trx_date,
                                       'DD/MM/YYYY',
                                       'NLS_DATE_LANGUAGE=AMERICAN'),
                              rcta.trx_number,
                              DECODE (rctt.TYPE,
                                      'INV', 'INV',
                                      'DM', 'DBN',
                                      'CM', 'CRN'))),
             2))
          cgst_total_amount,
       ABS (
          ROUND (
             (SUM (
                 NVL (sgst.tax_amount, 0))
              OVER (
                 PARTITION BY TO_CHAR (rcta.trx_date,
                                       'DD/MM/YYYY',
                                       'NLS_DATE_LANGUAGE=AMERICAN'),
                              rcta.trx_number,
                              DECODE (rctt.TYPE,
                                      'INV', 'INV',
                                      'DM', 'DBN',
                                      'CM', 'CRN'))),
             2))
          sgst_total_amount,
       0 comp_cess_total_amount,
       0 state_cess_total_amount,
       ABS (
          ROUND (
             (SUM (
                 NVL (tcs.tax_amount, 0))
              OVER (
                 PARTITION BY TO_CHAR (rcta.trx_date,
                                       'DD/MM/YYYY',
                                       'NLS_DATE_LANGUAGE=AMERICAN'),
                              rcta.trx_number,
                              DECODE (rctt.TYPE,
                                      'INV', 'INV',
                                      'DM', 'DBN',
                                      'CM', 'CRN'))),
             2))
          tcs_amount,
       0 other_invoice_charge,
       0 round_off_amount,
       ABS (
          ROUND (
             SUM (
                tax_rate.unrounded_taxable_amt * NVL (rcta.exchange_rate, 1)
                + NVL (igst.tax_amount, 0)
                + NVL (cgst.tax_amount, 0)
                + NVL (sgst.tax_amount, 0)
                + NVL (tcs.tax_amount, 0))
             OVER (
                PARTITION BY TO_CHAR (rcta.trx_date,
                                      'DD/MM/YYYY',
                                      'NLS_DATE_LANGUAGE=AMERICAN'),
                             rcta.trx_number,
                             DECODE (rctt.TYPE,
                                     'INV', 'INV',
                                     'DM', 'DBN',
                                     'CM', 'CRN')),
             2))
          total_invoice_value,
       'N' is_reverse_charge,
       CASE
          WHEN SUBSTR (zr_b.registration_number, 1, 2) = '31'
               AND NVL (igst.tax_amount, 0) > 0
          THEN
             'Y'
          ELSE
             'N'
       END
          is_sec7_igst,
       rcta_orig.trx_number preceding_doc_number,
       TO_CHAR (rcta_orig.trx_date,
                'DD/MM/YYYY',
                'NLS_DATE_LANGUAGE=AMERICAN')
          preceding_doc_date,
       xep.name supplier_legal_name,
       rctd.attribute1 supplier_gstin,
       hrl.address_line_1 supplier_address1,
       hrl.town_or_city supplier_place,
       SUBSTR (rctd.attribute1, 1, 2) supplier_state_code,
       REGEXP_REPLACE (hrl.postal_code, '[^[:alnum:]'' '']', '')
          supplier_pin_code,
       NULL shipping_port_code,
       NULL shipping_bill_number,
       NULL shipping_bill_date,
       NULL payee_name,
       NULL payee_bank_account_name,
       NULL mode_of_payment,
       NULL bank_branch_code,
       NULL payment_terms,
       NULL payment_instructions,
       NULL credit_transfer_terms,
       NULL direct_debit_terms,
       NULL credit_days,
       NVL (hp_s.party_name, hp_b.party_name) ship_to_legal_name,
       NVL (zr_s.registration_number, zr_b.registration_number) ship_to_gstn,
       NVL (hl_s.address1, hl_b.address1) ship_to_address_1,
       NVL (hl_s.city, hl_b.city) ship_to_place,
       CASE
          WHEN rcta.invoice_currency_code = 'INR'
          THEN
             REGEXP_REPLACE (NVL (hl_s.postal_code, hl_b.postal_code),
                             '[^[:alnum:]'' '']',
                             '')
          ELSE
             '999999'
       END
          ship_to_pin_code,
       DECODE (hl_s.state,
               NULL, NVL (flv_bst.description, '96'),
               NVL (flv_sst.description, '96'))
          ship_to_state_code,
       NULL dispatch_from_name,
       NULL dispatch_from_address1,
       NULL dispatch_from_place,
       NULL dispatch_from_state_code,
       NULL dispatch_from_pin_code,
       'GST' tax_scheme,
       CASE
          WHEN eway.customer_trx_line_id IS NOT NULL
          THEN
             eway.transporter_gstn
          ELSE
             zr_e.registration_number
       END
          transporter_id,
       CASE
          WHEN eway.customer_trx_line_id IS NOT NULL
          THEN
             eway.mode_of_transport
          ELSE
             rcta.attribute2
       END
          transporter_mode,
       CASE
          WHEN eway.customer_trx_line_id IS NOT NULL
          THEN
             NVL (eway.distance, 0)
          ELSE
             NVL (rcta.attribute7, 0)
       END
          trans_distance,
       CASE
          WHEN eway.customer_trx_line_id IS NOT NULL THEN eway.transporter
          ELSE psv_e.vendor_name
       END
          transporter_name,
       NULL trans_doc_no,
       NULL trans_doc_date,
       CASE
          WHEN eway.customer_trx_line_id IS NOT NULL THEN eway.vehicle_no
          ELSE rcta.attribute1
       END
          vehicle_no,
       CASE
          WHEN eway.customer_trx_line_id IS NOT NULL THEN eway.vehicle_type
          ELSE rcta.attribute8
       END
          vehicle_type,
       NULL receipt_advice_reference,
       NULL receipt_advice_date,
       NULL tender_or_lot_reference,
       NULL contract_reference,
       NULL external_reference,
       NULL project_reference,
       NULL po_reference_number,
       NULL po_reference_date,
       NULL add_supporting_doc_url,
       NULL add_supporting_doc_base64,
       NULL add_information,
       NULL doc_period_start_date,
       NULL doc_period_end_date,
       NULL add_currency_code,
       NULL bar_code,
       NULL free_quantity,
       NULL pre_tax_value,
       NULL purchase_order_line_ref,
       NULL origin_country_code,
       NULL unique_serial_number,
       NULL batch_number,
       NULL batch_expiry_date,
       NULL warranty_date,
       NULL attribute_name,
       NULL attribute_value,
       NULL country_code_of_export,
       NVL (hcp_sp.raw_phone_number, hcp_p.raw_phone_number) recipient_phone,
       NVL (hcp_se.email_address, hcp_e.email_address) recipient_email,
       hl_b.address2 recipient_address_2,
       NULL total_inv_value_in_fcnr,
       NULL paid_amount,
       NULL amount_due,
       NULL discount_amount_inv_level,
       xep.name supplier_trade_name,
       hrl.address_line_2 supplier_address2,
       SUBSTR (hrl.telephone_number_1, 1, 12) supplier_phone,
       NULL supplier_email,
       NVL (hp_s.party_name, hp_b.party_name) ship_to_trade_name,
       NVL (hl_s.address2, hl_b.address2) ship_to_address_2,
       NULL dispatch_from_address2,
       NULL remarks,
       NULL export_duty_amount,
       NULL supplier_can_opt_refund,
       NULL ecom_gstin,
       NULL other_reference
  FROM ra_customer_trx_all rcta,
       ra_cust_trx_types_all rctt,
       (SELECT DISTINCT rctd.customer_trx_id,
                        iop.organization_id,
                        iop.organization_code,
                        iop.legal_entity_id,
                        iop.attribute1
          FROM ra_cust_trx_line_gl_dist_all rctd,
               gl_code_combinations gcc,
               inv_org_parameters iop,
               xla_mapping_set_values xmsv
         WHERE     1 = 1
               AND gcc.segment2 = xmsv.value_constant
               AND xmsv.input_value_constant1 = TO_CHAR (iop.organization_id)
               AND xmsv.enabled_flag = 'Y'
               AND xmsv.mapping_set_code = 'UFSL_INV_LOC_CST'
               AND gcc.code_combination_id = rctd.code_combination_id
               AND rctd.account_class = 'REC') rctd,
       hz_cust_accounts hca_b,
       hz_parties hp_b,
       hz_cust_site_uses_all hcsu_b,
       hz_cust_acct_sites_all hcas_b,
       hz_party_sites hps_b,
       hz_locations hl_b,
       zx_party_tax_profile zptp_b,
       zx_registrations zr_b,
       ra_customer_trx_lines_all rctla,
       (SELECT esib.organization_id,
               esib.inventory_item_id,
               esib.item_number,
               REGEXP_REPLACE (esit.description, '[^[:alnum:]'' '']', '')
                  description,
               eieb.attribute_char1 hsn_or_sac
          FROM egp_system_items_tl esit,
               egp_system_items_b esib,
               ego_item_eff_b eieb,
               inv_org_parameters iop
         WHERE     1 = 1
               AND iop.organization_id = esit.organization_id
               AND iop.master_organization_id = eieb.organization_id(+)
               AND eieb.context_code(+) = 'UCAL Attributes'
               AND esib.inventory_item_id = eieb.inventory_item_id(+)
               AND esit.organization_id = esib.organization_id
               AND esib.inventory_item_id = esit.inventory_item_id) esi,
       (  SELECT SUM (tax_rate) tax_rate,
                 trx_id,
                 trx_line_id,
                 ROUND (unrounded_taxable_amt, 2) unrounded_taxable_amt
            FROM zx_lines zl
           WHERE     1 = 1
                 AND zl.entity_code = 'TRANSACTIONS'
                 AND zl.tax LIKE '%GST%'
                 AND zl.application_id = 222                 -- AR Application
        GROUP BY trx_id, trx_line_id, unrounded_taxable_amt) tax_rate,
       (  SELECT trx_id, trx_line_id, ROUND (unrounded_tax_amt, 2) tax_amount
            FROM zx_lines zl
           WHERE     1 = 1
                 AND zl.entity_code = 'TRANSACTIONS'
                 AND zl.tax LIKE '%SGST%'
                 AND zl.application_id = 222                 -- AR Application
        GROUP BY trx_id, trx_line_id, unrounded_tax_amt) sgst,
       (  SELECT trx_id, trx_line_id, ROUND (unrounded_tax_amt, 2) tax_amount
            FROM zx_lines zl
           WHERE     1 = 1
                 AND zl.entity_code = 'TRANSACTIONS'
                 AND zl.tax LIKE '%CGST%'
                 AND zl.application_id = 222                 -- AR Application
        GROUP BY trx_id, trx_line_id, unrounded_tax_amt) cgst,
       (  SELECT trx_id, trx_line_id, ROUND (unrounded_tax_amt, 2) tax_amount
            FROM zx_lines zl
           WHERE     1 = 1
                 AND zl.entity_code = 'TRANSACTIONS'
                 AND zl.tax LIKE '%IGST%'
                 AND zl.application_id = 222                 -- AR Application
        GROUP BY trx_id, trx_line_id, unrounded_tax_amt) igst,
       (  SELECT trx_id, trx_line_id, ROUND (unrounded_tax_amt, 2) tax_amount
            FROM zx_lines zl
           WHERE     1 = 1
                 AND zl.entity_code = 'TRANSACTIONS'
                 AND zl.tax LIKE '%TCS%'
                 AND zl.application_id = 222                 -- AR Application
        GROUP BY trx_id, trx_line_id, unrounded_tax_amt) tcs,
       xle_entity_profiles xep,
       (SELECT DISTINCT trx_id, bill_from_location_id
          FROM zx_lines_det_factors
         WHERE     1 = 1
               AND entity_code = 'TRANSACTIONS'
               AND application_id = 222                      -- AR Application
                                       ) zldf,
       hr_locations hrl,
       hz_cust_accounts hca_s,
       hz_parties hp_s,
       --       hz_cust_site_uses_all hcsu_s,
       hz_cust_acct_sites_all hcas_s,
       hz_party_site_uses hcsu_s,
       hz_party_sites hps_s,
       hz_locations hl_s,
       zx_party_tax_profile zptp_s,
       zx_registrations zr_s,
       (SELECT owner_table_id, email_address
          FROM hz_contact_points
         WHERE     contact_point_type = 'EMAIL'
               AND owner_table_name = 'HZ_PARTY_SITES'
               AND primary_flag = 'Y') hcp_se,
       (SELECT owner_table_id, email_address
          FROM hz_contact_points
         WHERE     contact_point_type = 'EMAIL'
               AND owner_table_name = 'HZ_PARTY_SITES'
               AND primary_flag = 'Y') hcp_e,
       (SELECT owner_table_id,
               REGEXP_REPLACE (raw_phone_number, '[^[:alnum:]'' '']', '')
                  raw_phone_number
          FROM hz_contact_points
         WHERE     contact_point_type = 'PHONE'
               AND owner_table_name = 'HZ_PARTY_SITES'
               AND primary_flag = 'Y') hcp_sp,
       (SELECT owner_table_id,
               REGEXP_REPLACE (raw_phone_number, '[^[:alnum:]'' '']', '')
                  raw_phone_number
          FROM hz_contact_points
         WHERE     contact_point_type = 'PHONE'
               AND owner_table_name = 'HZ_PARTIES'
               AND primary_flag = 'Y') hcp_p,
       ra_customer_trx_all rcta_orig,
       zx_party_tax_profile zptp_sez,
       hz_code_assignments hca,
       fnd_lookup_values flv_bst,
       fnd_lookup_values flv_sst,
       fnd_lookup_values flv_uom,
       hr_organization_units hou,
       (SELECT wnd.attribute2 mode_of_transport,
               wnd.attribute7 vehicle_type,
               wnd.attribute3 vehicle_no,
               TO_CHAR (wnd.attribute_number2) distance,
               rctla.customer_trx_line_id,
               psv.vendor_name transporter,
               zr.registration_number transporter_gstn,
               wnd.waybill
          FROM wsh_new_deliveries wnd,
               ra_customer_trx_lines_all rctla,
               poz_supplier_sites_all_m pssm,
               poz_suppliers_v psv,
               zx_party_tax_profile zptp,
               zx_registrations zr
         WHERE     1 = 1
               AND zr.party_tax_profile_id(+) = zptp.party_tax_profile_id
               AND (zr.tax_regime_code(+)) LIKE '%GST%'
               AND (zr.effective_to IS NULL
                    OR zr.effective_to > TRUNC (SYSDATE))
               AND zptp.party_id(+) = pssm.party_site_id
               AND zptp.supplier_flag(+) = 'Y'
               AND zptp.site_flag(+) = 'Y'
               AND psv.vendor_id = pssm.vendor_id
               AND pssm.vendor_site_id = wnd.ATTRIBUTE_NUMBER1
               AND wnd.delivery_id = rctla.interface_line_attribute7
               AND rctla.interface_line_context = 'DOO') eway,
       poz_supplier_sites_all_m pssm_e,
       poz_suppliers_v psv_e,
       zx_party_tax_profile zptp_e,
       zx_registrations zr_e
 WHERE     1 = 1
       AND zr_e.party_tax_profile_id(+) = zptp_e.party_tax_profile_id
       AND (zr_e.tax_regime_code(+)) LIKE '%GST%'
       AND (zr_e.effective_to IS NULL OR zr_e.effective_to > TRUNC (SYSDATE))
       AND zptp_e.party_id(+) = pssm_e.party_site_id
       AND zptp_e.supplier_flag(+) = 'Y'
       AND zptp_e.site_flag(+) = 'Y'
       AND psv_e.vendor_id(+) = pssm_e.vendor_id
       AND TO_CHAR (pssm_e.vendor_site_id(+)) = rcta.attribute6
       AND eway.customer_trx_line_id(+) = rctla.customer_trx_line_id
       AND ( (eway.customer_trx_line_id IS NOT NULL AND eway.waybill IS NULL)
            OR eway.customer_trx_line_id IS NULL) -- added by kumar on 09Jul21 to ignore backlog invoices
       AND hou.organization_id = rctd.organization_id
       AND hou.location_id = hrl.location_id
       AND flv_uom.lookup_type(+) = 'UFSL_EINV_UOM_MAPPING'
       AND flv_uom.enabled_flag(+) = 'Y'
       AND rctla.uom_code = flv_uom.lookup_code(+)
       AND UPPER (hl_s.state) = UPPER (flv_sst.meaning(+))
       AND flv_sst.lookup_type(+) = 'UCAL_IN_STATE_CODES'
       AND flv_sst.enabled_flag(+) = 'Y'
       AND UPPER (hl_b.state) = UPPER (flv_bst.meaning(+))
       AND flv_bst.lookup_type(+) = 'UCAL_IN_STATE_CODES'
       AND flv_bst.enabled_flag(+) = 'Y'
       AND zptp_sez.party_tax_profile_id = hca.owner_table_id(+)
       AND (hca.end_date_active IS NULL
            OR TRUNC (hca.end_date_active) > TRUNC (SYSDATE))
       AND hca.class_category(+) = 'UFSL_SEZ_APPLICABLE'
       AND hca.owner_table_name(+) = 'ZX_PARTY_TAX_PROFILE'
       AND hps_b.party_site_id = zptp_sez.party_id(+)
       AND zptp_sez.customer_flag(+) = 'Y'
       AND zptp_sez.site_flag(+) = 'Y'
       AND rcta.previous_customer_trx_id = rcta_orig.customer_trx_id(+)
       AND hcp_se.owner_table_id(+) = hps_b.party_site_id
       AND hcp_sp.owner_table_id(+) = hps_b.party_site_id
       AND hcp_e.owner_table_id(+) = hps_b.party_id
       AND hcp_p.owner_table_id(+) = hps_b.party_id
       AND zr_s.registration_type_code(+) = 'GST'
       AND (zr_s.effective_to IS NULL OR zr_s.effective_to > TRUNC (SYSDATE))
       AND zptp_s.party_tax_profile_id = zr_s.party_tax_profile_id(+)
       AND zptp_s.customer_flag(+) = 'Y'
       AND zptp_s.site_flag(+) = 'Y'
       AND hps_s.party_site_id = zptp_s.party_id(+)
       AND hl_s.location_id(+) = hps_s.location_id
       AND hps_s.party_site_id(+) = hcas_s.party_site_id
       AND hcas_s.party_site_id(+) = hcsu_s.party_site_id
       AND hcsu_s.party_site_use_id(+) = rcta.ship_to_party_site_use_id
       AND hp_s.party_id(+) = hca_s.party_id
       AND hca_s.party_id(+) = rcta.ship_to_party_id
       AND rcta.customer_trx_id = zldf.trx_id(+)
       AND ( (rcta.invoice_currency_code = 'INR' AND zldf.trx_id IS NOT NULL)
            OR (rcta.invoice_currency_code <> 'INR'))
       AND rcta.legal_entity_id = xep.legal_entity_id
       AND rctla.customer_trx_line_id = tcs.trx_line_id(+)
       AND rctla.customer_trx_line_id = igst.trx_line_id(+)
       AND rctla.customer_trx_line_id = cgst.trx_line_id(+)
       AND rctla.customer_trx_line_id = sgst.trx_line_id(+)
       AND rctla.customer_trx_line_id = tax_rate.trx_line_id(+)
       AND rctla.customer_trx_id = tax_rate.trx_id(+)
       AND ( (rcta.invoice_currency_code = 'INR'
              AND tax_rate.trx_id IS NOT NULL)
            OR (rcta.invoice_currency_code <> 'INR'))
       AND esi.inventory_item_id(+) = rctla.inventory_item_id
       AND esi.organization_id(+) = rctd.organization_id
       AND rcta.customer_trx_id = rctla.customer_trx_id
       AND rctla.line_type = 'LINE'
       AND ( (NVL (zr_b.registration_number, 'UNREGISTERED') <>
                 'UNREGISTERED'
              AND rcta.invoice_currency_code = 'INR')
            OR rcta.invoice_currency_code <> 'INR')
       AND zr_b.tax_regime_code(+) LIKE '%GST%'
       AND (zr_b.effective_to IS NULL OR zr_b.effective_to > TRUNC (SYSDATE))
       AND zptp_b.party_tax_profile_id = zr_b.party_tax_profile_id(+)
       AND zptp_b.customer_flag(+) = 'Y'
       AND zptp_b.site_flag(+) = 'Y'
       AND hps_b.party_site_id = zptp_b.party_id(+)
       AND hl_b.location_id = hps_b.location_id
       AND hps_b.party_site_id = hcas_b.party_site_id
       AND hcas_b.cust_acct_site_id = hcsu_b.cust_acct_site_id
       AND hcsu_b.site_use_id = rcta.bill_to_site_use_id
       AND hp_b.party_id = hca_b.party_id
       AND hca_b.cust_account_id = rcta.bill_to_customer_id
       AND rcta.customer_trx_id = rctd.customer_trx_id
       AND rcta.cust_trx_type_seq_id = rctt.cust_trx_type_seq_id
       AND rcta.attribute10 IS NULL -- added by kumar on 09Jul21 to ignore backlog invoices
       AND (UPPER (rctt.attribute3) = 'YES'                  -- IRN Applicable
                                           AND rctt.attribute1 = 'ST'
            AND NVL (flv_bst.description, '96') <>
                   SUBSTR (rctd.attribute1, 1, 2)
            OR (UPPER (rctt.attribute3) = 'YES' AND rctt.attribute1 <> 'ST'))
       AND rctt.TYPE IN ('INV', 'CM', 'DM')
       AND rcta.complete_flag = 'Y'
       AND ( (    UPPER (rctt.attribute4) = 'YES'
              AND eway.customer_trx_line_id IS NOT NULL -- shipment level Eway Applicable
              AND eway.mode_of_transport IS NOT NULL
              AND eway.vehicle_type IS NOT NULL
              AND eway.vehicle_no IS NOT NULL
              AND eway.transporter IS NOT NULL)
            OR (    UPPER (rctt.attribute4) = 'YES'
                AND eway.customer_trx_line_id IS NULL -- transction level Eway Applicable
                AND rcta.attribute2 IS NOT NULL
                AND rcta.attribute8 IS NOT NULL
                AND rcta.attribute1 IS NOT NULL
                AND rcta.attribute6 IS NOT NULL)
            OR (UPPER (NVL (rctt.attribute4, 'NO')) = 'NO'))
       --       AND TRUNC (rcta.trx_date) >=
       --              TO_DATE (
       --                 TO_CHAR (SYSTIMESTAMP AT TIME ZONE 'Asia/Calcutta',
       --                          'dd-MM-YYYY'),
       --                 'dd-MM-YYYY')
       --              - 3
       --       AND rcta.trx_number IN ('100110042')
       AND (rcta.trx_number,
            rcta.trx_date,
            (CASE
                WHEN rctt.TYPE = 'INV' THEN 'INV'
                WHEN rctt.TYPE = 'DM' THEN 'DBN'
                WHEN rctt.TYPE = 'CM' THEN 'CRN'
             END)) NOT IN
              (SELECT extn_attribute_char008,
                      extn_attribute_timestamp002,
                      extn_attribute_char009
                 FROM moo_ref_entities
                WHERE 1 = 1 AND attribute_category = 'UCALEInvoicing_c'
                      AND (extn_attribute_char012 IS NOT NULL
                           OR (extn_attribute_char012 IS NULL
                               AND NVL (extn_attribute_char013, 'N') = 'N') -- if retry not checked
                                                                           )
                      AND extn_attribute_char008 IS NOT NULL
                      AND extn_attribute_timestamp002 IS NOT NULL
                      AND extn_attribute_char009 IS NOT NULL)
-----------------------------UCAL Maruti EDI Extract DM------------------------------
SELECT 'U124' ||                                               -- vendor_code,
                RPAD (rct.trx_number, 16)
       ||                                                       --invoice_num,
          (TO_CHAR (rct.trx_date,
                    'DD-MON-YYYY',
                    'NLS_DATE_LANGUAGE = AMERICAN'))
       ||                                                          --inv_date,
         RPAD (rct.trx_number, 16)
       ||                                                       --invoice_num,
          (TO_CHAR (rct.trx_date,
                    'DD-MON-YYYY',
                    'NLS_DATE_LANGUAGE = AMERICAN'))
       ||                                                          --inv_date,
         CHR (32)
       ||                                                                  --,
         CHR (32)
       ||                                                                  --,
         CHR (32)
       ||                                                                  --,
         CHR (32)
       ||                                                                  --,
         CHR (32)
       ||                                                                  --,
         CHR (32)
       ||                                                                  --,
         CHR (32)
       ||                                                                  --,
         CHR (32)
       ||                                                                  --,
         CHR (32)
       ||                                                                  --,
         CHR (32)
       ||                                                                  --,
         CHR (32)
       ||                                                                  --,
         CHR (32)
       ||                                                                  --,
         CHR (32)
       ||                                                                  --,
         CHR (32)
       ||                                                                  --,
         CHR (32)
       ||                                                                  --,
         CHR (32)
       ||                                                                  --,
         CHR (32)
       ||                                                                  --,
         CHR (32)
       ||                                                                  --,
         CHR (32)
       ||                                                                  --,
         CHR (32)
       ||                                                                  --,
         CHR (32)
       ||                                                                  --,
         CHR (32)
       ||                                                                  --,
         CHR (32)
       ||                                                                  --,
         CHR (32)
       ||                                                                  --,
         CASE
             WHEN rct.interface_header_attribute4 LIKE '%OE%' THEN '1'
             WHEN rct.interface_header_attribute4 LIKE '%SP%' THEN 'S'
          END
       ||                                                                  --,
         RPAD (wnd.attribute1, 15)
       ||                -- nagara_num, -- should be updated with shipment DFF
         RPAD (
             NVL (
                (SELECT ep.tp_item_number
                   FROM egp_trading_partner_items ep,
                        egp_item_relationships_b eir
                  WHERE     ep.tp_item_id = eir.tp_item_id
                        AND eir.inventory_item_id = rtl.inventory_item_id
                        AND ep.tp_type = 'CUSTOMER'
                        AND ep.trading_partner_id = hca.party_id
                        AND (eir.end_date_active IS NULL
                             OR TRUNC (eir.end_date_active) > TRUNC (SYSDATE))
                        AND ROWNUM = 1),
                CHR (32)),
             15)
       ||                                                     --customer_item,
         RPAD (TO_CHAR (rtl.quantity_invoiced), 12)
       ||                                                           --inv_qty,
         RPAD (NVL (rct.purchase_order, CHR (32)), 7)
       ||                                                       --cust_po_num,
         RPAD (CHR (32), 10)
       ||                                                                  --,
         RPAD (CHR (32), 12)
       ||        --bin_qty, -- DFF from item table to capture the bin quantity
         RPAD (CHR (32), 40)
       ||                                                                  --,
         RPAD (CHR (32), 10)
       ||                                                                  --,
         RPAD (rctd.attribute1, 15)
       ||                                                           --gst_num,
         RPAD (NVL (SUBSTR (eieb.attribute_char1, 1, 4), CHR (32)), 4)
       ||                                                            --hsn_no,
         RPAD (NVL (cgst.tax_amount, CHR (32)), 16)
       ||                                                                  --,
         RPAD (NVL (sgst.tax_amount, CHR (32)), 16)
       ||                                                                  --,
         RPAD (NVL (igst.tax_amount, CHR (32)), 16)
       ||                                                                  --,
         LPAD (CHR (32) || 'NA', 15)
          trx
  FROM ra_customer_trx_all rct,
       ra_customer_trx_lines_all rtl,
       hz_cust_accounts hca,
       hz_parties hp,
       (SELECT DISTINCT rctd.customer_trx_id,
                        iop.organization_id,
                        iop.organization_code,
                        iop.attribute1,
                        iop.master_organization_id
          FROM ra_cust_trx_line_gl_dist_all rctd,
               gl_code_combinations gcc,
               inv_org_parameters iop,
               xla_mapping_set_values xmsv
         WHERE     1 = 1
               AND gcc.segment2 = xmsv.value_constant
               AND xmsv.input_value_constant1 = TO_CHAR (iop.organization_id)
               AND xmsv.enabled_flag = 'Y'
               AND xmsv.mapping_set_code = 'UFSL_INV_LOC_CST'
               AND gcc.code_combination_id = rctd.code_combination_id
               AND rctd.account_class = 'REC') rctd,
       ego_item_eff_b eieb,
       (  SELECT trx_id,
                 LPAD (TO_CHAR (SUM (unrounded_tax_amt)), 16) tax_amount,
                 trx_line_id
            FROM zx_lines zl
           WHERE     1 = 1
                 AND zl.entity_code = 'TRANSACTIONS'
                 AND zl.tax LIKE '%SGST%'
                 AND zl.application_id = 222                 -- AR Application
        GROUP BY trx_id, trx_line_id) sgst,
       (  SELECT trx_id,
                 LPAD (TO_CHAR (SUM (unrounded_tax_amt)), 16) tax_amount,
                 trx_line_id
            FROM zx_lines zl
           WHERE     1 = 1
                 AND zl.entity_code = 'TRANSACTIONS'
                 AND zl.tax LIKE '%CGST%'
                 AND zl.application_id = 222                 -- AR Application
        GROUP BY trx_id, trx_line_id) cgst,
       (  SELECT trx_id,
                 LPAD (TO_CHAR (SUM (unrounded_tax_amt)), 16) tax_amount,
                 trx_line_id
            FROM zx_lines zl
           WHERE     1 = 1
                 AND zl.entity_code = 'TRANSACTIONS'
                 AND zl.tax LIKE '%IGST%'
                 AND zl.application_id = 222                 -- AR Application
        GROUP BY trx_id, trx_line_id) igst,
       wsh_new_deliveries wnd
 WHERE     1 = 1
       AND TO_CHAR (wnd.delivery_id(+)) = rtl.interface_line_attribute7
       AND rct.customer_trx_id = igst.trx_id(+)
       AND rtl.customer_trx_line_id = igst.trx_line_id(+)
       AND rct.customer_trx_id = cgst.trx_id(+)
       AND rtl.customer_trx_line_id = cgst.trx_line_id(+)
       AND rct.customer_trx_id = sgst.trx_id(+)
       AND rtl.customer_trx_line_id = sgst.trx_line_id(+)
       AND eieb.context_code(+) = 'UCAL Attributes'
       AND rctd.master_organization_id = eieb.organization_id(+)
       AND rtl.inventory_item_id = eieb.inventory_item_id(+)
       AND rctd.customer_trx_id = rct.customer_trx_id
       AND UPPER (hp.party_name) LIKE '%MARUTI%'
       AND hca.party_id = hp.party_id
       AND rct.bill_to_customer_id = hca.cust_account_id
       AND rct.customer_trx_id = rtl.customer_trx_id
       AND line_type = 'LINE'
       AND rctd.organization_code = :p_organization_code
       AND rct.trx_number BETWEEN NVL (:p_invoice_number_low, rct.trx_number)
                              AND NVL (:p_invoice_number_high,
                                       rct.trx_number)
-----------------------------------UCAL_Credit_Memo_DM------------------------------
---HEADER---
/* Formatted on 12/07/2021 8:10:42 AM (QP5 v5.163.1008.3004) */
SELECT rcta.customer_trx_id,
       hca_bill.party_id,
       rcta.trx_number invoice_number,
       TO_CHAR (rcta.trx_date, 'DD-MON-RRRR', 'NLS_DATE_LANGUAGE = AMERICAN')
          invoice_date,
       xle.name legal_entity_name,
       hrl.address_line_1 io_address1,
       hrl.address_line_2 io_address2,
       hrl.address_line_3 io_address3,
       hrl.address_line_4 io_address4,
       hrl.town_or_city io_city,
       hrl.region_2 io_state,
       hrl.postal_code io_postal_code,
       hrl.country io_country,
       xle.legal_entity_identifier org_cin_no,
       TO_CHAR (SYSTIMESTAMP AT TIME ZONE 'Asia/Calcutta',
                'DD-MON-RRRR',
                'NLS_DATE_LANGUAGE = AMERICAN')
          date_of_removal,
       TO_CHAR (SYSTIMESTAMP AT TIME ZONE 'Asia/Calcutta', 'HH24:MI')
          time_of_removal,
       rctd.attribute1 org_gstin,
       hrl.region_2 org_state_code,
       (SELECT reg.registration_number
          FROM xle_registrations reg, xle_jurisdictions_b jur
         WHERE     reg.source_id = xle.legal_entity_id
               AND reg.source_table = 'XLE_ENTITY_PROFILES'
               AND jur.jurisdiction_id = reg.jurisdiction_id
               AND jur.registration_code_le = 'PAN')
          org_pan_number,
       NULL range,
       NULL division,                                                   --null
       NULL comm,                                                       --null
       hp_bill.party_name buyer_name,
       hl_bill.address1 buyer_address1,
       hl_bill.address2 buyer_address2,
       hl_bill.address3 buyer_address3,
       hl_bill.address4 buyer_address4,
       hl_bill.state buyer_state_name,
       hl_bill.city buyer_city,
       hl_bill.postal_code buyer_postal_code,
       buyer_reg.registration_number buyer_gstin,
       SUBSTR (buyer_reg.registration_number, 1, 2) buyer_state_code,
       NVL (hp_ship.party_name, hp_bill.party_name) ship_to_name,
       NVL (hl_ship.address1, hl_bill.address1) ship_to_address1,
       NVL (hl_ship.address2, hl_bill.address2) ship_to_address2,
       NVL (hl_ship.address3, hl_bill.address3) ship_to_address3,
       NVL (hl_ship.address4, hl_bill.address4) ship_to_address4,
       NVL (hl_ship.state, hl_bill.state) ship_to_state_name,
       NVL (hl_ship.city, hl_bill.city) ship_to_city,
       NVL (hl_ship.postal_code, hl_bill.postal_code) ship_to_postal_code,
       NVL (ship_to_reg.registration_number, buyer_reg.registration_number)
          ship_to_gstin,
       SUBSTR (
          NVL (ship_to_reg.registration_number,
               buyer_reg.registration_number),
          1,
          2)
          ship_to_state_code,
       CASE
          WHEN interface_header_context = 'DOO'
          THEN
             interface_header_attribute4
          ELSE
             NULL
       END
          order_type,
       (SELECT zre.extn_attribute_char006
          FROM mkt_ref_entities zre
         WHERE zre.attribute_category = 'UCALCustomerVendorCode_c'
               AND zre.extn_attribute_char001 =
                      TO_CHAR (hps_bill.party_site_number)
               AND zre.extn_attribute_char002 = rctd.organization_code)
          vendor_code,
       rcta.purchase_order order_reference,
       wsh.transporter carrier,
       wsh.attribute2 mode_of_transport,
       wsh.attribute3 vehicle_no,
       wsh.attribute4 || ' ' || wsh.attribute_number3 packing_details,
       NULL lr_rrr_air_no,
       NULL lr_rrr_air_date,
       NVL (hl_ship.state, hl_bill.state) place_of_delivery,
       rctd.attribute3 insurance_policy_no,
       rctd.insurance_policy_date,
       NULL insured_for,
       NULL insurance_serial_no,
       NVL (
          wsh.attribute6,
          (SELECT note.note_txt
             FROM zmm_notes note
            WHERE note.source_object_code = 'AR_TRANSACTION'
                  AND rcta.customer_trx_id = note.source_object_uid))
          remarks,
       wsh.attribute5 freight,
       NULL freight_amount,
       'HEF3' shop,
       '3EO' gate_no,
       'ENG3' location,
       NULL recieved_date,
       NULL mrir_no,
       NULL received_qty,
       NULL rejection_qty,
       NULL rejection_code,
       NULL checked_by,
       NULL cardex_entry,
       NULL inspect_qty,
       NULL rejection,
       NULL reason_code,
       NULL qc_charge,
       NULL accept_qty,
       NULL place,
       NULL place_date,
       NULL place_time,
       (SELECT extn_attribute_char008
          FROM zca_ref_entities
         WHERE     attribute_category = 'UCALEDIASN_c'
               AND extn_attribute_char006 = rctd.organization_code
               AND extn_attribute_char007 = rcta.trx_number)
          asn_bar_code,
       (SELECT extn_attribute_char012 irn
          FROM moo_ref_entities mre
         WHERE     1 = 1
               AND attribute_category = 'UCALEInvoicing_c'
               AND mre.extn_attribute_char008 = rcta.trx_number
               AND TRUNC (mre.extn_attribute_timestamp002) =
                      TRUNC (rcta.trx_date)
               AND mre.extn_attribute_char009 = 'CRN')
          irn_number,
       (SELECT extn_attribute_clob002 irn
          FROM moo_ref_entities mre
         WHERE     1 = 1
               AND attribute_category = 'UCALEInvoicing_c'
               AND mre.extn_attribute_char008 = rcta.trx_number
               AND TRUNC (mre.extn_attribute_timestamp002) =
                      TRUNC (rcta.trx_date)
               AND mre.extn_attribute_char009 = 'CRN')
          qr_code,
       rctd.total_amount,
       REGEXP_REPLACE (
          iby_amount_in_words.get_amount_in_words (rctd.total_amount,
                                                   'INR',
                                                   2),
          '\*| And  Zero Paise|^And ',
          NULL)
          total_amount_in_words,
       NVL (igst.tax_amount, 0) total_igst,
       REGEXP_REPLACE (
          iby_amount_in_words.get_amount_in_words (NVL (igst.tax_amount, 0),
                                                   'INR',
                                                   2),
          '\*| And  Zero Paise|^And ',
          NULL)
          igst_amount_in_words,
       NVL (cgst.tax_amount, 0) total_cgst,
       REGEXP_REPLACE (
          iby_amount_in_words.get_amount_in_words (NVL (cgst.tax_amount, 0),
                                                   'INR',
                                                   2),
          '\*| And  Zero Paise|^And ',
          NULL)
          cgst_amount_in_words,
       NVL (sgst.tax_amount, 0) total_sgst,
       REGEXP_REPLACE (
          iby_amount_in_words.get_amount_in_words (NVL (sgst.tax_amount, 0),
                                                   'INR',
                                                   2),
          '\*| And  Zero Paise|^And ',
          NULL)
          sgst_amount_in_words,
       NVL (tcs.tax_amount, 0) total_tcs,
       REGEXP_REPLACE (
          iby_amount_in_words.get_amount_in_words (NVL (tcs.tax_amount, 0),
                                                   'INR',
                                                   2),
          '\*| And  Zero Paise|^And ',
          NULL)
          tcs_amount_in_words,
       rctd.total_amount
       - (  NVL (igst.tax_amount, 0)
          + NVL (cgst.tax_amount, 0)
          + NVL (sgst.tax_amount, 0)
          + NVL (tcs.tax_amount, 0))
          total_material_value,
       REGEXP_REPLACE (
          iby_amount_in_words.get_amount_in_words (
             NVL (
                rctd.total_amount
                - (  NVL (igst.tax_amount, 0)
                   + NVL (cgst.tax_amount, 0)
                   + NVL (sgst.tax_amount, 0)
                   + NVL (tcs.tax_amount, 0)),
                0),
             'INR',
             2),
          '\*| And  Zero Paise|^And ',
          NULL)
          total_material_value_in_words,
       rcta.invoice_currency_code,
       'CM:' || rctd.organization_code || ':' || rcta.trx_number trx_qr_code
  FROM ra_customer_trx_all rcta,
       hr_operating_units hou,
       (  SELECT rctd.customer_trx_id,
                 iop.organization_id,
                 iop.organization_code,
                 iop.legal_entity_id,
                 iop.attribute1,
                 iop.attribute3,
                 TO_CHAR (iop.attribute_date1,
                          'DD-MON-RRRR',
                          'NLS_DATE_LANGUAGE = AMERICAN')
                    insurance_policy_date,
                 ABS (SUM (amount)) total_amount
            FROM ra_cust_trx_line_gl_dist_all rctd,
                 gl_code_combinations gcc,
                 inv_org_parameters iop,
                 xla_mapping_set_values xmsv
           WHERE     1 = 1
                 AND gcc.segment2 = xmsv.value_constant
                 AND xmsv.input_value_constant1 = TO_CHAR (iop.organization_id)
                 AND xmsv.enabled_flag = 'Y'
                 AND xmsv.mapping_set_code = 'UFSL_INV_LOC_CST'
                 AND gcc.code_combination_id = rctd.code_combination_id
                 AND rctd.account_class = 'REC'
        GROUP BY rctd.customer_trx_id,
                 iop.organization_id,
                 iop.organization_code,
                 iop.legal_entity_id,
                 iop.attribute1,
                 iop.attribute3,
                 TO_CHAR (iop.attribute_date1,
                          'DD-MON-RRRR',
                          'NLS_DATE_LANGUAGE = AMERICAN')) rctd,
       hr_organization_units ood,
       xle_entity_profiles xle,
       hr_locations hrl,
       hz_cust_accounts hca_bill,
       hz_parties hp_bill,
       ra_cust_trx_types_all rctt,
       hz_cust_site_uses_all hcsu_bill,
       hz_cust_acct_sites_all hcas_bill,
       hz_party_sites hps_bill,
       hz_locations hl_bill,
       (SELECT zr.registration_number, zptp.party_id
          FROM zx_party_tax_profile zptp, zx_registrations zr
         WHERE     1 = 1
               AND zptp.party_tax_profile_id = zr.party_tax_profile_id
               AND zr.registration_type_code LIKE '%GST%'
               AND zptp.party_type_code = 'THIRD_PARTY_SITE'
               AND zptp.customer_flag = 'Y'
               AND (zr.effective_to IS NULL OR zr.effective_to > SYSDATE)) buyer_reg,
       hz_cust_accounts hca_ship,
       hz_parties hp_ship,
       --       hz_cust_site_uses_all hcsu_ship,
       hz_party_site_uses hcsu_ship,
       hz_cust_acct_sites_all hcas_ship,
       hz_party_sites hps_ship,
       hz_locations hl_ship,
       (SELECT zr.registration_number, zptp.party_id
          FROM zx_party_tax_profile zptp, zx_registrations zr
         WHERE     1 = 1
               AND zptp.party_tax_profile_id = zr.party_tax_profile_id
               AND zr.registration_type_code LIKE '%GST%'
               AND zptp.party_type_code = 'THIRD_PARTY_SITE'
               AND zptp.customer_flag = 'Y'
               AND (zr.effective_to IS NULL OR zr.effective_to > SYSDATE)) ship_to_reg,
       (SELECT DISTINCT wnd.attribute1,
                        wnd.attribute2,
                        wnd.attribute3,
                        wnd.attribute4,
                        wnd.attribute5,
                        wnd.attribute6,
                        wnd.attribute_number3,
                        psv.vendor_name transporter,
                        rctla.customer_trx_id
          FROM wsh_new_deliveries wnd,
               ra_customer_trx_lines_all rctla,
               poz_supplier_sites_all_m pssm,
               poz_suppliers_v psv
         WHERE     1 = 1
               AND psv.vendor_id(+) = pssm.vendor_id
               AND pssm.vendor_site_id(+) = wnd.attribute_number1
               AND TO_CHAR (wnd.delivery_id) =
                      rctla.interface_line_attribute7) wsh,      --added 22/04
       (  SELECT trx_id, ABS (SUM (unrounded_tax_amt)) tax_amount
            FROM zx_lines
           WHERE     entity_code = 'TRANSACTIONS'
                 AND tax LIKE '%IGST%'
                 AND application_id = 222
        GROUP BY trx_id) igst,
       (  SELECT trx_id, ABS (SUM (unrounded_tax_amt)) tax_amount
            FROM zx_lines
           WHERE     entity_code = 'TRANSACTIONS'
                 AND tax LIKE '%CGST%'
                 AND application_id = 222
        GROUP BY trx_id) cgst,
       (  SELECT trx_id, ABS (SUM (unrounded_tax_amt)) tax_amount
            FROM zx_lines
           WHERE     entity_code = 'TRANSACTIONS'
                 AND tax LIKE '%SGST%'
                 AND application_id = 222
        GROUP BY trx_id) sgst,
       (  SELECT trx_id, ABS (SUM (unrounded_tax_amt)) tax_amount
            FROM zx_lines
           WHERE     entity_code = 'TRANSACTIONS'
                 AND tax LIKE '%TCS%'
                 AND application_id = 222
        GROUP BY trx_id) tcs
 WHERE     1 = 1
       AND rcta.customer_trx_id = tcs.trx_id(+)
       AND rcta.customer_trx_id = sgst.trx_id(+)
       AND rcta.customer_trx_id = cgst.trx_id(+)
       AND rcta.customer_trx_id = igst.trx_id(+)
       AND rctt.cust_trx_type_seq_id = rcta.cust_trx_type_seq_id
       AND hps_ship.party_site_id = ship_to_reg.party_id(+)
       AND hps_bill.party_site_id = buyer_reg.party_id(+)
       AND hl_ship.location_id(+) = hps_ship.location_id
       AND hps_ship.party_site_id(+) = hcas_ship.party_site_id
       AND hcas_ship.party_site_id(+) = hcsu_ship.party_site_id
       AND hcsu_ship.party_site_use_id(+) = rcta.ship_to_party_site_use_id
       AND hca_ship.party_id = hp_ship.party_id(+)
       AND hca_ship.party_id(+) = rcta.ship_to_party_id
       AND hl_bill.location_id = hps_bill.location_id
       AND hps_bill.party_site_id = hcas_bill.party_site_id
       AND hcas_bill.cust_acct_site_id = hcsu_bill.cust_acct_site_id
       AND hcsu_bill.site_use_id = rcta.bill_to_site_use_id
       AND hca_bill.party_id = hp_bill.party_id
       AND hca_bill.cust_account_id = rcta.bill_to_customer_id
       AND hrl.location_id = ood.location_id
       AND xle.legal_entity_id = rctd.legal_entity_id
       AND rctd.organization_id = ood.organization_id
       AND rcta.customer_trx_id = rctd.customer_trx_id
       AND rcta.org_id = hou.organization_id
       AND rcta.customer_trx_id = wsh.customer_trx_id(+)         --added 22/04
       AND rctt.TYPE = 'CM'
       AND rcta.trx_date BETWEEN NVL (:p_invoice_date_low, rcta.trx_date) --added 26-4-2021
                             AND NVL (:p_invoice_date_high, rcta.trx_date)
       AND rcta.trx_number BETWEEN NVL (:p_invoice_number_low,
                                        rcta.trx_number)
                               AND NVL (:p_invoice_number_high,
                                        rcta.trx_number)
       AND rctd.organization_code = :p_organization_code
------LINES-------
/* Formatted on 28/07/2021 2:46:29 PM (QP5 v5.163.1008.3004) */
--Lines ----26/4///27/4

SELECT rctal.customer_trx_id,
       hca.party_id,
       esi.inventory_item_id,
       esi.organization_id,
       rctal.customer_trx_line_id,
       rctal.line_number sl_no,
       esi.item_number,
       (SELECT ep.tp_item_number
          FROM egp_trading_partner_items ep, egp_item_relationships_b eir
         WHERE     ep.tp_item_id = eir.tp_item_id
               AND eir.inventory_item_id = esi.inventory_item_id
               AND preference_number IS NULL
               AND ep.tp_type = 'CUSTOMER'
               AND ep.trading_partner_id = hca.party_id
               AND (eir.end_date_active IS NULL
                    OR TRUNC (eir.end_date_active) > TRUNC (SYSDATE))
               AND ROWNUM = 1)
          part_no,
       SUBSTR (NVL (esi.description, rctal.description), 1, 30)
          description_of_goods,
       NVL (rctal.attribute1, esi.hsn_or_sac) hsn_of_goods,
       rctal.uom_code unit_uqc,
       NVL (rctal.quantity_invoiced, rctal.quantity_credited) quantity,
       ABS (rctal.unit_selling_price) rate_price,
       zldf.assessable_value,
       ABS (
          (NVL (rctal.quantity_credited, 0) * rctal.unit_selling_price)
          * NVL (rctal.tax_rate, 1))
          total_base_amount,
       NVL (cgst.cgst_rate, 0) cgst_rate,
       NVL (cgst.cgst_amount, 0) cgst_amount,
       NVL (sgst.sgst_rate, 0) sgst_rate,
       NVL (sgst.sgst_amount, 0) sgst_amount,
       NVL (igst.igst_rate, 0) igst_rate,
       NVL (igst.igst_amount, 0) igst_amount,
       NVL (tcs.tcs_rate, 0) tcs_rate,
       NVL (tcs.tcs_amount, 0) tcs_amount,
       0 gst_compensation_rate,
       0 gst_compensation_amount,
         ABS (rctal.extended_amount)
       + NVL (sgst.sgst_amount, 0)
       + NVL (cgst.cgst_amount, 0)
       + NVL (igst.igst_amount, 0)
       + NVL (tcs.tcs_amount, 0)
          total_amount_inc_tax,
       ABS (NVL (rctal.quantity_credited, 0) * rctal.unit_selling_price)
          cf_tot_am,
       ABS (
          zldf.assessable_value
          / NVL (rctal.quantity_invoiced, rctal.quantity_credited))
          assrate,
       ABS (rctal.extended_amount) VALUE
  FROM ra_customer_trx_lines_all rctal,
       ra_customer_trx_all rct,
       hz_cust_accounts hca,
       (SELECT DISTINCT rctd.customer_trx_id, iop.organization_id
          FROM ra_cust_trx_line_gl_dist_all rctd,
               gl_code_combinations gcc,
               inv_org_parameters iop,
               xla_mapping_set_values xmsv
         WHERE     1 = 1
               AND gcc.segment2 = xmsv.value_constant
               AND xmsv.input_value_constant1 = TO_CHAR (iop.organization_id)
               AND xmsv.enabled_flag = 'Y'
               AND xmsv.mapping_set_code = 'UFSL_INV_LOC_CST'
               AND gcc.code_combination_id = rctd.code_combination_id
               AND rctd.account_class = 'REC') rctd,
       (SELECT esib.organization_id,
               esib.inventory_item_id,
               esib.item_number,
               REGEXP_REPLACE (esit.description, '[^[:alnum:]'' '']', '')
                  description,
               eieb.attribute_char1 hsn_or_sac
          FROM egp_system_items_tl esit,
               egp_system_items_b esib,
               ego_item_eff_b eieb,
               inv_org_parameters iop
         WHERE     1 = 1
               AND iop.organization_id = esit.organization_id
               AND eieb.context_code(+) = 'UCAL Attributes'
               AND iop.master_organization_id = eieb.organization_id(+)
               AND esib.inventory_item_id = eieb.inventory_item_id(+)
               AND esit.organization_id = esib.organization_id
               AND esib.inventory_item_id = esit.inventory_item_id) esi,
       (SELECT DISTINCT trx_id,
                        trx_line_id,
                        ABS (unrounded_tax_amt) igst_amount,
                        tax_rate igst_rate,
                        ABS (unrounded_taxable_amt) igst_taxable
          FROM zx_lines
         WHERE     entity_code = 'TRANSACTIONS'
               AND tax LIKE '%IGST%'
               AND application_id = 222) igst,
       (SELECT DISTINCT trx_id,
                        trx_line_id,
                        ABS (unrounded_tax_amt) cgst_amount,
                        tax_rate cgst_rate,
                        ABS (unrounded_taxable_amt) sgst_taxable
          FROM zx_lines
         WHERE     entity_code = 'TRANSACTIONS'
               AND tax LIKE '%CGST%'
               AND application_id = 222) cgst,
       (SELECT DISTINCT trx_id,
                        trx_line_id,
                        ABS (unrounded_tax_amt) sgst_amount,
                        tax_rate sgst_rate,
                        ABS (unrounded_taxable_amt) cgst_taxable
          FROM zx_lines
         WHERE     entity_code = 'TRANSACTIONS'
               AND tax LIKE '%SGST%'
               AND application_id = 222) sgst,
       (SELECT DISTINCT trx_id,
                        trx_line_id,
                        ABS (unrounded_tax_amt) tcs_amount,
                        tax_rate tcs_rate,
                        ABS (unrounded_taxable_amt) tcs_taxable
          FROM zx_lines
         WHERE     entity_code = 'TRANSACTIONS'
               AND tax LIKE '%TCS%'
               AND application_id = 222) tcs,                         -- added
       zx_lines_det_factors zldf
 WHERE     1 = 1
       AND rct.customer_trx_id = rctal.customer_trx_id
       AND rct.customer_trx_id = rctd.customer_trx_id
       AND hca.cust_account_id = rct.bill_to_customer_id
       AND rctal.customer_trx_id = zldf.trx_id(+)
       AND rctal.customer_trx_line_id = zldf.trx_line_id(+)
       AND zldf.entity_code(+) = 'TRANSACTIONS'
       AND rctal.customer_trx_id = igst.trx_id(+)
       AND rctal.customer_trx_line_id = igst.trx_line_id(+)
       AND rctal.customer_trx_id = sgst.trx_id(+)
       AND rctal.customer_trx_line_id = sgst.trx_line_id(+)
       AND rctal.customer_trx_id = cgst.trx_id(+)
       AND rctal.customer_trx_line_id = cgst.trx_line_id(+)
       AND esi.inventory_item_id(+) = rctal.inventory_item_id           --26/4
       AND esi.organization_id(+) = rctd.organization_id                --26/4
       AND rctal.customer_trx_id = tcs.trx_id(+)                      -- added
       AND rctal.customer_trx_line_id = tcs.trx_line_id(+)            -- added
       AND rctal.line_type = 'LINE'
--------------------------------UCAL_Debit_Memo_DM----------------------------
-----HEADER----
/* Formatted on 12/07/2021 8:13:01 AM (QP5 v5.163.1008.3004) */
SELECT rcta.customer_trx_id,
       hca_bill.party_id,
       rcta.trx_number invoice_number,
       TO_CHAR (rcta.trx_date, 'DD-MON-RRRR', 'NLS_DATE_LANGUAGE = AMERICAN')
          invoice_date,
       xle.name legal_entity_name,
       hrl.address_line_1 io_address1,
       hrl.address_line_2 io_address2,
       hrl.address_line_3 io_address3,
       hrl.address_line_4 io_address4,
       hrl.town_or_city io_city,
       hrl.region_2 io_state,
       hrl.postal_code io_postal_code,
       hrl.country io_country,
       xle.legal_entity_identifier org_cin_no,
       TO_CHAR (SYSTIMESTAMP AT TIME ZONE 'Asia/Calcutta',
                'DD-MON-RRRR',
                'NLS_DATE_LANGUAGE = AMERICAN')
          date_of_removal,
       TO_CHAR (SYSTIMESTAMP AT TIME ZONE 'Asia/Calcutta', 'HH24:MI')
          time_of_removal,
       rctd.attribute1 org_gstin,
       hrl.region_2 org_state_code,
       (SELECT reg.registration_number
          FROM xle_registrations reg, xle_jurisdictions_b jur
         WHERE     reg.source_id = xle.legal_entity_id
               AND reg.source_table = 'XLE_ENTITY_PROFILES'
               AND jur.jurisdiction_id = reg.jurisdiction_id
               AND jur.registration_code_le = 'PAN')
          org_pan_number,
       NULL range,
       NULL division,                                                   --null
       NULL comm,                                                       --null
       hp_bill.party_name buyer_name,
       hl_bill.address1 buyer_address1,
       hl_bill.address2 buyer_address2,
       hl_bill.address3 buyer_address3,
       hl_bill.address4 buyer_address4,
       hl_bill.state buyer_state_name,
       hl_bill.city buyer_city,
       hl_bill.postal_code buyer_postal_code,
       buyer_reg.registration_number buyer_gstin,
       SUBSTR (buyer_reg.registration_number, 1, 2) buyer_state_code,
       NVL (hp_ship.party_name, hp_bill.party_name) ship_to_name,
       NVL (hl_ship.address1, hl_bill.address1) ship_to_address1,
       NVL (hl_ship.address2, hl_bill.address2) ship_to_address2,
       NVL (hl_ship.address3, hl_bill.address3) ship_to_address3,
       NVL (hl_ship.address4, hl_bill.address4) ship_to_address4,
       NVL (hl_ship.state, hl_bill.state) ship_to_state_name,
       NVL (hl_ship.city, hl_bill.city) ship_to_city,
       NVL (hl_ship.postal_code, hl_bill.postal_code) ship_to_postal_code,
       NVL (ship_to_reg.registration_number, buyer_reg.registration_number)
          ship_to_gstin,
       SUBSTR (
          NVL (ship_to_reg.registration_number,
               buyer_reg.registration_number),
          1,
          2)
          ship_to_state_code,
       CASE
          WHEN interface_header_context = 'DOO'
          THEN
             interface_header_attribute4
          ELSE
             NULL
       END
          order_type,
       (SELECT zre.extn_attribute_char006
          FROM mkt_ref_entities zre
         WHERE zre.attribute_category = 'UCALCustomerVendorCode_c'
               AND zre.extn_attribute_char001 =
                      TO_CHAR (hps_bill.party_site_number)
               AND zre.extn_attribute_char002 = rctd.organization_code)
          vendor_code,
       rcta.purchase_order order_reference,
       wsh.attribute1 carrier,
       wsh.transporter mode_of_transport,
       wsh.attribute3 vehicle_no,
       wsh.attribute4 packing_details,
       NULL lr_rrr_air_no,
       NULL lr_rrr_air_date,
       NVL (hl_ship.state, hl_bill.state) place_of_delivery,
       rctd.attribute3 insurance_policy_no,
       rctd.insurance_policy_date,
       NULL insured_for,
       NULL insurance_serial_no,
       NVL (
          wsh.attribute6,
          (SELECT note.note_txt
             FROM zmm_notes note
            WHERE note.source_object_code = 'AR_TRANSACTION'
                  AND rcta.customer_trx_id = note.source_object_uid))
          remarks,
       wsh.attribute5 freight,
       NULL freight_amount,
       'HEF3' shop,
       '3EO' gate_no,
       'ENG3' location,
       NULL recieved_date,
       NULL mrir_no,
       NULL received_qty,
       NULL rejection_qty,
       NULL rejection_code,
       NULL checked_by,
       NULL cardex_entry,
       NULL inspect_qty,
       NULL rejection,
       NULL reason_code,
       NULL qc_charge,
       NULL accept_qty,
       NULL place,
       NULL place_date,
       NULL place_time,
       (SELECT extn_attribute_char008
          FROM zca_ref_entities
         WHERE     attribute_category = 'UCALEDIASN_c'
               AND extn_attribute_char006 = rctd.organization_code
               AND extn_attribute_char007 = rcta.trx_number)
          asn_bar_code,
       (SELECT extn_attribute_char012 irn
          FROM moo_ref_entities mre
         WHERE     1 = 1
               AND attribute_category = 'UCALEInvoicing_c'
               AND mre.extn_attribute_char008 = rcta.trx_number
               AND TRUNC (mre.extn_attribute_timestamp002) =
                      TRUNC (rcta.trx_date)
               AND mre.extn_attribute_char009 = 'DBN')
          irn_number,
       (SELECT extn_attribute_clob002 irn
          FROM moo_ref_entities mre
         WHERE     1 = 1
               AND attribute_category = 'UCALEInvoicing_c'
               AND mre.extn_attribute_char008 = rcta.trx_number
               AND TRUNC (mre.extn_attribute_timestamp002) =
                      TRUNC (rcta.trx_date)
               AND mre.extn_attribute_char009 = 'DBN')
          qr_code,
       rctd.total_amount,
       REGEXP_REPLACE (
          iby_amount_in_words.get_amount_in_words (rctd.total_amount,
                                                   'INR',
                                                   2),
          '\*| And  Zero Paise|^And ',
          NULL)
          total_amount_in_words,
       NVL (igst.tax_amount, 0) total_igst,
       REGEXP_REPLACE (
          iby_amount_in_words.get_amount_in_words (NVL (igst.tax_amount, 0),
                                                   'INR',
                                                   2),
          '\*| And  Zero Paise|^And ',
          NULL)
          igst_amount_in_words,
       NVL (cgst.tax_amount, 0) total_cgst,
       REGEXP_REPLACE (
          iby_amount_in_words.get_amount_in_words (NVL (cgst.tax_amount, 0),
                                                   'INR',
                                                   2),
          '\*| And  Zero Paise|^And ',
          NULL)
          cgst_amount_in_words,
       NVL (sgst.tax_amount, 0) total_sgst,
       REGEXP_REPLACE (
          iby_amount_in_words.get_amount_in_words (NVL (sgst.tax_amount, 0),
                                                   'INR',
                                                   2),
          '\*| And  Zero Paise|^And ',
          NULL)
          sgst_amount_in_words,
       NVL (tcs.tax_amount, 0) total_tcs,
       REGEXP_REPLACE (
          iby_amount_in_words.get_amount_in_words (NVL (tcs.tax_amount, 0),
                                                   'INR',
                                                   2),
          '\*| And  Zero Paise|^And ',
          NULL)
          tcs_amount_in_words,
       rctd.total_amount
       - (  NVL (igst.tax_amount, 0)
          + NVL (cgst.tax_amount, 0)
          + NVL (sgst.tax_amount, 0)
          + NVL (tcs.tax_amount, 0))
          total_material_value,
       REGEXP_REPLACE (
          iby_amount_in_words.get_amount_in_words (
             NVL (
                rctd.total_amount
                - (  NVL (igst.tax_amount, 0)
                   + NVL (cgst.tax_amount, 0)
                   + NVL (sgst.tax_amount, 0)
                   + NVL (tcs.tax_amount, 0)),
                0),
             'INR',
             2),
          '\*| And  Zero Paise|^And ',
          NULL)
          total_material_value_in_words,
       rcta.invoice_currency_code,
       'DM:' || rctd.organization_code || ':' || rcta.trx_number trx_qr_code
  FROM ra_customer_trx_all rcta,
       hr_operating_units hou,
       (  SELECT rctd.customer_trx_id,
                 iop.organization_id,
                 iop.organization_code,
                 iop.legal_entity_id,
                 iop.attribute1,
                 iop.attribute3,
                 TO_CHAR (iop.attribute_date1,
                          'DD-MON-RRRR',
                          'NLS_DATE_LANGUAGE = AMERICAN')
                    insurance_policy_date,
                 ABS (SUM (amount)) total_amount
            FROM ra_cust_trx_line_gl_dist_all rctd,
                 gl_code_combinations gcc,
                 inv_org_parameters iop,
                 xla_mapping_set_values xmsv
           WHERE     1 = 1
                 AND gcc.segment2 = xmsv.value_constant
                 AND xmsv.input_value_constant1 = TO_CHAR (iop.organization_id)
                 AND xmsv.enabled_flag = 'Y'
                 AND xmsv.mapping_set_code = 'UFSL_INV_LOC_CST'
                 AND gcc.code_combination_id = rctd.code_combination_id
                 AND rctd.account_class = 'REC'
        GROUP BY rctd.customer_trx_id,
                 iop.organization_id,
                 iop.organization_code,
                 iop.legal_entity_id,
                 iop.attribute1,
                 iop.attribute3,
                 TO_CHAR (iop.attribute_date1,
                          'DD-MON-RRRR',
                          'NLS_DATE_LANGUAGE = AMERICAN')) rctd,
       hr_organization_units ood,
       xle_entity_profiles xle,
       hr_locations hrl,
       hz_cust_accounts hca_bill,
       hz_parties hp_bill,
       ra_cust_trx_types_all rctt,
       hz_cust_site_uses_all hcsu_bill,
       hz_cust_acct_sites_all hcas_bill,
       hz_party_sites hps_bill,
       hz_locations hl_bill,
       (SELECT zr.registration_number, zptp.party_id
          FROM zx_party_tax_profile zptp, zx_registrations zr
         WHERE     1 = 1
               AND zptp.party_tax_profile_id = zr.party_tax_profile_id
               AND zr.registration_type_code LIKE '%GST%'
               AND zptp.party_type_code = 'THIRD_PARTY_SITE'
               AND zptp.customer_flag = 'Y'
               AND (zr.effective_to IS NULL OR zr.effective_to > SYSDATE)) buyer_reg,
       hz_cust_accounts hca_ship,
       hz_parties hp_ship,
       --       hz_cust_site_uses_all hcsu_ship,
       hz_party_site_uses hcsu_ship,
       hz_cust_acct_sites_all hcas_ship,
       hz_party_sites hps_ship,
       hz_locations hl_ship,
       (SELECT zr.registration_number, zptp.party_id
          FROM zx_party_tax_profile zptp, zx_registrations zr
         WHERE     1 = 1
               AND zptp.party_tax_profile_id = zr.party_tax_profile_id
               AND zr.registration_type_code LIKE '%GST%'
               AND zptp.party_type_code = 'THIRD_PARTY_SITE'
               AND zptp.customer_flag = 'Y'
               AND (zr.effective_to IS NULL OR zr.effective_to > SYSDATE)) ship_to_reg,
       (SELECT DISTINCT wnd.attribute1,
                        wnd.attribute2,
                        wnd.attribute3,
                        wnd.attribute4,
                        wnd.attribute5,
                        wnd.attribute6,
                        psv.vendor_name transporter,
                        rctla.customer_trx_id
          FROM wsh_new_deliveries wnd,
               ra_customer_trx_lines_all rctla,
               poz_supplier_sites_all_m pssm,
               poz_suppliers_v psv
         WHERE     1 = 1
               AND psv.vendor_id(+) = pssm.vendor_id
               AND pssm.vendor_site_id(+) = wnd.attribute_number1
               AND TO_CHAR (wnd.delivery_id) =
                      rctla.interface_line_attribute7) wsh,      --added 22/04
       (  SELECT trx_id, ABS (SUM (unrounded_tax_amt)) tax_amount
            FROM zx_lines
           WHERE     entity_code = 'TRANSACTIONS'
                 AND tax LIKE '%IGST%'
                 AND application_id = 222
        GROUP BY trx_id) igst,
       (  SELECT trx_id, ABS (SUM (unrounded_tax_amt)) tax_amount
            FROM zx_lines
           WHERE     entity_code = 'TRANSACTIONS'
                 AND tax LIKE '%CGST%'
                 AND application_id = 222
        GROUP BY trx_id) cgst,
       (  SELECT trx_id, ABS (SUM (unrounded_tax_amt)) tax_amount
            FROM zx_lines
           WHERE     entity_code = 'TRANSACTIONS'
                 AND tax LIKE '%SGST%'
                 AND application_id = 222
        GROUP BY trx_id) sgst,
       (  SELECT trx_id, ABS (SUM (unrounded_tax_amt)) tax_amount
            FROM zx_lines
           WHERE     entity_code = 'TRANSACTIONS'
                 AND tax LIKE '%TCS%'
                 AND application_id = 222
        GROUP BY trx_id) tcs
 WHERE     1 = 1
       AND rcta.customer_trx_id = tcs.trx_id(+)
       AND rcta.customer_trx_id = sgst.trx_id(+)
       AND rcta.customer_trx_id = cgst.trx_id(+)
       AND rcta.customer_trx_id = igst.trx_id(+)
       AND rctt.cust_trx_type_seq_id = rcta.cust_trx_type_seq_id
       AND hps_ship.party_site_id = ship_to_reg.party_id(+)
       AND hps_bill.party_site_id = buyer_reg.party_id(+)
       AND hl_ship.location_id(+) = hps_ship.location_id
       AND hps_ship.party_site_id(+) = hcas_ship.party_site_id
       AND hcas_ship.party_site_id(+) = hcsu_ship.party_site_id
       AND hcsu_ship.party_site_use_id(+) = rcta.ship_to_party_site_use_id
       AND hca_ship.party_id = hp_ship.party_id(+)
       AND hca_ship.party_id(+) = rcta.ship_to_party_id
       AND hl_bill.location_id = hps_bill.location_id
       AND hps_bill.party_site_id = hcas_bill.party_site_id
       AND hcas_bill.cust_acct_site_id = hcsu_bill.cust_acct_site_id
       AND hcsu_bill.site_use_id = rcta.bill_to_site_use_id
       AND hca_bill.party_id = hp_bill.party_id
       AND hca_bill.cust_account_id = rcta.bill_to_customer_id
       AND hrl.location_id = ood.location_id
       AND xle.legal_entity_id = rctd.legal_entity_id
       AND rctd.organization_id = ood.organization_id
       AND rcta.customer_trx_id = rctd.customer_trx_id
       AND rcta.org_id = hou.organization_id
       AND rcta.customer_trx_id = wsh.customer_trx_id(+)         --added 22/04
       AND rctt.TYPE = 'DM'
       AND rcta.trx_date BETWEEN NVL (:p_invoice_date_low, rcta.trx_date) --added 26-4-2021
                             AND NVL (:p_invoice_date_high, rcta.trx_date)
       AND rcta.trx_number BETWEEN NVL (:p_invoice_number_low,
                                        rcta.trx_number)
                               AND NVL (:p_invoice_number_high,
                                        rcta.trx_number)
       AND rctd.organization_code = :p_organization_code
----LINES----	   
/* Formatted on 28/07/2021 2:46:59 PM (QP5 v5.163.1008.3004) */
SELECT rctal.customer_trx_id,
       hca.party_id,
       esi.inventory_item_id,
       esi.organization_id,
       rctal.customer_trx_line_id,
       rctal.line_number sl_no,
       esi.item_number,
       (SELECT ep.tp_item_number
          FROM egp_trading_partner_items ep, egp_item_relationships_b eir
         WHERE     ep.tp_item_id = eir.tp_item_id
               AND eir.inventory_item_id = esi.inventory_item_id
               AND ep.tp_type = 'CUSTOMER'
               AND ep.trading_partner_id = hca.party_id
               AND (eir.end_date_active IS NULL
                    OR TRUNC (eir.end_date_active) > TRUNC (SYSDATE))
               AND ROWNUM = 1)
          part_no,
       SUBSTR (NVL (esi.description, rctal.description), 1, 30)
          description_of_goods,
       NVL (rctal.attribute1, esi.hsn_or_sac) hsn_of_goods,
       rctal.uom_code unit_uqc,
       NVL (rctal.quantity_invoiced, rctal.quantity_credited) quantity,
       rctal.unit_selling_price rate_price,
       zldf.assessable_value,
       (rctal.quantity_invoiced * rctal.unit_selling_price)
       * NVL (rctal.tax_rate, 1)
          total_base_amount,
       NVL (cgst.cgst_rate, 0) cgst_rate,
       NVL (cgst.cgst_amount, 0) cgst_amount,
       NVL (sgst.sgst_rate, 0) sgst_rate,
       NVL (sgst.sgst_amount, 0) sgst_amount,
       NVL (igst.igst_rate, 0) igst_rate,
       NVL (igst.igst_amount, 0) igst_amount,
       NVL (tcs.tcs_rate, 0) tcs_rate,
       NVL (tcs.tcs_amount, 0) tcs_amount,
       0 gst_compensation_rate,
       0 gst_compensation_amount,
         rctal.extended_amount
       + NVL (sgst.sgst_amount, 0)
       + NVL (sgst.sgst_amount, 0)
       + NVL (cgst.cgst_amount, 0)
       + NVL (igst.igst_amount, 0)
       + NVL (tcs.tcs_amount, 0)
          total_amount_inc_tax,
         (rctal.quantity_invoiced * rctal.unit_selling_price)
       + NVL (sgst.sgst_amount, 0)
       + NVL (cgst.cgst_amount, 0)
       + NVL (igst.igst_amount, 0)
       + NVL (tcs.tcs_amount, 0)
          tot_inv_bar,
       (rctal.quantity_invoiced * rctal.unit_selling_price) cf_tot_am,
       (zldf.assessable_value
        / NVL (rctal.quantity_invoiced, rctal.quantity_credited))
          assrate,
       rctal.extended_amount VALUE
  FROM ra_customer_trx_lines_all rctal,
       ra_customer_trx_all rct,
       hz_cust_accounts hca,
       (SELECT DISTINCT rctd.customer_trx_id, iop.organization_id
          FROM ra_cust_trx_line_gl_dist_all rctd,
               gl_code_combinations gcc,
               inv_org_parameters iop,
               xla_mapping_set_values xmsv
         WHERE     1 = 1
               AND gcc.segment2 = xmsv.value_constant
               AND xmsv.input_value_constant1 = TO_CHAR (iop.organization_id)
               AND xmsv.enabled_flag = 'Y'
               AND xmsv.mapping_set_code = 'UFSL_INV_LOC_CST'
               AND gcc.code_combination_id = rctd.code_combination_id
               AND rctd.account_class = 'REC') rctd,
       (SELECT esib.organization_id,
               esib.inventory_item_id,
               esib.item_number,
               REGEXP_REPLACE (esit.description, '[^[:alnum:]'' '']', '')
                  description,
               eieb.attribute_char1 hsn_or_sac
          FROM egp_system_items_tl esit,
               egp_system_items_b esib,
               ego_item_eff_b eieb,
               inv_org_parameters iop
         WHERE     1 = 1
               AND iop.organization_id = esit.organization_id
               AND eieb.context_code(+) = 'UCAL Attributes'
               AND iop.master_organization_id = eieb.organization_id(+)
               AND esib.inventory_item_id = eieb.inventory_item_id(+)
               AND esit.organization_id = esib.organization_id
               AND esib.inventory_item_id = esit.inventory_item_id) esi,
       (SELECT DISTINCT trx_id,
                        trx_line_id,
                        unrounded_tax_amt igst_amount,
                        tax_rate igst_rate,
                        unrounded_taxable_amt igst_taxable
          FROM zx_lines
         WHERE     entity_code = 'TRANSACTIONS'
               AND tax LIKE '%IGST%'
               AND application_id = 222) igst,
       (SELECT DISTINCT trx_id,
                        trx_line_id,
                        unrounded_tax_amt cgst_amount,
                        tax_rate cgst_rate,
                        unrounded_taxable_amt cgst_taxable
          FROM zx_lines
         WHERE     entity_code = 'TRANSACTIONS'
               AND tax LIKE '%CGST%'
               AND application_id = 222) cgst,
       (SELECT DISTINCT trx_id,
                        trx_line_id,
                        unrounded_tax_amt sgst_amount,
                        tax_rate sgst_rate,
                        unrounded_taxable_amt sgst_taxable
          FROM zx_lines
         WHERE     entity_code = 'TRANSACTIONS'
               AND tax LIKE '%SGST%'
               AND application_id = 222) sgst,
       (SELECT DISTINCT trx_id,
                        trx_line_id,
                        unrounded_tax_amt tcs_amount,
                        tax_rate tcs_rate,
                        unrounded_taxable_amt tcs_taxable
          FROM zx_lines
         WHERE     entity_code = 'TRANSACTIONS'
               AND tax LIKE '%TCS%'
               AND application_id = 222) tcs,
       zx_lines_det_factors zldf
 WHERE     1 = 1
       AND rctal.customer_trx_id = zldf.trx_id(+)
       AND rctal.customer_trx_line_id = zldf.trx_line_id(+)
       AND zldf.entity_code(+) = 'TRANSACTIONS'
       AND rctal.customer_trx_id = tcs.trx_id(+)
       AND rctal.customer_trx_line_id = tcs.trx_line_id(+)
       AND rctal.customer_trx_id = igst.trx_id(+)
       AND rctal.customer_trx_line_id = igst.trx_line_id(+)
       AND rctal.customer_trx_id = sgst.trx_id(+)
       AND rctal.customer_trx_line_id = sgst.trx_line_id(+)
       AND rctal.customer_trx_id = cgst.trx_id(+)
       AND rctal.customer_trx_line_id = cgst.trx_line_id(+)
       AND esi.inventory_item_id(+) = rctal.inventory_item_id
       AND esi.organization_id(+) = rctd.organization_id
       AND rct.customer_trx_id = rctd.customer_trx_id
       AND rctal.line_type = 'LINE'
       AND hca.cust_account_id = rct.bill_to_customer_id
       AND rct.customer_trx_id = rctal.customer_trx_id
--------------------------------UCAL_RMA_Transaction_Details_DM--------------------------------------
/* Formatted on 09/08/2021 3:44:00 PM (QP5 v5.163.1008.3004) */
  SELECT rsh.receipt_num,
         TO_CHAR (rsh.creation_date,
                  'DD-MON-YYYY',
                  'NLS_DATE_LANGUAGE=AMERICAN')
            rr_date,
         rsl.to_subinventory "Sub Inventory",
         TO_CHAR (rt.transaction_date,
                  'DD-MON-YYYY',
                  'NLS_DATE_LANGUAGE=AMERICAN')
            transaction_date,
         rt.quantity "Recvd Qty",
         ROUND (rt.assessable_value / rt.quantity, 2) "Material",
         ROUND (rt.assessable_value, 2) "Material Cost",
         TO_CHAR (rcta.trx_date, 'DD-MON-YYYY', 'NLS_DATE_LANGUAGE=AMERICAN')
            cust_invoice_date,
         rcta.trx_number "CR MEMO NO",
         dha.header_id,
         dha.order_number "RMA NO",
         TO_CHAR (dha.creation_date,
                  'DD-MON-YYYY',
                  'NLS_DATE_LANGUAGE=AMERICAN')
            "RMA Date",
         doo_cross_reference.getfulfillmentvalue ('LOOKUP_CODE',
                                                  'RETURN_REASON',
                                                  dfla.return_reason_code)
            "Rejection Reason",
         TRUNC (SYSDATE) - TRUNC (dha.creation_date) rma_age,
         dha.order_type_code "RMA_TYPE",
         hp.party_name "Customer Name",
         esi.item_number,
         esi.description,
         esi.hsn_or_sac,
         hl_b.city,
         ROUND (NVL (igst.igst_rate, 0), 2) "igst_rate",
         ROUND (NVL (igst.igst_amt, 0), 2) "igst_amt",
         ROUND (NVL (cgst.cgst_rate, 0), 2) "cgst_rate",
         ROUND (NVL (cgst.cgst_amt, 0), 2) "cgst_amt",
         ROUND (NVL (sgst.sgst_rate, 0), 2) "sgst_rate",
         ROUND (NVL (sgst.sgst_amt, 0), 2) "sgst_amt",
         ROUND (NVL (tcs.tcs_rate, 0), 2) "TCS_rate",
         ROUND (NVL (tcs.tcs_amt, 0), 2) "TCS_amount",
           ROUND (rt.assessable_value, 2)
         + ROUND (NVL (igst.igst_amt, 0), 2)
         + ROUND (NVL (cgst.cgst_amt, 0), 2)
         + ROUND (NVL (sgst.sgst_amt, 0), 2)
         + ROUND (NVL (tcs.tcs_amt, 0), 2)
            total_amount
    FROM rcv_shipment_headers rah,
         rcv_shipment_lines ral,
         rcv_shipment_headers rsh,
         rcv_shipment_lines rsl,
         rcv_transactions rt,
         ra_customer_trx_lines_all rctla,
         ra_customer_trx_all rcta,
         doo_fulfill_lines_all dfla,
         doo_headers_all dha,
         hz_cust_accounts hca,
         hz_parties hp,
         (SELECT esib.organization_id,
                 esib.inventory_item_id,
                 esib.item_number,
                 REGEXP_REPLACE (esit.description, '[^[:alnum:]'' '']', '')
                    description,
                 eieb.attribute_char1 hsn_or_sac
            FROM egp_system_items_tl esit,
                 egp_system_items_b esib,
                 ego_item_eff_b eieb,
                 inv_org_parameters iop
           WHERE     1 = 1
                 AND iop.organization_id = esib.organization_id
                 AND eieb.context_code(+) = 'UCAL Attributes'
                 AND iop.master_organization_id = eieb.organization_id(+)
                 AND esib.inventory_item_id = eieb.inventory_item_id(+)
                 AND esit.organization_id = esib.organization_id
                 AND esib.inventory_item_id = esit.inventory_item_id) esi,
         hz_cust_site_uses_all hcsu_b,
         hz_cust_acct_sites_all hcas_b,
         hz_party_sites hps_b,
         hz_locations hl_b,
         (SELECT DISTINCT trx_id,
                          trx_line_id,
                          ABS (unrounded_tax_amt) igst_amt,
                          tax_rate igst_rate,
                          unrounded_taxable_amt igst_tax
            FROM zx_lines
           WHERE     entity_code = 'TRANSACTIONS'
                 AND tax LIKE '%IGST%'
                 AND application_id = 222) igst,
         (SELECT DISTINCT trx_id,
                          trx_line_id,
                          ABS (unrounded_tax_amt) cgst_amt,
                          tax_rate cgst_rate,
                          unrounded_taxable_amt cgst_tax
            FROM zx_lines
           WHERE     entity_code = 'TRANSACTIONS'
                 AND tax LIKE '%CGST%'
                 AND application_id = 222) cgst,
         (SELECT DISTINCT trx_id,
                          trx_line_id,
                          ABS (unrounded_tax_amt) sgst_amt,
                          tax_rate sgst_rate,
                          unrounded_taxable_amt sgst_tax
            FROM zx_lines
           WHERE     entity_code = 'TRANSACTIONS'
                 AND tax LIKE '%SGST%'
                 AND application_id = 222) sgst,
         (SELECT DISTINCT trx_id,
                          trx_line_id,
                          ABS (unrounded_tax_amt) tcs_amt,
                          tax_rate tcs_rate,
                          unrounded_taxable_amt tcs_tax
            FROM zx_lines
           WHERE     entity_code = 'TRANSACTIONS'
                 AND tax LIKE '%TCS%'
                 AND application_id = 222) tcs
   WHERE     1 = 1
         AND rctla.customer_trx_line_id = tcs.trx_line_id(+)
         AND rctla.customer_trx_line_id = igst.trx_line_id(+)
         AND rctla.customer_trx_line_id = cgst.trx_line_id(+)
         AND rctla.customer_trx_line_id = sgst.trx_line_id(+)
         AND hl_b.location_id = hps_b.location_id
         AND hps_b.party_site_id = hcas_b.party_site_id
         AND hcas_b.cust_acct_site_id = hcsu_b.cust_acct_site_id
         AND hcsu_b.site_use_id = rcta.bill_to_site_use_id
         AND esi.inventory_item_id = rsl.item_id
         AND esi.organization_id = rt.organization_id
         AND rcta.bill_to_customer_id = hca.cust_account_id
         AND hca.party_id = hp.party_id
         AND dfla.header_id = dha.header_id
         AND ral.receipt_advice_line_number = dfla.fulfill_line_id
         AND rcta.customer_trx_id = rctla.customer_trx_id
         AND rctla.line_type = 'LINE'
         AND rctla.interface_line_context = 'DOO'
         AND ral.receipt_advice_line_number = rctla.interface_line_attribute6
         AND rt.transaction_type = 'RECEIVE'
         AND rt.source_document_code = 'RMA'
         AND rah.ra_document_code = 'RMA'
         AND rt.shipment_header_id = rsh.shipment_header_id
         AND rt.shipment_line_id = rsl.shipment_line_id
         AND rsh.shipment_header_id = rsl.shipment_header_id
         AND rt.receipt_advice_header_id = rah.shipment_header_id
         AND rt.receipt_advice_line_id = ral.shipment_line_id
         AND rt.organization_id = NVL (:r_p_org_id, rt.organization_id)
         AND hca.party_id = NVL (:p_cust_id, hca.party_id)
         AND rcta.customer_trx_id = NVL (:p_invoice_no, rcta.customer_trx_id)
         AND rsl.to_subinventory = NVL (:p_subinv, rsl.to_subinventory)
         AND esi.inventory_item_id = NVL (:p_item_id, esi.inventory_item_id)
         AND TRUNC (rt.transaction_date) BETWEEN NVL (
                                                    :r_p_from_date,
                                                    TRUNC (rt.transaction_date))
                                             AND NVL (:r_p_to_date, SYSDATE)
--------------------------------------UCAL AR Invoice Hyundai DM-----------------------------------------
----HEADER----
/* Formatted on 10/07/2021 3:51:10 PM (QP5 v5.163.1008.3004) */
select case
          when upper (hp_bill.party_name) like '%BAJAJ%'
          then
             'BAJAJ-INVOICE'
          when upper (hp_bill.party_name) like '%HYUNDAI%'
          then
             'HYUNDAI-INVOICE'
          when upper (hp_bill.party_name) like '%TVS%'
          then
             'TVS-INVOICE'
          when upper (hp_bill.party_name) like '%TATA%'
          then
             'TATA-INVOICE'
          when upper (hp_bill.party_name) like '%HERO%'
          then
             'HERO-INVOICE'
          when upper (rctt.attribute1) = 'SUPPLEMENTARY'
          then
             'SUPPLEMENTARY-INVOICE'
          when upper (rctt.attribute1) = 'CG'
          then
             'CG-INVOICE'
          when upper (rctt.attribute1) = 'SCRAP'
          then
             'SCRAP-INVOICE'
          else
             'REGULAR-INVOICE'
       end
          inv_category,
       rcta.customer_trx_id,
       hca_bill.party_id,
       rcta.trx_number invoice_number,
       to_char (rcta.trx_date, 'DD-MON-RRRR', 'NLS_DATE_LANGUAGE = AMERICAN')
          invoice_date,
       xle.name legal_entity_name,
       hrl.address_line_1 io_address1,
       hrl.address_line_2 io_address2,
       hrl.address_line_3 io_address3,
       hrl.address_line_4 io_address4,
       hrl.town_or_city io_city,
       flv_bst.description || '-' || hrl.region_2 io_state, --added 19/4   flv_bst.DESCRIPTION||'-'||
       hrl.postal_code io_postal_code,
       hrl.country io_country,
       xle.legal_entity_identifier org_cin_no,
       to_char (systimestamp at time zone 'Asia/Calcutta',
                'DD-MON-RRRR',
                'NLS_DATE_LANGUAGE = AMERICAN')
          date_of_removal,
       to_char (systimestamp at time zone 'Asia/Calcutta', 'HH24:MI')
          time_of_removal,
       rctd.attribute1 org_gstin,
       substr (rctd.attribute1, 1, 2) org_state_code,
       (select reg.registration_number
          from xle_registrations reg, xle_jurisdictions_b jur
         where     reg.source_id = xle.legal_entity_id
               and reg.source_table = 'XLE_ENTITY_PROFILES'
               and jur.jurisdiction_id = reg.jurisdiction_id
               and jur.registration_code_le = 'PAN')
          org_pan_number,
       hp_bill.party_name buyer_name,
       hl_bill.address1 buyer_address1,
       hl_bill.address2 buyer_address2,
       hl_bill.address3 buyer_address3,
       hl_bill.address4 buyer_address4,
       hl_bill.state buyer_state_name,
       hl_bill.city buyer_city,
       hl_bill.postal_code buyer_postal_code,
       buyer_reg.registration_number buyer_gstin,
       flv_bst.description buyer_state_code,
       nvl (hp_ship.party_name, hp_bill.party_name) ship_to_name,
       nvl (hl_ship.address1, hl_bill.address1) ship_to_address1,
       nvl (hl_ship.address2, hl_bill.address2) ship_to_address2,
       nvl (hl_ship.address3, hl_bill.address3) ship_to_address3,
       nvl (hl_ship.address4, hl_bill.address4) ship_to_address4,
       nvl (hl_ship.city, hl_bill.city) ship_to_city,
       nvl (hl_ship.state, hl_bill.state) ship_to_state,
       nvl (hl_ship.postal_code, hl_bill.postal_code) ship_to_postal_code,
       nvl (ship_to_reg.registration_number, buyer_reg.registration_number)
          ship_to_gstin,
       nvl (flv_sst.description, flv_bst.description) ship_to_state_code,
       case
          when interface_header_context = 'DOO'
          then
             rcta.interface_header_attribute4
          else
             rctt.name
       end
          order_type,
       (select zre.extn_attribute_char006
          from mkt_ref_entities zre
         where zre.attribute_category = 'UCALCustomerVendorCode_c'
               and zre.extn_attribute_char001 =
                      to_char (hps_bill.party_site_number)
               and zre.extn_attribute_char002 = rctd.organization_code)
          vendor_code,
       nvl(rcta.purchase_order,rcta.attribute9) order_reference,
       nvl(wsh.transporter,psv_e.vendor_name) carrier,
       nvl(wsh.attribute2,rcta.attribute2) mode_of_transport,
       nvl(wsh.attribute3,rcta.attribute1) vehicle_no,
       case when wsh.customer_trx_id is null then
       rcta.attribute3 || ' ' || rcta.attribute4
       else
       wsh.attribute_number3 || ' ' || wsh.attribute4 end packing_details,
       null lr_rrr_air_no,
       null lr_rrr_air_date,
       nvl (hl_ship.state, hl_bill.state) place_of_delivery,
       rctd.attribute3 insurance_policy_no,
       rctd.insurance_policy_date insurance_date,
       null insured_for,
       null insurance_serial_no,
       nvl (
          wsh.attribute6,
          (select note.note_txt
             from zmm_notes note
            where note.source_object_code = 'AR_TRANSACTION'
                  and rcta.customer_trx_id = note.source_object_uid))
          remarks,
       wsh.attribute5 freight,
       null freight_amount,
       null recieved_date,
       null mrir_no,
       null received_qty,
       null rejection_qty,
       null rejection_code,
       null checked_by,
       null cardex_entry,
       null inspect_qty,
       null rejection,
       null reason_code,
       null qc_charge,
       null accept_qty,
       null place,
       null place_date,
       null place_time,
       (select distinct extn_attribute_char008
          from zca_ref_entities
         where     attribute_category = 'UCALEDIASN_c'
               and extn_attribute_char006 = rctd.organization_code
               and extn_attribute_char007 = rcta.trx_number )
          asn_number,
      (select distinct extn_attribute_char012 irn
          from moo_ref_entities mre
         where     1 = 1
               and attribute_category = 'UCALEInvoicing_c'
               and mre.extn_attribute_char008 = rcta.trx_number
                and trunc(mre.extn_attribute_timestamp002)=trunc(rcta.trx_date)
                and mre.extn_attribute_char009='INV'
                and mre.extn_attribute_char012 is not null )
          irn_number,
       (select extn_attribute_clob002 irn
          from moo_ref_entities mre
         where     1 = 1
               and attribute_category = 'UCALEInvoicing_c'
               and mre.extn_attribute_char008 = rcta.trx_number
               and trunc(mre.extn_attribute_timestamp002)=trunc(rcta.trx_date)
               and mre.extn_attribute_char009='INV'
               and mre.extn_attribute_char012 is not null and rownum=1)
          qr_code,
       rctd.total_amount,
       regexp_replace (
          iby_amount_in_words.get_amount_in_words (rctd.total_amount,
                                                   'INR',
                                                   2),
          '\*| And  Zero Paise|^And ',
          null)
          total_amount_in_words,
       nvl(igst.tax_amount,0) total_igst,
       regexp_replace (
          iby_amount_in_words.get_amount_in_words (nvl (igst.tax_amount, 0),
                                                   'INR',
                                                   2),
          '\*| And  Zero Paise|^And ',
          null)
          igst_amount_in_words,
       nvl(cgst.tax_amount,0) total_cgst,
       regexp_replace (
          iby_amount_in_words.get_amount_in_words (nvl (cgst.tax_amount, 0),
                                                   'INR',
                                                   2),
          '\*| And  Zero Paise|^And ',
          null)
          cgst_amount_in_words,
       nvl(sgst.tax_amount,0) total_sgst,
       regexp_replace (
          iby_amount_in_words.get_amount_in_words (nvl (sgst.tax_amount, 0),
                                                   'INR',
                                                   2),
          '\*| And  Zero Paise|^And ',
          null)
          sgst_amount_in_words,
      nvl( tcs.tax_amount,0) total_tcs,
       regexp_replace (
          iby_amount_in_words.get_amount_in_words (nvl (tcs.tax_amount, 0),
                                                   'INR',
                                                   2),
          '\*| And  Zero Paise|^And ',
          null)
          tcs_amount_in_words,
       rctd.total_amount
       - (  nvl (igst.tax_amount, 0)
          + nvl (cgst.tax_amount, 0)
          + nvl (sgst.tax_amount, 0)
          + nvl (tcs.tax_amount, 0))
          total_material_value,
       regexp_replace (
          iby_amount_in_words.get_amount_in_words (
             nvl (
                rctd.total_amount
                - (  nvl (igst.tax_amount, 0)
                   + nvl (cgst.tax_amount, 0)
                   + nvl (sgst.tax_amount, 0)
                   + nvl (tcs.tax_amount, 0)),
                0),
             'INR',
             2),
          '\*| And  Zero Paise|^And ',
          null)
          total_material_value_in_words,
       rcta.invoice_currency_code,
       'SI:' || rctd.organization_code || ':' || rcta.trx_number trx_qr_code,
       (select    distinct psv.vendor_name
       || chr (13)
       || hl.address1
       || ', '
       || hl.address2
       || chr (13)
       || hl.city
       || ' PIN - '
       || hl.postal_code
       || chr (13)
       || 'GSTN:'
       || zr.registration_number
       || ' STATE CODE:'
       || flv.description ship_from
  from ra_customer_trx_lines_all rctal,
       doo_document_references ddr,
       po_headers_all ph,
       poz_supplier_sites_all_m pssm,
       hz_locations hl,
       poz_suppliers_v psv,
       zx_party_tax_profile zptp,
       zx_registrations zr,
       fnd_lookup_values flv
 where     1 = 1
       and flv.lookup_type(+) = 'HRX_IN_STATES'
       and upper (flv.meaning(+)) = upper (hl.state)
       and zr.party_tax_profile_id(+) = zptp.party_tax_profile_id
       and (zr.effective_to is null or zr.effective_to > sysdate)
       and zr.tax_regime_code(+) like '%GST%'
       and zptp.party_id(+) = pssm.party_site_id
       and psv.vendor_id = ph.vendor_id
       and hl.location_id = pssm.location_id
       and pssm.vendor_site_id = ph.vendor_site_id
       and ph.po_header_id = ddr.doc_id
       and rctal.interface_line_attribute5 = to_char (ddr.fulfill_line_id)
       and rctal.customer_trx_id = rcta.customer_trx_id
       and ddr.doc_ref_type = 'DROPSHIP_PO_REFERENCE'
       ) ship_from
  from ra_customer_trx_all rcta,
       hr_operating_units hou,
       (  select rctd.customer_trx_id,
                 iop.organization_id,
                 iop.organization_code,
                 iop.legal_entity_id,
                 iop.attribute1,
                 iop.attribute3,
                  to_char (iop.attribute_date1, 'DD-MON-RRRR', 'NLS_DATE_LANGUAGE = AMERICAN') insurance_policy_date,
                 sum (amount) total_amount
            from ra_cust_trx_line_gl_dist_all rctd,
                 gl_code_combinations gcc,
                 inv_org_parameters iop,
                 xla_mapping_set_values xmsv
           where     1 = 1
                 and gcc.segment2 = xmsv.value_constant
                 and xmsv.input_value_constant1 = to_char (iop.organization_id)
                 and xmsv.enabled_flag = 'Y'
                 and xmsv.mapping_set_code = 'UFSL_INV_LOC_CST'
                 and gcc.code_combination_id = rctd.code_combination_id
                 and rctd.account_class = 'REC'
        group by rctd.customer_trx_id,
                 iop.organization_id,
                 iop.organization_code,
                 iop.legal_entity_id,
                 iop.attribute1,
                 iop.attribute3,
                 to_char (iop.attribute_date1, 'DD-MON-RRRR', 'NLS_DATE_LANGUAGE = AMERICAN')) rctd,
       hr_organization_units ood,
       xle_entity_profiles xle,
       hr_locations hrl,
       hz_cust_accounts hca_bill,
       hz_parties hp_bill,
       ra_cust_trx_types_all rctt,
       hz_cust_site_uses_all hcsu_bill,
       hz_cust_acct_sites_all hcas_bill,
       hz_party_sites hps_bill,
       hz_locations hl_bill,
       (select zr.registration_number, zptp.party_id
          from zx_party_tax_profile zptp, zx_registrations zr
         where     1 = 1
               and zptp.party_tax_profile_id = zr.party_tax_profile_id
               and zr.tax_regime_code like '%GST%'          -- added 21/4/2021
               and zptp.party_type_code = 'THIRD_PARTY_SITE'
               and zptp.customer_flag = 'Y'
               and (zr.effective_to is null or zr.effective_to > sysdate)) buyer_reg,
       hz_cust_accounts hca_ship,
       hz_parties hp_ship,
--       hz_cust_site_uses_all hcsu_ship,
hz_party_site_uses hcsu_ship,
       hz_cust_acct_sites_all hcas_ship,
       hz_party_sites hps_ship,
       hz_locations hl_ship,
       (select zr.registration_number, zptp.party_id
          from zx_party_tax_profile zptp, zx_registrations zr
         where     1 = 1
               and zptp.party_tax_profile_id = zr.party_tax_profile_id
               and zr.tax_regime_code like '%GST%'
               and zptp.party_type_code = 'THIRD_PARTY_SITE'
               and zptp.customer_flag = 'Y'
               and (zr.effective_to is null or zr.effective_to > sysdate)) ship_to_reg,
       fnd_lookup_values flv_bst,
       fnd_lookup_values flv_sst,
       (select distinct wnd.attribute1,
                        wnd.attribute2,
                        wnd.attribute3,
                        wnd.attribute4,
                        wnd.attribute5,
                        wnd.attribute6,
                        wnd.attribute_number3,
                        psv.vendor_name transporter,
                        rctla.customer_trx_id
          from wsh_new_deliveries wnd,
               ra_customer_trx_lines_all rctla,
               poz_supplier_sites_all_m pssm,
               poz_suppliers_v psv
         where     1 = 1
               and psv.vendor_id(+) = pssm.vendor_id
               and pssm.vendor_site_id(+) = wnd.attribute_number1
               and to_char (wnd.delivery_id) =
                      rctla.interface_line_attribute7) wsh,
       (  select trx_id, sum (unrounded_tax_amt) tax_amount
            from zx_lines
           where     entity_code = 'TRANSACTIONS'
                 and tax like '%IGST%'
                 and application_id = 222
        group by trx_id) igst,
       (  select trx_id, sum (unrounded_tax_amt) tax_amount
            from zx_lines
           where     entity_code = 'TRANSACTIONS'
                 and tax like '%CGST%'
                 and application_id = 222
        group by trx_id) cgst,
       (  select trx_id, sum (unrounded_tax_amt) tax_amount
            from zx_lines
           where     entity_code = 'TRANSACTIONS'
                 and tax like '%SGST%'
                 and application_id = 222
        group by trx_id) sgst,
       (  select trx_id, sum (unrounded_tax_amt) tax_amount
            from zx_lines
           where     entity_code = 'TRANSACTIONS'
                 and tax like '%TCS%'
                 and application_id = 222
        group by trx_id) tcs,
        poz_supplier_sites_all_m pssm_e,
       poz_suppliers_v psv_e
 where     1 = 1
   and psv_e.vendor_id(+) = pssm_e.vendor_id
       and to_char (pssm_e.vendor_site_id(+)) = rcta.attribute6
       and rcta.customer_trx_id = tcs.trx_id(+)
       and rcta.customer_trx_id = sgst.trx_id(+)
       and rcta.customer_trx_id = cgst.trx_id(+)
       and rcta.customer_trx_id = igst.trx_id(+)
       and upper (hl_ship.state) = upper (flv_sst.meaning(+))
       and flv_sst.lookup_type(+) = 'HRX_IN_STATES'
       and flv_sst.enabled_flag(+) = 'Y'
       and upper (hl_bill.state) = upper (flv_bst.meaning(+))
       and flv_bst.lookup_type(+) = 'HRX_IN_STATES'
       and flv_bst.enabled_flag(+) = 'Y'
       and rctt.cust_trx_type_seq_id = rcta.cust_trx_type_seq_id
       and hps_ship.party_site_id = ship_to_reg.party_id(+)
       and hps_bill.party_site_id = buyer_reg.party_id(+)
       and hl_ship.location_id(+) = hps_ship.location_id
       and hps_ship.party_site_id(+) = hcas_ship.party_site_id
       and hcas_ship.party_site_id(+) = hcsu_ship.party_site_id
       and hcsu_ship.party_site_use_id(+) = rcta.ship_to_party_site_use_id
       and hca_ship.party_id = hp_ship.party_id(+)
       and hca_ship.party_id(+) = rcta.ship_to_party_id
       and hl_bill.location_id = hps_bill.location_id
       and hps_bill.party_site_id = hcas_bill.party_site_id
       and hcas_bill.cust_acct_site_id = hcsu_bill.cust_acct_site_id
       and hcsu_bill.site_use_id = rcta.bill_to_site_use_id
       and hca_bill.party_id = hp_bill.party_id
       and hca_bill.cust_account_id = rcta.bill_to_customer_id
       and hrl.location_id = ood.location_id
       and xle.legal_entity_id = rctd.legal_entity_id
       and rctd.organization_id = ood.organization_id
       and rcta.customer_trx_id = rctd.customer_trx_id
       and rcta.org_id = hou.organization_id
       and rctt.type = 'INV'
       and rcta.customer_trx_id = wsh.customer_trx_id(+)
       and rcta.trx_date between nvl (:p_invoice_date_low, rcta.trx_date)
                             and nvl (:p_invoice_date_high, rcta.trx_date)
       and rcta.trx_number between nvl (:p_invoice_number_low,
                                        rcta.trx_number)
                               and nvl (:p_invoice_number_high,
                                        rcta.trx_number)
       and rctd.organization_code = :p_organization_code
       /*AND ( ( (rcta.trx_number,
                rcta.trx_date,
                (CASE
                    WHEN rctt.TYPE = 'INV' THEN 'INV'
                    WHEN rctt.TYPE = 'DM' THEN 'DBN'
                    WHEN rctt.TYPE = 'CM' THEN 'CRN'
                 END)) IN
                 (SELECT extn_attribute_char008,
                         extn_attribute_timestamp002,
                         extn_attribute_char009
                    FROM moo_ref_entities
                   WHERE     1 = 1
                         AND attribute_category = 'UCALEInvoicing_c'
                         AND extn_attribute_char012 IS NOT NULL))
            OR NVL (buyer_reg.registration_number, 'UNREGISTERED') =
                  'UNREGISTERED')*/ -- commented temporiraly
----LINES----
SELECT rctal.customer_trx_id,
       hca.party_id,
       esi.inventory_item_id,
       esi.organization_id,
       rctal.customer_trx_line_id,
       rctal.line_number sl_no,
       esi.item_number,
       NVL (
          (SELECT ep.tp_item_number
             FROM egp_trading_partner_items ep, egp_item_relationships_b eir
            WHERE     ep.tp_item_id = eir.tp_item_id
                  AND eir.inventory_item_id = esi.inventory_item_id
                  AND ep.tp_type = 'CUSTOMER'
                  AND ep.trading_partner_id = hca.party_id
                  AND (eir.end_date_active IS NULL
                       OR TRUNC (eir.end_date_active) > TRUNC (SYSDATE))
                  AND ROWNUM = 1),
          esi.item_number)
          part_no,
       SUBSTR (NVL (esi.description, rctal.description), 1, 30)
          description_of_goods,
       NVL (rctal.attribute3, esi.hsn_or_sac) hsn_of_goods,
       rctal.uom_code unit_uqc,
       NVL (rctal.quantity_invoiced, rctal.quantity_credited) quantity,
       rctal.unit_selling_price rate_price,
       zldf.assessable_value,
       (rctal.quantity_invoiced * rctal.unit_selling_price)
       * NVL (rctal.tax_rate, 1)
          total_base_amount,
       NVL (cgst.cgst_rate, 0) cgst_rate,
       NVL (cgst.cgst_amount, 0) cgst_amount,
       NVL (sgst.sgst_rate, 0) sgst_rate,
       NVL (sgst.sgst_amount, 0) sgst_amount,
       NVL (igst.igst_rate, 0) igst_rate,
       NVL (igst.igst_amount, 0) igst_amount,
       NVL (tcs.tcs_rate, 0) tcs_rate,
       NVL (tcs.tcs_amount, 0) tcs_amount,
       0 gst_compensation_rate,
       0 gst_compensation_amount,
         rctal.extended_amount
       + NVL (sgst.sgst_amount, 0)
       + NVL (sgst.sgst_amount, 0)
       + NVL (cgst.cgst_amount, 0)
       + NVL (igst.igst_amount, 0)
       + NVL (tcs.tcs_amount, 0)
          total_amount_inc_tax,
         (rctal.quantity_invoiced * rctal.unit_selling_price)
       + NVL (sgst.sgst_amount, 0)
       + NVL (cgst.cgst_amount, 0)
       + NVL (igst.igst_amount, 0)
       + NVL (tcs.tcs_amount, 0)
          tot_inv_bar,
       (rctal.quantity_invoiced * rctal.unit_selling_price) cf_tot_am,
       (zldf.assessable_value
        / NVL (rctal.quantity_invoiced, rctal.quantity_credited))
          assrate,
       rctal.extended_amount VALUE
  FROM ra_customer_trx_lines_all rctal,
       ra_customer_trx_all rct,
       hz_cust_accounts hca,
       (SELECT DISTINCT rctd.customer_trx_id, iop.organization_id
          FROM ra_cust_trx_line_gl_dist_all rctd,
               gl_code_combinations gcc,
               inv_org_parameters iop,
               xla_mapping_set_values xmsv
         WHERE     1 = 1
               AND gcc.segment2 = xmsv.value_constant
               AND xmsv.input_value_constant1 = TO_CHAR (iop.organization_id)
               AND xmsv.enabled_flag = 'Y'
               AND xmsv.mapping_set_code = 'UFSL_INV_LOC_CST'
               AND gcc.code_combination_id = rctd.code_combination_id
               AND rctd.account_class = 'REC') rctd,
       (SELECT esib.organization_id,
               esib.inventory_item_id,
               esib.item_number,
               REGEXP_REPLACE (esit.description, '[^[:alnum:]'' '']', '')
                  description,
               eieb.attribute_char1 hsn_or_sac
          FROM egp_system_items_tl esit,
               egp_system_items_b esib,
               ego_item_eff_b eieb,
               inv_org_parameters iop
         WHERE     1 = 1
               AND iop.organization_id = esit.organization_id
               AND eieb.context_code(+) = 'UCAL Attributes'
               AND iop.master_organization_id = eieb.organization_id(+)
               AND esib.inventory_item_id = eieb.inventory_item_id(+)
               AND esit.organization_id = esib.organization_id
               AND esib.inventory_item_id = esit.inventory_item_id) esi,
       (SELECT DISTINCT trx_id,
                        trx_line_id,
                        unrounded_tax_amt igst_amount,
                        tax_rate igst_rate,
                        unrounded_taxable_amt igst_taxable
          FROM zx_lines
         WHERE     entity_code = 'TRANSACTIONS'
               AND tax LIKE '%IGST%'
               AND application_id = 222) igst,
       (SELECT DISTINCT trx_id,
                        trx_line_id,
                        unrounded_tax_amt cgst_amount,
                        tax_rate cgst_rate,
                        unrounded_taxable_amt cgst_taxable
          FROM zx_lines
         WHERE     entity_code = 'TRANSACTIONS'
               AND tax LIKE '%CGST%'
               AND application_id = 222) cgst,
       (SELECT DISTINCT trx_id,
                        trx_line_id,
                        unrounded_tax_amt sgst_amount,
                        tax_rate sgst_rate,
                        unrounded_taxable_amt sgst_taxable
          FROM zx_lines
         WHERE     entity_code = 'TRANSACTIONS'
               AND tax LIKE '%SGST%'
               AND application_id = 222) sgst,
       (SELECT DISTINCT trx_id,
                        trx_line_id,
                        unrounded_tax_amt tcs_amount,
                        tax_rate tcs_rate,
                        unrounded_taxable_amt tcs_taxable
          FROM zx_lines
         WHERE     entity_code = 'TRANSACTIONS'
               AND tax LIKE '%TCS%'
               AND application_id = 222) tcs,
       zx_lines_det_factors zldf
 WHERE     1 = 1
       AND rctal.customer_trx_id = zldf.trx_id(+)
       AND rctal.customer_trx_line_id = zldf.trx_line_id(+)
       AND zldf.entity_code(+) = 'TRANSACTIONS'
       AND rctal.customer_trx_id = tcs.trx_id(+)
       AND rctal.customer_trx_line_id = tcs.trx_line_id(+)
       AND rctal.customer_trx_id = igst.trx_id(+)
       AND rctal.customer_trx_line_id = igst.trx_line_id(+)
       AND rctal.customer_trx_id = sgst.trx_id(+)
       AND rctal.customer_trx_line_id = sgst.trx_line_id(+)
       AND rctal.customer_trx_id = cgst.trx_id(+)
       AND rctal.customer_trx_line_id = cgst.trx_line_id(+)
       AND esi.inventory_item_id(+) = rctal.inventory_item_id
       AND esi.organization_id(+) = rctd.organization_id
       AND rct.customer_trx_id = rctd.customer_trx_id
       AND rctal.line_type = 'LINE'
       AND hca.cust_account_id = rct.bill_to_customer_id
       AND rct.customer_trx_id = rctal.customer_trx_id
-----HyundaiQR----
select (   'ED'
          || trim (purchase_order)
          || trim (ordered_item)
          || '@'
          || trim (trx_number)
          || '*'
          || trim (trx_date)
          || trim (to_char (sum (qty)))
          || '*'
          || trim (to_char ( (sum (amount)), '99999999999999.99'))
          || trim ('*')
          || trim (attribute_char1)
          || '0.00'
          || trim ('*')
          || sum (sgst)
          || trim ('*')
          || '0.00'
          || trim ('*')
          || sum (g)
          || '*'
          || trim (unit_selling)
          || '*'
          || trim (sum (invoice_amount))
          || '*'
          || sum (cgst)
          || trim ('*')
          || '0.00'
          || trim ('*')
          || '0.00'
          || trim ('*')
          || '0.00'
          || trim ('*')
          || '0.00'
          || trim ('*')
          || '0.00'
          || trim ('*')
          || '0.00'
          || trim ('*')
          || trim (cus_gst)
          || trim ('*')
          || '0.00'
          || trim ('*')
          || trim (irn)
          || trim ('*'))
            hyundai_qr_code,
         customer_trx_id,
         trx_number
    from (  select (rct.purchase_order),
                   (select ep.tp_item_number
                      from egp_trading_partner_items ep,
                           egp_item_relationships_b eir
                     where     ep.tp_item_id = eir.tp_item_id
                           and eir.inventory_item_id = rtl.inventory_item_id
                           and ep.tp_type = 'CUSTOMER'
                           and ep.trading_partner_id = hca.party_id
                           and (eir.end_date_active is null
                                or trunc (eir.end_date_active) > trunc (sysdate))
                           and rownum = 1)
                      ordered_item,
                   (rct.trx_number),
                   to_char (rct.trx_date, 'DDMMYYYY') trx_date,
                   (to_char (sum (rtl.quantity_invoiced))) qty,
                   (to_char (
                       ( (select nvl (sum (jatrl.tax_amt), 0)
                            from zx_lines jatrl
                           where     jatrl.trx_line_id = rtl.customer_trx_line_id
                                 and jatrl.application_id = 222
                                 and entity_code = 'TRANSACTIONS')
                        + sum (
                             nvl (rtl.unit_selling_price, 0)
                             * nvl (rtl.quantity_invoiced, 0))),
                       '99999999999999.99'))
                      amount,
                   eieb.attribute_char1,
                   '0.00' h,
                   (select nvl (to_char (sum (jrtl.tax_amt), 9999999999999.99),
                                '0.00')
                              sgst
                      from zx_lines jrtl
                     where     jrtl.entity_code = 'TRANSACTIONS'
                           and jrtl.tax like '%SGST%'
                           and rtl.customer_trx_line_id = jrtl.trx_line_id
                           and jrtl.application_id = 222)
                      sgst,
                   (select nvl (to_char (sum (jrtl.tax_amt), 9999999999999.99),
                                '0.00')
                              igst
                      from zx_lines jrtl
                     where     jrtl.entity_code = 'TRANSACTIONS'
                           and jrtl.tax like '%IGST%'
                           and rtl.customer_trx_line_id = jrtl.trx_line_id
                           and jrtl.application_id = 222)
                      igst,
                   (select nvl (to_char (sum (jrtl.tax_amt), 9999999999999.99),
                                '0.00')
                              tcs
                      from zx_lines jrtl
                     where     jrtl.entity_code = 'TRANSACTIONS'
                           and jrtl.tax like '%TCS%'
                           and rtl.customer_trx_line_id = jrtl.trx_line_id
                           and jrtl.application_id = 222)
                      g,
                   nvl (rtl.unit_selling_price, 0) unit_selling,
                   (to_char (
                       sum (
                          nvl (rtl.quantity_invoiced, 0)
                          * nvl (rtl.unit_standard_price, 0)),
                       '99999999999999.99'))
                      invoice_amount,
                   (select nvl (to_char (sum (jrtl.tax_amt), 9999999999999.99),
                                '0.00')
                              cgst
                      from zx_lines jrtl
                     where     jrtl.entity_code = 'TRANSACTIONS'
                           and jrtl.tax like '%CGST%'
                           and rtl.customer_trx_line_id = jrtl.trx_line_id
                           and jrtl.application_id = 222)
                      cgst,
                   '0.00' a,
                   '0.00' b,
                   '0.00' c,
                   '0.00' d,
                   '0.00' e,
                   '0.00' f,
                   --                   cust_gst.registration_number cus_gst,
                   rctd.attribute1 cus_gst,
                   (select extn_attribute_char012
                      from moo_ref_entities mre
                     where     1 = 1
                           and attribute_category = 'UCALEInvoicing_c'
                           and mre.extn_attribute_char008 = rct.trx_number
                           and trunc (mre.extn_attribute_timestamp002) =
                                  trunc (rct.trx_date)
                           and mre.extn_attribute_char009 = 'INV'
                           and mre.extn_attribute_char012 is not null)
                      irn,
                   rct.customer_trx_id
              from ra_customer_trx_all rct,
                   ra_customer_trx_lines_all rtl,
                   doo_fulfill_lines_all dfla,
                   hz_parties arc,
                   hz_cust_accounts hca,
                   hr_locations hla,
                   egp_system_items_vl msi,
                   (select distinct rctd.customer_trx_id,
                                    iop.organization_id,
                                    iop.organization_code,
                                    iop.legal_entity_id,
                                    iop.attribute1,
                                    hou.location_id
                      from ra_cust_trx_line_gl_dist_all rctd,
                           gl_code_combinations gcc,
                           inv_org_parameters iop,
                           xla_mapping_set_values xmsv,
                           hr_organization_units hou
                     where     1 = 1
                           and hou.organization_id = iop.organization_id
                           and gcc.segment2 = xmsv.value_constant
                           and xmsv.input_value_constant1 =
                                  to_char (iop.organization_id)
                           and xmsv.enabled_flag = 'Y'
                           and xmsv.mapping_set_code = 'UFSL_INV_LOC_CST'
                           and gcc.code_combination_id = rctd.code_combination_id
                           and rctd.account_class = 'REC') rctd,
                   hz_cust_site_uses_all hcsu,
                   hz_cust_acct_sites_all hcas,
                   (select zr.registration_number, zptp.party_id
                      from zx_party_tax_profile zptp, zx_registrations zr
                     where 1 = 1
                           and zptp.party_tax_profile_id =
                                  zr.party_tax_profile_id
                           and zr.registration_type_code like '%GST%'
                           and zptp.party_type_code = 'THIRD_PARTY_SITE'
                           and zptp.customer_flag = 'Y'
                           and (zr.effective_to is null
                                or zr.effective_to > sysdate)) cust_gst,
                   ego_item_eff_b eieb
             where     1 = 1
                   and eieb.context_code(+) = 'UCAL Attributes'
                   and msi.organization_id = eieb.organization_id(+)
                   and msi.inventory_item_id = eieb.inventory_item_id(+)
                   and cust_gst.party_id(+) = hcas.party_site_id
                   and hcas.cust_acct_site_id = hcsu.cust_acct_site_id
                   and hcsu.site_use_id = rct.bill_to_site_use_id
                   and rct.customer_trx_id = rctd.customer_trx_id
                   and rct.customer_trx_id = rtl.customer_trx_id
                   and rtl.line_type = 'LINE'
                   and rtl.interface_line_attribute6 =
                          to_char (dfla.fulfill_line_id)
                   and hca.cust_account_id =
                          nvl (rct.sold_to_customer_id, rct.bill_to_customer_id)
                   and arc.party_id = hca.party_id
                   and rctd.location_id = hla.location_id
                   and msi.inventory_item_id = rtl.inventory_item_id
                   and msi.organization_id = rctd.organization_id
                   and upper (arc.party_name) like '%HYUNDAI%'
          group by rct.trx_number,
                   rct.customer_trx_id,
                   rtl.inventory_item_id,
                   hca.party_id,
                   rtl.unit_selling_price,
                   rct.interface_header_attribute2,
                   arc.party_name,
                   rct.trx_date,
                   dfla.ordered_qty,
                   rct.purchase_order,
                   eieb.attribute_char1,
                   cust_gst.registration_number,
                   rct.org_id,
                   rtl.customer_trx_line_id,
                   rctd.attribute1
          order by rct.trx_number) a
group by purchase_order,
         ordered_item,
         trx_number,
         trx_date,
         attribute_char1,
         unit_selling,
         h,
         a,
         b,
         c,
         d,
         e,
         f,
         cus_gst,
         irn,
         customer_trx_id,
         trx_number
order by trx_number
----HeroQR------
/* Formatted on 12/07/2021 3:07:13 PM (QP5 v5.163.1008.3004) */
  SELECT rct.customer_trx_id,
         (SELECT zre.extn_attribute_char006
            FROM mkt_ref_entities zre
           WHERE zre.attribute_category = 'UCALCustomerVendorCode_c'
                 AND zre.extn_attribute_char001 =
                        TO_CHAR (hps.party_site_number)
                 AND zre.extn_attribute_char002 = rctd.organization_code)
         || CHR (9)
         || rct.purchase_order
         || CHR (9)
         || rct.trx_number
         || CHR (9)
         || (TO_CHAR (rct.trx_date, 'DD.MM.YYYY'))
         || CHR (9)
         || rctd.attribute1
         || CHR (9)
         || TRIM (
               TO_CHAR ( (SELECT SUM (rtla.extended_amount) invoice_amount
                            FROM ra_customer_trx_lines_all rtla
                           WHERE rtla.customer_trx_id = rct.customer_trx_id),
                        '99999999999999.99'))
         || CHR (9)
         || TRIM (
               TO_CHAR (SUM (rtl.quantity_invoiced * unit_standard_price),
                        '99999999999999.99'))
         || CHR (9)
         || rct.attribute3
         || CHR (9)
         || TRIM (TO_CHAR (SUM (sgst.sgst_amount), '99999999999999.99'))
         || CHR (9)
         || TRIM (TO_CHAR (SUM (igst.igst_amount), '99999999999999.99'))
         || CHR (9)
         || TRIM (TO_CHAR (SUM (cgst.cgst_amount), '99999999999999.99'))
         || CHR (9)
         || TRIM (ROUND (NVL (SUM (tcs.tcs_amount), 0), 2))
         || CHR (9)
         || (SELECT ep.tp_item_number
               FROM egp_trading_partner_items ep, egp_item_relationships_b eir
              WHERE     ep.tp_item_id = eir.tp_item_id
                    AND eir.inventory_item_id = esi.inventory_item_id
                    AND ep.tp_type = 'CUSTOMER'
                    AND ep.trading_partner_id = hca.party_id
                    AND (eir.end_date_active IS NULL
                       OR TRUNC (eir.end_date_active) > TRUNC (SYSDATE))
                    AND ROWNUM = 1)
         || CHR (9)
         || eieb.attribute_char1
         || CHR (9)
         || TRIM (TO_CHAR (SUM (rtl.quantity_invoiced)))
         || CHR (9)
         || TRIM (TO_CHAR (SUM (rtl.unit_selling_price), '99999999999999.99'))
         || CHR (9)
            hero_qrcode
    FROM ra_customer_trx_all rct,
         ra_customer_trx_lines_all rtl,
         (SELECT DISTINCT rctd.customer_trx_id,
                          iop.organization_id,
                          iop.organization_code,
                          iop.legal_entity_id,
                          iop.attribute1
            FROM ra_cust_trx_line_gl_dist_all rctd,
                 gl_code_combinations gcc,
                 inv_org_parameters iop,
                 xla_mapping_set_values xmsv
           WHERE     1 = 1
                 AND gcc.segment2 = xmsv.value_constant
                 AND xmsv.input_value_constant1 = TO_CHAR (iop.organization_id)
                 AND xmsv.enabled_flag = 'Y'
                 AND xmsv.mapping_set_code = 'UFSL_INV_LOC_CST'
                 AND gcc.code_combination_id = rctd.code_combination_id
                 AND rctd.account_class = 'REC') rctd,
         egp_system_items_b esi,
         hr_organization_units hou,
         hr_locations_all hla,
         hz_cust_accounts hca,
         hz_parties hp,
         hz_cust_site_uses_all hcsu,
         hz_cust_acct_sites_all hcas,
         (SELECT DISTINCT trx_id,
                          trx_line_id,
                          unrounded_tax_amt sgst_amount,
                          tax_rate sgst_rate,
                          unrounded_taxable_amt sgst_taxable
            FROM zx_lines
           WHERE     entity_code = 'TRANSACTIONS'
                 AND tax LIKE '%SGST%'
                 AND application_id = 222) sgst,
         (SELECT DISTINCT trx_id,
                          trx_line_id,
                          unrounded_tax_amt cgst_amount,
                          tax_rate cgst_rate,
                          unrounded_taxable_amt cgst_taxable
            FROM zx_lines
           WHERE     entity_code = 'TRANSACTIONS'
                 AND tax LIKE '%CGST%'
                 AND application_id = 222) cgst,
         (SELECT DISTINCT trx_id,
                          trx_line_id,
                          unrounded_tax_amt igst_amount,
                          tax_rate igst_rate,
                          unrounded_taxable_amt igst_taxable
            FROM zx_lines
           WHERE     entity_code = 'TRANSACTIONS'
                 AND tax LIKE '%IGST%'
                 AND application_id = 222) igst,
         (SELECT DISTINCT trx_id,
                          trx_line_id,
                          unrounded_tax_amt tcs_amount,
                          tax_rate tcs_rate,
                          unrounded_taxable_amt tcs_taxable
            FROM zx_lines
           WHERE     entity_code = 'TRANSACTIONS'
                 AND tax LIKE '%TCS%'
                 AND application_id = 222) tcs,
         ego_item_eff_b eieb,
         hz_party_sites hps
   WHERE     1 = 1
         AND hps.party_site_id = hcas.party_site_id
         AND eieb.context_code(+) = 'UCAL Attributes'
         AND esi.organization_id = eieb.organization_id(+)
         AND esi.inventory_item_id = eieb.inventory_item_id(+)
         AND rct.customer_trx_id = tcs.trx_id(+)
         AND rtl.customer_trx_line_id = tcs.trx_line_id(+)
         AND rct.customer_trx_id = igst.trx_id(+)
         AND rtl.customer_trx_line_id = igst.trx_line_id(+)
         AND rct.customer_trx_id = cgst.trx_id(+)
         AND rtl.customer_trx_line_id = cgst.trx_line_id(+)
         AND rct.customer_trx_id = sgst.trx_id(+)
         AND rtl.customer_trx_line_id = sgst.trx_line_id(+)
         AND hcas.cust_acct_site_id = hcsu.cust_acct_site_id
         AND hcsu.site_use_id = rct.bill_to_site_use_id
         AND hp.party_id = hca.party_id
         AND hca.cust_account_id = rct.bill_to_customer_id
         AND hla.location_id = hou.location_id
         AND rctd.organization_id = hou.organization_id
         AND esi.inventory_item_id = rtl.inventory_item_id
         AND esi.organization_id = rctd.organization_id
         AND rct.customer_trx_id = rctd.customer_trx_id
         AND rtl.line_type = 'LINE'
         AND rct.customer_trx_id = rtl.customer_trx_id
         AND UPPER (hp.party_name) LIKE '%HERO%'
GROUP BY rct.customer_trx_id,
         hps.party_site_number,
         rct.purchase_order,
         rct.trx_number,
         (TO_CHAR (rct.trx_date, 'DD.MM.YYYY')),
         rctd.attribute1,
         rct.attribute3,
         esi.inventory_item_id,
         eieb.attribute_char1,
         hca.party_id,
         rctd.organization_code
-----TataQR-----
SELECT (   TRIM (purchase_order)
          || ','
          || TRIM (NVL (order_item_no, 0))
          || ','
          || TRIM (TO_CHAR (SUM (qty)))
          || ','
          || TRIM (trx_number)
          || ','
          || TRIM (trx_date)
          || ','
          || TRIM (SUM (bf_discount_amount))
          || ','
          || TRIM (SUM (invoice_amount))
          || ','
          || TRIM (NVL (vendor_code, 0))
          || ','
          || TRIM (upart)
          || ','
          || SUM (cgst)
          || ','
          || SUM (sgst)
          || ','
          || SUM (igst)
          || ','
          || SUM (ugst)
          || ','
          || SUM (cgst_per)
          || ','
          || SUM (sgst_per)
          || ','
          || SUM (igst_per)
          || ','
          || SUM (ugst_per)
          || ','
          || SUM (cess)
          || ','
          || SUM (tot_amount)
          || ','
          || TRIM (hsn))
            tata_qr_code,
         customer_trx_id
    FROM (  SELECT (rct.purchase_order),
                   --                   NVL (sol.attribute10, 0)
                   dfle.attribute_char1 order_item_no,
                   (TO_CHAR (SUM (rtl.quantity_invoiced))) qty,
                   (rct.trx_number),
                   TO_CHAR (rct.trx_date, 'DD.MM.YYYY') trx_date,
                   (TO_CHAR (
                       SUM (
                          NVL (rtl.quantity_invoiced, 0)
                          * NVL (rtl.unit_standard_price, 0)),
                       '99999999999999.99'))
                      bf_discount_amount,
                   (TO_CHAR (
                       SUM (
                          NVL (rtl.quantity_invoiced, 0)
                          * NVL (rtl.unit_standard_price, 0)),
                       '99999999999999.99'))
                      invoice_amount,
                   hcas.ece_tp_location_code vendor_code,
                   esi.item_number upart,
                   NVL (TO_CHAR (SUM (cgst.cgst_amount), 9999999999999.99),
                        '0.00')
                      cgst,
                   NVL (TO_CHAR (SUM (sgst.sgst_amount), 9999999999999.99),
                        '0.00')
                      sgst,
                   NVL (TO_CHAR (SUM (igst.igst_amount), 9999999999999.99),
                        '0.00')
                      igst,
                   0 ugst,
                   NVL (TO_CHAR (SUM (tcs.tcs_amount), 9999999999999.99), '0.00')
                      tcs,
                   NVL (TO_CHAR (SUM (cgst.cgst_rate), 9999999999999.99), '0.00')
                      cgst_per,
                   NVL (TO_CHAR (SUM (sgst.sgst_rate), 9999999999999.99), '0.00')
                      sgst_per,
                   NVL (TO_CHAR (SUM (igst.igst_rate), 9999999999999.99), '0.00')
                      igst_per,
                   0 ugst_per,
                   NVL (TO_CHAR (SUM (tcs.tcs_rate), 9999999999999.99), '0.00')
                      tcs_per,
                   0 cess,
                   (TO_CHAR (
                       (SELECT SUM (rtla.extended_amount) invoice_amount
                          FROM ra_customer_trx_lines_all rtla
                         WHERE rtla.customer_trx_id = rct.customer_trx_id),
                       '99999999999999.99'))
                      tot_amount,
                   NVL (TRIM (eieb.attribute_char1), '0') hsn,
                   rct.customer_trx_id
              FROM ra_customer_trx_all rct,
                   ra_customer_trx_lines_all rtl,
                   hz_cust_accounts hca,
                   hz_parties hp,
                   hz_cust_site_uses_all hcsu,
                   hz_cust_acct_sites_all hcas,
                   egp_system_items_b esi,
                   (SELECT DISTINCT rctd.customer_trx_id,
                                    iop.organization_id,
                                    iop.organization_code,
                                    iop.legal_entity_id,
                                    iop.attribute1
                      FROM ra_cust_trx_line_gl_dist_all rctd,
                           gl_code_combinations gcc,
                           inv_org_parameters iop,
                           xla_mapping_set_values xmsv
                     WHERE 1 = 1 AND gcc.segment2 = xmsv.value_constant
                           AND xmsv.input_value_constant1 =
                                  TO_CHAR (iop.organization_id)
                           AND xmsv.enabled_flag = 'Y'
                           AND xmsv.mapping_set_code = 'UFSL_INV_LOC_CST'
                           AND gcc.code_combination_id = rctd.code_combination_id
                           AND rctd.account_class = 'REC') rctd,
                   (SELECT DISTINCT trx_id,
                                    trx_line_id,
                                    unrounded_tax_amt sgst_amount,
                                    tax_rate sgst_rate,
                                    unrounded_taxable_amt sgst_taxable
                      FROM zx_lines
                     WHERE     entity_code = 'TRANSACTIONS'
                           AND tax LIKE '%SGST%'
                           AND application_id = 222) sgst,
                   (SELECT DISTINCT trx_id,
                                    trx_line_id,
                                    unrounded_tax_amt cgst_amount,
                                    tax_rate cgst_rate,
                                    unrounded_taxable_amt cgst_taxable
                      FROM zx_lines
                     WHERE     entity_code = 'TRANSACTIONS'
                           AND tax LIKE '%CGST%'
                           AND application_id = 222) cgst,
                   (SELECT DISTINCT trx_id,
                                    trx_line_id,
                                    unrounded_tax_amt igst_amount,
                                    tax_rate igst_rate,
                                    unrounded_taxable_amt igst_taxable
                      FROM zx_lines
                     WHERE     entity_code = 'TRANSACTIONS'
                           AND tax LIKE '%IGST%'
                           AND application_id = 222) igst,
                   (SELECT DISTINCT trx_id,
                                    trx_line_id,
                                    unrounded_tax_amt tcs_amount,
                                    tax_rate tcs_rate,
                                    unrounded_taxable_amt tcs_taxable
                      FROM zx_lines
                     WHERE     entity_code = 'TRANSACTIONS'
                           AND tax LIKE '%TCS%'
                           AND application_id = 222) tcs,
                   ego_item_eff_b eieb,
                   doo_fulfill_lines_eff_b dfle
             WHERE 1 = 1
                   AND rtl.interface_line_attribute6 =
                          TO_CHAR (dfle.fulfill_line_id(+))
                   AND eieb.context_code(+) = 'UCAL Attributes'
                   AND esi.organization_id = eieb.organization_id(+)
                   AND esi.inventory_item_id = eieb.inventory_item_id(+)
                   AND rct.customer_trx_id = tcs.trx_id(+)
                   AND rtl.customer_trx_line_id = tcs.trx_line_id(+)
                   AND rct.customer_trx_id = igst.trx_id(+)
                   AND rtl.customer_trx_line_id = igst.trx_line_id(+)
                   AND rct.customer_trx_id = cgst.trx_id(+)
                   AND rtl.customer_trx_line_id = cgst.trx_line_id(+)
                   AND rct.customer_trx_id = sgst.trx_id(+)
                   AND rtl.customer_trx_line_id = sgst.trx_line_id(+)
                   AND esi.organization_id = rctd.organization_id
                   AND rct.customer_trx_id = rctd.customer_trx_id
                   AND esi.inventory_item_id = rtl.inventory_item_id
                   AND hcas.cust_acct_site_id = hcsu.cust_acct_site_id
                   AND hcsu.site_use_id = rct.bill_to_site_use_id
                   AND hp.party_id = hca.party_id
                   AND hca.cust_account_id = rct.bill_to_customer_id
                   AND rct.customer_trx_id = rtl.customer_trx_id
                   AND line_type = 'LINE'
                   AND UPPER (hp.party_name) LIKE '%TATA%'
          GROUP BY rct.purchase_order,
                   dfle.attribute_char1,
                   rct.trx_number,
                   TO_CHAR (rct.trx_date, 'DD.MM.YYYY'),
                   hcas.ece_tp_location_code,
                   esi.item_number,
                   NVL (TRIM (eieb.attribute_char1), '0'),
                   rct.customer_trx_id
          ORDER BY rct.trx_number) a
GROUP BY purchase_order,
         order_item_no,
         trx_number,
         trx_date,
         upart,
         hsn,
         vendor_code,
         customer_trx_id
-----------------------------Movement Request Pick Slip Report Data Model-------------------------------
-------Q_MAIN_QUERY------
SELECT MMT.PICK_SLIP_NUMBER
     , MTRH.REQUEST_NUMBER
     , MTRH.MOVE_ORDER_TYPE
     , MTRL.LINE_NUMBER
     , MTRL.LINE_ID
     , MTRL.TRANSACTION_SOURCE_TYPE_ID
     , MMT.TRANSACTION_ID
     , TO_NUMBER(NULL) PARENT_LINE_ID
     
     , MMT.INVENTORY_ITEM_ID
     , MSI.ITEM_NUMBER            --null C_ITEM_FLEXDAT
     , MSI.DESCRIPTION ITEM_DESCRIPTION
     , MMT.REVISION
     
     , MMT.SUBINVENTORY_CODE FR_SUBINV
     , DECODE(MMT.LOCATOR_ID, NULL, '', INV_PROJECT.GET_LOCSEGS(MMT.LOCATOR_ID, :P_ORG_ID)) FR_LOCATOR
     
     , MMT.TRANSFER_SUBINVENTORY TO_SUBINV
     , DECODE(MMT.TRANSFER_LOCATOR_ID, NULL, '', INV_PROJECT.GET_LOCSEGS(MMT.TRANSFER_LOCATOR_ID, :P_ORG_ID)) TO_LOCATOR
     
     , MTRL.PJC_PROJECT_ID PROJECT_ID
     , MTRL.PJC_TASK_ID    TASK_ID
     
     , DECODE(MMT.DISTRIBUTION_ACCOUNT_ID, '', '', null) C_TO_ACCOUNT_FLEXDAT
     , PER.USERNAME REQUESTER    --FND.USER_NAME
     , MMT.TRANSACTION_REFERENCE REFERENCE
     
     , MMT.TRANSACTION_UOM TRANSACTION_UOM
     , INV_MO_PICK_SLIP.get_uom_name(MMT.TRANSACTION_UOM) UOM_NAME                    
     , ABS(MMT.TRANSACTION_QUANTITY) TRANSACTION_QTY
     
     , (SELECT DROPPING_ORDER FROM INV_SECONDARY_INVENTORIES WHERE SECONDARY_INVENTORY_NAME = MMT.TRANSFER_SUBINVENTORY AND ORGANIZATION_ID = MMT.ORGANIZATION_ID) SUB_DROPPING_ORDER
     , (SELECT DROPPING_ORDER FROM INV_ITEM_LOCATIONS WHERE INVENTORY_LOCATION_ID = MMT.TRANSFER_LOCATOR_ID AND ORGANIZATION_ID = MMT.ORGANIZATION_ID) LOC_DROPPING_ORDER
     
     , MMT.SECONDARY_UOM_CODE SEC_UOM
     , INV_MO_PICK_SLIP.get_uom_name(MMT.SECONDARY_UOM_CODE) SEC_UOM_NAME               
     , ABS(MMT.SECONDARY_TRANSACTION_QUANTITY) SEC_TRANSACTION_QTY

     , DECODE(MMT.DISTRIBUTION_ACCOUNT_ID, '', '', &CF_TO_ACCOUNT) CF_TO_ACCOUNT
     , INV_MO_PICK_SLIP.cf_sec_uomformula(MMT.INVENTORY_ITEM_ID, MMT.SECONDARY_UOM_CODE) CF_SEC_UOM
     , INV_MO_PICK_SLIP.cf_sec_qtyformula(MMT.INVENTORY_ITEM_ID, ABS(MMT.SECONDARY_TRANSACTION_QUANTITY)) CF_SEC_QTY
        
     , INV_MO_PICK_SLIP.cf_project_numberformula(MTRL.PJC_PROJECT_ID) CF_PROJECT_NUMBER
     , INV_MO_PICK_SLIP.cf_task_numberformula(MTRL.PJC_TASK_ID,MTRL.PJC_PROJECT_ID) CF_TASK_NUMBER
    
     , INV_MO_PICK_SLIP.cf_so_infoformula(LINE_ID, MOVE_ORDER_TYPE) CF_SO_INFO
     , INV_MO_PICK_SLIP.CP_SO_ORDER_NUMBER_p CP_SO_ORDER_NUMBER
     , INV_MO_PICK_SLIP.CP_SO_LINE_NUMBER_p CP_SO_LINE_NUMBER
     , INV_MO_PICK_SLIP.CP_SO_DELIVERY_NAME_p CP_SO_DELIVERY_NAME
     , INV_MO_PICK_SLIP.CP_WO_ORDER_NUMBER_P CP_WO_ORDER_NUMBER
     , INV_MO_PICK_SLIP.CP_WO_OPERATION_SEQ_NUMBER_P CP_WO_OPERATION_SEQ_NUMBER
     , INV_MO_PICK_SLIP.CP_WO_WORK_CENTER_CODE_P CP_WO_WORK_CENTER_CODE
     , INV_MO_PICK_SLIP.CP_WO_WORK_AREA_CODE_P CP_WO_WORK_AREA_CODE
     
     , 3 TASK_STATUS_ID    --INV_PICK_SLIP_TASK_STATUS (1- UnAllocated, 2-Allocated, 3-Completed)
     , INV_MO_PICK_SLIP.cf_task_statusformula(3) CF_TASK_STATUS
     , MMT.PROJECT_ID INV_PROJECT_ID
     , MMT.TASK_ID INV_TASK_ID
     , INV_MO_PICK_SLIP.cf_project_numberformula(MMT.PROJECT_ID) INV_PROJECT_NUMBER
     , INV_MO_PICK_SLIP.cf_task_numberformula(MMT.TASK_ID, MMT.PROJECT_ID) INV_TASK_NUMBER   ,
     MSI.ITEM_TYPE      ,
     ITTT.TRANSACTION_TYPE_NAME,
     to_char(MTRH.date_required , 'DD-MON-RRRR', 'NLS_DATE_LANGUAGE = AMERICAN') move_order_date,
     to_char(mmt.transaction_date, 'DD-MON-RRRR', 'NLS_DATE_LANGUAGE = AMERICAN') pick_slip_date 
     
  FROM INV_TRANSACTION_TYPES_TL ITTT,
      INV_MATERIAL_TXNS MMT   --MTL_MATERIAL_TRANSACTIONS
     , INV_TXN_REQUEST_HEADERS MTRH
     , INV_TXN_REQUEST_LINES MTRL
     , EGP_SYSTEM_ITEMS MSI
     , GL_CODE_COMBINATIONS GCC
     , PER_USERS PER  --FND_USER
       &P_FROM_MMT
 WHERE
 1=1
 and MTRL.transaction_type_id=ITTT.transaction_type_id
 and MMT.ORGANIZATION_ID             = :P_ORG_ID
   AND MMT.MOVE_ORDER_LINE_ID          = MTRL.LINE_ID
   AND MTRL.HEADER_ID                  = MTRH.HEADER_ID
   AND MSI.ORGANIZATION_ID             = MMT.ORGANIZATION_ID
   AND MSI.INVENTORY_ITEM_ID           = MMT.INVENTORY_ITEM_ID
   AND PER.USERNAME                    = MTRL.CREATED_BY
   AND GCC.CODE_COMBINATION_ID(+)      = MMT.DISTRIBUTION_ACCOUNT_ID
   AND NVL(MMT.TRANSACTION_QUANTITY, 0) < 0
   AND &P_WHERE_MMT
   
UNION ALL

SELECT (SELECT PICK_SLIP_NUMBER FROM INV_MATERIAL_TXNS_TEMP WHERE TRANSACTION_TEMP_ID = NVL(MMTT.PARENT_LINE_ID, MMTT.TRANSACTION_TEMP_ID) )PICK_SLIP_NUMBER
     , MTRH.REQUEST_NUMBER
     , MTRH.MOVE_ORDER_TYPE
     , MTRL.LINE_NUMBER
     , MTRL.LINE_ID
     , MTRL.TRANSACTION_SOURCE_TYPE_ID
     , MMTT.TRANSACTION_TEMP_ID TRANSACTION_ID
     , MMTT.PARENT_LINE_ID
     
     , MMTT.INVENTORY_ITEM_ID
     , MSI.ITEM_NUMBER                --null C_ITEM_FLEXDAT
     , MSI.DESCRIPTION ITEM_DESCRIPTION
     , MMTT.REVISION
     
     , MMTT.SUBINVENTORY_CODE FR_SUBINV
     , DECODE(MMTT.LOCATOR_ID, NULL, '', INV_PROJECT.GET_LOCSEGS(MMTT.LOCATOR_ID, :P_ORG_ID)) FR_LOCATOR
     
     , MMTT.TRANSFER_SUBINVENTORY TO_SUBINV
     , DECODE(MMTT.TRANSFER_TO_LOCATION, NULL, '', INV_PROJECT.GET_LOCSEGS(MMTT.TRANSFER_TO_LOCATION, :P_ORG_ID)) TO_LOCATOR
     
     , MTRL.PJC_PROJECT_ID  PROJECT_ID
     , MTRL.PJC_TASK_ID     TAKS_ID
     
     , DECODE(MMTT.DISTRIBUTION_ACCOUNT_ID, '', '', null) C_TO_ACCOUNT_FLEXDAT
     , PER.USERNAME REQUESTER      --FND.USER_NAME
     , MMTT.TRANSACTION_REFERENCE REFERENCE
     
     , MMTT.TRANSACTION_UOM TRANSACTION_UOM
     , INV_MO_PICK_SLIP.get_uom_name(MMTT.TRANSACTION_UOM) UOM_NAME               
     , ABS(MMTT.TRANSACTION_QUANTITY) TRANSACTION_QTY
     
     , (SELECT DROPPING_ORDER FROM INV_SECONDARY_INVENTORIES WHERE SECONDARY_INVENTORY_NAME = MMTT.TRANSFER_SUBINVENTORY AND ORGANIZATION_ID = MMTT.ORGANIZATION_ID) SUB_DROPPING_ORDER
     , (SELECT DROPPING_ORDER FROM INV_ITEM_LOCATIONS WHERE INVENTORY_LOCATION_ID = MMTT.TRANSFER_TO_LOCATION AND ORGANIZATION_ID = MMTT.ORGANIZATION_ID) LOC_DROPPING_ORDER
     
     , MMTT.SECONDARY_UOM_CODE SEC_UOM
     , INV_MO_PICK_SLIP.get_uom_name(MMTT.SECONDARY_UOM_CODE) SEC_UOM_NAME          
     , ABS(MMTT.SECONDARY_TRANSACTION_QUANTITY) SEC_TRANSACTION_QTY
          
     , DECODE(MMTT.DISTRIBUTION_ACCOUNT_ID, '', '', &CF_TO_ACCOUNT) CF_TO_ACCOUNT

     , INV_MO_PICK_SLIP.cf_sec_uomformula(MMTT.INVENTORY_ITEM_ID, MMTT.SECONDARY_UOM_CODE) CF_SEC_UOM
     , INV_MO_PICK_SLIP.cf_sec_qtyformula(MMTT.INVENTORY_ITEM_ID, ABS(MMTT.SECONDARY_TRANSACTION_QUANTITY)) CF_SEC_QTY
    
     , INV_MO_PICK_SLIP.cf_project_numberformula(MTRL.PJC_PROJECT_ID) CF_PROJECT_NUMBER
     , INV_MO_PICK_SLIP.cf_task_numberformula(MTRL.PJC_TASK_ID, MTRL.PJC_PROJECT_ID) CF_TASK_NUMBER
    
     , INV_MO_PICK_SLIP.cf_so_infoformula(MTRL.LINE_ID, MTRH.MOVE_ORDER_TYPE) CF_SO_INFO
     , INV_MO_PICK_SLIP.CP_SO_ORDER_NUMBER_p CP_SO_ORDER_NUMBER
     , INV_MO_PICK_SLIP.CP_SO_LINE_NUMBER_p CP_SO_LINE_NUMBER
     , INV_MO_PICK_SLIP.CP_SO_DELIVERY_NAME_p CP_SO_DELIVERY_NAME
     , INV_MO_PICK_SLIP.CP_WO_ORDER_NUMBER_P CP_WO_ORDER_NUMBER
     , INV_MO_PICK_SLIP.CP_WO_OPERATION_SEQ_NUMBER_P CP_WO_OPERATION_SEQ_NUMBER
     , INV_MO_PICK_SLIP.CP_WO_WORK_CENTER_CODE_P CP_WO_WORK_CENTER_CODE
     , INV_MO_PICK_SLIP.CP_WO_WORK_AREA_CODE_P CP_WO_WORK_AREA_CODE

     , 2 TASK_STATUS_ID    --INV_PICK_SLIP_TASK_STATUS (1- UnAllocated, 2-Allocated, 3-Completed)
     , INV_MO_PICK_SLIP.cf_task_statusformula(2) CF_TASK_STATUS
     , MMTT.PROJECT_ID INV_PROJECT_ID
     , MMTT.TASK_ID INV_TASK_ID
     , INV_MO_PICK_SLIP.cf_project_numberformula(MMTT.PROJECT_ID) INV_PROJECT_NUMBER
     , INV_MO_PICK_SLIP.cf_task_numberformula(MMTT.TASK_ID, MMTT.PROJECT_ID) INV_TASK_NUMBER,
     MSI.ITEM_TYPE   ,
     ITTT.TRANSACTION_TYPE_NAME,
     to_char(MTRH.date_required , 'DD-MON-RRRR', 'NLS_DATE_LANGUAGE = AMERICAN') move_order_date,
     to_char(mmtt.transaction_date, 'DD-MON-RRRR', 'NLS_DATE_LANGUAGE = AMERICAN') pick_slip_date 
     
  FROM INV_TRANSACTION_TYPES_TL ITTT, INV_MATERIAL_TXNS_TEMP MMTT
     , INV_TXN_REQUEST_HEADERS MTRH
     , INV_TXN_REQUEST_LINES MTRL
     , EGP_SYSTEM_ITEMS MSI
     , GL_CODE_COMBINATIONS GCC
     , PER_USERS PER --FND_USER
 WHERE
 1=1
 and MTRL.transaction_type_id=ITTT.transaction_type_id
 and 
 MMTT.ORGANIZATION_ID            = :P_ORG_ID
   AND MTRL.LINE_ID                    = MMTT.MOVE_ORDER_LINE_ID
   AND MTRL.HEADER_ID                  = MTRH.HEADER_ID
   AND MSI.INVENTORY_ITEM_ID           = MMTT.INVENTORY_ITEM_ID
   AND MSI.ORGANIZATION_ID             = MMTT.ORGANIZATION_ID
   AND GCC.CODE_COMBINATION_ID(+)      = MMTT.DISTRIBUTION_ACCOUNT_ID
   AND PER.USERNAME                    = MTRL.CREATED_BY     --FND.USER_ID
   AND NVL(MMTT.TRANSACTION_QUANTITY, 0) > 0
   AND NOT EXISTS (SELECT 1 FROM INV_MATERIAL_TXNS_TEMP WHERE PARENT_LINE_ID = MMTT.TRANSACTION_TEMP_ID)
   AND NVL(MMTT.PARENT_LINE_ID, MMTT.TRANSACTION_TEMP_ID) IN (SELECT NVL(MMTT.PARENT_LINE_ID, MMTT.TRANSACTION_TEMP_ID) 
                                                                FROM INV_MATERIAL_TXNS_TEMP MMTT
                                                                   , INV_TXN_REQUEST_LINES MTRL
                                                                   , INV_TXN_REQUEST_HEADERS MTRH 
                                                                     &P_FROM_MMTT
                                                               WHERE MMTT.ORGANIZATION_ID = :P_ORG_ID
                                                                 AND MTRL.LINE_ID = MMTT.MOVE_ORDER_LINE_ID
                                                                 AND MTRH.HEADER_ID = MTRL.HEADER_ID
                                                                AND &P_WHERE_MMTT )
                                                                
UNION ALL

SELECT MTRL.PICK_SLIP_NUMBER
     , MTRH.REQUEST_NUMBER
     , MTRH.MOVE_ORDER_TYPE
     , MTRL.LINE_NUMBER
     , MTRL.LINE_ID
     , MTRL.TRANSACTION_SOURCE_TYPE_ID     
     , -99999 AS TRANSACTION_ID
     , TO_NUMBER(NULL) PARENT_LINE_ID
     
     , MTRL.INVENTORY_ITEM_ID
     , MSI.ITEM_NUMBER          --null C_ITEM_FLEXDAT
     , MSI.DESCRIPTION
     , MTRL.REVISION
     
     , MTRL.FROM_SUBINVENTORY_CODE FR_SUBINV
     , DECODE(MTRL.FROM_LOCATOR_ID, NULL, '', INV_PROJECT.GET_LOCSEGS(MTRL.FROM_LOCATOR_ID, :P_ORG_ID)) FR_LOCATOR
     
     , MTRL.TO_SUBINVENTORY_CODE TO_SUBINV
     , DECODE(MTRL.TO_LOCATOR_ID, NULL, '', INV_PROJECT.GET_LOCSEGS(MTRL.TO_LOCATOR_ID, :P_ORG_ID)) TO_LOCATOR
     
     , MTRL.PJC_PROJECT_ID  PROJECT_ID
     , MTRL.PJC_TASK_ID     TAKS_ID
     
     , DECODE(MTRL.TO_ACCOUNT_ID, '', '', null) C_TO_ACCOUNT_FLEXDAT
     , PER.USERNAME REQUESTER     --FND.USER_NAME
     , MTRL.REFERENCE_NAME REFERENCE
     
     , MTRL.UOM_CODE TRANSACTION_UOM
     , INV_MO_PICK_SLIP.get_uom_name(MTRL.UOM_CODE) UOM_NAME
     , ABS(NVL(MTRL.QUANTITY, 0) - NVL(MTRL.QUANTITY_DETAILED, 0)) TRANSACTION_QTY
     
     , (SELECT DROPPING_ORDER FROM INV_SECONDARY_INVENTORIES WHERE SECONDARY_INVENTORY_NAME = MTRL.TO_SUBINVENTORY_CODE AND ORGANIZATION_ID = MTRL.ORGANIZATION_ID) SUB_DROPPING_ORDER
     , (SELECT DROPPING_ORDER FROM INV_ITEM_LOCATIONS WHERE INVENTORY_LOCATION_ID = MTRL.TO_LOCATOR_ID AND ORGANIZATION_ID = MTRL.ORGANIZATION_ID) LOC_DROPPING_ORDER
     
     , MTRL.SECONDARY_UOM_CODE SEC_UOM
     , INV_MO_PICK_SLIP.get_uom_name(MTRL.SECONDARY_UOM_CODE) SEC_UOM_NAME     
     , ABS(NVL(MTRL.SECONDARY_QUANTITY, 0) - NVL(MTRL.SECONDARY_QUANTITY_DETAILED, 0)) SEC_TRANSACTION_QTY
     
     , DECODE(MTRL.TO_ACCOUNT_ID, '', '', &CF_TO_ACCOUNT) CF_TO_ACCOUNT
     , INV_MO_PICK_SLIP.cf_sec_uomformula(MTRL.INVENTORY_ITEM_ID, MTRL.SECONDARY_UOM_CODE) CF_SEC_UOM
     , INV_MO_PICK_SLIP.cf_sec_qtyformula(MTRL.INVENTORY_ITEM_ID, ABS(NVL(MTRL.SECONDARY_QUANTITY, 0) - NVL(MTRL.SECONDARY_QUANTITY_DETAILED, 0))) CF_SEC_QTY
    
     , INV_MO_PICK_SLIP.cf_project_numberformula(MTRL.PJC_PROJECT_ID) CF_PROJECT_NUMBER
     , INV_MO_PICK_SLIP.cf_task_numberformula(MTRL.PJC_TASK_ID, MTRL.PJC_PROJECT_ID) CF_TASK_NUMBER
    
     , INV_MO_PICK_SLIP.cf_so_infoformula(LINE_ID, MOVE_ORDER_TYPE) CF_SO_INFO
     , INV_MO_PICK_SLIP.CP_SO_ORDER_NUMBER_p CP_SO_ORDER_NUMBER
     , INV_MO_PICK_SLIP.CP_SO_LINE_NUMBER_p CP_SO_LINE_NUMBER
     , INV_MO_PICK_SLIP.CP_SO_DELIVERY_NAME_p CP_SO_DELIVERY_NAME
         , INV_MO_PICK_SLIP.CP_WO_ORDER_NUMBER_P CP_WO_ORDER_NUMBER
         , INV_MO_PICK_SLIP.CP_WO_OPERATION_SEQ_NUMBER_P CP_WO_OPERATION_SEQ_NUMBER
         , INV_MO_PICK_SLIP.CP_WO_WORK_CENTER_CODE_P CP_WO_WORK_CENTER_CODE
         , INV_MO_PICK_SLIP.CP_WO_WORK_AREA_CODE_P CP_WO_WORK_AREA_CODE

    , 1 TASK_STATUS_ID    --INV_PICK_SLIP_TASK_STATUS (1- UnAllocated, 2-Allocated, 3-Completed)
    , INV_MO_PICK_SLIP.cf_task_statusformula(1) CF_TASK_STATUS
        , MTRL.PROJECT_ID INV_PROJECT_ID
        , MTRL.TASK_ID INV_TASK_ID
        , INV_MO_PICK_SLIP.cf_project_numberformula(MTRL.PROJECT_ID) INV_PROJECT_NUMBER
        , INV_MO_PICK_SLIP.cf_task_numberformula(MTRL.TASK_ID, MTRL.PROJECT_ID) INV_TASK_NUMBER,
     MSI.ITEM_TYPE  ,
     ITTT.TRANSACTION_TYPE_NAME,
     to_char(MTRH.date_required , 'DD-MON-RRRR', 'NLS_DATE_LANGUAGE = AMERICAN') move_order_date,
     to_char(MTRH.date_required, 'DD-MON-RRRR', 'NLS_DATE_LANGUAGE = AMERICAN') pick_slip_date 
     
  FROM INV_TRANSACTION_TYPES_TL ITTT, INV_TXN_REQUEST_HEADERS MTRH
     , INV_TXN_REQUEST_LINES MTRL
     , EGP_SYSTEM_ITEMS MSI
     , PER_USERS PER  --FND_USER
     , GL_CODE_COMBINATIONS GCC
     &P_FROM_MTRL
 WHERE 1=1
 and MTRL.transaction_type_id=ITTT.transaction_type_id
 and MTRL.ORGANIZATION_ID            = :P_ORG_ID
   AND MTRL.HEADER_ID                  = MTRH.HEADER_ID
   AND MSI.INVENTORY_ITEM_ID           = MTRL.INVENTORY_ITEM_ID
   AND MSI.ORGANIZATION_ID             = MTRL.ORGANIZATION_ID
   AND PER.USERNAME                    = MTRL.CREATED_BY   --FND.USER_ID
   AND NVL(MTRL.QUANTITY, 0) > NVL(MTRL.QUANTITY_DETAILED, 0)
   AND MTRL.LINE_STATUS IN (3, 7)
   AND MTRL.TO_ACCOUNT_ID              = GCC.CODE_COMBINATION_ID(+)
   AND &P_WHERE_MTRL
ORDER BY 1, 8, 29, 30, 27, 28, 2, 3, 4, 5, 6, 7, 9, 31, 11, 12, 13, 14, 15, 16, 17, 18, 32, 20, 21, 22, 23
----Q_ORG----
SELECT 
       org.organization_name,
       gsob.currency_code
FROM   inv_organization_definitions_v org,
       gl_sets_of_books gsob
WHERE  org.organization_id = :p_org_id
 AND   org.set_of_books_id = gsob.set_of_books_id
----Q_PARENT_LINE----
SELECT MMTT.TRANSACTION_TEMP_ID PARENT_TXN_TEMP_ID
     , MMTT.INVENTORY_ITEM_ID PARENT_ITEM_ID
     , MSI.ITEM_NUMBER PARENT_ITEM_NUMBER                --null C_PARENT_ITEM_FLEXDAT
     , MMTT.REVISION PARENT_REVISION
     , MMTT.SUBINVENTORY_CODE PARENT_FR_SUBINV
     , DECODE(MMTT.LOCATOR_ID, NULL, '', INV_PROJECT.GET_LOCSEGS(MMTT.LOCATOR_ID, :P_ORG_ID)) PARENT_FR_LOCATOR
     , MMTT.TRANSACTION_QUANTITY PARENT_TXN_QTY
     , MMTT.TRANSACTION_UOM PARENT_TXN_UOM
     , MMTT.SECONDARY_TRANSACTION_QUANTITY PARENT_SEC_TXN_QTY
     , MMTT.SECONDARY_UOM_CODE PARENT_SEC_TXN_UOM 
     , INV_MO_PICK_SLIP.cf_parent_sec_qtyformula(MMTT.INVENTORY_ITEM_ID, MMTT.SECONDARY_TRANSACTION_QUANTITY) CF_PARENT_SEC_QTY
     , INV_MO_PICK_SLIP.cf_parent_sec_uomformula(MMTT.INVENTORY_ITEM_ID, MMTT.SECONDARY_UOM_CODE) CF_PARENT_SEC_UOM
FROM   INV_MATERIAL_TXNS_TEMP MMTT
     , EGP_SYSTEM_ITEMS MSI
 WHERE MSI.INVENTORY_ITEM_ID    = MMTT.INVENTORY_ITEM_ID
   AND MSI.ORGANIZATION_ID      = MMTT.ORGANIZATION_ID 
   AND MMTT.TRANSACTION_TEMP_ID =:PARENT_LINE_ID
----Q_LOT----
SELECT 
       transaction_id l_transaction_id,
       lot_number l_lot_number,
       ABS(transaction_quantity) l_lot_qty,
       serial_transaction_id ls_ser_txn_id,
       grade_code
FROM   inv_transaction_lot_numbers
WHERE  transaction_id = :transaction_id

UNION ALL

SELECT 
       transaction_temp_id l_transaction_id,
       lot_number l_lot_number,
       ABS(transaction_quantity) l_lot_qty,
       serial_transaction_temp_id ls_ser_txn_id,
       grade_code
FROM   inv_transaction_lots_temp
WHERE  transaction_temp_id = :transaction_id
----Q_PARENT_SERIAL-----
SELECT FROM_SER.SERIAL_NUMBER || ' - ' || TO_SER.SERIAL_NUMBER S_PARENT_SERIAL_RANGE
  FROM (
          SELECT SERIAL_NUMBER, ROWNUM SNO
          FROM (&P_SER_PARENT_S_FROM)
          WHERE PREV_SERIAL IS NULL 
          OR    INV_SERIAL_NUMBER_PUB.INCREMENT_SER_NUM(PREV_SERIAL, 1) <> SERIAL_NUMBER
       )  FROM_SER
       ,
       (
          SELECT SERIAL_NUMBER, ROWNUM SNO
          FROM (&P_SER_PARENT_S_FROM)
          WHERE NEXT_SERIAL IS NULL 
          OR    INV_SERIAL_NUMBER_PUB.INCREMENT_SER_NUM(SERIAL_NUMBER, 1) <> NEXT_SERIAL
       )  TO_SER
 WHERE FROM_SER.SNO = TO_SER.SNO
---- Q_PARENT_LOT---
SELECT transaction_temp_id l_parent_txn_temp_id,
       lot_number l_parent_lot,
       ABS(transaction_quantity) l_parent_lot_qty,
       serial_transaction_temp_id l_parent_ser_txn_temp_id
FROM   inv_transaction_lots_temp
WHERE  transaction_temp_id = :parent_txn_temp_id
--Q_PARENT_LOT_SERIAL---
SELECT  FROM_SER.SERIAL_NUMBER || ' - ' || TO_SER.SERIAL_NUMBER LS_PARENT_SERIAL_RANGE
  FROM (
          SELECT SERIAL_NUMBER, ROWNUM SNO
          FROM (&P_SER_PARENT_LS_FROM)
          WHERE  PREV_SERIAL IS NULL 
          OR     INV_SERIAL_NUMBER_PUB.INCREMENT_SER_NUM(PREV_SERIAL, 1) <> SERIAL_NUMBER
       ) FROM_SER
       ,
       (
          SELECT SERIAL_NUMBER, ROWNUM SNO
          FROM (&P_SER_PARENT_LS_FROM)
          WHERE  NEXT_SERIAL IS NULL 
          OR     INV_SERIAL_NUMBER_PUB.INCREMENT_SER_NUM(SERIAL_NUMBER, 1) <> NEXT_SERIAL
        ) TO_SER
 WHERE FROM_SER.SNO = TO_SER.SNO
 ----Q_SERIAL----
 SELECT FROM_SER.SERIAL_NUMBER || ' - ' || TO_SER.SERIAL_NUMBER S_SERIAL_RANGE
  FROM (
          SELECT SERIAL_NUMBER, ROWNUM SNO
          FROM (&P_SER_CHILD_S_FROM)
          WHERE PREV_SERIAL IS NULL 
          OR INV_SERIAL_NUMBER_PUB.INCREMENT_SER_NUM(PREV_SERIAL, 1) <> SERIAL_NUMBER
       ) FROM_SER
       ,
       (
          SELECT SERIAL_NUMBER, ROWNUM SNO
          FROM (&P_SER_CHILD_S_FROM)
          WHERE NEXT_SERIAL IS NULL 
          OR INV_SERIAL_NUMBER_PUB.INCREMENT_SER_NUM(SERIAL_NUMBER, 1) <> NEXT_SERIAL
       ) TO_SER
 WHERE FROM_SER.SNO = TO_SER.SNO
 ----Q_LOT_SERIAL-----
 SELECT FROM_SER.SERIAL_NUMBER || ' - ' || TO_SER.SERIAL_NUMBER LS_SERIAL_RANGE
  FROM (
          SELECT SERIAL_NUMBER, ROWNUM SNO
          FROM (&P_SER_CHILD_LS_FROM)
          WHERE PREV_SERIAL IS NULL 
          OR INV_SERIAL_NUMBER_PUB.INCREMENT_SER_NUM(PREV_SERIAL, 1) <> SERIAL_NUMBER
       ) FROM_SER
       ,
       (
          SELECT SERIAL_NUMBER, ROWNUM SNO
          FROM (&P_SER_CHILD_LS_FROM)
          WHERE NEXT_SERIAL IS NULL 
          OR INV_SERIAL_NUMBER_PUB.INCREMENT_SER_NUM(SERIAL_NUMBER, 1) <> NEXT_SERIAL
       ) TO_SER
 WHERE FROM_SER.SNO = TO_SER.SNO
 --------------------------------------Payment Advice DM---------------------------------------
 SELECT *
  FROM (  SELECT psv.vendor_id vendor_id,
                 psv.vendor_name || '/' || psv.segment1 vendor_name,
                 pssv.address_line1 address1,
                 pssv.address_line2 address2,
                 pssv.address_line3 address3,
                 pssv.address_line4 address4,
                 pssv.city city,
                 pssv.state state,
                 psv.segment1 segment1,
                 pssv.zip zip,
                 aca.amount check_amount,
                 -- aca.bank_name bank_name,
                 TO_CHAR (aca.check_date,
                          'DD-MON-YYYY',
                          'NLS_DATE_LANGUAGE = AMERICAN')
                    check_date,
                 aca.bank_account_name,
                 aca.bank_account_num,
                 aca.description check_description,
                 aca.doc_sequence_value doc_value,
                 aca.check_number,
                 aia.invoice_amount,
                 (aia.invoice_amount + NVL (wth.amount, 0) - aia.amount_paid)
                    amount_remaining,
                 aia.invoice_num invoice_num,
                 aia.invoice_type_lookup_code invoice_type,
                 TO_CHAR (aia.invoice_date,
                          'DD-MON-YYYY',
                          'NLS_DATE_LANGUAGE = AMERICAN')
                    invoice_date,
                 aia.doc_sequence_value voc_num,
                 aia.po_header_id,
                 (SELECT segment1
                    FROM po_headers_all
                   WHERE po_header_id = aia.po_header_id)
                    po_number,
                 NVL (
                    (  SELECT SUM (
                                 NVL (
                                    NVL (apia.payment_base_amount, apia.amount),
                                    0))
                         FROM ap_invoices_all aia, ap_invoice_payments_all apia
                        WHERE aia.invoice_id = apia.invoice_id
                              AND aia.invoice_type_lookup_code IN
                                     ('Standard', 'Prepayment')
                              AND aia.vendor_id = psv.vendor_id
                              AND aia.vendor_id IN
                                     (SELECT DISTINCT vendor_id
                                        FROM ap_checks_all aca1
                                       WHERE aca1.check_number = aca.check_number
                                             AND apia.check_id = aca.check_id)
                     GROUP BY aia.vendor_id),
                    0)
                    debit_amt,
                 NVL (
                    (  SELECT SUM (
                                 NVL (
                                    NVL (apia.payment_base_amount, apia.amount),
                                    0))
                         FROM ap_invoices_all aia, ap_invoice_payments_all apia
                        WHERE aia.invoice_id = apia.invoice_id
                              AND aia.invoice_type_lookup_code IN
                                     ('Credit Memo', 'Debit Memo')
                              AND aia.vendor_id = psv.vendor_id
                              AND aia.vendor_id IN
                                     (SELECT DISTINCT vendor_id
                                        FROM ap_checks_all aca1
                                       WHERE aca1.check_number = aca.check_number
                                             AND apia.check_id = aca.check_id)
                     GROUP BY aia.vendor_id),
                    0)
                    credit_amt,
                 NVL (
                    (  SELECT SUM (
                                 NVL (
                                    NVL (apia.payment_base_amount, apia.amount),
                                    0))
                         FROM ap_invoices_all aia, ap_invoice_payments_all apia
                        WHERE aia.invoice_id = apia.invoice_id
                              AND aia.invoice_type_lookup_code IN
                                     ('Standard',
                        
 						'Prepayment',
                                      'Credit Memo',
                                      'Debit Memo')
                              AND aia.vendor_id = psv.vendor_id
                              AND aia.vendor_id IN
                                     (SELECT DISTINCT vendor_id
                                        FROM ap_checks_all aca1
                                       WHERE aca1.check_number = aca.check_number
                                             AND apia.check_id = aca.check_id)
                     GROUP BY aia.vendor_id),
                    0)
                    tot_amt,
                 SUM (aipa.amount) amount_paid,
                 SUM (NVL (aipa.payment_base_amount, aipa.amount)) amount1,
                 wth.amount withholding_amount,
                 tds.tds_tax,
                 esi.esi_tax
            FROM ap_checks_all aca,
                 ap_invoice_payments_all aipa,
                 ap_invoices_all aia,
                 poz_suppliers_v psv,
                 poz_supplier_sites_v pssv,
                 (  SELECT SUM (amount) amount, invoice_id
                      FROM ap_invoice_lines_all
                     WHERE line_type_lookup_code = 'AWT'
                  GROUP BY invoice_id) wth,
                 (  SELECT ABS (ROUND (NVL (SUM (unrounded_tax_amt), 0), 2))
                              tds_tax,
                           trx_id
                      FROM zx_withholding_lines
                     WHERE entity_code = 'AP_INVOICES'
                           AND UPPER (tax) LIKE '%TDS%'
                  GROUP BY trx_id) tds,
                 (  SELECT ABS (ROUND (NVL (SUM (unrounded_tax_amt), 0), 2))
                              esi_tax,
                           trx_id
                      FROM zx_withholding_lines
                     WHERE entity_code = 'AP_INVOICES'
                           AND UPPER (tax) LIKE '%ESI%'
                  GROUP BY trx_id) esi,
				  (SELECT DISTINCT aida.invoice_id,
                                          iop.organization_id,
                                          iop.organization_code,
                                          iop.legal_entity_id,
                                          iop.attribute1
                            FROM ap_invoice_distributions_all aida,
                                 gl_code_combinations gcc,
                                 inv_org_parameters iop,
                                 xla_mapping_set_values xmsv
                           WHERE 1 = 1 AND gcc.segment2 = xmsv.value_constant
                                 AND xmsv.input_value_constant1 =
                                        TO_CHAR (iop.organization_id)
                                 AND xmsv.enabled_flag = 'Y'
                                 AND xmsv.mapping_set_code = 'UFSL_INV_LOC_CST'
                                 AND gcc.code_combination_id =
                                        aida.dist_code_combination_id
                                 AND aida.line_type_lookup_code IN
                                        ('ITEM', 'ACCRUAL')
                                 AND iop.organization_id =
                                        NVL (:p_organization_id,
                                             iop.organization_id)) org
           WHERE     1 = 1
                 AND esi.trx_id(+) = aia.invoice_id
                 AND tds.trx_id(+) = aia.invoice_id
                 AND aia.invoice_id = wth.invoice_id(+)
                 AND aia.vendor_site_id = pssv.vendor_site_id
                 AND pssv.pay_site_flag = 'Y'
                 AND psv.vendor_id = pssv.vendor_id
                 AND aca.vendor_id = pssv.vendor_id
                 AND aia.invoice_id = aipa.invoice_id
                 AND aipa.check_id = aca.check_id
				 AND org.invoice_id = aia.invoice_id
                 AND pssv.vendor_id = NVL (:p_vendor_id, pssv.vendor_id)
                 AND TRUNC (aca.check_date) BETWEEN NVL (
                                                       :p_from_date,
                                                       TRUNC (aca.check_date))
                                                AND NVL (:p_to_date,
                                                         TRUNC (SYSDATE))
                 AND aca.check_number BETWEEN NVL (:p_check_num,
                                                   aca.check_number)
                                          AND NVL (:p_check_num_to,
                                                   aca.check_number)
        GROUP BY psv.vendor_id,
                 psv.vendor_name || '/' || psv.segment1,
                 pssv.address_line1,
                 pssv.address_line2,
                 pssv.address_line3,
                 pssv.address_line4,
                 pssv.city,
                 pssv.state,
                 psv.segment1,
                 pssv.zip,
                 aca.amount,
                 -- aca.bank_name bank_name,
                 TO_CHAR (aca.check_date,
                          'DD-MON-YYYY',
                          'NLS_DATE_LANGUAGE = AMERICAN'),
                 aca.bank_account_name,
                 aca.bank_account_num,
                 aca.description,
                 aca.doc_sequence_value,
                 aca.check_number,
                 aia.invoice_amount,
                 (aia.invoice_amount + NVL (wth.amount, 0) - aia.amount_paid),
                 aia.invoice_num,
                 aia.invoice_type_lookup_code,
                 TO_CHAR (aia.invoice_date,
                          'DD-MON-YYYY',
                          'NLS_DATE_LANGUAGE = AMERICAN'),
                 aia.doc_sequence_value,
                 aia.po_header_id,
                 aca.check_id,
                 wth.amount,
                 tds.tds_tax,
                 esi.esi_tax
        ORDER BY aca.check_number, aia.invoice_num)
 WHERE amount_paid <> 0
 ----------------------------------------Sales Journal by Customer DM------------------------------------------
 /* Formatted on 19/08/2021 11:23:01 AM (QP5 v5.163.1008.3004) */
SELECT rcta.customer_trx_id,
       rcta.trx_number inv_num,
       TO_CHAR (rcta.trx_date, 'DD-MON-YYYY', 'NLS_DATE_LANGUAGE=AMERICAN')
          inv_date,
       wsh.attribute3 vec_num,
       NVL (rcta.exchange_rate, 0) exchange_rate,
       rcta.invoice_currency_code,
       rctl.interface_line_attribute9,
       NVL (rctl.quantity_invoiced,
            NVL (rctl.quantity_ordered, rctl.quantity_credited))
          qty,
       NVL (rctl.unit_selling_price, 0) unit_price,
       NVL (
          CASE
             WHEN rcta.invoice_currency_code != 'INR'
             THEN
                NVL (rctl.extended_amount, 0) * NVL (rcta.exchange_rate, 0)
             ELSE
                NVL (rctl.extended_amount, 0)
          END,
          0)
          material_value,
       NVL (
          wsh.attribute6,
          (SELECT note.note_txt
             FROM zmm_notes note
            WHERE note.source_object_code = 'AR_TRANSACTION'
                  AND rcta.customer_trx_id = note.source_object_uid))
          "REMARKS",
       rctd.attribute1 org_gstin,
       hou.name deliver_from,
       hrou.name org_name,
       hca.account_name,
       hp.party_name customer_name,
       rctta.name invoice_type,
       DECODE (rctta.TYPE,
               'INV', 'Invoice',
               'DM', 'Debit Memo',
               'CM', 'Credit Memo')
          invoice_class,
       esi.item_number ufsl_part_no,
       esi.description descr,
       NVL (rctl.attribute1, esi.hsn_or_sac) hsn,
       rctl.uom_code unit,
       CASE WHEN UPPER (rctta.attribute1) = 'SERVICE' THEN 'S' ELSE 'G' END
          prod_type,
       (SELECT ep.tp_item_number
          FROM egp_trading_partner_items ep, egp_item_relationships_b eir
         WHERE     ep.tp_item_id = eir.tp_item_id
               AND eir.inventory_item_id = esi.inventory_item_id
               AND ep.tp_type = 'CUSTOMER'
               AND ep.trading_partner_id = hca.party_id
               AND ROWNUM = 1)
          customer_part_no,
       hl_b.address1 || ',' || hl_b.city "Location",
       zr_b.registration_number gstn,
       (flv_bst.description || '-' || flv_bst.meaning) state_code,
       NVL (flv_bst.description, '96') gstinstcd,
       (NVL (
           CASE
              WHEN rcta.invoice_currency_code != 'INR'
              THEN
                 NVL (rctl.extended_amount, 0) * NVL (rcta.exchange_rate, 0)
              ELSE
                 NVL (rctl.extended_amount, 0)
           END,
           0)
        + NVL (igst.tax_amount, 0)
        + NVL (cgst.tax_amount, 0)
        + NVL (sgst.tax_amount, 0)
        + NVL (tcs.tax_amount, 0))
          item_total_amount,
       NVL (igst.tax_rate, 0) igst_r,
       NVL (igst.tax_amount, 0) igst_tax,
       NVL (cgst.tax_rate, 0) cgst_rgst_r,
       NVL (cgst.tax_amount, 0) cgst_tax,
       NVL (sgst.tax_rate, 0) sgst_r,
       NVL (sgst.tax_amount, 0) sgst_tax,
       NULL cess_tax,
       NVL (tcs.tax_amount, 0) tcs_tax,
       NULL other_tax,
       ROUND (
          SUM (
             NVL (
                CASE
                   WHEN rcta.invoice_currency_code != 'INR'
                   THEN
                      NVL (rctl.extended_amount, 0)
                      * NVL (rcta.exchange_rate, 0)
                   ELSE
                      NVL (rctl.extended_amount, 0)
                END,
                0)
             + +NVL (igst.tax_amount, 0)
             + NVL (cgst.tax_amount, 0)
             + NVL (sgst.tax_amount, 0)
             + NVL (tcs.tax_amount, 0))
          OVER (
             PARTITION BY TO_CHAR (rcta.trx_date,
                                   'DD/MM/YYYY',
                                   'NLS_DATE_LANGUAGE=AMERICAN'),
                          rcta.trx_number),
          3)
          total_invoice_amount,
       ROUND (
          NVL (
             CASE
                WHEN rcta.invoice_currency_code != 'INR'
                THEN
                   NVL (rctl.extended_amount, 0)
                   * NVL (rcta.exchange_rate, 0)
                ELSE
                   NVL (rctl.extended_amount, 0)
             END,
             0),
          3)
          assessable_value,
       mre.extn_attribute_char012 irn,
       wsh.attribute4 pack
  FROM ra_customer_trx_all rcta,
       ra_customer_trx_lines_all rctl,
       (SELECT DISTINCT rctd.customer_trx_id,
                        iop.organization_id,
                        iop.organization_code,
                        iop.legal_entity_id,
                        iop.attribute1,
                        hou.location_id
          FROM ra_cust_trx_line_gl_dist_all rctd,
               gl_code_combinations gcc,
               inv_org_parameters iop,
               xla_mapping_set_values xmsv,
               hr_organization_units hou
         WHERE     1 = 1
               AND hou.organization_id = iop.organization_id
               AND gcc.segment2 = xmsv.value_constant
               AND xmsv.input_value_constant1 = TO_CHAR (iop.organization_id)
               AND xmsv.enabled_flag = 'Y'
               AND xmsv.mapping_set_code = 'UFSL_INV_LOC_CST'
               AND gcc.code_combination_id = rctd.code_combination_id
               AND rctd.account_class = 'REC') rctd,
       hr_organization_units_f_tl hou,
       hz_cust_accounts hca,
       hz_parties hp,
       hr_operating_units hrou,
       (SELECT esib.organization_id,
               esib.inventory_item_id,
               esib.item_number,
               REGEXP_REPLACE (esit.description, '[^[:alnum:]'' '']', '')
                  description,
               eieb.attribute_char1 hsn_or_sac
          FROM egp_system_items_tl esit,
               egp_system_items_b esib,
               ego_item_eff_b eieb,
               inv_org_parameters iop
         WHERE     1 = 1
               AND iop.organization_id = esib.organization_id
               AND eieb.context_code(+) = 'UCAL Attributes'
               AND iop.master_organization_id = eieb.organization_id(+)
               AND esib.inventory_item_id = eieb.inventory_item_id(+)
               AND esit.organization_id = esib.organization_id
               AND esib.inventory_item_id = esit.inventory_item_id) esi,
       ra_cust_trx_types_all rctta,
       hz_cust_site_uses_all hcsu_b,
       hz_cust_acct_sites_all hcas_b,
       hz_party_sites hps_b,
       hz_locations hl_b,
       fnd_lookup_values flv_bst,
       zx_party_tax_profile zptp_b,
       zx_registrations zr_b,
       (  SELECT SUM (tax_rate) tax_rate,
                 trx_id,
                 trx_line_id,
                 unrounded_taxable_amt
            FROM zx_lines zl
           WHERE     1 = 1
                 AND zl.entity_code = 'TRANSACTIONS'
                 AND zl.application_id = 222                 -- AR Application
                 AND zl.tax LIKE '%GST%'
        GROUP BY trx_id, trx_line_id, unrounded_taxable_amt) tax_rate,
       (  SELECT trx_id,
                 trx_line_id,
                 unrounded_tax_amt tax_amount,
                 tax_rate
            FROM zx_lines zl
           WHERE     1 = 1
                 AND zl.entity_code = 'TRANSACTIONS'
                 AND zl.tax LIKE '%SGST%'
                 AND zl.application_id = 222                 -- AR Application
        GROUP BY trx_id,
                 trx_line_id,
                 unrounded_tax_amt,
                 tax_rate) sgst,
       (  SELECT trx_id,
                 trx_line_id,
                 unrounded_tax_amt tax_amount,
                 tax_rate
            FROM zx_lines zl
           WHERE     1 = 1
                 AND zl.entity_code = 'TRANSACTIONS'
                 AND zl.tax LIKE '%CGST%'
                 AND zl.application_id = 222                 -- AR Application
        GROUP BY trx_id,
                 trx_line_id,
                 unrounded_tax_amt,
                 tax_rate) cgst,
       (  SELECT trx_id,
                 trx_line_id,
                 unrounded_tax_amt tax_amount,
                 tax_rate
            FROM zx_lines zl
           WHERE     1 = 1
                 AND zl.entity_code = 'TRANSACTIONS'
                 AND zl.tax LIKE '%IGST%'
                 AND zl.application_id = 222                 -- AR Application
        GROUP BY trx_id,
                 trx_line_id,
                 unrounded_tax_amt,
                 tax_rate) igst,
       (  SELECT trx_id,
                 trx_line_id,
                 unrounded_tax_amt tax_amount,
                 tax_rate
            FROM zx_lines zl
           WHERE     1 = 1
                 AND zl.entity_code = 'TRANSACTIONS'
                 AND zl.tax LIKE '%TCS%'
                 AND zl.application_id = 222                 -- AR Application
        GROUP BY trx_id,
                 trx_line_id,
                 unrounded_tax_amt,
                 tax_rate) tcs,
       moo_ref_entities mre,
       (SELECT DISTINCT wnd.attribute1,
                        wnd.attribute2,
                        wnd.attribute3,
                        wnd.attribute4,
                        wnd.attribute5,
                        wnd.attribute6,
                        rctla.customer_trx_id
          FROM wsh_new_deliveries wnd, ra_customer_trx_lines_all rctla
         WHERE     1 = 1
               AND wnd.delivery_id(+) = rctla.interface_line_attribute7
               AND rctla.line_type = 'LINE') wsh
 WHERE     1 = 1
       AND hca.party_id = NVL (:p_customer_id, hca.party_id)
       AND rcta.trx_date BETWEEN (:p_from_date) AND (:p_to_date)
       AND rctd.organization_id =
              NVL (:p_organization_id, rctd.organization_id)
       AND rcta.customer_trx_id = wsh.customer_trx_id(+)
       AND mre.attribute_category(+) = 'UCALEInvoicing_c'
       AND rcta.trx_number = mre.extn_attribute_char008(+)
       AND TRUNC (rcta.trx_date) = TRUNC (mre.extn_attribute_timestamp002(+))
       AND rctl.customer_trx_line_id = tax_rate.trx_line_id(+)
       AND rctl.customer_trx_id = tax_rate.trx_id(+)
       AND rctl.customer_trx_line_id = igst.trx_line_id(+)
       AND rctl.customer_trx_line_id = cgst.trx_line_id(+)
       AND rctl.customer_trx_line_id = sgst.trx_line_id(+)
       AND rctl.customer_trx_line_id = tcs.trx_line_id(+)
       AND UPPER (hl_b.state) = UPPER (flv_bst.meaning(+))
       AND flv_bst.lookup_type(+) = 'UCAL_IN_STATE_CODES'
       AND flv_bst.enabled_flag(+) = 'Y'
       AND zr_b.registration_type_code(+) = 'GST'
       AND (zr_b.effective_to IS NULL OR zr_b.effective_to > TRUNC (SYSDATE))
       AND zptp_b.party_tax_profile_id = zr_b.party_tax_profile_id(+)
       AND zptp_b.customer_flag(+) = 'Y'
       AND zptp_b.site_flag(+) = 'Y'
       AND hps_b.party_site_id = zptp_b.party_id(+)
       AND hps_b.party_site_id = hcas_b.party_site_id
       AND hl_b.location_id = hps_b.location_id
       AND hcas_b.cust_acct_site_id = hcsu_b.cust_acct_site_id
       AND hcsu_b.site_use_id = rcta.bill_to_site_use_id
       AND rctta.cust_trx_type_seq_id = rcta.cust_trx_type_seq_id
       AND esi.organization_id(+) = rctd.organization_id
       AND rctl.inventory_item_id = esi.inventory_item_id(+)
       AND hrou.organization_id = rcta.org_id
       AND hp.party_id = hca.party_id
       AND hca.cust_account_id = rcta.bill_to_customer_id
       AND hou.organization_id = rctd.organization_id
       AND rctl.customer_trx_id = rcta.customer_trx_id
       AND rctl.line_type = 'LINE'
       AND rctd.customer_trx_id = rcta.customer_trx_id
       AND rctta.TYPE = NVL (:p_invoice_type, rctta.TYPE)
	   ---------------------------------------------UCAL Account Analysis Data Model--------------------------------------------
	   -----G_MAIN-----
	   --- Modified---- 9-4-2021

  SELECT gjs.user_je_source_name "GL Source",
         gjc.user_je_category_name "GL Category",
         h.name "JV Name",
         ---h.POSTED_DATE "GL_Date",
         TO_CHAR (h.POSTED_DATE, 'DD-MM-YYYY') "Posted_Date",
         TO_CHAR (l.effective_date,
                  'DD-MON-YYYY',
                  'NLS_DATE_LANGUAGE = AMERICAN')
            "Accounting Date",
         h.doc_sequence_value "Document Sequence",
         l.currency_code "Currency Code",
         l.description line_description,
         h.external_reference "Reference",
         SUM (NVL (l.accounted_dr, 0)) dr,
         SUM (NVL (l.accounted_cr, 0)) cr,
         gcc.segment1,
         gcc.segment2,
         gcc.segment3,
         gcc.segment4,
         gcc.segment5,
         gcc.segment6,
         gcc.segment7,
         val.description,
         NULL "Supplier Name",
         NULL "PO#",
         NULL "Receipt#",
         NULL "Transaction#",
         NULL "Payment Voucher#",
         NULL "trans_date",
         --TO_CHAR(l.effective_date,'DD-MM-YYYY') "trans_date" -- added on 9-4-2021
         NULL customer_name,
         NULL party_id                                    -- added on 9-4-2021
    FROM gl_je_headers h,
         gl_je_lines l,
         gl_code_combinations gcc,
         gl_je_sources_vl gjs,
         gl_je_categories_vl gjc,
         fnd_flex_values_vl val,
         fnd_id_flex_segments seg
   WHERE     h.je_header_id = l.je_header_id
         AND gcc.code_combination_id = l.code_combination_id
         AND h.actual_flag = 'A'
         AND h.status = 'P'
         AND h.je_source = gjs.je_source_name
         AND h.je_category = gjc.je_category_name
         AND val.flex_value_set_id = seg.flex_value_set_id
         AND seg.application_id = 101
         AND seg.id_flex_code = 'GL#'
         AND seg.enabled_flag = 'Y'
         AND seg.application_column_name = 'SEGMENT4'
         AND seg.id_flex_num = gcc.chart_of_accounts_id
         AND val.flex_value = gcc.segment4
         --   and h.name='04012020__Receipt HIS-Receipt'
         AND gjs.je_source_name NOT IN
                (SELECT je_source_name FROM xla_subledgers)
         -- AND :P_SOURCE NOT IN (SELECT JE_SOURCE_NAME FROM XLA_SUBLEDGERS)
         AND gcc.segment4 BETWEEN NVL (:p_segment4_low, gcc.segment4)
                              AND NVL (:p_segment4_high, gcc.segment4)
         AND gjc.je_category_name = NVL (:p_category, gjc.je_category_name)
         AND gjs.je_source_name = NVL (:p_source, gjs.je_source_name)
         AND h.period_name = :p_period_name
GROUP BY gjs.user_je_source_name,
         gjc.user_je_category_name,
         h.name,
         h.POSTED_DATE,
         TO_CHAR (l.effective_date,
                  'DD-MON-YYYY',
                  'NLS_DATE_LANGUAGE = AMERICAN'),
         h.doc_sequence_value,
         l.currency_code,
         l.description,
         h.external_reference,
         gcc.segment1,
         gcc.segment2,
         gcc.segment3,
         gcc.segment4,
         gcc.segment5,
         gcc.segment6,
         gcc.segment7,
         val.description
UNION ALL
SELECT gjs.user_je_source_name source,
       gjc.user_je_category_name category,
       jh.name header_name,
       ---jh.POSTED_DATE "GL_Date",
       TO_CHAR (jh.POSTED_DATE, 'DD-MM-YYYY') "Posted_Date",
       TO_CHAR (l.accounting_date,
                'DD-MON-YYYY',
                'NLS_DATE_LANGUAGE = AMERICAN')
          accounting_date,
       h.doc_sequence_value,
       l.currency_code currency_code,
       CASE
          WHEN gjs.user_je_source_name = 'Cash Management'
          THEN
             (SELECT cbt.payment_method_code
                FROM ce_bat_transfers cbt, ce_external_transactions cet
               WHERE cbt.transfer_id = cet.transfer_id
                     AND cet.transaction_id = xte.transaction_number)
          ELSE
             l.description
       END
          xla_description,
       jh.external_reference reference,
       NVL (l.accounted_dr, 0) debit,
       NVL (l.accounted_cr, 0) credit,
       gcc.segment1,
       gcc.segment2,
       gcc.segment3,
       gcc.segment4,
       gcc.segment5,
       gcc.segment6,
       gcc.segment7,
       val.description,
       CASE
          WHEN l.party_type_code = 'S'
          THEN
             (SELECT vendor_name
                FROM poz_suppliers_v
               WHERE vendor_id = l.party_id)
          ELSE
             (SELECT party_name
                FROM hz_parties
               WHERE party_id = l.party_id)
       END
          vendor_name,
       CASE
          WHEN xte.application_id = 200 AND xte.entity_code = 'AP_INVOICES'
          THEN
             ap_invoices_utility_pkg.get_po_number_list (xte.source_id_int_1)
       END
          po_number,
       CASE
          WHEN xte.application_id = 200 AND xte.entity_code = 'AP_INVOICES'
          THEN
             ap_invoices_utility_pkg.get_receipt_number (xte.source_id_int_1)
       END
          receipt_num,
       CASE
          WHEN xte.application_id = 140 AND xte.entity_code = 'TRANSACTIONS'
          THEN
             (SELECT fav.asset_number
                FROM fa_additions_vl fav, fa_transaction_headers fth
               WHERE fth.transaction_header_id = xte.source_id_int_1
                     AND fav.asset_id = fth.asset_id)
          ELSE
             xte.transaction_number
       END
          trx_num,
       CASE
          WHEN xte.application_id = 200 AND xte.entity_code = 'AP_PAYMENTS'
          THEN
             (SELECT check_number
                FROM ap_checks_all
               WHERE check_id = xte.source_id_int_1)
       END
          payment_voucher_number,
       TO_CHAR (xte.creation_date,
                'DD-MON-YYYY',
                'NLS_DATE_LANGUAGE = AMERICAN')
          "trans_date",
       CASE
          WHEN gjs.je_source_name = 'Receivables'
               AND gjc.user_je_category_name != 'Receipts'
          THEN
             (SELECT party_name
                FROM hz_parties hzp, ra_customer_trx_all rcta
               WHERE hzp.party_id = rcta.sold_to_party_id
                     AND rcta.customer_trx_id = xte.source_id_int_1 -- l.party_id
                                                                   )
          WHEN gjc.user_je_category_name = 'Payments'
               OR gjc.user_je_category_name = 'Purchase Invoices'
          THEN
             NULL
          WHEN gjc.user_je_category_name = 'Receipts'
          THEN
             (SELECT party_name
                FROM hz_cust_accounts hca,
                     hz_parties hz,
                     AR_CASH_RECEIPTS_all acra
               WHERE     1 = 1
                     AND hca.cust_account_id = acra.PAY_FROM_CUSTOMER
                     AND hca.party_id = hz.party_id
                     AND acra.CASH_RECEIPT_ID = xte.source_id_int_1)
          ELSE
             (SELECT vendor_name
                FROM poz_suppliers_v
               WHERE vendor_id = l.party_id)
       END
          customer_name,                                  -- added on 9-4-2021
       l.party_id
  FROM xla_transaction_entities xte,
       gl_code_combinations gcc,
       xla_ae_headers h,
       xla_ae_lines l,
       gl_import_references gir,
       gl_je_headers jh,
       xla_subledgers xsl,
       gl_je_sources_vl gjs,
       gl_je_categories_vl gjc,
       fnd_flex_values_vl val,
       fnd_id_flex_segments seg
 WHERE     xte.entity_id = h.entity_id
       AND h.ae_header_id = l.ae_header_id
       AND l.code_combination_id = gcc.code_combination_id
       AND h.balance_type_code = 'A'
       AND jh.status = 'P'
       AND xte.application_id = h.application_id
       AND h.application_id = l.application_id
       AND h.application_id = xsl.application_id
       AND xsl.je_source_name = gjs.je_source_name
       AND jh.je_source = gjs.je_source_name
       AND h.gl_transfer_status_code = 'Y'
       AND gir.gl_sl_link_id = l.gl_sl_link_id
       AND gir.gl_sl_link_table = 'XLAJEL'
       AND gir.je_header_id = jh.je_header_id
       AND seg.id_flex_num = gcc.chart_of_accounts_id
       AND val.flex_value_set_id = seg.flex_value_set_id
       AND seg.application_id = 101
       AND seg.id_flex_code = 'GL#'
       AND seg.enabled_flag = 'Y'
       AND TRUNC (l.accounting_date) > '2020-04-30'
       AND seg.application_column_name = 'SEGMENT4'
       AND val.flex_value = gcc.segment4
       AND gcc.segment4 BETWEEN NVL (:p_segment4_low, gcc.segment4)
                            AND NVL (:p_segment4_high, gcc.segment4)
       AND gjc.je_category_name = NVL (:p_category, gjc.je_category_name)
       AND gjc.je_category_name = jh.je_category
       AND xsl.je_source_name = NVL (:p_source, xsl.je_source_name)
       AND jh.period_name = :p_period_name
	   ----Security----
	   DECLARE
 type refcursor is REF CURSOR;
 xdo_cursor refcursor;

BEGIN

 MO_GLOBAL.Init('AP_MANAGE_PAYABLES_INVOICE_DATA');
 MO_GLOBAL.Init('AR_VIEW_RECEIVABLES_ACTIVITIES_DATA');

 OPEN :xdo_cursor FOR
 SELECT SYSDATE RUN_DATE
 from dual;

END;
---Param---
/* Formatted on 17/03/2021 2:16:55 PM (QP5 v5.163.1008.3004) */
SELECT NVL (:p_source, 'All') source,
       NVL (:p_category, 'All') categ,
       TO_CHAR (:p_from_date, 'DD-MM-YYYY') from_date,
       TO_CHAR (:p_to_date, 'DD-MM-YYYY') TO_DATE,
       NVL (:p_segment2_low, 'All') comp_low,
       NVL (:p_segment2_high, 'All') comp_high,
       NVL (
          (SELECT val.description || ' ' || val.flex_value
             FROM fnd_flex_values_vl val, fnd_id_flex_segments seg
            WHERE     val.flex_value_set_id = seg.flex_value_set_id
                  AND seg.application_id = 101
                  AND seg.id_flex_code = 'GL#'
                  AND seg.enabled_flag = 'Y'
                  AND summary_flag = 'N'
                  AND seg.application_column_name = 'SEGMENT2'
                  AND ROWNUM = 1
                  AND val.flex_value = :p_segment4_low),
          'All')
          acc_low,
       NVL (
          (SELECT val.description || ' ' || val.flex_value
             FROM fnd_flex_values_vl val, fnd_id_flex_segments seg
            WHERE     val.flex_value_set_id = seg.flex_value_set_id
                  AND seg.application_id = 101
                  AND seg.id_flex_code = 'GL#'
                  AND seg.enabled_flag = 'Y'
                  AND summary_flag = 'N'
                  AND seg.application_column_name = 'SEGMENT2'
                  AND ROWNUM = 1
                  AND val.flex_value = :p_segment4_high),
          'All')
          acc_hig
  FROM DUAL
  ----Balances----
  SELECT gcc.segment4 bal_segment4,
         SUM (NVL (begin_balance_dr, 0) - NVL (begin_balance_cr, 0))
            opening_bal,
         SUM (
            (NVL (begin_balance_dr, 0) - NVL (begin_balance_cr, 0))
            + (NVL (period_net_dr, 0) - NVL (period_net_cr, 0)))
            closing_bal
    FROM gl_balances gb, gl_code_combinations gcc
   WHERE     1 = 1
         AND gcc.code_combination_id = gb.code_combination_id
         AND gb.period_name = :p_period_name
         AND gb.currency_code = 'INR'
         AND gcc.segment4 BETWEEN NVL (:p_segment4_low, gcc.segment4)
                              AND NVL (:p_segment4_high, gcc.segment4)
GROUP BY gcc.segment4
--------------------------------------UCAL AP Invoice Aging Report Data Model-----------------------------------
----XX_AP_SUPPLIER_AGING----
SELECT vendor_number,
         vendor_name,
         vendor_site_code,
         vendor_type_lookup_code,
         batch_name invoice_group,
         source,
         invoice_type_lookup_code,
         invoice_id,
         invoice_num invoice_number,
         description,
         invoice_amount,
         invoice_currency_code,
         TO_CHAR (invoice_date, 'DD-MON-YYYY', 'NLS_DATE_LANGUAGE = AMERICAN')
            invoice_date,
         TO_CHAR (gl_date, 'DD-MON-YYYY', 'NLS_DATE_LANGUAGE = AMERICAN')
            gl_date,
         liability liability_acc,
         exchange_rate_type,
         exchange_rate,
         TO_CHAR (exchange_date, 'DD-MON-YYYY', 'NLS_DATE_LANGUAGE = AMERICAN')
            exchange_date,
         amount,
         TO_CHAR (due_date, 'DD-MON-YYYY', 'NLS_DATE_LANGUAGE = AMERICAN')
            due_date,
         TO_CHAR (due_date, 'DD-MM-YYYY', 'NLS_DATE_LANGUAGE = AMERICAN')
            sort_due_date,
         gross_amount,
         payment_num,
         amount payment_amount,
         remaining_due_inv_currency,
         organization_code,
         supplier_type,
         receipt_num grn_num,
         TO_CHAR (transaction_date,
                  'DD-MON-YYYY',
                  'NLS_DATE_LANGUAGE = AMERICAN')
            grn_dt,
         po_number po_num,
         payment_term terms_name,
         invoice_status,
         payment_status,
         no_of_days day_over_due,
         due_base_currency,
         CASE
            WHEN no_of_days BETWEEN 1 AND 30 THEN due_base_currency
            ELSE 0
         END
            buk1_30,
         CASE
            WHEN no_of_days BETWEEN 31 AND 45 THEN due_base_currency
            ELSE 0
         END
            buk31_45,
         CASE
            WHEN no_of_days BETWEEN 46 AND 60 THEN due_base_currency
            ELSE 0
         END
            buk45_60,
         CASE
            WHEN no_of_days BETWEEN 61 AND 90 THEN due_base_currency
            ELSE 0
         END
            buk61_90,
         CASE
            WHEN no_of_days BETWEEN 91 AND 180 THEN due_base_currency
            ELSE 0
         END
            buk91_180,
         CASE
            WHEN no_of_days BETWEEN 181 AND 360 THEN due_base_currency
            ELSE 0
         END
            buk181_360,
         CASE WHEN no_of_days >= 361 THEN due_base_currency ELSE 0 END buk361
    FROM (SELECT aia.vendor_number,
                 aia.vendor_name,
                 aia.vendor_site_code,
                 aia.vendor_type_lookup_code,
                 aia.batch_name,
                 aia.source,
                 aia.invoice_type_lookup_code,
                 aia.invoice_id,
                 aia.invoice_num,
                 aia.description,
                 aia.invoice_amount,
                 aia.invoice_currency_code,
                 aia.invoice_date,
                 aia.gl_date,
                 aia.liability,
                 aia.exchange_rate_type,
                 aia.exchange_rate,
                 aia.exchange_date,
                 aia.amount,
                 aps.due_date,
                 aps.gross_amount,
                 aps.payment_num,
                 aps.amount payment_amount,
                 aps.gross_amount - aps.amount remaining_due_inv_currency,
                 aia.organization_code,
                 aia.supplier_type,
                 aia.receipt_num,
                 aia.transaction_date,
                 aia.po_number,
                 aia.payment_term,
                 aia.invoice_status,
                 aia.payment_status,
                 due_date - TRUNC (NVL (:p_to_date, SYSDATE)) no_of_days,
                 (aps.gross_amount - aps.amount) * NVL (aia.exchange_rate, 1)
                    due_base_currency
            FROM (  SELECT ps.segment1 vendor_number,
                           ps.vendor_name,
                           pss.vendor_site_code,
                           ps.vendor_type_lookup_code,
                           apb.batch_name,
                           aia.source,
                           aia.invoice_type_lookup_code,
                           aia.invoice_id,
                           aia.invoice_num,
                           aia.description,
                           aia.invoice_amount,
                           aia.invoice_currency_code,
                           aia.invoice_date,
                           aia.gl_date,
                           apt.name payment_term,
                           gcc.segment4 liability,
                           aia.exchange_rate_type,
                           aia.exchange_rate,
                           aia.exchange_date,
                           SUM (aid.amount) amount,
                           iop.organization_code,
                           flv.meaning supplier_type,
                           rcpt.receipt_num,
                           rcpt.transaction_date,
                           rcpt.po_number,
                           alc.displayed_field invoice_status,
                           DECODE (aia.payment_status_flag,
                                   'Y', 'Fully Paid',
                                   'N', 'Not Paid',
                                   'P', 'Partially Paid')
                              payment_status
                      FROM ap_invoices_all aia,
                           poz_suppliers_v ps,
                           poz_supplier_sites_all_m pss,
                           ap_batches_all apb,
                           gl_code_combinations gcc,
                           ap_terms_tl apt,
                           ap_invoice_distributions_all aid,
                           inv_org_parameters iop,
                           xla_mapping_set_values xmsv,
                           fnd_lookup_values flv,
                           (SELECT DISTINCT aida.invoice_id,
                                            rsh.receipt_num,
                                            rt.transaction_date,
                                            ph.segment1 po_number
                              FROM ap_invoice_distributions_all aida,
                                   rcv_transactions rt,
                                   rcv_shipment_headers rsh,
                                   po_headers_all ph
                             WHERE 1 = 1
                                   AND aida.rcv_transaction_id =
                                          rt.transaction_id
                                   AND rt.shipment_header_id =
                                          rsh.shipment_header_id
                                   AND rt.po_header_id = ph.po_header_id) rcpt,
                           ap_lookup_codes alc
                     WHERE     1 = 1
                           AND alc.lookup_type = 'NLS TRANSLATION'
                           AND alc.lookup_code = aia.approval_status
                           AND alc.enabled_flag = 'Y'
                           AND apt.term_id = aia.terms_id
                           AND apt.language = 'US'
                           AND rcpt.invoice_id(+) = aia.invoice_id
                           AND flv.lookup_type(+) = 'UFSL_SUPPLIER_ANALYSIS_TYPE'
                           AND flv.lookup_code(+) = gcc.segment4
                           AND flv.enabled_flag(+) = 'Y'
                           AND flv.language(+) = 'US'
                           AND gcc.segment2 = xmsv.value_constant
                           AND xmsv.input_value_constant1 =
                                  TO_CHAR (iop.organization_id)
                           AND xmsv.enabled_flag = 'Y'
                           AND xmsv.mapping_set_code = 'UFSL_INV_LOC_CST'
                           AND pss.vendor_site_id = aia.vendor_site_id
                           AND ps.vendor_id = aia.vendor_id
                           AND pss.vendor_id = ps.vendor_id
                           AND apb.batch_id(+) = aia.batch_id
                           AND aia.invoice_amount <> 0
                           AND apt.term_id = aia.terms_id
                           AND gcc.code_combination_id =
                                  aia.accts_pay_code_combination_id
                           AND aid.invoice_id = aia.invoice_id
                           AND aia.vendor_id = NVL (:p_vendor_id, aia.vendor_id)
                           AND iop.organization_id =
                                  NVL (:p_organization_id, iop.organization_id)
                           AND flv.lookup_code =
                                  NVL (:p_supplier_type, flv.lookup_code)
                  --and   gcd.CODE_COMBINATION_ID  = aid.    DIST_CODE_COMBINATION_ID
                  --and   ail.invoice_id          = aia.invoice_id
                  --and   aid.invoice_line_number =  ail.line_number
                  GROUP BY ps.segment1,
                           ps.vendor_name,
                           pss.vendor_site_code,
                           ps.vendor_type_lookup_code,
                           apb.batch_name,
                           aia.source,
                           aia.invoice_type_lookup_code,
                           aia.invoice_id,
                           aia.invoice_num,
                           aia.description,
                           aia.invoice_amount,
                           aia.invoice_currency_code,
                           aia.invoice_date,
                           aia.gl_date,
                           gcc.segment4,
                           aia.exchange_rate_type,
                           aia.exchange_rate,
                           aia.exchange_date,
                           iop.organization_code,
                           flv.meaning,
                           rcpt.receipt_num,
                           rcpt.transaction_date,
                           rcpt.po_number,
                           apt.name,
                           alc.displayed_field,
                           aia.payment_status_flag) aia,
                 (  SELECT aps.invoice_id,
                           aps.payment_num,
                           aps.gross_amount,
                           aps.due_date,
                           NVL (SUM (app.amount), 0) amount
                      FROM ap_payment_schedules_all aps,
                           ap_invoice_payments_all app
                     WHERE     1 = 1
                           AND app.invoice_id(+) = aps.invoice_id
                           AND app.payment_num(+) = aps.payment_num
                           AND NVL (app.accounting_date, SYSDATE - 1) <=
                                  NVL (:p_to_date, SYSDATE)
                           AND aps.gross_amount <> 0
                  GROUP BY aps.invoice_id,
                           aps.payment_num,
                           aps.gross_amount,
                           aps.due_date
                    HAVING gross_amount - NVL (SUM (app.amount), 0) <> 0) aps
           WHERE 1 = 1 AND aps.invoice_id = aia.invoice_id
          UNION ALL
          SELECT aia.vendor_number,
                 aia.vendor_name,
                 aia.vendor_site_code,
                 aia.vendor_type_lookup_code,
                 aia.batch_name,
                 aia.source,
                 aia.invoice_type_lookup_code,
                 aia.invoice_id,
                 aia.invoice_num,
                 aia.description,
                 aia.invoice_amount,
                 aia.invoice_currency_code,
                 aia.invoice_date,
                 aia.gl_date,
                 aia.liability,
                 aia.exchange_rate_type,
                 aia.exchange_rate,
                 aia.exchange_date,
                 aia.amount,
                 aps.due_date,
                 aps.gross_amount,
                 aps.payment_num,
                 aps.amount payment_amount,
                 aps.gross_amount - aps.amount remaining_due_inv_currency,
                 aia.organization_code,
                 aia.supplier_type,
                 aia.receipt_num,
                 aia.transaction_date,
                 aia.po_number,
                 aia.payment_term,
                 aia.invoice_status,
                 aia.payment_status,
                 due_date - TRUNC (NVL (:p_to_date, SYSDATE)) no_of_days,
                 (aps.gross_amount - aps.amount) * NVL (aia.exchange_rate, 1)
                    due_base_currency
            FROM (  SELECT ps.segment1 vendor_number,
                           ps.vendor_name,
                           pss.vendor_site_code,
                           ps.vendor_type_lookup_code,
                           apb.batch_name,
                           aia.source,
                           aia.invoice_type_lookup_code,
                           aia.invoice_id,
                           aia.invoice_num,
                           aia.description,
                           aia.invoice_amount,
                           aia.invoice_currency_code,
                           aia.invoice_date,
                           aia.gl_date,
                           apt.name payment_term,
                           gcc.segment4 liability,
                           aia.exchange_rate_type,
                           aia.exchange_rate,
                           aia.exchange_date,
                           iop.organization_code,
                           SUM (aid.amount) amount,
                           flv.meaning supplier_type,
                           rcpt.receipt_num,
                           rcpt.transaction_date,
                           rcpt.po_number,
                           alc.displayed_field invoice_status,
                           DECODE (aia.payment_status_flag,
                                   'Y', 'Fully Paid',
                                   'N', 'Not Paid',
                                   'P', 'Partially Paid')
                              payment_status
                      FROM ap_invoices_all aia,
                           poz_suppliers_v ps,
                           poz_supplier_sites_all_m pss,
                           ap_batches_all apb,
                           gl_code_combinations gcc,
                           ap_terms_tl apt,
                           ap_invoice_distributions_all aid,
                           inv_org_parameters iop,
                           xla_mapping_set_values xmsv,
                           fnd_lookup_values flv,
                           (SELECT DISTINCT aida.invoice_id,
                                            rsh.receipt_num,
                                            rt.transaction_date,
                                            ph.segment1 po_number
                              FROM ap_invoice_distributions_all aida,
                                   rcv_transactions rt,
                                   rcv_shipment_headers rsh,
                                   po_headers_all ph
                             WHERE 1 = 1
                                   AND aida.rcv_transaction_id =
                                          rt.transaction_id
                                   AND rt.shipment_header_id =
                                          rsh.shipment_header_id
                                   AND rt.po_header_id = ph.po_header_id) rcpt,
                           ap_lookup_codes alc
                     WHERE     1 = 1
                           AND alc.lookup_type = 'NLS TRANSLATION'
                           AND alc.lookup_code = aia.approval_status
                           AND alc.enabled_flag = 'Y'
                           AND apt.term_id = aia.terms_id
                           AND apt.language = 'US'
                           AND rcpt.invoice_id(+) = aia.invoice_id
                           AND flv.lookup_type(+) = 'UFSL_SUPPLIER_ANALYSIS_TYPE'
                           AND flv.lookup_code(+) = gcc.segment4
                           AND flv.enabled_flag(+) = 'Y'
                           AND flv.language(+) = 'US'
                           AND gcc.segment2 = xmsv.value_constant
                           AND xmsv.input_value_constant1 =
                                  TO_CHAR (iop.organization_id)
                           AND xmsv.enabled_flag = 'Y'
                           AND xmsv.mapping_set_code = 'UFSL_INV_LOC_CST'
                           AND pss.vendor_site_id = aia.vendor_site_id
                           AND ps.vendor_id = aia.vendor_id
                           AND pss.vendor_id = ps.vendor_id
                           AND apb.batch_id(+) = aia.batch_id
                           AND aia.invoice_amount = 0
                           AND apt.term_id = aia.terms_id
                           AND gcc.code_combination_id =
                                  aia.accts_pay_code_combination_id
                           AND aid.invoice_id = aia.invoice_id
                           AND aid.accounting_date <=
                                  TRUNC (NVL (:p_to_date, SYSDATE))
                           --and   gcd.CODE_COMBINATION_ID  = aid.    DIST_CODE_COMBINATION_ID
                           --and   ail.invoice_id          = aia.invoice_id
                           --and   aid.invoice_line_number =  ail.line_number
                           AND aia.vendor_id = NVL (:p_vendor_id, aia.vendor_id)
                           AND iop.organization_id =
                                  NVL (:p_organization_id, iop.organization_id)
                           AND flv.lookup_code =
                                  NVL (:p_supplier_type, flv.lookup_code)
                  GROUP BY ps.segment1,
                           ps.vendor_name,
                           pss.vendor_site_code,
                           ps.vendor_type_lookup_code,
                           apb.batch_name,
                           aia.source,
                           aia.invoice_type_lookup_code,
                           aia.invoice_id,
                           aia.invoice_num,
                           aia.description,
                           aia.invoice_amount,
                           aia.invoice_currency_code,
                           iop.organization_code,
                           aia.invoice_date,
                           aia.gl_date            -- ,apt.NAME   payternm_code
                                      -- ,apt.DESCRIPTION payterm_desc
                           ,
                           gcc.segment4,
                           aia.exchange_rate_type,
                           aia.exchange_rate,
                           aia.exchange_date,
                           flv.meaning,
                           rcpt.receipt_num,
                           rcpt.transaction_date,
                           rcpt.po_number,
                           apt.name,
                           alc.displayed_field,
                           aia.payment_status_flag
                    HAVING SUM (aid.amount) <> 0) aia,
                 (  SELECT aps.invoice_id,
                           aps.payment_num,
                           aps.gross_amount,
                           aps.due_date,
                           NVL (SUM (app.amount), 0) amount
                      FROM ap_payment_schedules_all aps,
                           ap_invoice_payments_all app
                     WHERE     1 = 1
                           AND app.invoice_id(+) = aps.invoice_id
                           AND app.payment_num(+) = aps.payment_num
                           --and   aps.invoice_id    in ( 54578,59053,300000013535897)
                           AND NVL (app.accounting_date, SYSDATE - 1) <=
                                  TRUNC (NVL (:p_to_date, SYSDATE))
                           AND aps.gross_amount = 0
                  GROUP BY aps.invoice_id,
                           aps.payment_num,
                           aps.gross_amount,
                           aps.due_date
                    HAVING gross_amount - NVL (SUM (app.amount), 0) <> 0) aps
           WHERE 1 = 1 AND aps.invoice_id(+) = aia.invoice_id)
ORDER BY DECODE (:p_sort_invoices_by, 1, vendor_number),
         DECODE (:p_sort_invoices_by, 2, due_base_currency),
         DECODE (:p_sort_invoices_by, 3, TO_CHAR (due_date, 'yyyymmdd'))
---------------------------------------------------UCAL Buyer Listing DM-------------------------------------------------
--BuyerListing--
/* Formatted on 19/08/2021 10:21:01 PM (QP5 v5.163.1008.3004) */
WITH mtl
     AS (SELECT esi.item_number part_no,
                esi.item_type,
                SUBSTR (esi.description, 1, 60) description,
                ppnf.full_name buyer_name,
                iop.organization_code,
                mss.safety_stock_quantity,
                ect.category_name,
                esi.inventory_item_id,
                esi.organization_id,
                iisi.secondary_inventory
           FROM egp_system_items_vl esi,
                inv_item_sub_inventories iisi,
                po_agent_assignments paa,
                per_person_names_f ppnf,
                inv_org_parameters iop,
                egp_item_cat_assignments eica,
                egp_categories_tl ect,
                egp_category_sets_b ecs,
                msc_safety_stocks mss
          WHERE     1 = 1
                AND mss.inventory_item_id(+) = esi.inventory_item_id
                AND mss.organization_id(+) = esi.organization_id
                AND eica.category_set_id = ecs.category_set_id
                AND ecs.catalog_code = 'UCAL_PO_INV_FUNCTIONAL'
                AND eica.category_set_id = ecs.category_set_id
                AND eica.category_id = ect.category_id
                AND esi.inventory_item_id = eica.inventory_item_id
                AND eica.organization_id = iop.master_organization_id
                AND iop.organization_id = esi.organization_id
                AND paa.agent_id = ppnf.person_id(+)
                AND esi.buyer_id = paa.assignment_id(+)
                AND TRUNC (SYSDATE) BETWEEN TRUNC (
                                               ppnf.effective_start_date(+))
                                        AND TRUNC (effective_end_date(+))
                AND ppnf.name_type(+) = 'GLOBAL'
                AND esi.inventory_item_id = iisi.inventory_item_id
                AND esi.organization_id = iisi.organization_id
                AND esi.organization_id = :p_organization_id
                AND iisi.secondary_inventory = :p_subinventory_code),
     onhand
     AS (  SELECT iohd.inventory_item_id,
                  iohd.organization_id,
                  SUM (iohd.transaction_quantity) onhand,
                  SUM (
                     CASE
                        WHEN isi.subinventory_group LIKE '%OSP%'
                        THEN
                           transaction_quantity
                     END)
                     osp_stock
             FROM inv_onhand_quantities_detail iohd,
                  mtl,
                  inv_secondary_inventories isi
            WHERE     1 = 1
                  AND isi.secondary_inventory_name = iohd.subinventory_code
                  AND isi.organization_id = iohd.organization_id
                  AND iohd.inventory_item_id = mtl.inventory_item_id
                  AND iohd.organization_id = mtl.organization_id
                  AND (iohd.subinventory_code = mtl.secondary_inventory
                       OR isi.subinventory_group LIKE '%OSP%')
         GROUP BY iohd.inventory_item_id, iohd.organization_id),
     txn
     AS (  SELECT NVL (SUM (imt.transaction_quantity), 0) month_txn_qty,
                  NVL (
                     SUM (
                        CASE
                           WHEN TRUNC (imt.transaction_date) > :p_as_on_date
                           THEN
                              imt.transaction_quantity
                        END),
                     0)
                     param_dt_qty,
                  NVL (
                     SUM (
                        CASE
                           WHEN TRUNC (imt.transaction_date) > :p_as_on_date
                                AND isi.subinventory_group LIKE '%OSP%'
                           THEN
                              imt.transaction_quantity
                        END),
                     0)
                     osp_txn_qty,
                  NVL (
                     SUM (
                        CASE
                           WHEN TRUNC (imt.transaction_date) <= :p_as_on_date
                                AND imt.transaction_quantity > 0
                                AND imt.subinventory_code =
                                       mtl.secondary_inventory
                           THEN
                              imt.transaction_quantity
                        END),
                     0)
                     receipt_qty,
                  NVL (
                     SUM (
                        CASE
                           WHEN TRUNC (imt.transaction_date) <= :p_as_on_date
                                AND imt.transaction_quantity < 0
                                AND imt.subinventory_code =
                                       mtl.secondary_inventory
                           THEN
                              ABS (imt.transaction_quantity)
                        END),
                     0)
                     issue_qty,
                  imt.inventory_item_id,
                  imt.organization_id
             FROM inv_material_txns imt, inv_secondary_inventories isi, mtl
            WHERE     1 = 1
                  AND isi.secondary_inventory_name = imt.subinventory_code
                  AND isi.organization_id = imt.organization_id
                  AND imt.transaction_type_id <> 80      --Average cost update
                  AND imt.inventory_item_id = mtl.inventory_item_id
                  AND imt.organization_id = mtl.organization_id
                  AND (imt.subinventory_code = mtl.secondary_inventory
                       OR isi.subinventory_group LIKE '%OSP%')
                  AND TRUNC (imt.transaction_date) BETWEEN TRUNC (
                                                              ADD_MONTHS (
                                                                 LAST_DAY (
                                                                    :p_as_on_date),
                                                                 -1)
                                                              + 1)
                                                       AND TRUNC (SYSDATE)
         GROUP BY imt.inventory_item_id, imt.organization_id),
     qc_pending
     AS (  SELECT SUM (
                     (  l.quantity_received
                      - l.quantity_rejected
                      - l.quantity_accepted))
                     qc_pending_qty,
                  mtl.inventory_item_id,
                  mtl.organization_id
             FROM rcv_shipment_lines l, mtl
            WHERE     1 = 1
                  AND l.to_organization_id = mtl.organization_id
                  AND l.routing_header_id = 2           -- Inspection required
                  AND l.item_id = mtl.inventory_item_id
                  AND (  l.quantity_received
                       - l.quantity_rejected
                       - l.quantity_accepted) > 0
         GROUP BY mtl.inventory_item_id, mtl.organization_id),
     del_pending
     AS (  SELECT SUM (
                     CASE
                        WHEN routing_header_id = 1
                        THEN
                           (l.quantity_received - l.quantity_delivered)
                           + quantity_rejected
                        WHEN routing_header_id = 2
                        THEN
                           (l.quantity_accepted - l.quantity_delivered)
                           + quantity_rejected
                     END)
                     del_pending_qty,
                  mtl.inventory_item_id,
                  mtl.organization_id
             FROM rcv_shipment_lines l, mtl
            WHERE     1 = 1
                  AND l.to_organization_id = mtl.organization_id
                  AND l.routing_header_id IN (1, 2) -- Standard receipt, Inspection
                  AND l.item_id = mtl.inventory_item_id
                  AND CASE
                         WHEN routing_header_id = 1
                         THEN
                            (l.quantity_received - l.quantity_delivered)
                            + quantity_rejected
                         WHEN routing_header_id = 2
                         THEN
                            (l.quantity_accepted - l.quantity_delivered)
                            + quantity_rejected
                      END > 0
         GROUP BY mtl.inventory_item_id, mtl.organization_id),
     item_cst
     /* Oracle Query for taking cost */
     AS (  SELECT ccvcv.inventory_item_id,
                  iop.organization_id,
                  ROUND (SUM (ccvcv.unit_cost), 2) total_cost
             FROM cst_costed_vu_costs_v ccvcv,
                  cst_val_unit_details cvud,
                  cst_val_unit_combinations cvuc,
                  cst_val_structures_b cvsb,
                  inv_org_parameters iop,
                  cst_cost_inv_orgs ccio,
                  (  SELECT cost_org_id,
                            cost_book_id,
                            inventory_item_id,
                            val_unit_id,
                            MAX (snapshot_date) snapshot_date
                       FROM cst_costed_vu_costs_v
                   GROUP BY cost_org_id,
                            cost_book_id,
                            inventory_item_id,
                            val_unit_id) mv
            WHERE     1 = 1
                  AND mv.cost_org_id = ccvcv.cost_org_id
                  AND mv.cost_book_id = ccvcv.cost_book_id
                  AND mv.inventory_item_id = ccvcv.inventory_item_id
                  AND mv.val_unit_id = ccvcv.val_unit_id
                  AND mv.snapshot_date = ccvcv.snapshot_date
                  AND ccio.inv_org_id = iop.organization_id
                  AND ccio.cost_org_id = ccvcv.cost_org_id
                  AND iop.organization_code = cvuc.inv_org_code
                  AND cvsb.val_structure_type_code = 'ASSET'
                  AND cvud.val_structure_id = cvsb.val_structure_id
                  AND cvud.val_unit_combination_id =
                         cvuc.val_unit_combination_id
                  AND ccvcv.val_unit_id = cvud.val_unit_id
         GROUP BY ccvcv.inventory_item_id, iop.organization_id)
SELECT mtl.buyer_name,
       mtl.organization_code plant,
       mtl.item_type,
       mtl.part_no,
       mtl.description,
       CASE
          WHEN NVL (oh.onhand, 0) - NVL (txn.month_txn_qty, 0) > 0
          THEN
             NVL (oh.onhand, 0) - NVL (txn.month_txn_qty, 0)
          ELSE
             0
       END
          opening_stock,
       NVL (qp.qc_pending_qty, 0) qc_pending_quantity,
       NVL (dp.del_pending_qty, 0) delivery_pending_quantity,
       NVL (txn.receipt_qty, 0) receipt,
       NVL (txn.issue_qty, 0) issues,
       CASE
          WHEN NVL (oh.osp_stock, 0) - NVL (txn.osp_txn_qty, 0) > 0
          THEN
             NVL (oh.osp_stock, 0) - NVL (txn.osp_txn_qty, 0)
          ELSE
             0
       END
          osp_stock,
       CASE
          WHEN NVL (oh.onhand, 0) - NVL (txn.param_dt_qty, 0) > 0
          THEN
             NVL (oh.onhand, 0) - NVL (txn.param_dt_qty, 0)
          ELSE
             0
       END
          closing_stock,
       mtl.safety_stock_quantity safety_stock,
       mtl.category_name,
       ic.total_cost item_cost
  FROM mtl,
       onhand oh,
       txn,
       qc_pending qp,
       del_pending dp,
       item_cst ic
 WHERE     1 = 1
       AND mtl.inventory_item_id = ic.inventory_item_id(+)
       AND mtl.organization_id = ic.organization_id(+)
       AND mtl.inventory_item_id = dp.inventory_item_id(+)
       AND mtl.organization_id = dp.organization_id(+)
       AND mtl.inventory_item_id = qp.inventory_item_id(+)
       AND mtl.organization_id = qp.organization_id(+)
       AND mtl.inventory_item_id = txn.inventory_item_id(+)
       AND mtl.organization_id = txn.organization_id(+)
       AND mtl.inventory_item_id = oh.inventory_item_id(+)
       AND mtl.organization_id = oh.organization_id(+)
--------------------------------------------UCAL COGS DM------------------------------------------------------------
--COGS--
/* Formatted on 18/06/2021 9:39:52 PM (QP5 v5.163.1008.3004) */
  SELECT *
    FROM (  SELECT iop.organization_code,
                   ct.transaction_id,
                   esib.item_number,
                   esit.description,
                   ABS (ct.quantity) transaction_quantity,
                   TO_CHAR (ct.transaction_date,
                            'DD-Mon-YYYY',
                            'NLS_DATE_LANGUAGE = AMERICAN')
                      transaction_date,
                   ct.txn_source_ref_doc_number order_number,
                   SUM (
                      CASE
                         WHEN ccdl.dr_cr_sign = 'DR' AND ct.base_txn_type_id = 15
                         THEN
                            ccdl.ledger_amount * -1
                         WHEN ccdl.dr_cr_sign = 'DR' AND ct.base_txn_type_id = 33
                         THEN
                            ccdl.ledger_amount
                      END)
                      cogs_value,
                   ABS (
                      SUM (
                         CASE
                            WHEN cce.cost_element_desc = 'Material Cost'
                                 AND ccdl.dr_cr_sign = 'CR'
                            THEN
                               ccdl.ledger_amount
                         END))
                      material_value,
                   ABS (
                      SUM (
                         CASE
                            WHEN cce.cost_element_desc = 'Resource Cost'
                                 AND ccdl.dr_cr_sign = 'CR'
                            THEN
                               ccdl.ledger_amount
                         END))
                      resource_value,
                   ABS (
                      SUM (
                         CASE
                            WHEN cce.cost_element_desc IN
                                    ('Material Overhead',
                                     'Outside Processing Cost')
                                 AND ccdl.dr_cr_sign = 'CR'
                            THEN
                               ccdl.ledger_amount
                         END))
                      osp_cost,
                   DECODE (ct.base_txn_type_id,
                           33, 'SALES',
                           15, 'SALES RETURN')
                      TYPE,
                   DECODE (ct.base_txn_type_id,
                           33, inv.trx_number,
                           15, rcpt.receipt_num)
                      inv_rcpt_no
              FROM cst_transactions ct,
                   inv_org_parameters iop,
                   egp_system_items_b esib,
                   egp_system_items_tl esit,
                   cst_cost_distributions ccd,
                   cst_cost_distribution_lines ccdl,
                   cst_cost_elements_tl cce,
                   egp_item_categories eic,
                   egp_categories_b ecb,
                   egp_category_sets_tl ecs,
                   (SELECT DISTINCT
                           rcta.trx_number,
                           rctal.interface_line_attribute5 fulfilment_line
                      FROM ra_customer_trx_all rcta,
                           ra_customer_trx_lines_all rctal
                     WHERE     1 = 1
                           AND rcta.customer_trx_id = rctal.customer_trx_id
                           AND rctal.interface_line_context = 'DOO'
                           AND rctal.line_type = 'LINE') inv,
                   (SELECT rsh.receipt_num, rt.transaction_id
                      FROM rcv_transactions rt, rcv_shipment_headers rsh
                     WHERE 1 = 1
                           AND rt.shipment_header_id = rsh.shipment_header_id) rcpt
             WHERE     1 = 1
                   AND rcpt.transaction_id(+) = TO_CHAR (ct.rcv_transaction_id)
                   AND inv.fulfilment_line(+) = TO_CHAR (ct.doo_fullfill_line_id)
                   AND ecb.category_code NOT LIKE '%INDIRECT%'
                   AND eic.organization_id = iop.master_organization_id
                   AND esib.inventory_item_id = eic.inventory_item_id
                   AND eic.category_id = ecb.category_id
                   AND ecs.category_set_id = eic.category_set_id
                   AND ecs.category_set_name = 'UCAL PO INV FUNCTIONAL'
                   AND (    esib.item_number NOT LIKE '%SCRAP%'
                        AND esib.item_number NOT LIKE '%ZINC%'
                        AND esib.item_number NOT LIKE '%BORING%'
                        AND esib.item_number NOT LIKE '%ADC%')
                   AND ccdl.cost_element_id = cce.cost_element_id
                   AND ccdl.distribution_id = ccd.distribution_id
                   AND ccd.transaction_id = ct.transaction_id
                   AND esit.inventory_item_id = ct.inventory_item_id
                   AND esit.organization_id = iop.organization_id
                   AND esib.inventory_item_id = ct.inventory_item_id
                   AND esib.organization_id = iop.organization_id
                   AND ct.inventory_org_id = iop.organization_id
                   AND ct.base_txn_type_id IN (33, 15) -- Sales Order Issue, RMA Receipt
                   AND ct.inv_txn_source_type_id IN (12, 2)
                   --         AND ct.transaction_id = 58836
                   AND iop.organization_id =
                          NVL (:p_organization_id, iop.organization_id)
                   AND TRUNC (ct.transaction_date) BETWEEN :p_from_date
                                                       AND :p_to_date
          GROUP BY iop.organization_code,
                   ct.transaction_id,
                   esib.item_number,
                   esit.description,
                   ABS (ct.quantity),
                   ct.transaction_date,
                   ct.txn_source_ref_doc_number,
                   ct.base_txn_type_id,
                   DECODE (ct.base_txn_type_id,
                           33, inv.trx_number,
                           15, rcpt.receipt_num)
          UNION
            SELECT iop.organization_code,
                   ct.transaction_id,
                   esib.item_number,
                   esit.description,
                   ABS (ct.quantity) quantity,
                   TO_CHAR (ct.transaction_date,
                            'DD-Mon-YYYY',
                            'NLS_DATE_LANGUAGE = AMERICAN')
                      transaction_date,
                   '0' order_number,
                   ABS (SUM (ccdl.ledger_amount)) cogs_value,
                   0 material_value,
                   0 resource_value,
                   0 osp_cost,
                   ittt.transaction_type_name TYPE,
                   NULL inv_rcpt_no
              FROM cst_transactions ct,
                   inv_org_parameters iop,
                   egp_system_items_b esib,
                   egp_system_items_tl esit,
                   cst_cost_distributions ccd,
                   cst_cost_distribution_lines ccdl,
                   egp_item_categories eic,
                   egp_categories_b ecb,
                   egp_category_sets_tl ecs,
                   gl_code_combinations gcc,
                   inv_transaction_types_tl ittt
             WHERE     1 = 1
                   AND ittt.transaction_type_id = ct.base_txn_type_id
                   AND gcc.segment4 IN (411400)
                   AND gcc.code_combination_id = ccdl.sla_code_combination_id
                   AND ecb.category_code NOT LIKE '%INDIRECT%'
                   AND eic.organization_id = iop.master_organization_id
                   AND esib.inventory_item_id = eic.inventory_item_id
                   AND eic.category_id = ecb.category_id
                   AND ecs.category_set_id = eic.category_set_id
                   AND ecs.category_set_name = 'UCAL PO INV FUNCTIONAL'
                   AND (    esib.item_number NOT LIKE '%SCRAP%'
                        AND esib.item_number NOT LIKE '%ZINC%'
                        AND esib.item_number NOT LIKE '%BORING%'
                        AND esib.item_number NOT LIKE '%ADC%')
                   AND ccdl.distribution_id = ccd.distribution_id
                   AND ccd.transaction_id = ct.transaction_id
                   AND esit.inventory_item_id = ct.inventory_item_id
                   AND esit.organization_id = iop.organization_id
                   AND esib.inventory_item_id = ct.inventory_item_id
                   AND esib.organization_id = iop.organization_id
                   AND ct.inventory_org_id = iop.organization_id
                   AND ct.base_txn_type_id NOT IN (33, 15) -- Sales Order Issue, RMA Receipt
                   AND ct.inv_txn_source_type_id NOT IN (12, 2)
                   --         AND ct.transaction_id = 58836
                   AND iop.organization_id =
                          NVL (:p_organization_id, iop.organization_id)
                   AND TRUNC (ct.transaction_date) BETWEEN :p_from_date
                                                       AND :p_to_date
          GROUP BY iop.organization_code,
                   ct.transaction_id,
                   esib.item_number,
                   esit.description,
                   ABS (ct.quantity),
                   ct.transaction_date,
                   ct.txn_source_ref_doc_number,
                   ittt.transaction_type_name)
ORDER BY organization_code, TYPE, inv_rcpt_no
---------------------------------------------UCAL GST Inward DM------------------------------------------------
--PARAM--
SELECT 
NVL(:p_le_code , 'All') Legal_Entity, 
NVL(:P_Org_Name , 'All') Organization_Name,   
NVL(:p_vendor_site_name , 'All') Vendor_Site_Name,
TO_CHAR(:p_from_date,'DD-MON-YYYY') From_date,  
TO_CHAR (:p_to_date, 'DD-MON-YYYY') To_date
--NVL(:p_vendor_id,'All')  P_Supplier_Name

FROM DUAL
--GSTR2--
/* Formatted on 19/08/2021 9:36:51 PM (QP5 v5.163.1008.3004) */
WITH payments
     AS (  SELECT aia.invoice_id,
                  listagg (aca.check_number, ',')
                     WITHIN GROUP (ORDER BY aca.check_number)
                     check_number,
                  listagg (aca.check_date, ',')
                     WITHIN GROUP (ORDER BY aca.check_number)
                     payment_date
             FROM ap_checks_all aca,
                  ap_invoice_payments_all aipa,
                  ap_invoices_all aia
            WHERE     1 = 1
                  AND aipa.invoice_id = aia.invoice_id
                  AND aca.check_id = aipa.check_id
                  AND aca.status_lookup_code != 'VOIDED'
                  AND TRUNC (aia.gl_date) BETWEEN TRUNC (:p_from_date)
                                              AND TRUNC (:p_to_date)
                  AND aia.vendor_id = NVL (:p_vendor_id, aia.vendor_id)
         GROUP BY aia.invoice_id)
SELECT CONCAT (CONCAT (st_co.state_code, '-'), hl.region_2) "STATE",
       iop.attribute1 "GSTIN",
       TO_CHAR (aida.accounting_date, 'RRRR') "YEAR",
       TO_CHAR (aida.accounting_date, 'MM') "MONTH",
       aia.invoice_currency_code "Currency",
       gcc.segment4 "GL_account",
       (CASE
           WHEN aila.rcv_transaction_id IS NOT NULL
                AND flv.meaning = 'Standard'
           THEN
              'RECEIPT'
           WHEN aila.rcv_transaction_id IS NOT NULL
                AND flv.meaning = 'Debit memo'
           THEN
              'RTV-DEBIT'
           ELSE
              aia.invoice_type_lookup_code || '-MANUAL'
        END)
          "Document_type",
       aia.description "Description",
       CASE WHEN tax_rate.tax_rate > 0 THEN 'Taxable' ELSE 'Non Taxable' END
          taxability,
       CASE
          WHEN igst.tax_amount <> 0 THEN 'Inter-State'
          WHEN cgst.tax_amount <> 0 THEN 'Intra-State'
       END
          supply_type,
       psv.segment1 "Supplier_Code",
       psv.vendor_type_lookup_code "Supplier_nature",
       zr.registration_number supplier_gstin,
       CONCAT (CONCAT (st_co2.state_code, '-'), hzl.state) "Supplier_State",
       psv.vendor_name "Name_of_supplier",
       NULL "Invoice_Reference_Number",
       aia.invoice_num "Invoice_Number",
       TO_CHAR (aia.invoice_date, 'DD/MM/YYYY') "Invoice_date",
       aia.invoice_amount "Invoice_entered_currency",
       aia.invoice_amount * NVL (aia.exchange_rate, 1) "invoice_amount",
       orig_inv.invoice_num original_invoice_no,
       TO_CHAR (orig_inv.invoice_date, 'dd/mon/yyyy') original_invoice_date,
       aila.line_number "Line_Number",
       esib.item_number item_code,
       ecv.category_code,
       eieb.attribute_char1 hsn,
       aila.item_description "product_description",
       aila.tax_classification_code tax_code,
       aida.quantity_invoiced "Quantity",
       aila.amount * NVL (aia.exchange_rate, 1) "Taxable_Value",
       tax_rate.tax_rate total_gst_rate,
         NVL (igst.tax_amount, 0)
       + NVL (cgst.tax_amount, 0)
       + NVL (sgst.tax_amount, 0)
       + NVL (tcs.tax_amount, 0)
          total_gst_amt,
       NVL (igst.tax_rate, 0) igst_rate,
       NVL (igst.tax_amount, 0) igst_amt,
       NVL (cgst.tax_rate, 0) cgst_rate,
       NVL (cgst.tax_amount, 0) cgst_amt,
       NVL (sgst.tax_rate, 0) sgst_rate,
       NVL (sgst.tax_amount, 0) sgst_amt,
       NVL (pack.tax_amount, 0) pack_amt,
       NVL (frt.tax_amount, 0) frt_amt,
       0 cess_rate,
       0 cess_amount,
       NVL (tcs.tax_rate, 0) tcs_rate,
       NVL (tcs.tax_amount, 0) tcs_amount,
       CASE WHEN tax_rate.rec_amt > 0 THEN 'Y' ELSE 'N' END
          eligibility_of_itc,
       CASE WHEN tax_rate.self_assessed_flag = 'Y' THEN 'Yes' ELSE 'No' END
          supply_attract_reverse_charge,
       hl.location_name "POS",
       'NO' is_isd,
       NULL isd_location_details,
       NULL "Payables_Comments",
       rt.comments "Issue_reason",
       NULL "Way_Bill_No",
       pha.type_lookup_code "Services",
       pha.segment1 po_reference_num,
       pay.check_number payment_reference_number,
       pay.payment_date payment_date,
       DECODE (aia.payment_status_flag,
               'Y', 'FULLY PAID',
               'P', 'PARTIALLY PAID',
               'N', 'NOT PAID')
          payment_status,
       rsh.receipt_num,
       rt.transaction_date receipt_date,
       rt.po_unit_price purchase_price,
       (rt.po_unit_price * rt.quantity * NVL (rt.currency_conversion_rate, 1))
          material_value,
       aia.exchange_rate,
       fc.fc_vendor_name fc_vendor_name,
       fc.fc_gst_number fc_gst_number,
       fc_invoice_num fc_invoice_number,
       fc.fc_date fc_invoice_date,
       AIA.INVOICE_ID
  FROM ap_invoices_all aia,
       poz_suppliers_v psv,
       ap_invoice_lines_all aila,
       xle_entity_profiles xep,
       ap_invoice_distributions_all aida,
       gl_code_combinations gcc,
       fnd_lookup_values_vl flv,
       poz_supplier_sites_v pssv,
       hz_locations hzl,
       hr_organization_units hou,
       inv_org_parameters iop,
       xla_mapping_set_values xmsv,
       hr_locations hl,
       fnd_vs_values_vl segvals,
       fnd_vs_value_sets segvalsets,
       hr_operating_units horu,
       (  SELECT SUM (CASE WHEN tax LIKE '%GST%' THEN tax_rate END) tax_rate,
                 trx_id,
                 trx_line_number,
                 SUM (unrounded_tax_amt) tax_amount,
                 SUM (rec_tax_amt) rec_amt,
                 SUM (nrec_tax_amt) non_rec_amt,
                 self_assessed_flag
            FROM zx_lines zl
           WHERE     1 = 1
                 AND zl.entity_code = 'AP_INVOICES'
                 AND zl.application_id = 200                       -- Payables
                 AND NVL (zl.cancel_flag, 'N') = 'N'
                 AND NVL (zl.delete_flag, 'N') = 'N'
                 AND NVL (zl.purge_flag, 'N') = 'N'
        GROUP BY trx_id, trx_line_number, self_assessed_flag) tax_rate,
       (SELECT trx_id,
               trx_line_number,
               unrounded_tax_amt tax_amount,
               tax_rate
          FROM zx_lines zl
         WHERE     1 = 1
               AND zl.entity_code = 'AP_INVOICES'
               AND zl.tax LIKE '%SGST%'
               AND zl.application_id = 200                         -- Payables
               AND NVL (zl.cancel_flag, 'N') = 'N'
               AND NVL (zl.delete_flag, 'N') = 'N'
               AND NVL (zl.purge_flag, 'N') = 'N') sgst,
       (SELECT trx_id,
               trx_line_number,
               unrounded_tax_amt tax_amount,
               tax_rate
          FROM zx_lines zl
         WHERE     1 = 1
               AND zl.entity_code = 'AP_INVOICES'
               AND zl.tax LIKE '%CGST%'
               AND zl.application_id = 200                         -- Payables
               AND NVL (zl.cancel_flag, 'N') = 'N'
               AND NVL (zl.delete_flag, 'N') = 'N'
               AND NVL (zl.purge_flag, 'N') = 'N') cgst,
       (SELECT trx_id,
               trx_line_number,
               unrounded_tax_amt tax_amount,
               tax_rate
          FROM zx_lines zl
         WHERE     1 = 1
               AND zl.entity_code = 'AP_INVOICES'
               AND zl.tax LIKE '%IGST%'
               AND zl.application_id = 200                         -- Payables
               AND NVL (zl.cancel_flag, 'N') = 'N'
               AND NVL (zl.delete_flag, 'N') = 'N'
               AND NVL (zl.purge_flag, 'N') = 'N') igst,
       (SELECT trx_id,
               trx_line_number,
               unrounded_tax_amt tax_amount,
               tax_rate
          FROM zx_lines zl
         WHERE     1 = 1
               AND zl.entity_code = 'AP_INVOICES'
               AND zl.tax LIKE '%TCS%'
               AND zl.application_id = 200                         -- Payables
               AND NVL (zl.cancel_flag, 'N') = 'N'
               AND NVL (zl.delete_flag, 'N') = 'N'
               AND NVL (zl.purge_flag, 'N') = 'N') tcs,
       (SELECT trx_id,
               trx_line_number,
               unrounded_tax_amt tax_amount,
               tax_rate
          FROM zx_lines zl
         WHERE     1 = 1
               AND zl.entity_code = 'AP_INVOICES'
               AND zl.tax LIKE '%PACK%'
               AND zl.application_id = 200                         -- Payables
               AND NVL (zl.cancel_flag, 'N') = 'N'
               AND NVL (zl.delete_flag, 'N') = 'N'
               AND NVL (zl.purge_flag, 'N') = 'N') pack,
       (SELECT trx_id,
               trx_line_number,
               unrounded_tax_amt tax_amount,
               tax_rate
          FROM zx_lines zl
         WHERE     1 = 1
               AND zl.entity_code = 'AP_INVOICES'
               AND zl.tax LIKE '%FREIGHT%'
               AND zl.application_id = 200                         -- Payables
               AND NVL (zl.cancel_flag, 'N') = 'N'
               AND NVL (zl.delete_flag, 'N') = 'N'
               AND NVL (zl.purge_flag, 'N') = 'N') frt,
       zx_party_tax_profile zptp,
       zx_registrations zr,
       ap_invoices_all orig_inv,
       (SELECT esib.*
          FROM egp_system_items_vl esib, inv_org_parameters iop
         WHERE     1 = 1
               AND esib.organization_id = iop.organization_id
               AND iop.organization_code = 'IMO') esib,
       egp_item_cat_assignments eic,
       egp_categories_vl ecv,
       egp_category_sets_tl ecs,
       ego_item_eff_b eieb,
       po_headers_all pha,
       payments pay,
       /*  (SELECT DISTINCT rsh.receipt_num,
                          rsh.expected_receipt_date,
                          rcv.po_unit_price,
                          aia.invoice_id,
                          (rcv.po_unit_price * rcv.quantity) mat_val,
                          rcv.comments,
                          aila.line_number
            FROM rcv_transactions rcv,
                 rcv_shipment_headers rsh,
                 ap_invoice_lines_all aila,
                 ap_invoices_all aia
           WHERE     aila.rcv_transaction_id = rcv.transaction_id
                 AND aia.invoice_id = aila.invoice_id
                 AND rcv.shipment_header_id = rsh.shipment_header_id
                 ) rsh,*/
       -- commented by kumar on 07Aug21 duplicate issue fix
       rcv_transactions rt,   -- Added by kumar on 07Aug21 duplicate issue fix
       rcv_shipment_headers rsh, -- Added by kumar on 07Aug21 duplicate issue fix
       (SELECT fnd.description state_code, fnd.meaning
          FROM fnd_lookup_values fnd
         WHERE lookup_type = 'UCAL_IN_STATE_CODES') st_co,
       (SELECT fnd.description state_code, fnd.meaning
          FROM fnd_lookup_values fnd
         WHERE lookup_type = 'UCAL_IN_STATE_CODES') st_co2,
       (SELECT invoice_id,
               line_number,
               TO_CHAR (attribute_date1,
                        'DD-MON-YYYY',
                        'NLS_DATE_LANGUAGE = AMERICAN')
                  fc_date,
               attribute1 fc_vendor_name,
               attribute2 fc_gst_number,
               attribute3 fc_invoice_num
          FROM ap_invoice_lines_all
         WHERE attribute_category = 'Forward Charges') fc
 WHERE     1 = 1
       AND rt.shipment_header_id = rsh.shipment_header_id(+)
       AND aila.rcv_transaction_id = rt.transaction_id(+)
       AND aia.invoice_id = pay.invoice_id(+)
       AND aila.po_header_id = pha.po_header_id(+)
       AND eieb.context_code(+) = 'UCAL Attributes'
       AND eieb.inventory_item_id(+) = aila.inventory_item_id
       AND eieb.organization_id(+) = iop.organization_id
       AND ecs.category_set_id(+) = eic.category_set_id
       AND ecs.language(+) = 'US'
       AND ecs.category_set_name(+) = 'UCAL PO INV FUNCTIONAL'
       AND ecv.category_id(+) = eic.category_id
       AND esib.inventory_item_id = eic.inventory_item_id(+)
       AND iop.organization_id = eic.organization_id(+)
       AND esib.inventory_item_id(+) = aila.inventory_item_id
       AND aida.parent_invoice_id = orig_inv.invoice_id(+)
       AND zr.registration_type_code(+) LIKE '%GST%'
       AND (zr.effective_to IS NULL OR zr.effective_to > TRUNC (SYSDATE))
       AND zptp.party_tax_profile_id = zr.party_tax_profile_id(+)
       AND zptp.supplier_flag(+) = 'Y'
       AND zptp.site_flag(+) = 'Y'
       AND zptp.party_id(+) = pssv.party_site_id
       AND frt.trx_line_number(+) = aila.line_number
       AND frt.trx_id(+) = aila.invoice_id
       AND pack.trx_line_number(+) = aila.line_number
       AND pack.trx_id(+) = aila.invoice_id
       AND tcs.trx_line_number(+) = aila.line_number
       AND tcs.trx_id(+) = aila.invoice_id
       AND igst.trx_line_number(+) = aila.line_number
       AND igst.trx_id(+) = aila.invoice_id
       AND cgst.trx_line_number(+) = aila.line_number
       AND cgst.trx_id(+) = aila.invoice_id
       AND sgst.trx_line_number(+) = aila.line_number
       AND sgst.trx_id(+) = aila.invoice_id
       AND tax_rate.trx_id(+) = aila.invoice_id
       AND tax_rate.trx_line_number(+) = aila.line_number
       AND horu.organization_id = aia.org_id
       AND segvals.value_set_id = segvalsets.value_set_id
       AND segvals.VALUE = gcc.segment1
       AND segvalsets.value_set_code = 'UCAL_COMPANY'
       AND hl.location_id = hou.location_id
       AND xmsv.input_value_constant1 = TO_CHAR (hou.organization_id)
       AND xmsv.enabled_flag = 'Y'
       AND xmsv.mapping_set_code = 'UFSL_INV_LOC_CST'
       AND hou.organization_id = iop.organization_id
       AND xmsv.value_constant = gcc.segment2
       AND pssv.location_id = hzl.location_id
       AND aia.vendor_site_id = pssv.vendor_site_id
       AND flv.lookup_type = 'INVOICE TYPE'
       AND flv.lookup_code = aia.invoice_type_lookup_code
       AND aida.dist_code_combination_id = gcc.code_combination_id
       AND aida.reversal_flag = 'N'
       --       AND aida.posted_flag = 'Y'
       AND aida.invoice_id = aila.invoice_id
       AND aida.invoice_line_number = aila.line_number
       AND aia.legal_entity_id = xep.legal_entity_id
       AND aila.line_type_lookup_code = 'ITEM'
       AND aia.invoice_id = aila.invoice_id
       AND aia.vendor_id = psv.vendor_id
       --       AND rsh.invoice_id(+) = aia.invoice_id        -- commented by kumar on 07Aug21 duplicate issue fix
       AND st_co.meaning(+) = hl.region_2
       AND st_co2.meaning(+) = hzl.state
       AND fc.invoice_id(+) = aila.invoice_id
       AND fc.line_number(+) = aila.line_number
       --       AND aia.source='RTS'
       AND TRUNC (aila.accounting_date) BETWEEN TRUNC (:p_from_date)
                                            AND TRUNC (:p_to_date)
       AND psv.vendor_id = NVL (:p_vendor_id, psv.vendor_id)
---------------------------------------UCAL GST Outward DM---------------------------------------------------------------
/* Formatted on 30/04/2021 11:16:38 AM (QP5 v5.163.1008.3004) */
SELECT xep.name legal_entity_name,
       rctd.attribute1 gstn,
       TO_CHAR (rcta.trx_date, 'RRRR') year,
       TO_CHAR (rcta.trx_date, 'MM') month,
       COUNT (rctla.line_number)
          OVER (PARTITION BY TO_CHAR (rcta.customer_trx_id))
          transaction_count,
       rcta.invoice_currency_code transaction_currency,
       DECODE (rctt.TYPE,
               'INV', 'Invoice',
               'CM', 'Credit Memo',
               'DM', 'Debit Memo')
          document_type,
       rctla.description description,
       CASE WHEN tax_rate.tax_rate > 0 THEN 'Taxable' ELSE 'Non Taxable' END
          taxability,
       NULL nature_of_exemption,
       CASE
          WHEN igst.tax_amount > 0 THEN 'Inter-State'
          WHEN cgst.tax_amount > 0 THEN 'Intra-State'
       END
          supply_type,
       hca_b.account_number customer_code,
       CONCAT(CONCAT(st_co.state_code,'-'),hrl.region_2) "STATE", 
       zr_b.registration_number recipient_gstn,
       CONCAT(CONCAT(st_co1.state_code,'-'),hl_b.state) recipient_state,
       hp_b.party_name name_of_recipient,
       rcta.trx_number invoice_number,
       TO_CHAR (rcta.trx_date, 'DD-MON-YYYY', 'NLS_DATE_LANGUAGE=AMERICAN')
          invoice_date,
       CASE WHEN rctt.TYPE IN ('DM', 'CM') THEN rcta_orig.trx_number END
          original_invoice_num,
       CASE
          WHEN rctt.TYPE IN ('DM', 'CM')
          THEN
             TO_CHAR (rcta_orig.trx_date,
                      'DD-MON-YYYY',
                      'NLS_DATE_LANGUAGE=AMERICAN')
       END
          original_invoice_date,
       NVL (flv_bst.description, '96') pos,
       rctla.line_number line_item,
       esi.item_number item_code,
       esi.hsn_or_sac hsn,
       NVL (esi.description, rctla.description) product_description,
       ROUND (
          (DECODE (rctt.TYPE,
                   'CM', rctla.quantity_credited,
                   rctla.quantity_invoiced)),
          3)
          quantity,
       rctla.uom_code uom,
       rctla.unit_selling_price unit_price,
       rctla.extended_amount taxable_value,
       tax_rate.tax_rate Total_gst_rate,
         NVL (igst.tax_amount, 0)
       + NVL (cgst.tax_amount, 0)
       + NVL (sgst.tax_amount, 0)
       + NVL (tcs.tax_amount, 0)
          total_gst_amt,
       NVL (igst.tax_rate, 0) igst_rate,
       NVL (igst.tax_amount, 0) igst_amt,
       NVL (cgst.tax_rate, 0) cgst_rate,
       NVL (cgst.tax_amount, 0) cgst_amt,
       NVL (sgst.tax_rate, 0) sgst_rate,
       NVL (sgst.tax_amount, 0) sgst_amt,
       0 cess_rate,
       0 cess_amount,
       NVL (tcs.tax_rate, 0) TCS_rate,
       NVL (tcs.tax_amount, 0) TCS_amount,
       NULL way_bill_no,
       CASE
          WHEN rctt.TYPE = 'CM'
          THEN
             doo_cross_reference.getfulfillmentvalue (
                'LOOKUP_CODE',
                'RETURN_REASON',
                dfla.return_reason_code)
       END
          reissue_reason,
       mre.extn_attribute_char012 invoice_reference_number,
       ROUND (
          SUM (
               tax_rate.unrounded_taxable_amt
             + NVL (igst.tax_amount, 0)
             + NVL (cgst.tax_amount, 0)
             + NVL (sgst.tax_amount, 0)
             + NVL (tcs.tax_amount, 0))
          OVER (PARTITION BY TO_CHAR (rcta.customer_trx_id)),
          3)
          gross_amount,
       hrl.address_line_2 seller_building_no,
       SUBSTR (rctd.attribute1, 1, 2) seller_state_code,
       REGEXP_REPLACE (hrl.postal_code, '[^[:alnum:]'' '']', '')
          seller_pincode,
       CASE
          WHEN hca.class_code = 'Y' AND tax_rate.tax_rate > 0
          THEN
             'SEZWP'
          WHEN hca.class_code = 'Y' AND NVL (tax_rate.tax_rate, 0) = 0
          THEN
             'SEZWOP'
          WHEN hl_b.country <> 'IN' AND tax_rate.tax_rate > 0
          THEN
             'EXPWP'
          WHEN hl_b.country <> 'IN' AND NVL (tax_rate.tax_rate, 0) = 0
          THEN
             'EXPWOP'
          ELSE
             'B2B'
       END
          type_of_supply,
       hl_b.address1 address1_of_buyer,
       NVL (flv_bst.description, '96') buyer_state_code,
       rctt.name transaction_type,
       rctd.organization_code plant,
       rcta.attribute9 type_of_export,
       rcta.attribute10 port_code,
       rcta.attribute11 shipping_bill_date,
       rcta.attribute12 shipping_bill_no
  FROM ra_customer_trx_all rcta,
       ra_cust_trx_types_all rctt,
       (SELECT DISTINCT rctd.customer_trx_id,
                        iop.organization_id,
                        iop.organization_code,
                        iop.legal_entity_id,
                        iop.attribute1
          FROM ra_cust_trx_line_gl_dist_all rctd,
               gl_code_combinations gcc,
               inv_org_parameters iop,
               xla_mapping_set_values xmsv
         WHERE     1 = 1
               AND gcc.segment2 = xmsv.value_constant
               AND xmsv.input_value_constant1 = TO_CHAR (iop.organization_id)
               AND xmsv.enabled_flag = 'Y'
               AND xmsv.mapping_set_code = 'UFSL_INV_LOC_CST'
               AND gcc.code_combination_id = rctd.code_combination_id
               AND rctd.account_class = 'REC') rctd,
       hz_cust_accounts hca_b,
       hz_parties hp_b,
       hz_cust_site_uses_all hcsu_b,
       hz_cust_acct_sites_all hcas_b,
       hz_party_sites hps_b,
       hz_locations hl_b,
       zx_party_tax_profile zptp_b,
       zx_registrations zr_b,
       ra_customer_trx_lines_all rctla,
       (SELECT esib.organization_id,
               esib.inventory_item_id,
               esib.item_number,
               REGEXP_REPLACE (esit.description, '[^[:alnum:]'' '']', '')
                  description,
               eieb.attribute_char1 hsn_or_sac
          FROM egp_system_items_tl esit,
               egp_system_items_b esib,
               ego_item_eff_b eieb,
               inv_org_parameters iop
         WHERE     1 = 1
               AND iop.organization_id=esit.organization_id
               AND eieb.context_code(+) = 'UCAL Attributes'
               AND iop.master_organization_id = eieb.organization_id(+)
               AND esib.inventory_item_id = eieb.inventory_item_id(+)
               AND esit.organization_id = esib.organization_id
               AND esib.inventory_item_id = esit.inventory_item_id) esi,
       (  SELECT SUM (tax_rate) tax_rate,
                 trx_id,
                 trx_line_id,
                 unrounded_taxable_amt,
                 SUM (unrounded_tax_amt) tax_amount
            FROM zx_lines zl
           WHERE     1 = 1
                 AND zl.entity_code = 'TRANSACTIONS'
                 and zl.tax like '%GST%'
                 AND zl.application_id = 222                 -- AR Application
        GROUP BY trx_id, trx_line_id, unrounded_taxable_amt) tax_rate,
       (SELECT trx_id,
               trx_line_id,
               unrounded_tax_amt tax_amount,
               tax_rate
          FROM zx_lines zl
         WHERE     1 = 1
               AND zl.entity_code = 'TRANSACTIONS'
               AND zl.tax LIKE '%SGST%'
               AND zl.application_id = 222                   -- AR Application
                                          ) sgst,
       (SELECT trx_id,
               trx_line_id,
               unrounded_tax_amt tax_amount,
               tax_rate
          FROM zx_lines zl
         WHERE     1 = 1
               AND zl.entity_code = 'TRANSACTIONS'
               AND zl.tax LIKE '%CGST%'
               AND zl.application_id = 222                   -- AR Application
                                          ) cgst,
       (SELECT trx_id,
               trx_line_id,
               unrounded_tax_amt tax_amount,
               tax_rate
          FROM zx_lines zl
         WHERE     1 = 1
               AND zl.entity_code = 'TRANSACTIONS'
               AND zl.tax LIKE '%IGST%'
               AND zl.application_id = 222                   -- AR Application
                                          ) igst,
       (SELECT trx_id,
               trx_line_id,
               unrounded_tax_amt tax_amount,
               tax_rate
          FROM zx_lines zl
         WHERE     1 = 1
               AND zl.entity_code = 'TRANSACTIONS'
               AND zl.tax LIKE '%TCS%'
               AND zl.application_id = 222                   -- AR Application
                                          ) tcs,
        (select fnd.description state_code,
                fnd.meaning
            from FND_LOOKUP_VALUES fnd
            where LOOKUP_TYPE = 'HRX_IN_STATES') st_co,            --state code
        (select fnd.description state_code,
                fnd.meaning
            from FND_LOOKUP_VALUES fnd
            where LOOKUP_TYPE = 'HRX_IN_STATES') st_co1,    
       xle_entity_profiles xep,
       hr_locations hrl,
       zx_party_tax_profile zptp_sez,
       hz_code_assignments hca,
       fnd_lookup_values flv_bst,
       hr_organization_units hou,
       ra_customer_trx_all rcta_orig,
       moo_ref_entities mre,
       doo_fulfill_lines_all dfla
 WHERE     1 = 1
       AND dfla.fulfill_line_id(+) = rctla.interface_line_attribute6
       AND mre.attribute_category(+) = 'UCALEInvoicing_c'
       AND rcta.trx_number = mre.extn_attribute_char008(+)
       AND TRUNC (rcta.trx_date) = TRUNC (mre.extn_attribute_timestamp002(+))
       AND rcta.previous_customer_trx_id = rcta_orig.customer_trx_id(+)
       AND hou.organization_id = rctd.organization_id
       AND hou.location_id = hrl.location_id
       AND UPPER (hl_b.state) = UPPER (flv_bst.meaning(+))
       AND flv_bst.lookup_type(+) = 'HRX_IN_STATES'
       AND flv_bst.enabled_flag(+) = 'Y'
       AND zptp_sez.party_tax_profile_id = hca.owner_table_id(+)
       AND (hca.end_date_active IS NULL
            OR TRUNC (hca.end_date_active) > TRUNC (SYSDATE))
       AND hca.class_category(+) = 'UFSL_SEZ_APPLICABLE'
       AND hca.owner_table_name(+) = 'ZX_PARTY_TAX_PROFILE'
       AND hps_b.party_site_id = zptp_sez.party_id(+)
       AND zptp_sez.customer_flag(+) = 'Y'
       AND zptp_sez.site_flag(+) = 'Y'
       AND rcta.legal_entity_id = xep.legal_entity_id
       AND rctla.customer_trx_line_id = tcs.trx_line_id(+)
       AND rctla.customer_trx_line_id = igst.trx_line_id(+)
       AND rctla.customer_trx_line_id = cgst.trx_line_id(+)
       AND rctla.customer_trx_line_id = sgst.trx_line_id(+)
       AND rctla.customer_trx_line_id = tax_rate.trx_line_id
       AND rctla.customer_trx_id = tax_rate.trx_id
       AND esi.inventory_item_id(+) = rctla.inventory_item_id
       AND esi.organization_id(+) = rctd.organization_id
       AND rcta.customer_trx_id = rctla.customer_trx_id
       AND rctla.line_type = 'LINE'
       AND zr_b.registration_type_code(+) LIKE '%GST%'
       AND (zr_b.effective_to IS NULL OR zr_b.effective_to > TRUNC (SYSDATE))
       AND zptp_b.party_tax_profile_id = zr_b.party_tax_profile_id(+)
       AND zptp_b.customer_flag(+) = 'Y'
       AND zptp_b.site_flag(+) = 'Y'
       AND hps_b.party_site_id = zptp_b.party_id(+)
       AND hl_b.location_id = hps_b.location_id
       AND hps_b.party_site_id = hcas_b.party_site_id
       AND hcas_b.cust_acct_site_id = hcsu_b.cust_acct_site_id
       AND hcsu_b.site_use_id = rcta.bill_to_site_use_id
       AND hp_b.party_id = hca_b.party_id
       AND hca_b.cust_account_id = rcta.bill_to_customer_id
       AND rcta.customer_trx_id = rctd.customer_trx_id
       AND rcta.cust_trx_type_seq_id = rctt.cust_trx_type_seq_id
       and hrl.region_2 =  st_co.meaning (+)
       and hl_b.state =  st_co1.meaning (+)
       AND rctt.TYPE IN ('INV', 'CM', 'DM')
       AND rcta.trx_date BETWEEN :p_from_date AND :p_to_date
       AND rctd.organization_Id =
              NVL (:p_organization_id, rctd.organization_Id)
-----------------------------------------UCAL IOT DM-----------------------------------------------------
--IOT Transactions--
WITH txn
     AS (SELECT imt.shipment_number,
                TO_CHAR (imt.transaction_date,
                         'DD-MON-YYYY',
                         'NLS_DATE_LANGUAGE = AMERICAN')
                   transaction_date,
                'IOT' doc_type,
                xep.name legal_entity,
                hl.address_line_1,
                hl.address_line_2,
                hl.postal_code,
                hl.region_2 state,
                hl.town_or_city city,
                hl.telephone_number_1,
                xe.registration_number pan_number,
                iop.attribute1 gstin,
                SUBSTR (iop.attribute1, 1, 2) state_code,
                xep_to.name to_legal_entity,
                hl_to.address_line_1 to_address_line1,
                hl_to.address_line_2 to_address_line2,
                hl_to.postal_code to_postal_code,
                hl_to.region_2 to_state,
                hl_to.town_or_city to_city,
                xe_to.registration_number to_pan_number,
                iop_to.attribute1 to_gstin,
                SUBSTR (iop_to.attribute1, 1, 2) to_state_code,
                esib.item_number,
                esit.description,
                eieb.attribute_char1 hsn,
                imt.transaction_uom uom,
                ABS (imt.transaction_quantity) transaction_quantity,
                imt.inventory_item_id,
                imt.organization_id,
                iop.organization_code,
                ROUND (esib.list_price_per_unit, 2) list_price_per_unit
           FROM inv_material_txns imt,
                inv_org_parameters iop,
                xle_entity_profiles xep,
                hr_organization_units hou,
                hr_locations hl,
                xle_registrations xe,
                xle_jurisdictions_b xjb,
                inv_org_parameters iop_to,
                xle_entity_profiles xep_to,
                hr_organization_units hou_to,
                hr_locations hl_to,
                xle_registrations xe_to,
                xle_jurisdictions_b xjb_to,
                egp_system_items_b esib,
                egp_system_items_tl esit,
                ego_item_eff_b eieb
          WHERE     1 = 1
                AND eieb.context_code(+) = 'UCAL Attributes'
                AND eieb.inventory_item_id(+) = esib.inventory_item_id
                AND eieb.organization_id(+) = iop.master_organization_id
                AND esit.inventory_item_id = imt.inventory_item_id
                AND esit.organization_id = imt.organization_id
                AND esib.inventory_item_id = imt.inventory_item_id
                AND esib.organization_id = imt.organization_id
                AND xjb_to.jurisdiction_id(+) = xe_to.jurisdiction_id
                AND xjb_to.registration_code_le(+) = 'PAN'
                AND xe_to.source_id(+) = xep_to.legal_entity_id
                AND xe_to.source_table(+) = 'XLE_ENTITY_PROFILES'
                AND hl_to.location_id = hou_to.location_id
                AND hou_to.organization_id = iop_to.organization_id
                AND xep_to.legal_entity_id = iop_to.legal_entity_id
                AND iop_to.organization_id = imt.transfer_organization_id
                AND xjb.jurisdiction_id(+) = xe.jurisdiction_id
                AND xjb.registration_code_le(+) = 'PAN'
                AND xe.source_id(+) = xep.legal_entity_id
                AND xe.source_table(+) = 'XLE_ENTITY_PROFILES'
                AND hl.location_id = hou.location_id
                AND hou.organization_id = iop.organization_id
                AND xep.legal_entity_id = iop.legal_entity_id
                AND iop.organization_id = imt.organization_id
                AND imt.transaction_type_id = 21         -- Intransit Shipment
                AND iop.organization_code = :p_organization_code
                AND imt.shipment_number BETWEEN :p_from_shipment_num
                                            AND :p_to_shipment_num),
     ------------------------
     item_cst
     /* Oracle Query for taking cost */
     AS (  SELECT ccvcv.inventory_item_id,
                  iop.organization_id,
                  ROUND (SUM (ccvcv.unit_cost), 2) unit_cost
             FROM cst_costed_vu_costs_v ccvcv,
                  cst_val_unit_details cvud,
                  cst_val_unit_combinations cvuc,
                  cst_val_structures_b cvsb,
                  inv_org_parameters iop,
                  cst_cost_inv_orgs ccio,
                  (  SELECT cost_org_id,
                            cost_book_id,
                            inventory_item_id,
                            val_unit_id,
                            MAX (snapshot_date) snapshot_date
                       FROM cst_costed_vu_costs_v
                   GROUP BY cost_org_id,
                            cost_book_id,
                            inventory_item_id,
                            val_unit_id) mv,
                  txn
            WHERE     1 = 1
                  AND ccvcv.inventory_item_id = txn.inventory_item_id
                  AND iop.organization_id = txn.organization_id
                  AND mv.cost_org_id = ccvcv.cost_org_id
                  AND mv.cost_book_id = ccvcv.cost_book_id
                  AND mv.inventory_item_id = ccvcv.inventory_item_id
                  AND mv.val_unit_id = ccvcv.val_unit_id
                  AND mv.snapshot_date = ccvcv.snapshot_date
                  AND ccio.inv_org_id = iop.organization_id
                  AND ccio.cost_org_id = ccvcv.cost_org_id
                  AND iop.organization_code = cvuc.inv_org_code
                  AND cvsb.val_structure_type_code = 'ASSET'
                  AND cvud.val_structure_id = cvsb.val_structure_id
                  AND cvud.val_unit_combination_id =
                         cvuc.val_unit_combination_id
                  AND ccvcv.val_unit_id = cvud.val_unit_id
         GROUP BY ccvcv.inventory_item_id, iop.organization_id)
SELECT txn.shipment_number,
       txn.transaction_date,
       txn.doc_type,
       txn.legal_entity,
       txn.address_line_1,
       txn.address_line_2,
       txn.postal_code,
       txn.state,
       txn.city,
       txn.telephone_number_1,
       txn.
	   pan_number,
       txn.gstin,
       txn.state_code,
       txn.to_legal_entity,
       txn.to_address_line1,
       txn.to_address_line2,
       txn.to_postal_code,
       txn.to_state,
       txn.to_city,
       txn.to_pan_number,
       txn.to_gstin,
       txn.to_state_code,
       txn.item_number,
       txn.description,
       txn.hsn,
       txn.uom,
       ROUND (txn.transaction_quantity, 2) transaction_quantity,
       NVL (ic.unit_cost, txn.list_price_per_unit) price,
       NVL (ic.unit_cost, txn.list_price_per_unit) * txn.transaction_quantity
          amount,
       'IOT:' || txn.organization_code || ':' || txn.shipment_number qr_code
  FROM txn, item_cst ic
 WHERE     1 = 1
       AND txn.inventory_item_id = ic.inventory_item_id(+)
       AND txn.organization_id = ic.organization_id(+)
---------------------------------------------UCAL IOT Reconciliation DM------------------------------------------------------	   
--IOTReconciliation--
/* Formatted on 19/08/2021 9:48:07 PM (QP5 v5.163.1008.3004) */
WITH txn
     AS (SELECT imt.shipment_number,
                TO_CHAR (imt.transaction_date,
                         'DD-MON-YYYY',
                         'NLS_DATE_LANGUAGE=AMERICAN')
                   transaction_date,
                iop.attribute1 gstin,
                iop.organization_code,
                iop_to.attribute1 to_gstin,
                iop_to.organization_code to_organization_code,
                esib.item_number,
                esit.description,
                eieb.attribute_char1 hsn,
                imt.transaction_uom uom,
                ABS (imt.transaction_quantity) transaction_quantity,
                rsl.quantity_received,
                rsl.quantity_delivered,
                rsl.quantity_accepted,
                rsh.receipt_num,
                TO_CHAR (rt.transaction_date,
                         'DD-MON-YYYY',
                         'NLS_DATE_LANGUAGE=AMERICAN')
                   rr_date,
                imt.inventory_item_id,
                imt.organization_id
           FROM inv_material_txns imt,
                inv_org_parameters iop,
                inv_org_parameters iop_to,
                egp_system_items_b esib,
                egp_system_items_tl esit,
                ego_item_eff_b eieb,
                rcv_shipment_lines rsl,
                (SELECT DISTINCT shipment_line_id, transaction_date
                   FROM rcv_transactions) rt,
                rcv_shipment_headers rsh
          WHERE     1 = 1
                AND rsl.shipment_header_id = rsh.shipment_header_id(+)
                AND rsl.shipment_line_id = rt.shipment_line_id(+)
                AND imt.transaction_id = rsl.mmt_transaction_id(+)
                AND eieb.context_code(+) = 'UCAL Attributes'
                AND eieb.inventory_item_id(+) = esib.inventory_item_id
                AND eieb.organization_id(+) = iop.master_organization_id
                AND esit.inventory_item_id = imt.inventory_item_id
                AND esit.organization_id = imt.organization_id
                AND esib.inventory_item_id = imt.inventory_item_id
                AND esib.organization_id = imt.organization_id
                AND iop_to.organization_id = imt.transfer_organization_id
                AND iop.organization_id = imt.organization_id
                AND imt.transaction_type_id = 21         -- Intransit Shipment
                AND iop.organization_id = :p_organization_id
                AND TRUNC (imt.transaction_date) BETWEEN NVL (
                                                            :p_from_date,
                                                            TRUNC (
                                                               imt.transaction_date))
                                                     AND NVL (
                                                            :p_to_date,
                                                            TRUNC (
                                                               imt.transaction_date))),
     item_cst
     AS (  SELECT ccvcv.inventory_item_id,
                  iop.organization_id,
                  ROUND (SUM (ccvcv.unit_cost), 2) unit_cost
             FROM cst_costed_vu_costs_v ccvcv,
                  cst_val_unit_details cvud,
                  cst_val_unit_combinations cvuc,
                  cst_val_structures_b cvsb,
                  inv_org_parameters iop,
                  cst_cost_inv_orgs ccio,
                  (  SELECT cost_org_id,
                            cost_book_id,
                            inventory_item_id,
                            val_unit_id,
                            MAX (snapshot_date) snapshot_date
                       FROM cst_costed_vu_costs_v
                   GROUP BY cost_org_id,
                            cost_book_id,
                            inventory_item_id,
                            val_unit_id) mv,
                  txn
            WHERE     1 = 1
                  AND txn.inventory_item_id = ccvcv.inventory_item_id
                  AND txn.organization_id = iop.organization_id
                  AND mv.cost_org_id = ccvcv.cost_org_id
                  AND mv.cost_book_id = ccvcv.cost_book_id
                  AND mv.inventory_item_id = ccvcv.inventory_item_id
                  AND mv.val_unit_id = ccvcv.val_unit_id
                  AND mv.snapshot_date = ccvcv.snapshot_date
                  AND ccio.inv_org_id = iop.organization_id
                  AND ccio.cost_org_id = ccvcv.cost_org_id
                  AND iop.organization_code = cvuc.inv_org_code
                  AND cvsb.val_structure_type_code = 'ASSET'
                  AND cvud.val_structure_id = cvsb.val_structure_id
                  AND cvud.val_unit_combination_id =
                         cvuc.val_unit_combination_id
                  AND ccvcv.val_unit_id = cvud.val_unit_id
         GROUP BY ccvcv.inventory_item_id, iop.organization_id)
  SELECT *
    FROM (SELECT 'IOT' TRANSACTION_TYPE,
                 txn.shipment_number,
                 txn.transaction_date,
                 txn.gstin,
                 txn.organization_code,
                 txn.to_gstin,
                 txn.to_organization_code,
                 txn.item_number,
                 txn.description,
                 txn.hsn,
                 txn.uom,
                 txn.transaction_quantity,
                 txn.quantity_received,
                 txn.quantity_delivered,
                 txn.quantity_accepted,
                 txn.receipt_num,
                 txn.rr_date,
                 ic.unit_cost price
            FROM txn, item_cst ic
           WHERE     1 = 1
                 AND txn.inventory_item_id = ic.inventory_item_id(+)
                 AND txn.organization_id = ic.organization_id(+)
          UNION ALL
          SELECT 'SO_PO' transaction_type,
                 rcta.trx_number invoice_number,
                 TO_CHAR (rcta.trx_date,
                          'DD-MON-YYYY',
                          'NLS_DATE_LANGUAGE=AMERICAN')
                    invoice_date,
                 rctd.attribute1 gstn,
                 rctd.organization_code,
                 iop_to.attribute1 to_gstin,
                 iop_to.organization_code to_organization_code,
                 esi.item_number,
                 esi.description,
                 eieb.attribute_char1 hsn,
                 rctal.uom_code uom,
                 rctal.quantity_invoiced quantity,
                 rcpt.quantity_received,
                 rcpt.quantity_delivered,
                 rcpt.quantity_accepted,
                 rcpt.receipt_num,
                 rcpt.rr_date,
                 rctal.unit_selling_price price
            FROM ra_customer_trx_all rcta,
                 ra_cust_trx_types_all rctt,
                 (SELECT DISTINCT rctd.customer_trx_id,
                                  iop.organization_id,
                                  iop.organization_code,
                                  iop.legal_entity_id,
                                  iop.attribute1,
                                  iop.master_organization_id
                    FROM ra_cust_trx_line_gl_dist_all rctd,
                         gl_code_combinations gcc,
                         inv_org_parameters iop,
                         xla_mapping_set_values xmsv
                   WHERE 1 = 1 AND gcc.segment2 = xmsv.value_constant
                         AND xmsv.input_value_constant1 =
                                TO_CHAR (iop.organization_id)
                         AND xmsv.enabled_flag = 'Y'
                         AND xmsv.mapping_set_code = 'UFSL_INV_LOC_CST'
                         AND gcc.code_combination_id = rctd.code_combination_id
                         AND rctd.account_class = 'REC') rctd,
                 ra_customer_trx_lines_all rctal,
                 egp_system_items_vl esi,
                 ego_item_eff_b eieb,
                 (SELECT rsh.shipment_num,
                         TO_CHAR (rsh.shipped_date,
                                  'DD-MON-YYYY',
                                  'NLS_DATE_LANGUAGE=AMERICAN')
                            rr_date,
                         rsl.quantity_received,
                         rsl.quantity_delivered,
                         rsl.quantity_accepted,
                         rsh.receipt_num,
                         rsl.item_id
                    FROM rcv_shipment_headers rsh, rcv_shipment_lines rsl
                   WHERE 1 = 1
                         AND rsh.shipment_header_id = rsl.shipment_header_id) rcpt,
                 hz_party_site_uses hcsu,
                 hz_cust_acct_sites_all hcas,
                 inv_org_parameters iop_to
           WHERE     1 = 1
                 AND iop_to.organization_code(+) = hcas.attribute1
                 AND hcas.party_site_id = hcsu.party_site_id
                 AND hcsu.party_site_use_id = rcta.ship_to_party_site_use_id
                 AND rcpt.shipment_num(+) = rcta.trx_number
                 AND rcpt.item_id(+) = rctal.inventory_item_id
                 AND eieb.context_code(+) = 'UCAL Attributes'
                 AND eieb.inventory_item_id(+) = esi.inventory_item_id
                 AND eieb.organization_id(+) = rctd.master_organization_id
                 AND esi.organization_id = rctd.organization_id
                 AND esi.inventory_item_id = rctal.inventory_item_id
                 AND rctal.customer_trx_id = rcta.customer_trx_id
                 AND rctal.line_type = 'LINE'
                 AND rctd.customer_trx_id = rcta.customer_trx_id
                 AND rcta.CUST_TRX_TYPE_SEQ_ID = rctt.CUST_TRX_TYPE_SEQ_ID
                 AND rctt.attribute1 LIKE '%ST%'
                 AND rctd.organization_id = :p_organization_id
                 AND TRUNC (rcta.trx_date) BETWEEN NVL (:p_from_date,
                                                        TRUNC (rcta.trx_date))
                                               AND NVL (:p_to_date,
                                                        (rcta.trx_date)))
ORDER BY transaction_type, organization_code, shipment_number
--------------------------------------------------UCAL Move Order Pick Slip DM--------------------------------------------------
--PickSlip--
SELECT wwom.supply_subinventory || '/'
         || TO_CHAR (imt.transaction_date,
                     'MON-YYYY',
                     'NLS_DATE_LANGUAGE = AMERICAN')
         || '/'
         || imt.pick_slip_number
            pick_slip_number,
         TO_CHAR (imt.transaction_date,
                  'DD-MON-YYYY',
                  'NLS_DATE_LANGUAGE = AMERICAN')
            transaction_date,
         TO_CHAR (itrh.date_required, 'DD-MM-YYYY HH24:MI:SS') date_required,
         itrh.request_number,
         esi.item_number assembly_item,
         wwom.supply_subinventory supply_subinventory_code,
         wwob.uom_code,
         est.description assembly_desc,
         itrl.line_number,
         esic.item_number component,
         estc.description component_desc,
         esic.item_type,
         imt.subinventory_code,
         CASE
            WHEN iil.inventory_location_id IS NOT NULL
            THEN
                  iil.segment1
               || '.'
               || iil.segment2
               || '.'
               || iil.segment3
               || '.'
               || iil.segment4
         END
            from_locator,
         wwom.quantity_per_product noff,
         NVL (ABS (imt.transaction_quantity), itrl.quantity) required_quantity,
         NVL (iohd.onhand, 0) onhand,
         --         GREATEST (
         --            (NVL (ABS (imt.transaction_quantity), itrl.quantity)
         --             - NVL (iohd.onhand, 0)),
         --            0)

         iop.organization_code,
         (NVL (ABS (imt.transaction_quantity), itrl.quantity)
          / esic.fixed_lot_multiplier)
            required_packets,
         ABS (imt.transaction_quantity) pick_slip_qty,
         itrl.quantity eligible_qty,
         wwop.operation_seq_number operation_seq,
         wwcb.work_center_code department,
         itrl.attribute_number3 requested_qty,
         itrl.attribute_number2 pending_qty,
         itrl.attribute_number4 supply_subinv_stock,
         wwob.work_order_number
    FROM inv_txn_request_headers itrh,
         inv_txn_request_lines itrl,
         --inv_material_txns imt,
         (SELECT transaction_date,
                 pick_slip_number,
                 subinventory_code,
                 transaction_quantity,
                 move_order_line_id,
                 organization_id,
                 locator_id
            FROM inv_material_txns
           WHERE move_order_line_id IS NOT NULL AND transaction_quantity(+) < 0
          UNION
          SELECT transaction_date,
                 pick_slip_number,
                 subinventory_code,
                 transaction_quantity,
                 move_order_line_id,
                 organization_id,
                 locator_id
            FROM inv_material_txns_temp
           WHERE move_order_line_id IS NOT NULL) imt,
         wie_work_orders_b wwob,
         egp_system_items_b esi,
         egp_system_items_tl est,
         egp_system_items_b esic,
         egp_system_items_tl estc,
         inv_item_locations iil,
         (  SELECT subinventory_code,
                   inventory_item_id,
                   organization_id,
                   SUM (primary_transaction_quantity) onhand
              FROM inv_onhand_quantities_detail
          GROUP BY subinventory_code, inventory_item_id, organization_id) iohd,
         inv_org_parameters iop,
         wie_wo_operation_materials wwom,
         wie_wo_operations_b wwop,
         wis_work_centers_b wwcb
   WHERE     1 = 1
         AND wwcb.work_center_id = wwop.work_center_id
         AND wwop.wo_operation_id = wwom.wo_operation_id
         AND wwob.work_order_id = wwop.work_order_id
         AND itrl.attribute_number1 = wwom.wo_operation_material_id
         AND iop.organization_id = wwob.organization_id
         AND iohd.subinventory_code(+) = wwob.compl_subinventory_code
         AND iohd.inventory_item_id(+) = itrl.inventory_item_id
         AND iohd.organization_id(+) = itrl.organization_id
         AND imt.locator_id = iil.inventory_location_id(+)
         AND imt.organization_id = iil.organization_id(+)
         AND imt.subinventory_code = iil.subinventory_code(+)
         AND estc.organization_id = itrl.organization_id
         AND estc.inventory_item_id = itrl.inventory_item_id
         AND esic.organization_id = itrl.organization_id
         AND esic.inventory_item_id = itrl.inventory_item_id
         AND est.organization_id = wwob.organization_id
         AND est.inventory_item_id = wwob.inventory_item_id
         AND esi.organization_id = wwob.organization_id
         AND esi.inventory_item_id = wwob.inventory_item_id
         AND wwob.work_order_number = itrl.reference_name
         AND wwob.organization_id = itrh.organization_id
         AND itrl.line_id = imt.move_order_line_id(+)
         AND itrh.header_id = itrl.header_id
         AND itrh.request_number = :p_move_order_number
ORDER BY wwop.operation_seq_number, itrl.line_number
--Rejections--
/* Formatted on 17/06/2021 6:24:52 PM (QP5 v5.163.1008.3004) */
  SELECT wr.extn_attribute_char009 work_order_number,
         wr.extn_attribute_char006 destination_subinv,
         opr.extn_attribute_number006 operation_seq,
         wwot.operation_description,
         opr.extn_attribute_number007 assembly_rejected_qty,
         opr.extn_attribute_char006 rejection_reason
    FROM moo_ref_entities wr,
         mot_ref_entities opr,
         wie_work_orders_b wwob,
         wie_wo_operations_b wwop,
         wie_wo_operations_tl wwot
   WHERE     1 = 1
         AND wwot.wo_operation_id = wwop.wo_operation_id
         AND wwop.operation_seq_number = opr.extn_attribute_number006
         AND wwob.work_order_id = wwop.work_order_id
         AND wwob.work_order_number = wr.extn_attribute_char009
         AND wr.id = opr.extn_attribute_number001
         AND opr.attribute_category = 'UCALWorkOrderRejectionOpe_c'
         AND wr.attribute_category = 'UCALWorkOrderRejections_c'
         AND wr.id = :p_id
ORDER BY opr.extn_attribute_number006
--Ineligible--
SELECT wwom.material_seq_number,
         esi.item_number,
         esi.description,
         esi.item_type,
         NULL from_subinv,
         NULL locator,
         wwom.quantity_per_product noff,
         (mv_req.batch_qty * wwom.quantity_per_product) req_qty,
         NVL (SUM (iohd.primary_transaction_quantity), 0) onhand,
         NVL (mo_pen.quantity, 0) mo_pending,
         0 eligible_qty
    FROM wie_work_orders_b wwob,
         wie_wo_operations_b wwop,
         wie_wo_operation_materials wwom,
         egp_system_items_vl esi,
         (SELECT wwob.work_order_id,
                 itrl.attribute_number3 / wwom.quantity_per_product batch_qty
            FROM inv_txn_request_lines itrl,
                 inv_txn_request_headers itrh,
                 wie_work_orders_b wwob,
                 wie_wo_operations_b wwop,
                 wie_wo_operation_materials wwom
           WHERE     1 = 1
                 AND wwop.wo_operation_id = wwom.wo_operation_id
                 AND wwob.work_order_id = wwop.work_order_id
                 AND itrl.attribute_number1 = wwom.wo_operation_material_id
                 AND itrl.header_id = itrh.header_id
                 AND itrh.request_number = :p_move_order_number
                 AND ROWNUM = 1) mv_req,
         inv_onhand_quantities_detail iohd,
         (  SELECT itrl.inventory_item_id,
                   itrl.organization_id,
                   to_subinventory_code,
                   SUM (quantity - NVL (quantity_delivered, 0)) quantity
              FROM inv_txn_request_lines itrl, fnd_lookup_values flv
             WHERE 1 = 1
                   AND flv.meaning NOT IN
                          ('Closed', 'Canceled', 'Canceled by source')
                   AND itrl.line_status = flv.lookup_code
                   AND flv.lookup_type = 'INV_TXN_REQUEST_STATUS'
          GROUP BY itrl.inventory_item_id,
                   itrl.organization_id,
                   to_subinventory_code) mo_pen
   WHERE     1 = 1
         AND esi.inventory_item_id = mo_pen.inventory_item_id(+)
         AND esi.organization_id = mo_pen.organization_id(+)
         AND wwom.supply_subinventory = mo_pen.to_subinventory_code(+)
         AND iohd.subinventory_code(+) = wwom.supply_subinventory
         AND iohd.inventory_item_id(+) = wwom.inventory_item_id
         AND iohd.organization_id(+) = wwom.organization_id
         AND esi.inventory_item_id = wwom.inventory_item_id
         AND esi.organization_id = wwob.organization_id
         AND wwop.wo_operation_id = wwom.wo_operation_id
         AND wwob.work_order_id = wwop.work_order_id
         AND wwob.work_order_id = mv_req.work_order_id
         AND wwom.wo_operation_material_id NOT IN
                (SELECT itrl.attribute_number1
                   FROM inv_txn_request_lines itrl,
                        inv_txn_request_headers itrh
                  WHERE     1 = 1
                        AND itrl.header_id = itrh.header_id
                        AND itrh.request_number = :p_move_order_number)
GROUP BY wwom.material_seq_number,
         esi.item_number,
         esi.description,
         esi.item_type,
         wwom.quantity_per_product,
         (mv_req.batch_qty * wwom.quantity_per_product),
         NVL (mo_pen.quantity, 0)
ORDER BY material_seq_number
---------------------------------------------UCAL OSP Delivery Challan DM--------------------------------------------------
--OSP_Header--
/* Formatted on 06/08/2021 8:15:40 PM (QP5 v5.163.1008.3004) */
WITH dc
     AS (SELECT DISTINCT itrl.txn_source_id work_order_id,
                         itrl.txn_source_line_id operation_seq_number,
                         mrf.extn_attribute_number008 dc_number,
                         itrl.header_id
           FROM inv_txn_request_lines itrl,
                inv_txn_source_types_tl itstt,
                moo_ref_entities mrf
          WHERE 1 = 1 AND mrf.attribute_category = 'UCALOSPDC_c'
                AND itstt.transaction_source_type_id =
                       itrl.transaction_source_type_id
                AND itstt.transaction_source_type_name = 'Work Order'
                AND itrl.header_id = mrf.extn_attribute_number007
                AND itrl.header_id = :p_header_id)
SELECT dc.dc_number,
       TO_CHAR (wwo.actual_start_date,
                'DD-Mon-YYYY',
                'NLS_DATE_LANGUAGE = AMERICAN')
          work_order_date,
       xep.name legal_entity,
       hl.address_line_1,
       hl.address_line_2,
       hl.postal_code,
       hl.region_2 state,
       hl.town_or_city city,
       hl.telephone_number_1,
       xe.registration_number pan_number,
       iop.attribute1 gstin,
       SUBSTR (iop.attribute1, 1, 2) state_code,
       psv.vendor_name,
       pssv.address_line1 supplier_address_line1,
       pssv.address_line2 supplier_address_line2,
       pssv.address_line3 supplier_address_line3,
       pssv.city supplier_city,
       pssv.state supplier_state,
       pssv.zip supplier_zip,
       zr_gst.registration_number supplier_gstin,
       flv.description supplier_state_code,
       zr_pan.registration_number supplier_pan,
       dc.header_id,
       wwo.work_order_number,
       eieb.attribute_char2 nature_of_processing,
       wwo.work_order_id,
       (SELECT item_number
          FROM egp_system_items_b
         WHERE     1 = 1
               AND inventory_item_id = wwo.inventory_item_id -- :p_assembly_item_id
               AND esi.organization_id = organization_id)
          assembly_item,
       --:p_assembly_item_id assembly_item,
       'OSP:' || iop.organization_code || ':' || dc.dc_number bar_code
  FROM wie_work_orders_b wwo,
       inv_org_parameters iop,
       hr_organization_units hou,
       xle_entity_profiles xep,
       hr_locations hl,
       xle_registrations xe,
       xle_jurisdictions_b xjb,
       wie_wo_operations_b wwop,
       poz_suppliers_v psv,
       poz_supplier_sites_v pssv,
       zx_party_tax_profile zptp_gst,
       zx_registrations zr_gst,
       zx_party_tax_profile zptp_pan,
       zx_registrations zr_pan,
       dc,
       hz_locations hzl,
       fnd_lookup_values flv,
       egp_system_items_b esi,
       ego_item_eff_b eieb
 WHERE     1 = 1
       AND eieb.context_code(+) = 'UCAL Attributes'
       AND esi.organization_id = eieb.organization_id(+)
       AND esi.inventory_item_id = eieb.inventory_item_id(+)
       AND esi.inventory_item_id = wwo.inventory_item_id
       AND esi.organization_id = wwo.organization_Id
       AND UPPER (hzl.state) = UPPER (flv.meaning)
       AND flv.lookup_type = 'UCAL_IN_STATE_CODES'
       AND flv.enabled_flag = 'Y'
       AND hzl.location_Id = pssv.location_Id
       AND wwop.work_order_id = dc.work_order_id
       AND wwop.operation_seq_number = dc.operation_seq_number
       AND zr_pan.party_tax_profile_id(+) = zptp_pan.party_tax_profile_id
       AND zr_pan.registration_type_code(+) = 'PAN'
       AND (zr_pan.effective_to IS NULL
            OR TRUNC (zr_pan.effective_to) > TRUNC (SYSDATE))
       AND zptp_pan.party_id(+) = psv.party_id
       AND zptp_pan.party_type_code(+) = 'THIRD_PARTY'
       AND zr_gst.party_tax_profile_id(+) = zptp_gst.party_tax_profile_id
       AND zr_gst.registration_type_code(+) = 'GST'
       AND (zr_gst.effective_to IS NULL
            OR TRUNC (zr_gst.effective_to) > TRUNC (SYSDATE))
       AND zptp_gst.party_id(+) = pssv.party_site_id
       AND zptp_gst.supplier_flag(+) = 'Y'
       AND zptp_gst.site_flag(+) = 'Y'
       AND pssv.vendor_site_id = wwop.supplier_site_id
       AND psv.vendor_id = wwop.supplier_id
       AND wwop.work_order_id = wwo.work_order_id
       AND wwop.operation_type = 'SUPPLIER'
       AND xjb.jurisdiction_id(+) = xe.jurisdiction_id
       AND xjb.registration_code_le(+) = 'PAN'
       AND xe.source_id(+) = xep.legal_entity_id
       AND xe.source_table(+) = 'XLE_ENTITY_PROFILES'
       AND hl.location_id = hou.location_id
       AND hou.organization_id = iop.organization_id
       AND xep.legal_entity_id = iop.legal_entity_id
       AND wwo.organization_id = iop.organization_id
--OSP_Lines--
/* Formatted on 03/08/2021 10:43:35 AM (QP5 v5.163.1008.3004) */
WITH tax
     AS (SELECT 'GST_0_PERCENT' tax, 0 rate FROM DUAL
         UNION
         SELECT 'GST_5_PERCENT' tax, 5 rate FROM DUAL
         UNION
         SELECT 'GST_12_PERCENT' tax, 12 rate FROM DUAL
         UNION
         SELECT 'GST_18_PERCENT' tax, 18 rate FROM DUAL
         UNION
         SELECT 'GST_28_PERCENT' tax, 28 rate FROM DUAL),
     ------------------------
     item_cst
     /* Oracle Query for taking cost */
     AS (  SELECT ccvcv.inventory_item_id,
                  iop.organization_id,
                  ROUND (SUM (ccvcv.unit_cost), 2) total_cost
             FROM cst_costed_vu_costs_v ccvcv,
                  cst_val_unit_details cvud,
                  cst_val_unit_combinations cvuc,
                  cst_val_structures_b cvsb,
                  inv_org_parameters iop,
                  cst_cost_inv_orgs ccio,
                  (  SELECT cost_org_id,
                            cost_book_id,
                            inventory_item_id,
                            val_unit_id,
                            MAX (snapshot_date) snapshot_date
                       FROM cst_costed_vu_costs_v
                   GROUP BY cost_org_id,
                            cost_book_id,
                            inventory_item_id,
                            val_unit_id) mv
            WHERE     1 = 1
                  AND mv.cost_org_id = ccvcv.cost_org_id
                  AND mv.cost_book_id = ccvcv.cost_book_id
                  AND mv.inventory_item_id = ccvcv.inventory_item_id
                  AND mv.val_unit_id = ccvcv.val_unit_id
                  AND mv.snapshot_date = ccvcv.snapshot_date
                  AND ccio.inv_org_id = iop.organization_id
                  AND ccio.cost_org_id = ccvcv.cost_org_id
                  AND iop.organization_code = cvuc.inv_org_code
                  AND cvsb.val_structure_type_code = 'ASSET'
                  AND cvud.val_structure_id = cvsb.val_structure_id
                  AND cvud.val_unit_combination_id =
                         cvuc.val_unit_combination_id
                  AND ccvcv.val_unit_id = cvud.val_unit_id
         GROUP BY ccvcv.inventory_item_id, iop.organization_id)
  ------------------------
  SELECT itrl.header_id,
         esib.item_number,
         esit.description,
         eieb.attribute_char1 hsn,
         itrl.uom_code,
         SUM (ROUND (itrl.quantity_delivered, 2)) quantity,
         ROUND (
            CASE
               WHEN NVL (icst.total_cost, 0) > 0 THEN icst.total_cost
               ELSE esib.list_price_per_unit
            END,
            2)
            unit_cost,
         SUM (
            ROUND (itrl.quantity_delivered, 2)
            * ROUND (
                 CASE
                    WHEN NVL (icst.total_cost, 0) > 0 THEN icst.total_cost
                    ELSE esib.list_price_per_unit
                 END,
                 2))
            amount,
         NVL ( (CASE WHEN tax_type.categ = 'INTER' THEN tax.rate END), 0)
            igst_rate,
         NVL ( (CASE WHEN tax_type.categ = 'INTRA' THEN tax.rate / 2 END), 0)
            sgst_rate,
         NVL ( (CASE WHEN tax_type.categ = 'INTRA' THEN tax.rate / 2 END), 0)
            cgst_rate,
         SUM (
            ROUND (
               (ROUND (itrl.quantity_delivered, 2)
                * ROUND (
                     CASE
                        WHEN NVL (icst.total_cost, 0) > 0 THEN icst.total_cost
                        ELSE esib.list_price_per_unit
                     END,
                     2)
                * ( (tax.rate / 100))),
               2)
            + (ROUND (itrl.quantity_delivered, 2)
               * ROUND (
                    CASE
                       WHEN NVL (icst.total_cost, 0) > 0 THEN icst.total_cost
                       ELSE esib.list_price_per_unit
                    END,
                    2)))
            total_amount,
         ROUND (
            NVL (
               (CASE
                   WHEN tax_type.categ = 'INTER'
                   THEN
                      SUM (
                         ROUND (itrl.quantity_delivered, 2)
                         * ROUND (
                              CASE
                                 WHEN NVL (icst.total_cost, 0) > 0
                                 THEN
                                    icst.total_cost
                                 ELSE
                                    esib.list_price_per_unit
                              END,
                              2)
                         * ( (tax.rate / 100)))
                END),
               0),
            2)
            igst_value,
         ROUND (
            NVL (
               (CASE
                   WHEN tax_type.categ = 'INTRA'
                   THEN
                      SUM (
                         ROUND (itrl.quantity_delivered, 2)
                         * ROUND (
                              CASE
                                 WHEN NVL (icst.total_cost, 0) > 0
                                 THEN
                                    icst.total_cost
                                 ELSE
                                    esib.list_price_per_unit
                              END,
                              2)
                         * ( (tax.rate / 200)))
                END),
               0),
            2)
            cgst_value,
         ROUND (
            NVL (
               (CASE
                   WHEN tax_type.categ = 'INTRA'
                   THEN
                      SUM (
                         ROUND (itrl.quantity_delivered, 2)
                         * ROUND (
                              CASE
                                 WHEN NVL (icst.total_cost, 0) > 0
                                 THEN
                                    icst.total_cost
                                 ELSE
                                    esib.list_price_per_unit
                              END,
                              2)
                         * ( (tax.rate / 200)))
                END),
               0),
            2)
            sgst_value
    FROM inv_txn_request_lines itrl,
         inv_txn_source_types_tl itstt,
         egp_system_items_b esib,
         egp_system_items_tl esit,
         item_cst icst,
         (SELECT ecb.category_code,
                 eica.inventory_item_id,
                 eica.organization_id
            FROM egp_item_cat_assignments eica,
                 egp_categories_b ecb,
                 egp_category_sets_b ecsb
           WHERE     1 = 1
                 AND ecsb.catalog_code = 'UCAL_GST_RATES'
                 AND ecsb.category_set_id = eica.category_set_id
                 AND ecb.category_id = eica.category_id) ecb,
         tax,
         ego_item_eff_b eieb,
         inv_org_parameters iop,
         (SELECT DISTINCT
                 itrl.header_id,
                 CASE
                    WHEN (SUBSTR (iop.attribute1, 1, 2) = flv.description)
                    THEN
                       'INTRA'
                    ELSE
                       'INTER'
                 END
                    categ
            FROM inv_txn_request_lines itrl,
                 inv_txn_source_types_tl itstt,
                 moo_ref_entities mrf,
                 wie_work_orders_b wwo,
                 wie_wo_operations_b wwop,
                 poz_suppliers_v psv,
                 poz_supplier_sites_v pssv,
                 fnd_lookup_values flv,
                 hz_locations hzl,
                 inv_org_parameters iop
           WHERE     1 = 1
                 AND wwo.organization_id = iop.organization_id
                 AND UPPER (hzl.state) = UPPER (flv.meaning)
                 AND flv.lookup_type = 'UCAL_IN_STATE_CODES'
                 AND flv.enabled_flag = 'Y'
                 AND hzl.location_id = pssv.location_id
                 AND pssv.vendor_site_id = wwop.supplier_site_id
                 AND psv.vendor_id = wwop.supplier_id
                 AND wwop.work_order_id = wwo.work_order_id
                 AND wwop.operation_type = 'SUPPLIER'
                 AND wwop.work_order_id = itrl.txn_source_id
                 AND wwop.operation_seq_number = itrl.txn_source_line_id
                 AND mrf.attribute_category = 'UCALOSPDC_c'
                 AND itstt.transaction_source_type_id =
                        itrl.transaction_source_type_id
                 AND itstt.transaction_source_type_name = 'Work Order'
                 AND itrl.header_id = mrf.extn_attribute_number007
                 AND itrl.header_id = :p_header_id) tax_type
   WHERE     1 = 1
         AND tax_type.header_id = itrl.header_id
         AND iop.organization_id = esib.organization_id
         AND eieb.context_code(+) = 'UCAL Attributes'
         AND eieb.inventory_item_id(+) = esib.inventory_item_id
         AND eieb.organization_id(+) = iop.master_organization_id
         AND tax.tax(+) = ecb.category_code
         AND itrl.inventory_item_id = ecb.inventory_item_id(+)
         AND iop.master_organization_id = ecb.organization_id(+)
         AND icst.inventory_item_id(+) = esib.inventory_item_id
         AND icst.organization_id(+) = esib.organization_id
         AND esit.inventory_item_id = esib.inventory_item_id
         AND esit.organization_id = esib.organization_id
         AND esit.inventory_item_id = itrl.inventory_item_id
         AND esit.organization_id = itrl.organization_id
         AND NVL (itrl.quantity_delivered, 0) > 0
         AND itstt.transaction_source_type_id = itrl.transaction_source_type_id
         AND itstt.transaction_source_type_name = 'Work Order'
GROUP BY itrl.header_id,
         esib.item_number,
         esit.description,
         eieb.attribute_char1,
         itrl.uom_code,
         icst.total_cost,
         tax.rate,
         tax_type.categ,
         esib.list_price_per_unit
--OSP_POs--
SELECT plla.work_order_id,
       pha.segment1 po_number,
       pla.line_num,
       pla.quantity
  FROM po_line_locations_all plla, po_lines_all pla, po_headers_all pha
 WHERE     1 = 1
       AND pha.po_header_id = pla.po_header_id
       AND pla.po_line_id = plla.po_line_id
       AND pha.document_status = 'OPEN'
       AND plla.work_order_id IS NOT NULL
------------------------------------------------------UCAL Payment Register DM--------------------------------------------------
/* Formatted on 21/06/2021 9:12:48 PM (QP5 v5.163.1008.3004) */
  SELECT apc.displayed_field payment_type,
         cpd.payment_document_name payment_document,
         aca.check_number document_number,
         aca.exchange_rate_type rate_type,
         TO_CHAR (aca.check_date,
                  'DD-MON-YYYY',
                  'NLS_DATE_LANGUAGE = AMERICAN')
            payment_date,
         aca.amount payment_amount,
         aca.currency_code payment_currency,
         aca.exchange_rate payment_rate,
         TO_CHAR (aca.exchange_date,
                  'DD-MON-YYYY',
                  'NLS_DATE_LANGUAGE = AMERICAN')
            payment_rate_date,
         ROUND ( (aca.amount * aca.exchange_rate), 2) functional_amount,
         aca.payment_method_code payment_method,
         aca.doc_sequence_value voucher_num,
         aca.status_lookup_code,
         psv.segment1 supplier_number,
         aca.vendor_name trading_partner,
         pssv.vendor_site_code supplier_site_id,
         aca.bank_account_name bank_account,                 --added by Bhuvan
         cpa.bank_name bank_name,                            --added by Bhuvan
         bank_det.attribute1 ifsc_code,                      --added by Bhuvan
         bank_det.bank_name supplier_bank_name,
         bank_det.bank_account_num supplier_account_num
    FROM ap_checks_all aca,
         ap_lookup_codes apc,
         poz_suppliers_v psv,
         poz_supplier_sites_v pssv,
         (SELECT cbv.bank_name bank_name, ce_bau.bank_acct_use_id
            FROM ce_bank_accounts cba,
                 ce_banks_v cbv,
                 ce_bank_acct_uses_all ce_bau
           WHERE     1 = 1
                 AND cbv.bank_party_id = cba.bank_id
                 AND ce_bau.ap_use_enable_flag = 'Y'
                 AND ce_bau.bank_account_id = cba.bank_account_id) cpa,
         ce_payment_documents cpd,
         (SELECT ieb.bank_account_num,
                 party_bank.party_name bank_name,
                 ieb.attribute1,
                 iep.payee_party_id
            FROM iby_external_payees_all iep,
                 iby_pmt_instr_uses_all ipi,
                 iby_ext_bank_accounts ieb,
                 hz_parties party_bank
           WHERE     1 = 1
                 AND iep.ext_payee_id = ipi.ext_pmt_party_id
                 AND ipi.instrument_id = ieb.ext_bank_account_id
                 AND ieb.bank_id = party_bank.party_id(+)
                 AND iep.party_site_id IS NULL
				 AND IPI.PRIMARY_FLAG = 'Y') bank_det
   WHERE     1 = 1
         AND psv.vendor_id = aca.vendor_id
         AND pssv.vendor_site_id = aca.vendor_site_id
         AND cpd.payment_document_id(+) = aca.payment_document_id
         AND apc.lookup_type = 'PAYMENT TYPE'
         AND apc.lookup_code = aca.payment_type_flag
         AND psv.party_id = bank_det.payee_party_id(+)
         AND aca.check_date BETWEEN :p_from_date AND :p_to_date
         AND psv.vendor_id = NVL (:p_vendor_id, psv.vendor_id)
         AND cpa.bank_acct_use_id = aca.ce_bank_acct_use_id
--         AND aca.status_lookup_code <> 'VOIDED'
--AND aca.check_number =18
ORDER BY aca.vendor_name, aca.check_date, aca.check_number
----------------------------------UCAL Purchase Register DM----------------------------------------------
--Purchase Register--
/* Formatted on 10/08/2021 4:49:29 PM (QP5 v5.163.1008.3004) */
  SELECT apsa.vendor_site_code vendor_site,
         pha.segment1 po_number,
         TO_CHAR (pha.creation_date,
                  'DD-Mon-YYYY',
                  'NLS_DATE_LANGUAGE = AMERICAN')
            po_date,
         msib.item_number,
         rcvl.item_description,
         TO_CHAR (rcvh.creation_date,
                  'DD-Mon-YYYY',
                  'NLS_DATE_LANGUAGE = AMERICAN')
            receipt_date,
         rcvh.receipt_num receipt_num,
         (CASE rcv.transaction_type
             WHEN 'RECEIVE' THEN rcv.quantity
             ELSE NULL
          END)
            receipt_receive_qty,
         TO_CHAR (rcv.transaction_date,
                  'DD-Mon-YYYY',
                  'NLS_DATE_LANGUAGE = AMERICAN')
            transaction_date,
         rcv.organization_id inventory_org,
         houft.name org_name,
         hz.party_name vendor_name,
         ect.category_name,
         rcv.transaction_type,
         rcv.po_unit_price unit_price,
         (CASE
             WHEN rcv.transaction_type = 'RETURN TO VENDOR'
             THEN
                NVL ( (rcv.quantity * rcv.po_unit_price), 0) * -1
             ELSE
                NVL ( (rcv.quantity * rcv.po_unit_price), 0)
          END)
            base_value,
         req.requisition_number rfp_number,
         rcv.quantity quantity_received,
         (CASE rcv.transaction_type
             WHEN 'RETURN TO VENDOR' THEN rcv.quantity * -1
             ELSE NULL
          END)
            rtv_quantity,
         (CASE rcv.transaction_type
             WHEN 'RETURN TO VENDOR'
             THEN
                TO_CHAR (rcv.transaction_date,
                         'DD-Mon-YYYY',
                         'NLS_DATE_LANGUAGE = AMERICAN')
             ELSE
                NULL
          END)
            rtv_date,
         NVL (cgst_tax.tax_amount, 0) receipt_cgst,
         NVL (sgst_tax.tax_amount, 0) receipt_sgst,
         NVL (igst_tax.tax_amount, 0) receipt_igst,
         NVL (tcs_tax.tax_amount, 0) receipt_tcs,
         NVL (frt.tax_amount, 0) packing_charge,
         NVL (pack.tax_amount, 0) freight_amount,
         NVL (cgst_tax.tax_rate, 0) cgst_tax_rate,
         NVL (sgst_tax.tax_rate, 0) sgst_tax_rate,
         NVL (igst_tax.tax_rate, 0) igst_tax_rate,
         NVL (tcs_tax.tax_rate, 0) tcs_tax_rate,
         eieb.attribute_char1 hsn_code_new,
         CASE
            WHEN rcv.source_document_code = 'PO'
            THEN
               NVL (zr.registration_number, 'NOT AVAILABLE')
            WHEN rcv.source_document_code = 'RMA'
            THEN
               NVL (zr_c.registration_number, 'NOT AVAILABLE')
         END
            vendor_gst_num,
         CASE
            WHEN rcv.source_document_code = 'PO'
            THEN
               (flv.description || '-' || flv.meaning)
            WHEN rcv.source_document_code = 'RMA'
            THEN
               (flv_c.description || '-' || flv_c.meaning)
         END
            AS vendor_statecode,
         CASE
            WHEN rcv.source_document_code = 'PO' THEN rcvh.shipment_num
            WHEN rcv.source_document_code = 'RMA' THEN rah.shipment_num
         END
            supplier_invoice_num,
         TO_CHAR (rcvh.shipped_date,
                  'DD-Mon-YYYY',
                  'NLS_DATE_LANGUAGE = AMERICAN')
            invoice_date,
         CASE rcv.transaction_type
            WHEN 'RETURN TO VENDOR' THEN rtv.extn_attribute_number008
            ELSE NULL
         END
            rtv_num,
         rcvl.uom_code uom,
         rcv.currency_code currency,
         pha.attribute3 po_type,
         ap.vendor_type_lookup_code supp_code,
         (CASE rcv.transaction_type
             WHEN 'RECEIVE' THEN rcvl.quantity_accepted
          END)
            quantity_accepted,
         (CASE rcv.transaction_type
             WHEN 'RECEIVE' THEN rcvl.quantity_delivered
          END)
            quantity_delivered,
         rcvh.comments,
         rcvh.attribute1 old_grn,
         rcvh.attribute2 remarks,
         iop.attribute1 org_gstn,
         rcv.source_document_code,
         CASE WHEN rcv.source_document_code = 'RMA' THEN hp_c.party_name END
            customer_name,
         houft_fm.name from_org_name,
         dha.order_number rma_number
    FROM rcv_shipment_headers rcvh,
         rcv_shipment_lines rcvl,
         rcv_transactions rcv,
         po_headers_all pha,
         po_lines_all pla,
         poz_suppliers ap,
         poz_supplier_sites_all_m apsa,
         egp_system_items_b msib,
         hz_parties hz,
         hz_locations hl,
         egp_categories_tl ect,
         po_line_locations_all plla,
         fnd_lookup_values flv,
         po_line_types_v polt,
         hr_organization_units_f_tl houft,
         (SELECT DISTINCT requisition_number, pda.line_location_id
            FROM po_distributions_all pda,
                 por_req_distributions_all prd,
                 por_requisition_lines_all prl,
                 por_requisition_headers_all prh
           WHERE     1 = 1
                 AND prh.requisition_header_id = prl.requisition_header_id
                 AND prd.requisition_line_id = prl.requisition_line_id
                 AND pda.req_distribution_id = prd.distribution_id) req,
         (SELECT unrounded_tax_amt tax_amount,
                 trx_line_id,
                 tax_rate,
                 trx_id
            FROM zx_lines zx
           WHERE     1 = 1
                 AND zx.entity_code = 'RECEIVING'
                 AND zx.tax LIKE '%CGST%') cgst_tax,
         (SELECT unrounded_tax_amt tax_amount,
                 trx_line_id,
                 tax_rate,
                 trx_id
            FROM zx_lines zx
           WHERE     1 = 1
                 AND zx.entity_code = 'RECEIVING'
                 AND zx.tax LIKE '%SGST%') sgst_tax,
         (SELECT unrounded_tax_amt tax_amount,
                 trx_line_id,
                 tax_rate,
                 trx_id
            FROM zx_lines zx
           WHERE     1 = 1
                 AND zx.entity_code = 'RECEIVING'
                 AND zx.tax LIKE '%IGST%') igst_tax,
         (SELECT unrounded_tax_amt tax_amount,
                 trx_line_id,
                 tax_rate,
                 trx_id
            FROM zx_lines zx
           WHERE     1 = 1
                 AND zx.entity_code = 'RECEIVING'
                 AND zx.tax LIKE '%PACK%') pack,
         (SELECT unrounded_tax_amt tax_amount,
                 trx_line_id,
                 tax_rate,
                 trx_id
            FROM zx_lines zx
           WHERE     1 = 1
                 AND zx.entity_code = 'RECEIVING'
                 AND zx.tax LIKE '%FREIGHT%') frt,
         (SELECT unrounded_tax_amt tax_amount,
                 trx_line_id,
                 tax_rate,
                 trx_id
            FROM zx_lines zx
           WHERE 1 = 1 AND zx.entity_code = 'RECEIVING' AND zx.tax LIKE '%TCS%') tcs_tax,
         inv_org_parameters iop,
         ego_item_eff_b eieb,
         zx_party_tax_profile zptp,
         zx_registrations zr,
         (SELECT mre.extn_attribute_number002, mre.extn_attribute_number008
            FROM mkt_ref_entities mre
           WHERE 1 = 1 AND mre.attribute_category = 'UCALRTVSequencing_c') rtv,
         rcv_shipment_headers rah,
         rcv_shipment_lines ral,
         doo_fulfill_lines_all dfla,
         doo_headers_all dha,
         hz_parties hp_c,
         zx_party_tax_profile zptp_c,
         zx_registrations zr_c,
         hz_party_sites hps_c,
         hz_locations hl_c,
         fnd_lookup_values flv_c,
         hr_organization_units_f_tl houft_fm
   WHERE     1 = 1
         AND rcvl.from_organization_id = houft_fm.organization_id(+)
         AND UPPER (hl_c.state) = UPPER (flv_c.meaning(+))
         AND flv_c.lookup_type(+) = 'UCAL_IN_STATE_CODES'
         AND flv_c.enabled_flag(+) = 'Y'
         AND hl_c.location_id(+) = hps_c.location_id
         AND hps_c.party_site_id(+) = dfla.ship_to_party_site_id
         AND zr_c.party_tax_profile_id(+) = zptp_c.party_tax_profile_id
         AND zr_c.tax_regime_code(+) LIKE '%GST%'
         AND (zr_c.effective_to IS NULL OR zr_c.effective_to > SYSDATE)
         AND zptp_c.party_id(+) = dfla.ship_to_party_site_id
         AND zptp_c.customer_flag(+) = 'Y'
         AND dfla.ship_to_party_id = hp_c.party_id(+)
         AND dha.header_id(+) = dfla.header_id
         AND ral.receipt_advice_line_number = dfla.fulfill_line_id(+)
         AND rah.ra_document_code(+) = 'RMA'
         AND rcv.receipt_advice_header_id = rah.shipment_header_id(+)
         AND rcv.receipt_advice_line_id = ral.shipment_line_id(+)
         AND rtv.extn_attribute_number002(+) = rcv.transaction_id
         AND zptp.party_id(+) = apsa.party_site_id
         AND TRUNC (SYSDATE) BETWEEN TRUNC (zr.effective_from(+))
                                 AND TRUNC (NVL (zr.effective_to(+), SYSDATE))
         AND zptp.supplier_flag(+) = 'Y'
         AND zptp.site_flag(+) = 'Y'
         AND zr.party_tax_profile_id(+) = zptp.party_tax_profile_id
         AND zr.tax_regime_code(+) LIKE '%GST%'
         AND eieb.context_code(+) = 'UCAL Attributes'
         AND eieb.inventory_item_id(+) = rcvl.item_id
         AND eieb.organization_id(+) = iop.master_organization_id
         AND iop.organization_id = rcv.organization_id
         AND rcvl.po_line_location_id = frt.trx_line_id(+)
         AND rcv.transaction_id = frt.trx_id(+)
         AND rcvl.po_line_location_id = tcs_tax.trx_line_id(+)
         AND rcv.transaction_id = tcs_tax.trx_id(+)
         AND rcvl.po_line_location_id = pack.trx_line_id(+)
         AND rcv.transaction_id = pack.trx_id(+)
         AND rcvl.po_line_location_id = igst_tax.trx_line_id(+)
         AND rcv.transaction_id = igst_tax.trx_id(+)
         AND rcvl.po_line_location_id = sgst_tax.trx_line_id(+)
         AND rcv.transaction_id = sgst_tax.trx_id(+)
         AND rcvl.po_line_location_id = cgst_tax.trx_line_id(+)
         AND rcv.transaction_id = cgst_tax.trx_id(+)
         AND req.line_location_id(+) = rcv.po_line_location_id
         AND rcv.organization_id = houft.organization_id
         AND pla.line_type_id = polt.line_type_id(+)
         AND UPPER (hl.state) = UPPER (flv.meaning(+))
         AND flv.lookup_type(+) = 'UCAL_IN_STATE_CODES'
         AND flv.enabled_flag(+) = 'Y'
         AND plla.line_location_id(+) = rcv.po_line_location_id
         AND pla.category_id = ect.category_id(+)
         AND apsa.location_id = hl.location_id(+)
         AND ap.party_id = hz.party_id(+)
         AND msib.inventory_item_id(+) = rcvl.item_id
         AND msib.organization_id(+) = rcv.organization_id
         AND rcv.vendor_site_id = apsa.vendor_site_id(+)
         AND ap.vendor_id(+) = rcvh.vendor_id
         AND rcvl.po_line_id = pla.po_line_id(+)
         AND rcvl.po_header_id = pha.po_header_id(+)
         AND rcvl.shipment_line_id = rcv.shipment_line_id
         AND rcvh.shipment_header_id = rcv.shipment_header_id
         AND rcv.transaction_type IN ('RECEIVE', 'CORRECT', 'RETURN TO VENDOR')
         AND rcv.destination_type_code = 'RECEIVING'
         --         AND rcv.source_document_code = 'PO'
         AND rcvh.shipment_header_id = rcvl.shipment_header_id
         AND rcv.transaction_type =
                NVL (:p_transaction_type, rcv.transaction_type)
         AND (rcv.organization_id IN (:p_organization_id)
              OR 'All' IN (:p_organization_id || 'All'))
         AND (ap.vendor_id IN (:p_supplier_id)
              OR 'All' IN (:p_supplier_id || 'All'))
         AND TRUNC (rcv.transaction_date) BETWEEN :p_from_date AND :p_to_date
ORDER BY hz.party_name,
         apsa.vendor_site_code,
         rcvh.receipt_num,
         rcv.transaction_type
----------------------------------UCAL RTV DM--------------------------------------------------------
--RTV--
/* Formatted on 22/07/2021 12:10:01 PM (QP5 v5.163.1008.3004) */
  SELECT legal_entity_name,
         io_address1,
         io_address2,
         io_address3,
         io_address4,
         io_city,
         io_state,
         io_postal_code,
         io_country,
         io_state_code,
         org_cin_no,
         org_gstin,
         org_state_code,
         org_pan_number,
         rtv_num,
         rec_date,
         date_of_removal,
         time_of_removal,
         supplier_gstin,
         supplier_state_code,
         vendor_code,
         vendor_name,
         supplier_address1,
         supplier_address2,
         supplier_address3,
         supplier_address4,
         supplier_state_name,
         supplier_city,
         supplier_postal_code,
         order_type,
         carrier,
         mode_of_transport,
         packaging_details,
         veh_no,
         po_order_ref,
         part_number,
         currency_code,
         description,
         hsn_of_goods,
         quantity,
         uom,
         rate_per_unit,
         tot_mat_val,
         value_in_inr,
         rate_per_unit_in_inr,
         cgst_amount,
         sgst_amount,
         igst_amount,
         tcs_amount,
         cgst_rate,
         sgst_rate,
         igst_rate,
         tcs_rate,
         total_material_value,
         (cgst_amount + sgst_amount + igst_amount + tcs_amount) total_tax,
         (  cgst_amount
          + sgst_amount
          + igst_amount
          + tcs_amount
          + total_material_value)
            total_value,
         REGEXP_REPLACE (
            iby_amount_in_words.get_amount_in_words (
                 cgst_amount
               + sgst_amount
               + igst_amount
               + tcs_amount
               + total_material_value,
               'INR',
               2),
            '\*| And  Zero Paise|^And ',
            NULL)
            total_amount_in_words,
         REGEXP_REPLACE (
            iby_amount_in_words.get_amount_in_words (igst_amount, 'INR', 2),
            '\*| And  Zero Paise|^And ',
            NULL)
            igst_amount_in_words,
         REGEXP_REPLACE (
            iby_amount_in_words.get_amount_in_words (cgst_amount, 'INR', 2),
            '\*| And  Zero Paise|^And ',
            NULL)
            cgst_amount_in_words,
         REGEXP_REPLACE (
            iby_amount_in_words.get_amount_in_words (sgst_amount, 'INR', 2),
            '\*| And  Zero Paise|^And ',
            NULL)
            sgst_amount_in_words,
         REGEXP_REPLACE (
            iby_amount_in_words.get_amount_in_words (tcs_amount, 'INR', 2),
            '\*| And  Zero Paise|^And ',
            NULL)
            tcs_amount_in_words,
         REGEXP_REPLACE (
            iby_amount_in_words.get_amount_in_words (total_material_value,
                                                     'INR',
                                                     2),
            '\*| And  Zero Paise|^And ',
            NULL)
            total_material_value_in_words,
         lr_no,
         lr_date,
         insurance_policy_no,
         insurance_policy_date,
         insurance_serial_no,
         remarks,
         freight,
         freight_amt,
         qr_code,
         receipt_num,
         rtv_creation_date,
         rtv_creation_time
    FROM (SELECT rsh.shipment_header_id,
                 xle.name legal_entity_name,
                 hrl.address_line_1 io_address1,
                 hrl.address_line_2 io_address2,
                 hrl.address_line_3 io_address3,
                 hrl.address_line_4 io_address4,
                 hrl.town_or_city io_city,
                 hrl.region_2 io_state,
                 hrl.postal_code io_postal_code,
                 hrl.country io_country,
                 flv_org_st.description io_state_code,
                 xle.legal_entity_identifier org_cin_no,
                 iop.attribute1 org_gstin,
                 SUBSTR (iop.attribute1, 1, 2) org_state_code,
                 reg.registration_number org_pan_number,
                 mre.extn_attribute_number008 rtv_num,
                 TO_CHAR (rt.transaction_date,
                          'DD-MON-YYYY',
                          'NLS_DATE_LANGUAGE = AMERICAN')
                    rec_date,
                 TO_CHAR (SYSTIMESTAMP AT TIME ZONE 'Asia/Calcutta',
                          'DD-MON-RRRR',
                          'NLS_DATE_LANGUAGE = AMERICAN')
                    date_of_removal,
                 TO_CHAR (SYSTIMESTAMP AT TIME ZONE 'Asia/Calcutta', 'HH24:MI')
                    time_of_removal,
                 supplier_reg.registration_number supplier_gstin,
                 flv_sup.description supplier_state_code,
                 rt.assessable_value ass_value,
                 psv.segment1 vendor_code,
                 psv.vendor_name vendor_name,
                 hl.address1 supplier_address1,
                 hl.address2 supplier_address2,
                 hl.address3 supplier_address3,
                 hl.address4 supplier_address4,
                 hl.state supplier_state_name,
                 hl.city supplier_city,
                 hl.postal_code supplier_postal_code,
                 rt.transaction_type order_type,
                 rsh.attribute2 carrier,
                 rsh.attribute1 mode_of_transport,
                 rsh.attribute4 packaging_details,
                 rsh.attribute3 veh_no,
                 pha.segment1 po_order_ref,
                 esib.item_number part_number,
                 NVL (esib.description, rsl.item_description) description,
                 eieb.attribute_char1 hsn_of_goods,
                 rt.quantity,
                 rt.uom_code uom,
                 rt.currency_code,
                 rt.po_unit_price rate_per_unit,
                 (rt.po_unit_price) * (rt.quantity) tot_mat_val,
                 (  (rt.po_unit_price)
                  * (rt.quantity)
                  * (NVL (rt.currency_conversion_rate, 1)))
                 + NVL (frt.tax_amount, 0)
                 + NVL (pack.tax_amount, 0)
                    value_in_inr,
                 SUM (
                    (  (rt.po_unit_price)
                     * (rt.quantity)
                     * (NVL (rt.currency_conversion_rate, 1)))
                    + NVL (frt.tax_amount, 0)
                    + NVL (pack.tax_amount, 0))
                 OVER (PARTITION BY rt.shipment_header_id)
                    total_material_value,
                 rt.po_unit_price * (NVL (rt.currency_conversion_rate, 1))
                    rate_per_unit_in_inr,
                 SUM (NVL (cgst_tax.tax_amount, 0))
                    OVER (PARTITION BY rt.shipment_header_id)
                    cgst_amount,
                 SUM (NVL (sgst_tax.tax_amount, 0))
                    OVER (PARTITION BY rt.shipment_header_id)
                    sgst_amount,
                 SUM (NVL (igst_tax.tax_amount, 0))
                    OVER (PARTITION BY rt.shipment_header_id)
                    igst_amount,
                 SUM (NVL (tcs_tax.tax_amount, 0))
                    OVER (PARTITION BY rt.shipment_header_id)
                    tcs_amount,
                 NVL (cgst_tax.tax_rate, 0) cgst_rate,
                 NVL (sgst_tax.tax_rate, 0) sgst_rate,
                 NVL (igst_tax.tax_rate, 0) igst_rate,
                 NVL (tcs_tax.tax_rate, 0) tcs_rate,
                 rsh.attribute5 lr_no,
                 TO_CHAR (rsh.attribute_date1,
                          'DD-MON-YYYY',
                          'NLS_DATE_LANGUAGE = AMERICAN')
                    lr_date,
                 iop.attribute3 insurance_policy_no,
                 TO_CHAR (iop.attribute_date1,
                          'DD-MON-YYYY',
                          'NLS_DATE_LANGUAGE = AMERICAN')
                    insurance_policy_date,
                 NULL insurance_serial_no,
                 itrt.reason_name remarks,
                 rsh.attribute7 freight,
                 frt.tax_amount freight_amt,
                    'RTV:'
                 || iop.organization_code
                 || ':'
                 || mre.extn_attribute_number008
                    qr_code,
                 rsh.receipt_num,
                 TO_CHAR (rt.creation_date,
                          'DD-MON-YYYY',
                          'NLS_DATE_LANGUAGE = AMERICAN')
                    rtv_creation_date,
                 TO_CHAR (rt.creation_date AT TIME ZONE 'Asia/Calcutta',
                          'HH24:MI')
                    rtv_creation_time
            FROM rcv_transactions rt,
                 rcv_shipment_headers rsh,
                 rcv_shipment_lines rsl,
                 mkt_ref_entities mre,
                 poz_suppliers_v psv,
                 po_headers_all pha,
                 poz_supplier_sites_all_m pssm,
                 egp_system_items_vl esib,
                 inv_org_parameters iop,
                 hr_organization_units ood,
                 xle_entity_profiles xle,
                 hr_locations hrl,
                 xle_registrations reg,
                 xle_jurisdictions_b jur,
                 fnd_lookup_values flv_org_st,
                 hz_locations hl,
                 fnd_lookup_values flv_sup,
                 ego_item_eff_b eieb,
                 (SELECT ABS (unrounded_tax_amt) tax_amount,
                         trx_line_id,
                         tax_rate,
                         trx_id
                    FROM zx_lines zx
                   WHERE     1 = 1
                         AND zx.entity_code = 'RECEIVING'
                         AND zx.tax LIKE '%CGST%') cgst_tax,
                 (SELECT ABS (unrounded_tax_amt) tax_amount,
                         trx_line_id,
                         tax_rate,
                         trx_id
                    FROM zx_lines zx
                   WHERE     1 = 1
                         AND zx.entity_code = 'RECEIVING'
                         AND zx.tax LIKE '%SGST%') sgst_tax,
                 (SELECT ABS (unrounded_tax_amt) tax_amount,
                         trx_line_id,
                         tax_rate,
                         trx_id
                    FROM zx_lines zx
                   WHERE     1 = 1
                         AND zx.entity_code = 'RECEIVING'
                         AND zx.tax LIKE '%IGST%') igst_tax,
                 (SELECT ABS (unrounded_tax_amt) tax_amount,
                         trx_line_id,
                         tax_rate,
                         trx_id
                    FROM zx_lines zx
                   WHERE     1 = 1
                         AND zx.entity_code = 'RECEIVING'
                         AND zx.tax LIKE '%TCS%') tcs_tax,
                 (SELECT ABS (unrounded_tax_amt) tax_amount,
                         trx_line_id,
                         trx_id
                    FROM zx_lines zx
                   WHERE     1 = 1
                         AND zx.entity_code = 'RECEIVING'
                         AND zx.tax LIKE '%PACK%') pack,
                 (SELECT ABS (unrounded_tax_amt) tax_amount,
                         trx_line_id,
                         trx_id
                    FROM zx_lines zx
                   WHERE     1 = 1
                         AND zx.entity_code = 'RECEIVING'
                         AND zx.tax LIKE '%FREIGHT%') frt,
                 (SELECT zr.registration_number, zptp.party_id
                    FROM zx_party_tax_profile zptp, zx_registrations zr
                   WHERE 1 = 1
                         AND zptp.party_tax_profile_id =
                                zr.party_tax_profile_id
                         AND zr.tax_regime_code LIKE '%GST%'
                         AND zptp.party_type_code = 'THIRD_PARTY_SITE'
                         AND zptp.supplier_flag = 'Y'
                         AND zptp.site_flag = 'Y'
                         AND (zr.effective_to IS NULL
                              OR zr.effective_to > SYSDATE)) supplier_reg,
                 inv_transaction_reasons_tl itrt
           WHERE     1 = 1
                 AND itrt.REASON_ID(+) = rt.reason_id
                 AND supplier_reg.party_id(+) = pssm.party_site_id
                 AND rsl.po_line_location_id = frt.trx_line_id(+)
                 AND rt.transaction_id = frt.trx_id(+)
                 AND rsl.po_line_location_id = pack.trx_line_id(+)
                 AND rt.transaction_id = pack.trx_id(+)
                 AND rsl.po_line_location_id = tcs_tax.trx_line_id(+)
                 AND rt.transaction_id = tcs_tax.trx_id(+)
                 AND rsl.po_line_location_id = tcs_tax.trx_line_id(+)
                 AND rt.transaction_id = tcs_tax.trx_id(+)
                 AND rsl.po_line_location_id = igst_tax.trx_line_id(+)
                 AND rt.transaction_id = igst_tax.trx_id(+)
                 AND rsl.po_line_location_id = sgst_tax.trx_line_id(+)
                 AND rt.transaction_id = sgst_tax.trx_id(+)
                 AND rsl.po_line_location_id = cgst_tax.trx_line_id(+)
                 AND rt.transaction_id = cgst_tax.trx_id(+)
                 AND eieb.context_code(+) = 'UCAL Attributes'
                 AND iop.master_organization_id = eieb.organization_id(+)
                 AND esib.inventory_item_id = eieb.inventory_item_id(+)
                 AND UPPER (hl.state) = UPPER (flv_sup.meaning(+))
                 AND flv_sup.lookup_type(+) = 'UCAL_IN_STATE_CODES'
                 AND flv_sup.enabled_flag(+) = 'Y'
                 AND hl.location_id = pssm.location_id
                 AND UPPER (flv_org_st.meaning(+)) = UPPER (hrl.region_2)
                 AND flv_org_st.lookup_type(+) = 'UCAL_IN_STATE_CODES'
                 AND flv_org_st.enabled_flag(+) = 'Y'
                 AND reg.source_id(+) = xle.legal_entity_id
                 AND reg.source_table(+) = 'XLE_ENTITY_PROFILES'
                 AND jur.jurisdiction_id(+) = reg.jurisdiction_id
                 AND jur.registration_code_le(+) = 'PAN'
                 AND hrl.location_id = ood.location_id
                 AND xle.legal_entity_id = iop.legal_entity_id
                 AND iop.organization_id = ood.organization_id
                 AND iop.organization_id = rt.organization_id
                 AND esib.inventory_item_id(+) = rsl.item_id
                 AND esib.organization_id(+) = rt.organization_id
                 AND pssm.vendor_site_id = rt.vendor_site_id
                 AND pha.po_header_id = rt.po_header_id
                 AND psv.vendor_id = rt.vendor_id
                 AND rt.transaction_id = mre.extn_attribute_number002
                 AND rsh.shipment_header_id = mre.extn_attribute_number001
                 AND mre.attribute_category = 'UCALRTVSequencing_c'
                 AND rt.organization_id = mre.extn_attribute_number006
                 AND rsl.shipment_line_id = rt.shipment_line_id
                 AND rsh.shipment_header_id = rt.shipment_header_id
                 AND rt.transaction_type = 'RETURN TO VENDOR'
                 AND TRUNC (rt.transaction_date) BETWEEN NVL (
                                                            :p_from,
                                                            TRUNC (
                                                               rt.transaction_date))
                                                     AND NVL (
                                                            :p_to,
                                                            TRUNC (
                                                               rt.transaction_date))
                 AND rsh.shipment_header_id =
                        NVL (:p_shipment_header_id, rsh.shipment_header_id)
                 AND rt.organization_id = :p_organization_id) x
ORDER BY receipt_num, rtv_num
------------------------------------------------UCAL Supplier Rejection DM-----------------------------------------------------
/* Formatted on 28/07/2021 12:47:25 PM (QP5 v5.163.1008.3004) */
  SELECT rcvh.shipment_header_id,
         rsh_orig.shipment_num invoice_num,
         rcv.transaction_type,
         TO_CHAR (rsh_orig.shipped_date,
                  'DD-MON-YYYY',
                  'NLS_DATE_LANGUAGE = AMERICAN')
            invoice_date,
         rcvh.receipt_num,
         TO_CHAR (rcv.transaction_date,
                  'DD-MON-YYYY',
                  'NLS_DATE_LANGUAGE = AMERICAN')
            return_date,
         rcv.quantity,
         rcv.po_unit_price,
         rcv.comments reason,
         hz.party_name vendor_name,
         apsa.vendor_site_code supplier_site,
         msib.item_number part_number,
         msib.description,
         (rcv.quantity * rcv.po_unit_price) VALUE,
         (rcv.quantity * rcv.po_unit_price)
         * NVL (rcv.currency_conversion_rate, 1)
            inr_value,
         ABS (NVL (zx.cgst, 0)) cgst,
         ABS (NVL (zx.sgst, 0)) sgst,
         ABS (NVL (zx.igst, 0)) igst,
         ABS (NVL (zx.tcs, 0)) tcs,
         ABS (NVL (zx.packing_charge, 0)) packing_charge,
         ABS (NVL (zx.freight_amount, 0)) freight_amount,
         (rcv.quantity * rcv.po_unit_price) + NVL (ABS (total_tax), 0)
            total_value,
         rtv.extn_attribute_number008 rtv_number,
         aia.invoice_num debit_memo,
         TO_CHAR (aia.invoice_date,
                  'DD-MON-YYYY',
                  'NLS_DATE_LANGUAGE = AMERICAN')
            debit_memo_date,
         iop.organization_code,
         eieb.attribute_char1 hsn_code_new,
         NVL (zr.registration_number, 'NOT AVAILABLE') vendor_gst_num,
         itrt.reason_name
    FROM rcv_shipment_headers rcvh,
         rcv_shipment_lines rcvl,
         rcv_transactions rcv,
         po_headers_all pha,
         po_lines_all pla,
         poz_suppliers ap,
         poz_supplier_sites_all_m apsa,
         egp_system_items_vl msib,
         hz_parties hz,
         po_line_locations_all plla,
         (  SELECT NVL ( (SUM (CASE WHEN tax LIKE '%PACK%' THEN tax_amt END)), 0)
                      packing_charge,
                   NVL ( (SUM (CASE WHEN tax LIKE '%FREIGHT%' THEN tax_amt END)),
                        0)
                      freight_amount,
                   NVL ( (SUM (CASE WHEN tax LIKE '%CGST%' THEN tax_amt END)), 0)
                      cgst,
                   NVL ( (SUM (CASE WHEN tax LIKE '%SGST%' THEN tax_amt END)), 0)
                      sgst,
                   NVL ( (SUM (CASE WHEN tax LIKE '%IGST%' THEN tax_amt END)), 0)
                      igst,
                   NVL ( (SUM (CASE WHEN tax LIKE '%TCS%' THEN tax_amt END)), 0)
                      tcs,
                   SUM (tax_amt) total_tax,
                   trx_id,
                   trx_line_id
              FROM zx_lines
             WHERE 1 = 1 AND entity_code = 'RECEIVING'
          GROUP BY trx_id, trx_line_id) zx,
         (SELECT DISTINCT
                 aia.invoice_num, aila.rcv_transaction_id, aia.invoice_date
            FROM ap_invoices_all aia, ap_invoice_lines_all aila
           WHERE     1 = 1
                 AND aia.invoice_id = aila.invoice_id
                 AND aila.line_type_lookup_code = 'ITEM'
                 AND aia.invoice_type_lookup_code LIKE 'DEBIT%') aia,
         rcv_transactions rt_orig,
         rcv_shipment_headers rsh_orig,
         inv_org_parameters iop,
         zx_party_tax_profile zptp,
         zx_registrations zr,
         ego_item_eff_b eieb,
         inv_transaction_reasons_tl itrt,
         (SELECT mre.extn_attribute_number002, mre.extn_attribute_number008
            FROM mkt_ref_entities mre
           WHERE 1 = 1 AND mre.attribute_category = 'UCALRTVSequencing_c') rtv
   WHERE     1 = 1
         AND rtv.extn_attribute_number002(+) = rcv.transaction_id
         AND itrt.REASON_ID(+) = rcv.reason_id
         AND eieb.context_code(+) = 'UCAL Attributes'
         AND eieb.inventory_item_id(+) = rcvl.item_id
         AND eieb.organization_id(+) = iop.master_organization_id
         AND zptp.party_id(+) = apsa.party_site_id
         AND TRUNC (SYSDATE) BETWEEN TRUNC (zr.effective_from(+))
                                 AND TRUNC (NVL (zr.effective_to(+), SYSDATE))
         AND zptp.supplier_flag(+) = 'Y'
         AND zptp.site_flag(+) = 'Y'
         AND zr.party_tax_profile_id(+) = zptp.party_tax_profile_id
         AND zr.tax_regime_code(+) LIKE '%GST%'
         AND iop.organization_id = rcv.organization_id
         AND rt_orig.shipment_header_id = rsh_orig.shipment_header_id(+)
         AND rcv.parent_transaction_id = rt_orig.transaction_id(+)
         AND aia.rcv_transaction_id(+) = rcv.parent_transaction_id
         AND zx.trx_id(+) = rcv.transaction_id
         AND zx.trx_line_id(+) = rcvl.po_line_location_id
         AND plla.line_location_id = rcv.po_line_location_id
         AND ap.party_id = hz.party_id
         AND msib.inventory_item_id = rcvl.item_id
         AND msib.organization_id = rcv.organization_id
         AND rcv.vendor_site_id = apsa.vendor_site_id
         AND ap.vendor_id = rcvh.vendor_id
         AND rcvl.po_line_id = pla.po_line_id
         AND rcvl.po_header_id = pha.po_header_id
         AND rcvl.shipment_line_id = rcv.shipment_line_id
         AND rcvh.shipment_header_id = rcv.shipment_header_id
         AND rcv.transaction_type IN ('RETURN TO VENDOR')
         AND rcv.source_document_code = 'PO'
         AND rcvh.shipment_header_id = rcvl.shipment_header_id
         AND ap.vendor_id = NVL (:p_vendor_id, ap.vendor_id)
         AND rcv.organization_id = NVL (:p_org_id, rcv.organization_id)
         AND rcvh.receipt_num = NVL (:receipt, rcvh.receipt_num)
         AND TRUNC (rcv.transaction_date) BETWEEN :p_from_date AND :p_to_date
ORDER BY hz.party_name, apsa.vendor_site_code, rcvh.receipt_num
--------------------------------------UCAL TDS Report DM------------------------------------------------------
--TDS--
/* Formatted on 06/08/2021 9:37:18 PM (QP5 v5.163.1008.3004) */
SELECT psv.segment1 vendor_number,
       psv.vendor_name,
       pssm.vendor_site_code,
       psv.vendor_type_lookup_code,
       zr.registration_number pan,
       CASE
          WHEN SUBSTR (zr.registration_number, 4, 1) = 'C' THEN 'Company'
          ELSE 'Non - Company'``
		  
       END
          registration_type,
       aia.invoice_id,
       aia.invoice_num,
       aia.description,
       TO_CHAR (aia.invoice_date,
                'DD-MON-YYYY',
                'NLS_DATE_LANGUAGE = AMERICAN')
          invoice_date,
       TO_CHAR (aia.gl_date, 'DD-MON-YYYY', 'NLS_DATE_LANGUAGE = AMERICAN')
          gl_date,
       aia.invoice_amount,
       aia.invoice_currency_code,
       aia.invoice_type_lookup_code invoice_type,
       (SELECT SUM (NVL (amount, 0))
          FROM ap_invoice_lines_all
         WHERE invoice_id = aia.invoice_id
               AND line_type_lookup_code NOT IN ('AWT', 'TAX'))
          taxable_amount,
       ail.tax,
       ail.tax_jurisdiction_code,
       ail.tax_status_code,
       ail.tax_rate_code,
       round(ail.tax_rate,2) tax_rate,
       ROUND (ail.amount * -1, 2) tds_amount,
       iop.segment2 location_code,
       iop.organization_code,
       aba.batch_name invoice_group,
       ap_invoices_utility_pkg.get_accounting_status (aia.invoice_id)
          accounting_status
  FROM ap_invoices_all aia,
       poz_suppliers_v psv,
       poz_supplier_sites_all_m pssm,
       ap_invoice_lines_all ail,
       zx_party_tax_profile zptp,
       zx_registrations zr,
       (SELECT DISTINCT aida.invoice_id,
                        iop.organization_id,
                        iop.organization_code,
                        gcc.segment2
          FROM ap_invoice_distributions_all aida,
               gl_code_combinations gcc,
               inv_org_parameters iop,
               xla_mapping_set_values xmsv
         WHERE     1 = 1
               AND gcc.segment2 = xmsv.value_constant
               AND xmsv.input_value_constant1 = TO_CHAR (iop.organization_id)
               AND xmsv.enabled_flag = 'Y'
               AND xmsv.mapping_set_code = 'UFSL_INV_LOC_CST'
               AND gcc.code_combination_id = aida.dist_code_combination_id
               AND aida.line_type_lookup_code IN ('ITEM', 'ACCRUAL')) iop,
       ap_batches_all aba
 WHERE     1 = 1
       AND aba.batch_id(+) = aia.batch_id
       AND iop.invoice_id = aia.invoice_id
       AND zr.party_tax_profile_id(+) = zptp.party_tax_profile_id
       AND (zr.effective_to IS NULL OR zr.effective_to > TRUNC (SYSDATE))
       AND zr.tax_regime_code(+) LIKE '%TDS%'
       AND zptp.party_id(+) = psv.party_id
       AND zptp.supplier_flag(+) = 'Y'
       AND psv.vendor_id = aia.vendor_id
       AND pssm.vendor_site_id = aia.vendor_site_id
       --       AND aia.invoice_num = '543'
       AND ail.invoice_id = aia.invoice_id
       AND ap_invoices_pkg.get_approval_status (aia.invoice_id,
                                                aia.invoice_amount,
                                                aia.payment_status_flag,
                                                aia.invoice_type_lookup_code) =
              'APPROVED'
       AND ail.tax_regime_code = 'UCAL IN TDS'
       AND (:p_accounted IS NULL
            OR DECODE (
                  ap_invoices_utility_pkg.get_accounting_status (
                     aia.invoice_id),
                  'ACCOUNTED', 'Yes',
                  'No') = :p_accounted)
       AND ail.accounting_date BETWEEN :p_period_from AND :p_period_to
       AND iop.organization_id = NVL (:p_org_id, iop.organization_id)
       AND (REGEXP_LIKE (ail.tax, :p_tax, 'i') OR :p_tax IS NULL)
===================================================================================================================
SELECT papf.person_number
   ,pprd.payroll_relationship_number
   ,paaf.assignment_number
   ,iebc.EXT_BANK_ACCOUNT_ID
   ,iebc.primary_acct_owner_name
   ,iebc.bank_account_name
   ,iebc.bank_account_number
   ,iebc.bank_account_type
   ,iebc.bank_name
   ,iebc.bank_number
   ,iebc.bank_branch_name
   ,iebc.branch_number
   ,iebc.country_code
   ,iebc.CHECK_DIGITS
   , PPPM.PERCENTAGE
   , PPPM.PRIORITY
   , POPM.ORG_PAYMENT_METHOD_NAME
   , PPPM.amount
  FROM hz_parties hz_per,
       per_all_people_f papf,
    iby_ext_bank_accounts_v iebc,
    per_all_assignments_f paaf,
    per_periods_of_service ppos,
    pay_pay_relationships_dn pprd,
    pay_payroll_assignments ppasg,
    PAY_PERSONAL_PAYMENT_METHODS_F PPPM,
    PAY_ORG_PAY_METHODS_VL POPM
 WHERE hz_per.orig_system_reference = papf.person_id
   AND hz_per.party_id = iebc.primary_acct_owner_party_id
   AND papf.person_id = pprd.person_id
   and paaf.assignment_id = ppasg.hr_assignment_id
   AND ppos.date_start=(SELECT MAX(ppos1.date_start)
         FROM per_periods_of_service  ppos1
        WHERE ppos1.person_id=ppos.person_id
          --AND ppos1.period_of_service_id = ppos.period_of_service_id
       )
  AND ppos.period_of_service_id = paaf.period_of_service_id
  AND paaf.person_id = papf.person_id 
  AND paaf.assignment_type IN ('C','N','E')
  AND paaf.primary_flag = 'Y'
  AND NVL(PPOS.actual_termination_date,trunc(sysdate)) BETWEEN paaf.effective_start_date AND paaf.effective_end_date
  AND NVL(PPOS.actual_termination_date,trunc(sysdate)) BETWEEN papf.effective_start_date AND papf.effective_end_date
  and NVL(PPOS.actual_termination_date,trunc(sysdate)) between ppasg.start_date and ppasg.end_date
  --AND TRUNC(SYSDATE) <= NVL(ppos.actual_termination_date, TO_DATE('12314712','MMDDYYYY'))   
  AND iebc.country_code = 'GB'
  AND iebc.BANK_ACCOUNT_ID = PPPM.BANK_ACCOUNT_ID
  AND pprd.payroll_relationship_id = pppm.payroll_relationship_id
  and pppm.PAYROLL_RELATIONSHIP_ID = ppasg.PAYROLL_RELATIONSHIP_ID----------------------------------most important
  AND POPM.ORG_PAYMENT_METHOD_ID = PPPM.ORG_PAYMENT_METHOD_ID
  AND TRUNC(SYSDATE) BETWEEN PPPM.effective_start_date AND PPPM.effective_end_date
  AND TRUNC(SYSDATE) BETWEEN POPM.effective_start_date AND POPM.effective_end_date 
ORDER BY papf.person_number
===============================================================================================================================
-------------------------------LU_AP_Employee_Expense_Report_DM-------------------------------------------------------------
select DISTINCT
(select PPF.PERSON_NUMBER from PER_ALL_PEOPLE_F PPF
where PPF.PERSON_ID= eer.person_id
and trunc(sysdate) between PPF.EFFECTIVE_START_DATE and PPF.EFFECTIVE_END_DATE
and rownum=1) EMPLOYEE_NUMBER,
(select PPNFV.FULL_NAME from PER_PERSON_NAMES_F_V PPNFV
where PPNFV.PERSON_ID= eer.person_id
and trunc(sysdate) between PPNFV.EFFECTIVE_START_DATE and PPNFV.EFFECTIVE_END_DATE
and rownum=1) EMPLOYEE_NAME,
hro.Name Business_Unit,
to_char(eer.EXPENSE_REPORT_NUM) EXPENSE_REPORT_NUM,
eer.PURPOSE,
TO_CHAR(eer.EXPENSE_REPORT_DATE,'DD-MM-YYYY')EXPENSE_REPORT_DATE ,
eer.EXPENSE_REPORT_TOTAL,
eer.EXPENSE_STATUS_CODE,
flvv.meaning ReportStatus,
eet.NAME ExpenseType,
ee.LOCATION EXPENSE_LOCATION,
ee.REIMBURSABLE_AMOUNT,
(select PPNFV.FULL_NAME
from PER_PERSON_NAMES_F_V PPNFV
where trunc(sysdate) between PPNFV.EFFECTIVE_START_DATE and PPNFV.EFFECTIVE_END_DATE
AND ppnfv.person_id = ( select MAX(eerp.event_performer_id)
						from exm_exp_rep_processing eerp
						where eerp.expense_report_id = eer.expense_report_id
						AND eerp.event ='APPROVE'
						and eerp.expense_status_code ='PENDING_AUDIT'
						and eerp.event_performer_id not in ('-1')
					   )
and rownum=1) Approver,
(select PPNFV.FULL_NAME
from PER_PERSON_NAMES_F_V PPNFV
where trunc(sysdate) between PPNFV.EFFECTIVE_START_DATE and PPNFV.EFFECTIVE_END_DATE
AND ppnfv.person_id = ( select MAX(eerp.event_performer_id)
						from exm_exp_rep_processing eerp
						where eerp.expense_report_id = eer.expense_report_id
						AND eerp.event ='COMPLETE_AUDIT'
						and eerp.expense_status_code ='APPROVAL_COMPLETE'
						and eerp.event_performer_id not in ('-1')
					   )
and rownum=1) Auditor
/*(select PPNFV.FULL_NAME from PER_PERSON_NAMES_F_V PPNFV
where trunc(sysdate) between PPNFV.EFFECTIVE_START_DATE and PPNFV.EFFECTIVE_END_DATE
AND ppnfv.person_id = ( select auditor_id
from exm_audit_queues eaq
where eaq.expense_report_id = eer.expense_report_id
And rownum=1)
and rownum=1) Auditor*/
FROM EXM_EXPENSES ee,
EXM_EXPENSE_DISTS eed,
exm_expense_reports eer,
FND_LOOKUP_VALUES_VL flvv,
EXM_EXPENSE_TYPES eet,
HR_operating_units hro
where
ee.expense_id = eed.expense_id
and eed.expense_report_id = eer.expense_report_id
and ee.EXPENSE_TYPE_ID = eet.EXPENSE_TYPE_ID
and eer.org_id = hro.ORGANIZATION_ID
and flvv.lookup_type = 'EXM_REPORT_STATUS'
and eer.EXPENSE_STATUS_CODE = flvv.LOOKUP_CODE
and eer.EXPENSE_STATUS_CODE <>'WITHDRAWN'
and (ee.ITEMIZATION_PARENT_EXPENSE_ID IS NULL or ee.ITEMIZATION_PARENT_EXPENSE_ID <>'-1')
and eer.EXPENSE_REPORT_DATE <= NVL(:P_DATE_TO, eer.EXPENSE_REPORT_DATE)
and eer.EXPENSE_REPORT_DATE >= NVL(:P_DATE_FROM, eer.EXPENSE_REPORT_DATE)
and (hro.Name IN (:P_Business_Unit)OR 'All' IN (:P_Business_Unit || 'All'))
and (eet.NAME IN (:P_Type)OR 'All' IN (:P_Type || 'All'))
and (eer.EXPENSE_STATUS_CODE IN (:P_Status)OR 'All' IN (:P_Status || 'All'))
AND  eer.person_id IN 
                    (SELECT ppf.person_id FROM PER_ALL_PEOPLE_F PPF
					 WHERE TRUNC(SYSDATE) BETWEEN PPF.EFFECTIVE_START_DATE AND PPF.EFFECTIVE_END_DATE
					 and (PPF.PERSON_NUMBER IN (:P_Employee_Number)OR 'All' IN (:P_Employee_Number || 'All'))                    )
order by hro.Name, EMPLOYEE_NUMBER, to_char(eer.EXPENSE_REPORT_NUM)



--Employee_Number_LOV
select Distinct PPF.PERSON_NUMBER from PER_ALL_PEOPLE_F PPF
where
trunc(sysdate) between PPF.EFFECTIVE_START_DATE and PPF.EFFECTIVE_END_DATE
and exists
( SELECT 1
From
exm_expense_reports eer
where PPF.PERSON_ID= eer.person_id)
--Report_Status_LOV
select DISTINCT  eer.EXPENSE_STATUS_CODE from exm_expense_reports eer
--Expense_Type_LOV
select DISTINCT eet.NAME ExpenseType from EXM_EXPENSE_TYPES eet
--Business_unit_LOV
select DISTINCT  hro.Name from HR_operating_units hro

------------------------------------------------------------LU_AR_AOR_SUMMARY_REPORT_DM------------------------------------------------------
SELECT 
--hca.account_number
  hzp.party_name Account
, rct.trx_number Source
, to_char(ps.trx_date,'MM-DD-YYYY') Transaction_Date
, ps.amount_due_remaining Total_Due
, rct.invoice_currency_code currency_code
, to_char(ps.due_date,'MM-DD-YYYY') "Week Ending Due Date"
,trunc (sysdate) - trunc (ps.due_date) "Number Of Days OutStading"
,hro.name Business_Unit
--, ps.amount_due_original
--,(ps.amount_due_original - ps.amount_due_remaining) Outstanding_Amount


FROM ar_payment_schedules_all ps
JOIN hz_cust_accounts hca ON hca.cust_account_id = ps.customer_id
JOIN hz_parties hzp ON hca.party_id = hzp.party_id
JOIN ra_customer_trx_all rct ON ps.customer_trx_id = rct.customer_trx_id
LEFT JOIN ra_cust_trx_types_all rctt ON rct.cust_trx_type_seq_id = rctt.cust_trx_type_seq_id
LEFT JOIN ra_terms term ON ps.term_id = term.term_id
JOIN hr_operating_units hro ON rct.org_id=hro.organization_id
WHERE ps.status = 'OP'
AND ps.class != 'PMT'
AND ps.amount_due_remaining != 0
----------------------------------------------------------LU AR Revenue By Period DM--------------------------------------------------------------
--LU_Revenue_by_Ship_to
/*********************************************************************************************************************
DATA SET NAME : LU_REVENUE_BY_SHIP_TO_DM
DESCRIPTION   : 
NAME          VERSION#         DATE                     DESCRIPTION
----------------------------------------------------------------------------------------------------------------------
Sonia Saini   Original         Mar 16,2022              Intial Version
Sonia Saini   1.0              Apr 4,2022               Primary salesrep from dff
Sonia Saini   1.1              Apr 20,2022              Remmoved tax lines and added exchange rate CAD
Sonia Saini   1.2              Apr 20,2022              Added rtm CAD amounts
Sonia Saini   1.3              May 09,2022              Added monthly,quarterly,yearly
**********************************************************************************************************************/
SELECT 
	LTX
,	BUSINESS_UNIT
,	TRX_DATE
,	MONTHLY
,	YEARLY
,	QUARTERLY
,	CUSTOMER_NAME
,	CUSTOMER_NUMBER
,	CUSTOMER_SITE_NAME
,	CUSTOMER_SITE_NUMBER
,	BILLING_CUSTOMER_NAME
,	BILLING_CUSTOMER_NUMBER
,	CORPORATE_ACCOUNT_NAME
,	CORPORATE_ACCOUNT_NUMBER
,	PRIMARY_SALESPERSON
,	SALES_TEAM
,	INVOICE_NUMBER
,	PURCHASE_ORDER
,	PRODUCT_CODE
,	PRODUCT_NAME
,	PRODUCT_LINE
,	CATEGORY
,	IS_NPI
,	PRICE_LIST_NAME
,	UNIT_SELLING_PRICE
,	ORDERED_QTY
,	TOTAL_AMOUNT_NATIVE
,	DISCOUNT
,	CURRENCY
,	EXCHANGE_RATE
,	TOTAL_AMOUNT_CAD
,	REVENUE_TYPE
,	SHIP_DATE
,   SHIP_TO_CUSTOMER_NAME
,	SHIP_TO_NAME
,	SHIP_TO_ADDRESS1
,	SHIP_TO_ADDRESS2
,	SHIP_TO_CITY
,	SHIP_TO_STATE
,	SHIP_TO_ZIPCODE
,	SHIP_TO_COUNTRY
,	REGION
,	CHANNEL
,	CUSTOMER_TYPE
,	BRAND
,	VERTICAL
,	APPLICATION_INDUSTRY
,	APPLICATION_PRIMARY
,	APPLICATION_SECONDARY
,	TOTAL_ATP_TESTS
,	TOTAL_DNA_TESTS
,	ORDER_TYPE
,	ORDER_NUMBER
,	ORDER_DATE
,	STATUS_CODE
,	LINE_NUMBER
,	LINE_TYPE
,	INV_LINE_NUM
,	SHIP_TO_CUSTOMER_NUMBER
,	YTD_TOT_AMT_NATIVE
,	RTM_TOT_AMT_NATIVE
,	RTM_24_TOT_AMT_NATIVE
,	BUSINESS_UNIT_SEGMENT
,	COUNTRY
,	YTD_TOT_AMT_CAD
,	NAME
,	APPLIED_TO_INVOICE
,   nvl(RTM_TOT_AMT_NATIVE,0)-nvl(RTM_24_TOT_AMT_NATIVE,0) GAIN_LOSS
,   BILLING_ACCOUNT_NAME
,   MARKET_BRAND
,	RTM_TOT_AMT_CAD
,	RTM_24_TOT_AMT_CAD
,   nvl(RTM_TOT_AMT_CAD,0)-nvl(RTM_24_TOT_AMT_CAD,0) GAIN_LOSS_CAD
FROM 
(
WITH period_date as
(
SELECT trunc(sysdate, 'YEAR') ytd_start
       ,trunc(add_months(trunc(sysdate), -12)+1/24/60/60) rtm_start
       ,trunc(sysdate) rtm_end
       ,trunc(add_months(trunc(sysdate), -24)+1/24/60/60) rtm_24_start
       ,trunc(add_months(trunc(sysdate), -12)) rtm_24_end

       ,trunc(add_months(trunc(sysdate, 'month'), - 12)) rtm_mon_start
       ,trunc(add_months(trunc(sysdate, 'month'), - 24)) rtm_24_mon_start
--	   ,trunc(sysdate, 'YEAR') -1/24/60/60 rtm_end
--	   ,add_months(trunc(sysdate, 'month'), - 12) -1/24/60/60 rtm_24_end
from dual
),
exc_rate AS 
( 
   SELECT gldr.conversion_rate
          ,TRUNC(gldr.conversion_date) cnv_date
          ,'Corporate'  cnv_type
          ,gldr.from_currency
   FROM  gl_daily_rates gldr
   WHERE gldr.conversion_type = 'Corporate'
         AND gldr.status_code = 'C' 
         AND gldr.to_currency = 'CAD'
),
ORDER_DETAIL AS
(   SELECT DHA.ORDER_NUMBER,
        DHA.ORDERED_DATE  ORDER_DATE,
        DHA.STATUS_CODE,
        DLA.LINE_NUMBER,
		fulfill_line_id,
        qplt.name Price_List_Name,
		(SELECT MEANING FROM FND_LOOKUP_VALUES WHERE LOOKUP_TYPE = 'ORA_DOO_ORDER_TYPES' AND LOOKUP_CODE = DHA.ORDER_TYPE_CODE
         AND LANGUAGE = 'US') ORDER_TYPE,
		(SELECT --ATTRIBUTE_CHAR1 order_category, 
		 ATTRIBUTE_CHAR3 
		 FROM DOO_HEADERS_EFF_B
		 WHERE CONTEXT_CODE='Order Information' and header_id=dha.header_id)  ship_to
    FROM doo_headers_all dha,
       doo_lines_all dla,
       doo_fulfill_lines_all dfla,
       QP_PRICING_STRATEGIES_VL qpsv ,
       QP_PRICE_LISTS_VL qplt        
    WHERE dha.header_id = dla.header_id
      and dha.header_id = dfla.header_id
      and dla.header_id = dfla.header_id
      and dla.line_id = dfla.line_id
      and dha.pricing_strategy_id = qpsv.pricing_strategy_id
      and qplt.price_list_id      = dfla.applied_price_list_id
      and dha.status_code NOT IN ('DOO_REFERENCE','CANCELED','DOO_DRAFT')
      and dha.request_cancel_date is null
)

SELECT 
   HOU.NAME LTX,
   ctl.attribute1 business_unit,
   raa_ship_cs.attribute21 business_unit_segment,
   to_char(ct.trx_date,'MM/DD/YYYY') trx_date,
   to_char(ct.trx_date,'MM-YYYY') monthly,
   to_char(ct.trx_date,'YYYY') yearly,
   to_char(ct.trx_date,'Q-YYYY') Quarterly,
   nvl(rac_sold_party.party_name,rac_ship_party.party_name) customer_name,
--   rac_sold_party.party_number||'.'|| raa_bill_ps.party_site_number  customer_number,  
   raa_ship_cs.attribute22 customer_number, 
   raa_ship_ps.party_site_name Customer_Site_Name,
   raa_ship_ps.party_site_number Customer_Site_Number,
   rac_bill_party.party_name Billing_Customer_Name,
   rac_bill.account_number Billing_Customer_Number,
   --rac_sold.attribute2 Corporate_Account_Name, 
   nvl(raa_bill.attribute4,raa_bill_ps.party_site_name) Corporate_Account_Name,
   /* (SELECT hca1.account_number FROM hz_parties hp1,hz_cust_accounts hca1
       WHERE upper(hp1.party_name)=upper(rac_sold.attribute2)
       AND hp1.party_id=hca1.party_id
       AND nvl(hca1.account_termination_date,sysdate) > sysdate-1
       ) Corporate_Account_Number,*/
   nvl((SELECT hp1.party_number FROM hz_parties hp1
         WHERE upper(hp1.party_name)=upper(raa_bill.attribute4))
	   ,raa_bill_ps.party_site_number
	   ) Corporate_Account_Number,
   /*(SELECT  party.party_name 
    FROM   JTF_RS_SALESREPS  sales,
           Hz_parties     party
    WHERE sales.RESOURCE_SALESREP_ID    =  ct.PRIMARY_RESOURCE_SALESREP_ID
          AND sales.RESOURCE_ID = party.party_id) Primary_Salesperson,
    */
    raa_ship_cs.attribute6 Primary_Salesperson,	
    --rac_sold.attribute17 Sales_Team,
    raa_ship_cs.attribute5 Sales_Team,
    ct.trx_number Invoice_number,
  	ct.purchase_order purchase_order,
    ESI.ITEM_NUMBER product_CODE ,
    nvl(ctl.description,ESI.DESCRIPTION) product_name,
	product_itemeff.product_line,
	(SELECT ect.category_name
	 FROM egp_item_categories eic,
		egp_category_sets_tl ecst,
		egp_categories_tl ect
	 WHERE 1=1
		AND eic.inventory_item_id = esi.inventory_item_id
		AND eic.organization_id = esi.organization_id
		AND eic.category_set_id = ecst.category_set_id
		AND ecst.language = 'US'
		AND eic.category_id = ect.category_id
		AND ect.language = 'US'
	    AND rownum=1
	) Category,
    bg_itemeff.is_npi,
    nvl(OrderDet.Price_List_Name,raa_ship_cs.attribute_number1) Price_List_Name ,
    ctl.unit_selling_price,
    ctl.QUANTITY_ORDERED ORDERED_QTY,
    ctl.EXTENDED_AMOUNT Total_amount_native,
    --(DLA.UNIT_LIST_PRICE-DLA.UNIT_SELLING_PRICE) Discount,	
	CASE WHEN ( upper(ctl.description) like '%Applicable Discount%')
	THEN ctl.EXTENDED_AMOUNT 
         ELSE 0
    END discount,
    ct.invoice_currency_code Currency,
	--ct.exchange_rate, 
	CASE 
	   WHEN ct.invoice_currency_code = 'CAD'
       THEN 1
       ELSE conv_rate.conversion_rate
    END   exchange_rate, --added exchange rate for CAD
    CASE 
	   WHEN ct.invoice_currency_code = 'CAD'
       THEN (ctl.EXTENDED_AMOUNT)
       ELSE (ctl.EXTENDED_AMOUNT*conv_rate.conversion_rate)
    END Total_Amount_CAD,
	bg_itemeff.revenue_type,
    to_char(ct.ship_date_actual,'MM/DD/YYYY') ship_date,
    rac_ship_party.party_name ship_to_customer_name,
    Orderdet.ship_to ship_to_name,	-- need to take from order dff
    raa_ship_loc.address1 ship_to_address1,
    raa_ship_loc.address2 ship_to_address2,
    raa_ship_loc.city ship_to_city,
    raa_ship_loc.state ship_to_state, 
    raa_ship_loc.postal_code ship_to_zipcode,
    ft_ship.territory_short_name ship_to_country,
	raa_ship_cs.attribute20 country, -- need to take from 
    --OrderDet.region Region,
	raa_ship_cs.attribute1 Region,
    --rac_sold.attribute5 Channel,
	raa_ship_cs.attribute8 Channel,
	--rac_sold.attribute6 customer_type,
	raa_ship_cs.attribute9 customer_type,
	bg_itemeff.brand,
	--rac_sold.attribute7 Vertical,
	raa_ship_cs.attribute10 Vertical,
	--rac_sold.attribute8 application_Industry,
	raa_ship_cs.attribute11 application_Industry,
	--rac_sold.attribute9 application_Primary,
	raa_ship_cs.attribute12 application_Primary,
	--rac_sold.attribute10 Application_Secondary,
	raa_ship_cs.attribute13 Application_Secondary,
	esi.ATTRIBUTE_NUMBER1 Total_ATP_Tests,
    esi.ATTRIBUTE_NUMBER2 Total_DNA_Tests, 
    OrderDet.ORDER_TYPE,
	OrderDet.ORDER_NUMBER,
    to_char(OrderDet.ORDER_DATE ,'MM/DD/YYYY') ORDER_DATE,
    OrderDet.STATUS_CODE,
    OrderDet.LINE_NUMBER,
	ctl.LINE_TYPE,
	ctl.line_number inv_line_num,
	ctt.name,
	(SELECT trx_number from ra_customer_trx_all 
     WHERE ct.PREVIOUS_CUSTOMER_TRX_ID = customer_trx_id
    ) Applied_to_Invoice,
	( SELECT hc1.account_number FROM hz_cust_accounts HC1
	  WHERE hc1.party_id= ct.ship_to_party_id AND nvl(hc1.account_termination_date,sysdate) > sysdate-1) ship_to_customer_number,
	CASE WHEN ct.trx_date >= period_date.ytd_start
	     THEN ctl.EXTENDED_AMOUNT 
         ELSE 0
    END ytd_tot_amt_native,
	CASE WHEN ct.trx_date between period_date.rtm_start and period_date.rtm_end
	     THEN ctl.EXTENDED_AMOUNT 
         ELSE 0
    END rtm_tot_amt_native,
	CASE WHEN ct.trx_date between period_date.rtm_24_start and period_date.rtm_24_end
	     THEN ctl.EXTENDED_AMOUNT 
         ELSE 0
    END rtm_24_tot_amt_native,
	CASE WHEN ct.trx_date >= period_date.ytd_start
	     THEN CASE 
				WHEN ct.invoice_currency_code = 'CAD'
				THEN (ctl.EXTENDED_AMOUNT)
				ELSE (ctl.EXTENDED_AMOUNT*conv_rate.conversion_rate)
				END 
         ELSE 0
    END ytd_tot_amt_CAD,
	CASE WHEN ct.trx_date between period_date.rtm_start and period_date.rtm_end
	     THEN CASE 
				WHEN ct.invoice_currency_code = 'CAD'
				THEN (ctl.EXTENDED_AMOUNT)
				ELSE (ctl.EXTENDED_AMOUNT*conv_rate.conversion_rate)
			  END 
         ELSE 0
    END rtm_tot_amt_cad,
	CASE WHEN ct.trx_date between period_date.rtm_24_start and period_date.rtm_24_end
	     THEN CASE 
				WHEN ct.invoice_currency_code = 'CAD'
				THEN (ctl.EXTENDED_AMOUNT)
				ELSE (ctl.EXTENDED_AMOUNT*conv_rate.conversion_rate)
			  END 
         ELSE 0
    END rtm_24_tot_amt_cad,
	rac_bill.account_name Billing_account_name,
	raa_ship_cs.attribute19 market_brand
FROM --ra_cust_trx_line_gl_dist_all gd,
  hr_operating_units hou,
  hr_all_organization_units haou,
  ar_system_parameters_all   sysp	  ,

  ra_customer_trx_all ct,
  ra_customer_trx_lines_all ctl,

  hz_cust_accounts rac_bill,
  hz_parties rac_bill_party,
  hz_cust_accounts rac_sold,
  hz_parties rac_sold_party,
  hz_cust_site_uses_all su_bill,
  fnd_territories_vl ft_bill,
  hz_cust_acct_sites_all raa_bill,
  hz_party_sites raa_bill_ps,

  hz_parties rac_ship_party,
  hz_party_site_uses su_ship,
  fnd_territories_vl ft_ship,
  hz_locations raa_bill_loc,
  hz_party_sites raa_ship_ps,
  hz_locations raa_ship_loc,
  hz_cust_acct_sites_all raa_ship_cs,

  egp_system_items esi,

   (select itemeff.inventory_item_id,itemeff.organization_id,
		  itemeff.ATTRIBUTE_CHAR5 product_family,
		  itemeff.ATTRIBUTE_CHAR6 product_group,
		  itemeff.ATTRIBUTE_CHAR7 product_line
	from EGO_ITEM_EFF_B  itemeff
	WHERE 1 = 1
	      AND context_code ='Product') product_itemeff,

   (select itemeff.inventory_item_id,itemeff.organization_id,
		  itemeff.ATTRIBUTE_CHAR1 line_of_business,
		  itemeff.ATTRIBUTE_CHAR2 brand,
		  itemeff.ATTRIBUTE_CHAR3 revenue_type,
		  itemeff.ATTRIBUTE_CHAR4 is_npi,
		  itemeff.ATTRIBUTE_NUMBER1 test_kit
	 from EGO_ITEM_EFF_B  itemeff
	 WHERE 1 = 1
		   AND context_code ='Business Group') bg_itemeff

   ,exc_rate conv_rate
   ,Order_detail OrderDet
   ,RA_CUST_TRX_TYPES_ALL ctt
   ,period_date
WHERE 1=1--ct.customer_trx_id                = gd.customer_trx_id
--AND 'REC'                               = gd.account_class
--AND 'Y'                                 = gd.latest_rec_flag
AND ct.customer_trx_id                  = ctl.customer_trx_id

    AND rac_sold_party.party_id(+)				= ct.sold_to_party_id
    AND rac_sold_party.party_id 			= rac_sold.party_id(+)
    AND nvl(rac_sold.account_termination_date(+),sysdate) > sysdate-1

AND ct.bill_to_customer_id              = rac_bill.cust_account_id
AND rac_bill.party_id                   = rac_bill_party.party_id
AND ct.bill_to_site_use_id              = su_bill.site_use_id
AND su_bill.cust_acct_site_id           = raa_bill.cust_acct_site_id
AND raa_bill.party_site_id              = raa_bill_ps.party_site_id
AND raa_bill_loc.location_id            = raa_bill_ps.location_id
AND raa_bill_loc.country                = ft_bill.territory_code(+)

/*
AND ct.ship_to_customer_id              = rac_ship.cust_account_id(+)
AND rac_ship.party_id                   = rac_ship_party.party_id(+)
AND ct.ship_to_site_use_id              = su_ship.site_use_id(+)
AND su_ship.cust_acct_site_id           = raa_ship.cust_acct_site_id(+)
AND raa_ship.party_site_id              = raa_ship_ps.party_site_id(+)
AND raa_ship_loc.location_id(+)         = raa_ship_ps.location_id
AND raa_ship_loc.country                = ft_ship.territory_code(+)
*/

  AND ct.ship_to_party_id             = rac_ship_party.party_id(+) 
  AND ct.ship_to_party_site_use_id    = su_ship.party_site_use_id(+)
  AND su_ship.party_site_id           = raa_ship_ps.party_site_id(+) 
  AND raa_ship_ps.location_id         = raa_ship_loc.location_id(+)               
  AND raa_ship_loc.country            = ft_ship.territory_code(+)
	
  AND raa_ship_cs.party_site_id(+)    =  raa_ship_ps.party_site_id
  
and ctl.inventory_item_id = esi.inventory_item_id (+)
and ctl.org_id = sysp.org_id
and ( (ctl.inventory_item_id is not null
       and sysp.item_validation_org_id = esi.organization_id)
       or ctl.inventory_item_id is null) 
and ct.org_id = hou.organization_id
and hou.organization_id = haou.organization_id
and ct.invoice_currency_code =conv_rate.from_currency(+)
and trunc(ct.trx_date)=conv_rate.cnv_date(+)
and product_itemeff.inventory_item_id(+) = esi.inventory_item_id
and product_itemeff.organization_id(+) = esi.organization_id
and bg_itemeff.inventory_item_id(+) = esi.inventory_item_id
and bg_itemeff.organization_id(+) = esi.organization_id
and OrderDet.fulfill_line_id(+)=ctl.interface_line_attribute5
/*
and (ct.trx_number =nvl(:p_invoice_num,ct.trx_number) -- '22100005'
OR 	(SELECT trx_number from ra_customer_trx_all 
     WHERE ct.PREVIOUS_CUSTOMER_TRX_ID = customer_trx_id
    )=nvl(:p_invoice_num,ct.trx_number)
)
and ct.created_by >= nvl(:p_created_by,ct.created_by)
*/
and COMPLETE_FLAG='Y'
--and Orderdet.order_number = nvl(:p_order_num,Orderdet.order_number)  
and ctt.CUST_TRX_TYPE_SEQ_ID= ct.CUST_TRX_TYPE_SEQ_ID
and ctt.name in ('Invoice','Credit Memo','Debit Memo')
and nvl(ESI.ITEM_NUMBER,'X') 			 = nvl(:p_product_code, nvl(ESI.ITEM_NUMBER,'X'))
and nvl(ctl.description,'X') 			 = nvl(:p_description,nvl(ctl.description,'X'))
and nvl(ctl.attribute1,'X') 			 = nvl(:p_business_line,nvl(ctl.attribute1,'X'))
and nvl(rac_bill.account_name,'X')     = nvl(:p_bill_account, nvl(rac_bill.account_name,'X'))
and ct.trx_date between nvl(:p_from_date,ct.trx_date) and nvl(:p_to_date,ct.trx_date) 
and ctl.LINE_TYPE NOT IN ('TAX')

)

WHERE 1=1
and nvl(ship_to_country,'X') 			= nvl(:p_country, nvl(ship_to_country,'X'))
and nvl(region,'X') 					= nvl(:p_region,nvl(region,'X'))
and nvl(customer_site_name,'X')  		= nvl(:p_cust_site_name,nvl(customer_site_name,'X'))
and nvl(sales_team,'X') 		     	= nvl(:p_sales_team, nvl(sales_team,'X'))
and nvl(vertical,'X') 	 				= nvl(:p_vertical, nvl(vertical,'X'))
and nvl(application_Industry,'X')    	= nvl(:p_industry, nvl(application_Industry,'X'))
and nvl(application_Primary,'X')      	= nvl(:p_app_primary,nvl(application_Primary,'X'))
and nvl(Application_Secondary,'X') 		= nvl(:p_app_secondary, nvl(Application_Secondary,'X'))
and nvl(Primary_Salesperson,'X') 		= nvl(:p_salesrep_id,nvl(Primary_Salesperson,'X'))
and nvl(CORPORATE_ACCOUNT_NAME,'X') 	= nvl(:p_corp_acc_name, nvl(CORPORATE_ACCOUNT_NAME,'X'))
ORDER by invoice_number, inv_line_num,LINE_TYPE

--LU_sysdate
SELECT   
nvl( :p_salesrep_id,'All') pp_salesrep,
nvl( :p_region,'All') pp_region,
nvl( :p_country,'All') pp_country,
nvl( :p_product_code,'All') pp_product_code,
nvl( :p_description,'All') pp_description,
nvl( :p_cust_site_name,'All') pp_cust_site_name,
nvl( :p_business_line,'All') pp_business_line,
nvl( :p_sales_team,'All') pp_sales_team,
nvl( :p_vertical,'All') pp_vertical,
nvl( :p_industry,'All') pp_industry,
nvl( :p_app_primary,'All') pp_app_primary,
nvl( :p_app_secondary,'All') pp_app_secondary,
nvl( :p_corp_acc_name,'All') pp_corp_acc_name,
nvl( :p_bill_account,'All') pp_bill_account,
to_char( CAST((SYSTIMESTAMP AT TIME ZONE 'CST') AS TIMESTAMP),'DD-MON-YYYY HH24:MI AM','NLS_DATE_LANGUAGE=AMERICAN')||'-'||'CDT' datetime,
to_char(:p_from_date,'MM/DD/YYYY') pp_from_date,
to_char(:p_to_date,'MM/DD/YYYY') pp_to_date
FROM   dual


--Customer Site Name LOV
SELECT distinct raa_ship_ps.party_site_name
FROM   ra_customer_trx_all ct,
--  ra_customer_trx_lines_all ctl,
  hz_party_site_uses su_ship,
  hz_party_sites raa_ship_ps
WHERE ct.ship_to_party_site_use_id    = su_ship.party_site_use_id
  AND su_ship.party_site_id           = raa_ship_ps.party_site_id 
order by 1

--Product Name LOV
SELECT distinct nvl(ctl.description,ESI.DESCRIPTION) Product_name
FROM  ra_customer_trx_lines_all ctl,
 egp_system_items esi,
ar_system_parameters_all   sysp
WHERE  1=1
and ctl.inventory_item_id = esi.inventory_item_id (+)
and ctl.org_id = sysp.org_id
and ( (ctl.inventory_item_id is not null
       and sysp.item_validation_org_id = esi.organization_id)
       or ctl.inventory_item_id is null) 
order by 1
--Product Code LOV
SELECT distinct ESI.ITEM_NUMBER product_CODE 
--   nvl(ctl.description,ESI.DESCRIPTION) product_name,
FROM  ra_customer_trx_lines_all ctl,
 egp_system_items esi,
ar_system_parameters_all   sysp
WHERE  1=1
and ctl.inventory_item_id = esi.inventory_item_id
and ctl.org_id = sysp.org_id
and sysp.item_validation_org_id = esi.organization_id
Order by 1
--Line Of Business LOV
SELECT b.flex_value    --,  b.description
FROM    fnd_flex_value_sets   a,
              fnd_flex_values_vl    b
WHERE     a.flex_value_set_id = b.flex_value_set_id
	          AND a.flex_value_set_name = 'LU_ORDER_LOB'
                 AND b.enabled_flag='Y'
ORDER BY 1
--Bill Account LOV
SELECT hc1.account_name--number 
FROM hz_cust_accounts HC1
WHERE  nvl(hc1.account_termination_date,sysdate) > sysdate-1
ORDER BY 1
--Corporate LOV
SELECT hp.party_name--substr(hp.party_name,1,150)
FROM hz_parties hp
WHERE 1=1
ORDER BY 1
--Secondary LOV
SELECT b.flex_value    --,  b.description
FROM    fnd_flex_value_sets   a,
              fnd_flex_values_vl    b
WHERE     a.flex_value_set_id = b.flex_value_set_id
	          AND a.flex_value_set_name = 'LU_Customer_Application_Secondary'
                 AND b.enabled_flag='Y'
ORDER BY 1
--Primary LOV
SELECT b.flex_value    --,  b.description
FROM    fnd_flex_value_sets   a,
              fnd_flex_values_vl    b
WHERE     a.flex_value_set_id = b.flex_value_set_id
	          AND a.flex_value_set_name = 'LU_Customer_Application_Primary'
                 AND b.enabled_flag='Y'
ORDER BY 1
--Industry LOV
SELECT b.flex_value    --,  b.description
FROM    fnd_flex_value_sets   a,
              fnd_flex_values_vl    b
WHERE     a.flex_value_set_id = b.flex_value_set_id
	          AND a.flex_value_set_name = 'LU_Customer_Account_Industry'
                 AND b.enabled_flag='Y'
ORDER BY 1
--Vertical LOV
SELECT b.flex_value    --,  b.description
FROM    fnd_flex_value_sets   a,
              fnd_flex_values_vl    b
WHERE     a.flex_value_set_id = b.flex_value_set_id
	          AND a.flex_value_set_name = 'LU_Customer_Vertical'
                 AND b.enabled_flag='Y'
ORDER BY 1
--Country LOV
SELECT b.flex_value    --,  b.description
FROM    fnd_flex_value_sets   a,
              fnd_flex_values_vl    b
WHERE     a.flex_value_set_id = b.flex_value_set_id
	          AND a.flex_value_set_name = 'LU_Country_Name'
                 AND b.enabled_flag='Y'
ORDER BY 1
--Region LOV
SELECT b.flex_value    --,  b.description
FROM    fnd_flex_value_sets   a,
              fnd_flex_values_vl    b
WHERE     a.flex_value_set_id = b.flex_value_set_id
	          AND a.flex_value_set_name = 'LU_Customer_Region'
                 AND b.enabled_flag='Y'
ORDER BY 1
--SalesRep LOV
SELECT distinct substr(party.party_name,1,150) Salesrep_Name
FROM    JTF_RS_SALESREPS  sales,
        Hz_parties     party
WHERE 1=1
      AND sales.RESOURCE_ID = party.party_id
ORDER BY 1
-------------------------------------------------------
==============================================================================================================================
------------------------------------------LUM Employee Reconciliation DM----------------------------------------
/*********************************************************************************************************************
DATA SET NAME : LUM Employee Reconciliation DM
DESCRIPTION   : To verify employee load data
NAME          VERSION#         DATE                     DESCRIPTION
----------------------------------------------------------------------------------------------------------------------
Sonia Saini   Original         Mar 16,2022              Intial Version
**********************************************************************************************************************/
SELECT papf.person_number
       EMPLOYEE_NUMBER,
       ppnf_emp.full_name                                         emp_name,
       user_id.username,
       pjft.name                                                  jobname,
       pjf.approval_authority                                     job_level,
       PAAM.assignment_number
       EMP_ASSIGNMENT_NUMBER,
       gcc.segment1
       ||'-'
       ||gcc.segment2
       ||'-'
       ||gcc.segment3
       ||'-'
       ||gcc.segment4
       ||'-'
       ||gcc.segment5
       ||'-'
       ||gcc.segment6                                             EXP_ACCOUNT,
       to_char(PAAM.effective_start_date,'MM/DD/YYYY')            ASSG_EFFECTIVE_START_DATE,
       PEA.email_address,
       ppnf.full_name       supervisor_name,
       papf2.person_number
       sUPERVISOR_NUMBER,
       hauft.name                                                 BusinessUnit,
       to_char(PAPF.start_date,'MM/DD/YYYY')                      HIRE_DATE,
--       paam.organization_id,
       (SELECT hauft1.name
        FROM   hr_organization_units_f_tl hauft1
        WHERE  Trunc(SYSDATE) BETWEEN hauft1.effective_start_date AND
                                      hauft1.effective_end_date
               AND hauft1.LANGUAGE = 'US'
               AND hauft1.organization_id = paam.organization_id) Department
FROM   per_all_people_f papf,
       per_all_people_f papf2,
       per_all_assignments_m paam,
       per_jobs_f pjf,
       per_jobs_f_tl pjft,
       gl_code_combinations GCC,
       per_email_addresses PEA,
       per_assignment_supervisors_f pasf,
       per_person_names_f ppnf,
       per_person_names_f ppnf_emp,
       hr_organization_units_f_tl hauft,
       per_users user_id
--,HR_ORG_UNIT_CLASSIFICATIONS_F houcf, 
--HR_ALL_ORGANIZATION_UNITS_F haouf, 
--HR_ORGANIZATION_UNITS_F_TL hauft1
WHERE  papf.person_id = paam.person_id
       AND user_id.person_id = papf.person_id
       AND Trunc(SYSDATE) BETWEEN papf.effective_start_date AND
                                  papf.effective_end_date
       AND paam.primary_assignment_flag = 'Y'
       AND paam.assignment_type = 'E'
       AND paam.effective_latest_change = 'Y'
       AND paam.default_code_comb_id = gcc.code_combination_id(+)
       AND Trunc(SYSDATE) BETWEEN paam.effective_start_date AND
                                  paam.effective_end_date
       AND paam.job_id = pjf.job_id
       AND Trunc(SYSDATE) BETWEEN pjf.effective_start_date AND
                                  pjf.effective_end_date
       AND PEA.email_address_id = PAPF.primary_email_id
 
       AND papf.person_id = pasf.person_id(+)
       AND pasf.manager_type(+) = 'LINE_MANAGER'
       AND ppnf.person_id(+) = pasf.manager_id
       AND ppnf_emp.person_id = papf.person_id
       AND papf2.person_id(+) = pasf.manager_id
       AND Trunc(SYSDATE) BETWEEN papf2.effective_start_date(+) AND
                                  papf2.effective_end_date(+)
       AND Trunc(SYSDATE) BETWEEN pasf.effective_start_date(+) AND
                                  pasf.effective_end_date(+)
       AND Trunc(SYSDATE) BETWEEN ppnf.effective_start_date(+) AND
                                  ppnf.effective_end_date(+)
       AND Trunc(SYSDATE) BETWEEN ppnf_emp.effective_start_date AND
                                  ppnf_emp.effective_end_date
       AND pjf.job_id = pjft.job_id
       --AND hauft.NAME=nvl(:P_BU_NAME,hauft.NAME)
       AND pjft.LANGUAGE = 'US'
       AND ppnf.name_type(+) = 'GLOBAL'
       AND ppnf_emp.name_type = 'GLOBAL'
       AND Trunc(SYSDATE) BETWEEN pjft.effective_start_date AND
                                  pjft.effective_end_date
       AND hauft.organization_id = paam.business_unit_id
/*
AND haouf.ORGANIZATION_ID = houcf.ORGANIZATION_ID 
AND haouf.ORGANIZATION_ID = hauft1.ORGANIZATION_ID 
AND haouf.EFFECTIVE_START_DATE BETWEEN houcf.EFFECTIVE_START_DATE AND houcf.EFFECTIVE_END_DATE 

AND hauft.EFFECTIVE_START_DATE = haouf.EFFECTIVE_START_DATE 
AND hauft.EFFECTIVE_END_DATE = haouf.EFFECTIVE_END_DATE 
AND houcf.CLASSIFICATION_CODE = 'DEPARTMENT' 
AND TRUNC(SYSDATE) BETWEEN hauft1.effective_start_date AND hauft1.effective_end_date
AND hauft1.LANGUAGE = 'US' AND hauft1.organization_id = paam.organization_id
*/
ORDER  BY papf.person_number ASC,
          pjft.name ASC nulls first
		  
-------------------------------------------------------------------LU User Audit Report------------------------------------------------------------------------
--LU_sysdate
SELECT   to_char( CAST((SYSTIMESTAMP AT TIME ZONE 'CST') AS TIMESTAMP),'DD-MON-YYYY HH24:MI AM','NLS_DATE_LANGUAGE=AMERICAN')||'-'||'CDT' datetime
FROM   dual
--LU User Audit DM
/*****************************************************************  
  DATA SET NAME    : LU User Audit Report 
  DESCRIPTION      : Fetch active user details with supervisor and cost center 
  NAME                 VERSION #         DATE                  DESCRIPTION  
  -------------------------------------------------------------------------------------  
  Sonia Saini          1.0              23-Mar-2022           Initial Version 
  *************************************************************************************/
SELECT papf.person_number        EMPLOYEE_NUMBER,
       ppnf_emp.full_name        emp_name,
       user_id.username,
       pjft.name                 jobname,
       pjf.approval_authority    job_level,
       PAAM.assignment_number    EMP_ASSIGNMENT_NUMBER,
       gcc.segment1
       ||'-'
       ||gcc.segment2
       ||'-'
       ||gcc.segment3
       ||'-'
       ||gcc.segment4
       ||'-'
       ||gcc.segment5
       ||'-'
       ||gcc.segment6            EXP_ACCOUNT,
       --PAAM.effective_start_date ASSG_EFFECTIVE_START_DATE,
       PEA.email_address,
       ppnf.full_name            supervisor_name,
       papf2.person_number       sUPERVISOR_NUMBER,
       hauft.name                BusinessUnit,
	   to_char(PAPF.start_date ,'MM/DD/YYYY') HIRE_DATE
	 , gcc.segment2 costcenter
	 ,(SELECT c.description
	   FROM fnd_flex_value_sets a
				,fnd_flex_values_vl c
	   WHERE a.flex_value_set_id = c.flex_value_set_id
		     AND a.flex_value_set_name = 'LU_COST CENTER'
			 AND c.flex_value = gcc.segment2
       ) costcenter_desc
       ,DECODE(user_id.suspended,'N','Active','Y','Inactive') as Is_User_Active
FROM   per_all_people_f papf,
       per_all_people_f papf2,
       per_all_assignments_m paam,
       per_jobs_f pjf,
       per_jobs_f_tl pjft,
       gl_code_combinations GCC,
       per_email_addresses PEA,
       per_assignment_supervisors_f pasf,
       per_person_names_f ppnf,
       per_person_names_f ppnf_emp,
       hr_organization_units_f_tl hauft,
       per_users user_id
WHERE  papf.person_id = paam.person_id
       AND user_id.person_id = papf.person_id
       AND Trunc(SYSDATE) BETWEEN papf.effective_start_date AND
                                  papf.effective_end_date
       AND paam.primary_assignment_flag = 'Y'
       AND paam.assignment_type = 'E'
       AND paam.effective_latest_change = 'Y'
       AND paam.default_code_comb_id = gcc.code_combination_id(+)
       AND Trunc(SYSDATE) BETWEEN paam.effective_start_date AND
                                  paam.effective_end_date
       AND PEA.email_address_id = PAPF.primary_email_id
       AND papf.person_id = pasf.person_id(+)
       AND pasf.manager_type(+) = 'LINE_MANAGER'
       AND ppnf_emp.person_id = papf.person_id
       AND papf2.person_id(+) = pasf.manager_id
       AND Trunc(SYSDATE) BETWEEN papf2.effective_start_date(+) AND
                                  papf2.effective_end_date(+)
       AND Trunc(SYSDATE) BETWEEN pasf.effective_start_date(+) AND
                                  pasf.effective_end_date(+)
       AND ppnf.person_id(+) = pasf.manager_id
       AND Trunc(SYSDATE) BETWEEN ppnf.effective_start_date(+) AND
                                  ppnf.effective_end_date(+)

       AND Trunc(SYSDATE) BETWEEN ppnf_emp.effective_start_date AND
                                  ppnf_emp.effective_end_date
       AND paam.job_id = pjf.job_id
       AND Trunc(SYSDATE) BETWEEN pjf.effective_start_date AND
                                  pjf.effective_end_date
       AND pjf.job_id = pjft.job_id
       AND pjft.LANGUAGE = 'US'

     --  AND hauft.name = Nvl(:P_BU_NAME, hauft.name)

       AND ppnf.name_type(+) = 'GLOBAL'
       AND ppnf_emp.name_type = 'GLOBAL'
       AND Trunc(SYSDATE) BETWEEN pjft.effective_start_date AND
                                  pjft.effective_end_date
       AND hauft.organization_id = paam.business_unit_id
	   --AND papf.person_number  ='HDDC000000002'
ORDER  BY papf.person_number ASC,
          pjft.name ASC nulls first
================================================================================================================================
---------------------------------------LU CST Inflation Deflation DM----------------------------------------------------
--LU_sysdate
SELECT NVL(:p_org,'All') rpt_org,
       NVL(:P_item_number,'All') rpt_item_number,
       'Item Cost ('||:Period1||')' rpt_period1,
       'Item Cost ('||:Period2||')'  rpt_period2,
       to_char( CAST((SYSTIMESTAMP AT TIME ZONE 'CST') AS TIMESTAMP),'DD-MON-YYYY HH24:MI AM','NLS_DATE_LANGUAGE=AMERICAN')||'-'||'CDT' datetime
FROM   dual
--LU_CS_BOM_COST_DM
/*********************************************************************************************************************
DATA SET NAME : LU_CS_BOM_COST_DM
DESCRIPTION   : 
NAME          VERSION#         DATE                     DESCRIPTION
----------------------------------------------------------------------------------------------------------------------
Sonia Saini   Original         Apr 6, 2022              Intial Version
Sonia Saini   1.1              Apr 23, 2022             pick up cost for end date of period 
**********************************************************************************************************************/
WITH 
org as
(SELECT distinct
           iop.organization_code inv_org,
           cio.inv_org_id,
            ccob.COST_ORG_ID,
            ccob.COST_BOOK_ID
FROM hr_organization_units_f_tl hr,
           cst_cost_books_vl cb,
           fusion.cst_cost_org_books  ccob,
           CST_COST_INV_ORGS cio,
           inv_org_parameters iop
WHERE  hr.ORGANIZATION_ID=ccob.COST_ORG_ID
       AND cb.cost_book_id = ccob.COST_BOOK_ID
       AND ccob.cost_org_id=cio.cost_org_id
--       AND cb.cost_book_code='CANADA_COST_BOOK'
       AND iop.organization_id= cio.inv_org_id
       AND iop.organization_code = :p_org --'RR_INV_ORG'
)
,period1 as
(
SELECT
    start_date,
    end_date,
    end_date AsOfDate  --1.1
FROM
    cst_period_statuses pr,
    org
WHERE
    pr.period_name = :Period1 
    and pr.cost_org_id = org.cost_org_id 
    and pr.cost_book_id = org.cost_book_id
)
,period2 as
(
SELECT
    start_date,
    end_date,
    end_date AsOfDate --1.1
FROM
    cst_period_statuses pr,
    org
WHERE
    pr.period_name = :Period2 
    and pr.cost_org_id = org.cost_org_id 
    and pr.cost_book_id = org.cost_book_id
)
,bom_table
     AS (SELECT ROWNUM                        rw,
                Lpad (' ', LEVEL * 2)
                || LEVEL                      st_Level,
                Lpad (' ', LEVEL * 4)
                ||itms.item_number            Component_Item_No,
                itms1.item_number           parent_item,
                itms.inventory_item_id        Component_item_id,
                Sys_connect_by_path(itms1.item_number, '/')
                ||'/'                         PATH,
                esb.bill_sequence_id,
                connect_by_root ESB.pk1_value base_inventory_item_id,
                ecav.operation_seq_num        op_seq,
				ecav.component_quantity
         FROM   egp_components_b ecav,
                egp_structures_b esb,
                egp_system_items_b itms,
                egp_system_items_b itms1,
                org
         WHERE  ecav.bill_sequence_id = esb.common_bill_sequence_id
                AND ECAV.obj_name = 'EGO_ITEM'
                AND esb.alternate_bom_designator = 'Primary'
                AND itms1.inventory_item_id = To_number(esb.pk1_value)
                AND itms1.organization_id = To_number(esb.pk2_value)
                AND itms.inventory_item_id = To_number(ecav.pk1_value)
                AND itms.organization_id = To_number(ecav.pk2_value)
         START WITH ( esb.pk1_value, esb.pk2_value ) IN
          		 (SELECT
                    inventory_item_id,
                    organization_id
                  FROM egp_system_items_b
                  WHERE
                    item_number = Nvl(:p_item_number,item_number)
                    AND organization_id = org.inv_org_id)
                    AND ECAV.implementation_date IS NOT NULL
                    AND ECAV.obj_name = 'EGO_ITEM'
                    AND esb.alternate_bom_designator = 'Primary'
                    AND esb.effectivity_control = 1
                    AND To_timestamp(ecav.effectivity_date) <= SYSDATE
                    AND Nvl(ecav.disable_date, To_timestamp(SYSDATE) + 1) >SYSDATE
         CONNECT BY ESB.pk1_value = PRIOR ecav.pk1_value
                                          AND ECAV.pk2_value = To_char(org.inv_org_id)
                                          AND esb.pk2_value = To_char(org.inv_org_id)
                                          AND esb.alternate_bom_designator ='Primary'
                                          AND (( esb.effectivity_control = 1 AND To_timestamp(ecav.effectivity_date)<= SYSDATE
                                          AND Nvl(ecav.disable_date,To_timestamp(SYSDATE) + 1) > SYSDATE ))
                                          AND ecav.implementation_date IS NOT NULL
                                          AND ecav.obj_name = 'EGO_ITEM'
        --ORDER  BY esb.bill_sequence_id asc
        ),
     cost1
     AS (SELECT a.inventory_item_id,
	            trunc(period1.end_date) end_date,
                SUM(a.unit_cost) cost
         FROM   cst_costed_vu_costs_v a,
                fusion.cst_val_units_b b,
                org,
                period1
         WHERE  1 = 1
                --AND a.inventory_item_id= 100000001538466 --100000001849314
                AND trunc(period1.end_date) BETWEEN a.snapshot_date AND
                                        (a.eff_to_date)
                AND a.val_unit_id = b.val_unit_id
                AND Substr(b.val_unit_code, Instr(b.val_unit_code, '-', -1, 1) +1) =org.inv_org-- 'RR_INV_ORG'
                AND a.cost_org_id = org.cost_org_id
                AND b.cost_book_id = org.cost_book_id
         GROUP  BY a.inventory_item_id,trunc(period1.end_date)),
     cost2
     AS (SELECT a.inventory_item_id,
	            trunc(period2.end_date) end_date,
                SUM(a.unit_cost) cost
         FROM   cst_costed_vu_costs_v a,
                fusion.cst_val_units_b b,
                org,
                period2
         WHERE  1 = 1
                --AND a.inventory_item_id= 100000001538466 --100000001849314
                AND trunc(period2.end_date) BETWEEN a.snapshot_date AND
                                        (a.eff_to_date)
                AND a.val_unit_id = b.val_unit_id
                AND Substr(b.val_unit_code, Instr(b.val_unit_code, '-', -1, 1) +1) =org.inv_org-- 'RR_INV_ORG'
                AND a.cost_org_id = org.cost_org_id
                AND b.cost_book_id = org.cost_book_id
         GROUP  BY a.inventory_item_id,trunc(period2.end_date))

SELECT 
ST_LEVEL
,RW
,BASE_ITEM_NUMBER
,DESCRIPTION
,INVENTORY_ITEM_ID
,PARENT_ITEM
,COMPONENT_ITEM_NO
,COMPONENT_QUANTITY
,nvl(cost1,rollup_cost1) cost1
,nvl(cost2,rollup_cost2) cost2
,cost1 fixed_cost1
,cost2 fixed_cost2
,rollup_cost1
,rollup_cost2
FROM 
(
SELECT main.*,
       cost1_tab.cost cost1,
       cost2_tab.cost cost2,
	   roll_cost1.rollup_cost1,
	   roll_cost2.rollup_cost2,
	   item.description
FROM (SELECT   '0'  st_level,
               0   rw,
               item.item_number base_item_number,
			   item.organization_id,
               item.inventory_item_id,
               NULL parent_item,
               item.item_number Component_Item_No,
               item.inventory_item_id base_inventory_item_id,
			   NULL component_quantity
        FROM   bom_table bom_tab,
               egp_system_items item,
               org
        WHERE  item.inventory_item_id = bom_tab.base_inventory_item_id
               AND item.organization_id = org.inv_org_id
        GROUP  BY item.item_number,
                  item.inventory_item_id,item.organization_id
        UNION ALL
        SELECT bom_tab.st_level,
               bom_tab.rw,
               item.item_number base_item_number,
			   item.organization_id,
               bom_tab.component_item_id,
               bom_tab.parent_item,
               bom_tab.component_item_no,
               item.inventory_item_id base_inventory_item_id,
			   bom_tab.component_quantity
        FROM   bom_table bom_tab,
               egp_system_items item,
               org
        WHERE  item.inventory_item_id = bom_tab.base_inventory_item_id
               AND item.organization_id = org.inv_org_id
     )main,
      cost1 cost1_tab,
      cost2 cost2_tab,
	  (SELECT  item.inventory_item_id,
               sum(nvl(cost1_tab.cost,0)) rollup_cost1
        FROM   bom_table bom_tab,
               egp_system_items_b item,
               cost1 cost1_tab,
               org
        WHERE  item.inventory_item_id = bom_tab.base_inventory_item_id
               AND item.organization_id = org.inv_org_id
               AND bom_tab.component_item_id = cost1_tab.inventory_item_id(+)
               AND item.item_number=bom_tab.parent_item
			   AND trunc(item.creation_date)<=cost1_tab.end_date
        GROUP  BY item.item_number,
                  item.inventory_item_id) 
      roll_cost1,
	  (SELECT  item.inventory_item_id,
			   sum(nvl(cost2_tab.cost,0)) rollup_cost2
        FROM   bom_table bom_tab,
               egp_system_items_b item,
               cost2 cost2_tab,
               org
        WHERE  item.inventory_item_id = bom_tab.base_inventory_item_id
               AND item.organization_id = org.inv_org_id
			   AND bom_tab.component_item_id = cost2_tab.inventory_item_id(+)
               AND item.item_number=bom_tab.parent_item
			   AND trunc(item.creation_date)<=cost2_tab.end_date
        GROUP  BY item.item_number,
                  item.inventory_item_id) roll_cost2,
		egp_system_items item
WHERE main.inventory_item_id = cost1_tab.inventory_item_id(+)
      AND main.inventory_item_id = cost2_tab.inventory_item_id(+)
	  and main.inventory_item_id = roll_cost1.inventory_item_id(+)
	  and main.inventory_item_id = roll_cost2.inventory_item_id(+)
	  and item.inventory_item_id = main.inventory_item_id
      and item.organization_id = main.organization_id
)
ORDER BY base_item_number,rw  asc
--Period LOV
SELECT pr.period_name -- || ' (  '  || pr.period_year||'.' || pr.period_num || ' )  '
FROM       cst_cost_books_vl cb,
           fusion.cst_cost_org_books  ccob,
           CST_COST_INV_ORGS cio,
           inv_org_parameters iop,
           cst_period_statuses pr
WHERE   cb.cost_book_id = ccob.COST_BOOK_ID
       AND ccob.cost_org_id=cio.cost_org_id
       AND iop.organization_id= cio.inv_org_id
       AND iop.organization_code = :p_org 
       AND pr.cost_org_id = ccob.COST_ORG_ID
       AND pr.cost_book_id = ccob.COST_BOOK_ID
       --AND period_name =:p_period1
 order by period_year,period_num desc
 --Item LOV
 SELECT item.item_number
FROM egp_system_items_b item, inv_org_parameters iop
WHERE item.organization_id=iop.organization_id
              AND iop.organization_code = :p_org
              AND exists (select 1 from egp_structures_b a
where  To_number(pk1_value) = item.inventory_item_id
 AND a.alternate_bom_designator = 'Primary'
       AND item.organization_id = To_number(pk2_value))
Order by 1
--Org LOV
SELECT distinct iop.organization_code inv_org
FROM   inv_org_parameters iop
WHERE organization_id <> master_organization_id
Order by 1
--------------------------------------------------------------LU CST Roll Up Costs DM--------------------------------------------------------
--LU_sysdate
SELECT NVL(:p_org,'All') rpt_org,
       NVL(:P_scenario,'All') rpt_scenario,
       To_char(:p_eff_date,'DD-MON-YYYY') rpt_eff_date, 
       to_char( CAST((SYSTIMESTAMP AT TIME ZONE 'CST') AS TIMESTAMP),'DD-MON-YYYY HH24:MI AM','NLS_DATE_LANGUAGE=AMERICAN')||'-'||'CDT' datetime
FROM   dual
--LU_Cost_Roll_Up_DM
/*********************************************************************************************************************
DATA SET NAME : LU_Cost_Roll_Up_DM
DESCRIPTION   : 
NAME          VERSION#         DATE                     DESCRIPTION
----------------------------------------------------------------------------------------------------------------------
Sonia Saini   Original         June 29, 2022              Intial Version
**********************************************************************************************************************/
WITH main0 AS 
(SELECT main.ITEM_NUMBER 	as c4,
     main.COST_ORG_NAME 	as c5,
     main.InvOrg 			as c6,
     main.baseitem 			as c7,
     main.scenario 			as c8,
     main.comp_item_id 		as c10,
     main.base_item_id 		as c11,
     main.comp_item_desc 	as c12,
     main.unitcost 			as c13,
     main.effdate 			as c14,
     main.qty_usage 		as c15,
     main.extcost 			as c16,
	  BOM_LEVEL,
	  STATUS_CODE,
	  POSTED_FLAG,
	  DETAIL_SOURCE_TYPE,
	  ROLLUP_HEADER_LEVEL
FROM 
   (SELECT CompItemV.ITEM_NUMBER 	AS ITEM_NUMBER,
	 CBookV.COST_ORG_NAME 			AS COST_ORG_NAME,         
	 InvOrgV.NAME4 					AS InvOrg,
	 BaseItemV.ITEM_NUMBER 			AS baseitem,
	 ScenV.SCENARIO_NUMBER 			AS scenario, 
	 CompItemV.INVENTORY_ITEM_ID 	AS comp_item_id,
	 BaseItemV.INVENTORY_ITEM_ID 	AS base_item_id,
	 CompItemV.DESCRIPTION2511 		AS comp_item_desc,
	 rollupv.UNIT_COST 				AS unitcost, 
	 To_char(ScenV.EFFECTIVE_START_DATE,'DD-MON-YYYY')	AS effdate, 
	 rollupv.QUANTITY_USAGE 		AS qty_usage, 
	 rollupv.EXTENDED_COST 			AS extcost, 
	 rollupv.ROLLUPKEY 				AS rollup_key, 
	 CompItemV.ORGANIZATION_ID1596 	AS comp_item_orgid, 
	 CompItemV.INVENTORY_ITEM_ID1 	AS comp_item_id_t,  
	 CompItemV.ORGANIZATION_ID12573 AS comp_org_id_t, 
	 CompItemV.LANGUAGE2554 		AS comp_lang_t,  
	 BaseItemV.ORGANIZATION_ID1596 	AS base_item_org_id,    
     InvOrgV.ORGANIZATION_ID4 		AS inv_org_id,   
	 InvOrgV.EFFECTIVE_START_DATE1 	AS inv_org_eff_st_dt,     
	 InvOrgV.EFFECTIVE_END_DATE1 	AS inv_org_eff_end_dt,      
	 InvOrgV.LANGUAGE1 				AS inv_org_lang,   
     CBookV.COST_ORG_ID1 			AS cost_org_id,   
	 CBookV.EFFECTIVE_START_DATE 	AS cost_eff_st_date,    
     CBookV.EFFECTIVE_END_DATE 		AS cost_eff_end_date,  
	 ScenV.SCENARIO_ID 				AS scenario_id,
	 rollupv.BOM_LEVEL,
	 rollupv.STATUS_CODE,
	 rollupv.POSTED_FLAG,
	 rollupv.DETAIL_SOURCE_TYPE,
	 rollupv.ROLLUP_HEADER_LEVEL
   FROM
	 (SELECT RollUpD.COST_BOOK_ID,  
			RollUpD.COST_ORG_ID,  
			RollUpD.EXTENDED_COST,  
			RollUpD.MATERIAL_INVENTORY_ITEM_ID,  
			RollUpD.ORGANIZATION_ID,  
			RollUpD.QUANTITY_USAGE,  
			RollUpD.ROLLUPKEY,   
			RollUpD.ROOT_ASSEMBLY_ITEM_ID, 
			RollUpD.SCENARIO_ID,     
			RollUpD.UNIT_COST,     
			CstOrgP.VALIDATION_ORGANIZATION_ID ,
			RollUpD.BOM_LEVEL,
			RollUpD.STATUS_CODE,
			RollUpD.POSTED_FLAG,
			RollUpD.DETAIL_SOURCE_TYPE,
			RollUpD.ROLLUP_HEADER_LEVEL
	  FROM CST_INDENTED_ROLLUP_DETAILS_V RollUpD,
			CST_COST_ORGS_V CstOrg, 
			CST_COST_ORG_PARAMETERS CstOrgP 
	  WHERE (RollUpD.COST_ORG_ID = CstOrg.COST_ORG_ID 
			AND RollUpD.COST_ORG_ID = CstOrgP.COST_ORG_ID 
			AND RollUpD.POSTED_FLAG ='Y'
			--AND ( DATE'2022-06-29'  BETWEEN CstOrg.EFFECTIVE_START_DATE AND CstOrg.EFFECTIVE_END_DATE))
			AND ( trunc(nvl(:p_eff_date,sysdate)) BETWEEN CstOrg.EFFECTIVE_START_DATE AND CstOrg.EFFECTIVE_END_DATE))
	 )rollupv
	 
	 ,(SELECT Item.INVENTORY_ITEM_ID,       
			Item.ITEM_NUMBER,        
			Item.ORGANIZATION_ID 		AS ORGANIZATION_ID1596,     
			ItemT.DESCRIPTION 			AS DESCRIPTION2511,        
			ItemT.INVENTORY_ITEM_ID 	AS INVENTORY_ITEM_ID1,    
			ItemT.LANGUAGE 				AS LANGUAGE2554,  
			ItemT.ORGANIZATION_ID 		AS ORGANIZATION_ID12573 
		FROM EGP_SYSTEM_ITEMS_B_V Item,
      		 EGP_SYSTEM_ITEMS_TL_V ItemT 
		WHERE (Item.INVENTORY_ITEM_ID = ItemT.INVENTORY_ITEM_ID 
				AND Item.ORGANIZATION_ID = ItemT.ORGANIZATION_ID AND 'US' = ItemT.LANGUAGE) 
				AND ( ( (Item.TEMPLATE_ITEM_FLAG = 'N' ) ) )
	   ) CompItemV
	 
	 ,(SELECT Item.INVENTORY_ITEM_ID,     
			Item.ITEM_NUMBER,
			Item.ORGANIZATION_ID AS ORGANIZATION_ID1596 
		FROM EGP_SYSTEM_ITEMS_B_V Item 
		WHERE  ( (Item.TEMPLATE_ITEM_FLAG = 'N' ) ) 
	   ) BaseItemV
	 
	 ,(SELECT InvOrgP.ORGANIZATION_ID,        
		InvOrg.EFFECTIVE_END_DATE 		AS EFFECTIVE_END_DATE1, 
		InvOrg.EFFECTIVE_START_DATE 	AS EFFECTIVE_START_DATE1,         
		InvOrg.LANGUAGE 				AS LANGUAGE1,         
		InvOrg.NAME 					AS NAME4, 
		InvOrg.ORGANIZATION_ID 			AS ORGANIZATION_ID4 
	   FROM INV_ORG_PARAMETERS InvOrgP, HR_ORGANIZATION_UNITS_F_TL InvOrg 
	   WHERE InvOrgP.ORGANIZATION_ID = InvOrg.ORGANIZATION_ID(+) 
			AND 'US' = InvOrg.LANGUAGE(+) 
			AND ( trunc(nvl(:p_eff_date,sysdate))  BETWEEN InvOrg.EFFECTIVE_START_DATE(+) AND InvOrg.EFFECTIVE_END_DATE(+))
	   ) InvOrgV
	 
	 ,(SELECT CostOrgBookPEO.COST_BOOK_ID,       
		CostOrgBookPEO.COST_ORG_ID,        
		CstOrg.COST_ORG_ID 	AS COST_ORG_ID1,      
		CstOrg.EFFECTIVE_START_DATE,       
		CstOrg.EFFECTIVE_END_DATE,       
		CstOrg.COST_ORG_NAME 
	   FROM CST_COST_ORG_BOOKS CostOrgBookPEO, CST_COST_ORGS_V CstOrg 
	   WHERE CostOrgBookPEO.COST_ORG_ID = CstOrg.COST_ORG_ID 
			  AND ( trunc(nvl(:p_eff_date,sysdate))  BETWEEN CstOrg.EFFECTIVE_START_DATE AND CstOrg.EFFECTIVE_END_DATE)) CBookV
	 
	 ,(SELECT Scen.EFFECTIVE_START_DATE,  
			Scen.SCENARIO_ID,
			Scen.SCENARIO_NUMBER 
		FROM CST_SCENARIOS Scen) ScenV

   WHERE (rollupv.VALIDATION_ORGANIZATION_ID = CompItemV.ORGANIZATION_ID1596(+) 
			AND rollupv.MATERIAL_INVENTORY_ITEM_ID = CompItemV.	INVENTORY_ITEM_ID(+) 
			AND rollupv.VALIDATION_ORGANIZATION_ID = BaseItemV.ORGANIZATION_ID1596(+) 
			AND rollupv.ROOT_ASSEMBLY_ITEM_ID = BaseItemV.INVENTORY_ITEM_ID(+) 
			AND rollupv.ORGANIZATION_ID = InvOrgV.ORGANIZATION_ID 
			AND rollupv.COST_ORG_ID = CBookV.COST_ORG_ID 
			AND rollupv.COST_BOOK_ID = CBookV.COST_BOOK_ID 
			AND rollupv.SCENARIO_ID = ScenV.SCENARIO_ID) 
			AND CBookV.COST_ORG_NAME = :p_org
			AND ( ScenV.SCENARIO_NUMBER = :p_scenario)   -- 'Canada Rev Rollup' )
   )main), 
	 
main1 AS 
   (SELECT 	sum(D1.c13) as c1,
			min(D1.c15) as c2,
			sum(D1.c16) as c3,
			D1.c4 		as c4,
			D1.c5 		as c5,
			D1.c6 		as c6,
			D1.c7 		as c7,
			D1.c8 		as c8,
			case  when not D1.c14 is null then D1.c14 end  as c9,
			D1.c10 		as c10,
			D1.c11 		as c11,
			D1.c12 		as c12,
			 BOM_LEVEL,STATUS_CODE,POSTED_FLAG   --,DETAIL_SOURCE_TYPE,ROLLUP_HEADER_LEVEL
   FROM main0 D1
   GROUP BY D1.c4,
		D1.c5, 
		D1.c6,
		D1.c7,
		D1.c8, 
		D1.c10,
		D1.c11, 
		D1.c12, 
        case  when not D1.c14 is null then D1.c14 end ,
		 BOM_LEVEL,STATUS_CODE ,POSTED_FLAG   --,DETAIL_SOURCE_TYPE,ROLLUP_HEADER_LEVEL
	)

SELECT  D1.c1 as sort1 ,
 		D1.c3 as cost_org,
		D1.c6 as Scenario1, 
		D1.c7 as scenario_startdate,
		BOM_LEVEL,
		D1.c5 as base_item,
        D1.c2 as component,
		round(D1.c12,4) as unit_cost,
		round(D1.c11,4) as quantity,
		round(D1.c10,4) as extended_cost,
 		D1.c4 as plant,
		D1.c8 as comp_item_id,
		D1.c9 as base_item_id, STATUS_CODE,POSTED_FLAG --,DETAIL_SOURCE_TYPE,ROLLUP_HEADER_LEVEL
FROM  ( SELECT 0 as c1,
			D1.c4 as c2,
			D1.c5 as c3,
			D1.c6 as c4,
			D1.c7 as c5,
			D1.c8 as c6,
			D1.c9 as c7,
			D1.c10 as c8,
			D1.c11 as c9,
			D1.c3 as c10,
			D1.c2 as c11,
			D1.c1 as c12, BOM_LEVEL,STATUS_CODE,POSTED_FLAG --,DETAIL_SOURCE_TYPE,ROLLUP_HEADER_LEVEL
		FROM  main1 D1
	    ORDER BY c3, c6, c4, c5, BOM_LEVEL, c2, c7 
	 )D1
WHERE  1=1 --c5 is not null 
		AND nvl(D1.c8,1) <>D1.c9
		AND BOM_LEVEL in (0,1)
	--	AND rownum <= 75001
---Cost_lov
SELECT CstOrg.COST_ORG_NAME 
	   FROM CST_COST_ORG_BOOKS CostOrgBookPEO, CST_COST_ORGS_V CstOrg 
	   WHERE CostOrgBookPEO.COST_ORG_ID = CstOrg.COST_ORG_ID 
			  AND ( trunc(nvl(:p_eff_date,sysdate))  BETWEEN CstOrg.EFFECTIVE_START_DATE AND CstOrg.EFFECTIVE_END_DATE)
--Scen_lov
SELECT Scen.SCENARIO_NUMBER 
		FROM CST_SCENARIOS Scen
order by 1
---------------------------------------------------------------LU_OM_Open_Order_Status_Report_DM--------------------------------------------------
SELECT DISTINCT
hro.Name Business_Unit,
dha.order_number Order_No,
dline.line_number,
TO_CHAR(dha.creation_date,'DD-MON-YYYY') Ordered_Date,
NVL((select ppnfv.display_name
from PER_PERSON_NAMES_F_V PPNFV
where trunc(sysdate) between PPNFV.EFFECTIVE_START_DATE and PPNFV.EFFECTIVE_END_DATE
AND PPNFV.PERSON_ID = (select person_id from 
				       per_users 
					   where trunc(sysdate) between TRUNC(START_DATE) and NVL(END_DATE,trunc(sysdate))
					   and USERNAME= dha.created_by)),dha.created_by) Created_By,
dfulfil.ordered_uom,
dfulfil.UNIT_SELLING_PRICE UNIT_PRICE ,
dfulfil.ORDERED_QTY Quantity,
(dfulfil.ORDERED_QTY*dfulfil.UNIT_SELLING_PRICE)Total_Amount,
DelDet.currency_code,
(SELECT party_name from hz_parties where party_id=dha.SALESPERSON_ID)Salesperson,
deldet.mode_of_transport shipping_method,
TO_CHAR(dfulfil.ACTUAL_SHIP_DATE,'DD-MON-YYYY')  ACTUAL_SHIP_DATE,
itm.item_number Item,
itm.DESCRIPTION Item_Description,
hr.name warehouse,
dfulfil.STATUS_CODE,
dline.STATUS_CODE line_sts,
(select acct.account_name from hz_cust_accounts acct where acct.cust_account_id = dfulfil.BILL_TO_CUSTOMER_ID) Customer , 
(select acct.account_number from hz_cust_accounts acct where acct.cust_account_id = dfulfil.BILL_TO_CUSTOMER_ID)  Bill_to_Acct_Number,
(SELECT  f.ADDRESS1 ||','||f.ADDRESS2 ||','||f.city ||','||f.state||','||f.PROVINCE||','||f.POSTAL_CODE||','||f.COUNTRY 
FROM    HZ_CUST_ACCT_SITES_ALL c ,
        HZ_CUST_SITE_USES_ALL d  ,
        HZ_PARTY_SITES e         ,
        HZ_LOCATIONs f
WHERE   c.cust_acct_site_id = d.cust_acct_site_id
        AND c.PARTY_SITE_ID     = e.PARTY_SITE_ID
		AND d.site_use_code     = 'SHIP_TO'
        AND e.location_id       = f.location_id
		AND e.party_site_id     = dfulfil.SHIP_TO_PARTY_SITE_ID)ship_to_address,
-------
TO_CHAR(dfulfil.SCHEDULE_SHIP_DATE,'DD-MON-YYYY') SCHEDULE_SHIP_DATE,
(select val.meaning 
FROM fnd_lookup_values val
WHERE val.lookup_type = 'ORA_DOO_ORDER_TYPES' 
AND val.lookup_code = dha.order_type_code
AND val.LANGUAGE = 'US') ORDER_CATEGORY,
(SELECT  ATTRIBUTE_CHAR1		 
FROM DOO_FULFILL_LINES_EFF_B
WHERE CONTEXT_CODE='SourceLineInfo'
AND FULFILL_LINE_ID=dfulfil.FULFILL_LINE_ID) LINE_OF_BUSINESS,
DelDet.SHIPMENT_PRIORITY_CODE SHIPMENT_PRIORITY
-------		
FROM wsh_delivery_details DelDet,
doo_headers_all dha,
DOO_LINES_ALL dline,
DOO_FULFILL_LINES_ALL dfulfil,
EGP_SYSTEM_ITEMS itm,
HR_ALL_ORGANIZATION_UNITS_X hr,
HR_operating_units hro
WHERE 1=1
--AND dha.order_number=211
AND Dha.org_id=deldet.org_id
AND dha.header_id= dline.header_id
AND dha.order_number=deldet.sales_order_number
AND dfulfil.line_id= dline.line_id
AND dfulfil.STATUS_CODE='AWAIT_SHIP'
AND itm.inventory_item_id         = dfulfil.inventory_item_id
and itm.organization_id = dfulfil.inventory_organization_id
AND hro.organization_id=dha.org_id
AND hr.organization_id=deldet.organization_id
AND dfulfil.FULFILL_LINE_ID   = DelDet.SOURCE_SHIPMENT_ID
AND ( hro.organization_id IN (:P_ORGANIZATION_ID)  OR 'All' IN (:P_ORGANIZATION_ID || 'All'))
AND ( dha.created_by IN (:P_CREATED_BY)  OR 'All' IN (:P_CREATED_BY || 'All'))
AND TRUNC(dha.creation_date) BETWEEN TRUNC(:P_ORDER_DATE_FROM) AND TRUNC(:P_ORDER_DATE_TO)
order by hro.Name,dha.order_number,dline.line_number

---lovs
--XXLU_CREATED_BY
select distinct dha.created_by
FROM wsh_delivery_details DelDet,
doo_headers_all dha,
DOO_LINES_ALL dline,
DOO_FULFILL_LINES_ALL dfulfil,
EGP_SYSTEM_ITEMS itm,
HR_ALL_ORGANIZATION_UNITS_X hr,
HR_operating_units hro
WHERE 1=1
AND Dha.org_id=deldet.org_id
AND dha.header_id= dline.header_id
AND dha.order_number=deldet.sales_order_number
AND dfulfil.line_id= dline.line_id
AND dfulfil.STATUS_CODE='AWAIT_SHIP'
AND itm.inventory_item_id         = dfulfil.inventory_item_id
and itm.organization_id = dfulfil.inventory_organization_id
AND hro.organization_id=dha.org_id
AND hr.organization_id=deldet.organization_id
AND dfulfil.FULFILL_LINE_ID   = DelDet.SOURCE_SHIPMENT_ID
order by dha.created_by
--XXLU_ORG
SELECT  OU.NAME,OU.ORGANIZATION_ID
  FROM HR_OPERATING_UNITS OU 
 WHERE 1=1  
       AND OU.ORGANIZATION_ID IN (SELECT DISTINCT ORG_ID FROM FUN_USER_ROLE_DATA_ASGNMNTS WHERE USER_GUID = FND_GLOBAL.USER_GUID)
       AND TRUNC (OU.DATE_TO) >= TRUNC (SYSDATE) 
        ORDER BY 1
---------------------------------------------------------------LU_QM_Equipment_Awaiting_Functional_Inspection_Re-----------------------
/*********************************************************************************************************************
DATA SET NAME : LU_QM_Equipments_Awaiting_Functional_Inspection_Report_DM
DESCRIPTION   : 
NAME        VERSION#         DATE                     DESCRIPTION
----------------------------------------------------------------------------------------------------------------------
Sourav      Original        May 20,2022              Initial Version
**********************************************************************************************************************/
SELECT DISTINCT
hr.name Organization,
itm.item_number,
itm.description item_description,
wwob.item_revision REVISION,
wwob.work_order_number,
isn.serial_number,
imt.subinventory_code,
ilns.STATUS_CODE material_status,
imt.primary_quantity quantity,
wwob.UOM_CODE uom,
TO_CHAR(imt.last_update_date,'DD-MM-YYYY')transaction_date,
imt.last_updated_by Transacted_by,
ect.category_name
FROM   inv_material_txns imt,	   
	   wie_work_orders_b wwob,
	   wis_work_methods_vl workmethodpeo,
	   inv_transaction_lot_numbers itlm,
	   hr_all_organization_units_x hr,
	   egp_system_items itm,
	   INV_SERIAL_NUMBERS isn,
	   inv_material_statuses_tl ilns,
	   egp_categories_b ecb,
	   egp_categories_tl ect,
	   egp_item_categories eic
WHERE  1=1
and UPPER(imt.subinventory_code) LIKE '%PENDING%QC%'
and ilns.STATUS_CODE = 'AFI'
AND ect.category_name LIKE 'FG%Inventory%Equipment%'
AND imt.transaction_source_id = wwob.work_order_id(+)
AND wwob.work_method_id = workmethodpeo.work_method_id
AND imt.transaction_id = itlm.transaction_id(+)
and hr.organization_id=wwob.organization_id
AND itm.inventory_item_id = wwob.inventory_item_id
and itm.organization_id = wwob.organization_id
and imt.transaction_id= isn.last_transaction_id
and ilns.status_id= isn.status_id
AND ect.language = 'US'
AND ect.category_id = ecb.category_id
AND eic.category_id = ecb.category_id
AND eic.INVENTORY_ITEM_ID = itm.inventory_item_id
AND eic.ORGANIZATION_ID = itm.organization_id
--AND wwob.work_order_number ='RR-1239'
Order By work_order_number,item_number,serial_number
---------------------------------------------------------LU_QM_Equipment_Quality_Certificate_DM----------------------------------
SELECT DISTINCT
dha.customer_po_number cust_po_number,
(SELECT  f.ORIG_SYSTEM_REFERENCE||' - '|| f.ADDRESS1 ||','||f.ADDRESS2 ||','||f.city ||','||f.state||','||f.PROVINCE||','||f.POSTAL_CODE||','||f.COUNTRY 
FROM    HZ_CUST_ACCT_SITES_ALL c ,
        HZ_CUST_SITE_USES_ALL d  ,
        HZ_PARTY_SITES e         ,
        HZ_LOCATIONs f
WHERE   c.cust_acct_site_id = d.cust_acct_site_id
        AND c.PARTY_SITE_ID     = e.PARTY_SITE_ID
		AND d.site_use_code     = 'SHIP_TO'
        AND e.location_id       = f.location_id
		AND e.party_site_id     = dfulfil.SHIP_TO_PARTY_SITE_ID)ship_to_address,
itm.DESCRIPTION PRODUCT_NAME,
itm.attribute10 MODEL_NUMBER,
itm.attribute11 SOFTWARE_VERSION,
iut.SERIAL_NUMBER,
(select MAX(TO_CHAR(CREATION_DATE,'DD-MON-YYYY')) 
 from INV_LICENSE_PLATE_NUMBERS 
 where lpn_id = DelDet.parent_lpn_id)  Date_Packed,
/*(select MAX(CREATED_BY)
 from INV_LICENSE_PLATE_NUMBERS 
 where lpn_id = DelDet.parent_lpn_id)  Packed_by,*/
(select ppnfv.display_name
from PER_PERSON_NAMES_F_V PPNFV
where trunc(sysdate) between PPNFV.EFFECTIVE_START_DATE and PPNFV.EFFECTIVE_END_DATE
AND PPNFV.PERSON_ID = (select person_id from 
				       per_users 
					   where trunc(sysdate) between TRUNC(START_DATE) and NVL(END_DATE,trunc(sysdate))
					   and USERNAME= (select MAX(CREATED_BY)
									  from INV_LICENSE_PLATE_NUMBERS 
									  where lpn_id = DelDet.parent_lpn_id) 				   
					   ) )Packed_by,
 (select MAX(TO_CHAR(CREATION_DATE,'DD-MON-YYYY')) 
 from INV_LICENSE_PLATE_NUMBERS 
 where lpn_id = DelDet.parent_lpn_id)  Certificate_Date,
(SELECT DECODE ( 
	(SELECT DECODE(EXECUTABLE_STATUS ,'SUCCEEDED' , (COUNT(*)+1), COUNT(*))
	FROM fusion.ess_request_history r 
	WHERE definition like '%XXLU_QM_EQUIPMENT_QUALITY_CERTIFICATE_REPORT%'
	AND EXECUTABLE_STATUS ='SUCCEEDED'
	GROUP BY EXECUTABLE_STATUS)
	,NULL
	,1
	,(SELECT DECODE(EXECUTABLE_STATUS ,'SUCCEEDED' , (COUNT(*)+1), COUNT(*))
	FROM fusion.ess_request_history r 
	WHERE definition like '%XXLU_QM_EQUIPMENT_QUALITY_CERTIFICATE_REPORT%'
	AND EXECUTABLE_STATUS ='SUCCEEDED'
	GROUP BY EXECUTABLE_STATUS)
	)
FROM DUAL)QA_NUMBER,
itm.item_number Item,
dha.order_number, 
dline.line_number,
dfulfil.ordered_qty Quantity
FROM wsh_delivery_details DelDet,
doo_headers_all dha,
doo_lines_all dline,
doo_fulfill_lines_all dfulfil,
egp_system_items itm,
inv_unit_transactions iut,
inv_serial_numbers isn,
inv_material_statuses_tl imst
WHERE 1=1
--AND dha.order_number='826'
AND dha.submitted_flag= 'Y'
AND iut.inventory_item_id=DelDet.inventory_item_id
AND iut.ORGANIZATION_ID=DelDet.organization_id
and iut.TRANSACTION_ID = DelDet.TRANSACTION_ID
AND iut.inventory_item_id=isn.inventory_item_id
AND iut.organization_id=isn.current_organization_id
and iut.SERIAL_NUMBER = isn.SERIAL_NUMBER
AND dha.header_id= dline.header_id
AND dha.order_number=deldet.sales_order_number
AND Dha.org_id=deldet.org_id
AND dfulfil.line_id= dline.line_id
AND itm.inventory_item_id         = dfulfil.inventory_item_id
and itm.organization_id = dfulfil.inventory_organization_id
AND dfulfil.FULFILL_LINE_ID   = DelDet.SOURCE_SHIPMENT_ID
AND dfulfil.STATUS_CODE='AWAIT_SHIP'
AND isn.STATUS_ID = imst.STATUS_ID
AND imst.STATUS_CODE ='RFS' --	Ready for Shipping
AND imst.LANGUAGE ='US'
AND ((itm.description like '%Q%96%') OR (itm.description like '%Q%16%')
OR( itm.description like '%E%32%') OR (itm.description like '%E%96%'))
AND dha.order_number =:P_ORDER_NO
order by dha.order_number,dline.line_number
--Lovs
--XXLU_SALES_ORDER
SELECT DISTINCT
dha.order_number
FROM wsh_delivery_details DelDet,
doo_headers_all dha,
doo_lines_all dline,
doo_fulfill_lines_all dfulfil,
egp_system_items itm,
inv_unit_transactions iut,
inv_serial_numbers isn,
inv_material_statuses_tl imst
WHERE 1=1
AND dha.submitted_flag= 'Y'
AND iut.inventory_item_id=DelDet.inventory_item_id
AND iut.ORGANIZATION_ID=DelDet.organization_id
and iut.TRANSACTION_ID = DelDet.TRANSACTION_ID
AND iut.inventory_item_id=isn.inventory_item_id
AND iut.organization_id=isn.current_organization_id
and iut.SERIAL_NUMBER = isn.SERIAL_NUMBER
AND dha.header_id= dline.header_id
AND dha.order_number=deldet.sales_order_number
AND Dha.org_id=deldet.org_id
AND dfulfil.line_id= dline.line_id
AND itm.inventory_item_id         = dfulfil.inventory_item_id
and itm.organization_id = dfulfil.inventory_organization_id
AND dfulfil.FULFILL_LINE_ID   = DelDet.SOURCE_SHIPMENT_ID
AND dfulfil.STATUS_CODE='AWAIT_SHIP'
AND isn.STATUS_ID = imst.STATUS_ID
AND imst.STATUS_CODE ='RFS' --	Ready for Shipping
AND imst.LANGUAGE ='US'
AND ((itm.description like '%Q%96%') OR (itm.description like '%Q%16%')
OR( itm.description like '%E%32%') OR (itm.description like '%E%96%'))
order by dha.order_number
-----------------------------------------------------------LU_QM_GeneCount_Quality_Certificate_Report_DM------------------------------------------------
/*********************************************************************************************************************
DATA SET NAME : LU_QM_GeneCount_Quality_Certificate_Report_DM
DESCRIPTION   : 
NAME        VERSION#         DATE                     DESCRIPTION
----------------------------------------------------------------------------------------------------------------------
Sourav      Original        May 17,2022              Intial Version
**********************************************************************************************************************/
SELECT DISTINCT
itm.description product_name, 
itm.attribute10 MODEL_NUMBER,
isn.serial_number,
TO_CHAR(wwob.released_date,'DD-MM-YYYY')released_date,
'Jonathan Clarke' Signed_off_by,
(select ppnfv.display_name
from PER_PERSON_NAMES_F_V PPNFV
where trunc(sysdate) between PPNFV.EFFECTIVE_START_DATE and PPNFV.EFFECTIVE_END_DATE
AND PPNFV.PERSON_ID = (select person_id from 
				       per_users 
					   where trunc(sysdate) between TRUNC(START_DATE) and NVL(END_DATE,trunc(sysdate))
					   and USERNAME= imt.last_updated_by))technician,
(
select (substr(PPNFV.first_name,1,1)||substr(PPNFV.last_name,1,1))
from PER_PERSON_NAMES_F_V PPNFV
where trunc(sysdate) between PPNFV.EFFECTIVE_START_DATE and PPNFV.EFFECTIVE_END_DATE
AND PPNFV.PERSON_ID = (select person_id from 
				       per_users 
					   where trunc(sysdate) between TRUNC(START_DATE) and NVL(END_DATE,trunc(sysdate))
					   and USERNAME= imt.last_updated_by) )CERTIFIED_BY_INITIAL,
TO_CHAR(sysdate,'DD-MM-YYYY')REPORT_RUN_DATE,					   
wwob.work_order_number,
itm.item_number,
-----Attributes---------
isn.N_ATTRIBUTE1 high_speed,
isn.N_ATTRIBUTE2 mid_speed,
isn.N_ATTRIBUTE3 low_speed,
isn.N_ATTRIBUTE4 MagBar_Stop_Pos,
isn.N_ATTRIBUTE5 Tip_Stop_Pos, 
isn.N_ATTRIBUTE6 Shake_Stop_Pos, 
isn.N_ATTRIBUTE7 Magic_Bar_Insert_Pos,
isn.N_ATTRIBUTE8 Magic_End_Offset,
isn.N_ATTRIBUTE9 Anti_drip_plate_Pos, 
isn.N_ATTRIBUTE10 heating_rate,
isn.TIME_SINCE_NEW cooling_rate
------------------------
FROM   inv_material_txns imt,	   
	   wie_work_orders_b wwob,
	   inv_transaction_lot_numbers itlm,
	   egp_system_items itm,
	   INV_SERIAL_NUMBERS isn,
	   inv_transaction_types_tl typ
WHERE  1=1
and imt.transaction_type_id = typ.transaction_type_id
AND typ.transaction_type_id =44
AND typ.language = 'US'
AND imt.transaction_source_id = wwob.work_order_id(+)
AND imt.transaction_id = itlm.transaction_id(+)
AND itm.inventory_item_id = wwob.inventory_item_id
and itm.organization_id = wwob.organization_id
and imt.transaction_id= isn.last_transaction_id
AND ((itm.description like '%Q%96%') OR (itm.description like '%Q%16%')
OR( itm.description like '%E%32%') OR (itm.description like '%E%96%'))
and wwob.work_order_number =:P_ORDER_NO
--AND wwob.work_order_number ='RR-1113'
Order By item_number,serial_number

--Lovs
--XXLU_WORK_ORDER
Select DISTINCT wwob.work_order_number
FROM   inv_material_txns imt,	   
	   wie_work_orders_b wwob,
	   inv_transaction_lot_numbers itlm,
	   egp_system_items itm,
	   INV_SERIAL_NUMBERS isn,
	   inv_transaction_types_tl typ
WHERE  1=1
and imt.transaction_type_id = typ.transaction_type_id
AND typ.transaction_type_id =44
AND typ.language = 'US'
AND imt.transaction_source_id = wwob.work_order_id(+)
AND imt.transaction_id = itlm.transaction_id(+)
AND itm.inventory_item_id = wwob.inventory_item_id
and itm.organization_id = wwob.organization_id
and imt.transaction_id= isn.last_transaction_id
AND ((itm.description like '%Q%96%') OR (itm.description like '%Q%16%')
OR( itm.description like '%E%32%') OR (itm.description like '%E%96%'))
Order by wwob.work_order_number
---------------------------------------------------------------------LU_QM_KIT_Quality_Certificate_DM--------------------------------------------------
--KIT_HEADER
/*********************************************************************************************************************
DATA SET NAME : LU_QM_KIT_Quality_Certificate_DM
DESCRIPTION   : 
NAME          VERSION#         DATE                     DESCRIPTION
----------------------------------------------------------------------------------------------------------------------
Sourav   Original            May 04,2022              Intial Version
**********************************************************************************************************************/
-------Query For KIT Items-------
SELECT DISTINCT
dha.customer_po_number kit_cust_po_number,
(SELECT  f.ORIG_SYSTEM_REFERENCE||' - '|| f.ADDRESS1 ||','||f.ADDRESS2 ||','||f.city ||','||f.state||','||f.PROVINCE||','||f.POSTAL_CODE||','||f.COUNTRY 
FROM    HZ_CUST_ACCT_SITES_ALL c ,
        HZ_CUST_SITE_USES_ALL d  ,
        HZ_PARTY_SITES e         ,
        HZ_LOCATIONs f
WHERE   c.cust_acct_site_id = d.cust_acct_site_id
        AND c.PARTY_SITE_ID     = e.PARTY_SITE_ID
		AND d.site_use_code     = 'SHIP_TO'
        AND e.location_id       = f.location_id
		AND e.party_site_id     = dfulfil.SHIP_TO_PARTY_SITE_ID)KIT_SHIP_TO_ADDRESS,
dfulfil.ordered_qty kit_quantity,
dha.order_number so_num,
dha.org_id,
itm.item_number,
itm.inventory_item_id,
itm.organization_id,
bs.bill_sequence_id
FROM 
doo_headers_all dha,
doo_lines_all dline,
doo_fulfill_lines_all dfulfil,
egp_system_items itm,
egp_categories_b ecb,
egp_categories_tl ect,
egp_item_categories eic,
egp_structures_b  bs
where 1=1
--AND dha.order_number='933'
AND ect.language = 'US'
AND ect.category_id = ecb.category_id
AND ect.category_name LIKE 'FG%Kits%'
AND eic.category_id = ecb.category_id
AND eic.INVENTORY_ITEM_ID = itm.inventory_item_id
AND eic.ORGANIZATION_ID = itm.organization_id
AND bs.PK1_VALUE = itm.inventory_item_id
AND bs.PK2_VALUE = itm.organization_id
AND dha.submitted_flag= 'Y'
AND dha.header_id= dline.header_id
AND dfulfil.line_id= dline.line_id
AND itm.inventory_item_id         = dfulfil.inventory_item_id
and itm.organization_id = dfulfil.inventory_organization_id
AND dfulfil.STATUS_CODE='AWAIT_SHIP'
AND dha.order_number IN (:P_ORDER_NO)
--KIT
/*********************************************************************************************************************
DATA SET NAME : LU_QM_KIT_Quality_Certificate_DM
DESCRIPTION   : 
NAME          VERSION#         DATE                     DESCRIPTION
----------------------------------------------------------------------------------------------------------------------
Sourav   Original            May 6,2022              Intial Version
Sourav   1.0                 May 31,2022             lot_number,lpn_id derivation logic change 
**********************************************************************************************************************/
-------Query For KIT Items-------
SELECT DISTINCT
'Y' KIT_ITEM,
dha.customer_po_number cust_po_number,
(SELECT  f.ORIG_SYSTEM_REFERENCE||' - '|| f.ADDRESS1 ||','||f.ADDRESS2 ||','||f.city ||','||f.state||','||f.PROVINCE||','||f.POSTAL_CODE||','||f.COUNTRY 
FROM    HZ_CUST_ACCT_SITES_ALL c ,
        HZ_CUST_SITE_USES_ALL d  ,
        HZ_PARTY_SITES e         ,
        HZ_LOCATIONs f
WHERE   c.cust_acct_site_id = d.cust_acct_site_id
        AND c.PARTY_SITE_ID     = e.PARTY_SITE_ID
		AND d.site_use_code     = 'SHIP_TO'
        AND e.location_id       = f.location_id
		AND e.party_site_id     = dfulfil.SHIP_TO_PARTY_SITE_ID)ship_to_address,
itm.item_number Item,
itm.DESCRIPTION Item_Description,
/*
(SELECT TO_CHAR(DECODE ( 
	(SELECT DECODE(EXECUTABLE_STATUS ,'SUCCEEDED' , (COUNT(*)+1), COUNT(*))
	FROM fusion.ess_request_history r 
	WHERE definition like '%XXLU_QM_KIT_QUALITY_CERTIFICATE_REPORT%'
	AND EXECUTABLE_STATUS ='SUCCEEDED'
	GROUP BY EXECUTABLE_STATUS)
	,NULL
	,1
	,(SELECT DECODE(EXECUTABLE_STATUS ,'SUCCEEDED' , (COUNT(*)+1), COUNT(*))
	FROM fusion.ess_request_history r 
	WHERE definition like '%XXLU_QM_KIT_QUALITY_CERTIFICATE_REPORT%'
	AND EXECUTABLE_STATUS ='SUCCEEDED'
	GROUP BY EXECUTABLE_STATUS)
	))
FROM DUAL)LOT_NUMBER,*/
'-----' LOT_NUMBER ,
'N/A' NUCLESE,
'PASS' NUCLEIC_ACID_EXTRATION,
'PASS'REAL_TIME_PCR,
(select MAX(TO_CHAR(CREATION_DATE,'DD-MON-YYYY')) 
 from INV_LICENSE_PLATE_NUMBERS 
 where lpn_id = ( Select DelDet.parent_lpn_id 
                  from wsh_delivery_details DelDet
				  where sales_order_number =:so_num
				  and org_id =:org_id
				  AND ROWNUM=1				  
				  )) Date_produced,
/*(SELECT TO_CHAR(min(iln.EXPIRATION_DATE),'DD-MON-YYYY') 
FROM wsh_delivery_details DelDet,
wsh_delivery_assignments wda,
doo_headers_all dha,
doo_lines_all dline,
doo_fulfill_lines_all dfulfil,
egp_system_items itm,
inv_lot_numbers iln
WHERE 1=1
--AND dha.order_number='750'
AND dha.submitted_flag= 'Y'
AND iln.inventory_item_id=DelDet.inventory_item_id
AND iln.organization_id=DelDet.organization_id
and iln.lot_number = DelDet.lot_number
AND DelDet.Delivery_detail_id  = wda.delivery_detail_id
AND dha.header_id= dline.header_id
AND dha.order_number=deldet.sales_order_number
AND Dha.org_id=deldet.org_id
AND dfulfil.FULFILL_LINE_ID   = DelDet.SOURCE_SHIPMENT_ID
AND dfulfil.line_id= dline.line_id
AND itm.inventory_item_id         = dfulfil.inventory_item_id
and itm.organization_id = dfulfil.inventory_organization_id
AND dfulfil.STATUS_CODE='AWAIT_SHIP'
AND dha.order_number =:so_num
AND dha.org_id =:org_id)Best_before_date, */---component item joining
(SELECT TO_CHAR(min(iln.EXPIRATION_DATE),'DD-MON-YYYY')
FROM wsh_delivery_details DelDet,
doo_headers_all dha,
doo_lines_all dline,
doo_fulfill_lines_all dfulfil,
egp_system_items itm,
inv_lot_numbers iln,
inv_material_statuses_tl ilns,
egp_components_b  bc
WHERE 1=1
AND dha.submitted_flag= 'Y'
AND iln.inventory_item_id=DelDet.inventory_item_id
AND iln.organization_id=DelDet.organization_id
and iln.lot_number = DelDet.lot_number
AND dha.header_id= dline.header_id
AND dha.order_number=deldet.sales_order_number
AND Dha.org_id=deldet.org_id
AND dfulfil.line_id= dline.line_id
AND itm.inventory_item_id         = dfulfil.inventory_item_id
and itm.organization_id = dfulfil.inventory_organization_id
AND dfulfil.STATUS_CODE='AWAIT_SHIP'
AND iln.STATUS_ID = ilns.STATUS_ID
AND ilns.STATUS_CODE ='RFS' --	Ready for Shipping
AND ilns.LANGUAGE ='US'
AND dfulfil.FULFILL_LINE_ID   = DelDet.SOURCE_SHIPMENT_ID
AND bc.PK1_VALUE = itm.inventory_item_id
AND bc.PK2_VALUE = itm.organization_id
and bc.bill_sequence_id =:bill_sequence_id
AND dha.order_number =:so_num
AND dha.org_id =:org_id
and itm.organization_id =:organization_id) Best_before_date,
NULL  Date_Packed,
NULL Packed_by,
dha.order_number, 
dha.created_by Created_By,
--dline.line_number,
1 line_number
--dfulfil.ordered_qty Quantity
FROM 
doo_headers_all dha,
doo_lines_all dline,
doo_fulfill_lines_all dfulfil,
egp_system_items itm,
egp_categories_b ecb,
egp_categories_tl ect,
egp_item_categories eic,
egp_structures_b  bs
where 1=1
--AND dha.order_number='750'
AND ect.language = 'US'
AND ect.category_id = ecb.category_id
AND ect.category_name LIKE 'FG%Kits%'
AND eic.category_id = ecb.category_id
AND eic.INVENTORY_ITEM_ID = itm.inventory_item_id
AND eic.ORGANIZATION_ID = itm.organization_id
AND dha.submitted_flag= 'Y'
AND dha.header_id= dline.header_id
AND dfulfil.line_id= dline.line_id
AND itm.inventory_item_id         = dfulfil.inventory_item_id
and itm.organization_id = dfulfil.inventory_organization_id
AND dfulfil.STATUS_CODE='AWAIT_SHIP'
AND bs.PK1_VALUE = itm.inventory_item_id
AND bs.PK2_VALUE = itm.organization_id
and bs.bill_sequence_id =:bill_sequence_id
AND dha.order_number =:so_num
AND dha.org_id =:org_id
and itm.organization_id =:organization_id
-------Query For Component Items-------
UNION
SELECT DISTINCT
'N' KIT_ITEM,
dha.customer_po_number cust_po_number,
(SELECT  f.ORIG_SYSTEM_REFERENCE||' - '|| f.ADDRESS1 ||','||f.ADDRESS2 ||','||f.city ||','||f.state||','||f.PROVINCE||','||f.POSTAL_CODE||','||f.COUNTRY 
FROM    HZ_CUST_ACCT_SITES_ALL c ,
        HZ_CUST_SITE_USES_ALL d  ,
        HZ_PARTY_SITES e         ,
        HZ_LOCATIONs f
WHERE   c.cust_acct_site_id = d.cust_acct_site_id
        AND c.PARTY_SITE_ID     = e.PARTY_SITE_ID
		AND d.site_use_code     = 'SHIP_TO'
        AND e.location_id       = f.location_id
		AND e.party_site_id     = dfulfil.SHIP_TO_PARTY_SITE_ID)ship_to_address,
itm.item_number Item,
itm.DESCRIPTION Item_Description,
iln.LOT_NUMBER,
'PASS'NUCLESE,
'N/A' NUCLEIC_ACID_EXTRATION,
'N/A' REAL_TIME_PCR,
to_char(iln.ORIGINATION_DATE,'dd-mm-yyyy') Date_produced,
to_char(iln.EXPIRATION_DATE,'dd-mm-yyyy') Best_before_date, 
(select MAX(TO_CHAR(CREATION_DATE,'DD-MON-YYYY')) 
 from INV_LICENSE_PLATE_NUMBERS 
 where lpn_id = DelDet.parent_lpn_id)  Date_Packed,
/*(select MAX(CREATED_BY)
 from INV_LICENSE_PLATE_NUMBERS 
 where lpn_id = DelDet.parent_lpn_id)  Packed_by,*/
(select ppnfv.display_name
from PER_PERSON_NAMES_F_V PPNFV
where trunc(sysdate) between PPNFV.EFFECTIVE_START_DATE and PPNFV.EFFECTIVE_END_DATE
AND PPNFV.PERSON_ID = (select person_id from 
				       per_users 
					   where trunc(sysdate) between TRUNC(START_DATE) and NVL(END_DATE,trunc(sysdate))
					   and USERNAME= (select MAX(CREATED_BY)
									  from INV_LICENSE_PLATE_NUMBERS 
									  where lpn_id = DelDet.parent_lpn_id) 				   
					   ) )Packed_by, 
dha.order_number, 
dha.created_by Created_By,
null line_number
--dline.line_number,
--dfulfil.ordered_qty Quantity
FROM wsh_delivery_details DelDet,
doo_headers_all dha,
doo_lines_all dline,
doo_fulfill_lines_all dfulfil,
egp_system_items itm,
inv_lot_numbers iln,
inv_material_statuses_tl ilns,
egp_components_b  bc
WHERE 1=1
--AND dha.order_number='750'
AND dha.submitted_flag= 'Y'
AND iln.inventory_item_id=DelDet.inventory_item_id
AND iln.organization_id=DelDet.organization_id
and iln.lot_number = DelDet.lot_number
AND dha.header_id= dline.header_id
AND dha.order_number=deldet.sales_order_number
AND Dha.org_id=deldet.org_id
AND dfulfil.line_id= dline.line_id
AND itm.inventory_item_id         = dfulfil.inventory_item_id
and itm.organization_id = dfulfil.inventory_organization_id
AND dfulfil.STATUS_CODE='AWAIT_SHIP'
AND iln.STATUS_ID = ilns.STATUS_ID
AND ilns.STATUS_CODE ='RFS' --	Ready for Shipping
AND ilns.LANGUAGE ='US'
AND dfulfil.FULFILL_LINE_ID   = DelDet.SOURCE_SHIPMENT_ID
AND bc.PK1_VALUE = itm.inventory_item_id
AND bc.PK2_VALUE = itm.organization_id
and bc.bill_sequence_id =:bill_sequence_id
AND dha.order_number =:so_num
AND dha.org_id =:org_id
and itm.organization_id =:organization_id
--order by order_number,line_number
order by line_number

--LOVS
--XXLU_SALES_ORDER
SELECT distinct
dha.order_number
FROM 
doo_headers_all dha,
doo_lines_all dline,
doo_fulfill_lines_all dfulfil,
egp_system_items itm,
egp_categories_b ecb,
egp_categories_tl ect,
egp_item_categories eic
where 1=1
AND ect.language = 'US'
AND ect.category_id = ecb.category_id
AND ect.category_name LIKE 'FG%Kits%'
AND eic.category_id = ecb.category_id
AND eic.INVENTORY_ITEM_ID = itm.inventory_item_id
AND eic.ORGANIZATION_ID = itm.organization_id
AND dha.submitted_flag= 'Y'
AND dha.header_id= dline.header_id
AND dfulfil.line_id= dline.line_id
AND itm.inventory_item_id         = dfulfil.inventory_item_id
and itm.organization_id = dfulfil.inventory_organization_id
AND dfulfil.STATUS_CODE='AWAIT_SHIP'
and dha.order_number NOT IN
(SELECT 
dha.order_number
FROM wsh_delivery_details DelDet,
doo_headers_all dha,
doo_lines_all dline,
doo_fulfill_lines_all dfulfil,
egp_system_items itm,
inv_lot_numbers iln,
inv_material_statuses_tl ilns,
egp_components_b  bc
WHERE 1=1
AND dha.submitted_flag= 'Y'
AND iln.inventory_item_id=DelDet.inventory_item_id
AND iln.organization_id=DelDet.organization_id
and iln.lot_number = DelDet.lot_number
AND dha.header_id= dline.header_id
AND dha.order_number=deldet.sales_order_number
AND Dha.org_id=deldet.org_id
AND dfulfil.line_id= dline.line_id
AND itm.inventory_item_id         = dfulfil.inventory_item_id
and itm.organization_id = dfulfil.inventory_organization_id
AND dfulfil.STATUS_CODE='AWAIT_SHIP'
AND iln.STATUS_ID = ilns.STATUS_ID
AND ilns.STATUS_CODE <>'RFS' --	Ready for Shipping
AND ilns.LANGUAGE ='US'
AND dfulfil.FULFILL_LINE_ID   = DelDet.SOURCE_SHIPMENT_ID
AND bc.PK1_VALUE = itm.inventory_item_id
AND bc.PK2_VALUE = itm.organization_id)
AND EXISTS
(SELECT 1
FROM wsh_delivery_details DelDet,
doo_lines_all dline,
doo_fulfill_lines_all dfulfil,
egp_system_items itm,
inv_lot_numbers iln,
inv_material_statuses_tl ilns,
egp_components_b  bc
WHERE 1=1
--AND dha.order_number='750'
AND dha.submitted_flag= 'Y'
AND iln.inventory_item_id=DelDet.inventory_item_id
AND iln.organization_id=DelDet.organization_id
and iln.lot_number = DelDet.lot_number
AND dha.header_id= dline.header_id
AND dha.order_number=deldet.sales_order_number
AND Dha.org_id=deldet.org_id
AND dfulfil.line_id= dline.line_id
AND itm.inventory_item_id         = dfulfil.inventory_item_id
and itm.organization_id = dfulfil.inventory_organization_id
AND dfulfil.STATUS_CODE='AWAIT_SHIP'
AND iln.STATUS_ID = ilns.STATUS_ID
AND ilns.STATUS_CODE ='RFS' --	Ready for Shipping
AND ilns.LANGUAGE ='US'
AND dfulfil.FULFILL_LINE_ID   = DelDet.SOURCE_SHIPMENT_ID
AND bc.PK1_VALUE = itm.inventory_item_id
AND bc.PK2_VALUE = itm.organization_id)
ORDER BY dha.order_number
-------------------------------------------------------------------LU_QM_PBM_Quality_Certificate_Report_DM----------------------------------------------
/*********************************************************************************************************************
DATA SET NAME : LU_QM_PBM_Quality_Certificate_Report_DM
DESCRIPTION   : 
NAME        VERSION#         DATE                     DESCRIPTION
----------------------------------------------------------------------------------------------------------------------
Sourav      Original        May 12,2022              Initial Version
**********************************************************************************************************************/
Select wwob.work_order_number,
itm.item_number,
itm.description product_name,
TO_CHAR(wwob.actual_completion_date,'DD-MM-YYYY')manufactured_date,
TO_CHAR(sysdate,'DD-MM-YYYY')REPORT_RUN_DATE,
(select ppnfv.display_name
from PER_PERSON_NAMES_F_V PPNFV
where trunc(sysdate) between PPNFV.EFFECTIVE_START_DATE and PPNFV.EFFECTIVE_END_DATE
AND PPNFV.PERSON_ID = (select person_id from 
				       per_users 
					   where trunc(sysdate) between TRUNC(START_DATE) and NVL(END_DATE,trunc(sysdate))
					   and USERNAME= wwps.last_updated_by) )technician,
itm.attribute10 MODEL_NUMBER,
wwps.serial_number
from 
wie_work_orders_b wwob,
egp_system_items itm,
wie_wo_product_serials wwps
where 1=1
AND itm.inventory_item_id = wwob.inventory_item_id
and itm.organization_id = wwob.organization_id
and wwps.work_order_id= wwob.work_order_id
and wwps.inventory_item_id = wwob.inventory_item_id
and wwps.organization_id = wwob.organization_id
and wwob.work_order_number =:P_ORDER_NO
--and wwob.WORK_ORDER_NUMBER ='RR-1008' 
Order by serial_number

--LOVS
--XXLU_WORK_ORDER
Select distinct wwob.work_order_number
FROM 
wie_work_orders_b wwob,
egp_system_items itm,
egp_categories_b ecb,
egp_categories_tl ect,
egp_item_categories eic,
wie_wo_product_serials wwps
where 1=1
AND ect.language = 'US'
AND ect.category_id = ecb.category_id
AND ect.category_name LIKE 'FG%Equipment%'
AND eic.category_id = ecb.category_id
and eic.inventory_item_id = itm.inventory_item_id
and eic.organization_id = itm.organization_id
and itm.inventory_item_id = wwob.inventory_item_id
and itm.organization_id = wwob.organization_id
and wwps.work_order_id= wwob.work_order_id
and wwps.inventory_item_id = wwob.inventory_item_id
and wwps.organization_id = wwob.organization_id
Order By wwob.work_order_number

--------------------------------------------------------------LU_QM_PM_Quality_Certificate_Report_DM---------------------------------------------------
/*********************************************************************************************************************
DATA SET NAME : LU_QM_PM_Quality_Certificate_Report_DM
DESCRIPTION   : 
NAME        VERSION#         DATE                     DESCRIPTION
----------------------------------------------------------------------------------------------------------------------
Sourav      Original        May 12,2022              Intial Version
**********************************************************************************************************************/
Select wwob.work_order_number,
itm.item_number,
itm.description product_name,
TO_CHAR(wwob.released_date,'DD-MM-YYYY')released_date,
TO_CHAR(sysdate,'DD-MM-YYYY')REPORT_RUN_DATE,
(select ppnfv.display_name
from PER_PERSON_NAMES_F_V PPNFV
where trunc(sysdate) between PPNFV.EFFECTIVE_START_DATE and PPNFV.EFFECTIVE_END_DATE
AND PPNFV.PERSON_ID = (select person_id from 
				       per_users 
					   where trunc(sysdate) between TRUNC(START_DATE) and NVL(END_DATE,trunc(sysdate))
					   and USERNAME= wwps.last_updated_by) )technician,
wwps.serial_number
from 
wie_work_orders_b wwob,
egp_system_items itm,
wie_wo_product_serials wwps
where 1=1
AND itm.inventory_item_id = wwob.inventory_item_id
and itm.organization_id = wwob.organization_id
and wwps.work_order_id= wwob.work_order_id
and wwps.inventory_item_id = wwob.inventory_item_id
and wwps.organization_id = wwob.organization_id
and wwob.work_order_number =:P_ORDER_NO
--and wwob.WORK_ORDER_NUMBER ='RR-1193'
Order by serial_number

--LOVS
--XXLU_WORK_ORDER
Select distinct wwob.work_order_number
FROM 
wie_work_orders_b wwob,
egp_system_items itm,
egp_categories_b ecb,
egp_categories_tl ect,
egp_item_categories eic,
wie_wo_product_serials wwps
where 1=1
AND ect.language = 'US'
AND ect.category_id = ecb.category_id
AND ect.category_name LIKE 'FG%Equipment%'
AND eic.category_id = ecb.category_id
and eic.inventory_item_id = itm.inventory_item_id
and eic.organization_id = itm.organization_id
and itm.inventory_item_id = wwob.inventory_item_id
and itm.organization_id = wwob.organization_id
and wwps.work_order_id= wwob.work_order_id
and wwps.inventory_item_id = wwob.inventory_item_id
and wwps.organization_id = wwob.organization_id
Order By wwob.work_order_number

---------------------------------------------------LU_QM_Raw_Chemical_Item_Details_Report_DM----------------------------------------------------------
/*********************************************************************************************************************
DATA SET NAME : LU_QM_Raw_Chemical_Item_Details_Report_DM
DESCRIPTION   : 
NAME        VERSION#         DATE                     DESCRIPTION
----------------------------------------------------------------------------------------------------------------------
Sourav      Original        May 24,2022              Initial Version
**********************************************************************************************************************/
SELECT DISTINCT
hr.name Organization,
itm.item_number,
itm.description item_description,
itln.lot_number,
imt.subinventory_code,
imt.TRANSACTION_UOM uom,
(SELECT TO_CHAR(MAX(EXPIRATION_DATE),'DD-MM-YYYY')
 from INV_LOT_NUMBERS iln
 WHERE itln.INVENTORY_ITEM_ID = iln.inventory_item_id
AND itln.ORGANIZATION_ID = iln.organization_id
AND itln.lot_number = iln.lot_number)EXPIRATION_DATE,
NVL(imt.transaction_quantity, 0) Quantity,
TO_CHAR(imt.last_update_date,'DD-MM-YYYY')receipt_date,
(select ppnfv.display_name
from PER_PERSON_NAMES_F_V PPNFV
where trunc(sysdate) between PPNFV.EFFECTIVE_START_DATE and PPNFV.EFFECTIVE_END_DATE
AND PPNFV.PERSON_ID = (select person_id from 
				       per_users 
					   where trunc(sysdate) between TRUNC(START_DATE) and NVL(END_DATE,trunc(sysdate))
					   and USERNAME= imt.last_updated_by)) received_by,
(SELECT party_name 
 from hz_parties where party_id = (select party_id 
                                   from poz_suppliers 
								   where vendor_id = rcv.vendor_id )) vendor,
itm.attribute7 Catalogue_Number,							   
ect.category_name,
typ.transaction_type_name
FROM   inv_material_txns imt,	   	   
	   inv_transaction_lot_numbers itln,
	   hr_all_organization_units_x hr,
	   egp_system_items itm,	   
	   inv_transaction_types_tl typ,
	   egp_categories_b ecb,
	   egp_categories_tl ect,
	   egp_item_categories eic,
	   rcv_transactions rcv
WHERE  1=1
AND UPPER(ect.category_name) LIKE 'RAW%MATERIAL%CHEMICALS'
AND imt.transaction_id = itln.transaction_id(+)
and hr.organization_id=itm.organization_id
AND imt.INVENTORY_ITEM_ID = itm.inventory_item_id
AND imt.ORGANIZATION_ID = itm.organization_id
and imt.transaction_type_id = typ.transaction_type_id
AND UPPER(typ.transaction_type_name) like  'PURCHASE%ORDER%RECEIPT%'
AND typ.language = 'US'
AND ect.language = 'US'
AND ect.category_id = ecb.category_id
AND eic.category_id = ecb.category_id
AND eic.INVENTORY_ITEM_ID = itm.inventory_item_id
AND eic.ORGANIZATION_ID = itm.organization_id
and rcv.transaction_id = imt.rcv_transaction_id
and itm.item_number=:P_ITEM_NUMBER
ORDER BY item_number,lot_number

--LOVS
--XXLU_ITEM_NUMBER
SELECT DISTINCT itm.item_number
 FROM   inv_material_txns imt,	   	   
	   inv_transaction_lot_numbers itln,
	   hr_all_organization_units_x hr,
	   egp_system_items itm,	   
	   inv_transaction_types_tl typ,
	   egp_categories_b ecb,
	   egp_categories_tl ect,
	   egp_item_categories eic,
	   rcv_transactions rcv
WHERE  1=1
AND UPPER(ect.category_name) LIKE 'RAW%MATERIAL%CHEMICALS'
AND imt.transaction_id = itln.transaction_id(+)
and hr.organization_id=itm.organization_id
AND imt.INVENTORY_ITEM_ID = itm.inventory_item_id
AND imt.ORGANIZATION_ID = itm.organization_id
and imt.transaction_type_id = typ.transaction_type_id
AND UPPER(typ.transaction_type_name) like  'PURCHASE%ORDER%RECEIPT%'
AND typ.language = 'US'
AND ect.language = 'US'
AND ect.category_id = ecb.category_id
AND eic.category_id = ecb.category_id
AND eic.INVENTORY_ITEM_ID = itm.inventory_item_id
AND eic.ORGANIZATION_ID = itm.organization_id
and rcv.transaction_id = imt.rcv_transaction_id
ORDER BY item_number

----------------------------------------------------------------LU_QM_Reagent_Awaiting_Functional_Inspection_Rep--------------------------------------------
Select DISTINCT
hr.name Organization,
itm.item_number,
itm.description item_description,
ioqd.lot_number,
ioqd.SUBINVENTORY_CODE,
ilns.STATUS_CODE material_status,
SUM(NVL(ioqd.transaction_quantity, 0)) Quantity,
TO_CHAR(ioqd.DATE_RECEIVED,'DD-MM-YYYY')transaction_date,
ioqd.last_updated_by Transacted_by,
ioqd.TRANSACTION_UOM_CODE uom,
ect.category_name,
NVL(ioqd.revision,0) REVISION
from 
egp_system_items itm,
inv_onhand_quantities_detail ioqd,
hr_all_organization_units_x hr,
inv_lot_numbers iln ,
inv_material_statuses_tl ilns,
egp_categories_b ecb,
egp_categories_tl ect,
egp_item_categories eic
where 1=1
and ioqd.SUBINVENTORY_CODE ='FNC QC LAB'
AND itm.inventory_item_id = ioqd.inventory_item_id
and itm.organization_id = ioqd.organization_id
and hr.organization_id = itm.organization_id
--and ioqd.lot_number='GC-SA-RGT1000'
AND iln.inventory_item_id = ioqd.inventory_item_id
and iln.organization_id = ioqd.organization_id
and iln.lot_number = ioqd.lot_number
AND iln.STATUS_ID = ilns.STATUS_ID
AND ilns.LANGUAGE ='US'
and ilns.STATUS_CODE ='AFI'
and hr.organization_id = itm.organization_id
AND ect.language = 'US'
AND ect.category_id = ecb.category_id
AND ect.category_name IN ('FG Inventory Reagents','WIP Inventory Finished Reagent Components')
--AND ect.category_name LIKE 'FG%Inventory%Reagents%' 
AND eic.category_id = ecb.category_id
AND eic.INVENTORY_ITEM_ID = itm.inventory_item_id
AND eic.ORGANIZATION_ID = itm.organization_id
GROUP BY 
hr.name ,
itm.item_number,
itm.description ,
ioqd.lot_number,
ioqd.SUBINVENTORY_CODE,
TO_CHAR(ioqd.DATE_RECEIVED,'DD-MM-YYYY'),
ioqd.last_updated_by ,
ioqd.TRANSACTION_UOM_CODE,
ect.category_name,
ilns.STATUS_CODE,
NVL(ioqd.revision,0)

----------------------------------------------------LU QM Reagents Quality Certificate DM------------------------------------------------
--LU_sysdate
SELECT NVL(:p_order_number,'All') rpt_order_num,
       to_char( CAST((SYSTIMESTAMP AT TIME ZONE 'CST') AS TIMESTAMP),'DD-MON-YYYY HH24:MI AM','NLS_DATE_LANGUAGE=AMERICAN')||'-'||'CDT' datetime
FROM   dual
--LU_QM_Reagents_Quality_Certificate_DM
/*********************************************************************************************************************
DATA SET NAME : LU_QM_Reagents_Quality_Certificate_DM
DESCRIPTION   : 
NAME          VERSION#         DATE                     DESCRIPTION
----------------------------------------------------------------------------------------------------------------------
Sonia Saini   Original         May 12, 2022             Intial Version
**********************************************************************************************************************/
WITH category as 
(SELECT ect.category_name,
        eic.inventory_item_id,
		eic.organization_id
  FROM egp_item_categories eic,
		egp_category_sets_tl ecst,
		egp_categories_tl ect
  WHERE 1=1
		AND eic.category_set_id = ecst.category_set_id
		AND ecst.language = 'US'
		AND eic.category_id = ect.category_id
		AND ect.language = 'US'
  GROUP BY ect.category_name,
		   eic.inventory_item_id,
		   eic.organization_id
		)
SELECT DISTINCT itm.item_number Item,
                itm.description Item_Description,
                iln.lot_number batch,
                To_char(iln.origination_date, 'DD-MON-YYYY') Date_produced,
                To_char(iln.expiration_date, 'DD-MON-YYYY')  Best_before_date,
--                (SELECT Max(To_char(creation_date, 'DD-MON-YYYY'))
--                 FROM   inv_license_plate_numbers
--                 WHERE  lpn_id = DelDet.parent_lpn_id) Date_Packed, 
--                (SELECT Max(created_by)
--                 FROM   inv_license_plate_numbers
--                 WHERE  lpn_id = DelDet.parent_lpn_id) Packed_by,
				To_char(DelDet.creation_date, 'DD-MON-YYYY') Date_Packed , 
				--DelDet.created_by 
                CreatedByName.DISPLAY_NAME	Packed_by,
				iln.ATTRIBUTE_NUMBER1 atp,
				itm.attribute9 atp_threshhold,
				iln.ATTRIBUTE_NUMBER2 signal_noise,
				itm.attribute10 sn_threshold,
				iln.ATTRIBUTE_NUMBER3 stock_absorbance,
				itm.attribute11 stock_abs_threshold,
				bg_itemeff.brand,
                dha.order_number,
				dha.created_by,
				dline.line_number,
				dfulfil.ordered_qty Quantity
FROM   wsh_delivery_details DelDet,
       doo_headers_all dha,
       doo_lines_all dline,
       doo_fulfill_lines_all dfulfil,
       egp_system_items itm,
       inv_lot_numbers iln,
	   inv_material_statuses_tl ilns1,
       inv_material_statuses_tl ilns,
	   category,
   (select itemeff.inventory_item_id,itemeff.organization_id,
		  itemeff.ATTRIBUTE_CHAR1 line_of_business,
		  itemeff.ATTRIBUTE_CHAR2 brand,
		  itemeff.ATTRIBUTE_CHAR3 revenue_type,
		  itemeff.ATTRIBUTE_CHAR4 is_npi,
		  itemeff.ATTRIBUTE_NUMBER1 test_kit
	 from EGO_ITEM_EFF_B  itemeff
	 WHERE 1 = 1
		   AND context_code ='Business Group') bg_itemeff,
		   PER_USERS CreatedByUser ,
           PER_PERSON_NAMES_F_V CreatedByName
WHERE  1 = 1
       --AND dha.order_number='750'
       AND dha.submitted_flag = 'Y'
       AND dha.header_id = dline.header_id
       AND Dha.org_id = deldet.org_id
       AND dfulfil.line_id = dline.line_id
       AND itm.inventory_item_id = dfulfil.inventory_item_id
       AND itm.organization_id = dfulfil.inventory_organization_id
       AND dfulfil.status_code = 'AWAIT_SHIP'
--lot material status 
       AND itm.DEFAULT_LOT_STATUS_ID = ilns.status_id
       AND ilns.status_code = 'RFS' --  Ready for Shipping
       AND ilns.language = 'US'
--default lot status	   
       AND iln.status_id = ilns1.status_id
       AND ilns1.status_code = 'RFS' --  Ready for Shipping
       AND ilns1.language = 'US'
       AND iln.inventory_item_id = DelDet.inventory_item_id
       AND iln.organization_id = DelDet.organization_id
       AND iln.lot_number = DelDet.lot_number
       AND dha.order_number = deldet.sales_order_number	   
       AND dfulfil.fulfill_line_id = DelDet.source_shipment_id
       AND dha.order_number = :p_order_number
	   AND itm.inventory_item_id = category.inventory_item_id
       AND itm.organization_id = category.organization_id
	   AND category.category_name =  'FG Inventory Reagents'     --'FG Inventory - Reagents'
       AND bg_itemeff.inventory_item_id(+) = itm.inventory_item_id
       AND bg_itemeff.organization_id(+) = itm.organization_id	 
       AND nvl(bg_itemeff.brand,'X') in ('Bell Performance Fuel Pulse','ChampionX AccuCount',
	                            'Chemtreat','Kemira LumiKem','Lumin Ultra','OSP Lifecheck',
								'Suez BioHealth')	 
       AND DelDet.created_by = CreatedByUser.USERNAME(+) 
       AND CreatedByUser.PERSON_ID = CreatedByName.PERSON_ID(+) 								
ORDER  BY order_number,bg_itemeff.brand,line_number

--LOVS
--Order_LOV
WITH category as 
(SELECT ect.category_name,
        eic.inventory_item_id,
		eic.organization_id
  FROM egp_item_categories eic,
		egp_category_sets_tl ecst,
		egp_categories_tl ect
  WHERE 1=1
		AND eic.category_set_id = ecst.category_set_id
		AND ecst.language = 'US'
		AND eic.category_id = ect.category_id
		AND ect.language = 'US'
  GROUP BY ect.category_name,
		   eic.inventory_item_id,
		   eic.organization_id
		)
SELECT DISTINCT to_number(dha.order_number)
FROM   wsh_delivery_details DelDet,
       doo_headers_all dha,
       doo_lines_all dline,
       doo_fulfill_lines_all dfulfil,
       egp_system_items itm,
       inv_lot_numbers iln,
       inv_material_statuses_tl ilns,
	   inv_material_statuses_tl ilns1,
	   category,
   (select itemeff.inventory_item_id,itemeff.organization_id,
		  itemeff.ATTRIBUTE_CHAR1 line_of_business,
		  itemeff.ATTRIBUTE_CHAR2 brand,
		  itemeff.ATTRIBUTE_CHAR3 revenue_type,
		  itemeff.ATTRIBUTE_CHAR4 is_npi,
		  itemeff.ATTRIBUTE_NUMBER1 test_kit
	 from EGO_ITEM_EFF_B  itemeff
	 WHERE 1 = 1
		   AND context_code ='Business Group') bg_itemeff
WHERE  1 = 1
       --AND dha.order_number='750'
       AND dha.submitted_flag = 'Y'
       AND dha.header_id = dline.header_id
       AND Dha.org_id = deldet.org_id
       AND dfulfil.line_id = dline.line_id
       AND itm.inventory_item_id = dfulfil.inventory_item_id
       AND itm.organization_id = dfulfil.inventory_organization_id
       AND dfulfil.status_code = 'AWAIT_SHIP'
--lot material status 
       AND itm.DEFAULT_LOT_STATUS_ID = ilns.status_id
       AND ilns.status_code = 'RFS' --  Ready for Shipping
       AND ilns.language = 'US'
--default lot status	   
       AND iln.status_id = ilns1.status_id
       AND ilns1.status_code = 'RFS' --  Ready for Shipping
       AND ilns1.language = 'US'

       AND iln.inventory_item_id = DelDet.inventory_item_id
       AND iln.organization_id = DelDet.organization_id
       AND iln.lot_number = DelDet.lot_number
       AND dha.order_number = deldet.sales_order_number	   
       AND dfulfil.fulfill_line_id = DelDet.source_shipment_id
	   AND itm.inventory_item_id = category.inventory_item_id
       AND itm.organization_id = category.organization_id
	   AND category.category_name ='FG Inventory Reagents'    --'FG Inventory - Reagents'
	   AND bg_itemeff.inventory_item_id(+) = itm.inventory_item_id
       AND bg_itemeff.organization_id(+) = itm.organization_id	 
       AND nvl(bg_itemeff.brand,'X') in ('Bell Performance Fuel Pulse','ChampionX AccuCount',
	                            'Chemtreat','Kemira LumiKem','Lumin Ultra','OSP Lifecheck',
								'Suez BioHealth')
ORDER  BY to_number(dha.order_number) desc

-------------------------------------------------------------
================================================================================================================================
-----------------AOR SUMMARY REPORT----------------------------------
SELECT hca.account_number
, hzp.party_name account
, rct.trx_number transaction_number
, to_char(ps.trx_date,'MM-DD-YYYY') Transaction_Date
, rct.invoice_currency_code currency_code
, to_char(ps.due_date,'MM-DD-YYYY') Due_Date
, ps.amount_due_original
, ps.amount_due_remaining Total_Due
,(ps.amount_due_original - ps.amount_due_remaining) Outstanding_Amount
,trunc (sysdate) - trunc (ps.due_date) OutStading_Days
,hro.name Business_Unit
FROM ar_payment_schedules_all ps
JOIN hz_cust_accounts hca ON hca.cust_account_id = ps.customer_id
JOIN hz_parties hzp ON hca.party_id = hzp.party_id
JOIN ra_customer_trx_all rct ON ps.customer_trx_id = rct.customer_trx_id
LEFT JOIN ra_cust_trx_types_all rctt ON rct.cust_trx_type_seq_id = rctt.cust_trx_type_seq_id
LEFT JOIN ra_terms term ON ps.term_id = term.term_id
JOIN hr_operating_units hro ON rct.org_id=hro.organization_id
WHERE ps.status = 'OP'
AND ps.class != 'PMT'
AND ps.amount_due_remaining != 0
================================================================================================================
SELECT
PAPF.person_number,
                PPNF.display_name
                person_name,
                To_char(HTRGS.start_time, 'DD-MM-YYYY') ||' to ' || To_char(HTRGS.stop_time, 'DD-MM-YYYY') time_period,
 HTRGS.scheduled_hours,
                HTRGS.recorded_hours,
                HOU.name
                legal_employer,
                HOU1.name
                business_unit,
                abs.absence_hours
FROM
per_all_assignments_m PAAM,
       hwm_tm_rec_grp_sum HTRGS,
       per_all_people_f PAPF,
       per_person_names_f PPNF,
       pay_pay_relationships_dn PPRD,
       pay_payroll_terms PPT,
       pay_assigned_payrolls_dn PAPD,
       pay_all_payrolls_f PAPRF,
       hr_organization_units HOU,
       hr_organization_units HOU1,
       hr_all_organization_units HAOU1,
       (select
ABSH.person_id   person_id,
                                ABSH.time_period,
                                ABSH.OBJECT_NAME,
                                sum(ABSH.absence_hours1) absence_hours
from (SELECT  PAPF.person_id   person_id,
                                time_per.time_period,
                                AVL.start_date_time,
                                avl.OBJECT_NAME,
                                Nvl(AVL.duration_ms_num / ( 1000 * 60 * 60 ), 0)
                                absence_hours1

                FROM   per_all_people_f PAPF,
                       per_all_assignments_f ASN,
                       (SELECT week_start,
                               week_end,
                               time_period
                        FROM   (SELECT To_char(week_start_date, 'DD-MM-YYYY')
                                       || ' to '
                                       || To_char(week_end_date, 'DD-MM-YYYY')
                                       time_period,
                                       Trunc(week_start_date)
                                       week_start,
                                       week_end_date
                                       week_end
                                FROM   ( WITH dates
                            AS (SELECT SYSDATE - 365 + LEVEL - 1
                                       calendar_date,
                                       To_char(( SYSDATE - 365 + LEVEL - 1 ),
                                       'MM')
                                       calendar_month,
                                       To_char(( SYSDATE - 365 + LEVEL - 1 ),
                                       'YYYY')
                                       calendar_year,
                                       To_char(( SYSDATE - 365 + LEVEL - 1 ),
                                       'DY')
                                       calendar_day
                                FROM   dual
                                CONNECT BY LEVEL <= 730)
                       SELECT calendar_month,
                              calendar_year,
                              calendar_day,
                              calendar_date                    week_start_date
                              ,
                              Next_day(calendar_date, '1') - 1 week_end_date
                        FROM   dates
                        WHERE  calendar_day = '1'
                               AND calendar_date BETWEEN SYSDATE - 365 AND
                                                         SYSDATE + 365))
                        WHERE  1 = 1
                               AND Trunc(week_start) >= :p_from_time_period
                               AND Trunc(week_end) <= :p_to_time_period)time_per
                       ,
                       TABLE (
per_availability_details.Get_availability_details(
p_resource_type => 'ASSIGN',
p_resource_id => ASN.assignment_id,
p_period_start => time_per.week_start,
p_period_end => time_per.week_end
                + 1 / 2,
p_include_calevents => 'N', p_include_absence => 'Y') )
                       avl
                WHERE  PAPF.person_id = ASN.person_id
                       AND ASN.assignment_type IN ( 'E', 'C' )
                       AND ASN.assignment_status_type = 'ACTIVE'
                       AND ASN.effective_latest_change = 'Y'
                       AND ASN.primary_flag = 'Y'
                       -- AND Trunc(AVL.start_date_time) BETWEEN
                           -- ASN.effective_start_date AND ASN.effective_end_date
                       AND SYSDATE BETWEEN ASN.effective_start_date AND
                                           ASN.effective_end_date
                       AND SYSDATE BETWEEN PAPF.effective_start_date AND
                                           PAPF.effective_end_date
                       AND AVL.object_type = 'ABS'
                          AND ( ( PAPF.person_number IN ( :p_person_number )
               AND Least(:p_person_number) IS NOT NULL )
              OR Least(:p_person_number) IS NULL )
                       -- AND 								.person_number = Nvl(:p_person_number,
                                                -- PAPF.person_number)
                       AND ASN.assignment_id = AVL.resource_id
                       AND Trunc(AVL.start_date_time) BETWEEN
                           :p_from_time_period AND :p_to_time_period
and EXISTS (
 SELECT APAE.*
 FROM anc_per_abs_entries  APAE
 ,anc_absence_types_f_tl ABTFT
 where 1=1
 -- and APAE.person_id  in (select person_id from per_all_people_f where person_number='128432')
 -- AND APAE.absence_type_id  =300000023880598
 AND APAE.absence_type_id  = ABTFT.absence_type_id
 and APAE.approval_status_cd = 'APPROVED'
 and APAE.absence_status_cd ='SUBMITTED'
 and ABTFT.language = USERENV('LANG')
 and APAE.person_id = asn.PERSON_ID
 and avl.OBJECT_NAME = ABTFT.Name
and to_char(avl.START_DATE_TIME,'DD-MM-YYYY') between TO_CHAR(APAE.START_DATE,'DD-MM-YYYY') and TO_CHAR(APAE.END_DATE,'DD-MM-YYYY')
) ) ABSH
group by ABSH.person_id  ,
ABSH.time_period,
ABSH.OBJECT_NAME) ABS
       
       
WHERE  1 = 1
       AND PAPF.person_number ='128432' --133732
       AND PAPF.person_id = PPNF.person_id
       AND PAPF.person_id = ABS.person_id (+)
       AND PPNF.name_type = 'GLOBAL'
       AND PAPF.person_id = PAAM.person_id
       AND HTRGS.resource_id = PAAM.person_id
       AND PAAM.primary_assignment_flag = 'Y'
       AND PAAM.assignment_type IN ( 'E', 'C' )
       AND PAAM.effective_latest_change = 'Y'
       AND SYSDATE BETWEEN PAAM.effective_start_date AND PAAM.effective_end_date
       AND SYSDATE BETWEEN PAPF.effective_start_date AND PAPF.effective_end_date
       AND PAAM.legal_entity_id = HOU.organization_id
       AND PAAM.business_unit_id = HOU1.organization_id
       AND HAOU1.organization_id(+) = PAAM.organization_id
       AND Trunc(SYSDATE) BETWEEN HAOU1.effective_start_date AND
                                  HAOU1.effective_end_date
         AND PAPF.person_id = PPRD.person_id (+)
       AND PPRD.payroll_relationship_id = PPT.payroll_relationship_id (+)
       AND PPT.payroll_term_id = PAPD.payroll_term_id (+)
       AND PAPD.payroll_id = PAPRF.payroll_id (+)
and abs.time_period     (+)  = (To_char(HTRGS.start_time, 'DD-MM-YYYY') ||' to ' || To_char(HTRGS.stop_time, 'DD-MM-YYYY'))


     AND ( ( HAOU1.name IN ( :p_Department )
               AND Least(:p_Department) IS NOT NULL )
              OR Least(:p_Department) IS NULL )
       AND ( ( HOU.name IN ( :p_legal_emp )
               AND Least(:p_legal_emp) IS NOT NULL )
              OR Least(:p_legal_emp) IS NULL )
       AND ( (SELECT HOU2.name
              FROM   per_org_tree_node_v A,
                     hr_all_organization_units HOU2,
                     hr_org_unit_classifications_f HAOUC
              WHERE  A.organization_id = HOU1.organization_id
                     AND A.depth > 2
                     AND A.parent_organization_id = HOU2.organization_id
                     AND A.tree_code = 'DHGLOBAL1'
                     AND HAOUC.classification_code = 'HCM_DIVISION'
                     AND HOU2.organization_id = HAOUC.organization_id) IN
             ( :p_division )
              OR ( (SELECT HOU2.name
                    FROM   per_org_tree_node_v A,
                           hr_all_organization_units HOU2,
                           hr_org_unit_classifications_f HAOUC
                    WHERE  A.organization_id = HOU1.organization_id
                           AND A.depth > 2
                           AND A.parent_organization_id = HOU2.organization_id
                           AND A.tree_code = 'DHGLOBAL1'
                           AND HAOUC.classification_code = 'HCM_DIVISION'
                           AND HOU2.organization_id = HAOUC.organization_id) IS
                   NULL )
              OR ( Least (:p_division) IS NULL ) )
       AND ( ( HOU1.name IN ( :p_business_unit )
               AND Least(:p_business_unit) IS NOT NULL )
              OR Least(:p_business_unit) IS NULL )

       AND Nvl(PAPRF.payroll_name, 'NULL') = Nvl(:p_payroll_name,
                                             Nvl(PAPRF.payroll_name,
                                             'NULL'))
         AND ( ( PAPF.person_number IN ( :p_person_number )
               AND Least(:p_person_number) IS NOT NULL )
              OR Least(:p_person_number) IS NULL )
                                            
       --AND PAPF.person_number in  Nvl(:p_person_number, PAPF.person_number)
       AND HTRGS.start_time BETWEEN ( :p_from_time_period ) AND (
                                    :p_to_time_period )
       AND ( ( ( CASE
                   WHEN ( ( Nvl(HTRGS.recorded_hours, 0)
                            + Nvl(abs.absence_hours, 0) ) -
                          HTRGS.scheduled_hours ) <>
                        0
                     THEN
                   'Exception'
                   ELSE 'No Exception'
                 END ) IN ( :p_variance_flag )
               AND Least(:p_variance_flag) IS NOT NULL )
              OR Least(:p_variance_flag) IS NULL )
       AND PAPF.person_id IN (SELECT ppslv.person_id
                              FROM   per_person_secured_list_v ppslv
                              UNION
                              SELECT pu.person_id
                              FROM   per_users pu
                              WHERE  pu.username = fnd_global.user_name)
AND ((SELECT haou.name
                    FROM per_org_tree_node_v potnv,
                         hr_all_organization_units haou
                    WHERE potnv.organization_id = hou.organization_id
                        AND potnv.DEPTH = 2
                        AND potnv.parent_organization_id = haou.organization_id
                        AND potnv.tree_code = 'DH_HCM_Global') IN (:p_vertical))
============================================================================================
------------------------------------------------------Account Analysis For Contra Account Report---------------------------------------------------------------------------------
SELECT   &P_HINT_CLAUSE
    	LGR.NAME		LEDGER_NAME,
	LGR.CURRENCY_CODE	LEDGER_CURRENCY,
	LGR.LEDGER_ID		LEDGER_ID,
	GLB.JE_BATCH_ID		BATCH_ID,
    	GLB.NAME		BATCH_NAME,
	GLB.DESCRIPTION		BATCH_DESC,
	GLB.STATUS		BATCH_STATUS_CODE,
     	GLB.POSTED_DATE		BATCH_POSTED_DATE,
     	GLB.DEFAULT_PERIOD_NAME	BATCH_PERIOD_NAME,
     	to_char(GLB.DEFAULT_EFFECTIVE_DATE, 'YYYY-MM-DD"T"HH24:MI:SS') BATCH_EFFECTIVE_DATE,
        GLB.ACTUAL_FLAG			ACTUAL_FLAG,
	GLB.AVERAGE_JOURNAL_FLAG	AVERAGE_JOURNAL_FLAG,
	GLB.APPROVAL_STATUS_CODE	APPROVAL_STATUS_CODE,
	/*GLB.BUDGETARY_CONTROL_STATUS	BUD_CONTROL_STATUS,*//*commented by rchandan for fusion*/
	GLB.RUNNING_TOTAL_DR	BATCH_TOT_DR,
	GLB.RUNNING_TOTAL_CR	BATCH_TOT_CR,
	GLB.RUNNING_TOTAL_ACCOUNTED_DR	BATCH_TOT_ACC_DR,
	GLB.RUNNING_TOTAL_ACCOUNTED_CR	BATCH_TOT_ACC_CR,
	GLB.DATE_CREATED	BATCH_DATE_CREATED,
        GLB.CREATED_BY          BATCH_CREATED_BY,
        GLB.CREATION_DATE       BATCH_CREATION_DATE,
        GLB.LAST_UPDATED_BY     BATCH_LAST_UPDATED_BY,
        GLB.LAST_UPDATE_DATE    BATCH_LAST_UPDATE_DATE,
        GLB.LAST_UPDATE_LOGIN   BATCH_LAST_UPDATE_LOGIN,
        NVL(gl_journals_rpt_pkg.get_action_user(GLB.je_batch_id, 'CREATED'), GLB.created_by)	BATCH_CREATED_BY_NAME,
        DECODE(GLB.status, 'P', gl_journals_rpt_pkg.get_action_user(GLB.je_batch_id, 'POSTED'), null)	BATCH_POSTED_BY,
        DECODE(GLB.approval_status_code, 'A', gl_journals_rpt_pkg.get_action_user(GLB.je_batch_id, 'APPROVED'), null)	BATCH_APPROVED_BY,
	GLH.JE_HEADER_ID	HDR_ID,
	GLH.NAME		HDR_NAME,
	GLH.DESCRIPTION		HDR_DESC,
	GLH.TAX_STATUS_CODE	TAX_STATUS_CODE,
	GLH.RUNNING_TOTAL_DR	HDR_TOT_DR,
	GLH.RUNNING_TOTAL_CR	HDR_TOT_CR,
	GLH.RUNNING_TOTAL_ACCOUNTED_DR	HDR_TOT_ACC_DR,
	GLH.RUNNING_TOTAL_ACCOUNTED_CR	HDR_TOT_ACC_CR,
	GLH.CURRENCY_CODE 	HDR_CURR_CODE, 
	to_char(GLH.CURRENCY_CONVERSION_DATE, 'YYYY-MM-DD"T"HH24:MI:SS') HDR_CONVERSION_DATE, /*rchandan*/
	ROUND(GLH.CURRENCY_CONVERSION_RATE, 6)	HDR_CONVERSION_RATE, /*rchandan*/
	DECODE(GLH.CURRENCY_CONVERSION_TYPE, NULL, NULL, (SELECT d.user_conversion_type FROM GL_DAILY_CONVERSION_TYPES d WHERE d.conversion_type = GLH.currency_conversion_type))	HDR_CONVERSION_TYPE,
	/*GLH.BUDGET_VERSION_ID	BUDGET_VERSION_ID,*//*commented by rchandan for fusion*/
	/*GLH.ENCUMBRANCE_TYPE_ID	ENCUMBRANCE_TYPE_ID,*//*commented by rchandan for fusion*/
	GLH.EXTERNAL_REFERENCE	HDR_EXTREFERENCE,
	GLH.LAST_UPDATE_DATE	HDR_LAST_UPDATE_DATE,
	to_char(GLH.DEFAULT_EFFECTIVE_DATE, 'YYYY-MM-DD"T"HH24:MI:SS') HDR_EFF_DATE,
--        GLH.DOC_SEQUENCE_ID          DOC_SEQ_ID,
--	DOCSEQ.NAME		DOC_SEQ_NAME,
--	GLH.DOC_SEQUENCE_VALUE	DOC_SEQ_VALUE,
	GLH.LAST_UPDATED_BY		HDR_LAST_UPDATED_BY, /*rallamse bug 11729375 : replaced PPN.FULL_NAME*/
	FSV1.HEADER_NAME	ACCOUNTING_SEQ_NAME,
	FSV1.VERSION_NAME	ACCOUNTING_SEQ_VERSION,
	GLH.POSTING_ACCT_SEQ_VALUE	ACCOUNTING_SEQ_NUMBER,
	FSV2.HEADER_NAME	REPORTING_SEQ_NAME,
	FSV2.VERSION_NAME	REPORTING_SEQ_VERSION,
	GLH.CLOSE_ACCT_SEQ_VALUE	REPORTING_SEQ_NUMBER,
	to_char(GLH.REFERENCE_DATE, 'YYYY-MM-DD"T"HH24:MI:SS') REFERENCE_DATE,
	GJS.USER_JE_SOURCE_NAME	HDR_SOURCE,
	GJC.USER_JE_CATEGORY_NAME	HDR_CATEGORY,
        LE.NAME	LEGAL_ENTITY_NAME,
	GLL.JE_LINE_NUM		JE_LINE_NUM,
	GLL.CURRENCY_CODE 	LINE_CURR_CODE, /*rchandan*/
	to_char(GLL.CURRENCY_CONVERSION_DATE, 'YYYY-MM-DD"T"HH24:MI:SS') LINE_CONVERSION_DATE, /*rchandan*/
	ROUND(GLL.CURRENCY_CONVERSION_RATE, 6)	LINE_CONVERSION_RATE, /*rchandan*/
	DCT.USER_CONVERSION_TYPE	LINE_CONVERSION_TYPE,
	GLL.TAX_CODE_ID		TAX_CODE_ID,
	GLL.TAX_TYPE_CODE	TAX_TYPE_CODE,
	GLL.DESCRIPTION		LINE_DESC,
	GLL.ENTERED_DR		ENTERED_DR,
	GLL.ENTERED_CR		ENTERED_CR,
	GLL.ACCOUNTED_DR	ACCOUNTED_DR,
	GLL.ACCOUNTED_CR	ACCOUNTED_CR,
        (NVL(ACCOUNTED_DR,0)-NVL(ACCOUNTED_CR,0)) ACCOUNTED_NET,
	GLL.STAT_AMOUNT		STAT_AMOUNT,
	to_char(GLL.EFFECTIVE_DATE, 'YYYY-MM-DD"T"HH24:MI:SS') EFFECTIVE_DATE,
	GLL.REFERENCE_1		REFERENCE1,
	GLL.REFERENCE_2		REFERENCE2,
	GLL.REFERENCE_3		REFERENCE3,
	GLL.REFERENCE_4		REFERENCE4,
	GLL.REFERENCE_5		REFERENCE5,
	GLL.REFERENCE_6		REFERENCE6,
	GLL.REFERENCE_7		REFERENCE7,
	GLL.REFERENCE_8		REFERENCE8,
	GLL.REFERENCE_9		REFERENCE9,
	GLL.REFERENCE_10	REFERENCE10,
	SUBDOCSEQ.NAME		SUB_DOC_SEQ_NAME,
        GLL.SUBLEDGER_DOC_SEQUENCE_ID SUB_DOC_SEQ_ID,
	GLL.SUBLEDGER_DOC_SEQUENCE_VALUE	SUB_DOC_SEQ_VAL,
	RECON.JGZZ_RECON_REF	RECON_REF,
	GL_JOURNALS_EXP_RPT_PKG.get_lookup_value('M', RECON.JGZZ_RECON_STATUS, 'ORA_GL_LINE_RECON_STATUS') RECON_STATUS,
	RECON.JGZZ_RECON_ID	RECON_ID,
	to_char(RECON.JGZZ_RECON_DATE, 'YYYY-MM-DD"T"HH24:MI:SS') RECON_DATE,
	GL_JOURNALS_EXP_RPT_PKG.get_lookup_value('M', GLB.ACTUAL_FLAG, 'BATCH_TYPE') BATCH_TYPE,
	DECODE(GLB.STATUS,
		'P', GL_JOURNALS_EXP_RPT_PKG.get_lookup_value('M', GLB.STATUS, 'MJE_BATCH_STATUS'),
		'I', GL_JOURNALS_EXP_RPT_PKG.get_lookup_value('M', GLB.STATUS, 'MJE_BATCH_STATUS'),
		'S', GL_JOURNALS_EXP_RPT_PKG.get_lookup_value('M', GLB.STATUS, 'MJE_BATCH_STATUS'),
		'U', GL_JOURNALS_EXP_RPT_PKG.get_lookup_value('M', GLB.STATUS, 'MJE_BATCH_STATUS'),
		'u', GL_JOURNALS_EXP_RPT_PKG.get_lookup_value('M', GLB.STATUS, 'MJE_BATCH_STATUS'),
		NVL(ERROR_MESSAGE, GL_JOURNALS_EXP_RPT_PKG.get_lookup_value('M', GLB.STATUS, 'MJE_BATCH_STATUS'))) BATCH_STATUS,
	GL_JOURNALS_EXP_RPT_PKG.get_lookup_value('M', GLB.APPROVAL_STATUS_CODE, 'JE_BATCH_APPROVAL_STATUS') APPROVAL_STATUS,
	GL_JOURNALS_EXP_RPT_PKG.get_lookup_value('M', GLB.AVERAGE_JOURNAL_FLAG, 'AB_JOURNAL_TYPE') JRNL_TYPE,
        GL_JOURNALS_EXP_RPT_PKG.funds_status(GLB.funds_status_code) FUNDS_STATUS,
	GL_JOURNALS_EXP_RPT_PKG.get_lookup_value('M', GLH.TAX_STATUS_CODE, 'TAX_STATUS') TAX_STATUS,
	GL_JOURNALS_EXP_RPT_PKG.get_lookup_value('M', GLL.TAX_TYPE_CODE, 'TAX_TYPE') TAX_TYPE,
	GL_JOURNALS_EXP_RPT_PKG.tax_code(GLL.TAX_CODE_ID, GLL.TAX_TYPE_CODE) TAX_CODE,
	DECODE(:P_ACTUAL_FLAG, 'A', NULL, 'E', NVL(:PARAM_ENCUMBRANCE_TYPE, GL_JOURNALS_EXP_RPT_PKG.enc_type(GLH.ENCUMBRANCE_TYPE_ID))) ENCUMBRANCE_TYPE,
	&ACCOUNT ACCOUNT,
	&ACCOUNT_DESC ACCOUNT_DESC,
	&BALANCING_SEGMENT_VALUE	BALANCING_SEGMENT_VALUE,
	&BALANCING_SEGMENT_DESC		BALANCING_SEGMENT_DESC,
	&NATURAL_ACCT_SEGMENT_VAL	NATURAL_ACCT_SEGMENT_VAL,
	&NATURAL_ACCT_SEGMENT_DESC	NATURAL_ACCT_SEGMENT_DESC,
	&COST_CENTER_SEGMENT_VALUE	COST_CENTER_SEGMENT_VALUE,
	&COST_CENTER_SEGMENT_DESC	COST_CENTER_SEGMENT_DESC,
	DECODE(:P_SEC_SEG_NUM, null, null, &ADDITIONAL_SEGMENT_VALUE)	ADDITIONAL_SEGMENT_VALUE,
	DECODE(:P_SEC_SEG_NUM, null, null, &ADDITIONAL_SEGMENT_DESC)	ADDITIONAL_SEGMENT_DESC,
	GL_JOURNALS_EXP_RPT_PKG.contra_acct_value(GLH.JE_HEADER_ID, GLL.SUBLEDGER_DOC_SEQUENCE_ID, GLL.SUBLEDGER_DOC_SEQUENCE_VALUE, GLL.ACCOUNTED_DR, GLL.ACCOUNTED_CR) CONTRA_ACCT_VALUE,
	GL_JOURNALS_EXP_RPT_PKG.contra_acct_desc(GLH.JE_HEADER_ID, GLL.SUBLEDGER_DOC_SEQUENCE_ID, GLL.SUBLEDGER_DOC_SEQUENCE_VALUE, GLL.ACCOUNTED_DR, GLL.ACCOUNTED_CR) CONTRA_ACCT_DESC,
        GL_JOURNALS_EXP_RPT_PKG.begin_balance(&BALANCING_SEGMENT_VALUE,&NATURAL_ACCT_SEGMENT_VAL,DECODE(:P_SEC_SEG_NUM, null, null, &ADDITIONAL_SEGMENT_VALUE), LGR.LEDGER_ID, GLB.STATUS, GLH.ENCUMBRANCE_TYPE_ID) BEGIN_BALANCE
FROM
  &P_PERF_FROM
  &P_JOURNAL_FROM_CLAUSE
  &P_LEDGER_FROM
WHERE 
    fsv1.seq_version_id(+) = glh.posting_acct_seq_version_id
AND fsv2.seq_version_id(+) = glh.close_acct_seq_version_id
AND le.legal_entity_id (+) = glh.legal_entity_id
AND recon.je_header_id (+) = gll.je_header_id
AND recon.je_line_num (+) = gll.je_line_num
AND GLH.LEDGER_ID = LGR.LEDGER_ID
&P_LEDGER_WHERE
AND GLH.JE_SOURCE = GJS.JE_SOURCE_NAME
AND GLH.JE_CATEGORY  =  GJC.JE_CATEGORY_NAME
--  AND  GLH.LAST_UPDATED_BY = PP.USERNAME /*rallamse bug 11729375*/
--  AND ppn.person_id = pp.person_id       /*rallamse bug 11729375*/
AND GLB.JE_BATCH_ID = GLH.JE_BATCH_ID
--AND GLH.DOC_SEQUENCE_ID = DOCSEQ.DOC_SEQUENCE_ID(+)
AND GLL.SUBLEDGER_DOC_SEQUENCE_ID = SUBDOCSEQ.DOC_SEQUENCE_ID(+)
AND DCT.CONVERSION_TYPE  = GLL.CURRENCY_CONVERSION_TYPE /*rchandan*/ 
&P_POSTING_STATUS
&P_HEADER_POSTING_STATUS
&P_DAS_WHERE
&P_CURRENCY_WHERE
&P_ACTUAL_TYPE_WHERE
&P_BATCH_WHERE
&P_SOURCE_WHERE
&P_CATEGORY_WHERE
and &P_BAL_WHERE
--&P_DOC_ID_WHERE
--&P_DOC_VAL_WHERE
&P_SUB_DOC_ID_WHERE
&P_SUB_DOC_VAL_WHERE
&P_NOT_ZERO_LINE_WHERE
&P_PERIOD_WHERE
&P_CONTRA_ACCOUNT_WHERE
&P_JOURNAL_DATE_WHERE
&P_JOURNAL_UPD_DATE_WHERE
&P_JOURNAL_LAST_UPD_WHERE
AND &P_AFF_WHERE
AND &FLEXDATA_SECURE = 'N'
&P_AMOUNT_WHERE
&P_JOURNAL_WHERE_CLAUSE
&P_LE_WHERE_CLAUSE
&ACCT_ANAL_ORDERBY
======================================================================================
SELECT :p_ledger_name ledger_name_dsp,
       :p_legal_entity_name legal_entity_name_dsp,
       amt.meaning include_zero_amt_lines,
       trx.meaning include_user_trx_id,
       stat.meaning include_stat_amt_lines,
       act.meaning include_acct_with_no_act,
       enc.meaning balance_type_dsp
FROM   fnd_languages lang,
       fnd_lookup_values_tl amt, 
       fnd_lookup_values_tl trx,
       fnd_lookup_values_tl stat,
       fnd_lookup_values_tl act,
       fnd_lookup_values_tl enc
WHERE lang.language_code = userenv('LANG')
AND   amt.view_application_id(+) = 602
AND   amt.set_id(+) = 0
AND   amt.lookup_type(+) = 'XLA_YES_NO'
AND   amt.lookup_code(+) = :P_INCLUDE_ZERO_AMOUNT_LINES
AND   amt.language(+) = lang.language_code
AND   trx.view_application_id(+) = 602
AND   trx.set_id(+) = 0
AND   trx.lookup_type(+) = 'XLA_YES_NO'
AND   trx.lookup_code(+) = :P_INCLUDE_USER_TRX_ID_FLAG
AND   trx.language(+) = lang.language_code
AND   stat.view_application_id(+) = 602
AND   stat.set_id(+) = 0
AND   stat.lookup_type(+) = 'XLA_YES_NO'
AND   stat.lookup_code(+) = :P_INCLUDE_STAT_AMOUNT_LINES
AND   stat.language(+) = lang.language_code
AND   act.view_application_id(+) = 602
AND   act.set_id(+) = 0
AND   act.lookup_type(+) = 'XLA_YES_NO'
AND   act.lookup_code(+) = :P_INCLUDE_ACCT_WITH_NO_ACT
AND   act.language(+) = lang.language_code
AND   enc.view_application_id(+) = 602
AND   enc.set_id(+) = 0
AND   enc.lookup_type(+) = 'XLA_BALANCE_TYPE'
AND   enc.lookup_code(+) = :P_BALANCE_TYPE_CODE
AND   enc.language(+) = lang.language_code
==========================================================================================
--ACCOUNT ANALYSIS

SELECT 
      (SELECT gjs.user_je_source_name
        FROM gl_je_sources_tl          gjs
        WHERE gjs.je_source_name                  = gl_trxn.je_source
        AND gjs.source_lang                     = USERENV('LANG')
      )                                 AS "Source"
     ,(
      SELECT gjct.user_je_category_name
      FROM gl_je_categories_tl       gjct
      WHERE gl_trxn.je_category                     = gjct.je_category_name
      AND gjct.source_lang                    = USERENV('LANG')
      )                                 AS "Category"
     ,functional_currency_code          AS "Functional Currency"
     ,journal_batch_name                AS "Batch Name"
     ,Acct_Flexfield                    AS "Account Flexfield"
     ,line_description                  AS "Description"
     ,accounting_class_code             AS "Account Class"
     ,entered_currency                  AS "Entered Currency"
     ,entered_dr                        AS "Entered Debit"
     ,entered_cr                        AS "Entered Credit"
     ,accounted_dr                      AS "Accounted Debit"
     ,accounted_cr                      AS "Accounted Credit"
     ,sales_amount                      AS "Sales Amount"
     ,posted_date                       AS "Posted date"
     ,accounting_date                   AS "Accounting Date"
     ,invoice_number                    AS "AR Invoice Number"
     ,batch_source                      AS "AR Batch Source"
     ,trx_type                          AS "AR transaction Type"
     ,customer_code                     AS "Customer Code"
     ,bill_to_cust_name                 AS "Bill To Customer"
     ,invoice_date                      AS "AR invoice Date"
     ,debitor_acct                      AS "AR Debtor Account"
     ,payment_method                    AS "Payment method"
     ,source_trxn_reference             AS "Source TRX Reference"
     --,sales_order_number                AS "Sales Order No"
     ,sales_order_number                AS "DOO No"
     ,serial_number                     AS "Serial Number"
     ,promo_code                        AS "Promo Code"
     ,sales_channel                     AS "Sales Channel"
     ,item_class_name                   AS "Item Class"
     ,revenue_type                      AS "Revenue Type"
     ,offer_type                        AS "Offer Type"
     ,subscriber_type                   AS "Subscriber Type"
     ,customer_type                     AS "Customer Type"
     ,quantity_invoiced                 AS "Quantity"
     ,item_code                         AS "Item Code"
     ,item_description                  AS "Item Description"
     ,unit_selling_price                AS "AR Unit Price"
     ,package_code                      AS "Package Code"
     ,package_description               AS "Package Description"
 FROM (
            --a)AR Transactions posted to GL (with subledger reference)
        SELECT 
                gjh.je_source
               ,gjh.je_category
               ,Ledger.currency_code                                      functional_currency_code
               ,gjb.name                                                  journal_batch_name
               ,(FND_FLEX_XML_PUBLISHER_APIS.PROCESS_KFF_COMBINATION_1
                 ('FLEXFIELD','GL','GL#',gcc.chart_of_accounts_id,
                         NULL,gcc.code_combination_id,'ALL','Y','VALUE')
                )                                                         Acct_Flexfield
               ,gjl.description                                           line_description
               ,xl.currency_code                                          entered_currency         
               ,xd.unrounded_entered_dr                                   entered_dr   
               ,xd.unrounded_entered_cr                                   entered_cr
               ,xd.unrounded_accounted_dr                                 accounted_dr
               ,xd.unrounded_accounted_cr                                 accounted_cr
               ,ra_trx.sales_amount                                       sales_amount
           ,TO_CHAR(CAST(FROM_TZ(CAST(gjb.posted_date AS TIMESTAMP), 'UTC') 
                                       AT TIME ZONE 'Asia/Kuala_Lumpur'  AS DATE),'DD/MM/YYYY HH24:MI',
                               'nls_date_language=English')               posted_date
             ,TO_CHAR(TRUNC(CAST(FROM_TZ(CAST(xlah.accounting_date AS TIMESTAMP), 'UTC') 
                                       AT TIME ZONE 'Asia/Kuala_Lumpur'  AS DATE)), 'DD-Mon-YY',                          
                                                  'nls_date_language=English')         accounting_date
               ,ra_trx.invoice_number                                     invoice_number
               ,ra_trx.batch_source                                       batch_source
               ,ra_trx.trx_type                                           trx_type
               ,(SELECT account_number 
                 FROM hz_cust_accounts hca 
                 WHERE hca.cust_account_id=NVL(ra_trx.bill_to_customer_id, ra_trx.sold_to_customer_id) 
                  AND hca.status='A')                                    customer_code
                      , (SELECT party_name
                           FROM hz_parties hp
                               ,hz_cust_accounts hca
                         WHERE hca.cust_account_id=NVL(ra_trx.bill_to_customer_id, ra_trx.sold_to_customer_id) 
                           AND hca.status='A'
                           AND hp.party_id = hca.party_id
                           AND hp.status= 'A')                       bill_to_cust_name
               ,ra_trx.invoice_date                                       invoice_date
               ,(SELECT MAX(FND_FLEX_XML_PUBLISHER_APIS.PROCESS_KFF_COMBINATION_1
                                   ('FLEXFIELD','GL','GL#',gcc1.chart_of_accounts_id,
                                      NULL,gcc1.code_combination_id,'ALL','Y','VALUE')
                           )
                 FROM xla_ae_lines xal,
                      gl_code_combinations gcc1
                 WHERE xal.code_combination_id   = gcc1.code_combination_id
                   AND xal.ae_header_id          = xd.ae_header_id
                   AND xal.accounting_class_code = 'RECEIVABLE'
                )                                                         debitor_acct
               ,ra_trx.payment_method                                     payment_method
               ,ra_trx.source_trxn_reference                              source_trxn_reference
               ,ra_trx.sales_order_number                                 sales_order_number
               ,ra_trx.serial_number                                      serial_number
               ,ra_trx.promo_code                                         promo_code
               ,ra_trx.item_code                                          item_code
               ,ra_trx.item_description                                   item_description
               --,ra_trx.sales_channel                                      sales_channel
               ,DECODE(ra_trx.sales_channel, 'MSA/POS',
                                             SUBSTR(batch_source, 1, 3)
                                           , ra_trx.sales_channel
                      )                                                   sales_channel
               ,ra_trx.item_class_name                                    item_class_name
               ,ra_trx.revenue_type                                       revenue_type
               --,ra_trx.customer_type                                      customer_type
               ,(SELECT flv.description
                        FROM fnd_lookup_values flv
                      WHERE flv.lookup_type ='CUSTOMER_TYPE_FOR_CHANNEL'
                        AND flv.enabled_flag = 'Y'
                        AND NVL(flv.end_date_active, TRUNC(SYSDATE)) >= TRUNC(SYSDATE)
                        AND flv.meaning = UPPER(ra_trx.sales_channel)
                      )                                                  customer_type
               --,ra_trx.quantity_invoiced                                  quantity_invoiced
               ,CASE
                    WHEN INSTR (UPPER(gjh.je_category), 'CREDIT MEMO') > 0
                        AND ra_trx.batch_source_type <> 'INV' --Non-Manual CM
                     THEN ra_trx.quantity_credited
                ELSE
                    ra_trx.quantity_invoiced --for Manual CM/ AR invoices
                END                                                       quantity_invoiced
               ,ra_trx.unit_selling_price                                 unit_selling_price
               ,ra_trx.package_code                                       package_code
               ,ra_trx.package_description                                package_description
               ,ra_trx.offer_type                                         offer_type
               ,ra_trx.subscriber_type                                    subscriber_type
               ,gjh.je_header_id                                          je_header_id
               ,gjl.je_line_num                                           je_line_num
               ,Ledger.name                                               ledger_name
               ,gjh.period_name                                           je_period_name
               ,gjh.default_effective_date                                je_effective_date
               ,gjh.name                                                  je_name
               ,gjl.gl_sl_link_id                                         gl_sl_link_id
               ,ledger.ledger_id                                          ledger_id
               ,ra_trx.line_trx_context                                   line_trx_context
               ,ra_trx.customer_trx_id                                    customer_trx_id
               ,ra_trx.customer_trx_line_id                               customer_trx_line_id
               ,ra_trx.cust_trx_line_gl_dist_id                           cust_trx_line_gl_dist_id
               ,(SELECT xlk.meaning FROM xla_lookups  xlk
                    WHERE xlk.lookup_type = 'XLA_ACCOUNTING_CLASS'
                      AND xlk.lookup_code = xl.accounting_class_code)     accounting_class_code
        FROM
        (
         WITH dfleb AS
         
         (
         SELECT dfleb.attribute_char1 
               ,dfleb.attribute_char2 
               ,dfleb.attribute_char3  
               ,dfleb.context_code
               ,TO_CHAR(dfleb.fulfill_line_id) fulfill_line_id
           FROM doo_fulfill_lines_eff_b dfleb
           WHERE dfleb.context_code IN ('Sales Order Line Level Additional Information', '3PP')
         )
             --Fetch invoice line level distribution.
               SELECT ('RA_CUST_TRX_LINE_GL_DIST_ALL')      AS      Sourcedistributiontype
                      ,ra_dist1.cust_trx_line_gl_dist_id            cust_trx_line_gl_dist_id
                      ,ra_dist1.set_of_books_id                     set_of_books_id  
                      ,rct.customer_trx_id                          customer_trx_id 
                      ,rctl.customer_trx_line_id                             customer_trx_line_id
                      ,rctl.extended_amount                         sales_amount
                      ,rct.trx_number                               invoice_number
                      ,(SELECT name 
                         FROM ra_batch_sources_all rbs 
                        WHERE rbs.batch_source_seq_id =  rct.batch_source_seq_id) batch_source
                      ,(SELECT batch_source_type 
                         FROM ra_batch_sources_all rbs 
                        WHERE rbs.batch_source_seq_id =  rct.batch_source_seq_id) batch_source_type
                      ,rct.cust_trx_type_seq_id                     cust_trx_type_seq_id
                      ,(SELECT name FROM ra_cust_trx_types_all transactiontype
                             WHERE transactiontype.cust_trx_type_seq_id    = rct.cust_trx_type_seq_id) trx_type
                      ,TO_CHAR(TRUNC(CAST(FROM_TZ(CAST(rct.trx_date AS TIMESTAMP), 'UTC') 
                                       AT TIME ZONE 'Asia/Kuala_Lumpur'  AS DATE)), 'DD-Mon-YY',
                                       'nls_date_language=English') invoice_date
                      ,rct.batch_source_seq_id
                      ,NVL(DECODE(rctl.interface_line_context, 'DOO' , rctl.sales_order_source
                                                             , 'CCCP', NVL(rctl.sales_order_source, rctl.interface_line_context)
                                                                 , rctl.interface_line_context), rctl.sales_order_source)
                                                                    sales_channel
                     /*,(SELECT flv.description
                        FROM fnd_lookup_values flv
                      WHERE flv.lookup_type ='CUSTOMER_TYPE_FOR_CHANNEL'
                        AND flv.enabled_flag = 'Y'
                        AND NVL(flv.end_date_active, TRUNC(SYSDATE)) >= TRUNC(SYSDATE)
                        AND flv.meaning = rctl.interface_line_context
                      )                                             customer_type*/
                      ,rctl.INTERFACE_LINE_CONTEXT                  line_trx_context
                      ,DECODE(rctl.INTERFACE_LINE_CONTEXT, 'DOO',
                                   rctl.INTERFACE_LINE_ATTRIBUTE3, rctl.sales_order)
                                                                    sales_order_number
                      ,CASE
                          WHEN rctl.INTERFACE_LINE_CONTEXT IN ('CBS', 'CCCP', 'CPA', 'CPP', 'KIOSK', 'MSA/POS', 'PBSS', 'ValYou')
                            THEN rctl.INTERFACE_LINE_ATTRIBUTE3
                          ELSE
                              NULL
                      END                                           payment_method
                      ,CASE
                          WHEN rctl.INTERFACE_LINE_CONTEXT IN ('CBS', 'CCCP', 'CPA', 'CPP', 'KIOSK', 'MSA/POS', 'PBSS', 'ValYou')
                            THEN rctl.INTERFACE_LINE_ATTRIBUTE1
                          ELSE
                              NULL
                       END                                          source_trxn_reference
                      ,CASE
                          WHEN rctl.INTERFACE_LINE_CONTEXT IN ('CCCP')
                            THEN rctl.INTERFACE_LINE_ATTRIBUTE4
                          ELSE
                              NULL
                       END                                          Revenue_type
                      ,CASE
                          WHEN rctl.INTERFACE_LINE_CONTEXT IN ('MSA/POS')
                            THEN rctl.INTERFACE_LINE_ATTRIBUTE7
                          WHEN rctl.INTERFACE_LINE_CONTEXT IN ('DOO')
                            THEN 
                                (SELECT dfleb.attribute_char2 
                                  FROM dfleb 
                                  WHERE rctl.interface_line_attribute5 = dfleb.fulfill_line_id
                                    AND dfleb.context_code             = '3PP'
                                    AND ROWNUM = 1
                                )
                          ELSE
                              NULL
                       END                                          Offer_type
                      ,CASE
                          WHEN rctl.INTERFACE_LINE_CONTEXT IN ('MSA/POS')
                            THEN rctl.INTERFACE_LINE_ATTRIBUTE4
                          WHEN rctl.INTERFACE_LINE_CONTEXT IN ('DOO')
                            THEN 
                                (SELECT dfleb.attribute_char1
                                  FROM dfleb 
                                  WHERE rctl.interface_line_attribute5 = dfleb.fulfill_line_id
                                    AND dfleb.context_code             = '3PP'
                                    AND ROWNUM = 1
                                )
                          ELSE
                              NULL
                       END                                          Subscriber_type
                      ,CASE
                          WHEN rctl.ATTRIBUTE_CATEGORY IN ('External Billing Source1', 'External Billing Source2')
                            THEN rctl.ATTRIBUTE8
                          ELSE
                              NULL
                       END                                          serial_number
                      ,CASE
                          WHEN rctl.INTERFACE_LINE_CONTEXT IN ('MSA/POS')
                                 AND rctl.ATTRIBUTE_CATEGORY IN ('External Billing Source2')
                            THEN rctl.ATTRIBUTE15
                          WHEN rctl.ATTRIBUTE_CATEGORY IN ('External Billing Source1') AND rctl.INTERFACE_LINE_CONTEXT NOT IN ('MSA/POS')
                            THEN rctl.ATTRIBUTE15
                          WHEN rctl.INTERFACE_LINE_CONTEXT = 'DOO'
                            THEN
                                (SELECT dfleb.attribute_char3 
                                  FROM dfleb 
                                  WHERE rctl.interface_line_attribute5 = dfleb.fulfill_line_id
                                    AND dfleb.context_code             = '3PP'
                                    AND ROWNUM = 1
                                )
                       END                                          promo_code
                      ,CASE
                          WHEN rctl.INTERFACE_LINE_CONTEXT = 'DOO'
                            THEN
                                (SELECT dfleb.attribute_char1 
                                  FROM dfleb 
                                  WHERE rctl.interface_line_attribute5 = dfleb.fulfill_line_id
                                    AND dfleb.context_code             = 'Sales Order Line Level Additional Information'
                                    AND ROWNUM = 1
                                )
                       END                                          package_code
                      ,CASE
                          WHEN rctl.ATTRIBUTE_CATEGORY IN ('External Billing Source2')
                            THEN rctl.ATTRIBUTE15
                          WHEN rctl.INTERFACE_LINE_CONTEXT = 'DOO'
                            THEN
                                (SELECT dfleb.attribute_char2 
                                  FROM dfleb 
                                  WHERE rctl.interface_line_attribute5 = dfleb.fulfill_line_id
                                    AND dfleb.context_code             = 'Sales Order Line Level Additional Information'
                                    AND ROWNUM = 1
                                )
                       END                                          package_description
                      ,(SELECT esib.item_number 
                          FROM egp_system_items_b esib
                        WHERE esib.inventory_item_id         = rctl.inventory_item_id
						  AND (esib.organization_id = rctl.warehouse_id
						     OR (esib.organization_id = (SELECT MAX(iop.MASTER_ORGANIZATION_ID)
                                                          FROM INV_ORG_PARAMETERS iop
                                                         WHERE iop.BUSINESS_UNIT_ID         = rct.org_id)
                                AND rctl.warehouse_id IS NULL)
							 )
                       )                                            item_code
                      , rctl.description                            item_description
                      ,(SELECT eict.item_class_name 
                          FROM egp_system_items_b esib
                              ,egp_item_classes_tl eict
                        WHERE esib.inventory_item_id         = rctl.inventory_item_id
                          AND eict.item_class_id             = esib.item_catalog_group_id
						  AND (esib.organization_id = rctl.warehouse_id
						     OR (esib.organization_id = (SELECT MAX(iop.MASTER_ORGANIZATION_ID)
                                                          FROM INV_ORG_PARAMETERS iop
                                                         WHERE iop.BUSINESS_UNIT_ID         = rct.org_id)
                                AND rctl.warehouse_id IS NULL)
							 )
                       )                                            item_class_name
                      ,rctl.quantity_invoiced                       quantity_invoiced
                      ,rctl.quantity_credited                       quantity_credited 
                      ,rctl.unit_selling_price                      unit_selling_price
                      ,rct.bill_to_customer_id
                      ,rct.sold_to_customer_id
                FROM ra_cust_trx_line_gl_dist_all       ra_dist1
                     ,ra_customer_trx_all               rct
                     ,hz_cust_accounts                  sold_to_cust
                     ,ra_customer_trx_lines_all         rctl
                WHERE ra_dist1.customer_trx_id     = rct.customer_trx_id
                      AND NVL(rct.complete_flag, 'N')= 'Y'
                  AND rctl.customer_trx_line_id(+)             = ra_dist1.customer_trx_line_id
                  AND rct.sold_to_customer_id      = sold_to_cust.cust_account_id(+)
                  AND sold_to_cust.status(+)       ='A'
             ) ra_trx
             ,xla_ae_headers            xlah
             ,xla_ae_lines              xl    
             ,xla_distribution_links    xd
			 ,gl_je_batches             gjb
             ,gl_je_headers             gjh
             ,gl_je_lines               gjl   
             ,gl_code_combinations      gcc
             ,gl_import_references      gip
             ,gl_ledgers                Ledger
            WHERE  xl.ae_header_id                     = xlah.ae_header_id
             AND xl.application_id                   = xlah.application_id
             AND xd.ae_header_id                     = xl.ae_header_id
             AND xd.ae_line_num                      = xl.ae_line_num
             AND gjh.je_source                       IN ('Receivables') 
             AND xd.source_distribution_id_num_1     = ra_trx.cust_trx_line_gl_dist_id(+)
             AND xd.source_distribution_type         = ra_trx.SourceDistributionType(+)
             AND ra_trx.set_of_books_id(+)           = Ledger.ledger_id
			 AND gjh.je_header_id                    = gjl.je_header_id                  
             AND gjh.je_batch_id                     = gjb.je_batch_id
             --AND gcc.code_combination_id             = xl.code_combination_id
             AND gcc.code_combination_id             = gjl.code_combination_id
             AND Ledger.ledger_id                    = gjl.ledger_id
             AND gip.je_header_id                    = gjl.je_header_id 
             AND gip.je_line_num                     = gjl.je_line_num 
             AND gip.gl_sl_link_id                   = xl.gl_sl_link_id
             AND gip.gl_sl_link_table                = xl.gl_sl_link_table
             AND Ledger.name                         = :p_ledger_name
             AND gjb.status                          = 'P' --JE Batch should be in Posted status
             AND gjh.status                          = 'P' --JE Header should be in Posted status
             AND TRUNC(CAST(FROM_TZ(CAST(gjh.default_effective_date AS TIMESTAMP), 'UTC') 
                                       AT TIME ZONE 'Asia/Kuala_Lumpur'  AS DATE))   BETWEEN :p_from_gl_date AND :p_to_gl_date
             AND gcc.segment1                        BETWEEN NVL(:P_FROM_SEGMENT1, gcc.segment1) AND NVL(:P_TO_SEGMENT1, gcc.segment1)
             AND gcc.segment2                        BETWEEN NVL(:P_FROM_SEGMENT2, gcc.segment2) AND NVL(:P_TO_SEGMENT2, gcc.segment2)
             AND gcc.segment3                        BETWEEN NVL(:P_FROM_SEGMENT3, gcc.segment3) AND NVL(:P_TO_SEGMENT3, gcc.segment3)
             AND gcc.segment4                        BETWEEN NVL(:P_FROM_SEGMENT4, gcc.segment4) AND NVL(:P_TO_SEGMENT4, gcc.segment4)
             AND gcc.segment5                        BETWEEN NVL(:P_FROM_SEGMENT5, gcc.segment5) AND NVL(:P_TO_SEGMENT5, gcc.segment5)
             AND gcc.segment6                        BETWEEN NVL(:P_FROM_SEGMENT6, gcc.segment6) AND NVL(:P_TO_SEGMENT6, gcc.segment6)
             AND gcc.segment7                        BETWEEN NVL(:P_FROM_SEGMENT7, gcc.segment7) AND NVL(:P_TO_SEGMENT7, gcc.segment7)
             AND gcc.segment8                        BETWEEN NVL(:P_FROM_SEGMENT8, gcc.segment8) AND NVL(:P_TO_SEGMENT8, gcc.segment8)
             AND gcc.segment9                        BETWEEN NVL(:P_FROM_SEGMENT9, gcc.segment9) AND NVL(:P_TO_SEGMENT9, gcc.segment9)

        UNION ALL
        --b)All other transactions posted to GL (with no additional subledger reference)
        SELECT 
            
            gjh.je_source
           ,gjh.je_category
           ,Ledger.currency_code                                      functional_currency_code
           ,gjb.name                                                  journal_batch_name
           ,(FND_FLEX_XML_PUBLISHER_APIS.PROCESS_KFF_COMBINATION_1
             ('FLEXFIELD','GL','GL#',gcc.chart_of_accounts_id,
                     NULL,gcc.code_combination_id,'ALL','Y','VALUE')
            )                                                         Acct_Flexfield
           ,gjl.description                                           line_description
           ,gjl.currency_code                                         entered_currency  
           ,gjl.entered_dr                                            entered_dr
           ,gjl.entered_cr                                            entered_cr
           ,gjl.accounted_dr                                          accounted_dr
           ,gjl.accounted_cr                                          accounted_cr
           ,NULL --SALES_AMOUNT
           ,TO_CHAR(CAST(FROM_TZ(CAST(gjb.posted_date AS TIMESTAMP), 'UTC') 
                                       AT TIME ZONE 'Asia/Kuala_Lumpur'  AS DATE),'DD/MM/YYYY HH24:MI',
                               'nls_date_language=English')           posted_date
           ,TO_CHAR(TRUNC(CAST(FROM_TZ(CAST(gjh.default_effective_date AS TIMESTAMP), 'UTC') 
                                       AT TIME ZONE 'Asia/Kuala_Lumpur'  AS DATE)), 'DD-Mon-YY',
                                         'nls_date_language=English') accounting_date
           ,NULL --INVOICE_NUMBER
           ,NULL --batch_source
           ,NULL --TRX_TYPE
           ,NULL --CUSTOMER_CODE
           ,NULL --BILL_TO_CUST_NAME
           ,NULL --invoice_date
           ,NULL --DEBITOR_ACCT
           ,NULL --payment_method
           ,NULL --source_trxn_reference
           ,NULL --SALES_ORDER_NUMBER
           ,NULL --serial_number
           ,NULL --promo_code
           ,NULL --ITEM_CODE
           ,NULL --ITEM_DESCRIPTION
           ,NULL --sales_channel
           ,NULL --ITEM_CLASS_NAME
           ,NULL --Revenue_type
           ,NULL --customer_type
           ,NULL --QUANTITY_INVOICED
           ,NULL --UNIT_SELLING_PRICE
           ,NULL --package_code
           ,NULL --package_description
           ,NULL --Offer_type
           ,NULL --Subscriber_type
           , gjl.je_header_id                                         je_header_id
           , gjl.je_line_num                                          je_line_num
           ,Ledger.name                                               ledger_name
           ,gjh.period_name                                           je_period_name
           ,gjh.default_effective_date                                je_effective_date
           ,gjh.name                                                  je_name
           ,NULL --GL_SL_LINK_ID                                      
           ,Ledger.ledger_id                                          ledger_id
           ,NULL --line_trx_context
           ,NULL --CUSTOMER_TRX_ID
           ,NULL --CUSTOMER_TRX_LINE_ID
           ,NULL --ra_trx.CUST_TRX_LINE_GL_DIST_ID
           ,NULL --ACCOUNTING_CLASS_CODE
 FROM                                                                  
          gl_je_batches        gjb
         ,gl_je_headers        gjh
         ,gl_je_lines          gjl   
         ,gl_code_combinations gcc
         ,gl_ledgers           Ledger
 WHERE   1=1 AND gjh.je_header_id              = gjl.je_header_id                  
         AND gjh.je_batch_id                   = gjb.je_batch_id
         AND gcc.code_combination_id           = gjl.code_combination_id
         AND Ledger.ledger_id                  = gjl.ledger_id
         AND Ledger.name                       = :p_ledger_name
         AND (gjh.je_source                    <> 'Receivables'
                OR (gjh.je_source              = 'Receivables'
                      AND NOT EXISTS 
                            (SELECT 1 FROM gl_import_references gip
                                          ,xla_ae_lines         xl   
                                WHERE 
                                       gip.je_header_id     = gjl.je_header_id 
                                   AND gip.je_line_num      = gjl.je_line_num 
                                   AND gip.gl_sl_link_id    = xl.gl_sl_link_id
                                   AND gip.gl_sl_link_table = xl.gl_sl_link_table
                            )
                   )
             )
         AND gjb.status                        = 'P' --JE Batch should be in Posted status
         AND gjh.status                        = 'P' --JE Header should be in Posted status
         AND TRUNC(CAST(FROM_TZ(CAST(gjh.default_effective_date AS TIMESTAMP), 'UTC') 
                                       AT TIME ZONE 'Asia/Kuala_Lumpur'  AS DATE)) BETWEEN :p_from_gl_date AND :p_to_gl_date
         AND gcc.segment1                      BETWEEN NVL(:P_FROM_SEGMENT1, gcc.segment1) AND NVL(:P_TO_SEGMENT1, gcc.segment1)
         AND gcc.segment2                      BETWEEN NVL(:P_FROM_SEGMENT2, gcc.segment2) AND NVL(:P_TO_SEGMENT2, gcc.segment2)
         AND gcc.segment3                      BETWEEN NVL(:P_FROM_SEGMENT3, gcc.segment3) AND NVL(:P_TO_SEGMENT3, gcc.segment3)
         AND gcc.segment4                      BETWEEN NVL(:P_FROM_SEGMENT4, gcc.segment4) AND NVL(:P_TO_SEGMENT4, gcc.segment4)
         AND gcc.segment5                      BETWEEN NVL(:P_FROM_SEGMENT5, gcc.segment5) AND NVL(:P_TO_SEGMENT5, gcc.segment5)
         AND gcc.segment6                      BETWEEN NVL(:P_FROM_SEGMENT6, gcc.segment6) AND NVL(:P_TO_SEGMENT6, gcc.segment6)
         AND gcc.segment7                      BETWEEN NVL(:P_FROM_SEGMENT7, gcc.segment7) AND NVL(:P_TO_SEGMENT7, gcc.segment7)
         AND gcc.segment8                      BETWEEN NVL(:P_FROM_SEGMENT8, gcc.segment8) AND NVL(:P_TO_SEGMENT8, gcc.segment8)
         AND gcc.segment9                      BETWEEN NVL(:P_FROM_SEGMENT9, gcc.segment9) AND NVL(:P_TO_SEGMENT9, gcc.segment9)
		 ) gl_trxn
    WHERE ( --1st scenario: user selected p_include_zero_amt = 'No'
            (CASE 
                WHEN :p_include_zero_amt = 'No'
                  THEN 1
                WHEN :p_include_zero_amt = 'Only Zero'
                  THEN 0
                WHEN :p_include_zero_amt = 'Yes'
                  THEN 10
             END) = 1
             AND (NVL(accounted_dr, 0) <> 0
                   OR NVL(accounted_cr, 0) <> 0) -- either ACCOUNTED_DR or ACCOUNTED_CR is > 0
            )
        OR (--2nd scenario: user selected p_include_zero_amt = 'Only Zero'
            (CASE 
                WHEN :p_include_zero_amt = 'No'
                  THEN 1
                WHEN :p_include_zero_amt = 'Only Zero'
                  THEN 0
                WHEN :p_include_zero_amt = 'Yes'
                  THEN 10
             END) = 0
             AND NVL(accounted_dr, 0) = 0
             AND NVL(accounted_cr, 0) = 0
            )
        OR (--Last scenario: user selected p_include_zero_amt = 'Yes'
            (CASE 
                WHEN :p_include_zero_amt = 'No'
                  THEN 1
                WHEN :p_include_zero_amt = 'Only Zero'
                  THEN 0
                WHEN :p_include_zero_amt = 'Yes'
                  THEN 10
             END) = 10 --do nothing
            )
    ORDER BY je_source, je_header_id, je_line_num, accounting_class_code
	====================================================================================
	------------------------------------------------------------------Accounting Automation Exception Analysis Report--------------------------------------------------------------------------
--Q_POSTED_TRANS_SUMM
SELECT distinct l.name led_name,
                   l.currency_code led_currency,
                   p.total_amount POST_TOTAL_AMOUNT
            FROM   gl_autorun_run_results p
                   ,GL_LEDGERS  l
            WHERE  p.autorun_request_id = :P_AUTORUN_REQ_ID
            --AND    p.ledger_id = :led_id
            AND    p.ledger_id = l.ledger_id (+)
            AND    p.result_type_code = 'BALANCE'
            ORDER BY p.total_amount
--Q_APPROVALS_DETAIL
SELECT e.transaction_name,
       src.USER_JE_SOURCE_NAME je_source, 
       ( SELECT max(n.display_name)
         FROM per_users u, per_person_names_f_v n
         WHERE u.username like e.error_detail_char1 || decode(length(e.error_detail_char1), 64, '%', '')
         AND   sysdate between u.start_date and nvl(u.end_date, sysdate)
         AND   n.person_id = u.person_id
       ) display_name,
       lk.meaning status,
       e.amount amount, 
       e.error_detail_number2 age
FROM   gl_autorun_run_errors e,
       gl_je_batches bt,
       gl_je_sources_tl src,
       FND_LOOKUP_VALUES_TL lk
WHERE  e.autorun_request_id = :P_AUTORUN_REQ_ID
AND    e.ledger_id = :led_id
AND    e.error_category_code = 'ORA_APPROVAL'
AND    e.error_code IN ('GL_AUTORUN_JE_REJECTED', 'GL_AUTORUN_JE_PENDING_APPROVAL')
AND    e.error_detail_number1 = bt.je_batch_id
and    bt.JE_SOURCE = src.JE_SOURCE_NAME
and    src.language = :P_LANGUAGE_CODE
AND    lk.lookup_type (+)= 'JE_BATCH_APPROVAL_STATUS'
AND    lk.lookup_code (+) = decode(e.error_detail_char2, 'R', 'I', e.error_detail_char2) 
AND    lk.view_application_id(+) = 101
AND    lk.language(+) = :P_LANGUAGE_CODE
&REPORT_DATA_FILTER
AND    rownum <= :rowlimit -- added for performance reasons.
ORDER BY e.error_detail_number2, e.transaction_name

--Q_APPROVALS_SUMMARY
SELECT e.autorun_request_id,
       e.ledger_id,
       SUM(e.amount) TOTAL_AMOUNT,
       SUM(case when e.age_days <4 then e.amount else 0 end) as AMT_LESS_4, 
       SUM(case when e.age_days >=4 and e.age_days <8 then e.amount else 0 end) as AMT_MORE_4_LESS_8, 
       SUM(case when e.age_days >=8 and e.age_days <12 then e.amount else 0 end) as AMT_MORE_8_LESS_12, 
       SUM(case when e.age_days >=12  then e.amount else 0 end) as AMT_MORE_12 ,
       SUM(case when e.age_days <4 then 1 else 0 end) LESS_4,
       SUM(case when e.age_days >=4 and e.age_days <8 then 1 else 0 end) MORE_4_LESS_8,
       SUM(case when e.age_days >=8 and e.age_days <12 then 1 else 0 end) MORE_8_LESS_12,
       SUM(case when e.age_days >=12  then 1 else 0 end) MORE_12, 
       to_char(e.ledger_id)||'-'||SUM(case when e.age_days <4 then 1 else 0 end) LESS_4_LINK,
       to_char(e.ledger_id)||'-'||SUM(case when e.age_days >=4 and e.age_days <8 then 1 else 0 end) MORE_4_LESS_8_LINK,
       to_char(e.ledger_id)||'-'||SUM(case when e.age_days >=8 and e.age_days <12 then 1 else 0 end) MORE_8_LESS_12_LINK, 
       to_char(e.ledger_id)||'-'||SUM(case when e.age_days >=12  then 1 else 0 end) MORE_12_LINK, 
       count(*) TOTAL_ROW_COUNT
FROM
 (SELECT autorun_request_id,
         ledger_id,
         MAX(NVL(amount, 0)) AMOUNT,
         error_detail_number2 AGE_DAYS
  FROM GL_AUTORUN_RUN_ERRORS e
  WHERE autorun_request_id = :P_AUTORUN_REQ_ID
  AND PROGRAM_CODE = 'JOURNAL_APPROVAL'
  AND ERROR_CATEGORY_CODE = 'ORA_APPROVAL'
  AND error_code IN ('GL_AUTORUN_JE_REJECTED', 'GL_AUTORUN_JE_PENDING_APPROVAL')
  AND ledger_id = :led_id
  &REPORT_DATA_FILTER
  GROUP BY autorun_request_id,
           ledger_id,
           error_detail_number1, 
           error_detail_number2) e
GROUP BY e.autorun_request_id,
         e.ledger_id
ORDER BY SUM(e.amount)
--Q_DETAIL
SELECT e.error_text,
       e.transaction_name,
       lk.meaning transaction_type,
       decode(prev.autorun_request_id, null, decode(e.reported_flag, 'Y', 'N', 'Y'), 'N') new_error_flag,
       decode(prev.autorun_request_id, null, decode(e.reported_flag, 'Y', 0, 1), 0) new_error_count,
       e.amount,
       e.incomplete_amount_flag,
       decode(e.incomplete_amount_flag, 'Y', 1, 0) incomplete_amount_count,
       src.user_je_source_name je_source_d
FROM   gl_autorun_run_errors e,
       gl_autorun_error_codes ec,
       fnd_lookup_values_tl lk,
       gl_je_sources_tl src,
       gl_autorun_run_errors prev
WHERE  e.autorun_request_id IN (:P_AUTORUN_REQ_ID, -1)
AND    e.last_update_date >= decode(e.autorun_request_id, -1, sysdate-1, e.last_update_date)
AND    NVL(e.status_code, 'ORA_READY_FOR_DISPLAY') <> 'ORA_PREPARING'
AND    e.ledger_id  = nvl(:led_id, -99)
AND    e.error_category_code = :error_category_code
AND    e.error_code NOT IN ('GL_AUTORUN_JE_REJECTED', 'GL_AUTORUN_JE_PENDING_APPROVAL')
AND    ec.error_code (+) = e.error_code
AND    lk.lookup_type (+) = 'ORA_TRANSACTION_TYPE'
AND    lk.lookup_code (+) = ec.object_type_code
AND    lk.view_application_id(+) = 101
AND    lk.language(+) = :P_LANGUAGE_CODE
AND    src.je_source_name (+) = e.je_source_name
AND    src.language (+) = :P_LANGUAGE_CODE
&REPORT_DATA_FILTER
AND    prev.autorun_request_id (+) = :P_PREV_AUTORUN_REQ_ID
AND    prev.program_code (+) = e.program_code
AND    prev.amount_key (+) = e.amount_key
AND    prev.error_text (+) = e.error_text
AND    prev.error_key (+) = e.error_key
AND    rownum <= :rowlimit -- added for performance reasons.
ORDER BY lk.meaning, e.transaction_name

--Q_SUMMARY
SELECT e.autorun_request_id,
       e.ledger_id led_summ_id,
       e.error_category_code,
       lk.meaning error_category_name,
       --to_char(e.ledger_id)||'-'||e.error_category_code DRILLDOWN_LINK,
       to_char(e.ledger_id)||'-'||decode(e.error_category_code, 'ORA_SUBLEDGER_TRANSACTION_DATA', 'ORA_SUBLEDGER_TRANS', e.error_category_code) DRILLDOWN_LINK,
       SUM(e.amount) TOTAL_AMOUNT_S,
       SUM(e.row_count) TOTAL_ROW_COUNT_S,
       src.user_je_source_name,
       &NOTIFIED_USER_SELECT notified
FROM
 (SELECT autorun_request_id,
         ledger_id,
         error_category_code,
         je_source_name je_source_name,
         MAX(NVL(amount, 0)) AMOUNT,
         count(*)    ROW_COUNT
  FROM GL_AUTORUN_RUN_ERRORS e
  WHERE autorun_request_id IN (:P_AUTORUN_REQ_ID, -1)
  AND   e.last_update_date >= decode(e.autorun_request_id, -1, sysdate-1, e.last_update_date)
  AND   NVL(status_code, 'ORA_READY_FOR_DISPLAY') <> 'ORA_PREPARING'
  AND   ledger_id =  nvl(:led_id, -99)
  AND   e.error_code NOT IN ('GL_AUTORUN_JE_REJECTED', 'GL_AUTORUN_JE_PENDING_APPROVAL')
  &EXCLD_SRC_FILTER
  &REPORT_DATA_FILTER
  GROUP BY autorun_request_id,
           ledger_id,
           error_category_code,
           je_source_name,
           program_code,
           amount_key) e,
       FND_LOOKUP_VALUES_TL  lk,
       GL_JE_SOURCES_TL src
WHERE  lk.lookup_type = 'ORA_ERROR_CATEGORIES'
  AND  lk.lookup_code = e.error_category_code
  AND  lk.view_application_id = 101
  AND  lk.language = :P_LANGUAGE_CODE
  AND  src.je_source_name (+) = e.je_source_name
  AND  src.language (+) = :P_LANGUAGE_CODE
GROUP BY e.autorun_request_id,
         e.ledger_id,
         e.error_category_code,
         to_char(e.ledger_id)||'-'||e.error_category_code,
         lk.meaning,
         e.je_source_name,
         src.user_je_source_name
ORDER BY lk.meaning, src.user_je_source_name

--Q_RPT_ROWLIMIT
SELECT nvl(FND_PROFILE.VALUE('GL_AUTORUN_RPT_ROWLIMIT'), 100) rowlimit
                      FROM  dual
--Q_LEDGER
SELECT distinct l.name ledger_name,
                            l.currency_code ledger_currency, 
                            l.ledger_id led_id
                      FROM  GL_AUTORUN_RUN_ERRORS e, 
                            GL_LEDGERS  l
                      WHERE l.ledger_id (+) = e.ledger_id
                        AND e.autorun_request_id IN (:P_AUTORUN_REQ_ID, -1)
                        AND e.last_update_date >= decode(e.autorun_request_id, -1, sysdate-1, e.last_update_date)
                        AND NVL(e.status_code, 'ORA_READY_FOR_DISPLAY') <> 'ORA_PREPARING'
                      &EXCLD_SRC_FILTER
                      &REPORT_DATA_FILTER
                      ORDER by l.name
==========================================================================================
-----------------------------Action code details report------------------------------------------

SELECT DISTINCT
    *
FROM
    (
       
SELECT --PAPF.PERSON_ID,
case when  paam.action_code='MANAGER_CHANGE'  then (select FULL_NAME from (select person_id,Assignment_ID,effective_start_date start_date,
effective_end_date end_date,
object_version_number ovn ,
lead(MANAGER_ID,1) over
    (partition by assignment_id order by effective_end_date desc ) prev_manager_id,
MANAGER_ID mgrID
from per_assignment_supervisors_f  aa
where   aa.ASSIGNMENT_ID=PAAM.ASSIGNMENT_ID) sup,per_PERSON_NAMES_F PPNF
WHERE 1=1
AND SUP.prev_manager_id=PPNF.PERSON_ID
AND ppnf.name_type='GLOBAL'
AND SYSDATE BETWEEN PPNF.EFFECTIVE_START_DATE AND PPNF.EFFECTIVE_END_DATE
AND PAAM.EFFECTIVE_START_DATE = SUP.start_date  ) else null end  prev_supervisor,
papf.person_number                      emp_id,
            ppnf.first_name                         emp_name,
            TO_CHAR(papf.start_date, 'YYYY-MM-DD') doj,
            jobs.name                               designation,
            substr(dept.name, 1, instr(dept.name, '-', 1, 1) - 1) departments,
            dept.name                               sub_departments,
            loc1.location_name                      location,
            past.user_status                        employeement_status,
            pasf.manager_id                         ,
ppnf1.full_name                           reporting_manager_name,
            --previous_assignment.prev_manager_name                      reporting_manager_name,
            TO_CHAR(paam.effective_start_date, 'YYYY-MM-DD') effective_date,
            paam.action_code,
            CASE
                WHEN previous_assignment.previous_job_name = jobs.name THEN
                    NULL
                ELSE
                    previous_assignment.previous_job_name
            END AS previous_designation,
            CASE
                WHEN previous_assignment.previous_job_name = jobs.name THEN
                    NULL
                ELSE
                    jobs.name
            END AS new_designation,
            CASE
                WHEN previous_assignment.previous_grade_code = grades.grade_code THEN
                    NULL
                ELSE
                    previous_assignment.previous_grade_code
            END AS previous_grade,
            CASE
                WHEN previous_assignment.previous_grade_code = grades.grade_code THEN
                    NULL
                ELSE
                    grades.grade_code
            END AS new_grade,
            CASE
                WHEN previous_assignment.previous_location = pld.location_name THEN
                    NULL
                ELSE
                    previous_assignment.previous_location
            END AS prev_location,
            CASE
                WHEN previous_assignment.previous_location = pld.location_name THEN
                    NULL
                ELSE
                    pld.location_name
            END AS new_location,
            TO_CHAR(papf.start_date, 'YYYY-MM-DD') probation_date,
            TO_CHAR(paam.date_probation_end, 'YYYY-MM-DD') confirmed_date,


/*CASE
                WHEN previous_assignment.prev_manager_name = ppnf1.full_name AND paam.action_code='MANAGER_CHANGE' THEN
                    NULL
                WHEN previous_assignment.prev_manager_name <> ppnf1.full_name AND paam.action_code='MANAGER_CHANGE' THEN
                    previous_assignment.prev_manager_name
ELSE
NULL
            END AS previous_supervisor,*/






           -- previous_assignment.prev_manager_name   AS prev_supervisor,

            CASE
                WHEN previous_assignment.prev_manager_name = ppnf1.full_name AND paam.action_code='MANAGER_CHANGE' THEN
                    NULL
--WHEN previous_assignment.prev_manager_name <> ppnf1.full_name AND paam.action_code='MANAGER_CHANGE' THEN
                ELSE
                    ppnf1.full_name

--NULL
            END AS   new_supervisor,
            CASE
                WHEN paam.action_code = 'Transfer' THEN
                    paam.effective_start_date
                ELSE
                    NULL
            END date_of_transfer,
            CASE
                WHEN previous_assignment.previous_department = dept.name THEN
                    NULL
                ELSE
                    previous_assignment.previous_department
            END AS previous_department,
            CASE
                WHEN previous_assignment.previous_department = dept.name THEN
                    NULL
                ELSE
                    dept.name
            END AS new_department,
            CASE
                WHEN previous_assignment.prev_working_at_home = paam.work_at_home THEN
                    NULL
                ELSE
                    previous_assignment.prev_working_at_home
            END AS prev_working_at_home,
            CASE
                WHEN previous_assignment.prev_working_at_home = paam.work_at_home THEN
                    NULL
                ELSE
                    paam.work_at_home
            END AS new_working_at_home,
            CASE
                WHEN previous_assignment.prev_assignment_status = past.user_status THEN
                    NULL
                ELSE
                    previous_assignment.prev_assignment_status
            END AS prev_assignment_status,
            CASE
                WHEN previous_assignment.prev_assignment_status = past.user_status THEN
                    NULL
                ELSE
                    past.user_status
            END AS new_assignment_status,
            (
                SELECT
                    ppnfv.full_name full_name
                FROM
                    per_person_names_f_v       ppnfv,
                    per_asg_responsibilities   par,
                    per_all_people_f           papfc
                WHERE
                    1 = 1
                    AND papfc.person_id = par.person_id
 --AND per.person_number='76006'
                    AND SYSDATE BETWEEN ppnfv.effective_start_date AND ppnfv.effective_end_date
                    AND ppnfv.person_id = papfc.person_id
                    AND SYSDATE BETWEEN papfc.effective_start_date AND papfc.effective_end_date
                    AND responsibility_name = 'HR Representive'
            ) hrbp,
            (
                SELECT
                    LISTAGG(name, ', ') WITHIN GROUP(
                        ORDER BY
                            name
                    ) project_name
                FROM
                    (
                        SELECT DISTINCT
                            ppa.name
                        FROM
                            pjf_projects_all_vl         ppa,
                            pjb_cntrct_proj_links       pcpl,
                            hr_all_organization_units   hou,
                            pjf_project_types_vl        ppt
                        WHERE
                            1 = 1
                            AND ppa.project_id = pcpl.project_id (+)
                            AND ppa.carrying_out_organization_id = hou.organization_id
                            AND ppa.project_type_id = ppt.project_type_id
                            AND ppt.project_type != 'ACTIVE'
                    )
            ) inactive_projects,
            (
                SELECT
                    LISTAGG(name, ', ') WITHIN GROUP(
                        ORDER BY
                            name
                    ) project_name
                FROM
                    (
                        SELECT DISTINCT
                            ppa.name
                        FROM
                            pjf_projects_all_vl         ppa,
                            pjb_cntrct_proj_links       pcpl,
                            hr_all_organization_units   hou,
                            pjf_project_types_vl        ppt,
                            per_all_assignments_m       paam2
                        WHERE
                            1 = 1
                            AND ppa.project_id = pcpl.project_id (+)
                            AND paam2.organization_id = hou.organization_id (+)
                            AND ppa.carrying_out_organization_id = hou.organization_id
                            AND ppa.project_type_id = ppt.project_type_id
                            AND paam2.assignment_type = 'E'
                            AND paam2.primary_assignment_flag = 'Y'
                            AND paam2.effective_latest_change = 'Y'
                            AND paam2.person_id = papf.person_id
                    )
            ) projects
        FROM
            per_all_people_f                 papf
--pjf_projects_all_tl ppat
            INNER JOIN per_all_assignments_m            paam ON papf.person_id = paam.person_id
                                             --AND papf.person_number = nvl('33', papf.person_number)
                                                     AND paam.action_code = nvl(:p_action_code, paam.action_code)
-- and papf.person_id=100000000409299
                                                     AND ( :date_to ) BETWEEN papf.effective_start_date AND papf.effective_end_date
                                                     AND paam.effective_start_date BETWEEN ( :date_from ) AND ( :date_to )
                                                     AND paam.assignment_type IN (
                'E'
            )
            INNER JOIN per_location_details_f_vl        pld ON paam.location_id = pld.location_id
--for business_unit_id
INNER JOIN HR_ALL_ORGANIZATION_UNITS_F        haouf ON haouf.organization_id = paam.business_unit_id
            AND     SYSDATE BETWEEN haouf.effective_start_date AND haouf.effective_end_date
INNER JOIN HR_ORGANIZATION_UNITS_F_TL hauft ON  haouf.ORGANIZATION_ID = hauft.ORGANIZATION_ID
AND hauft.LANGUAGE = 'US'
and hauft.name=nvl(:bu_name,hauft.name)
AND sysdate BETWEEN hauft.EFFECTIVE_START_DATE AND hauft.EFFECTIVE_END_DATE

INNER JOIN HR_ORG_UNIT_CLASSIFICATIONS_F houcf ON haouf.ORGANIZATION_ID = houcf.ORGANIZATION_ID
AND houcf.CLASSIFICATION_CODE = 'FUN_BUSINESS_UNIT'
AND sysdate BETWEEN houcf.EFFECTIVE_START_DATE AND houcf.EFFECTIVE_END_DATE

--
            INNER JOIN per_assignment_supervisors_f     pasf ON papf.person_id = pasf.person_id
                                                            AND trunc(SYSDATE) BETWEEN pasf.effective_start_date AND pasf.effective_end_date
                                                            AND pasf.manager_type = 'LINE_MANAGER'
            INNER JOIN per_person_names_f               ppnf1 ON pasf.manager_id = ppnf1.person_id
                                                   AND ppnf1.name_type = 'GLOBAL'
                                                   AND trunc(SYSDATE) BETWEEN ppnf1.effective_start_date AND ppnf1.effective_end_date
            INNER JOIN per_all_people_f                 papf1 ON pasf.manager_id = papf1.person_id
                                                 AND trunc(SYSDATE) BETWEEN papf1.effective_start_date AND papf1.effective_end_date
            INNER JOIN per_person_names_f               ppnf ON papf.person_id = ppnf.person_id
                                                  AND ppnf.name_type = 'GLOBAL'
                                                  AND ( :date_to ) BETWEEN ppnf.effective_start_date AND ppnf.effective_end_date
            LEFT OUTER JOIN per_jobs_f_vl                    jobs ON paam.job_id = jobs.job_id
                                                  AND ( :date_to ) BETWEEN jobs.effective_start_date AND jobs.effective_end_date
            LEFT OUTER JOIN per_grades_f_vl                  grades ON paam.grade_id = grades.grade_id
                                                      AND ( :date_to ) BETWEEN grades.effective_start_date AND grades.effective_end_date
                                                      AND grades.name = nvl(:p_grade, grades.name)
            LEFT OUTER JOIN per_departments                  dept ON paam.organization_id = dept.organization_id
            LEFT OUTER JOIN per_location_details_f_vl        loc1 ON paam.location_id = loc1.location_id
                                                              AND loc1.location_name = nvl(:p_location_name, loc1.location_name)
            LEFT OUTER JOIN per_assignment_status_types_tl   past ON paam.assignment_status_type_id = past.assignment_status_type_id
                                                                   AND past.language = 'US'
                                                                   AND dept.name = nvl(:p_department, dept.name)
  AND past.user_status = nvl(:P_Assignment_status, past.user_status)
            LEFT OUTER JOIN (
                SELECT
                    NULL      prev_manager_name,
                    paam2.effective_end_date,
                    paam2.assignment_id,
                    paam2.effective_start_date,
                    jobs2.job_code       AS previous_job_code,
                    jobs2.name           AS previous_job_name,
                    grades2.grade_code   AS previous_grade_code,
                    paam2.effective_latest_change,
                    paam2.effective_sequence,
                    dept2.name           AS previous_department,
                    loc2.location_name   AS previous_location,
                    paam2.work_at_home   prev_working_at_home,
                    past2.user_status    prev_assignment_status
                FROM
                    per_all_assignments_m            paam2
                    LEFT OUTER JOIN per_jobs_f_vl                    jobs2 ON paam2.job_id = jobs2.job_id
                                                           AND ( :date_to ) BETWEEN jobs2.effective_start_date AND jobs2.effective_end_date
                    LEFT OUTER JOIN per_grades_f_vl                  grades2 ON paam2.grade_id = grades2.grade_id
                                                               AND ( :date_to ) BETWEEN grades2.effective_start_date AND grades2.
                                                               effective_end_date
                    LEFT OUTER JOIN per_departments                  dept2 ON paam2.organization_id = dept2.organization_id
                    LEFT OUTER JOIN per_location_details_f_vl        loc2 ON paam2.location_id = loc2.location_id
                    LEFT OUTER JOIN per_assignment_status_types_tl   past2 ON paam2.assignment_status_type_id = past2.assignment_status_type_id
                                                                            AND past2.language = 'US'
                    LEFT OUTER JOIN per_assignment_supervisors_f     pasf ON paam2.person_id = pasf.person_id
-- and paam2.ASSIGNMENT_ID=pasf.ASSIGNMENT_ID
                                                                         AND pasf.manager_type = 'LINE_MANAGER'
                                                                         AND SYSDATE BETWEEN pasf.effective_start_date AND pasf.effective_end_date
                    LEFT OUTER JOIN per_person_names_f               ppnf1 ON paam2.person_id = ppnf1.person_id
                                                                AND ppnf1.person_id = pasf.manager_id
                                                                AND ppnf1.name_type = 'GLOBAL'
                                                                AND SYSDATE BETWEEN ppnf1.effective_start_date AND ppnf1.effective_end_date
AND ppnf1.display_name  = nvl(:p_Supervisor, ppnf1.display_name)
                WHERE
                    paam2.assignment_type IN (
                        'E'
                    )
--paaf_prev.effective_end_date + 1= paaf.effective_start_date
            ) previous_assignment ON paam.assignment_id = previous_assignment.assignment_id
                                     AND previous_assignment.effective_end_date + 1 = paam.effective_start_date
                                     AND paam.assignment_type = 'E'
                             AND ( ( paam.effective_sequence = 1
                                     AND previous_assignment.effective_latest_change = 'Y'
                                     AND previous_assignment.effective_start_date = (
        SELECT
            MAX(effective_start_date)
        FROM
            per_all_assignments_m paam2
        WHERE
            paam.assignment_id = paam2.assignment_id
            AND paam2.effective_start_date < paam.effective_start_date
    ) )
                                   OR ( paam.effective_sequence > 1
                                        AND previous_assignment.effective_start_date = paam.effective_start_date
                                        AND previous_assignment.effective_sequence = (
        SELECT
            MAX(effective_sequence)
        FROM
            per_all_assignments_m paam3
        WHERE
            paam.assignment_id = paam3.assignment_id
            AND paam.effective_start_date = paam3.effective_start_date
            AND paam3.effective_sequence < paam.effective_sequence
    ) ) )
    )
ORDER BY
   EMP_ID,effective_date DESC
    --paam.effective_sequence
========================================================================================

SELECT 
  hp.party_name 
         ,psa.party_site_name AddressName
	  ,psa.country
	  ,psa.address1
	  ,psa.address2
	  ,psa.address3
	  ,psa.address4
	  ,psa.address_lines_phonetic
	  ,psa.addr_element_attribute1
	  ,psa.addr_element_attribute2
	  ,psa.addr_element_attribute3
	  ,psa.addr_element_attribute4
	  ,psa.addr_element_attribute5
	  ,psa.building
	  ,psa.floor_number
	  ,psa.city
	  ,psa.state
	  ,psa.province
	  ,psa.county
	  ,psa.postal_code
	  ,psa.postal_plus4_code
	  ,psa.location_language
	  ,psa.inactive_date
	  ,psa.phone_country_code
	  ,psa.phone_area_code
	  ,psa.phone_number
	  ,psa.phone_extension
	  ,psa.fax_country_code
	  ,psa.fax_phone_area_code
	  ,psa.fax_phone_number
	  ,psa.address_purpose_rfq_or_bidding
	  ,psa.address_purpose_ordering
	  ,psa.address_purpose_remit_to
	 ,psa.email_address  email
FROM  poz_suppliers pos
     ,hz_parties hp
     ,poz_supplier_address_v psa 
	 , hz_party_sites hps
WHERE pos.party_id        = hp.party_id
  AND pos.vendor_id       = psa.vendor_id
  AND psa.party_id        = pos.party_id
  and hps.party_site_id = psa.party_site_id
==========================================================================================
SELECT       RCTA.trx_number                                                                                          TRX_NUMBER
            ,RCTA.invoice_currency_code                                                                               INV_CURRENCY_CODE
    		,RCTA.customer_trx_id                                                                                     
    	    ,TO_CHAR(RCTA.trx_date, 'DD-MM-YYYY')                                                                     INVOICE_DATE
    		,TO_CHAR(APSA.due_date, 'DD-MM-YYYY')                                                                     DUE_DATE
    	    ,HCA.account_number                                                                                       CUSTOMER_NUMBER
    	    ,HP.party_name                                                                                            CUSTOMER_NAME
			,HCA.customer_class_code                                                                                  CUSTOMER_CLASSIFICATION
    	    ,RTT.name                                                                                                 TERM
    		,RCTTA.name                                                                                               TRANSACTION_TYPE
			,HCA.attribute1                                                                                           ACCOUNT_DIRECTOR
			,(SELECT PARTY_SITE_NAME
			    FROM hz_party_sites
			   WHERE party_site_id = HCAS.party_site_id)                                                              CUST_SITE_NAME
			,HCAS.attribute1                                                                                          GEOGRAPHY
    		,RCTA.br_amount                                                                                           
    		,gl_flexfields_pkg.get_description_sql                                                                    
            (GCC.chart_of_accounts_id, 1,GCC.segment1)                                                                 ENTITY
    	    ,TO_CHAR(RCTLG.gl_date, 'DD-MM-YYYY')                                                                      ACCOUNTING_DATE  
			,RCTA.doc_sequence_value	                                                                               VOUCHER_NUMBER
			,(SELECT meaning 
			    FROM fnd_lookup_values_tl 
			   WHERE lookup_type = 'AR_ALL_DOC_CLASSES'
			     AND lookup_code = RCTA.trx_class)                                                                     INVOICE_CLASS
			,RCTA.bill_to_site_use_id                                                                                  BILL_TO_SITE_ID
			,'USD'                                                                                                     REPORTING_CURR
			,ROUND(GDR.conversion_rate, 4)                                                                             EXG_RATE_USD
			,GDR.conversion_type                                                                                       EXG_RATE_TYPE_USD
            ,ROUND(APSA.amount_due_remaining*DECODE(RCTA.invoice_currency_code                                        
    		                                     , 'USD', 1                                                             
    											 , GDR.conversion_rate), 4)                                           BALANCE_AMOUNT
    		,APSA.amount_due_original                                                                                 INVOICE_AMOUNT
    	 -- ,ROUND(APSA.amount_due_original*DECODE(GL.currency_code
    		--                                 , RCTA.invoice_currency_code
    			--							 , 1
    				--						 , NVL((SELECT conversion_rate
                      --                            FROM gl_daily_rates
    					--						 WHERE TO_CHAR(conversion_Date, 'DD-MM-YYYY') = TO_CHAR(:p_as_on_date, 'DD-MM-YYYY')
    						--					   AND from_currency = RCTA.invoice_currency_code
    							--				   AND to_currency   = GL.currency_code), 0)), 4)                                   INV_AMT_GL_CURR
    	   ,ROUND(NVL(APSA.amount_due_original*RCTA.exchange_rate, APSA.amount_due_original), 4)            INV_AMT_GL_CURR
		   ,ROUND(NVL(APSA.amount_due_original*RCTA.exchange_rate, APSA.amount_due_original)
		                                       *DECODE(GL.currency_code                                                    
    		                                     , 'USD', 1                                                                         
    											 , GDR.conversion_rate), 4)                                 INV_AMT_USD
		   ,ROUND(RCTLG.acctd_amount*DECODE(GL.currency_code                                                    
    		                                     , 'USD', 1                                                                         
    											 , GDR.conversion_rate), 4)                                 LINE_AMT_USD
    										
    	   ,ROUND((SELECT SUM(tax_amt_tax_curr)
		             FROM zx_lines
			        WHERE trx_id = RCTA.customer_trx_id) *DECODE(GL.currency_code                                                    
    		                                                  , 'USD', 1                                                                         
    											              , GDR.conversion_rate), 4)                    TAX_AMT_USD
		   ,RCTA.attribute1                                                                                 SERVICE_START_DATE
    	   ,RCTA.attribute2                                                                                 SERVICE_END_DATE
		   ,RCTLA.attribute6                                                                                PORTFOLIO_HEAD
    	   ,GL.currency_code                                                                                ENTITY_CURRENCY
    	   ,RCTLA.attribute1                                                                                DISCOUNT_AMOUNT
		   ,RCTLA.attribute5                                                                                TERRITORY
		   ,RCTLA.attribute7                                                                                EMPLOYEE_NUMBER
		   ,(SELECT display_name
		          FROM per_all_people_f     PAPF
		           ,per_person_names_f   PPNF
		      WHERE PAPF.person_id     =  PPNF.person_id
		        AND PAPF.person_number =  RCTLA.attribute7
		        AND PPNF.name_type     =  'GLOBAL'
		        AND TRUNC(SYSDATE) BETWEEN PAPF.effective_start_date
		                               AND PAPF.effective_end_date
		        AND TRUNC(SYSDATE) BETWEEN PPNF.effective_start_date
		                           AND PPNF.effective_end_date
		 	  )                                                                                              EMPLOYEE_NAME
		   ,RCTLA.line_number                                                                                LINE_NUM
		   ,RCTLA.description                                                                                LINE_DESC
		   ,RCTLA.quantity_invoiced                                                                          QTY
		   ,RCTLA.unit_selling_price                                                                         UNIT_PRICE
		   ,RCTLA.UOM_CODE                                                                                   UOM
		   ,GCC.segment1
           || '.'
           || GCC.segment2
           || '.'
           || GCC.segment3
           || '.'
           || GCC.segment4
           || '.'
           || GCC.segment5
           || '.'
           || GCC.segment6
           || '.'
           || GCC.segment7
           || '.'
           || GCC.segment8                                                         ACCOUNT_CODE
		  ,HOU.name                                                                BUSINESS_UNIT                                                        
		  ,GCC.segment1                                                            ENTITY_CODE
		  ,gl_flexfields_pkg.get_description_sql
           (GCC.chart_of_accounts_id, 1, GCC.segment1)                             ENTITY_DESC
		  ,GCC.segment2                                                            GEOGRAPHY_CODE
		  ,gl_flexfields_pkg.get_description_sql
           (GCC.chart_of_accounts_id, 2, GCC.segment2)                             GEOGRAPHY_DESC
		  ,GCC.segment3                                                            SERVICE_LINE_CODE 
		  ,gl_flexfields_pkg.get_description_sql
           (GCC.chart_of_accounts_id, 3, GCC.segment3)                             SERVICE_LINE_DESC
		  ,GCC.segment4                                                            NATURAL_ACCOUNT_CODE
		  ,gl_flexfields_pkg.get_description_sql
           (GCC.chart_of_accounts_id, 4, GCC.segment4)                             NATURAL_ACCOUNT_DESC
		  ,GCC.segment5                                                            COST_CENTRE_CODE
		  ,gl_flexfields_pkg.get_description_sql
           (GCC.chart_of_accounts_id, 5, GCC.segment5)                             COST_CENTRE_DESC
		  ,GCC.segment6                                                            PROJECT_CODE
		  ,gl_flexfields_pkg.get_description_sql
           (GCC.chart_of_accounts_id, 6, GCC.segment6)                             PROJECT_CODE_DESC
		  ,GCC.segment7                                                            LOCATION_CODE
		  ,gl_flexfields_pkg.get_description_sql
           (GCC.chart_of_accounts_id, 7, GCC.segment7)                             LOCATION_CODE_DESC
		  ,GCC.segment8                                                            INTER_COMP_CODE
		  ,gl_flexfields_pkg.get_description_sql                                   
           (GCC.chart_of_accounts_id, 8, GCC.segment8)                             INTER_COMP_DESC
		  ,RCTLA.extended_amount                                                   LINE_BASE_AMT
		  ,RCTLG.acctd_amount                                                      LINE_BASE_ACCTD_AMT
		  ,RCTLA.tax_classification_code                                           TAX_CODE
		  ,(SELECT SUM(tax_amt)
		      FROM zx_lines
			 WHERE trx_id = RCTA.customer_trx_id
			   AND trx_line_number  =  RCTLA.line_number)                          LINE_TAX_AMT
		  ,(SELECT SUM(tax_amt_tax_curr)
		      FROM zx_lines
			 WHERE trx_id = RCTA.customer_trx_id
			   AND trx_line_number  =  RCTLA.line_number)                          LINE_TAX_AMT_ACCTD
		  ,(SELECT SUM(tax_amt)
		      FROM zx_lines
			 WHERE trx_id = RCTA.customer_trx_id)                                  HEADER_TAX_AMT
		  ,(SELECT SUM(tax_amt_tax_curr)
		      FROM zx_lines
			 WHERE trx_id = RCTA.customer_trx_id)                                  HEADER_TAX_AMT_ACCTD
		  ,RCTLA.customer_trx_line_id
		  ,RCTA.exchange_rate                                                      EXCHANGE_RATE
		  ,RCTA.exchange_rate_type                                                 EXCHANGE_RATE_TYPE
		  ,(SELECT   state                                                      
              FROM   hz_locations HL                                            
             WHERE   HL.location_id = HPS.location_id)                             CUST_SITE_STATE
		  ,(SELECT   city                                                      
              FROM   hz_locations HL                                            
             WHERE   HL.location_id = HPS.location_id)                             CUST_SITE_CITY
		  ,HPS.location_id
		  ,GL.currency_code                                                         GL_CURRENCY
		  ,RCTLA.tax_classification_code                                            TAX_CLASS_CODE
		  ,SHIP_TO.party_site_name                                                  SHIP_SITE
		  ,SHIP_TO.city                                                             SHIP_CITY
		  ,SHIP_TO.state                                                           SHIP_STATE
		  ,SHIP_TO.party_site_number                                     SHIP_SITE_NUMBER
                  ,RCTA.attribute12                                                        DFF_TXN_CLASS
		  ,RCTLA.attribute4 						       DFF_PROJECT_CD
		  ,RCTLA.attribute5 						       DFF_COST_CENTER
        FROM ra_customer_trx_all                  RCTA
            ,hz_cust_accounts                     HCA
            ,hz_parties                           HP
            ,ra_terms_tl                          RTT
    		,ra_cust_trx_types_all                RCTTA
            ,ra_cust_trx_line_gl_dist_all         RCTLG
			,ra_customer_trx_lines_all            RCTLA
            ,ar_payment_schedules_all             APSA
    		,gl_daily_rates                       GDR
    		,gl_code_combinations                 GCC
    		,gl_ledgers                           GL
			,hr_operating_units                   HOU
			,hz_cust_site_uses_all                HCSU
            ,hz_cust_acct_sites_all               HCAS
			,hz_party_sites                       HPS
			,(SELECT HP.PARTY_NAME CUSTOMER_NAME,
                     HPS.party_site_name,
	                 HP.party_id,
	                 HCSA.SHIP_TO_FLAG,
					 HPS.party_site_number,
                     HL.CITY,
                     HL.STATE,
					 HCSU_SHIP.PARTY_SITE_USE_ID
               FROM   HZ_CUST_ACCT_SITES_ALL HCSA,
                      HZ_PARTY_SITES  HPS,
                      HZ_CUST_SITE_USES_ALL HCSUA,
                      HZ_CUST_ACCOUNTS    HCA,
					  hz_party_site_uses  HCSU_SHIP,
                      HZ_PARTIES  HP,
                      HZ_LOCATIONS HL
               WHERE  HPS.PARTY_SITE_ID =  HCSA.PARTY_SITE_ID
                 AND   HCSA.CUST_ACCT_SITE_ID = HCSUA.CUST_ACCT_SITE_ID
                 AND   HCA.CUST_ACCOUNT_ID = HCSA.CUST_ACCOUNT_ID
                 AND   HP.PARTY_ID = HCA.PARTY_ID
                 AND   HL.LOCATION_ID = HPS.LOCATION_ID  
                 AND   HCSU_SHIP.PARTY_SITE_ID	 = HPS.party_site_id		 
                 AND   HCSA.SHIP_TO_FLAG = 'P'
                 AND   HCSUA.SITE_USE_CODE = 'SHIP_TO')              SHIP_TO
       WHERE 1 = 1
         --AND RCTA.trx_number IN  ('13002', '13000', '13001')
         AND RCTA.bill_to_customer_id                      =  HCA.cust_account_id
         AND HCA.party_id                                  =  HP.party_id
    	 AND RCTA.cust_trx_type_seq_id                     =  RCTTA.cust_trx_type_seq_id
    	 AND GDR.from_currency(+)                          =  GL.CURRENCY_CODE
    	 AND GDR.to_currency(+)                            =  'USD'
		 AND RCTA.customer_trx_id                          =  RCTLA.customer_trx_id
		 AND HOU.organization_id                           =  RCTA.org_id
		 AND RCTLA.line_type                               =  'LINE'
    	 AND TO_CHAR(GDR.conversion_Date(+), 'DD-MM-YYYY') =  TO_CHAR(:p_as_on_date, 'DD-MM-YYYY')
		 AND RCTA.bill_to_site_use_id                      =  HCSU.site_use_id
		 AND HCSU.cust_acct_site_id                        =  HCAS.cust_acct_site_id
		 AND RCTLG.gl_posted_date IS NOT NULL
         AND RCTA.term_id                                  =  RTT.term_id(+)
         AND RCTA.customer_trx_id                          =  RCTLG.customer_trx_id
         AND RCTA.customer_trx_id                          =  APSA.customer_trx_id(+)
    	 AND RCTLG.code_combination_id                     =  
		 
		 
		 
		 .code_combination_id
    	 AND RCTLG.set_of_books_id                         =  GL.ledger_id
		 AND RCTLG.customer_trx_line_id                    =  RCTLA.customer_trx_line_id
         ------AND RCTLG.latest_rec_flag                         =  'Y'
    	 AND UPPER(GDR.conversion_type(+))                 =  'CORPORATE'
		 AND HPS.party_site_id                             =  HCAS.party_site_id
		 AND RCTLG.account_class                           <> 'SUSPENSE'
		 --AND HP.party_id                                   =  SHIP_TO.party_id(+)
		 AND RCTA.ship_to_party_site_use_id                =  SHIP_TO.party_site_use_id(+)
		 AND HP.party_name                                 IN NVL(:p_cust_name, HP.party_name)
		 AND HOU.name                                      IN (:p_bu_name)
		 AND TRUNC(TO_DATE (TO_CHAR (RCTLG.gl_date, 'DD-MM-YYYY'),
                       'DD-MM-YYYY',
                       'NLS_DATE_LANGUAGE = American')) BETWEEN TRUNC(TO_DATE (
                                                                         TO_CHAR (
                                                                            :p_gl_date_from,
                                                                            'DD-MM-YYYY'
                                                                         ),
                                                                         'DD-MM-YYYY',
                                                                         'NLS_DATE_LANGUAGE = American'
                                                                      ))
                                                            AND  TRUNC(TO_DATE (
                                                                          TO_CHAR (
                                                                             :p_gl_date_TO,
                                                                             'DD-MM-YYYY'
                                                                          ),
                                                                          'DD-MM-YYYY',
                                                                          'NLS_DATE_LANGUAGE = American'
                                                                       ))
    	 --AND RCTA.org_id                                   IN (:p_bu_name)
    	 --AND HCA.cust_account_id                           =   DECODE(:P_CUSTOMER_NAME, 1, HCA.cust_account_id, :P_CUSTOMER_NAME)
===================================================================================================
SELECT
    xx.*,
    CASE
        WHEN xx.customer_type = 'B2C' THEN
            'upi://pay?ver=01&mode=15&tr='||xx.invoice_number||'&pa=CRISILLTD977@icici&pn=CRISIL LIMITED&mc=5411&am='
            || xx.total_payable_amt_aed
            || '&gstBrkUp='
            ||
                CASE
                    WHEN :cs_cgst_amount_aed != 0 THEN
                        'CGST:'
                        || :cs_cgst_amount_aed
                        || '|SGST:'
                        || :cs_sgst_amount_aed
                    WHEN :cs_igst_amount_aed != 0 THEN
                        'IGST:' || :cs_igst_amount_aed
                    ELSE
                        'GST:0'
                END
            || '&qrMedium=03&invoiceNo='
            || xx.invoice_number
            || '&InvoiceDate='
            || to_char(xx.trx_date, 'YYYY-MM-DD', 'NLS_DATE_LANGUAGE = American')
            || 'T'
            || to_char(xx.trx_date, 'HH24:MI:SS', 'NLS_DATE_LANGUAGE = American')
            || '+05:30'
            || '&gstIn='
            || xx.le_gst_number
            || '&sign=ICICI'
    END dynamic_qr_code
FROM
    (
        SELECT
            rcta.trx_number                     invoice_number,
            rcta.customer_trx_id,
            to_char(rcta.trx_date, 'DD-Mon-YYYY', 'NLS_DATE_LANGUAGE = American') invoice_date,
            rcta.trx_date,
            nvl(rcta.purchase_order, 'AB') po_number,
            rcta.invoice_currency_code          inv_currency,
            decode(rcta.attribute12, 'GR&RS', 'AB', hp.party_name) customer_name,
            nvl(rcta.attribute6, 'AB') irn_number,
            decode(nvl(rcta.attribute6, 'Not Applicable'), 'Not Applicable', 'N', 'Y') irn_applicable,
            nvl(rcta.attribute7, 'AB') ack_number,
            nvl(rcta.attribute8, 'AB') ack_date,
            nvl(rcta.attribute2, 'AB') client_trn_uae,
            nvl(rcta.attribute9, 'AB') service_month,
            rtt.name                            term,
            rcta.attribute10                    sales_person_name,
            hl_bill.address1                    bill_to_address1,
            hl_bill.address2                    bill_to_address2,
            hl_bill.address3                    bill_to_address3,
            hl_bill.address4                    bill_to_address4,
            decode(rcta.attribute12, 'GR&RS', NULL, hl_bill.city) bill_to_city,
            rcta.trx_class,
            decode(rcta.attribute12, 'GR&RS', NULL, nvl(hl_bill.province, hl_bill.state)) bill_to_state,
            decode(rcta.attribute12, 'GR&RS', NULL, terr_bill.territory_short_name) bill_to_country,
            decode(rcta.attribute12, 'GR&RS', NULL, hl_bill.postal_code) bill_to_postal_code,
            hl_ship.address1                    ship_to_address1,
            hl_ship.address2                    ship_to_address2,
            hl_ship.address3                    ship_to_address3,
            hl_ship.address4                    ship_to_address4,
            hl_ship.city                        ship_to_city,
            (
                SELECT
                    trx_number
                FROM
                    ra_customer_trx_all
                WHERE
                    customer_trx_id = rcta.previous_customer_trx_id
            ) original_invoice_number,
            (
                SELECT
                    to_char(trx_date, 'DD-MM-YYYY')
                FROM
                    ra_customer_trx_all
                WHERE
                    customer_trx_id = rcta.previous_customer_trx_id
            ) original_invoice_date,
            nvl((
                SELECT
                    rep_registration_number
                FROM
                    zx_party_tax_profile
                WHERE
                    party_id = hp.party_id
                    AND ROWNUM < 2
            ), 'AB') buyer_pan,
            CASE
                WHEN rcta.trx_class IN (
                    'CM',
                    'ONACC'
                ) THEN
                    (
                        SELECT
                            nvl(abs(SUM(attribute2 - attribute3)), 0)
                        FROM
                            ra_customer_trx_lines_all
                        WHERE
                            customer_trx_id = rcta.customer_trx_id
                            AND line_type = 'LINE'
                    )
                ELSE
                    (
                        SELECT
                            decode(rcta.trx_class, 'CM', SUM(abs(extended_amount)), 'ONACC', SUM(abs(extended_amount)),
                                   SUM(extended_amount))
                        FROM
                            ra_customer_trx_lines_all
                        WHERE
                            customer_trx_id = rcta.customer_trx_id
                            AND line_type = 'LINE'
                    )
            END sub_total,
            CASE
                WHEN rcta.trx_class IN (
                    'CM',
                    'ONACC'
                ) THEN
                    (
                        SELECT
                            nvl(abs(SUM(attribute2 - attribute3)), 0)
                        FROM
                            ra_customer_trx_lines_all
                        WHERE
                            customer_trx_id = rcta.customer_trx_id
                            AND line_type = 'LINE'
                    ) * nvl(rcta.exchange_rate, 1)
                ELSE
                    (
                        SELECT
                            ( decode(rcta.trx_class, 'CM', SUM(abs(extended_amount)), 'ONACC', SUM(abs(extended_amount)),
                                     SUM(extended_amount)) * nvl(rcta.exchange_rate, 1) )
                        FROM
                            ra_customer_trx_lines_all
                        WHERE
                            customer_trx_id = rcta.customer_trx_id
                            AND line_type = 'LINE'
                    )
            END sub_total_aed,
            rcta.exchange_rate                  conversion_rate,
            (
                SELECT
                    attribute1
                FROM
                    ra_customer_trx_lines_all
                WHERE
                    attribute1 IS NOT NULL
                    AND rcta.customer_trx_id = customer_trx_id
                    AND ROWNUM < 2
            ) hsn_code,
            nvl(hl_ship.province, hl_ship.state) ship_to_state,
            terr_ship.territory_short_name      ship_to_country,
            hl_ship.postal_code                 ship_to_postal_code,
            nvl((
                SELECT
                    SUM(tax_amt_funcl_curr)
                FROM
                    zx_lines
                WHERE
                    trx_id = rcta.customer_trx_id
                    AND tax_rate_code LIKE '%VAT%'
            ), 0) vat_amt,
            hou.default_legal_context_id,
            CASE
                WHEN ( upper(leg_reg.legal_entity_identifier) LIKE '%COALITION%' -- Added by Meenal on 22 Feb
                       AND leg_reg.le_information_context = 'GB' ) THEN
                    '795 6816 65'
                WHEN upper(leg_reg.legal_entity_identifier) LIKE '%IREVNA%UK%' THEN
                    '769 1321 17'
                WHEN upper(leg_reg.legal_entity_identifier) LIKE '%IREVNA%US%' THEN
                    '76-0729666'
                ELSE
                    leg_reg.registration_number
            END seller_pan,
            leg_reg.address1                    seller_address1,
            leg_reg.address2                    seller_address2,
            leg_reg.address3                    seller_address3,
            leg_reg.address4                    seller_address4,
            leg_reg.city                        seller_city,
            leg_reg.state                       seller_state,
            leg_reg.territory_short_name        seller_country,
            leg_reg.name                        selller_name,
            leg_reg.postal_code                 seller_postal_code,
            rcta.attribute12                    trx_classification,
            nvl((
                SELECT
                    SUM(decode(rcta.trx_class, 'CM', abs(regexp_replace((attribute3), '[^0-9.]', 0)), 'ONACC', abs(regexp_replace
                    ((attribute3), '[^0-9.]', 0)), regexp_replace((attribute3), '[^0-9.]', 0)))
                FROM
                    ra_customer_trx_lines_all
                WHERE
                    rcta.customer_trx_id = customer_trx_id
            ), 0) discount,
            (
                SELECT
                    SUM(decode(rcta.trx_class, 'CM', abs(regexp_replace((attribute3), '[^0-9.]', 0)), 'ONACC', abs(regexp_replace
                    ((attribute3), '[^0-9.]', 0)), regexp_replace((attribute3), '[^0-9.]', 0))) * nvl(rcta.exchange_rate, 1)
                FROM
                    ra_customer_trx_lines_all
                WHERE
                    rcta.customer_trx_id = customer_trx_id
            ) discount_aed,
            nvl((
                SELECT
                    decode(zr.registration_number, 'ECC123456', NULL, 'UNR123456', NULL,
                           zr.registration_number)
                FROM
                    zx_party_tax_profile   zptp, zx_registrations       zr
                WHERE
                    party_id = hcas_ps_ship.party_site_id
                    AND zr.party_tax_profile_id = zptp.party_tax_profile_id
                    AND registration_number IS NOT NULL
                    AND zr.tax_regime_code = 'IN_GST'
                    AND trunc(sysdate) BETWEEN trunc(zr.effective_from) AND trunc(nvl(zr.effective_to, TO_DATE('47121231', 'YYYYMMDD'
                    )))
                    AND ROWNUM < 2
            ), 'AB') ship_gst_number,
            nvl(cust_gst.registration_number, 'AB') bill_gst_number,
            cust_gst.registration_status_code   cust_register_code,
            decode(hcas_ps_bill.party_site_id, hcas_ps_ship.party_site_id, 'AB', 'NULL') ship_to_identifier,
            le_gst.registration_number          le_gst_number,
            nvl(buyer_tbl.party_name, 'AB') buyer_name,
            CASE
                WHEN ( upper(rcta.attribute12) = 'RESEARCH'
                       AND upper(buyer_tbl.job_title) = 'NOT AVAILABLE' ) THEN
                    'AB'
                WHEN upper(rcta.attribute12) IN (
                    'GR&RS',
                    'SME'
                ) THEN
                    'AB'
                ELSE
                    nvl(buyer_tbl.job_title, 'AB')
            END buyer_job,
            (
                SELECT
                    tag
                FROM
                    fnd_lookup_values
                WHERE
                    lookup_type = 'CRISIL_STATE_CODE'
                    AND upper(lookup_code) = upper(nvl(hl_bill.province, hl_bill.state))
            ) buyer_state_code,
            (
                SELECT
                    tag
                FROM
                    fnd_lookup_values
                WHERE
                    lookup_type = 'CRISIL_STATE_CODE'
                    AND upper(lookup_code) = upper(nvl(hl_ship.province, hl_ship.state))
            ) ship_state_code,
            (
                SELECT
                    tag
                    || ' ('
                    || meaning
                    || ')'
                FROM
                    fnd_lookup_values
                WHERE
                    lookup_type = 'CRISIL_STATE_CODE'
                    AND upper(lookup_code) = upper(nvl(hl_bill.province, hl_bill.state))
            ) place_of_supply,
            (
                SELECT
                    meaning
                FROM
                    fnd_lookup_values
                WHERE
                    lookup_type = 'CRISIL_STATE_CODE'
                    AND tag = substr(le_gst.registration_number, 1, 2)
            )
            || ' ('
            || substr(le_gst.registration_number, 1, 2)
            || ')' loc_of_supply,
            decode(leg_reg.le_information_context, 'US', 'EIN', 'GB', 'VAT',
                   leg_reg.registration_code) registration_code,
            leg_reg.le_information_context,
            CASE
                WHEN rcta.trx_class IN (
                    'CM',
                    'ONACC'
                ) THEN
                    round(((
                        SELECT
                            nvl(abs(SUM(attribute2 - attribute3)), 0)
                        FROM
                            ra_customer_trx_lines_all
                        WHERE
                            customer_trx_id = rcta.customer_trx_id
                            AND line_type = 'LINE'
                    ) + nvl((
                        SELECT
                            abs(SUM((rctla.attribute2 - rctla.attribute3) *(zl.tax_rate / 100))) amount
                        FROM
                            zx_lines                    zl, ra_customer_trx_lines_all   rctla
                        WHERE
                            zl.trx_id = rcta.customer_trx_id
                            AND rcta.trx_class IN(
                                'CM', 'ONACC'
                            )
                            AND rcta.customer_trx_id = rctla.customer_trx_id
                            AND rctla.attribute_category IS NOT NULL
                            AND rctla.customer_trx_line_id = zl.trx_line_id
                    ), 0)), 5)
                ELSE
                    nvl(amt_orig.amt_original,(
                        SELECT
                            SUM(rctla.extended_amount)
                        FROM
                            ra_customer_trx_lines_all rctla
                        WHERE
                            rctla.customer_trx_id = rcta.customer_trx_id
                    ))
            END total_payable_amt,
            (
                CASE
                    WHEN rcta.trx_class IN (
                        'CM',
                        'ONACC'
                    ) THEN
                        round(((
                            SELECT
                                nvl(abs(SUM(attribute2 - attribute3)), 0)
                            FROM
                                ra_customer_trx_lines_all
                            WHERE
                                customer_trx_id = rcta.customer_trx_id
                                AND line_type = 'LINE'
                        ) + nvl((
                            SELECT
                                abs(SUM((rctla.attribute2 - rctla.attribute3) *(zl.tax_rate / 100))) amount
                            FROM
                                zx_lines                    zl, ra_customer_trx_lines_all   rctla
                            WHERE
                                zl.trx_id = rcta.customer_trx_id
                                AND rcta.trx_class IN(
                                    'CM', 'ONACC'
                                )
                                AND rcta.customer_trx_id = rctla.customer_trx_id
                                AND rctla.attribute_category IS NOT NULL
                                AND rctla.customer_trx_line_id = zl.trx_line_id
                        ), 0)), 5)
                    ELSE
                        nvl(amt_orig.amt_original,(
                            SELECT
                                SUM(rctla.extended_amount)
                            FROM
                                ra_customer_trx_lines_all rctla
                            WHERE
                                rctla.customer_trx_id = rcta.customer_trx_id
                        ))
                END
            ) * nvl(rcta.exchange_rate, 1) total_payable_amt_aed,
            leg_reg.legal_entity_identifier,
            replace((
                CASE
                    WHEN leg_reg.legal_entity_identifier = 'PSPL UAE' THEN
                        replace(iby_amount_in_words.get_amount_in_words((
                            CASE
                                WHEN rcta.trx_class IN(
                                    'CM', 'ONACC'
                                ) THEN
                                    round(((
                                        SELECT
                                            nvl(abs(SUM(attribute2 - attribute3)), 0)
                                        FROM
                                            ra_customer_trx_lines_all
                                        WHERE
                                            customer_trx_id = rcta.customer_trx_id
                                            AND line_type = 'LINE'
                                    ) + nvl((
                                        SELECT
                                            abs(SUM((rctla.attribute2 - rctla.attribute3) *(zl.tax_rate / 100))) amount
                                        FROM
                                            zx_lines                    zl, ra_customer_trx_lines_all   rctla
                                        WHERE
                                            zl.trx_id = rcta.customer_trx_id
                                            AND rcta.trx_class IN(
                                                'CM', 'ONACC'
                                            )
                                            AND rcta.customer_trx_id = rctla.customer_trx_id
                                            AND rctla.attribute_category IS NOT NULL
                                            AND rctla.customer_trx_line_id = zl.trx_line_id
                                    ), 0)), 5)
                                ELSE
                                    nvl(amt_orig.amt_original,(
                                        SELECT
                                            SUM(rctla.extended_amount)
                                        FROM
                                            ra_customer_trx_lines_all rctla
                                        WHERE
                                            rctla.customer_trx_id = rcta.customer_trx_id
                                    ))
                            END
                        ), rcta.invoice_currency_code), '*****', NULL)		-- *NVL(RCTA.exchange_rate, 1) Commented on 19Feb, Invoice Currency Added
                    ELSE
                        replace(iby_amount_in_words.get_amount_in_words((
                            CASE
                                WHEN rcta.trx_class IN(
                                    'CM', 'ONACC'
                                ) THEN
                                    round(((
                                        SELECT
                                            nvl(abs(SUM(attribute2 - attribute3)), 0)
                                        FROM
                                            ra_customer_trx_lines_all
                                        WHERE
                                            customer_trx_id = rcta.customer_trx_id
                                            AND line_type = 'LINE'
                                    ) + nvl((
                                        SELECT
                                            abs(SUM((rctla.attribute2 - rctla.attribute3) *(zl.tax_rate / 100))) amount
                                        FROM
                                            zx_lines                    zl, ra_customer_trx_lines_all   rctla
                                        WHERE
                                            zl.trx_id = rcta.customer_trx_id
                                            AND rcta.trx_class IN(
                                                'CM', 'ONACC'
                                            )
                                            AND rcta.customer_trx_id = rctla.customer_trx_id
                                            AND rctla.attribute_category IS NOT NULL
                                            AND rctla.customer_trx_line_id = zl.trx_line_id
                                    ), 0)), 5)
                                ELSE
                                    nvl(amt_orig.amt_original,(
                                        SELECT
                                            SUM(rctla.extended_amount)
                                        FROM
                                            ra_customer_trx_lines_all rctla
                                        WHERE
                                            rctla.customer_trx_id = rcta.customer_trx_id
                                    ))
                            END
                        ), rcta.invoice_currency_code), '*****', NULL) 			-- Invoice Currency Added on 19Feb by Pratul
                END
            ), '  ', ' ') amount_in_word,
            leg_reg.legal_entity_identifier
            || '%-%'
            || rcta.attribute12
            || '%-%'
            || rcta.invoice_currency_code identifier,
            (
                SELECT
                    description
                FROM
                    fnd_lookup_values
                WHERE
                    lookup_type = 'CRISIL_BUSINESS_LOGO'
                    AND lookup_code LIKE leg_reg.legal_entity_identifier
                                         || '%-%'
                                         || nvl(rcta.attribute12, 'AB')
                                         || '%-%'
                                         || rcta.invoice_currency_code
            ) business_logo,
            (
                SELECT
                    description
                FROM
                    fnd_lookup_values
                WHERE
                    lookup_type = 'CRISIL_LUT'
                    AND lookup_code = le_gst.registration_number
            ) ack_number_lut,
            (
                SELECT
                    tag
                FROM
                    fnd_lookup_values
                WHERE
                    lookup_type = 'CRISIL_LUT'
                    AND lookup_code = le_gst.registration_number
            ) ack_date_lut,
            doc_dtls.did,
            CASE
                WHEN leg_reg.name IN (
                    'CRISIL Limited',
                    'CRISIL Ratings Limited',
                    'CRISIL Risk and Infrastructure Solutions Limited'
                )
                     AND rcta.trx_class NOT IN (
                    'CM',
                    'ONACC'
                ) THEN
                    'AB'
                ELSE
                    NULL
            END electronic_payment,
            CASE
                WHEN cust_gst.registration_status_code = 'EXPORT'
                     AND leg_reg.le_information_context NOT IN (
                    'US',
                    'UK'
                ) THEN
                    'SUPPLY MEANT FOR EXPORT UNDER BOND OR LETTER OF UNDERTAKING WITHOUT PAYMENT OF IGST. ('
                    || (
                        SELECT
                            description
                        FROM
                            fnd_lookup_values
                        WHERE
                            lookup_type = 'CRISIL_LUT'
                            AND lookup_code = le_gst.registration_number
                    )
                    || ' and '
                    || (
                        SELECT
                            tag
                        FROM
                            fnd_lookup_values
                        WHERE
                            lookup_type = 'CRISIL_LUT'
                            AND lookup_code = le_gst.registration_number
                    )
                    || ' )'
                WHEN cust_gst.registration_status_code = 'SEZ'
                     AND leg_reg.le_information_context NOT IN (
                    'US',
                    'UK'
                ) THEN
                    'SUPPLY TO SEZ UNIT OR SEZ DEVELOPER FOR AUTHORISED OPERATIONS WITHOUT PAYMENT OF INTEGRATED TAX. ('
                    || (
                        SELECT
                            description
                        FROM
                            fnd_lookup_values
                        WHERE
                            lookup_type = 'CRISIL_LUT'
                            AND lookup_code = le_gst.registration_number
                    )
                    || ' and '
                    || (
                        SELECT
                            tag
                        FROM
                            fnd_lookup_values
                        WHERE
                            lookup_type = 'CRISIL_LUT'
                            AND lookup_code = le_gst.registration_number
                    )
                    || ' )'
                ELSE
                    'AB'
            END sez_export_dec,
            CASE
                WHEN leg_reg.legal_entity_identifier = 'CRISIL Ratings' THEN
                    nvl(flv.description, 'AB')
                ELSE
                    nvl2(flv.description,('In case of any clarification on Invoice, please contact '
                                          || replace(flv.description, ',,', ',')
                                          || ' at '
                                          || leg_reg.name
                                          || ' '
                                          || leg_reg.address1
                                          || leg_reg.address2
                                          || leg_reg.address3
                                          || leg_reg.address4
                                          || leg_reg.city
                                          || ' '
                                          || leg_reg.state
                                          || leg_reg.territory_short_name
                                          || leg_reg.postal_code), 'AB')
            END print_line,
            nvl(replace(replace(note_txt, '<div>', ''), '</div>', ''), 'AB') note_txt1,
            nvl(flv1.description, 'AB') gen_line_1,
            decode(rcta.trx_class, 'CM', 'AB', 'ONACC', 'AB',
                   nvl(flv2.description, 'AB')) gen_line_2,
            CASE
                WHEN rcta.trx_class IN (
                    'CM',
                    'ONACC'
                ) THEN
                    'AB'
                ELSE
                    nvl2(flv3.attribute5, flv3.attribute5, 'AB')
            END bank_det_1,
            CASE
                WHEN rcta.trx_class IN (
                    'CM',
                    'ONACC'
                ) THEN
                    'AB'
                ELSE
                    nvl2(flv3.attribute1, flv3.attribute1, 'AB')
            END bank_det_2,
            CASE
                WHEN rcta.trx_class IN (
                    'CM',
                    'ONACC'
                ) THEN
                    'AB'
                ELSE
                    nvl2(flv3.attribute2, flv3.attribute2, 'AB')
            END bank_det_3,
            CASE
                WHEN rcta.trx_class IN (
                    'CM',
                    'ONACC'
                ) THEN
                    'AB'
                ELSE
                    nvl2(flv3.attribute3, flv3.attribute3, 'AB')
            END bank_det_4,
            CASE
                WHEN rcta.trx_class IN (
                    'CM',
                    'ONACC'
                ) THEN
                    'AB'
                ELSE
                    nvl2(flv3.attribute4, flv3.attribute4, 'AB')
            END bank_det_5,
            CASE
                WHEN rcta.trx_class IN (
                    'CM',
                    'ONACC'
                ) THEN
                    'AB'
                ELSE
                    nvl2(flv3.attribute6, flv3.attribute6, 'AB')
            END bank_det_6,
            CASE
                WHEN rcta.trx_class IN (
                    'CM',
                    'ONACC'
                ) THEN
                    'AB'
                ELSE
                    nvl2(flv3.attribute7, flv3.attribute7, 'AB')
            END bank_det_7,
            CASE
                WHEN rcta.trx_class IN (
                    'CM',
                    'ONACC'
                ) THEN
                    'AB'
                ELSE
                    nvl2(flv3.attribute8, flv3.attribute8, 'AB')
            END bank_det_8,
            CASE
                WHEN rcta.trx_class IN (
                    'CM',
                    'ONACC'
                ) THEN
                    'AB'
                ELSE
                    nvl2(flv3.attribute9, flv3.attribute9, 'AB')
            END bank_det_9,
            CASE
                WHEN rcta.trx_class IN (
                    'CM',
                    'ONACC'
                ) THEN
                    'AB'
                ELSE
                    nvl2(flv3.attribute10, flv3.attribute10, 'AB')
            END bank_det_10,
            CASE
                WHEN rcta.trx_class IN (
                    'CM',
                    'ONACC'
                ) THEN
                    'AB'
                ELSE
                    nvl((nvl2(flv3.attribute5, flv3.attribute5, NULL)
                         || nvl2(flv3.attribute1, flv3.attribute1 || CHR(10), NULL)
                         || nvl2(flv3.attribute2, flv3.attribute2 || CHR(10), NULL)
                         || nvl2(flv3.attribute3, flv3.attribute3 || CHR(10), NULL)
                         || nvl2(flv3.attribute4, flv3.attribute4 || CHR(10), NULL)
                         || nvl2(flv3.attribute6, flv3.attribute6 || CHR(10), NULL)
                         || nvl2(flv3.attribute7, flv3.attribute7 || CHR(10), NULL)
                         || nvl2(flv3.attribute8, flv3.attribute8 || CHR(10), NULL)
                         || nvl2(flv3.attribute9, flv3.attribute9 || CHR(10), NULL)
                         || nvl2(flv3.attribute10, flv3.attribute10 || CHR(10), NULL)), 'AB')
            END banking_details,
            CASE
                WHEN rcta.trx_class IN (
                    'CM',
                    'ONACC'
                ) THEN
                    'Credit Note'
                WHEN cust_gst.registration_status_code = 'EXEMPT' THEN
                    'Bill of Supply'
                WHEN leg_reg.country <> 'IN'			-- Added by Pratul on 19Feb
                 THEN
                    'Invoice'
                ELSE
                    'Tax Invoice (Original for Recipient)'
            END invoice_header,
            CASE
                WHEN note_txt IS NULL THEN
                    'AB'
                ELSE
                    NULL
            END txt_field,
            decode(rcta.trx_class, 'CM', 'Credit Note Number', 'ONACC', 'Credit Note Number',
                   'Invoice Number') inv_number,
            decode(rcta.trx_class, 'CM', 'Credit Note Date', 'ONACC', 'Credit Note Date',
                   'Invoice Date') inv_date,
            CASE
                WHEN upper(leg_reg.legal_entity_identifier) LIKE '%COALITION%' THEN
                    'Y'
                ELSE
                    'N'
            END is_coalition -- Added by Meenal on 22Feb
            ,
            leg_reg.legal_entity_identifier
            || '%-%'
            || nvl(rcta.attribute12, 'AB')
            || '%-%'
            || rcta.invoice_currency_code bank_det,
            nvl(slr_det.description, '~') slr_addr1		-- Added by Pratul on 19Feb
            ,
            nvl(slr_det.tag, '~') slr_addr2		-- Added by Pratul on 19Feb
            ,
            CASE
                WHEN instr(slr_det.attribute1, '|') > 0 THEN
                    nvl(TRIM(substr(slr_det.attribute1, instr(slr_det.attribute1, '|') + 1)), '~')
                ELSE
                    nvl(slr_det.attribute1, '~')
            END slr_addr3									-- Added by Pratul on 19Feb
            ,
            nvl(slr_det.attribute2, '~') slr_addr4		-- Added by Pratul on 19Feb
            ,
            nvl(slr_det.attribute3, '~') slr_addr5		-- Added by Pratul on 19Feb
            ,
            CASE
                WHEN instr(slr_det.attribute1, '|') > 0 THEN
                    nvl(TRIM(slr_det.attribute5
                             || ' '
                             || substr(slr_det.attribute1, 1, instr(slr_det.attribute1, '|') - 1)), '~')
                ELSE
                    nvl(slr_det.attribute5, '~')
            END slr_addr6									-- Added by Pratul on 19Feb
            ,
            CASE
                WHEN ( upper(leg_reg.legal_entity_identifier) LIKE '%COALITION%' -- Added by Meenal on 22 Feb
                       AND leg_reg.le_information_context = 'GB'
                       AND hl_bill.country = 'US' ) THEN
                    '98-1465173'
                WHEN ( upper(leg_reg.legal_entity_identifier) = 'CRISIL LIMITED'
                       AND hl_bill.country = 'US' ) THEN
                    '98-1494817'
                ELSE
                    'AB'
            END ein_number,
            CASE
                WHEN cust_gst.registration_status_code = 'EXPORT'         THEN
                    'EXPWOP'
                WHEN cust_gst.registration_status_code = 'SEZ'            THEN
                    'SEZWOP'
                WHEN cust_gst.registration_status_code = 'NOT REGISTERED' THEN
          --'B2C'
                    (
                        CASE
                            WHEN nvl((
                                CASE
                                    WHEN cust_gst.registration_status_code = 'EXPORT' THEN
                                        'URP'
                                    WHEN cust_gst.registration_status_code IN(
                                        'NOT REGISTERED', 'NIL RATED', 'EXEMPT'
                                    ) THEN
                                        coalesce(substr(cust_gst.registration_number, 1, 15), substr(hcas_bill.attribute1, 1, 15), 'URP')
                                    ELSE
                                        substr(cust_gst.registration_number, 1, 15)
                                END
                            ), 'X') = 'URP' THEN
                                'B2C'
                            ELSE
                                'B2B'
                        END
                    )                        -- Added by Anand on 23Mar2021
                WHEN ( cust_gst.registration_status_code = 'NIL RATED'
                       AND ( cust_gst.registration_number IS NOT NULL
                             OR hcas_bill.attribute1 IS NOT NULL ) ) THEN
                    'B2B'
                WHEN cust_gst.registration_number IS NOT NULL THEN
                    'B2B'
                ELSE
                    NULL
            END customer_type
        FROM
            ra_customer_trx_all      rcta,
            hz_cust_accounts         hca,
            hz_parties               hp,
            ra_terms_tl              rtt,
            hz_locations             hl_bill,
            hz_cust_site_uses_all    hcsu_bill,
            hz_cust_acct_sites_all   hcas_bill,
            hz_party_sites           hcas_ps_bill,
            fnd_territories_vl       terr_bill,
            hz_locations             hl_ship,
            fnd_lookup_values        flv,
            fnd_lookup_values        flv1,
            fnd_lookup_values        flv2,
            fnd_lookup_values        flv3,
            zmm_notes                note,
            (
                SELECT
                    nvl(SUM(apsa.amount_due_original), 0) amt_original,
                    customer_trx_id
                FROM
                    ar_payment_schedules_all apsa
                GROUP BY
                    customer_trx_id
            ) amt_orig,
            hz_party_site_uses       hcsu_ship,
            hz_party_sites           hcas_ps_ship,
            fnd_territories_vl       terr_ship,
            hr_operating_units       hou,
            (
                SELECT
                    zr.effective_from   -- ADDED BY SNEHAL ON 23/03/2021
                    ,
                    zr.effective_to  -- ADDED BY SNEHAL ON 23/03/2021
                    ,
                    decode(zr.registration_number, 'ECC123456', NULL, 'UNR123456', NULL,
                           zr.registration_number) registration_number,
                    ptp.party_id,
                    zr.registration_status_code
                FROM
                    zx_registrations       zr,
                    zx_party_tax_profile   ptp
                WHERE
                    zr.party_tax_profile_id = ptp.party_tax_profile_id
                    AND ptp.party_type_code = 'THIRD_PARTY_SITE'
                    AND zr.tax_regime_code = 'IN_GST'
            ) cust_gst,
            (
                SELECT
                    zr.registration_number,
                    fab.bu_id,
                    zr.registration_id
                FROM
                    zx_registrations           zr,
                    zx_party_tax_profile       ptp,
                    xle_establishment_v        xe,
                    fun_all_business_units_v   fab
                WHERE
                    zr.party_tax_profile_id = ptp.party_tax_profile_id
                    AND ptp.party_type_code = 'LEGAL_ESTABLISHMENT'
                    AND ptp.party_id = xe.party_id
           -- and xe.main_establishment_flag = 'Y'
                    AND xe.legal_entity_id = fab.legal_entity_id
            ) le_gst,
            (
                SELECT
                    hoc.job_title_code,
                    TRIM(hp.person_title
                         || ' '
                         || hp.party_name) party_name,
                    hr.subject_id,
                    hcar.cust_acct_site_id,
                    hcar.cust_account_id,
                    hoc.job_title job_title
                FROM
                    hz_parties              hp,
                    hz_relationships        hr,
                    hz_org_contacts         hoc,
                    hz_cust_account_roles   hcar
                WHERE
                    1 = 1
                    AND hr.subject_table_name = 'HZ_PARTIES'
                    AND hr.object_table_name = 'HZ_PARTIES'
                    AND hr.relationship_id = hoc.party_relationship_id (+)
                    AND hr.object_id = hp.party_id
                    AND hcar.contact_person_id = hr.object_id (+)
                    AND hcar.relationship_id = hr.relationship_id (+)
            ) buyer_tbl,
            (
                SELECT
                    xep.name,   -- Legal Entity Name
                    xjv.registration_code_le registration_code,
                    xr.registration_number,
                    xep.le_information_context,
                    xep.legal_entity_identifier,
                    hl.address1,
                    nvl2(hl.address2, ', ' || hl.address2, hl.address2) address2,
                    nvl2(hl.address3, ', ' || hl.address3, hl.address3) address3,
                    hl.address4,
                    nvl2(hl.city, ', ' || hl.city, hl.city) city,
                    nvl2(hl.postal_code, '- ' || hl.postal_code, hl.postal_code) postal_code,
                    hl.state,
                    hl.province,
                    hl.country,
                    hl.county,
                    nvl2(ftv.territory_short_name, ', ' || ftv.territory_short_name, ftv.territory_short_name) territory_short_name
                    ,
                    ftv.description,
                    xep.legal_entity_id
                FROM
                    xle_registrations      xr,
                    xle_jurisdictions_vl   xjv,
                    hz_locations           hl,
                    fnd_territories_vl     ftv,
                    xle_entity_profiles    xep
                WHERE
                    1 = 1
                    AND xr.source_table = 'XLE_ENTITY_PROFILES'
                    AND xr.source_id = xep.legal_entity_id
                    AND xjv.jurisdiction_id = xr.jurisdiction_id
                    AND hl.location_id = xr.location_id
                    AND ftv.territory_code = hl.country
                    AND sysdate BETWEEN nvl(xr.effective_from, sysdate - 1) AND nvl(xr.effective_to, sysdate + 1)
            ) leg_reg,
            (
                SELECT
                    rcta.customer_trx_id,
                    rr.did,
                    fad.created_by,
                    fdl.title
                FROM
                    ra_customer_trx_all      rcta,
                    fnd_attached_documents   fad,
                    fnd_documents_tl         fdl,
                    revisions                rr
                WHERE
                    rcta.customer_trx_id = fad.pk1_value
                    AND fad.document_id = fdl.document_id
                    AND fad.entity_name = 'RA_CUSTOMER_TRX_ALL'
                    AND fdl.dm_document_id = rr.ddocname
            ) doc_dtls,
            (
                SELECT
                    decode(flv.lookup_code, 'Irevna UK Limited', 'CRISIL Irevna UK Limited', flv.lookup_code) lookup_code -- changed by Aditya 19th March
                    ,
                    flv.description,
                    flv.tag,
                    flv.attribute1,
                    flv.attribute2,
                    flv.attribute3,
                    flv.attribute5
                FROM
                    fnd_lookup_values flv
                WHERE
                    flv.lookup_type = 'CRISIL_AR_ADDRESS_PRINT'
                    AND flv.enabled_flag = 'Y'
            ) slr_det				-- Lookup Details Added by Pratul on 19Feb
        WHERE
            1 = 1
            AND rcta.bill_to_customer_id = hca.cust_account_id
            AND hca.party_id = hp.party_id
            AND rcta.term_id = rtt.term_id (+)
            AND hl_bill.location_id (+) = hcas_ps_bill.location_id
            AND hl_bill.country = terr_bill.territory_code (+)
            AND hcas_bill.party_site_id = hcas_ps_bill.party_site_id (+)
            AND hcas_bill.cust_acct_site_id (+) = hcsu_bill.cust_acct_site_id
            AND hou.default_legal_context_id = leg_reg.legal_entity_id (+)
            AND leg_reg.legal_entity_identifier = slr_det.lookup_code (+)				-- Added by Pratul on 19Feb
            AND rcta.customer_trx_id = amt_orig.customer_trx_id (+)
            AND rcta.customer_trx_id = doc_dtls.customer_trx_id (+)
            AND hcsu_bill.site_use_id (+) = rcta.bill_to_site_use_id
            AND hl_ship.location_id (+) = hcas_ps_ship.location_id
            AND note.source_object_code (+) = 'AR_TRANSACTION'
            AND rcta.customer_trx_id = note.source_object_uid (+)
            AND hl_ship.country = terr_ship.territory_code (+)
            AND hcsu_ship.party_site_id = hcas_ps_ship.party_site_id (+)
            AND hcas_ps_bill.party_site_id = cust_gst.party_id (+)
            AND trunc(rcta.trx_date) BETWEEN nvl(cust_gst.effective_from, trunc(rcta.trx_date)) AND nvl(cust_gst.effective_to, trunc
            (rcta.trx_date) + 1)       -- added by snehal on 23/03/2021

	--AND BUYER_TBL.cust_account_role_id(+)             =  RCTA.bill_to_contact_id   
            AND buyer_tbl.cust_acct_site_id (+) = hcas_bill.cust_acct_site_id
            AND buyer_tbl.subject_id (+) = hp.party_id
            AND flv.lookup_type (+) = 'CRISIL_AR_LINE_PRINTING'
            AND flv.lookup_code (+) LIKE leg_reg.legal_entity_identifier
                                         || '%-%'
                                         || nvl(rcta.attribute12, 'AB')
            AND flv1.lookup_type (+) = 'CRISIL_GENERAL_LINE_1'
            AND flv1.lookup_code (+) LIKE leg_reg.legal_entity_identifier
                                          || '%-%'
                                          || nvl(rcta.attribute12, 'AB')
            AND flv2.lookup_type (+) = 'CRISIL_GENERAL_LINE_2'
            AND flv2.lookup_code (+) LIKE leg_reg.legal_entity_identifier
                                          || '%-%'
                                          || nvl(rcta.attribute12, 'AB')
            AND flv3.lookup_type (+) = 'CRISIL_AR_BANK_PRINT'
            AND flv3.meaning (+) LIKE leg_reg.legal_entity_identifier
                                      || '%-%'
                                      || nvl(rcta.attribute12, 'AB')
                                      || '%-%'
                                      || rcta.invoice_currency_code
            AND hcsu_ship.party_site_use_id (+) = rcta.ship_to_party_site_use_id
            AND hou.organization_id = rcta.org_id
            AND le_gst.registration_id (+) = rcta.first_pty_reg_id
            AND rcta.trx_number = :p_cust_trx
            AND ROWNUM < 2
    ) xx
	=================================================================================================
	/* Formatted on 2021/03/19 17:37 (Formatter Plus v4.8.8) */
SELECT   hca.cust_account_id, hou.NAME ou_name, rct.customer_trx_id, rtt.NAME trx_type, rctda.account_class account_class, rct.trx_number,
         rct.trx_class invoice_type, hp.party_name cust_name, hp.party_number cust_code,
         TO_CHAR (rct.trx_date, 'DD/MON/RRRR', 'NLS_DATE_LANGUAGE=AMERICAN') trx_date, rct.invoice_currency_code,
         TO_CHAR (rctda.gl_date, 'DD/MON/RRRR', 'NLS_DATE_LANGUAGE=AMERICAN') gl_date, gcc.segment1 entity, gcc.segment2 gl_account, gcc.segment3 bcc,
         gcc.segment4 project, gcc.segment7 intercompany, SUM (rctl.extended_amount) entered_base_amount,
         (SUM (rctl.extended_amount) * NVL (rct.exchange_rate, 1)) acctd_base_amount,
         (SELECT SUM (rctl2.extended_amount)
            FROM ra_customer_trx_lines_all rctl2
           WHERE rctl2.customer_trx_id = rct.customer_trx_id AND rctl2.line_type = 'TAX') entered_tax_amount,
         ((SELECT SUM (rctl2.extended_amount)
             FROM ra_customer_trx_lines_all rctl2
            WHERE rctl2.customer_trx_id = rct.customer_trx_id AND rctl2.line_type = 'TAX') * NVL (rct.exchange_rate, 1)) acct_tax_amount,
         (SELECT MAX (tax_rate_code)
            FROM zx_lines zx, ra_customer_trx_lines_all rctl2
           WHERE zx.tax_line_id = rctl2.tax_line_id AND rctl2.customer_trx_id = rctl.customer_trx_id AND rctl2.line_type = 'TAX') tax_rate_category,
         (SELECT ppn.display_name
            FROM per_person_names_f ppn, per_all_people_f pap
           WHERE 1 = 1
             AND ppn.name_type = 'GLOBAL'
             AND ppn.person_id = pap.person_id
             AND pap.person_number = rct.attribute1
             AND ROWNUM = 1) sales_person_name,
         rct.attribute6 irn, rct.attribute8 ack_date,
         (CASE WHEN rctda.GL_POSTED_DATE IS NOT NULL THEN 'YES' ELSE 'N0' END) accounted,
         --DECODE (rctda.account_set_flag, 'Y', 'YES', 'N', 'NO') accounted,
         (SELECT MAX (phone_number)
            FROM hz_contact_points hcp
           WHERE hcp.owner_table_name = 'HZ_PARTIES'
             AND hcp.contact_point_type = 'PHONE'
             AND hcp.owner_table_id IN (SELECT party_id
                                          FROM hz_cust_accounts hca2
                                         WHERE hca2.cust_account_id = hca.cust_account_id)) cust_contact,
         (SELECT MAX(NAME)
            FROM ra_batch_sources_all rbs
           WHERE rbs.batch_source_seq_id = rct.batch_source_seq_id) transaction_source,
         rct.attribute12 trx_classification,
         (SELECT MAX (vsl.description)
            FROM fnd_flex_value_sets vs, fnd_flex_values_vl vsl
           WHERE 1 = 1
             AND vs.flex_value_set_id = vsl.flex_value_set_id
             AND vsl.flex_value = gcc.segment3
             AND vs.flex_value_set_name = 'CRISIL BUSINESS COST CENTER') cost_center_desc,
         (SELECT MAX (vsl.description)
            FROM fnd_flex_value_sets vs, fnd_flex_values_vl vsl
           WHERE 1 = 1
             AND vs.flex_value_set_id = vsl.flex_value_set_id
             AND vsl.flex_value = gcc.segment4
             AND vs.flex_value_set_name = 'CRISIL_PROJECT') proj_code_desc,
             hzl.country,hzl.state
    FROM ra_customer_trx_all rct,
         ra_customer_trx_lines_all rctl,
         ra_cust_trx_line_gl_dist_all rctda,
         ra_cust_trx_types_all rtt,
         hz_cust_accounts hca,
         hz_parties hp,
        hz_cust_site_uses_all hcsu,
         hz_cust_acct_sites_all hcas,
           hz_party_sites hps,
        hz_locations hzl,
         gl_code_combinations gcc,
         hr_operating_units hou
   WHERE 1 = 1
     AND rct.customer_trx_id = rctl.customer_trx_id
     AND rct.cust_trx_type_seq_id = rtt.cust_trx_type_seq_id
     AND rct.customer_trx_id = rctda.customer_trx_id
     AND rct.bill_to_customer_id = hca.cust_account_id
     AND hca.party_id = hp.party_id
     and rct.BILL_TO_SITE_USE_ID = hcsu.SITE_USE_ID
    and hcsu.CUST_ACCT_SITE_ID = hcas.CUST_ACCT_SITE_ID
    and hcas.PARTY_SITE_ID = hps.PARTY_SITE_ID
    and hps.LOCATION_ID = hzl.LOCATION_ID
     AND rctda.code_combination_id = gcc.code_combination_id
     AND rct.org_id = hou.organization_id
     AND rctl.line_type = 'LINE'
     AND complete_flag = 'Y'
     AND nvl(rctda.LATEST_REC_FLAG,'N') = (case when :p_acct_class = 'REC' then 'Y' else 'N' end)
     AND (hou.NAME IN (:p_ou_name) OR 'All' IN (:p_ou_name || 'All'))
     AND TRUNC (rct.trx_date) >= :p_from_date
     AND TRUNC (rct.trx_date) <= :p_to_date
     AND rctda.account_class = NVL (:p_acct_class, rctda.account_class)
     --AND rct.trx_number = '108208'
GROUP BY hou.NAME,
         rtt.NAME,
         rtt.TYPE,
         rct.trx_number,
         rct.trx_class,
         hp.party_name,
         hp.party_number,
         rct.trx_date,
         rct.invoice_currency_code,
         rctda.gl_date,
         gcc.segment1,
         gcc.segment2,
         gcc.segment3,
         gcc.segment4,
         gcc.segment7,
         rctda.acctd_amount,
         rct.customer_trx_id,
         rct.exchange_rate,
         rctl.tax_line_id,
         rct.attribute1,
         rct.attribute6,
         rct.attribute8,
         rctl.customer_trx_id,
         rctda.account_set_flag,
         rctda.account_class,
         hca.cust_account_id,
         rct.attribute12,
         rct.batch_source_seq_id,
         rct.trx_class,
         hzl.country,hzl.state,rctda.GL_POSTED_DATE
ORDER BY rct.trx_number
===============================================================================================
----------------------------------------------------------Average Balance Audit Account Analysis Report	---------------------------------------------------------------
SELECT CC.code_combination_id CCID,
	to_char(dbal.accounting_date, 'YYYY-MM-DD"T"HH24:MI:SS') ACC_DATE,
	dbal.end_of_date_balance_num END_OF_DATE_BALANCE,
	decode(:P_BALANCE_TYPE, 'PATD', dbal.period_aggregate_num,
				'QATD', dbal.quarter_aggregate_num,
				'YATD', dbal.year_aggregate_num, 0) AGGREGATE,
	decode(:P_BALANCE_TYPE, 'PATD', dbal.period_average_to_date_num,
				'QATD', dbal.quarter_average_to_date_num,
				'YATD', dbal.year_average_to_date_num, 0) AVERAGE,
	&BAL_FIELD BAL_FIELD, 
	&BAL_DESC BAL_DESC, 
	&ACCT_FIELD ACCT_FIELD, 
	&ACCT_DESC ACCT_DESC, 
	&FLEXFIELD FLEXFIELD, 
	&FLEXDESC FLEXDESC, 
	GL_ACCT_ANALYSIS_AVG_RPT_PKG.get_opening_balance(CC.code_combination_id) opening_bal
FROM
	GL_DAILY_BALANCES_V DBAL,
	GL_CODE_COMBINATIONS CC
WHERE
      dbal.ledger_id = :P_LEDGER_ID
      AND dbal.ledger_currency = :LEDGER_CURRENCY
      AND dbal.period_set_name = :PERIOD_SET_NAME_1
      AND dbal.period_type = :PERIOD_TYPE_1
      AND dbal.accounting_date <= :P_REPORTING_DATE
      AND dbal.accounting_date >= :START_DATE
      AND cc.chart_of_accounts_id = :P_STRUCT_NUM
      AND cc.code_combination_id = dbal.code_combination_id
      AND dbal.currency_code = :REPORTING_CURR
      AND dbal.currency_type = decode(:P_CURRENCY_TYPE, 'E', 'E', 'U')
      AND &ACT_FILTER_WHERE
      &WHERE_DAS
      AND &FLEX_SECURE = 'N'
ORDER BY
       &ORDERBY_BAL,
       &ORDERBY_ACCT,
       &ORDERBY_ALL,
       dbal.accounting_date
===========================================================================================================
----------------------------------------------------------Average Balance Audit Account Analysis Report	---------------------------------------------------------------
SELECT CC.code_combination_id CCID,
	to_char(dbal.accounting_date, 'YYYY-MM-DD"T"HH24:MI:SS') ACC_DATE,
	dbal.end_of_date_balance_num END_OF_DATE_BALANCE,
	decode(:P_BALANCE_TYPE, 'PATD', dbal.period_aggregate_num,
				'QATD', dbal.quarter_aggregate_num,
				'YATD', dbal.year_aggregate_num, 0) AGGREGATE,
	decode(:P_BALANCE_TYPE, 'PATD', dbal.period_average_to_date_num,
				'QATD', dbal.quarter_average_to_date_num,
				'YATD', dbal.year_average_to_date_num, 0) AVERAGE,
	&BAL_FIELD BAL_FIELD, 
	&BAL_DESC BAL_DESC, 
	&ACCT_FIELD ACCT_FIELD, 
	&ACCT_DESC ACCT_DESC, 
	&FLEXFIELD FLEXFIELD, 
	&FLEXDESC FLEXDESC, 
	GL_ACCT_ANALYSIS_AVG_RPT_PKG.get_opening_balance(CC.code_combination_id) opening_bal
FROM
	GL_DAILY_BALANCES_V DBAL,
	GL_CODE_COMBINATIONS CC
WHERE
      dbal.ledger_id = :P_LEDGER_ID
      AND dbal.ledger_currency = :LEDGER_CURRENCY
      AND dbal.period_set_name = :PERIOD_SET_NAME_1
      AND dbal.period_type = :PERIOD_TYPE_1
      AND dbal.accounting_date <= :P_REPORTING_DATE
      AND dbal.accounting_date >= :START_DATE
      AND cc.chart_of_accounts_id = :P_STRUCT_NUM
      AND cc.code_combination_id = dbal.code_combination_id
      AND dbal.currency_code = :REPORTING_CURR
      AND dbal.currency_type = decode(:P_CURRENCY_TYPE, 'E', 'E', 'U')
      AND &ACT_FILTER_WHERE
      &WHERE_DAS
      AND &FLEX_SECURE = 'N'
ORDER BY
       &ORDERBY_BAL,
       &ORDERBY_ACCT,
       &ORDERBY_ALL,
       dbal.accounting_date
============================================================================================
SELECT 1 query
     ,(select ORGANIZATION_NAME from INV_ORGANIZATION_DEFINITIONS_V
       where organization_id=mtrh.organization_id
       ) ORGANIZATION_NAME1
     , MMT.PICK_SLIP_NUMBER
	 ,MTRL.TXN_SOURCE_ID 
     , esi_assemb.item_number ASSEMBLY
	 , TO_CHAR(wwob.PLANNED_COMPLETION_DATE,'DD-MON-YY') SCHEDULED_COMPLETION_DATE
	 , TO_CHAR(wwob.PLANNED_start_DATE,'DD-MON-YY') SCHEDULED_START_DATE
	 , wwob.PLANNED_START_QUANTITY START_QUANTITY
	 , wwob.WORK_ORDER_NUMBER WIP_ENTITY_NAME
	 -- , CASE WHEN INV_MO_PICK_SLIP.CP_WO_ORDER_NUMBER_P  IS NULL THEN
    	--  NULL ELSE MTRL.reference_name END   JOB_NAME
	 , mtrh.organization_id
     , MTRH.REQUEST_NUMBER REQUEST_NUMBER
     , MTRH.MOVE_ORDER_TYPE
     , MTRL.LINE_NUMBER
     , MTRL.LINE_ID
     , MTRL.TRANSACTION_SOURCE_TYPE_ID
     , MMT.TRANSACTION_ID
     , TO_NUMBER(NULL) PARENT_LINE_ID
     
     , MMT.INVENTORY_ITEM_ID
     , MSI.ITEM_NUMBER CF_ITEM           --null C_ITEM_FLEXDAT
     , MSI.DESCRIPTION ITEM_DESCRIPTION
     , MMT.REVISION
     
     , MMT.SUBINVENTORY_CODE FR_SUBINV
     , DECODE(MMT.LOCATOR_ID, NULL, '', INV_PROJECT.GET_LOCSEGS(MMT.LOCATOR_ID, MMT.ORGANIZATION_ID )) FR_LOCATOR
     
     , MMT.TRANSFER_SUBINVENTORY TO_SUBINV
     , DECODE(MMT.TRANSFER_LOCATOR_ID, NULL, '', INV_PROJECT.GET_LOCSEGS(MMT.TRANSFER_LOCATOR_ID, MMT.ORGANIZATION_ID )) TO_LOCATOR
     
     , MTRL.PJC_PROJECT_ID PROJECT_ID
     , MTRL.PJC_TASK_ID    TASK_ID
     
     , DECODE(MMT.DISTRIBUTION_ACCOUNT_ID, '', '', null) C_TO_ACCOUNT_FLEXDAT
     , CASE WHEN MTRL.REQUESTER_ID IS NULL 
                 THEN PER.USERNAME 
            ELSE 
                 (SELECT GLOBAL_NAME FROM INV_EMPLOYEES_CURRENT_V WHERE PERSON_ID = MTRL.REQUESTER_ID AND ROWNUM<2)
       END AS REQUESTER 
     , MMT.TRANSACTION_REFERENCE REFERENCE
     
     , MMT.TRANSACTION_UOM TRANSACTION_UOM
     , INV_MO_PICK_SLIP.get_uom_name(MMT.TRANSACTION_UOM) UOM_NAME	 	 	 	 
     , ABS(MMT.TRANSACTION_QUANTITY) TRANSACTION_QTY
	 ,NVL(MTRL.QUANTITY_DELIVERED,0) REQ_QTY
	 ,ABS(MMT.TRANSACTION_QUANTITY)-NVL(MTRL.QUANTITY_DELIVERED,0) SHORT_QTY
     , (SELECT DROPPING_ORDER FROM INV_SECONDARY_INVENTORIES WHERE SECONDARY_INVENTORY_NAME = MMT.TRANSFER_SUBINVENTORY AND ORGANIZATION_ID = MMT.ORGANIZATION_ID) SUB_DROPPING_ORDER
     , (SELECT DROPPING_ORDER FROM INV_ITEM_LOCATIONS WHERE INVENTORY_LOCATION_ID = MMT.TRANSFER_LOCATOR_ID AND ORGANIZATION_ID = MMT.ORGANIZATION_ID) LOC_DROPPING_ORDER
     
     , MMT.SECONDARY_UOM_CODE SEC_UOM
	 , INV_MO_PICK_SLIP.get_uom_name(MMT.SECONDARY_UOM_CODE) SEC_UOM_NAME	 	 	 
     , ABS(MMT.SECONDARY_TRANSACTION_QUANTITY) SEC_TRANSACTION_QTY

     , INV_MO_PICK_SLIP.cf_sec_uomformula(MMT.INVENTORY_ITEM_ID, MMT.SECONDARY_UOM_CODE) CF_SEC_UOM
     , INV_MO_PICK_SLIP.cf_sec_qtyformula(MMT.INVENTORY_ITEM_ID, ABS(MMT.SECONDARY_TRANSACTION_QUANTITY)) CF_SEC_QTY
		
     , INV_MO_PICK_SLIP.cf_project_numberformula(MTRL.PJC_PROJECT_ID) CF_PROJECT_NUMBER
     , INV_MO_PICK_SLIP.cf_task_numberformula(MTRL.PJC_TASK_ID,MTRL.PJC_PROJECT_ID) CF_TASK_NUMBER
	
     , INV_MO_PICK_SLIP.cf_so_infoformula(LINE_ID, MOVE_ORDER_TYPE) CF_SO_INFO
     , INV_MO_PICK_SLIP.CP_SO_ORDER_NUMBER_p CP_SO_ORDER_NUMBER
     , INV_MO_PICK_SLIP.CP_SO_LINE_NUMBER_p CP_SO_LINE_NUMBER
     , INV_MO_PICK_SLIP.CP_SO_DELIVERY_NAME_p CP_SO_DELIVERY_NAME
     , INV_MO_PICK_SLIP.CP_WO_ORDER_NUMBER_P CP_WO_ORDER_NUMBER
     , INV_MO_PICK_SLIP.CP_WO_OPERATION_SEQ_NUMBER_P CP_WO_OPERATION_SEQ_NUMBER
     , INV_MO_PICK_SLIP.CP_WO_WORK_CENTER_CODE_P CP_WO_WORK_CENTER_CODE
     , INV_MO_PICK_SLIP.CP_WO_WORK_AREA_CODE_P CP_WO_WORK_AREA_CODE
	 
     , 3 TASK_STATUS_ID	--INV_PICK_SLIP_TASK_STATUS (1- UnAllocated, 2-Allocated, 3-Completed)
     , INV_MO_PICK_SLIP.cf_task_statusformula(3) CF_TASK_STATUS
     , MMT.PROJECT_ID INV_PROJECT_ID
     , MMT.TASK_ID INV_TASK_ID
     , INV_MO_PICK_SLIP.cf_project_numberformula(MMT.PROJECT_ID) INV_PROJECT_NUMBER
     , INV_MO_PICK_SLIP.cf_task_numberformula(MMT.TASK_ID, MMT.PROJECT_ID) INV_TASK_NUMBER 
,lot.L_LOT_NUMBER  
,lot.L_LOT_qty	 LOT_TRANSACTION_QTY
	 
  FROM INV_MATERIAL_TXNS MMT   --MTL_MATERIAL_TRANSACTIONS
     , INV_TXN_REQUEST_HEADERS MTRH
     , INV_TXN_REQUEST_LINES MTRL
     , EGP_SYSTEM_ITEMS MSI
     , PER_USERS PER  --FND_USER
	 , wie_work_orders_b wwob
	 , egp_system_items_b esi_assemb
	 ,(SELECT TRANSACTION_ID L_TRANSACTION_ID
            , LOT_NUMBER L_LOT_NUMBER
            , ABS(TRANSACTION_QUANTITY) L_LOT_QTY
            , SERIAL_TRANSACTION_ID LS_SER_TXN_ID
         FROM INV_TRANSACTION_LOT_NUMBERS
       UNION ALL
       SELECT TRANSACTION_TEMP_ID 
            , LOT_NUMBER
            , ABS(TRANSACTION_QUANTITY) 
            , SERIAL_TRANSACTION_TEMP_ID
         FROM INV_TRANSACTION_LOTS_TEMP) lot
 WHERE  1=1 --MMT.ORGANIZATION_ID             = :P_ORG_ID
   AND MMT.MOVE_ORDER_LINE_ID         = MTRL.LINE_ID
   AND MTRL.HEADER_ID                  = MTRH.HEADER_ID
  AND MSI.ORGANIZATION_ID             = MMT.ORGANIZATION_ID
  AND MSI.INVENTORY_ITEM_ID          = MMT.INVENTORY_ITEM_ID
   AND PER.USERNAME                    = MTRL.CREATED_BY
  AND NVL(MMT.TRANSACTION_QUANTITY, 0) < 0
   AND  MTRH.request_number in (:P_REQUEST_NUMBER)
   AND wwob.work_order_number(+) = MTRL.reference_name
   AND wwob.organization_id(+) = MTRH.organization_id
   AND esi_assemb.organization_id (+)= wwob.organization_id
   AND esi_assemb.inventory_item_id (+)= wwob.inventory_item_id
   and MMT.TRANSACTION_ID=lot.L_TRANSACTION_ID(+)
   --and MMT.SUBINVENTORY_CODE =CASE WHEN :P_FR_SUBINV ='NULL' THEN MMT.SUBINVENTORY_CODE ELSE :P_FR_SUBINV END 
  -- and MMT.TRANSFER_SUBINVENTORY =CASE WHEN :P_TO_SUBINV ='NULL' THEN MMT.TRANSFER_SUBINVENTORY ELSE :P_TO_SUBINV END 
  -- and trunc(MTRL.DATE_REQUIRED) between :p_date_from and :p_date_to
   AND trunc(MTRL.DATE_REQUIRED) BETWEEN NVL (:p_date_from, trunc(MTRL.DATE_REQUIRED)) 
                             AND NVL (:p_date_to, trunc(MTRL.DATE_REQUIRED))
   AND (:P_FR_SUBINV  IS NULL or MTRL.FROM_SUBINVENTORY_CODE=:P_fr_SUBINV)
   AND (:P_TO_SUBINV  IS NULL or MTRL.TO_SUBINVENTORY_CODE=:P_TO_SUBINV)
UNION ALL

SELECT  2 query
 ,(select ORGANIZATION_NAME from INV_ORGANIZATION_DEFINITIONS_V
       where organization_id=mtrh.organization_id
       ) ORGANIZATION_NAME1
     
     , (SELECT PICK_SLIP_NUMBER FROM INV_MATERIAL_TXNS_TEMP WHERE TRANSACTION_TEMP_ID = NVL(MMTT.PARENT_LINE_ID, MMTT.TRANSACTION_TEMP_ID) )PICK_SLIP_NUMBER
	 ,MTRL.TXN_SOURCE_ID 
     , esi_assemb.item_number ASSEMBLY
	 , to_char(wwob.PLANNED_COMPLETION_DATE,'DD-MON-YY') SCHEDULED_COMPLETION_DATE
	 , TO_CHAR(wwob.PLANNED_start_DATE,'DD-MON-YY') SCHEDULED_START_DATE
	 , wwob.PLANNED_START_QUANTITY START_QUANTITY
	 , wwob.WORK_ORDER_NUMBER WIP_ENTITY_NAME
	 , mtrh.organization_id
     , MTRH.REQUEST_NUMBER REQUEST_NUMBER
     , MTRH.MOVE_ORDER_TYPE
     , MTRL.LINE_NUMBER
     , MTRL.LINE_ID
     , MTRL.TRANSACTION_SOURCE_TYPE_ID
     , MMTT.TRANSACTION_TEMP_ID TRANSACTION_ID
     , MMTT.PARENT_LINE_ID
     
     , MMTT.INVENTORY_ITEM_ID
     , MSI.ITEM_NUMBER    CF_ITEM            --null C_ITEM_FLEXDAT
     , MSI.DESCRIPTION ITEM_DESCRIPTION
     , MMTT.REVISION
     
     , MMTT.SUBINVENTORY_CODE FR_SUBINV
     , DECODE(MMTT.LOCATOR_ID, NULL, '', INV_PROJECT.GET_LOCSEGS(MMTT.LOCATOR_ID, MMTT.ORGANIZATION_ID )) FR_LOCATOR
     
     , MMTT.TRANSFER_SUBINVENTORY TO_SUBINV
     , DECODE(MMTT.TRANSFER_TO_LOCATION, NULL, '', INV_PROJECT.GET_LOCSEGS(MMTT.TRANSFER_TO_LOCATION, MMTT.ORGANIZATION_ID )) TO_LOCATOR
     
     , MTRL.PJC_PROJECT_ID  PROJECT_ID
     , MTRL.PJC_TASK_ID     TAKS_ID
     
     , DECODE(MMTT.DISTRIBUTION_ACCOUNT_ID, '', '', null) C_TO_ACCOUNT_FLEXDAT
     , CASE WHEN MTRL.REQUESTER_ID IS NULL 
                 THEN PER.USERNAME 
            ELSE 
                 (SELECT GLOBAL_NAME FROM INV_EMPLOYEES_CURRENT_V WHERE PERSON_ID = MTRL.REQUESTER_ID AND ROWNUM<2)
       END AS REQUESTER 
     , MMTT.TRANSACTION_REFERENCE REFERENCE
     
     , MMTT.TRANSACTION_UOM TRANSACTION_UOM
     , INV_MO_PICK_SLIP.get_uom_name(MMTT.TRANSACTION_UOM) UOM_NAME	 	 	 
     , ABS(MMTT.TRANSACTION_QUANTITY) TRANSACTION_QTY
	 	 ,nVl(MMTT.PRIMARY_QUANTITY,0) REQ_QTY
	 ,ABS(MMTT.TRANSACTION_QUANTITY)-nVl(MMTT.PRIMARY_QUANTITY,0) SHORT_QTY
     
     , (SELECT DROPPING_ORDER FROM INV_SECONDARY_INVENTORIES WHERE SECONDARY_INVENTORY_NAME = MMTT.TRANSFER_SUBINVENTORY AND ORGANIZATION_ID = MMTT.ORGANIZATION_ID) SUB_DROPPING_ORDER
     , (SELECT DROPPING_ORDER FROM INV_ITEM_LOCATIONS WHERE INVENTORY_LOCATION_ID = MMTT.TRANSFER_TO_LOCATION AND ORGANIZATION_ID = MMTT.ORGANIZATION_ID) LOC_DROPPING_ORDER
     
     , MMTT.SECONDARY_UOM_CODE SEC_UOM
	 , INV_MO_PICK_SLIP.get_uom_name(MMTT.SECONDARY_UOM_CODE) SEC_UOM_NAME	 	 
     , ABS(MMTT.SECONDARY_TRANSACTION_QUANTITY) SEC_TRANSACTION_QTY
          
     
     , INV_MO_PICK_SLIP.cf_sec_uomformula(MMTT.INVENTORY_ITEM_ID, MMTT.SECONDARY_UOM_CODE) CF_SEC_UOM
     , INV_MO_PICK_SLIP.cf_sec_qtyformula(MMTT.INVENTORY_ITEM_ID, ABS(MMTT.SECONDARY_TRANSACTION_QUANTITY)) CF_SEC_QTY
	
     , INV_MO_PICK_SLIP.cf_project_numberformula(MTRL.PJC_PROJECT_ID) CF_PROJECT_NUMBER
     , INV_MO_PICK_SLIP.cf_task_numberformula(MTRL.PJC_TASK_ID, MTRL.PJC_PROJECT_ID) CF_TASK_NUMBER
	
     , INV_MO_PICK_SLIP.cf_so_infoformula(MTRL.LINE_ID, MTRH.MOVE_ORDER_TYPE) CF_SO_INFO
     , INV_MO_PICK_SLIP.CP_SO_ORDER_NUMBER_p CP_SO_ORDER_NUMBER
     , INV_MO_PICK_SLIP.CP_SO_LINE_NUMBER_p CP_SO_LINE_NUMBER
     , INV_MO_PICK_SLIP.CP_SO_DELIVERY_NAME_p CP_SO_DELIVERY_NAME
     , INV_MO_PICK_SLIP.CP_WO_ORDER_NUMBER_P CP_WO_ORDER_NUMBER
     , INV_MO_PICK_SLIP.CP_WO_OPERATION_SEQ_NUMBER_P CP_WO_OPERATION_SEQ_NUMBER
     , INV_MO_PICK_SLIP.CP_WO_WORK_CENTER_CODE_P CP_WO_WORK_CENTER_CODE
     , INV_MO_PICK_SLIP.CP_WO_WORK_AREA_CODE_P CP_WO_WORK_AREA_CODE

     , 2 TASK_STATUS_ID	--INV_PICK_SLIP_TASK_STATUS (1- UnAllocated, 2-Allocated, 3-Completed)
     , INV_MO_PICK_SLIP.cf_task_statusformula(2) CF_TASK_STATUS
     , MMTT.PROJECT_ID INV_PROJECT_ID
     , MMTT.TASK_ID INV_TASK_ID
     , INV_MO_PICK_SLIP.cf_project_numberformula(MMTT.PROJECT_ID) INV_PROJECT_NUMBER
     , INV_MO_PICK_SLIP.cf_task_numberformula(MMTT.TASK_ID, MMTT.PROJECT_ID) INV_TASK_NUMBER
	 ,lot.L_LOT_NUMBER
     ,lot.L_LOT_qty	 LOT_TRANSACTION_QTY
  FROM INV_MATERIAL_TXNS_TEMP MMTT
     , INV_TXN_REQUEST_HEADERS MTRH
     , INV_TXN_REQUEST_LINES MTRL
     , EGP_SYSTEM_ITEMS MSI
     , PER_USERS PER --FND_USER
	 , wie_work_orders_b wwob
	 , egp_system_items_b esi_assemb
	 ,(SELECT TRANSACTION_ID L_TRANSACTION_ID
            , LOT_NUMBER L_LOT_NUMBER
            , ABS(TRANSACTION_QUANTITY) L_LOT_QTY
            , SERIAL_TRANSACTION_ID LS_SER_TXN_ID
         FROM INV_TRANSACTION_LOT_NUMBERS
       UNION ALL
       SELECT TRANSACTION_TEMP_ID 
            , LOT_NUMBER
            , ABS(TRANSACTION_QUANTITY) 
            , SERIAL_TRANSACTION_TEMP_ID
         FROM INV_TRANSACTION_LOTS_TEMP) lot
 WHERE 1=1 -- MMTT.ORGANIZATION_ID            = :P_ORG_ID
   AND MTRL.LINE_ID                    = MMTT.MOVE_ORDER_LINE_ID
   AND MTRL.HEADER_ID                  = MTRH.HEADER_ID
   AND MSI.INVENTORY_ITEM_ID           = MMTT.INVENTORY_ITEM_ID
   AND MSI.ORGANIZATION_ID             = MMTT.ORGANIZATION_ID
   AND PER.USERNAME                    = MTRL.CREATED_BY     --FND.USER_ID
   AND NVL(MMTT.TRANSACTION_QUANTITY, 0) > 0
	--and trunc(MTRL.DATE_REQUIRED) between :p_date_from and :p_date_to	
   AND trunc(MTRL.DATE_REQUIRED) BETWEEN NVL (:p_date_from, trunc(MTRL.DATE_REQUIRED)) 
                             AND NVL (:p_date_to, trunc(MTRL.DATE_REQUIRED))
  
	--and MTRL.TO_SUBINVENTORY_CODE  =mmtt.SUBINVENTORY_CODE
   and MMTT.TRANSACTION_TEMP_ID=lot.L_TRANSACTION_ID(+)
      AND wwob.work_order_number (+)= MTRL.reference_name
   AND wwob.organization_id(+) = MTRH.organization_id
   AND esi_assemb.organization_id(+) = wwob.organization_id
   AND esi_assemb.inventory_item_id(+) = wwob.inventory_item_id
   AND NOT EXISTS (SELECT 1 FROM INV_MATERIAL_TXNS_TEMP WHERE PARENT_LINE_ID = MMTT.TRANSACTION_TEMP_ID)
   AND NVL(MMTT.PARENT_LINE_ID, MMTT.TRANSACTION_TEMP_ID) IN (SELECT NVL(MMTT.PARENT_LINE_ID, MMTT.TRANSACTION_TEMP_ID) 
                                                                FROM INV_MATERIAL_TXNS_TEMP MMTT
                                                                   , INV_TXN_REQUEST_LINES MTRL
                                                                   , INV_TXN_REQUEST_HEADERS MTRH 
                                                               WHERE MMTT.ORGANIZATION_ID =MMTT.ORGANIZATION_ID
                                                                 AND MTRL.LINE_ID = MMTT.MOVE_ORDER_LINE_ID
                                                                 AND MTRH.HEADER_ID = MTRL.HEADER_ID
                                                              )
 AND  MTRH.request_number in (:P_REQUEST_NUMBER)
-- AND MMTT.SUBINVENTORY_CODE in (:P_FR_SUBINV)
 --AND MMTT.TRANSFER_SUBINVENTORY in (:P_TO_SUBINV)
 AND (:P_FR_SUBINV  IS NULL or MTRL.FROM_SUBINVENTORY_CODE=:P_fr_SUBINV)
  AND (:P_TO_SUBINV  IS NULL or MTRL.TO_SUBINVENTORY_CODE=:P_TO_SUBINV)
UNION ALL

SELECT  3 query
 ,(select ORGANIZATION_NAME from INV_ORGANIZATION_DEFINITIONS_V
       where organization_id=mtrh.organization_id
       ) ORGANIZATION_NAME1
     
     , MTRL.PICK_SLIP_NUMBER
	 ,MTRL.TXN_SOURCE_ID 
	 , null ASSEMBLY
	 , null SCHEDULED_COMPLETION_DATE
	 , null SCHEDULED_START_DATE
	 , null START_QUANTITY
	 , MTRL.reference_name WIP_ENTITY_NAME
	 , mtrh.organization_id
     , MTRH.REQUEST_NUMBER REQUEST_NUMBER
     , MTRH.MOVE_ORDER_TYPE
     , MTRL.LINE_NUMBER
     , MTRL.LINE_ID
     , MTRL.TRANSACTION_SOURCE_TYPE_ID     
     , -99999 AS TRANSACTION_ID
     , TO_NUMBER(NULL) PARENT_LINE_ID
     
     , MTRL.INVENTORY_ITEM_ID
     , MSI.ITEM_NUMBER  CF_ITEM        --null C_ITEM_FLEXDAT
     , MSI.DESCRIPTION
     , MTRL.REVISION
     
     , MTRL.FROM_SUBINVENTORY_CODE FR_SUBINV
     , DECODE(MTRL.FROM_LOCATOR_ID, NULL, '', INV_PROJECT.GET_LOCSEGS(MTRL.FROM_LOCATOR_ID, mtrl.ORGANIZATION_ID )) FR_LOCATOR
     
     , MTRL.TO_SUBINVENTORY_CODE TO_SUBINV
     , DECODE(MTRL.TO_LOCATOR_ID, NULL, '', INV_PROJECT.GET_LOCSEGS(MTRL.TO_LOCATOR_ID, mtrl.ORGANIZATION_ID )) TO_LOCATOR
     
     , MTRL.PJC_PROJECT_ID  PROJECT_ID
     , MTRL.PJC_TASK_ID     TAKS_ID
     
     , DECODE(MTRL.TO_ACCOUNT_ID, '', '', null) C_TO_ACCOUNT_FLEXDAT
     , CASE WHEN MTRL.REQUESTER_ID IS NULL 
                 THEN PER.USERNAME 
            ELSE 
                 (SELECT GLOBAL_NAME FROM INV_EMPLOYEES_CURRENT_V WHERE PERSON_ID = MTRL.REQUESTER_ID AND ROWNUM<2)
       END AS REQUESTER 
     , MTRL.REFERENCE_NAME REFERENCE
     
     , MTRL.UOM_CODE TRANSACTION_UOM
	 , INV_MO_PICK_SLIP.get_uom_name(MTRL.UOM_CODE) UOM_NAME
     , ABS(NVL(MTRL.QUANTITY, 0) - NVL(MTRL.QUANTITY_DETAILED, 0)) TRANSACTION_QTY
     ,nVl(ABS(NVL(MTRL.QUANTITY, 0) - NVL(MTRL.QUANTITY_DETAILED, 0)),0) REQ_QTY
	 ,ABS(MTRL.QUANTITY)-NVL(ABS(NVL(MTRL.QUANTITY, 0) - NVL(MTRL.QUANTITY_DETAILED, 0)),0) SHORT_QTY
     , (SELECT DROPPING_ORDER FROM INV_SECONDARY_INVENTORIES WHERE SECONDARY_INVENTORY_NAME = MTRL.TO_SUBINVENTORY_CODE AND ORGANIZATION_ID = MTRL.ORGANIZATION_ID) SUB_DROPPING_ORDER
     , (SELECT DROPPING_ORDER FROM INV_ITEM_LOCATIONS WHERE INVENTORY_LOCATION_ID = MTRL.TO_LOCATOR_ID AND ORGANIZATION_ID = MTRL.ORGANIZATION_ID) LOC_DROPPING_ORDER
     
     , MTRL.SECONDARY_UOM_CODE SEC_UOM
	 , INV_MO_PICK_SLIP.get_uom_name(MTRL.SECONDARY_UOM_CODE) SEC_UOM_NAME	 
     , ABS(NVL(MTRL.SECONDARY_QUANTITY, 0) - NVL(MTRL.SECONDARY_QUANTITY_DETAILED, 0)) SEC_TRANSACTION_QTY
	 
	 , INV_MO_PICK_SLIP.cf_sec_uomformula(MTRL.INVENTORY_ITEM_ID, MTRL.SECONDARY_UOM_CODE) CF_SEC_UOM
	 , INV_MO_PICK_SLIP.cf_sec_qtyformula(MTRL.INVENTORY_ITEM_ID, ABS(NVL(MTRL.SECONDARY_QUANTITY, 0) - NVL(MTRL.SECONDARY_QUANTITY_DETAILED, 0))) CF_SEC_QTY
	
	 , INV_MO_PICK_SLIP.cf_project_numberformula(MTRL.PJC_PROJECT_ID) CF_PROJECT_NUMBER
	 , INV_MO_PICK_SLIP.cf_task_numberformula(MTRL.PJC_TASK_ID, MTRL.PJC_PROJECT_ID) CF_TASK_NUMBER
	
	 , INV_MO_PICK_SLIP.cf_so_infoformula(LINE_ID, MOVE_ORDER_TYPE) CF_SO_INFO
	 , INV_MO_PICK_SLIP.CP_SO_ORDER_NUMBER_p CP_SO_ORDER_NUMBER
	 , INV_MO_PICK_SLIP.CP_SO_LINE_NUMBER_p CP_SO_LINE_NUMBER
	 , INV_MO_PICK_SLIP.CP_SO_DELIVERY_NAME_p CP_SO_DELIVERY_NAME
         , INV_MO_PICK_SLIP.CP_WO_ORDER_NUMBER_P CP_WO_ORDER_NUMBER
         , INV_MO_PICK_SLIP.CP_WO_OPERATION_SEQ_NUMBER_P CP_WO_OPERATION_SEQ_NUMBER
         , INV_MO_PICK_SLIP.CP_WO_WORK_CENTER_CODE_P CP_WO_WORK_CENTER_CODE
         , INV_MO_PICK_SLIP.CP_WO_WORK_AREA_CODE_P CP_WO_WORK_AREA_CODE

	, 1 TASK_STATUS_ID	--INV_PICK_SLIP_TASK_STATUS (1- UnAllocated, 2-Allocated, 3-Completed)
	, INV_MO_PICK_SLIP.cf_task_statusformula(1) CF_TASK_STATUS
        , MTRL.PROJECT_ID INV_PROJECT_ID
        , MTRL.TASK_ID INV_TASK_ID
        , INV_MO_PICK_SLIP.cf_project_numberformula(MTRL.PROJECT_ID) INV_PROJECT_NUMBER
        , INV_MO_PICK_SLIP.cf_task_numberformula(MTRL.TASK_ID, MTRL.PROJECT_ID) INV_TASK_NUMBER
,null L_LOT_NUMBER
,null 	LOT_TRANSACTION_QTY
	FROM INV_TXN_REQUEST_HEADERS MTRH
     , INV_TXN_REQUEST_LINES MTRL
     , EGP_SYSTEM_ITEMS MSI
     , PER_USERS PER  --FND_USER
	 --, wie_work_orders_b wwob
	 --, egp_system_items_b esi_assemb
	/* ,(SELECT TRANSACTION_ID L_TRANSACTION_ID
            , LOT_NUMBER L_LOT_NUMBER
            , ABS(TRANSACTION_QUANTITY) L_LOT_QTY
            , SERIAL_TRANSACTION_ID LS_SER_TXN_ID
         FROM INV_TRANSACTION_LOT_NUMBERS
       UNION ALL
       SELECT TRANSACTION_TEMP_ID 
            , LOT_NUMBER
            , ABS(TRANSACTION_QUANTITY) 
            , SERIAL_TRANSACTION_TEMP_ID
         FROM INV_TRANSACTION_LOTS_TEMP) lot*/
 WHERE 1=1 --MTRL.ORGANIZATION_ID            = :P_ORG_ID
   AND MTRL.HEADER_ID                  = MTRH.HEADER_ID
   AND MSI.INVENTORY_ITEM_ID           = MTRL.INVENTORY_ITEM_ID
   AND MSI.ORGANIZATION_ID             = MTRL.ORGANIZATION_ID
   AND PER.USERNAME                    = MTRL.CREATED_BY   --FND.USER_ID
   AND NVL(MTRL.QUANTITY, 0) > NVL(MTRL.QUANTITY_DETAILED, 0)
  -- and -99999 =lot.L_TRANSACTION_ID(+)
  -- AND MTRL.LINE_STATUS IN (3, 7)
   AND  MTRH.request_number in (:P_REQUEST_NUMBER)
 --  AND wwob.work_order_number(+) = MTRL.reference_name
 --  AND wwob.organization_id(+) = MTRH.organization_id
  -- AND esi_assemb.organization_id = wwob.organization_id
  -- AND esi_assemb.inventory_item_id = wwob.inventory_item_id
    AND trunc(MTRL.DATE_REQUIRED) BETWEEN NVL (:p_date_from, trunc(MTRL.DATE_REQUIRED)) 
                                               AND NVL (:p_date_to, trunc(MTRL.DATE_REQUIRED))
  AND (:P_FR_SUBINV  IS NULL or MTRL.FROM_SUBINVENTORY_CODE=:P_fr_SUBINV)
  AND (:P_TO_SUBINV  IS NULL or MTRL.TO_SUBINVENTORY_CODE=:P_TO_SUBINV)
 ORDER BY 1, 8, 29, 30, 27, 28, 2, 3, 4, 5, 6, 7, 9, 31, 11, 12, 13, 14, 15, 16, 17, 18, 32, 20, 21, 22, 23
 =========================================================================================
 /* Formatted on 2021/03/18 10:26 (Formatter Plus v4.8.8) */
SELECT   hou.NAME ou_name, pha.segment1 bpa_number,
         
         --PHA.CREATION_DATE BPA_DATE,
         TO_CHAR (FROM_TZ (CAST (pha.creation_date AS TIMESTAMP), 'UTC') AT TIME ZONE NVL (hrl.timezone_code, 'Asia/Kolkata'),
                  'DD/MM/RRRR HH:MI:SS AM', 'NLS_DATE_LANGUAGE=AMERICAN') bpa_date, rel_hdr.segment1 release_po_num, rel_line.line_num release_line,
         pla.line_num bpa_line, TRANSLATE (TRIM (rel_hdr.comments), 'x' || CHR (10) || CHR (13), 'x') rel_hdr_desc, rel_hdr.note_to_receiver,
         rel_line.quantity,
            gcc.segment1
         || '.'
         || gcc.segment2
         || '.'
         || gcc.segment3
         || '.'
         || gcc.segment4
         || '.'
         || gcc.segment5
         || '.'
         || gcc.segment6
         || '.'
         || gcc.segment7
         || '.'
         || gcc.segment8
         || '.'
         || gcc.segment9 charge_acc,
         (NVL (rel_line.unit_price, 0) * NVL (rel_line.quantity, 0)) rel_line_amount, NVL (pla.unit_price, 0) price_rate, pha.currency_code,
         TO_CHAR (rel_hdr.creation_date, 'DD/MM/RRRR HH:MI:SS AM', 'NLS_DATE_LANGUAGE=AMERICAN') po_blanket_date,
         (SELECT vendor_name
            FROM poz_suppliers_v
           WHERE vendor_id = pha.vendor_id) supplier,
         (SELECT vendor_site_code
            FROM poz_supplier_sites_all_m pssa
           WHERE pssa.vendor_site_id = pha.vendor_site_id AND pssa.vendor_id = pha.vendor_id) supplier_site_code,
         (SELECT display_name
            FROM per_person_names_f ppnf, per_users pu
           WHERE ppnf.person_id = pu.person_id AND pu.username = pha.created_by AND ppnf.name_type = 'IN') po_created_by,
         rel_line.line_status closure_status
    FROM po_headers_all pha,
         po_lines_all pla,
         po_headers_all rel_hdr,
         po_lines_all rel_line,
         po_distributions_all pda,
         gl_code_combinations gcc,
         hr_operating_units hou,
         hr_all_organization_units haou,
         hr_locations hrl
   WHERE 1 = 1
     AND pha.po_header_id = pla.po_header_id
     AND pla.po_header_id = rel_line.from_header_id
     AND pla.po_line_id = rel_line.from_line_id
     AND rel_line.po_header_id = rel_hdr.po_header_id
     AND rel_line.po_header_id = pda.po_header_id
     AND rel_line.po_line_id = pda.po_line_id
     AND pda.code_combination_id = gcc.code_combination_id
     AND hou.organization_id = pha.prc_bu_id
     AND pha.type_lookup_code IN ('BLANKET')
     AND rel_hdr.type_lookup_code = 'STANDARD'
     AND (hou.NAME IN (:p_ou_name) OR 'All' IN (:p_ou_name || 'All'))
     AND TRUNC (rel_hdr.creation_date) >= NVL (:p_from_date, TRUNC (rel_hdr.creation_date))
     AND TRUNC (rel_hdr.creation_date) <= NVL (:p_to_date, TRUNC (rel_hdr.creation_date))
     AND (pha.segment1 IN (:p_po_num) OR 'All' IN (:p_po_num || 'All'))
     AND (rel_hdr.segment1 IN (:p_rel_num) OR 'All' IN (:p_rel_num || 'All'))
     AND hou.organization_id = haou.organization_id
     AND haou.location_id = hrl.location_id
--     AND PHA.SEGMENT1 = 'CRS1200000'
ORDER BY 2, 4, 5
===========================================================================================
----------Brazilian Payables Associated Collection Documents Data------------
--INVOICE
SELECT i.invoice_num "Invoice" ,
  ps.payment_status_flag,
  i.invoice_id, --bug 12670140
  ps.due_date,
  ps.gross_amount,
  curr.currency_code,
  fnd.meaning,
  po.vendor_name,
  fnd_number.canonical_to_number(ps.global_attribute11),
(DECODE(NVL( ps.payment_status_flag,'X'),'Y',(SELECT max(a.paper_document_number)  --bug 16619175
       AS Pay_Num
       FROM iby_payments_all a,
            iby_docs_payable_all b
      WHERE a.payment_id = b.payment_id
        AND a.void_date IS NULL  --bug 16619175
        AND b.calling_app_doc_unique_ref2 = i.invoice_id
),'P',(SELECT max(a.paper_document_number)  --bug 16619175
       AS Pay_Num
       FROM iby_payments_all a,
            iby_docs_payable_all b
      WHERE a.payment_id = b.payment_id
        AND a.void_date IS NULL  --bug 16619175
        AND b.calling_app_doc_unique_ref2 =i.invoice_id
),null)) as PAY_NUM
FROM ap_invoices i,
  ap_payment_schedules ps,
  FND_CURRENCIES_VL curr,
  (SELECT SUPPLIERPEO.VENDOR_ID, PARTYPEO.PARTY_NAME as vendor_name
  FROM HZ_PARTIES PARTYPEO
      ,POZ_SUPPLIERS SUPPLIERPEO
  WHERE SUPPLIERPEO.PARTY_ID = PARTYPEO.PARTY_ID 
    AND TRUNC(SYSDATE) BETWEEN NVL(TRUNC(SUPPLIERPEO.START_DATE_ACTIVE), TRUNC(SYSDATE)) AND NVL(TRUNC(SUPPLIERPEO.END_DATE_ACTIVE), TRUNC(SYSDATE))) po,
  FND_LOOKUPS fnd
WHERE (fnd.lookup_type     = 'YES_NO'
AND fnd.lookup_code        = ps.hold_flag)
AND ps.invoice_id          = i.invoice_id
AND i.vendor_id            = po.vendor_id
AND i.invoice_currency_code= curr.currency_code
AND ps.global_attribute11 IS NOT NULL
AND i.invoice_num BETWEEN NVL(:p_inv_num_ini,i.invoice_num) AND NVL(:p_inv_num_fin,i.invoice_num)
AND ps.due_date BETWEEN NVL(:p_due_date_ini,ps.due_date) AND NVL(:p_due_date_fin,ps.due_date)
AND ps.gross_amount BETWEEN NVL(:p_gross_amt_ini,ps.gross_amount) AND NVL(:p_gross_amt_fin,ps.gross_amount)

--COLLECDOC
SELECT doc.document_number "Collection Document" ,
  doc.due_date,
  doc.amount,
  doc.currency_code,
  fnd.meaning,
  ven.vendor_name,
  bank.bank_name,
  bank.bank_branch_name,
  doc.bank_collection_id
FROM jl_br_ap_collection_docs doc,
  FND_CURRENCIES_VL curr,
  (SELECT SUPPLIERPEO.VENDOR_ID, PARTYPEO.PARTY_NAME as vendor_name
  FROM HZ_PARTIES PARTYPEO
      ,POZ_SUPPLIERS SUPPLIERPEO
  WHERE SUPPLIERPEO.PARTY_ID = PARTYPEO.PARTY_ID 
    AND TRUNC(SYSDATE) BETWEEN NVL(TRUNC(SUPPLIERPEO.START_DATE_ACTIVE), TRUNC(SYSDATE)) AND NVL(TRUNC(SUPPLIERPEO.END_DATE_ACTIVE), TRUNC(SYSDATE))) ven,
  ce_bank_branches_v bank,
  FND_LOOKUPS fnd
WHERE (fnd.lookup_type      = 'YES_NO'
AND fnd.lookup_code         = doc.hold_flag)
AND doc.currency_code       = curr.currency_code
AND doc.vendor_id           = ven.vendor_id
AND doc.branch_party_id     = bank.branch_party_id
AND doc.bank_party_id       = bank.bank_party_id
AND (doc.invoice_id        IS NOT NULL
AND doc.payment_num        IS NOT NULL)
AND doc.status_lookup_code != 'CANCELLED'
AND doc.document_number BETWEEN NVL(:p_doc_docnum_ini,doc.document_number) AND NVL(:p_doc_docnum_fin,doc.document_number)
AND ((doc.due_date IS NOT NULL
AND doc.due_date BETWEEN NVL(:p_doc_duedate_ini,doc.due_date) AND NVL(:p_doc_duedate_fin,doc.due_date))
OR (doc.due_date IS NULL))
AND doc.amount BETWEEN NVL(:p_doc_amount_ini,doc.amount) AND NVL(:p_doc_amount_fin,doc.amount)
ORDER BY :p_sort_by ,  :p_docno_sup_date

--COMPANY_NAME
SELECT SUBSTR(NAME,1,30)
      AS  COMPANY_NAME
       FROM   GL_SETS_OF_BOOKS GSBKS
                , AP_SYSTEM_PARAMETERS APS
       WHERE  GSBKS.SET_OF_BOOKS_ID = APS.SET_OF_BOOKS_ID
==============================================================================================
----------------------BrazilianPayNonAssociatedCollectionDocumentsDm-------------
--Collections
SELECT
doc.document_number,
doc.org_id,
doc.due_date,
doc.amount,
doc.currency_code,
fnd.meaning,
ven.vendor_name,
prof.organization_name bank_name,
hzp.party_name bank_branch_name
FROM    
jl_br_ap_collection_docs  doc,  
(SELECT supplierpeo.vendor_id, partypeo.party_name vendor_name
  FROM hz_parties partypeo
           ,poz_suppliers supplierpeo
  WHERE supplierpeo.party_id = partypeo.party_id
  AND TRUNC(SYSDATE) BETWEEN NVL(TRUNC(supplierpeo.start_date_active), TRUNC(SYSDATE))       AND NVL(TRUNC(supplierpeo.end_date_active), TRUNC(SYSDATE)) ) ven, 
HZ_ORGANIZATION_PROFILES prof, 
hz_parties hzp,
FND_LOOKUPS fnd
WHERE
(fnd.lookup_type   =  'YES_NO'  and   fnd.lookup_code = doc.hold_flag) 
and doc.vendor_id	=	ven.vendor_id  and
doc.branch_party_id	=	hzp.party_id  
and doc.bank_party_id = prof.party_id 
and (doc.invoice_id  is    null  and  doc.payment_num  is    null)  
and doc.status_lookup_code  != 'CANCELLED' 
and doc.document_number  between nvl(:P_COLLECTION_DOC_NUMBER_FROM,doc.document_number)  
and nvl(:P_COLLECTION_DOC_NUMBER_TO,doc.document_number)
and ( (doc.due_date  is not null and doc.due_date  
   between nvl(:P_COLLECT_DOC_BEGIN_DUE_DATE,doc.due_date) 
  and  nvl(:P_COLLECT_DOC_END_DUE_DATE,doc.due_date)
    )  or doc.due_date is null)    
and doc.amount  
   between  nvl(:P_COLLECTION_DOC_AMOUNT_FROM,doc.amount)   and  nvl(:P_COLLECTION_DOC_AMOUNT_TO,doc.amount)
	order  by  :P_DOCNO_SUP_DATE
--GLOBAL_INFO
SELECT substr(gsbks.name,1,30) org_name
          FROM ap_system_parameters asp,
               gl_sets_of_books gsbks
         WHERE asp.set_of_books_id = gsbks.set_of_books_id

--Invoices 
SELECT
i.invoice_num,
-- Bug 12687304 Start
-- ps.payment_num,
NULL payment_num,
-- Bug 12687304 End
ps.due_date,
ps.gross_amount,
curr.currency_code,
fnd.meaning,
po.vendor_name,
prof.organization_name bank_name,
hzp.party_name bank_branch_name,
iba.bank_account_num bank_account_num
FROM
ap_invoices i, 
ap_payment_schedules ps, 
FND_CURRENCIES_VL curr, 
(SELECT supplierpeo.vendor_id, partypeo.party_name vendor_name
  FROM hz_parties partypeo
           ,poz_suppliers supplierpeo
  WHERE supplierpeo.party_id = partypeo.party_id
  AND TRUNC(SYSDATE) BETWEEN NVL(TRUNC(supplierpeo.start_date_active), TRUNC(SYSDATE))       AND NVL(TRUNC(supplierpeo.end_date_active), TRUNC(SYSDATE)) ) po,
FND_LOOKUPS fnd,
HZ_PARTIES hzp,
HZ_ORGANIZATION_PROFILES prof, 
IBY_EXT_BANK_ACCOUNTS iba
WHERE
(fnd.lookup_type   = 'YES_NO'  and   fnd.lookup_code = ps.hold_flag) 
and ps.invoice_id	=	i.invoice_id  
and i.invoice_type_lookup_code = 'STANDARD' 
and
i.vendor_id		=	po.vendor_id  and  
i.invoice_currency_code=	curr.currency_code  
and i.global_attribute1 = 'Y'  
and ps.payment_status_flag <> 'Y' 
and ps.global_attribute11	is  null    
and ps.external_bank_account_id   = iba.ext_bank_account_id   
and iba.ext_bank_account_id=i.external_bank_account_id 
and
-- i.party_id=hzp.party_id and
iba.branch_id = hzp.party_id 
and iba.bank_id = prof.party_id  
and  due_date  between  nvl(:P_INVOICE_DUE_DATE_RANGE_FROM, due_date)  
and nvl(:P_INVOICE_DUE_DATE_RANGE_TO ,due_date) 
and gross_amount  between nvl( :P_INVOICE_AMOUNT_RANGE_FROM ,gross_amount) and
nvl(:P_INVOICE_AMOUNT_RANGE_TO, gross_amount)
order by	:P_SORT_DOCUMENTS_BY
====================================================================================================
/* Formatted on 2021/03/18 10:24 (Formatter Plus v4.8.8) */
SELECT   hou.NAME ou_name, pha.segment1 po_number, pha.revision_num, TRANSLATE (TRIM (pha.comments), 'x' || CHR (10) || CHR (13), 'x') po_desc,
         pha.type_lookup_code type_1, pha.document_status po_status, NULL change_status,
         
         --TO_CHAR (pha.creation_date, 'DD/MM/RRRR HH:MI:SS AM', 'NLS_DATE_LANGUAGE=AMERICAN') order_date,
         TO_CHAR (FROM_TZ (CAST (pha.creation_date AS TIMESTAMP), 'UTC') AT TIME ZONE NVL (hrl.timezone_code, 'Asia/Kolkata'),
                  'DD/MM/RRRR HH:MI:SS AM', 'NLS_DATE_LANGUAGE=AMERICAN') order_date, (SELECT vendor_name
                                                                                         FROM poz_suppliers_v
                                                                                        WHERE vendor_id = pha.vendor_id) po_vendor_name,
         (SELECT vendor_site_code
            FROM poz_supplier_sites_all_m pssa
           WHERE pssa.vendor_site_id = pha.vendor_site_id) vendor_site_code, pha.currency_code po_currency,
         SUM (NVL ((pla.unit_price * pla.quantity), 0)) po_total_amount,
         NVL ((SELECT SUM (amount)
                 FROM ap_invoice_lines_all aila
                WHERE 1 = 1 AND aila.po_header_id = pha.po_header_id), 0) matched_amount,
         (SELECT display_name
            FROM per_person_names_f ppnf
           WHERE ppnf.person_id = pha.agent_id AND ppnf.name_type = 'IN') po_created_by,
         (SELECT TRANSLATE (TRIM (change_order_desc), 'x' || CHR (10) || CHR (13), 'x')
            FROM po_versions pv
           WHERE 1 = 1 AND pv.po_header_id = pha.po_header_id AND cancel_doc_flag = 'Y') reason_to_cancel, NULL rel_num
    FROM po_headers_all pha, po_lines_all pla, hr_operating_units hou, hr_all_organization_units haou, hr_locations hrl
   WHERE 1 = 1
     AND pha.po_header_id = pla.po_header_id
     AND hou.organization_id = pha.prc_bu_id
     AND pha.document_status = 'CANCELED'
     AND pha.type_lookup_code = 'STANDARD'
     AND (hou.NAME IN (:p_ou_name) OR 'All' IN (:p_ou_name || 'All'))
     AND TRUNC (pha.creation_date) >= :p_from_date
     AND TRUNC (pha.creation_date) <= :p_to_date
     AND hou.organization_id = haou.organization_id
     AND haou.location_id = hrl.location_id
GROUP BY hou.NAME,
         pha.segment1,
         pha.revision_num,
         pha.comments,
         pha.type_lookup_code,
         pha.document_status,
         pha.creation_date,
         pha.vendor_id,
         pha.vendor_site_id,
         pha.currency_code,
         pha.po_header_id,
         pha.created_by,
         pha.prc_bu_id,
         pha.agent_id,
         hrl.timezone_code
UNION ALL
SELECT   hou.NAME ou_name, pha.segment1 po_number, pha.revision_num, TRANSLATE (TRIM (pha.comments), 'x' || CHR (10) || CHR (13), 'x') po_desc,
         pha.type_lookup_code type_1, pha.document_status po_status, NULL change_status,
         
         --TO_CHAR (pha.creation_date, 'DD/MM/RRRR HH:MI:SS AM', 'NLS_DATE_LANGUAGE=AMERICAN') order_date,
         TO_CHAR (FROM_TZ (CAST (pha.creation_date AS TIMESTAMP), 'UTC') AT TIME ZONE NVL (hrl.timezone_code, 'Asia/Kolkata'),
                  'DD/MM/RRRR HH:MI:SS AM', 'NLS_DATE_LANGUAGE=AMERICAN') order_date, (SELECT vendor_name
                                                                                         FROM poz_suppliers_v
                                                                                        WHERE vendor_id = pha.vendor_id) po_vendor_name,
         (SELECT vendor_site_code
            FROM poz_supplier_sites_all_m pssa
           WHERE pssa.vendor_site_id = pha.vendor_site_id) vendor_site_code, pha.currency_code po_currency,
         SUM (NVL ((pla.unit_price * pla.quantity), 0)) po_total_amount,
         NVL ((SELECT SUM (amount)
                 FROM ap_invoice_lines_all aila
                WHERE 1 = 1 AND aila.po_header_id = pha.po_header_id), 0) matched_amount,
         (SELECT display_name
            FROM per_person_names_f ppnf
           WHERE ppnf.person_id = pha.agent_id AND ppnf.name_type = 'IN') po_created_by,
         (SELECT TRANSLATE (TRIM (change_order_desc), 'x' || CHR (10) || CHR (13), 'x')
            FROM po_versions pv
           WHERE 1 = 1 AND pv.po_header_id = pha.po_header_id AND cancel_doc_flag = 'Y') reason_to_cancel, rel.segment1 rel_num
    FROM po_headers_all pha, po_lines_all pla, hr_operating_units hou, po_headers_all rel, hr_all_organization_units haou, hr_locations hrl
   WHERE 1 = 1
     AND pha.po_header_id = pla.po_header_id
     AND hou.organization_id = pha.prc_bu_id
     AND pha.document_status = 'CANCELED'
     AND pha.type_lookup_code IN ('CONTRACT', 'BLANKET')
     AND rel.type_lookup_code = 'STANDARD'
     AND rel.from_header_id = pha.po_header_id
     AND rel.from_type_lookup_code = pha.type_lookup_code
     --AND (hou.NAME IN (:p_ou_name) OR 'All' IN (:p_ou_name || 'All'))
     AND TRUNC (pha.creation_date) >= :p_from_date
     AND TRUNC (pha.creation_date) <= :p_to_date
     AND hou.organization_id = haou.organization_id
     AND haou.location_id = hrl.location_id
GROUP BY hou.NAME,
         pha.segment1,
         pha.revision_num,
         pha.comments,
         pha.type_lookup_code,
         pha.document_status,
         pha.creation_date,
         pha.vendor_id,
         pha.vendor_site_id,
         pha.currency_code,
         pha.po_header_id,
         pha.created_by,
         pha.prc_bu_id,
         pha.agent_id,
         rel.segment1,
         hrl.timezone_code
ORDER BY 2
========================================================================================================
SELECT
    hou.name                  entity_name,
    pha.segment1              po_number,
    translate(TRIM(pha.comments), 'x'
                                  || CHR(10)
                                  || CHR(13), 'x') po_head_desc,
    pha.type_lookup_code,
    decode(pha.approved_flag, 'Y', 'Approved', 'Not Approved') po_approve_status,
    to_char(from_tz(CAST(pha.creation_date AS TIMESTAMP), 'UTC') AT TIME ZONE nvl(hrl.timezone_code, 'Asia/Kolkata'), 'DD/MM/RRRR HH24:MI'
    , 'NLS_DATE_LANGUAGE=AMERICAN') po_date,
    to_char(from_tz(CAST(pha.approved_date AS TIMESTAMP), 'UTC') AT TIME ZONE nvl(hrl.timezone_code, 'Asia/Kolkata'), 'DD/MM/RRRR HH24:MI'
    , 'NLS_DATE_LANGUAGE=AMERICAN') po_approved_date,
    (
        SELECT
            vendor_name
        FROM
            poz_suppliers_v
        WHERE
            vendor_id = pha.vendor_id
    ) po_vendor_name,
    (
        SELECT
            vendor_site_code
        FROM
            poz_supplier_sites_all_m pssa
        WHERE
            pssa.vendor_site_id = pha.vendor_site_id
            AND pssa.vendor_id = pha.vendor_id
    ) vendor_site_code,
    prla.attribute7           budget_code,
    pha.currency_code         po_currency,
    pha.rate                  inr_rate,
    (
        SELECT
            SUM(nvl(pla1.unit_price, 0) * nvl(pla1.quantity, 0))
        FROM
            po_lines_all pla1
        WHERE
            pla1.po_header_id = pla.po_header_id
    ) po_amount,
    ( nvl(pla.unit_price, 0) * nvl(pla.quantity, 0) ) line_amount,
    nvl(pla.quantity, 0) po_qty,
    pda.quantity_ordered      po_dist_qty,
    ( nvl(pla.unit_price, 0) * nvl(pda.quantity_ordered, 0) ) po_dist_amount,
    gcc.segment1
    || '.'
    || gcc.segment2
    || '.'
    || gcc.segment3
    || '.'
    || gcc.segment4
    || '.'
    || gcc.segment5
    || '.'
    || gcc.segment6
    || '.'
    || gcc.segment7
    || '.'
    || gcc.segment8
    || '.'
    || gcc.segment9 charge_acc,
    (
        SELECT
            display_name
        FROM
            per_person_names_f ppnf
        WHERE
            1 = 1
            AND ppnf.person_id = pha.agent_id
            AND ppnf.name_type = 'GLOBAL'
            AND sysdate BETWEEN ppnf.effective_start_date AND ppnf.effective_end_date
    ) po_buyer,
    pha.document_status       po_status,
    translate(TRIM(pla.item_description), 'x'
                                          || CHR(10)
                                          || CHR(13), 'x') po_line_desc,
    pla.line_num              po_line_num,
    prla.line_number          req_line_num,
    nvl((
        SELECT
            SUM(amount)
        FROM
            ap_invoice_lines_all aila
        WHERE
            1 = 1
            AND aila.po_header_id = pha.po_header_id
            AND aila.po_line_id = pla.po_line_id
            AND aila.po_distribution_id = pda.po_distribution_id
    ), 0) paid_amount,
    (
        SELECT
            MAX(rsh.receipt_num)
        FROM
            rcv_shipment_headers   rsh,
            rcv_shipment_lines     rsl
        WHERE
            1 = 1
            AND rsh.shipment_header_id = rsl.shipment_header_id
            AND rsl.po_header_id = pha.po_header_id
            AND rsl.po_line_id = pla.po_line_id
            AND rsl.po_distribution_id = pda.po_distribution_id
    ) grn_num,
    (
        SELECT                                                                           --MAX (TO_CHAR (rsh.creation_date, 'DD/MM/RRRR'))
            MAX(to_char(from_tz(CAST(rsh.creation_date AS TIMESTAMP), 'UTC') AT TIME ZONE nvl(hrl.timezone_code, 'Asia/Kolkata'),
            'DD/MM/RRRR HH24:MI', 'NLS_DATE_LANGUAGE=AMERICAN'))
        FROM
            rcv_shipment_headers   rsh,
            rcv_shipment_lines     rsl
        WHERE
            1 = 1
            AND rsh.shipment_header_id = rsl.shipment_header_id
            AND rsl.po_header_id = pha.po_header_id
            AND rsl.po_line_id = pla.po_line_id
            AND rsl.po_distribution_id = pda.po_distribution_id
    ) grn_date,
    prha.requisition_number   pr_num,
    to_char(from_tz(CAST(prha.creation_date AS TIMESTAMP), 'UTC') AT TIME ZONE nvl(hrl.timezone_code, 'Asia/Kolkata'), 'DD/MM/RRRR HH24:MI'
    , 'NLS_DATE_LANGUAGE=AMERICAN') pr_date,
    pla.line_status           po_line_status,
    pha.po_header_id,
    pla.po_line_id,
    prla.quantity,
    (
        SELECT
            MAX(display_name)
        FROM
            per_person_names_f ppnf
        WHERE
            person_id = prla.requester_id
            AND name_type = 'GLOBAL'
            AND sysdate BETWEEN ppnf.effective_start_date AND ppnf.effective_end_date
    ) pr_rasied_by,
    (
        SELECT
            display_name
        FROM
            per_person_names_f   ppnf,
            per_users            pu
        WHERE
            ppnf.person_id = pu.person_id
            AND pu.username = pha.created_by
            AND ppnf.name_type = 'GLOBAL'
            AND sysdate BETWEEN ppnf.effective_start_date AND ppnf.effective_end_date
    ) po_created_by,
    nvl(pla.unit_price, 0) pla_unit_price,
    pda.line_location_id,
    gl_flexfields_pkg.get_description_sql(gcc.chart_of_accounts_id, 2, gcc.segment2) account_head,
    (
        SELECT
            flv.meaning
        FROM
            egp_system_items_b   esib,
            fnd_lookup_values    flv
        WHERE
            1 = 1
            AND flv.lookup_type = 'EGP_ITEM_TYPE'
            AND flv.lookup_code = esib.item_type
            AND esib.inventory_item_id = pla.item_id
            AND esib.organization_id = pda.destination_organization_id
    ) item_type,
    pda.destination_organization_id,
    pla.item_id,
    ecv.category_id,
    ecv.category_name,
    substr(category_name, 1, instr(category_name, '.') - 1) major,
    substr(category_name, instr(category_name, '.') + 1, length(category_name)) miner,
    translate(TRIM(prha.description), 'x'
                                      || CHR(10)
                                      || CHR(13), 'x') pr_desc,
    prla.unit_price           prla_unit_price,
    prla.attribute4 pr_requester_name
FROM
    por_requisition_headers_all   prha,
    por_requisition_lines_all     prla,
    por_req_distributions_all     prda,
    po_headers_all                pha,
    po_lines_all                  pla,
    po_distributions_all          pda,
    gl_code_combinations          gcc,
    hr_operating_units            hou,
    egp_categories_vl             ecv,
    hr_all_organization_units     haou,
    hr_locations                  hrl
WHERE
    1 = 1
    AND prha.requisition_header_id = prla.requisition_header_id
    AND prha.req_bu_id = prla.req_bu_id
    AND prla.requisition_line_id = prda.requisition_line_id
    AND prda.distribution_id = pda.req_distribution_id
    AND pda.po_header_id = pha.po_header_id
    AND pda.po_line_id = pla.po_line_id
    AND pda.code_combination_id = gcc.code_combination_id
    AND hou.organization_id = prha.req_bu_id
    AND ecv.category_id = pla.category_id
    AND ( hou.name IN (
        :p_ou_name
    )
          OR 'All' IN (
        :p_ou_name || 'All'
    ) )
    AND trunc(pha.creation_date) >= :p_from_date
    AND trunc(pha.creation_date) <= :p_to_date
    AND hou.organization_id = haou.organization_id
    AND haou.location_id = hrl.location_id
    --AND pha.segment1 = 'CRL1101716'
/*GROUP BY
    hou.name,
    pha.segment1,
    translate(TRIM(pha.comments), 'x'
                                  || CHR(10)
                                  || CHR(13), 'x'),
    pha.type_lookup_code,
    decode(pha.approved_flag, 'Y', 'Approved', 'Not Approved'),
    to_char(from_tz(CAST(pha.creation_date AS TIMESTAMP), 'UTC') AT TIME ZONE nvl(hrl.timezone_code, 'Asia/Kolkata'), 'DD/MM/RRRR HH24:MI'
    , 'NLS_DATE_LANGUAGE=AMERICAN'),
    to_char(from_tz(CAST(pha.approved_date AS TIMESTAMP), 'UTC') AT TIME ZONE nvl(hrl.timezone_code, 'Asia/Kolkata'), 'DD/MM/RRRR HH24:MI'
    , 'NLS_DATE_LANGUAGE=AMERICAN'),
    pha.vendor_id,
    pha.vendor_site_id,
    prla.attribute7,
    pha.currency_code,
    pha.rate,
    nvl(pla.quantity, 0),
    pda.quantity_ordered,
    ( nvl(pla.unit_price, 0) * nvl(pda.quantity_ordered, 0) ),
    gcc.segment1
    || '.'
    || gcc.segment2
    || '.'
    || gcc.segment3
    || '.'
    || gcc.segment4
    || '.'
    || gcc.segment5
    || '.'
    || gcc.segment6
    || '.'
    || gcc.segment7
    || '.'
    || gcc.segment8
    || '.'
    || gcc.segment9,
    pha.agent_id,
    pha.document_status,
    translate(TRIM(pla.item_description), 'x'
                                          || CHR(10)
                                          || CHR(13), 'x'),
    pla.line_num,
    prla.line_number,
    pda.po_distribution_id,
    prha.requisition_number,
    to_char(from_tz(CAST(prha.creation_date AS TIMESTAMP), 'UTC') AT TIME ZONE nvl(hrl.timezone_code, 'Asia/Kolkata'), 'DD/MM/RRRR HH24:MI'
    , 'NLS_DATE_LANGUAGE=AMERICAN'),
    pla.line_status,
    pha.po_header_id,
    pla.po_line_id,
    prla.quantity,
    prha.preparer_id,
    pha.created_by,
    nvl(pla.unit_price, 0),
    pda.line_location_id,
    gl_flexfields_pkg.get_description_sql(gcc.chart_of_accounts_id, 2, gcc.segment2),
    pla.item_id,
    pda.destination_organization_id,
    ecv.category_id,
    ecv.category_name,
    substr(category_name, 1, instr(category_name, '.') - 1),
    substr(category_name, instr(category_name, '.') + 1, length(category_name)),
    hrl.timezone_code*/
=============================================================================================
	SELECT hauft.name as ENTITY_NAME,
AIA.SOURCE AS SOURCE,
ECA.CASH_ADVANCE_TYPE AS ADVANCE_TYPE,
AIA.INVOICE_TYPE_LOOKUP_CODE,
AIA.DOC_SEQUENCE_VALUE AS INVOICE_GROUP,
AIA.DOC_SEQUENCE_VALUE AS VOUCHER_NUMBER,
ppx.full_name AS EMPLOYEE_NAME,
paam.ASSIGNMENT_NUMBER as EMPLOYEE_NUMBER,
AIA.INVOICE_NUM AS INVOICE_NUMBER,
AIA.INVOICE_DATE AS PAYMENT_DATE,
ECA.PAYMENT_CURRENCY_CODE  AS CURRENCY_TYPE ,
eca.AMOUNT as ADVANCE_APPLIED_BY_EMPLOYEE,
ECA.PAYMENT_AMOUNT AS APPLIED_AMOUNT,
eca.ADJUSTED_AMOUNT,
eca.UNAPPLIED_AMOUNT,
ECA.STATUS_CODE AS STATUS,
paam.ASSIGNMENT_STATUS_TYPE as EMPLOYEE_STATUS,
eca.PURPOSE,
AIA.GL_DATE,
ECA.TRIP_START_DATE,
ECA.TRIP_END_DATE,
trunc (sysdate-aia.invoice_date)Aging_in
FROM EXM_CASH_ADVANCES ECA,
per_person_names_f ppx,
per_all_assignments_m paam,
hr_organization_units_f_tl hauft,
ap_invoices_all aia,
gl_code_combinations gcc,
ap_invoice_distributions_all aida 
WHERE ECA.PERSON_ID=PPX.PERSON_ID
and paam.person_id=ppx.person_id
and  ppx.name_type='GLOBAL'
and hauft.organization_id=paam.legal_entity_id
AND aida.invoice_id = aia.invoice_id
AND aida.dist_code_combination_id = gcc.code_combination_id
AND AIA.GL_DATE=:AS_ON_DATE
====================================================================================================
------------------------------------------------Chart of Accounts Mapping Rules Data Model---------------------------------------------------------------------
--Q_DETAIL_VALUES2
SELECT DISTINCT PK1_VALUE DETAIL_VALUE
FROM GL_SEG_VAL_HIER_RF
WHERE TREE_STRUCTURE_CODE = 'GL_ACCT_FLEX'
AND TREE_CODE = :TREE_CODE2
AND TREE_VERSION_ID = :TREE_VERSION_ID2
AND ANCESTOR_PK1_VALUE = :PARENT_SEGMENT_VALUE2
AND DATA_SOURCE_ID = :DETAIL_DS_ID
AND PK1_VALUE <> ANCESTOR_PK1_VALUE
ORDER BY PK1_VALUE

--Q_ROLLUP_RULES
SELECT RR.to_flex_value   TARGET_ROLLUP_SEGMENT_VALUE,
       GL_FLEXFIELDS_PKG.get_description_sql(:to_coa_id, :segment_num, RR.to_flex_value) TARGET_ROLLUP_VALUE_DESC,
--       GL_COA_MAPPING_RPT_PKG.get_segment_description(:TARGET_VALUE_SET_ID,RR.to_FLEX_VALUE) TARGET_ROLLUP_VALUE_DESC,
       GL_COA_MAPPING_RPT_PKG.get_operator(from_flex_value_low, from_flex_value_high, rr.tree_code) ACCT_FILTER_CONDITION,
       decode(rr.tree_code, null, decode(from_flex_value_low, ' ', null, from_flex_value_low)) SOURCE_SEGMENT_VALUE_FROM,
       decode(rr.tree_code, null, decode(from_flex_value_high, ' ', null, from_flex_value_high)) SOURCE_SEGMENT_VALUE_TO,
       tree_name   TREE_NAME,
       t.tree_code TREE_CODE2,
       tree_version_name TREE_VERSION_NAME,
       tv.tree_version_id TREE_VERSION_ID2,
       decode(rr.tree_code, null, null, from_flex_value_low) PARENT_SEGMENT_VALUE2
FROM GL_COA_MAP_ROLLUP_RULES RR,
     FND_TREE_VL T,
     FND_TREE_VERSION_VL TV
WHERE RR.segment_rule_id = :SEG_RULE_ID
AND   T.tree_structure_code (+) = 'GL_ACCT_FLEX'
AND   T.tree_code (+) = RR.tree_code
AND   TV.tree_structure_code (+) = 'GL_ACCT_FLEX'
AND   TV.tree_code (+) = RR.tree_code
AND   TV.status (+) = 'ACTIVE'
AND   :P_TREE_VERSION_AS_OF_DATE BETWEEN TV.effective_start_date(+) AND TV.effective_end_date(+)
ORDER BY RR.to_flex_value

--Q_SEGMENT_RULES
SELECT TS.sequence_number  SEGMENT_NUM,
       TS.segment_code     TARGET_SEGMENT_NAME,
       SR.segment_map_type SEGMENT_MAP_TYPE, 
       decode(SR.segment_map_type,'C',SS.segment_code,'R',SS.segment_code,'')    SOURCE_SEGMENT_NAME,
       decode(SR.segment_map_type, 'S', SR.single_value) TARGET_SEGMENT_VALUE,                 
       SR.segment_rule_id SEG_RULE_ID,
       GL_FLEXFIELDS_PKG.get_description_sql(MAP.to_coa_id, TS.sequence_number, SR.single_value) TARGET_VALUE_DESCRIPTION,
       SR.to_value_set_id TARGET_VALUE_SET_ID,
       MAP.to_coa_id TO_COA_ID
FROM GL_COA_MAPPINGS MAP,
     FND_KF_STR_INSTANCES_VL TSI,  -- target structure instance
     FND_KF_STR_INSTANCES_VL SSI,  -- source structure instance
     GL_COA_MAP_SEGMENT_RULES SR,
     FND_KF_SEGMENTS_B TS,  -- target segment
     FND_KF_SEGMENTS_B SS   -- source segment
WHERE MAP.coa_mapping_id = :P_COA_MAPPING_ID
AND   TSI.application_id = 101
AND   TSI.key_flexfield_code = 'GL#'
ANd   TSI.structure_instance_number = MAP.to_coa_id
AND   SSI.application_id = 101
AND   SSI.key_flexfield_code = 'GL#'
AND   SSI.structure_instance_number = MAP.from_coa_id
AND   SR.coa_mapping_id = MAP.coa_mapping_id
AND   TS.structure_id = TSI.structure_id
AND   TS.column_name = SR.to_seg_column_name
AND   SS.structure_id = decode(SR.segment_map_type, 'S', TSI.structure_id, SSI.structure_id)
AND   SS.column_name = nvl(SR.from_seg_column_name, SR.to_seg_column_name)
ORDER BY TS.sequence_number

--Q_MS_ROLLUP_RULES
SELECT MSRR.to_segment_value   TARGET_ROLLUP_SEGMENT_VALUE1,
       GL_FLEXFIELDS_PKG.get_description_sql(:to_coa_id1, :segment_num1, MSRR.to_segment_value) TARGET_ROLLUP_VALUE_DESC1,
       MSRR.from_segment1_value_low   SOURCE_SEGMENT1_VALUE_FROM,
       MSRR.from_segment2_value_low   SOURCE_SEGMENT2_VALUE_FROM
FROM GL_COA_MAP_MS_ROLLUP_RULES MSRR
WHERE MSRR.multi_segment_rule_id = :MULTI_SEG_RULE_ID
ORDER BY MSRR.to_segment_value

--Q_MULTI_SEGMENT_RULES
SELECT TS.sequence_number  SEGMENT_NUM1,
       TS.segment_code     TARGET_SEGMENT_NAME1,
       SS1.segment_code    SOURCE_SEGMENT1_NAME,
       SS2.segment_code    SOURCE_SEGMENT2_NAME,
       MSR.multi_segment_rule_id MULTI_SEG_RULE_ID,
       MAP.to_coa_id TO_COA_ID1
FROM GL_COA_MAPPINGS MAP,
     FND_KF_STR_INSTANCES_VL TSI,  -- target structure instance
     FND_KF_STR_INSTANCES_VL SSI,  -- source structure instance
     GL_COA_MAP_MULTI_SEG_RULES MSR,
     FND_KF_SEGMENTS_B TS,   -- target segment
     FND_KF_SEGMENTS_B SS1,  -- source segment1
     FND_KF_SEGMENTS_B SS2   -- source segment2
WHERE MAP.coa_mapping_id = :P_COA_MAPPING_ID
AND   TSI.application_id = 101
AND   TSI.key_flexfield_code = 'GL#'
ANd   TSI.structure_instance_number = MAP.to_coa_id
AND   SSI.application_id = 101
AND   SSI.key_flexfield_code = 'GL#'
AND   SSI.structure_instance_number = MAP.from_coa_id
AND   MSR.coa_mapping_id = MAP.coa_mapping_id
AND   TS.structure_id = TSI.structure_id
AND   TS.column_name = MSR.to_segment_column_name
AND   SS1.structure_id = SSI.structure_id
AND   SS1.column_name = MSR.from_segment1_column_name
AND   SS2.structure_id = SSI.structure_id
AND   SS2.column_name = MSR.from_segment2_column_name
ORDER BY TS.sequence_number

--Q_DETAIL_VALUES1
SELECT DISTINCT PK1_VALUE DETAIL_VALUE
FROM GL_SEG_VAL_HIER_RF
WHERE TREE_STRUCTURE_CODE = 'GL_ACCT_FLEX'
AND TREE_CODE = :TREE_CODE1
AND TREE_VERSION_ID = :TREE_VERSION_ID1
AND ANCESTOR_PK1_VALUE = :PARENT_SEGMENT_VALUE1
AND DATA_SOURCE_ID = :DETAIL_DS_ID
AND PK1_VALUE <> ANCESTOR_PK1_VALUE
ORDER BY PK1_VALUE

--Q_SEGMENT_COLUMN_VALUES
SELECT GL_COA_MAPPING_RPT_PKG.get_seg_val_and_opt(:ACCT_RULE_ID, :column_name, 'OPERATOR') ACCOUNT_FILTER_CONDITION,
       GL_COA_MAPPING_RPT_PKG.get_seg_val_and_opt(:ACCT_RULE_ID, :column_name, 'LOW') SOURCE_SEGMENT_VALUE_FROM,
       GL_COA_MAPPING_RPT_PKG.get_seg_val_and_opt(:ACCT_RULE_ID, :column_name, 'HIGH') SOURCE_SEGMENT_VALUE_TO,
       GL_COA_MAPPING_RPT_PKG.get_seg_val_and_opt(:ACCT_RULE_ID, :column_name, 'TREE_CODE') TREE_CODE1,
       GL_COA_MAPPING_RPT_PKG.get_seg_val_and_opt(:ACCT_RULE_ID, :column_name, 'TREE_NAME') TREE_NAME,
       GL_COA_MAPPING_RPT_PKG.get_seg_val_and_opt(:ACCT_RULE_ID, :column_name, 'TREE_VER_ID') TREE_VERSION_ID1,
       GL_COA_MAPPING_RPT_PKG.get_seg_val_and_opt(:ACCT_RULE_ID, :column_name, 'TREE_VER_NAME') TREE_VERSION_NAME,
       GL_COA_MAPPING_RPT_PKG.get_seg_val_and_opt(:ACCT_RULE_ID, :column_name, 'TREE_NODE_VAL') PARENT_SEGMENT_VALUE1
FROM dual

--Q_SOURCE_SEGMENTS
SELECT column_name COLUMN_NAME,
       ss.segment_code SOURCE_SEGMENT_NAME 
FROM  FND_KF_STR_INSTANCES_VL SSI, FND_KF_SEGMENTS_B SS
WHERE SSI.application_id = 101
AND   SSI.key_flexfield_code = 'GL#'
AND   SSI.structure_instance_number = :FROM_CHART_OF_ACCOUNTS_ID
AND   SS.structure_id    = SSI.structure_id
ORDER BY sequence_number

--Q_ACCOUNT_RULES
SELECT acct.to_code_combination_id TARGET_ACCOUNT_ID,
       &TARGET_ACCT TARGET_ACCT,
       account_rule_id ACCT_RULE_ID
FROM   gl_coa_map_account_rules acct,
       gl_code_combinations cc
WHERE  acct.coa_mapping_id = :P_COA_MAPPING_ID
AND    acct.to_code_combination_id = cc.code_combination_id

=========================================================================================================
/* Formatted on 2021/03/23 22:09 (Formatter Plus v4.8.8) */
SELECT   SUM (cls_total) OVER (PARTITION BY segment2 ORDER BY segment2) cls_tot_c,
         SUM (cls_total) OVER (PARTITION BY segment1 ORDER BY segment1) cls_tot_r, cls_total, segment2_desc,
         CASE
            WHEN segment1 = '991'
               THEN 'CRISIL Limited Eliminated'
            ELSE segment1_desc
         END segment1_desc, segment1, segment2
    FROM (SELECT   SUM (closing) cls_total, segment2, segment2_desc, segment1, segment1_desc
              FROM (SELECT   gcc.segment1,
                             SUBSTR (gl_flexfields_pkg.get_description_sql (gcc.chart_of_accounts_id, 1, gcc.segment1), 1, 300) segment1_desc,
                             gcc.segment2,
                             SUBSTR (gl_flexfields_pkg.get_description_sql (gcc.chart_of_accounts_id, 2, gcc.segment2), 1, 300) segment2_desc,
                             gl.ledger_id, (SUM (NVL (gb.begin_balance_dr_beq, 0)) - SUM (NVL (gb.begin_balance_cr_beq, 0))) opening,
                             (SUM (NVL (gb.period_net_dr_beq, 0)) - SUM (NVL (gb.period_net_cr_beq, 0))) period_net,
                             ((  (SUM (NVL (gb.begin_balance_dr_beq, 0)) - SUM (NVL (gb.begin_balance_cr_beq, 0)))
                               + (SUM (NVL (gb.period_net_dr_beq, 0)) - SUM (NVL (gb.period_net_cr_beq, 0)))
                              )
                             /** NVL ((SELECT conversion_rate
                                       FROM gl_daily_rates gdr, gl_periods gp
                                      WHERE from_currency = gb.currency_code
                                        AND to_currency = 'INR'
                                        AND gp.period_name = :p_period_name
                                        AND gp.period_set_name = :p_period_set---'APR to MAR'
                                        AND gdr.conversion_date BETWEEN gp.start_date AND gp.end_date
                                        AND conversion_type = '300000002067051'
                                        AND status_code = 'C'
                                        AND gdr.conversion_date =
                                               (SELECT MAX (gdr1.conversion_date)
                                                  FROM gl_daily_rates gdr1
                                                 WHERE 1 = 1
                                                   AND gdr1.from_currency = gdr.from_currency
                                                   AND gdr1.to_currency = gdr1.to_currency
                                                   AND gdr1.conversion_date BETWEEN gp.start_date AND gp.end_date
                                                   AND gdr1.conversion_type = gdr.conversion_type
                                                   AND gdr1.status_code = gdr.status_code)),
                                    1
                                   )*/
                             ) closing,
                             gb.currency_code cd1, gl.currency_code
                        FROM gl_balances gb, gl_code_combinations gcc, gl_ledgers gl
                       WHERE gb.code_combination_id = gcc.code_combination_id
                         AND gb.period_name = :p_period_name
--                         AND (gcc.segment2 IN (:P_F_SEG) OR 'All' IN (:P_F_SEG || 'All'))
--                         AND (gcc.segment2 IN (:P_T_SEG) OR 'All' IN (:P_T_SEG || 'All'))
                         AND gcc.segment2 >= NVL (:p_f_seg, gcc.segment2)
                         AND gcc.segment2 <= NVL (:p_t_seg, gcc.segment2)
                         AND (gcc.segment1 IN (:p_f_ent) OR 'All' IN (:p_f_ent || 'All'))
--                         AND (gcc.segment1 IN (:P_T_ENT) OR 'All' IN (:P_T_ENT || 'All'))
                         AND (gcc.segment2 IN (:p_m_acc) OR 'All' IN (:p_m_acc || 'All'))
                         AND gb.actual_flag = 'A'
                         AND gl.ledger_category_code = 'PRIMARY'
                         AND gl.description = 'CRISIL Consolidation Ledger'
                         AND gl.ledger_id = gb.ledger_id
                    GROUP BY gcc.segment2,
                             gl.ledger_id,
                             SUBSTR (gl_flexfields_pkg.get_description_sql (gcc.chart_of_accounts_id, 2, gcc.segment2), 1, 300),
                             SUBSTR (gl_flexfields_pkg.get_description_sql (gcc.chart_of_accounts_id, 1, gcc.segment1), 1, 300),
                             gcc.segment1,
                             gb.currency_code,
                             gl.currency_code
                    UNION ALL
                    SELECT   gcc.segment1,
                             SUBSTR (gl_flexfields_pkg.get_description_sql (gcc.chart_of_accounts_id, 1, gcc.segment1), 1, 300) segment1_desc,
                             gcc.segment2,
                             SUBSTR (gl_flexfields_pkg.get_description_sql (gcc.chart_of_accounts_id, 2, gcc.segment2), 1, 300) segment2_desc, NULL,
                             0 opening, 0 period_net, 0 closing, NULL, NULL
                        FROM (SELECT g1.segment1, g2.segment2, NVL (g1.chart_of_accounts_id, g2.chart_of_accounts_id) chart_of_accounts_id
                                FROM (SELECT DISTINCT segment1, chart_of_accounts_id
                                                 FROM gl_code_combinations) g1,
                                     (SELECT DISTINCT segment2, chart_of_accounts_id
                                                 FROM gl_code_combinations) g2) gcc
                       WHERE 1 = 1
--                         AND (gcc.segment2 IN (:P_F_SEG) OR 'All' IN (:P_F_SEG || 'All'))
--                         AND (gcc.segment2 IN (:P_T_SEG) OR 'All' IN (:P_T_SEG || 'All'))
                         AND gcc.segment2 >= NVL (:p_f_seg, gcc.segment2)
                         AND gcc.segment2 <= NVL (:p_t_seg, gcc.segment2)
                         AND (gcc.segment1 IN (:p_f_ent) OR 'All' IN (:p_f_ent || 'All'))
--                         AND (gcc.segment1 IN (:P_T_ENT) OR 'All' IN (:P_T_ENT || 'All'))
                         AND (gcc.segment2 IN (:p_m_acc) OR 'All' IN (:p_m_acc || 'All'))
                    GROUP BY gcc.segment2,
                             SUBSTR (gl_flexfields_pkg.get_description_sql (gcc.chart_of_accounts_id, 2, gcc.segment2), 1, 300),
                             SUBSTR (gl_flexfields_pkg.get_description_sql (gcc.chart_of_accounts_id, 1, gcc.segment1), 1, 300),
                             gcc.segment1) xx
          --WHERE segment2 = '111003'
          GROUP BY segment2, segment2_desc, segment1, segment1_desc)
   WHERE 1 = 1 AND UPPER (segment1_desc) NOT LIKE '%FOUNDATION%'
ORDER BY 7, 6
=========================================================================================================
SELECT   RCTA.trx_number                                                    TRX_NUMBER
        , RCTA.invoice_currency_code                                        INV_CURRENCY_CODE
    	, RCTA.customer_trx_id                                              
    	, TO_CHAR(RCTA.trx_date, 'DD-MM-YYYY')                              INVOICE_DATE
		, HCA.account_number                                                CUSTOMER_NUMBER
		,HCA.orig_system_reference                                          ORIG_REFERENCE
    	, HP.party_name                                                     CUSTOMER_NAME
		, HOU.name                                                          OPERATING_UNIT
		, RCTA.doc_sequence_value                                           DOC_SEQUENCE_VALUE
		, RCTTA.name                                                        TRANSACTION_TYPE
		, (SELECT meaning                                                   
			 FROM fnd_lookup_values_tl                                      
			WHERE lookup_type = 'AR_ALL_DOC_CLASSES'                        
			  AND lookup_code = RCTA.trx_class)                             INVOICE_CLASS
		, GCC.segment1
           || '.'
           || GCC.segment2
           || '.'
           || GCC.segment3
           || '.'
           || GCC.segment4
           || '.'
           || GCC.segment5
           || '.'
           || GCC.segment6
           || '.'
           || GCC.segment7
           || '.'
           || GCC.segment8    
           || '.'
           || GCC.segment9		                                             ACCOUNT_CODE
		 
		 , GL.currency_code                                                  ACCOUNTED_CURRENCY
		 , HPS.party_site_number                                             CUST_SITE
         , (SELECT   state                                                                                                         
              FROM   hz_locations HL                                                                                               
             WHERE   HL.location_id = HPS.location_id)                       CUST_SITE_STATE
		 , (SELECT  territory_short_name                                     
		      FROM  hz_locations HL                                          
                   ,fnd_territories_vl  FTV			                         
             WHERE  HL.location_id = HPS.location_id                         
			   AND  FTV.territory_code = HL.country)                         CUST_SITE_COUNTRY
		 , RCTLA.attribute2                                                  GROSS_AMOUNT
		 , RCTLA.attribute3                                                  DISCOUNT
		 , RCTLA.line_number                                                 LINE_NUMBER
		 , RCTLA.extended_amount                                             LINE_AMOUNT
		 , TO_CHAR(RCTLA.rule_start_date, 'DD-MM-YYYY')                      RULE_START_DATE
		 , TO_CHAR(RCTLA.rule_end_date, 'DD-MM-YYYY')                        RULE_END_DATE
		 , RCTLA.accounting_rule_duration                                    RULE_DURATION
		 , RR.name                                                           RULE_NAME
		 , (SELECT meaning                                                   
		      FROM fnd_lookup_values                                         
			 WHERE lookup_type = 'RULE_TYPE'                                 
			   AND lookup_code = RR.type)                                    RULE_TYPE
		 , RBSA.name                                                         SOURCE_NAME
		 , (SELECT trx_number 
	          FROM ra_customer_trx_all
		     WHERE customer_trx_id = RCTA.previous_customer_trx_id)          ORIG_INVOICE_NUMBER
		 , NVL(GDR.conversion_rate, 1)                                       CONVERSION_RATE_INR
		 , (SELECT SUM(extended_amount)
		      FROM ra_customer_trx_lines_all
			 WHERE customer_trx_id = RCTA.customer_trx_id
			   AND LINE_TYPE = 'LINE')                                       INV_AMT
		 , (SELECT SUM(extended_amount) * NVL(RCTA.exchange_rate, 1)
		      FROM ra_customer_trx_lines_all
			 WHERE customer_trx_id = RCTA.customer_trx_id
			   AND LINE_TYPE = 'LINE')                                       INV_AMT_ACCTD
	     , ROUND((SELECT SUM(extended_amount)
		      FROM ra_customer_trx_lines_all
			 WHERE customer_trx_id = RCTA.customer_trx_id
			   AND LINE_TYPE = 'LINE') * NVL(GDR.conversion_rate, 1), 4)     INV_AMT_INR
		 , (SELECT SUM(tax_amt)
		      FROM zx_lines
			 WHERE trx_id = RCTA.customer_trx_id
			   AND application_id = 222)                                     TAX_AMOUNT
		 , (SELECT SUM(tax_amt)
		      FROM zx_lines
			 WHERE trx_id = RCTA.customer_trx_id
			   AND trx_line_id = RCTLA.customer_trx_line_id
			   AND application_id = 222)                                     TAX_LINE_AMT
		 , TO_CHAR(RCTLG.gl_date, 'DD-MM-YYYY')                              GL_DATE
		 , TO_CHAR(RCTLG.gl_date, 'DD-MM-YYYY')                       DISTRIBUTION_DATE
		 , /*CASE WHEN (SELECT count(1)
					  FROM xla_distribution_links XDL
						  ,xla_ae_lines XAL
					 WHERE XDL.source_distribution_id_num_1 = RCTLG.cust_trx_line_gl_dist_id
					   AND XDL.source_distribution_type = 'RA_CUST_TRX_LINE_GL_DIST_ALL'
					   AND XDL.application_id	= 222
					   AND XDL.ae_line_num = XAL.ae_line_num
					   AND XDL.ae_header_id = XAL.ae_header_id
					   AND XAL.ledger_id = RCTLG.set_of_books_id
					   AND XAL.ACCOUNTED_CR IS NOT NULL) > 0 THEN
					ABS(RCTLG.ACCTD_AMOUNT) * -1	
                WHEN (SELECT count(1)
					  FROM xla_distribution_links XDL
						  ,xla_ae_lines XAL
					 WHERE XDL.source_distribution_id_num_1 = RCTLG.cust_trx_line_gl_dist_id
					   AND XDL.source_distribution_type = 'RA_CUST_TRX_LINE_GL_DIST_ALL'
					   AND XDL.application_id	= 222
					   AND XDL.ae_line_num = XAL.ae_line_num
					   AND XDL.ae_header_id = XAL.ae_header_id
					   AND XAL.ledger_id = RCTLG.set_of_books_id
					   AND XAL.ACCOUNTED_DR IS NOT NULL) > 0 THEN
					ABS(RCTLG.ACCTD_AMOUNT)	* 1	
           END	*/  -- commented  by snehal	on 25/03/2021
		   
		   RCTLG.ACCTD_AMOUNT * -1  DIST_ACCT_AMT				-- added  by snehal	on 25/03/2021
		   -- Added by Pratul
		/* , CASE WHEN XAL.ACCOUNTED_CR IS NOT NULL 		Commented by Pratul
                THEN ABS(RCTLG.ACCTD_AMOUNT) * -1	
                WHEN XAL.ACCOUNTED_DR IS NOT NULL
                THEN ABS(RCTLG.ACCTD_AMOUNT)	* 1	
                END				DIST_ACCT_AMT  */
		 , RCTLA.attribute7||' '||RCTLA.attribute8                           LINE_DESC 
		 , RCTLG.account_class
		 , RCTA.attribute2                                                   PREV_INV_NUMBER
		 , NULL                                                              JE_COUNTRY
		 , RCTA.credit_method_for_rules                                      CREDIT_METHOD
		 , GCC.segment2                                                      NATURAL_ACCOUNT
		-- , GCC.segment3                                                      BCC_CODE
		-- , GCC.segment4                                                      PROJECT_CODE
		 , RCTLA.attribute5													 BCC_CODE
		 , RCTLA.attribute4													 PROJECT_CODE
		 , TO_CHAR(HCA.creation_date, 'DD-MM-YYYY')                          CUSTOMER_CREATION_DATE
  FROM    ra_customer_trx_all                  RCTA
          ,hz_cust_accounts                     HCA
          ,hz_parties                           HP
		  ,hr_operating_units                   HOU
		  ,ra_cust_trx_types_all                RCTTA
		  ,ra_cust_trx_line_gl_dist_all         RCTLG
		  ,ra_customer_trx_lines_all            RCTLA
		  ,gl_code_combinations                 GCC
    	  ,gl_ledgers                           GL
		  ,hz_cust_site_uses_all                HCSU
          ,hz_cust_acct_sites_all               HCAS
		  ,hz_party_sites                       HPS
		  ,ra_rules                             RR
		  ,ra_batch_sources_all                 RBSA
		  ,gl_daily_rates                       GDR
		--  , xla_events                   		XE				Commented by Pratul
  		--  , xla_ae_lines                        XAL			Commented by Pratul
        --  , xla_ae_headers                      XAH			Commented by Pratul
		--  ,xla_distribution_links               XLDL			Commented by Pratul
   WHERE  1 = 1
    -- AND  RCTA.trx_number IN  ('21319900181', '1919902189', '21329900031')
     AND  RCTA.bill_to_customer_id                      =  HCA.cust_account_id
     AND  HCA.party_id                                  =  HP.party_id
	 AND  RCTA.org_id                                   =  HOU.organization_id
	 AND  RCTA.cust_trx_type_seq_id                     =  RCTTA.cust_trx_type_seq_id
	 AND  RCTA.customer_trx_id                          =  RCTLG.customer_trx_id
	 AND  RCTLG.code_combination_id                     =  GCC.code_combination_id
     AND  RCTLG.set_of_books_id                         =  GL.ledger_id
	 AND  GDR.from_currency(+)                          =  RCTA.invoice_currency_code
    -- AND  RCTLG.cust_trx_line_gl_dist_id                =  XLDL.source_distribution_id_num_1
    -- AND  XLDL.source_distribution_type 				=  'RA_CUST_TRX_LINE_GL_DIST_ALL'
	-- AND  XAL.application_id                            =  XAH.application_id
    -- AND  XAL.ae_header_id                              =  XAH.ae_header_id
    -- AND  XE.application_id                             =  XAH.application_id
    -- AND  XAH.event_id                                  =  XE.event_id
	-- AND  XE.application_id                             =  222
	-- AND  XLDL.application_id                           =  XE.application_id
    -- AND  XLDL.ae_header_id                             =  XAH.ae_header_id
	-- AND  XLDL.application_id							  =  222								
    -- AND  XLDL.ae_line_num                              =  XAL.ae_line_num
	-- AND  XLDL.ae_header_id                             =  XAL.ae_header_id					
	-- AND  XAL.ledger_id								  =  RCTLG.set_of_books_id			
	-- AND  XLDL.ROUNDING_CLASS_CODE = 'RECEIVABLE'
    -- AND  XAH.LEDGER_ID                                  = RCTLG.SET_OF_BOOKS_ID
	-- AND  XAH.LEGAL_ENTITY_ID                            = HOU.DEFAULT_LEGAL_CONTEXT_ID	
	AND  GDR.to_currency(+)                            =  'INR'
	 AND  GDR.conversion_type(+)                        =  'Corporate'
	 AND  GDR.conversion_date(+)                        =  TRUNC(:p_corp_rate)
	 AND  RCTLG.customer_trx_line_id                    =  RCTLA.customer_trx_line_id	 
	 AND  RCTLG.gl_posted_date  IS NOT NULL
	 AND  RCTA.bill_to_site_use_id                      =  HCSU.site_use_id
	 AND  HCSU.cust_acct_site_id                        =  HCAS.cust_acct_site_id
	 AND  RCTLA.accounting_rule_id                      =  RR.rule_id(+)
	 AND  RCTA.batch_source_seq_id                      =  RBSA.batch_source_seq_id(+)
	 AND  RCTLG.account_class                           <> 'SUSPENSE'
	 AND  HPS.party_site_id                             =  HCAS.party_site_id
     AND  TRUNC(RCTLG.gl_date) BETWEEN (SELECT TRUNC (min(start_date)) from gl_periods where period_name = :p_period_from)
	 AND  (SELECT TRUNC(min(end_date))from gl_periods where period_name = :p_period_to)
--	 AND  TRUNC(RCTLG.gl_date)  BETWEEN TRUNC(:p_period_from) AND last_day(:p_period_to)
	 AND  HOU.name                                             =    NVL(:p_bu_name, HOU.name)
	 AND  TO_NUMBER(GCC.segment2) BETWEEN TO_NUMBER(:p_account_from) AND TO_NUMBER(:p_account_to)
	-- AND RCTA.TRX_NUMBER = '1919902337'
UNION ALL 

   SELECT        ACRA.receipt_number                                                   TRX_NUMBER
               , ACRA.CURRENCY_CODE                                                    INV_CURRENCY_CODE
			   , ACRA.CASH_RECEIPT_ID                                                  customer_trx_id
			   , TO_CHAR(ACRA.receipt_date, 'DD-MM-YYYY')                              INVOICE_DATE
			   , NULL                                                                  CUSTOMER_NUMBER
			   ,NULL                                                                   ORIG_REFERENCE
			   , NULL                                                                  CUSTOMER_NAME
			   , HOU.name                                                              OPERATING_UNIT
			   , ACRA.doc_sequence_value                                               DOC_SEQUENCE_VALUE
			   , ARM.name                                                              TRANSACTION_TYPE
			   , 'Miscellaneous'                                                       INVOICE_CLASS
			   , GCC.segment1
                  || '.'
                  || GCC.segment2
                  || '.'
                  || GCC.segment3
                  || '.'
                  || GCC.segment4
                  || '.'
                  || GCC.segment5
                  || '.'
                  || GCC.segment6
                  || '.'
                  || GCC.segment7
                  || '.'
                  || GCC.segment8
                  || '.'
                  || GCC.segment9                                   				  ACCOUNT_CODE
			  , GL.currency_code                                                      ACCOUNTED_CURRENCY
			  , NULL                                                                  CUST_SITE
              , NULL                                                                  CUST_SITE_STATE
		      , NULL                                                                  CUST_SITE_COUNTRY
		      , NULL                                                                  GROSS_AMOUNT
		      , NULL                                                                  DISCOUNT
		      , NULL                                                                  LINE_NUMBER
		      , NULL                                                                  LINE_AMOUNT
		      , NULL                                                                  RULE_START_DATE
		      , NULL                                                                  RULE_END_DATE
		      , NULL                                                                  RULE_DURATION
		      , NULL                                                                  RULE_NAME
		      , NULL                                                                  RULE_TYPE
		      , NULL                                                                  SOURCE_NAME
		      , NULL                                                                  ORIG_INVOICE_NUMBER
			  , NVL(GDR.conversion_rate, 1)                                           CONVERSION_RATE_INR
			  , ACRA.amount                                                           INV_AMT
			  , ACRA.amount * NVL(ACRA.exchange_rate, 1)                              INV_AMT_ACCTD
			  , ACRA.amount * NVL(GDR.conversion_rate, 1)                             INV_AMT_INR
			  , NULL                                                                  TAX_AMOUNT
			  , NULL                                                                  TAX_LINE_AMT
			  , TO_CHAR(AMCD.gl_date, 'DD-MM-YYYY')                                    GL_DATE
		      , TO_CHAR(AMCD.gl_date, 'DD-MM-YYYY')                             DISTRIBUTION_DATE
			  , NVL(ACCTD_AMOUNT_DR, 0) - NVL(ACCTD_AMOUNT_CR, 0)                     DIST_ACCT_AMT
			  , NULL                                                                  LINE_DESC 
		      , NULL                                                                  ACCOUNT_CLASS
		      , NULL                                                                  PREV_INV_NUMBER
		      , NULL                                                                  JE_COUNTRY
		      , NULL                                                                  CREDIT_METHOD
			  , GCC.segment2                                                          NATURAL_ACCOUNT
			  , GCC.segment3                                                          BCC_CODE
			  , GCC.segment4                                                          PROJECT_CODE
			  , NULL                                                                  CUSTOMER_CREATION_DATE
			  
			
	FROM     ar_cash_receipts_all                 ACRA
	       , hr_operating_units                   HOU
		   , ar_receipt_methods                   ARM
		   , ar_misc_cash_distributions_all       AMCD
		   , ar_distributions_all                 ADA
		   , gl_code_combinations                 GCC
		   , gl_ledgers                           GL
		   , gl_daily_rates                       GDR
		   
   WHERE    1       =          1
     AND  ACRA.org_id                          =       HOU.organization_id
	 AND  ACRA.type                            =       'MISC'
	 AND  ACRA.receipt_method_id               =       ARM.receipt_method_id
	 AND  AMCD.cash_receipt_id                 =       ACRA.cash_receipt_id
	 AND  ADA.source_id                        =       AMCD.misc_cash_distribution_id
	 AND  ADA.source_table                     =       'MCD'
	 AND  ADA.code_combination_id              =       GCC.code_combination_id
	 AND  GDR.from_currency(+)                 =       ACRA.currency_code
	 AND  GDR.to_currency(+)                   =       'INR'
	 AND  GDR.conversion_type(+)               =       'Corporate'
	 AND  AMCD.gl_posted_date  IS NOT NULL
	 AND  GDR.conversion_date(+)               =       TRUNC(:p_corp_rate)
	 AND  AMCD.set_of_books_id                 =       GL.ledger_id
	 AND  ADA.source_type                      =       'MISCCASH'
	  AND TRUNC(AMCD.gl_date) BETWEEN (SELECT TRUNC(min(start_date)) from gl_periods where period_name = :p_period_from)
	AND (SELECT TRUNC(min(end_date))from gl_periods where period_name = :p_period_to)
	/* AND  TRUNC(AMCD.gl_date)  BETWEEN TRUNC(:p_period_from) AND last_day(:p_period_to) */
	 AND  HOU.name                                             =    NVL(:p_bu_name, HOU.name)
	 AND  TO_NUMBER(GCC.segment2) BETWEEN TO_NUMBER(:p_account_from) AND TO_NUMBER(:p_account_to) 
	 
	 UNION ALL
 SELECT   GJH.name                              TRX_NUMBER
       , GJH.currency_code                 INV_CURRENCY_CODE
       , GJH.je_header_id                  CUSTOMER_TRX_ID
	   , TO_CHAR(GJH.DEFAULT_EFFECTIVE_DATE, 'DD-MM-YYYY')                     INVOICE_DATE
	   , NULL                                                                  CUSTOMER_NUMBER
	   ,NULL                                                                   ORIG_REFERENCE
	   , NULL                                                                  CUSTOMER_NAME
	   , HOU.name                                                              OPERATING_UNIT
	   , GJH.doc_sequence_value                                               DOC_SEQUENCE_VALUE
	   , (SELECT user_je_category_name
	        FROM gl_je_categories_tl GJCT
		    WHERE GJCT.je_category_name = GJH.je_category)                   TRANSACTION_TYPE
	   , GB.name                                                            INVOICE_CLASS
	   , GCC.segment1
         || '.'
         || GCC.segment2
         || '.'
         || GCC.segment3
         || '.'
         || GCC.segment4
         || '.'
         || GCC.segment5
         || '.'
         || GCC.segment6
         || '.'
         || GCC.segment7
         || '.'
         || GCC.segment8
         || '.'
         || GCC.segment9                                   				       ACCOUNT_CODE
	   , GL.currency_code                                                      ACCOUNTED_CURRENCY
	   , NULL                                                                  CUST_SITE
       , NULL                                                                  CUST_SITE_STATE
	   , NULL                                                                  CUST_SITE_COUNTRY
	   , NULL                                                                  GROSS_AMOUNT
	   , NULL                                                                  DISCOUNT
	   , GJL.je_line_num                                                       LINE_NUMBER
	   , NVL(GJL.entered_dr, 0) - NVL(GJL.entered_cr, 0)                       LINE_AMOUNT
	   , NULL                                                                  RULE_START_DATE
	   , NULL                                                                  RULE_END_DATE
	   , NULL                                                                  RULE_DURATION
	   , NULL                                                                  RULE_NAME
	   , NULL                                                                  RULE_TYPE
	   , GJH.je_source                                                         SOURCE_NAME
	   , NULL                                                                  ORIG_INVOICE_NUMBER
	   , NVL(GDR.conversion_rate, 1)                                           CONVERSION_RATE_INR
	   , NVL(GJH.RUNNING_TOTAL_DR, 0) - NVL(GJH.RUNNING_TOTAL_CR, 0)                   INV_AMT
	   , NVL(GJH.RUNNING_TOTAL_ACCOUNTED_DR, 0) - NVL(GJH.RUNNING_TOTAL_ACCOUNTED_CR, 0)                  INV_AMT_ACCTD
	   , (NVL(GJH.RUNNING_TOTAL_DR, 0) - NVL(GJH.RUNNING_TOTAL_CR, 0)) * NVL(GDR.conversion_rate, 1)                             INV_AMT_INR
	   , NULL                                                                  TAX_AMOUNT
	   , NULL                                                                  TAX_LINE_AMT
	   , TO_CHAR(GJH.default_effective_date, 'DD-MM-YYYY')                     GL_DATE
	   , TO_CHAR(GJL.effective_date, 'DD-MM-YYYY')                            DISTRIBUTION_DATE
	   , NVL(GJL.accounted_dr, 0) - NVL(GJL.accounted_cr, 0)                   DIST_ACCT_AMT
	   , GJL.description                                                       LINE_DESC -- Added by Aditya on 14th April 2021
	   , NULL                                                                  ACCOUNT_CLASS
	   , NULL                                                                  PREV_INV_NUMBER
	   , NULL                                                                  JE_COUNTRY
	   , NULL                                                                  CREDIT_METHOD
	   , GCC.segment2                                                          NATURAL_ACCOUNT
	   , GCC.segment3                                                          BCC_CODE
	   , GCC.segment4                                                          PROJECT_CODE
	   , NULL                                                                  CUSTOMER_CREATION_DATE
  FROM   gl_je_headers                        GJH
        ,gl_ledgers                           GL
	    ,hr_operating_units                   HOU
	    ,gl_code_combinations                 GCC
		,gl_je_lines                          GJL
		,gl_daily_rates                       GDR
		,gl_je_batches                        GB
	--	,gl_periods                           GP
 WHERE   1           =         1
   AND   GJH.je_source IN   ('Spreadsheet', 'Manual', 'AutoCopy')
   AND GJH.ledger_id                                         =    GL.ledger_id
   AND GJH.je_header_id                                      =    GJL.je_header_id
   AND GB.je_batch_id                                        =    GJH.je_batch_id
   AND GJH.status                                            =    'P'
   AND GL.ledger_id                                          =    HOU.SET_OF_BOOKS_ID
   AND GJL.code_combination_id                               =    GCC.code_combination_id
   AND  GDR.from_currency(+)                                 =       GJH.currency_code
   AND  GDR.to_currency(+)                                   =       'INR'
   AND  GDR.conversion_type(+)                               =       'Corporate'
 --  AND GP.period_name                                        =       GJH.period_name
   AND  GDR.conversion_date(+)                               =       TRUNC(:p_corp_rate)
    AND TRUNC(GJL.effective_date) BETWEEN (SELECT TRUNC(min(start_date)) from gl_periods where period_name = :p_period_from)
	AND (SELECT TRUNC(min(end_date))from gl_periods where period_name = :p_period_to)
 /*  AND  TRUNC(GP.start_date) BETWEEN TRUNC(:p_period_from) AND TRUNC(:p_period_to) */
   AND  HOU.name                                             =    NVL(:p_bu_name, HOU.name)
   AND  TO_NUMBER(GCC.segment2) BETWEEN TO_NUMBER(:p_account_from) AND TO_NUMBER(:p_account_to)
=====================================================================================================
SELECT
    SUM(cls_total) OVER(
        PARTITION BY segment2
        ORDER BY
            segment2
    ) cls_tot_c,
    SUM(cls_total) OVER(
        PARTITION BY segment1
        ORDER BY
            segment1
    ) cls_tot_r,
    cls_total,
    segment2_desc,
    CASE
            WHEN upper(segment1_desc) LIKE '%CONSOLIDATION%' THEN
                replace(segment1_desc, 'Consolidation', 'Eliminated')
            ELSE
                segment1_desc
        END
    || ' - '
    || segment1 segment1_desc,
    segment1,
    segment2
FROM
    (
        SELECT
            SUM(closing) cls_total,
            segment2,
            segment2_desc,
            segment1,
            segment1_desc
        FROM
            (
                SELECT
                    gcc.segment1,
                    substr(gl_flexfields_pkg.get_description_sql(gcc.chart_of_accounts_id, 1, gcc.segment1), 1, 300) segment1_desc
                    ,
                    gcc.segment2,
                    substr(gl_flexfields_pkg.get_description_sql(gcc.chart_of_accounts_id, 2, gcc.segment2), 1, 300) segment2_desc
                    ,
                    gl.ledger_id,
                    ( SUM(nvl(gb.begin_balance_dr_beq, 0)) - SUM(nvl(gb.begin_balance_cr_beq, 0)) ) opening,
                    ( SUM(nvl(gb.period_net_dr_beq, 0)) - SUM(nvl(gb.period_net_cr_beq, 0)) ) period_net,
                    ( ( ( SUM(nvl(gb.begin_balance_dr_beq, 0)) - SUM(nvl(gb.begin_balance_cr_beq, 0)) ) + ( SUM(nvl(gb.period_net_dr_beq
                    , 0)) - SUM(nvl(gb.period_net_cr_beq, 0)) ) )
                             /** NVL ((SELECT conversion_rate
                                       FROM gl_daily_rates gdr, gl_periods gp
                                      WHERE from_currency = gb.currency_code
                                        AND to_currency = 'INR'
                                        AND gp.period_name = :p_period_name
                                        AND gp.period_set_name = :p_period_set---'APR to MAR'
                                        AND gdr.conversion_date BETWEEN gp.start_date AND gp.end_date
                                        AND conversion_type = '300000002067051'
                                        AND status_code = 'C'
                                        AND gdr.conversion_date =
                                               (SELECT MAX (gdr1.conversion_date)
                                                  FROM gl_daily_rates gdr1
                                                 WHERE 1 = 1
                                                   AND gdr1.from_currency = gdr.from_currency
                                                   AND gdr1.to_currency = gdr1.to_currency
                                                   AND gdr1.conversion_date BETWEEN gp.start_date AND gp.end_date
                                                   AND gdr1.conversion_type = gdr.conversion_type
                                                   AND gdr1.status_code = gdr.status_code)),
                                    1
                                   )*/ ) closing,
                    gb.currency_code cd1,
                    gl.currency_code
                FROM
                    gl_balances            gb,
                    gl_code_combinations   gcc,
                    gl_ledgers             gl
                WHERE
                    gb.code_combination_id = gcc.code_combination_id
                    AND gb.period_name = :p_period_name
--                         AND (gcc.segment2 IN (:P_F_SEG) OR 'All' IN (:P_F_SEG || 'All'))
--                         AND (gcc.segment2 IN (:P_T_SEG) OR 'All' IN (:P_T_SEG || 'All'))
                    AND gcc.segment2 >= nvl(:p_f_seg, gcc.segment2)
                    AND gcc.segment2 <= nvl(:p_t_seg, gcc.segment2)
                    AND ( gcc.segment1 IN (
                        :p_f_ent
                    )
                          OR 'All' IN (
                        :p_f_ent || 'All'
                    ) )
--                         AND (gcc.segment1 IN (:P_T_ENT) OR 'All' IN (:P_T_ENT || 'All'))
                    AND ( gcc.segment2 IN (
                        :p_m_acc
                    )
                          OR 'All' IN (
                        :p_m_acc || 'All'
                    ) )
                    AND gb.actual_flag = 'A'
                    AND gl.ledger_category_code = 'PRIMARY'
                    AND gl.name = :p_consol_ledger
                    AND gl.ledger_id = gb.ledger_id
                GROUP BY
                    gcc.segment2,
                    gl.ledger_id,
                    substr(gl_flexfields_pkg.get_description_sql(gcc.chart_of_accounts_id, 2, gcc.segment2), 1, 300),
                    substr(gl_flexfields_pkg.get_description_sql(gcc.chart_of_accounts_id, 1, gcc.segment1), 1, 300),
                    gcc.segment1,
                    gb.currency_code,
                    gl.currency_code
                UNION ALL
                SELECT
                    gcc.segment1,
                    substr(gl_flexfields_pkg.get_description_sql(gcc.chart_of_accounts_id, 1, gcc.segment1), 1, 300) segment1_desc
                    ,
                    gcc.segment2,
                    substr(gl_flexfields_pkg.get_description_sql(gcc.chart_of_accounts_id, 2, gcc.segment2), 1, 300) segment2_desc
                    ,
                    NULL,
                    0 opening,
                    0 period_net,
                    0 closing,
                    NULL,
                    NULL
                FROM
                    (
                        SELECT
                            g1.segment1,
                            g2.segment2,
                            nvl(g1.chart_of_accounts_id, g2.chart_of_accounts_id) chart_of_accounts_id
                        FROM
                            (
                                SELECT DISTINCT
                                    segment1,
                                    chart_of_accounts_id
                                FROM
                                    gl_code_combinations
                            ) g1,
                            (
                                SELECT DISTINCT
                                    segment2,
                                    chart_of_accounts_id
                                FROM
                                    gl_code_combinations
                            ) g2
                    ) gcc
                WHERE
                    1 = 1
--                         AND (gcc.segment2 IN (:P_F_SEG) OR 'All' IN (:P_F_SEG || 'All'))
--                         AND (gcc.segment2 IN (:P_T_SEG) OR 'All' IN (:P_T_SEG || 'All'))
                    AND gcc.segment2 >= nvl(:p_f_seg, gcc.segment2)
                    AND gcc.segment2 <= nvl(:p_t_seg, gcc.segment2)
                    AND ( gcc.segment1 IN (
                        :p_f_ent
                    )
                          OR 'All' IN (
                        :p_f_ent || 'All'
                    ) )
--                         AND (gcc.segment1 IN (:P_T_ENT) OR 'All' IN (:P_T_ENT || 'All'))
                    AND ( gcc.segment2 IN (
                        :p_m_acc
                    )
                          OR 'All' IN (
                        :p_m_acc || 'All'
                    ) )
                GROUP BY
                    gcc.segment2,
                    substr(gl_flexfields_pkg.get_description_sql(gcc.chart_of_accounts_id, 2, gcc.segment2), 1, 300),
                    substr(gl_flexfields_pkg.get_description_sql(gcc.chart_of_accounts_id, 1, gcc.segment1), 1, 300),
                    gcc.segment1
            ) xx
        GROUP BY
            segment2,
            segment2_desc,
            segment1,
            segment1_desc
    ) yy
WHERE
    1 = 1
    AND upper(segment1_desc) NOT LIKE '%FOUNDATION%'
    AND EXISTS (
        SELECT
            1
        FROM
            fnd_lookup_values
        WHERE
            lookup_type = 'CRISIL_CONSOL_MAPPING'
            AND description = :p_consol_ledger
            AND tag = yy.segment1
    )
ORDER BY
    7,
    6
==================================================================================================
-----------------------Customer and Supplier Netting Settlement Data Model---------------------------------------------------------------
--Q_LE

SELECT  XR.registered_name      LE_LEGAL_ENITY_NAME
           ,XR.registration_number      LE_TAXPAYER_ID
           ,FT.territory_short_name LE_COUNTRY
             ,HL.country                        LE_COUNTRY_CODE
             ,HL.address1       LE_ADDRESS_LINE_1
           ,HL.address2         LE_ADDRESS_LINE_2
           ,HL.address3         LE_ADDRESS_LINE_3
           ,HL.city     LE_CITY
           ,HL.postal_code      LE_POSTAL_CODE
             ,HP.party_id               LE_PARTY_ID
           ,HL.COUNTY                           LE_PROVINCE
           ,ZPTP.rep_registration_number        LE_VAT_REG_NUM
        FROM   XLE_REGISTRATIONS XR,
                   XLE_ENTITY_PROFILES XEP,
                 HZ_LOCATIONS HL,
                 HZ_PARTIES HP,
                   FND_TERRITORIES_VL FT,
                 ZX_PARTY_TAX_PROFILE ZPTP,
                 XLE_ETB_PROFILES XETPB
         WHERE   XR.source_id          =  XEP.legal_entity_id
          AND    XR.source_table       = 'XLE_ENTITY_PROFILES'
          AND    XEP.legal_entity_id   = :P_LEGAL_ENTITY
          AND    XR.location_id        =  HL.location_id
          AND    HL.country            =  FT.territory_code
          AND    XEP.party_id          =  HP.party_id
          AND    ZPTP.party_type_code   = 'LEGAL_ESTABLISHMENT'
          AND    XETPB.party_id        = ZPTP.party_id
          AND    XETPB.legal_entity_id = XEP.legal_entity_id
          AND    XETPB.main_establishment_flag = 'Y'
          AND    XETPB.main_effective_to is NULL  --bug 17816892
          AND    XR.identifying_flag   = 'Y'
          AND HL.INTERNAL_FLAG = 'Y'
		  
--Q_HEADER
select agr.AGREEMENT_NAME "Netting Agreement Name",
       to_char(agr.AGREEMENT_START_DATE,'YYYY-MM-DD') "Start Date",
       to_char(agr.AGREEMENT_END_DATE,'YYYY-MM-DD') "End Date",
       agr.PARTNER_REFERENCE "Trading Partner Reference",
       bank.BANK_ACCOUNT_NAME "Netting Bank Account Name",
       select_past_due.MEANING "Select Only Past Due",
       agr.DAYS_PAST_DUE "Days Past Due",
       net_order.MEANING "Netting Order Rule",
       net_bal.MEANING "Netting Balance Rule",
       net_curr.MEANING "Netting Currency Rule",
       grp_code.MEANING "Netting Grouping",
       NET_CURRENCY_CODE "CURRENCY_CODE",
       agr.allow_discount_flag,
       bat.exchange_rate,
       glc.USER_CONVERSION_TYPE "Exchange Rate Type",
       bat.BATCH_NUMBER "Settlement Number",
       bat.batch_id,
       bat.BATCH_NAME "Settlement Name",
       NVL(bat.PAYMENT_CURRENCY_CODE,bat.BATCH_CURRENCY_CODE) "Settlement Currency",
       to_char(bat.SETTLEMENT_DATE,'YYYY-MM-DD') "Settlement Date",
       to_char(bat.TRANSACTION_DUE_DATE,'YYYY-MM-DD') "Transaction Due Date",
       to_char(bat.TRANSACTION_START_DATE,'YYYY-MM-DD') "Transaction Start Date",
       to_char(bat.TRANSACTION_END_DATE,'YYYY-MM-DD') "Transaction End Date",
       to_char(bat.CONVERSION_RATE_DATE,'YYYY-MM-DD') "Conversion Rate Date",
       bat.TOTAL_NETTED_AMOUNT "Final Netting Amount",
       bat.batch_status_code,
       bat_status.meaning "Settlement Status",
       pay_group.displayed_field "Pay Group",
       agr.INCLUDED_PAY_GROUPS_CODE "Included Pay Groups Code"
from   JE_NET_AGREEMENTS agr,
       JE_NET_BATCHES bat,
       JE_NET_INV_PAY_GROUPS pay,
       CE_BANK_ACCOUNTS bank,
       ap_lookup_codes pay_group,
       FND_LOOKUPS net_order,
       FND_LOOKUPS net_bal,
       FND_LOOKUPS net_curr,
       FND_LOOKUPS select_past_due,
       FND_LOOKUPS grp_code,
       FND_LOOKUPS bat_status,
       GL_DAILY_CONVERSION_TYPES glc
where bat.legal_entity_id = :P_LEGAL_ENTITY 
and    bat.batch_id = :P_BATCH_ID  
and    agr.agreement_id = bat.agreement_id
and    agr.bank_account_id = bank.bank_account_id
and    agr.agreement_id = pay.agreement_id (+)
and    NVL(pay.PAY_GROUP_LOOKUP_CODE,'NULL') = pay_group.lookup_code (+)
and    pay_group.LOOKUP_TYPE (+) = 'PAY GROUP'
and    agr.net_order_rule_code = net_order.lookup_code
and    net_order.lookup_type = 'ORA_JE_NET_ORDER_RULE'
and    agr.net_balance_rule_code = net_bal.lookup_code
and    net_bal.lookup_type = 'ORA_JE_NET_BALANCE_RULE'
and    agr.net_currency_rule_code = net_curr.lookup_code
and    net_curr.lookup_type = 'ORA_JE_NET_CURRENCY_RULE'
and    agr.sel_rec_past_due_txns_flag = select_past_due.lookup_code
and    select_past_due.lookup_type = 'YES_NO'
and    bat_status.lookup_type = 'ORA_JE_NET_BATCH_STATUS'
and    bat.batch_status_code = bat_status.lookup_code
and    grp_code.lookup_type (+) = 'ORA_JE_NET_GROUP'
and    bat.netting_group_code = grp_code.lookup_code (+)
and    bat.EXCHANGE_RATE_TYPE = glc.CONVERSION_TYPE

--Q_CUSTOMERS
SELECT  
                FNB.BATCH_ID,
                HCA.CUST_ACCOUNT_ID AS CUST_ACCOUNT_ID,
                HCSU.SITE_USE_ID,
                HP.PARTY_NAME AS CUSTOMER_NAME,
                HCA.ACCOUNT_NUMBER AS CUSTOMER_NUMBER,
                HCSU.LOCATION AS CUSTOMER_LOCATION,
                HP.JGZZ_FISCAL_CODE AS CUST_TAXPAYER_ID,
                HR.NAME AS BUSINESS_UNIT,
                RCT.TRX_NUMBER,
                RCTT.NAME AS TRX_TYPE,
	        to_char(RCT.TRX_DATE,'YYYY-MM-DD') AS TRX_DATE,
	        sum(APS.AMOUNT_DUE_ORIGINAL) AS TRX_AMOUNT,
	        FNAR.TXN_CURRENCY_OPEN_AMOUNT AS TXN_CURR_OPEN_AMOUNT,
                APS.INVOICE_CURRENCY_CODE AS TRX_CURRENCY,
                FNAR.OPEN_AMOUNT AS TRX_RECKONING_OPEN_AMOUNT,
                NETTED_AMOUNT as FINAL_NETTING_AMOUNT,
                FNAR.APPLIED_DISCOUNT,
                FNAR.DISCOUNTED_OPEN_AMOUNT,
                ZR.REGISTRATION_NUMBER as THIRD_PARTY_REG_NUM,
                nvl(FNAR.OPEN_AMOUNT - NETTED_AMOUNT - nvl(FNAR.APPLIED_DISCOUNT,0),0) AS OPEN_AMT_AFTER_NETTING,
                FNAR.AR_TXN_RANK
	 FROM  JE_NET_AR_TXNS FNAR
	      ,JE_NET_BATCHES FNB
              ,RA_CUSTOMER_TRX_ALL RCT
	      ,RA_CUST_TRX_TYPES_ALL RCTT
              ,AR_PAYMENT_SCHEDULES_ALL APS
              ,HZ_CUST_ACCOUNTS HCA
              ,HZ_PARTIES HP
              ,HZ_CUST_SITE_USES_ALL HCSU
              ,HR_ORGANIZATION_UNITS HR
              ,ZX_REGISTRATIONS ZR
	 WHERE   FNB.LEGAL_ENTITY_ID = :P_LEGAL_ENTITY  
         AND    FNB.BATCH_ID = :P_BATCH_ID
         AND     FNAR.BATCH_ID = FNB.BATCH_ID
	 AND    FNAR.CUSTOMER_TRX_ID = RCT.CUSTOMER_TRX_ID
	 AND    RCTT.CUST_TRX_TYPE_SEQ_ID = RCT.CUST_TRX_TYPE_SEQ_ID
	 AND    APS.CUSTOMER_TRX_ID = RCT.CUSTOMER_TRX_ID
	 AND    HCA.CUST_ACCOUNT_ID = RCT.BILL_TO_CUSTOMER_ID
	 AND    HP.PARTY_ID = HCA.PARTY_ID
	 AND    HCSU.SITE_USE_ID = RCT.BILL_TO_SITE_USE_ID
         AND    HR.ORGANIZATION_ID = RCT.ORG_ID
         AND    rct.THIRD_PTY_REG_ID = ZR.registration_id (+)
         GROUP BY FNB.BATCH_ID,
         HCA.CUST_ACCOUNT_ID,
         HCSU.SITE_USE_ID,
         HP.PARTY_NAME,
         HCA.ACCOUNT_NUMBER,
         HCSU.LOCATION,
         HP.JGZZ_FISCAL_CODE,
         HR.NAME,
         RCT.TRX_NUMBER,
         RCTT.NAME,
         to_char(RCT.TRX_DATE,'YYYY-MM-DD'),
         FNAR.TXN_CURRENCY_OPEN_AMOUNT,
         APS.INVOICE_CURRENCY_CODE,
         FNAR.OPEN_AMOUNT,
         NETTED_AMOUNT,
         FNAR.APPLIED_DISCOUNT,
         FNAR.DISCOUNTED_OPEN_AMOUNT,
         ZR.REGISTRATION_NUMBER,
         FNAR.OPEN_AMOUNT - NETTED_AMOUNT,
         FNAR.AR_TXN_RANK
ORDER BY FNB.BATCH_ID, HCA.ACCOUNT_NUMBER, HCSU.SITE_USE_ID, FNAR.AR_TXN_RANK

--Q_SUPPLIERS
WITH Q_SUPPLIERS AS (     
   SELECT   DISTINCT FNB.BATCH_ID AS BATCH_ID,
            PV.VENDOR_ID AS SUPPLIER_ID,
            PVS.VENDOR_SITE_ID AS SITE_ID,
            HP.PARTY_NAME AS SUPPLIER_NAME,
            PV.SEGMENT1 AS SUPPLIER_NUM,
            PVS.VENDOR_SITE_CODE AS "SITE_CODE",
            PII.INCOME_TAX_ID AS SUPPLIER_TAXPAYER_ID,
            HR.NAME BUSINESS_UNIT
    FROM  JE_NET_AP_INVS FNAP
          ,JE_NET_BATCHES FNB
          ,AP_INVOICES_ALL API
          ,AP_LOOKUP_CODES ALC
          ,POZ_SUPPLIERS PV
          ,POZ_SUPPLIERS_PII PII
          ,HZ_PARTIES HP
          ,POZ_SUPPLIER_SITES_V PVS
          ,HR_ORGANIZATION_UNITS HR
    WHERE  FNB.LEGAL_ENTITY_ID = :P_LEGAL_ENTITY
    AND    FNB.BATCH_ID = :P_BATCH_ID
    AND    FNAP.BATCH_ID = FNB.BATCH_ID
    AND    FNAP.INVOICE_ID = API.INVOICE_ID
    AND    ALC.LOOKUP_CODE = API.INVOICE_TYPE_LOOKUP_CODE
    AND    ALC.LOOKUP_TYPE = 'INVOICE TYPE'
    AND    PV.VENDOR_ID = API.VENDOR_ID
    AND    PII.VENDOR_ID = API.VENDOR_ID
    AND    PV.PARTY_ID = HP.PARTY_ID
    AND    PVS.VENDOR_SITE_ID = API.VENDOR_SITE_ID
    AND	   HR.ORGANIZATION_ID = API.ORG_ID
    ORDER BY HP.PARTY_NAME,
             PVS.VENDOR_SITE_CODE
    ),
Q_SUPPLIER_TXNS AS (
       SELECT 
	            FNB.BATCH_ID, 
              PV.VENDOR_ID AS SUPPLIER_ID,
              PVS.VENDOR_SITE_ID AS SITE_ID,
              API.INVOICE_NUM,
	            ALC.DISPLAYED_FIELD AS INVOICE_TYPE,
	            to_char(API.INVOICE_DATE,'YYYY-MM-DD') AS INVOICE_DATE,
	            API.INVOICE_AMOUNT,
	            FNAP.INV_CURRENCY_OPEN_AMOUNT AS INVOICE_CURRENCY_OPEN_AMOUNT,
                    FNAP.APPLIED_DISCOUNT,
                    FNAP.DISCOUNTED_OPEN_AMOUNT,
	            API.INVOICE_CURRENCY_CODE AS INVOICE_CURRENCY,
	            FNAP.OPEN_AMOUNT AS INV_RECKONING_OPEN_AMOUNT,
	            NVL(FNB.PAYMENT_CURRENCY_CODE,FNB.BATCH_CURRENCY_CODE) AS SETTLEMENT_CURRENCY,
                    FNAP.NETTED_AMOUNT AS FINAL_NETTING_AMOUNT,
              ZR.REGISTRATION_NUMBER as THIRD_PARTY_REG_NUM,
              FNAP.AP_TXN_RANK
	     FROM  JE_NET_AP_INVS FNAP,
	           JE_NET_BATCHES FNB,
	           AP_INVOICES_ALL API,
	           AP_LOOKUP_CODES ALC,
	           POZ_SUPPLIERS PV,
	           POZ_SUPPLIER_SITES_ALL_M PVS,
             ZX_REGISTRATIONS ZR
	     WHERE  FNAP.INVOICE_ID = API.INVOICE_ID
	     AND    FNAP.BATCH_ID = FNB.BATCH_ID
	     AND    ALC.LOOKUP_CODE = API.INVOICE_TYPE_LOOKUP_CODE
	     AND    ALC.LOOKUP_TYPE = 'INVOICE TYPE'
	     AND    PV.VENDOR_ID = API.VENDOR_ID
	     AND    PVS.VENDOR_SITE_ID = API.VENDOR_SITE_ID
            AND    API.third_party_registration_id = ZR.registration_id (+)
	    ORDER BY
	             API.INVOICE_NUM
    )                          
    SELECT QS.BATCH_ID, 
           QS.SUPPLIER_ID, 
           QS.SITE_ID, 
           QS.SUPPLIER_NAME, 
           QS.SUPPLIER_NUM, 
           QS.SITE_CODE, 
           QS.SUPPLIER_TAXPAYER_ID, 
           Qs.BUSINESS_UNIT,
           QT.INVOICE_NUM, 
           QT.INVOICE_TYPE, 
           QT.INVOICE_DATE, 
           QT.INVOICE_AMOUNT, 
           QT.INVOICE_CURRENCY_OPEN_AMOUNT, 
           QT.INVOICE_CURRENCY, 
           QT.INV_RECKONING_OPEN_AMOUNT, 
           QT.FINAL_NETTING_AMOUNT,
           QT.APPLIED_DISCOUNT,
           QT.DISCOUNTED_OPEN_AMOUNT,
           QT.THIRD_PARTY_REG_NUM,
           nvl(QT.INV_RECKONING_OPEN_AMOUNT - QT.FINAL_NETTING_AMOUNT - nvl(QT.APPLIED_DISCOUNT,0),0) as OPEN_AMT_AFTER_NETTING,
           QT.AP_TXN_RANK
    FROM Q_SUPPLIERS QS,
              Q_SUPPLIER_TXNS QT
    WHERE QS.BATCH_ID = QT.BATCH_ID
       AND QS.SUPPLIER_ID = QT.SUPPLIER_ID
       AND QS.SITE_ID = QT.SITE_ID
ORDER BY  QS.BATCH_ID, 
           QS.SUPPLIER_ID, QS.SITE_ID, QT.AP_TXN_RANK
=====================================================================================================
-------------------------------------------------Customer and Supplier Netting Settlement Letters Data Model----------------------------------------
--Q_LE
SELECT  XR.registered_name      LE_LEGAL_ENITY_NAME
           ,XR.registration_number      LE_TAXPAYER_ID
           ,FT.territory_short_name LE_COUNTRY
             ,HL.country                        LE_COUNTRY_CODE
             ,HL.address1       LE_ADDRESS_LINE_1
           ,HL.address2         LE_ADDRESS_LINE_2
           ,HL.address3         LE_ADDRESS_LINE_3
           ,HL.city     LE_CITY
           ,HL.postal_code      LE_POSTAL_CODE
             ,HP.party_id               LE_PARTY_ID
           ,HL.COUNTY                           LE_PROVINCE
           ,ZPTP.rep_registration_number        LE_VAT_REG_NUM
        FROM   XLE_REGISTRATIONS XR,
                   XLE_ENTITY_PROFILES XEP,
                 HZ_LOCATIONS HL,
                 HZ_PARTIES HP,
                   FND_TERRITORIES_VL FT,
                 ZX_PARTY_TAX_PROFILE ZPTP,
                 XLE_ETB_PROFILES XETPB
         WHERE   XR.source_id          =  XEP.legal_entity_id
          AND    XR.source_table       = 'XLE_ENTITY_PROFILES'
          AND    XEP.legal_entity_id   = :P_LEGAL_ENTITY
          AND    XR.location_id        =  HL.location_id
          AND    HL.country            =  FT.territory_code
          AND    XEP.party_id          =  HP.party_id
          AND    ZPTP.party_type_code   = 'LEGAL_ESTABLISHMENT'
          AND    XETPB.party_id        = ZPTP.party_id
          AND    XETPB.legal_entity_id = XEP.legal_entity_id
          AND    XETPB.main_establishment_flag = 'Y'
          AND    XETPB.main_effective_to is NULL  --bug 17816892
          AND    XR.identifying_flag   = 'Y'
          AND HL.INTERNAL_FLAG = 'Y'
--Q_HEADER
select agr.AGREEMENT_NAME "Netting Agreement Name",
       to_char(agr.AGREEMENT_START_DATE,'YYYY-MM-DD') "Start Date",
       to_char(agr.AGREEMENT_END_DATE,'YYYY-MM-DD') "End Date",
       agr.PARTNER_REFERENCE "Trading Partner Reference",
       bank.BANK_ACCOUNT_NAME "Netting Bank Account Name",
       select_past_due.MEANING "Select Only Past Due",
       agr.DAYS_PAST_DUE "Days Past Due",
       net_order.MEANING "Netting Order Rule",
       net_bal.MEANING "Netting Balance Rule",
       net_curr.MEANING "Netting Currency Rule",
       grp_code.MEANING "Netting Grouping",
       NET_CURRENCY_CODE "CURRENCY_CODE",
       agr.allow_discount_flag,
       bat.exchange_rate,
       glc.USER_CONVERSION_TYPE "Exchange Rate Type",
       bat.BATCH_NUMBER "Settlement Number",
       bat.batch_id,
       bat.BATCH_NAME "Settlement Name",
       bat.BATCH_CURRENCY_CODE "Settlement Currency",
       to_char(bat.SETTLEMENT_DATE,'YYYY-MM-DD') "Settlement Date",
       to_char(bat.TRANSACTION_DUE_DATE,'YYYY-MM-DD') "Transaction Due Date",
       bat.TOTAL_NETTED_AMOUNT "Final Netting Amount",
       bat.batch_status_code,
       bat_status.meaning "Settlement Status",
       JE_REP_NETTING.CP_ATTN attn_to,
       JE_REP_NETTING.get_letter_address(bat.batch_id) tp_address,
       JE_REP_NETTING.CP_PARTY_NAME party_name,
       JE_REP_NETTING.CP_TRANSLATED_NAME translated_customer_name,
       pay_group.displayed_field "Pay Group"
from   JE_NET_AGREEMENTS agr,
       JE_NET_BATCHES bat,
       JE_NET_INV_PAY_GROUPS pay,
       CE_BANK_ACCOUNTS bank,
       ap_lookup_codes pay_group,
       FND_LOOKUPS net_order,
       FND_LOOKUPS net_bal,
       FND_LOOKUPS net_curr,
       FND_LOOKUPS select_past_due,
       FND_LOOKUPS grp_code,
       FND_LOOKUPS bat_status,
       GL_DAILY_CONVERSION_TYPES glc
where bat.legal_entity_id = :P_LEGAL_ENTITY 
and    bat.batch_name = DECODE(:P_SETTLEMENT_NAME,'000',bat.batch_name,:P_SETTLEMENT_NAME)
and    bat.batch_id = NVL(:P_BATCH_ID,  bat.batch_id)
and    to_char(NVL(bat.response_date,sysdate),'DD-MM-YYYY HH:MI:SS') = NVL(:P_SETTLING_TIME,to_char(nvl(bat.response_date,sysdate),'DD-MM-YYYY HH:MI:SS'))
and    bat.BATCH_STATUS_CODE IN ('JE_COMPLETE', 'JE_REVERSED')
and    agr.agreement_id = bat.agreement_id
and   NVL(agr.LETTER_ENABLED_FLAG,'N') = 'Y'
and    agr.bank_account_id = bank.bank_account_id
and    agr.agreement_id = pay.agreement_id (+)
and    NVL(pay.PAY_GROUP_LOOKUP_CODE,'NULL') = pay_group.lookup_code (+)
and    pay_group.LOOKUP_TYPE (+) = 'PAY GROUP'
and    agr.net_order_rule_code = net_order.lookup_code
and    net_order.lookup_type = 'ORA_JE_NET_ORDER_RULE'
and    agr.net_balance_rule_code = net_bal.lookup_code
and    net_bal.lookup_type = 'ORA_JE_NET_BALANCE_RULE'
and    agr.net_currency_rule_code = net_curr.lookup_code
and    net_curr.lookup_type = 'ORA_JE_NET_CURRENCY_RULE'
and    agr.sel_rec_past_due_txns_flag = select_past_due.lookup_code
and    select_past_due.lookup_type = 'YES_NO'
and    bat_status.lookup_type = 'ORA_JE_NET_BATCH_STATUS'
and    bat.batch_status_code = bat_status.lookup_code
and    grp_code.lookup_type (+) = 'ORA_JE_NET_GROUP'
and    bat.netting_group_code = grp_code.lookup_code (+)
and    bat.EXCHANGE_RATE_TYPE = glc.CONVERSION_TYPE
--Q_CUSTOMERS
SELECT  
                FNB.BATCH_ID,
                HCA.CUST_ACCOUNT_ID AS CUST_ACCOUNT_ID,
                HCSU.SITE_USE_ID,
                HP.PARTY_NAME AS CUSTOMER_NAME,
                HCA.ACCOUNT_NUMBER AS CUSTOMER_NUMBER,
                HCSU.LOCATION AS CUSTOMER_LOCATION,
                HP.JGZZ_FISCAL_CODE AS CUST_TAXPAYER_ID,
                RCT.TRX_NUMBER,
                RCTT.NAME AS TRX_TYPE,
	        to_char(RCT.TRX_DATE,'YYYY-MM-DD') AS TRX_DATE,
	        -- APS.AMOUNT_DUE_ORIGINAL AS TRX_AMOUNT,
                sum(APS.AMOUNT_DUE_ORIGINAL) AS TRX_AMOUNT,
	        FNAR.TXN_CURRENCY_OPEN_AMOUNT AS TXN_CURR_OPEN_AMOUNT,
                FNAR.TXN_CURRENCY_NET_AMOUNT,
                APS.INVOICE_CURRENCY_CODE AS TRX_CURRENCY,
                FNAR.OPEN_AMOUNT AS TRX_RECKONING_OPEN_AMOUNT,
                NETTED_AMOUNT as FINAL_NETTING_AMOUNT,
                FNAR.APPLIED_DISCOUNT,
                FNAR.DISCOUNTED_OPEN_AMOUNT,
                ZR.REGISTRATION_NUMBER as THIRD_PARTY_REG_NUM,
                nvl(FNAR.OPEN_AMOUNT - NETTED_AMOUNT - nvl(FNAR.APPLIED_DISCOUNT,0),0) AS OPEN_AMT_AFTER_NETTING,
                FNAR.AR_TXN_RANK
	 FROM  JE_NET_AR_TXNS FNAR
	      ,JE_NET_BATCHES FNB
              ,RA_CUSTOMER_TRX_ALL RCT
	      ,RA_CUST_TRX_TYPES_ALL RCTT
              ,AR_PAYMENT_SCHEDULES_ALL APS
              ,HZ_CUST_ACCOUNTS HCA
              ,HZ_PARTIES HP
              ,HZ_CUST_SITE_USES_ALL HCSU
              ,ZX_REGISTRATIONS ZR
	 WHERE  FNB.LEGAL_ENTITY_ID = :P_LEGAL_ENTITY  
         AND    FNAR.BATCH_ID = FNB.BATCH_ID
         AND    FNB.batch_name =DECODE(:P_SETTLEMENT_NAME,'000',FNB.batch_name,:P_SETTLEMENT_NAME)
         AND    FNB.BATCH_ID = nvl(:P_BATCH_ID,FNB.BATCH_ID)
and    to_char(NVL(fnb.response_date,sysdate),'DD-MM-YYYY HH:MI:SS') = NVL(:P_SETTLING_TIME,to_char(nvl(fnb.response_date,sysdate),'DD-MM-YYYY HH:MI:SS'))
         AND    FNB.BATCH_STATUS_CODE IN ('JE_COMPLETE', 'JE_REVERSED')
	 AND    FNAR.CUSTOMER_TRX_ID = RCT.CUSTOMER_TRX_ID
	 AND    RCTT.CUST_TRX_TYPE_SEQ_ID = RCT.CUST_TRX_TYPE_SEQ_ID
	 AND    APS.CUSTOMER_TRX_ID = RCT.CUSTOMER_TRX_ID
	 AND    HCA.CUST_ACCOUNT_ID = RCT.BILL_TO_CUSTOMER_ID
	 AND    HP.PARTY_ID = HCA.PARTY_ID
	 AND    HCSU.SITE_USE_ID = RCT.BILL_TO_SITE_USE_ID
         AND    rct.THIRD_PTY_REG_ID = ZR.registration_id (+)
GROUP BY  FNB.BATCH_ID,
          HCA.CUST_ACCOUNT_ID,
          HCSU.SITE_USE_ID,
          HP.PARTY_NAME,
          HCA.ACCOUNT_NUMBER,
          HCSU.LOCATION,
          HP.JGZZ_FISCAL_CODE,
          RCT.TRX_NUMBER,
          RCTT.NAME,
	  to_char(RCT.TRX_DATE,'YYYY-MM-DD'),
	  FNAR.TXN_CURRENCY_OPEN_AMOUNT,
          FNAR.TXN_CURRENCY_NET_AMOUNT,
          APS.INVOICE_CURRENCY_CODE,
          FNAR.OPEN_AMOUNT,
          NETTED_AMOUNT,
          FNAR.APPLIED_DISCOUNT,
          FNAR.DISCOUNTED_OPEN_AMOUNT,
          ZR.REGISTRATION_NUMBER,
          FNAR.OPEN_AMOUNT - NETTED_AMOUNT,
          null,
          FNAR.AR_TXN_RANK 
ORDER BY FNB.BATCH_ID, HCA.ACCOUNT_NUMBER, HCSU.SITE_USE_ID, FNAR.AR_TXN_RANK
--Q_SUPPLIERS
WITH Q_SUPPLIERS AS (     
   SELECT   DISTINCT FNB.BATCH_ID AS BATCH_ID,
            PV.VENDOR_ID AS SUPPLIER_ID,
            PVS.VENDOR_SITE_ID AS SITE_ID,
            HP.PARTY_NAME AS SUPPLIER_NAME,
            PV.SEGMENT1 AS SUPPLIER_NUM,
            PVS.VENDOR_SITE_CODE AS "SITE_CODE",
            PII.INCOME_TAX_ID AS SUPPLIER_TAXPAYER_ID
    FROM  JE_NET_AP_INVS FNAP
          ,JE_NET_BATCHES FNB
          ,AP_INVOICES_ALL API
          ,AP_LOOKUP_CODES ALC
          ,POZ_SUPPLIERS PV
          ,POZ_SUPPLIERS_PII PII
          ,HZ_PARTIES HP
          ,POZ_SUPPLIER_SITES_V PVS
    WHERE  FNB.LEGAL_ENTITY_ID = :P_LEGAL_ENTITY
    AND    FNB.batch_name = DECODE(:P_SETTLEMENT_NAME,'000',FNB.batch_name,:P_SETTLEMENT_NAME)
    AND    FNB.BATCH_ID = nvl(:P_BATCH_ID,FNB.BATCH_ID)
and    to_char(NVL(fnb.response_date,sysdate),'DD-MM-YYYY HH:MI:SS') = NVL(:P_SETTLING_TIME,to_char(nvl(fnb.response_date,sysdate),'DD-MM-YYYY HH:MI:SS'))
    AND    FNB.BATCH_STATUS_CODE IN ('JE_COMPLETE', 'JE_REVERSED')
    AND    FNAP.BATCH_ID = FNB.BATCH_ID
    AND    FNAP.INVOICE_ID = API.INVOICE_ID
    AND    ALC.LOOKUP_CODE = API.INVOICE_TYPE_LOOKUP_CODE
    AND    ALC.LOOKUP_TYPE = 'INVOICE TYPE'
    AND    PV.VENDOR_ID = API.VENDOR_ID
    AND    PII.VENDOR_ID = API.VENDOR_ID
    AND    PV.PARTY_ID = HP.PARTY_ID
    AND    PVS.VENDOR_SITE_ID = API.VENDOR_SITE_ID
    ORDER BY HP.PARTY_NAME,
             PVS.VENDOR_SITE_CODE
    ),
Q_SUPPLIER_TXNS AS (
       SELECT 
	            FNB.BATCH_ID, 
              PV.VENDOR_ID AS SUPPLIER_ID,
              PVS.VENDOR_SITE_ID AS SITE_ID,
              API.INVOICE_NUM,
	            ALC.DISPLAYED_FIELD AS INVOICE_TYPE,
	            to_char(API.INVOICE_DATE,'YYYY-MM-DD') AS INVOICE_DATE,
	            API.INVOICE_AMOUNT,
	            FNAP.INV_CURRENCY_OPEN_AMOUNT AS INVOICE_CURRENCY_OPEN_AMOUNT,
                    FNAP.INV_CURRENCY_NET_AMOUNT, 
                    FNAP.APPLIED_DISCOUNT,
                    FNAP.DISCOUNTED_OPEN_AMOUNT,
	            API.INVOICE_CURRENCY_CODE AS INVOICE_CURRENCY,
	            FNAP.OPEN_AMOUNT AS INV_RECKONING_OPEN_AMOUNT,
	            FNB.BATCH_CURRENCY_CODE AS SETTLEMENT_CURRENCY,
                    FNAP.NETTED_AMOUNT AS FINAL_NETTING_AMOUNT,
              ZR.REGISTRATION_NUMBER as THIRD_PARTY_REG_NUM,
              FNAP.AP_TXN_RANK
	     FROM  JE_NET_AP_INVS FNAP,
	           JE_NET_BATCHES FNB,
	           AP_INVOICES_ALL API,
	           AP_LOOKUP_CODES ALC,
	      --     AP_PAYMENT_SCHEDULES_ALL APS,
	           POZ_SUPPLIERS PV,
	           POZ_SUPPLIER_SITES_ALL_M PVS,
             ZX_REGISTRATIONS ZR
	     WHERE  FNAP.INVOICE_ID = API.INVOICE_ID
             AND    FNB.batch_name = DECODE(:P_SETTLEMENT_NAME,'000',FNB.batch_name,:P_SETTLEMENT_NAME)
             AND    FNB.BATCH_ID = nvl(:P_BATCH_ID,FNB.BATCH_ID)
	     AND    FNAP.BATCH_ID = FNB.BATCH_ID
 and    to_char(NVL(fnb.response_date,sysdate),'DD-MM-YYYY HH:MI:SS') = NVL(:P_SETTLING_TIME,to_char(nvl(fnb.response_date,sysdate),'DD-MM-YYYY HH:MI:SS'))
             AND    FNB.BATCH_STATUS_CODE IN ('JE_COMPLETE', 'JE_REVERSED')
	     AND    ALC.LOOKUP_CODE = API.INVOICE_TYPE_LOOKUP_CODE
	     AND    ALC.LOOKUP_TYPE = 'INVOICE TYPE'
	     -- AND    APS.INVOICE_ID = API.INVOICE_ID
	     AND    PV.VENDOR_ID = API.VENDOR_ID
	     AND    PVS.VENDOR_SITE_ID = API.VENDOR_SITE_ID
            AND    API.third_party_registration_id = ZR.registration_id (+)
	    ORDER BY
	             API.INVOICE_NUM
    )                          
    SELECT QS.BATCH_ID, 
           QS.SUPPLIER_ID, 
           QS.SITE_ID, 
           QS.SUPPLIER_NAME, 
           QS.SUPPLIER_NUM, 
           QS.SITE_CODE, 
           QS.SUPPLIER_TAXPAYER_ID, 
           QT.INVOICE_NUM, 
           QT.INVOICE_TYPE, 
           QT.INVOICE_DATE, 
           QT.INVOICE_AMOUNT, 
           QT.INVOICE_CURRENCY_OPEN_AMOUNT, 
           QT.INV_CURRENCY_NET_AMOUNT,
           QT.INVOICE_CURRENCY, 
           QT.INV_RECKONING_OPEN_AMOUNT, 
           QT.FINAL_NETTING_AMOUNT,
           QT.APPLIED_DISCOUNT,
           QT.DISCOUNTED_OPEN_AMOUNT,
           QT.THIRD_PARTY_REG_NUM,
           nvl(QT.INV_RECKONING_OPEN_AMOUNT - QT.FINAL_NETTING_AMOUNT - nvl(QT.APPLIED_DISCOUNT,0),0) as OPEN_AMT_AFTER_NETTING,
           QT.AP_TXN_RANK
    FROM Q_SUPPLIERS QS,
              Q_SUPPLIER_TXNS QT
    WHERE QS.BATCH_ID = QT.BATCH_ID
       AND QS.SUPPLIER_ID = QT.SUPPLIER_ID
       AND QS.SITE_ID = QT.SITE_ID
ORDER BY  QS.BATCH_ID, 
           QS.SUPPLIER_ID, QS.SITE_ID, QT.AP_TXN_RANK
========================================================================================================
SELECT  sno,:P_AS_OF_DATE P_AS_ON_DATE,
             unit_code,
             party_name CUSTOMER_NAME,
             customer_number,
             customer_site,
             transaction_type,
             invoice_type,
             invoice_number,
             invoice_date,
             due_date,
             GL_DATE,
             invoice_amount,
             amount_received,
             Bal_Amount,
             INVOICE_CURRENCY_CODE,
             GL_ACCOUNT,
             receivable_acct,
             SUM(bucket_0) bucket_0,
             SUM(bucket_1) bucket_1,
             SUM(bucket_2) bucket_2,
             SUM(bucket_3) bucket_3,
             SUM(bucket_4) bucket_4,
             SUM(bucket_5) bucket_5,
             SUM(bucket_5) bucket_6,
             
             SUM(bucket_7) bucket_7,
             SUM(bucket_8) bucket_8, 
             SUM(bucket_9) bucket_9,
             SUM(bucket_10) bucket_10,
             SUM(bucket_11) bucket_11,
             SUM(bucket_12) bucket_12,
             SUM(bucket_13) bucket_13,
             SUM(bucket_14) bucket_14,
           
             SUM (bucket_0_i) bucket_0_i,
             SUM (bucket_1_i) bucket_1_i,
             SUM (bucket_2_i) bucket_2_i,
             SUM (bucket_3_i) bucket_3_i,
             SUM (bucket_4_i) bucket_4_i,
             SUM (bucket_5_i) bucket_5_i,
             SUM (bucket_6_i) bucket_6_i ,           
            (SELECT gl_flexfields_pkg.get_description_sql
                                     (chart_of_accounts_id,--- chart of account id
                                      1,----- Position of segment
                                      entity ---- Segment value
                                     )
            FROM gl_code_combinations
            WHERE 1=1
            AND ROWNUM=1) ENTITY,
            LINE_DESC,GL_code,
             entity1,cost_center, prj, corp_fun, loc, inter_com
             , fut1,fut2
        FROM  (
        SELECT  sno,                          
                    :p_org_name unit_code,
                    -- unit,
                     org_id,
                     party_id,
                     party_name,
                     customer_number,
                     customer_site,
                     party_type,
                     transaction_type,
                     invoice_date,
                     invoice_number,
                     invoice_amount,
                     amount_received,
                     CASE WHEN  invoice_type IN ('RECEIPT','CREDIT MEMO') THEN                      
                      (nvl(invoice_amount,0 )-   (nvl( amount_received,0)* -1) )                  
                     ELSE            
                     (nvl(invoice_amount,0 )-nvl( amount_received,0))                     
                      END     Bal_Amount,
                     
                     GL_DATE,
                     due_date,
                     invoice_type,
                     INVOICE_CURRENCY_CODE,
                     NVL (
                        (SELECT ABS (SUM (amount_applied)) * -1
                           FROM ar_receivable_applications_all AP,
                                AR_CASH_RECEIPTS_ALL AC,
                                HZ_CUST_ACCOUNTS HZCA
                          WHERE     AP.CASH_RECEIPT_ID = AC.CASH_RECEIPT_ID
                                AND AP.STATUS = 'UNAPP'
                                AND AC.pay_from_customer = hzca.cust_account_id
                                AND HZCA.PARTY_ID = B.PARTY_ID
                                AND TRUNC (gl_date) <= :p_as_of_date),
                        0)
                        UNAPP_AMT,
                     /* NVL (
                         (SELECT MAX (NAME)
                            FROM ra_customer_trx_all rct, ra_terms_tl rt
                           WHERE     rct.term_id = rt.term_id
                                 AND rct.customer_trx_id = b.customer_trx_id),
                         '-')
                         terms,*/
                     NVL (
                        (SELECT DISTINCT te.name
                           FROM HZ_CUSTOMER_PROFILES_F pr,
                                ra_terms te,
                                HZ_CUST_ACCOUNTS HZCA
                          WHERE     pr.cust_account_id = HZCA.cust_account_id
                                AND pr.STANDARD_TERMS = te.TERM_ID
                                AND pr.SITE_USE_ID IS NULL
                                AND te.END_DATE_ACTIVE IS NULL
                                AND pr.party_id = B.party_id
                                AND HZCA.PARTY_ID = B.PARTY_ID
                                AND HZCA.CUST_ACCOUNT_ID = B.BILL_TO_CUSTOMER_ID
                                AND ROWNUM = 1),
                        '-')
                        terms,
      NVL ( NVL ((select GCC.SEGMENT2
      FROM xla_transaction_entities xte,
           xla_ae_headers xah,
           xla_ae_lines xal,
           gl_code_combinations gcc,
           hr_operating_units mp
     WHERE 1 = 1
--       AND xte.LEDGER_ID =300000001782044
       AND xal.application_id = 222
       AND xte.ledger_id = xah.ledger_id
       AND xte.entity_id = xah.entity_id
       AND xte.application_id = xal.application_id
       AND xah.ae_header_id = xal.ae_header_id
       AND xal.CODE_COMBINATION_ID = gcc.code_combination_id
       AND NVL (xah.gl_transfer_status_code, 'N') = 'Y'
       AND xah.balance_type_code = 'A'
       AND mp.organization_id = security_id_int_1
       AND XAL.OVERRIDDEN_CODE_COMBINATION_ID IS NOT NULL
       and xal.ACCOUNTING_CLASS_CODE='RECEIVABLE'
       and xte.SOURCE_id_int_1=B.CUSTOMER_TRX_ID AND ROWNUM=1) ,(SELECT GCC1.SEGMENT2
                        FROM RA_CUST_TRX_LINE_GL_DIST_ALL RCD1,
                             GL_CODE_COMBINATIONS GCC1
                       WHERE     RCD1.CUSTOMER_TRX_ID = B.CUSTOMER_TRX_ID
                             AND RCD1.CODE_COMBINATION_ID =
                                    GCC1.CODE_COMBINATION_ID
                             AND RCD1.ACCOUNT_CLASS = 'REC' AND ROWNUM=1)), 
    (SELECT  gcc.segment2
    FROM ar_distributions_all ad, gl_code_combinations gcc
    WHERE 1=1
    AND SOURCE_TYPE = 'UNAPP'
    AND EXISTS (
    SELECT '1'
    FROM ar_receivable_applications_all a,
    ar_cash_receipts_all b1
    WHERE a.cash_receipt_id = b1.cash_receipt_id
    AND a.receivable_application_id = source_id
    AND b1.org_id = a.org_id
    AND A.cash_receipt_id =B.CUSTOMER_TRX_ID)
    AND ad.code_combination_id = gcc.code_combination_id AND ROWNUM=1))    GL_ACCOUNT,
    NVL ( (select GCC.SEGMENT2
      FROM xla_transaction_entities xte,
           xla_ae_headers xah,
           xla_ae_lines xal,
           gl_code_combinations gcc,
           hr_operating_units mp
     WHERE 1 = 1
--       AND xte.LEDGER_ID =300000001782044
       AND xal.application_id = 222
       AND xte.ledger_id = xah.ledger_id
       AND xte.entity_id = xah.entity_id
       AND xte.application_id = xal.application_id
       AND xah.ae_header_id = xal.ae_header_id
       AND xal.CODE_COMBINATION_ID = gcc.code_combination_id
       AND NVL (xah.gl_transfer_status_code, 'N') = 'Y'
       AND xah.balance_type_code = 'A'
       AND mp.organization_id = security_id_int_1
       AND XAL.OVERRIDDEN_CODE_COMBINATION_ID IS NOT NULL
       and xal.ACCOUNTING_CLASS_CODE='RECEIVABLE'
       AND NVL (GCC.ACCOUNT_TYPE,'#')= NVL('A','#')
       and xte.SOURCE_id_int_1=B.CUSTOMER_TRX_ID AND ROWNUM=1),receivable_acct  ) receivable_acct ,
                     NVL (not_due, 0) not_due,
                     NVL (bal_func_amt, 0) bal_func_amt,
                     NVL (bucket_0, 0) bucket_0,
                     NVL (bucket_1, 0) bucket_1,
                     NVL (bucket_2, 0) bucket_2,
                     NVL (bucket_3, 0) bucket_3,
                     NVL (bucket_4, 0) bucket_4,
                     NVL (bucket_5, 0) bucket_5,
                     NVL (bucket_6, 0) bucket_6,
                     
                     
                     NVL (bucket_7, 0) bucket_7,
                     NVL (bucket_8, 0) bucket_8,
                     NVL (bucket_9, 0) bucket_9,
                     NVL (bucket_10, 0) bucket_10,
                     NVL (bucket_11, 0) bucket_11,
                     NVL (bucket_12, 0) bucket_12,
                     NVL (bucket_13, 0) bucket_13,
                     NVL (bucket_14, 0) bucket_14,
                     
            
                     --NVL (bucket_7, 0) bucket_7,
                     NVL (bucket_0_i, 0) bucket_0_i,
                     NVL (bucket_1_i, 0) bucket_1_i,
                     NVL (bucket_2_i, 0) bucket_2_i,
                     NVL (bucket_3_i, 0) bucket_3_i,
                     NVL (bucket_4_i, 0) bucket_4_i,
                     NVL (bucket_5_i, 0) bucket_5_i,
                     NVL (bucket_6_i, 0) bucket_6_i                            --,
                -- NVL (bucket_7_i, 0) bucket_7_i
                ,entity,LINE_DESC,GL_code,
             entity1,cost_center, prj, corp_fun, loc, inter_com
             , fut1,fut2
                FROM ( 
                 
              SELECT '1' sno,
                               (SELECT segment1
                                  FROM gl_code_combinations
                                 WHERE code_combination_id = rlg.code_combination_id)
                                  unit,
                               rct.exchange_rate,
                               rct.org_id,
                               hzp.party_id party_id,
                               hzp.party_name,
                               hzp.party_type,
                               hzc.account_number customer_number,
                               rct.customer_trx_id,
                               (SELECT segment2
                                  FROM gl_code_combinations
                                 WHERE code_combination_id = rlg.code_combination_id)
                                  receivable_acct,
                               (select hps.PARTY_SITE_NUMBER from
                                hz_cust_site_uses_all hcs,hz_cust_acct_sites_all hcas,hz_party_sites hps
                                   WHERE hcs.site_use_id=rct.bill_to_site_use_id 
                                    and hps.party_id=hzp.party_id
                                    AND hcas.cust_acct_site_id = hcs.cust_acct_site_id
                                    AND hps.party_site_id = hcas.party_site_id)
                                  customer_site,
                               DECODE (rtt.TYPE,
                                       'INV', 'INVOICE',
                                       'DM', 'DEBIT MEMO',
                                       'DEP', 'DEPOSIT',
                                       'CB', 'CHARGEBACK')
                                  invoice_type,
                               rct.trx_number invoice_number,
                               rtt.NAME transaction_type,
                               NVL (due.trx_date, rct.trx_date) invoice_date,
                               rlg.gl_date gl_date,
                               NVL (due.due_date, rpsa.due_date) due_date,
                               rct.invoice_currency_code,
                               rpsa.amount_due_original invoice_amount,
                                 (NVL (
                                     (SELECT SUM (amount_applied)
                                        FROM ar_receivable_applications_all
                                       WHERE     status = 'APP'
                                             AND applied_customer_trx_id =
                                                    rct.customer_trx_id
                                             AND TRUNC (gl_date) <= :p_as_of_date),
                                     0))
                               - (NVL (
                                     (SELECT SUM (amount)
                                        FROM ar_adjustments_all
                                       WHERE     customer_trx_id =
                                                    rct.customer_trx_id
                                                     AND  NVL(STATUS,'#')<> NVL('R','#')
                                             AND TRUNC (gl_date) <= :p_as_of_date),
                                     0))
                                  amount_received,
                                 rpsa.amount_due_original
                               - (  NVL (
                                       (SELECT SUM (amount_applied)
                                          FROM ar_receivable_applications_all
                                         WHERE     status = 'APP'
                                               AND applied_customer_trx_id =
                                                      rct.customer_trx_id
                                               AND TRUNC (gl_date) <= :p_as_of_date),
                                       0)
                                  - NVL (
                                       (SELECT SUM (amount)
                                          FROM ar_adjustments_all
                                         WHERE     customer_trx_id =
                                                      rct.customer_trx_id
                                                       AND  NVL(STATUS,'#')<> NVL('R','#')
                                               AND TRUNC (gl_date) <= :p_as_of_date),
                                       0))
                                  balance_amount,
                               DECODE (
                                  rct.exchange_rate,
                                  NULL, (  rpsa.amount_due_original
                                         - (  NVL (
                                                 (SELECT SUM (amount_applied)
                                                    FROM ar_receivable_applications_all
                                                   WHERE     status = 'APP'
                                                         AND applied_customer_trx_id =
                                                                rct.customer_trx_id
                                                         AND TRUNC (gl_date) <=
                                                                :p_as_of_date),
                                                 0)
                                            - NVL (
                                                 (SELECT SUM (amount)
                                                    FROM ar_adjustments_all
                                                   WHERE     customer_trx_id =
                                                                rct.customer_trx_id
                                                                 AND  NVL(STATUS,'#')<> NVL('R','#')
                                                         AND TRUNC (gl_date) <=
                                                                :p_as_of_date),
                                                 0))),
                                  (  (  rpsa.amount_due_original
                                      - (  NVL (
                                              (SELECT SUM (amount_applied)
                                                 FROM ar_receivable_applications_all
                                                WHERE     status = 'APP'
                                                      AND applied_customer_trx_id =
                                                             rct.customer_trx_id
                                                      AND TRUNC (gl_date) <=
                                                             :p_as_of_date),
                                              0)
                                         - NVL (
                                              (SELECT SUM (amount)
                                                 FROM ar_adjustments_all
                                                WHERE     customer_trx_id =
                                                             rct.customer_trx_id
                                                              AND  NVL(STATUS,'#')<> NVL('R','#')
                                                      AND TRUNC (gl_date) <=
                                                             :p_as_of_date),
                                              0)))
                                   * rct.exchange_rate))
                                  bal_func_amt,
                               (SELECT TO_CHAR (
                                          (  (  rpsa.amount_due_original
                                              - (  NVL (
                                                      (SELECT SUM (amount_applied)
                                                         FROM ar_receivable_applications_all
                                                        WHERE     status = 'APP'
                                                              AND applied_customer_trx_id =
                                                                     rct.customer_trx_id
                                                              AND TRUNC (gl_date) <=
                                                                     :p_as_of_date),
                                                      0)
                                                 - NVL (
                                                      (SELECT SUM (amount)
                                                         FROM ar_adjustments_all
                                                        WHERE     customer_trx_id =
                                                                     rct.customer_trx_id
                                                                      AND  NVL(STATUS,'#')<> NVL('R','#')
                                                              AND TRUNC (gl_date) <=
                                                                     :p_as_of_date),
                                                      0)))
                                           * NVL (rpsa.exchange_rate, 1)),
                                          fnd_currency.get_format_mask (
                                             rct.invoice_currency_code,
                                             40))
                                  FROM DUAL
                                 WHERE CEIL (
                                            TO_DATE (
                                               TO_CHAR ( (:p_as_of_date),
                                                        'DD-MON-RR'),
                                               'DD-MON-RR')
                                          - NVL (due.due_date, rpsa.due_date)) < 0)
                                  not_due,
                               (SELECT TO_CHAR (
                                          (  (  rpsa.amount_due_original
                                              - (  NVL (
                                                      (SELECT SUM (amount_applied)
                                                         FROM ar_receivable_applications_all
                                                        WHERE     status = 'APP'
                                                              AND applied_customer_trx_id =
                                                                     rct.customer_trx_id
                                                              AND TRUNC (gl_date) <=
                                                                     :p_as_of_date),
                                                      0)
                                                 - NVL (
                                                      (SELECT SUM (amount)
                                                         FROM ar_adjustments_all
                                                        WHERE     customer_trx_id =
                                                                     rct.customer_trx_id
                                                                      AND  NVL(STATUS,'#')<> NVL('R','#')
                                                              AND TRUNC (gl_date) <=
                                                                     :p_as_of_date),
                                                      0)))
                                           * NVL (rpsa.exchange_rate, 1)),
                                          fnd_currency.get_format_mask (
                                             rct.invoice_currency_code,
                                             40))
                                  FROM DUAL
                                 WHERE CEIL (
                                            TO_DATE (
                                               TO_CHAR ( (:p_as_of_date),
                                                        'DD-MON-RR'),
                                               'DD-MON-RR')
                                          - NVL (due.due_date, rpsa.due_date)) =0)
                                  bucket_0,
                               (SELECT TO_CHAR (
                                          (  (  rpsa.amount_due_original
                                              - (  NVL (
                                                      (SELECT SUM (amount_applied)
                                                         FROM ar_receivable_applications_all
                                                        WHERE     status = 'APP'
                                                              AND applied_customer_trx_id =
                                                                     rct.customer_trx_id
                                                              AND TRUNC (gl_date) <=
                                                                     :p_as_of_date),
                                                      0)
                                                 - NVL (
                                                      (SELECT SUM (amount)
                                                         FROM ar_adjustments_all
                                                        WHERE     customer_trx_id =
                                                                     rct.customer_trx_id
                                                                      AND  NVL(STATUS,'#')<> NVL('R','#')
                                                              AND TRUNC (gl_date) <=
                                                                     :p_as_of_date),
                                                      0)))
                                           * NVL (rpsa.exchange_rate, 1)),
                                          fnd_currency.get_format_mask (
                                             rct.invoice_currency_code,
                                             40))
                                  FROM DUAL
                                 WHERE CEIL (
                                            TO_DATE (
                                               TO_CHAR ( (:p_as_of_date),
                                                        'DD-MON-RR'),
                                               'DD-MON-RR')
                                          - NVL (due.due_date, rpsa.due_date)) BETWEEN 1
                                                                                   AND 30)
                                  bucket_1,
                               (SELECT TO_CHAR (
                                          (  (  rpsa.amount_due_original
                                              - (  NVL (
                                                      (SELECT SUM (amount_applied)
                                                         FROM ar_receivable_applications_all
                                                        WHERE     status = 'APP'
                                                              AND applied_customer_trx_id =
                                                                     rct.customer_trx_id
                                                              AND TRUNC (gl_date) <=
                                                                     :p_as_of_date),
                                                      0)
                                                 - NVL (
                                                      (SELECT SUM (amount)
                                                         FROM ar_adjustments_all
                                                         WHERE     customer_trx_id =
                                                                     rct.customer_trx_id
                                                                      AND  NVL(STATUS,'#')<> NVL('R','#')
                                                              AND TRUNC (gl_date) <=
                                                                     :p_as_of_date),
                                                      0)))
                                           * NVL (rpsa.exchange_rate, 1)),
                                          fnd_currency.get_format_mask (
                                             rct.invoice_currency_code,
                                             40))
                                  FROM DUAL
                                 WHERE CEIL (
                                            TO_DATE (
                                               TO_CHAR ( (:p_as_of_date),
                                                        'DD-MON-RR'),
                                               'DD-MON-RR')
                                          - NVL (due.due_date, rpsa.due_date)) BETWEEN 31
                                                                                   AND 60)
                                  bucket_2,
                               (SELECT TO_CHAR (
                                          (  (  rpsa.amount_due_original
                                              - (  NVL (
                                                      (SELECT SUM (amount_applied)
                                                         FROM ar_receivable_applications_all
                                                        WHERE     status = 'APP'
                                                              AND applied_customer_trx_id =
                                                                     rct.customer_trx_id
                                                              AND TRUNC (gl_date) <=
                                                                     :p_as_of_date),
                                                      0)
                                                 - NVL (
                                                      (SELECT SUM (amount)
                                                         FROM ar_adjustments_all
                                                          WHERE     customer_trx_id =
                                                                     rct.customer_trx_id
                                                                     AND  NVL(STATUS,'#')<> NVL('R','#')
                                                              AND TRUNC (gl_date) <=
                                                                     :p_as_of_date),
                                                      0)))
                                           * NVL (rpsa.exchange_rate, 1)),
                                          fnd_currency.get_format_mask (
                                             rct.invoice_currency_code,
                                             40))
                                  FROM DUAL
                                 WHERE CEIL (
                                            TO_DATE (
                                               TO_CHAR ( (:p_as_of_date),
                                                        'DD-MON-RR'),
                                               'DD-MON-RR')
                                          - NVL (due.due_date, rpsa.due_date)) BETWEEN 61
                                                                                   AND 90)
                                  bucket_3,
                               (SELECT TO_CHAR (
                                          (  (  rpsa.amount_due_original
                                              - (  NVL (
                                                      (SELECT SUM (amount_applied)
                                                         FROM ar_receivable_applications_all
                                                        WHERE     status = 'APP'
                                                              AND applied_customer_trx_id =
                                                                     rct.customer_trx_id
                                                              AND TRUNC (gl_date) <=
                                                                     :p_as_of_date),
                                                      0)
                                                 - NVL (
                                                      (SELECT SUM (amount)
                                                         FROM ar_adjustments_all
                                                        WHERE     customer_trx_id =
                                                                     rct.customer_trx_id
                                                                      AND  NVL(STATUS,'#')<> NVL('R','#')
                                                              AND TRUNC (gl_date) <=
                                                                     :p_as_of_date),
                                                      0)))
                                           * NVL (rpsa.exchange_rate, 1)),
                                          fnd_currency.get_format_mask (
                                             rct.invoice_currency_code,
                                             40))
                                  FROM DUAL
                                 WHERE CEIL (
                                            TO_DATE (
                                               TO_CHAR ( (:p_as_of_date),
                                                        'DD-MON-RR'),
                                               'DD-MON-RR')
                                          - NVL (due.due_date, rpsa.due_date)) BETWEEN 91
                                                                                   AND 120)
                                  bucket_4,
                               (SELECT TO_CHAR (
                                          (  (  rpsa.amount_due_original
                                              - (  NVL (
                                                      (SELECT SUM (amount_applied)
                                                         FROM ar_receivable_applications_all
                                                        WHERE     status = 'APP'
                                                              AND applied_customer_trx_id =
                                                                     rct.customer_trx_id
                                                              AND TRUNC (gl_date) <=
                                                                     :p_as_of_date),
                                                      0)
                                                 - NVL (
                                                      (SELECT SUM (amount)
                                                         FROM ar_adjustments_all
                                                        WHERE     customer_trx_id =
                                                                     rct.customer_trx_id
                                                                      AND  NVL(STATUS,'#')<> NVL('R','#')
                                                              AND TRUNC (gl_date) <=
                                                                     :p_as_of_date),
                                                      0)))
                                           * NVL (rpsa.exchange_rate, 1)),
                                          fnd_currency.get_format_mask (
                                             rct.invoice_currency_code,
                                             40))
                                  FROM DUAL
                                 WHERE CEIL (
                                            TO_DATE (
                                               TO_CHAR ( (:p_as_of_date),
                                                        'DD-MON-RR'),
                                               'DD-MON-RR')
                                          - NVL (due.due_date, rpsa.due_date)) BETWEEN 121
                                                                                   AND 150)
                                  bucket_5,
                               (SELECT TO_CHAR (
                                          (  (  rpsa.amount_due_original
                                              - (  NVL (
                                                      (SELECT SUM (amount_applied)
                                                         FROM ar_receivable_applications_all
                                                        WHERE     status = 'APP'
                                                              AND applied_customer_trx_id =
                                                                     rct.customer_trx_id
                                                              AND TRUNC (gl_date) <=
                                                                     :p_as_of_date),
                                                      0)
                                                 - NVL (
                                                      (SELECT SUM (amount)
                                                         FROM ar_adjustments_all
                                                        WHERE     customer_trx_id =
                                                                     rct.customer_trx_id
                                                                      AND  NVL(STATUS,'#')<> NVL('R','#')
                                                              AND TRUNC (gl_date) <=
                                                                     :p_as_of_date),
                                                      0)))
                                           * NVL (rpsa.exchange_rate, 1)),
                                          fnd_currency.get_format_mask (
                                             rct.invoice_currency_code,
                                             40))
                                  FROM DUAL
                                 WHERE CEIL (
                                            TO_DATE (
                                               TO_CHAR ( (:p_as_of_date),
                                                        'DD-MON-RR'),
                                               'DD-MON-RR')
                                          - NVL (due.due_date, rpsa.due_date)) BETWEEN 151 AND 180)
                                  bucket_6,
                                 -----------------UPENDRA 
             (SELECT TO_CHAR (
                                          (  (  rpsa.amount_due_original
                                              - (  NVL (
                                                      (SELECT SUM (amount_applied)
                                                         FROM ar_receivable_applications_all
                                                        WHERE     status = 'APP'
                                                              AND applied_customer_trx_id =
                                                                     rct.customer_trx_id
                                                              AND TRUNC (gl_date) <=
                                                                     :p_as_of_date),
                                                      0)
                                                 - NVL (
                                                      (SELECT SUM (amount)
                                                         FROM ar_adjustments_all
                                                        WHERE     customer_trx_id =
                                                                     rct.customer_trx_id
                                                                      AND  NVL(STATUS,'#')<> NVL('R','#')
                                                              AND TRUNC (gl_date) <=
                                                                     :p_as_of_date),
                                                      0)))
                                           * NVL (rpsa.exchange_rate, 1)),
                                          fnd_currency.get_format_mask (
                                             rct.invoice_currency_code,
                                             40))
                                  FROM DUAL
                                 WHERE CEIL (
                                            TO_DATE (
                                               TO_CHAR ( (:p_as_of_date),
                                                        'DD-MON-RR'),
                                               'DD-MON-RR')
                                          - NVL (due.due_date, rpsa.due_date)) BETWEEN 181 AND 210)
                                  bucket_7,
                                   (SELECT TO_CHAR (
                                          (  (  rpsa.amount_due_original
                                              - (  NVL (
                                                      (SELECT SUM (amount_applied)
                                                         FROM ar_receivable_applications_all
                                                        WHERE     status = 'APP'
                                                              AND applied_customer_trx_id =
                                                                     rct.customer_trx_id
                                                              AND TRUNC (gl_date) <=
                                                                     :p_as_of_date),
                                                      0)
                                                 - NVL (
                                                      (SELECT SUM (amount)
                                                         FROM ar_adjustments_all
                                                        WHERE     customer_trx_id =
                                                                     rct.customer_trx_id
                                                                      AND  NVL(STATUS,'#')<> NVL('R','#')
                                                              AND TRUNC (gl_date) <=
                                                                     :p_as_of_date),
                                                      0)))
                                           * NVL (rpsa.exchange_rate, 1)),
                                          fnd_currency.get_format_mask (
                                             rct.invoice_currency_code,
                                             40))
                                  FROM DUAL
                                 WHERE CEIL (
                                            TO_DATE (
                                               TO_CHAR ( (:p_as_of_date),
                                                        'DD-MON-RR'),
                                               'DD-MON-RR')
                                          - NVL (due.due_date, rpsa.due_date)) BETWEEN 211 AND 240)
                                  bucket_8,
                                   (SELECT TO_CHAR (
                                          (  (  rpsa.amount_due_original
                                              - (  NVL (
                                                      (SELECT SUM (amount_applied)
                                                         FROM ar_receivable_applications_all
                                                        WHERE     status = 'APP'
                                                              AND applied_customer_trx_id =
                                                                     rct.customer_trx_id
                                                              AND TRUNC (gl_date) <=
                                                                     :p_as_of_date),
                                                      0)
                                                 - NVL (
                                                      (SELECT SUM (amount)
                                                         FROM ar_adjustments_all
                                                        WHERE     customer_trx_id =
                                                                     rct.customer_trx_id
                                                                      AND  NVL(STATUS,'#')<> NVL('R','#')
                                                              AND TRUNC (gl_date) <=
                                                                     :p_as_of_date),
                                                      0)))
                                           * NVL (rpsa.exchange_rate, 1)),
                                          fnd_currency.get_format_mask (
                                             rct.invoice_currency_code,
                                             40))
                                  FROM DUAL
                                 WHERE CEIL (
                                            TO_DATE (
                                               TO_CHAR ( (:p_as_of_date),
                                                        'DD-MON-RR'),
                                               'DD-MON-RR')
                                          - NVL (due.due_date, rpsa.due_date)) BETWEEN 241 AND 270)
                                  bucket_9,
                                   (SELECT TO_CHAR (
                                          (  (  rpsa.amount_due_original
                                              - (  NVL (
                                                      (SELECT SUM (amount_applied)
                                                         FROM ar_receivable_applications_all
                                                        WHERE     status = 'APP'
                                                              AND applied_customer_trx_id =
                                                                     rct.customer_trx_id
                                                              AND TRUNC (gl_date) <=
                                                                     :p_as_of_date),
                                                      0)
                                                 - NVL (
                                                      (SELECT SUM (amount)
                                                         FROM ar_adjustments_all
                                                        WHERE     customer_trx_id =
                                                                     rct.customer_trx_id
                                                                      AND  NVL(STATUS,'#')<> NVL('R','#')
                                                              AND TRUNC (gl_date) <=
                                                                     :p_as_of_date),
                                                      0)))
                                           * NVL (rpsa.exchange_rate, 1)),
                                          fnd_currency.get_format_mask (
                                             rct.invoice_currency_code,
                                             40))
                                  FROM DUAL
                                 WHERE CEIL (
                                            TO_DATE (
                                               TO_CHAR ( (:p_as_of_date),
                                                        'DD-MON-RR'),
                                               'DD-MON-RR')
                                          - NVL (due.due_date, rpsa.due_date)) BETWEEN 271 AND 300)
                                  bucket_10,
                                   (SELECT TO_CHAR (
                                          (  (  rpsa.amount_due_original
                                              - (  NVL (
                                                      (SELECT SUM (amount_applied)
                                                         FROM ar_receivable_applications_all
                                                        WHERE     status = 'APP'
                                                              AND applied_customer_trx_id =
                                                                     rct.customer_trx_id
                                                              AND TRUNC (gl_date) <=
                                                                     :p_as_of_date),
                                                      0)
                                                 - NVL (
                                                      (SELECT SUM (amount)
                                                         FROM ar_adjustments_all
                                                        WHERE     customer_trx_id =
                                                                     rct.customer_trx_id
                                                                      AND  NVL(STATUS,'#')<> NVL('R','#')
                                                              AND TRUNC (gl_date) <=
                                                                     :p_as_of_date),
                                                      0)))
                                           * NVL (rpsa.exchange_rate, 1)),
                                          fnd_currency.get_format_mask (
                                             rct.invoice_currency_code,
                                             40))
                                  FROM DUAL
                                 WHERE CEIL (
                                            TO_DATE (
                                               TO_CHAR ( (:p_as_of_date),
                                                        'DD-MON-RR'),
                                               'DD-MON-RR')
                                          - NVL (due.due_date, rpsa.due_date)) BETWEEN 301 AND 330)
                                  bucket_11,
                                   (SELECT TO_CHAR (
                                          (  (  rpsa.amount_due_original
                                              - (  NVL (
                                                      (SELECT SUM (amount_applied)
                                                         FROM ar_receivable_applications_all
                                                        WHERE     status = 'APP'
                                                              AND applied_customer_trx_id =
                                                                     rct.customer_trx_id
                                                              AND TRUNC (gl_date) <=
                                                                     :p_as_of_date),
                                                      0)
                                                 - NVL (
                                                      (SELECT SUM (amount)
                                                         FROM ar_adjustments_all
                                                        WHERE     customer_trx_id =
                                                                     rct.customer_trx_id
                                                                      AND  NVL(STATUS,'#')<> NVL('R','#')
                                                              AND TRUNC (gl_date) <=
                                                                     :p_as_of_date),
                                                      0)))
                                           * NVL (rpsa.exchange_rate, 1)),
                                          fnd_currency.get_format_mask (
                                             rct.invoice_currency_code,
                                             40))
                                  FROM DUAL
                                 WHERE CEIL (
                                            TO_DATE (
                                               TO_CHAR ( (:p_as_of_date),
                                                        'DD-MON-RR'),
                                               'DD-MON-RR')
                                          - NVL (due.due_date, rpsa.due_date)) BETWEEN 331 AND 365)
                                  bucket_12,
                                   (SELECT TO_CHAR (
                                          (  (  rpsa.amount_due_original
                                              - (  NVL (
                                                      (SELECT SUM (amount_applied)
                                                         FROM ar_receivable_applications_all
                                                        WHERE     status = 'APP'
                                                              AND applied_customer_trx_id =
                                                                     rct.customer_trx_id
                                                              AND TRUNC (gl_date) <=
                                                                     :p_as_of_date),
                                                      0)
                                                 - NVL (
                                                      (SELECT SUM (amount)
                                                         FROM ar_adjustments_all
                                                        WHERE     customer_trx_id =
                                                                     rct.customer_trx_id
                                                                      AND  NVL(STATUS,'#')<> NVL('R','#')
                                                              AND TRUNC (gl_date) <=
                                                                     :p_as_of_date),
                                                      0)))
                                           * NVL (rpsa.exchange_rate, 1)),
                                          fnd_currency.get_format_mask (
                                             rct.invoice_currency_code,
                                             40))
                                  FROM DUAL
                                 WHERE CEIL (
                                            TO_DATE (
                                               TO_CHAR ( (:p_as_of_date),
                                                        'DD-MON-RR'),
                                               'DD-MON-RR')
                                          - NVL (due.due_date, rpsa.due_date)) BETWEEN 366 AND 730)
                                  bucket_13,
                                   (SELECT TO_CHAR (
                                          (  (  rpsa.amount_due_original
                                              - (  NVL (
                                                      (SELECT SUM (amount_applied)
                                                         FROM ar_receivable_applications_all
                                                        WHERE     status = 'APP'
                                                              AND applied_customer_trx_id =
                                                                     rct.customer_trx_id
                                                              AND TRUNC (gl_date) <=
                                                                     :p_as_of_date),
                                                      0)
                                                 - NVL (
                                                      (SELECT SUM (amount)
                                                         FROM ar_adjustments_all
                                                        WHERE     customer_trx_id =
                                                                     rct.customer_trx_id
                                                                      AND  NVL(STATUS,'#')<> NVL('R','#')
                                                              AND TRUNC (gl_date) <=
                                                                     :p_as_of_date),
                                                      0)))
                                           * NVL (rpsa.exchange_rate, 1)),
                                          fnd_currency.get_format_mask (
                                             rct.invoice_currency_code,
                                             40))
                                  FROM DUAL
                                 WHERE CEIL (
                                            TO_DATE (
                                               TO_CHAR ( (:p_as_of_date),
                                                        'DD-MON-RR'),
                                               'DD-MON-RR')
                                          - NVL (due.due_date, rpsa.due_date)) >=731)
                                  bucket_14,
                                       
                                  
                         -----------------------------------------UPENDRA         
                               (SELECT TO_CHAR (
                                          (  (  rpsa.amount_due_original
                                              - (  NVL (
                                                      (SELECT SUM (amount_applied)
                                                         FROM ar_receivable_applications_all
                                                        WHERE     status = 'APP'
                                                              AND applied_customer_trx_id =
                                                                     rct.customer_trx_id
                                                              AND TRUNC (gl_date) <=
                                                                     :p_as_of_date),
                                                      0)
                                                 - NVL (
                                                      (SELECT SUM (amount)
                                                         FROM ar_adjustments_all
                                                        WHERE     customer_trx_id =
                                                                     rct.customer_trx_id
                                                                      AND  NVL(STATUS,'#')<> NVL('R','#')
                                                              AND TRUNC (gl_date) <=
                                                                     :p_as_of_date),
                                                      0)))
                                           * NVL (rpsa.exchange_rate, 1)),
                                          fnd_currency.get_format_mask (
                                             rct.invoice_currency_code,
                                             40))
                                  FROM DUAL
                                 WHERE CEIL (
                                            TO_DATE (
                                               TO_CHAR ( (:p_as_of_date),
                                                        'DD-MON-RR'),
                                               'DD-MON-RR')
                                          - (rct.trx_date)) =0)
                                  bucket_0_i,
                               (SELECT TO_CHAR (
                                          (  (  rpsa.amount_due_original
                                              - (  NVL (
                                                      (SELECT SUM (amount_applied)
                                                         FROM ar_receivable_applications_all
                                                        WHERE     status = 'APP'
                                                              AND applied_customer_trx_id =
                                                                     rct.customer_trx_id
                                                              AND TRUNC (gl_date) <=
                                                                     :p_as_of_date),
                                                      0)
                                                 - NVL (
                                                      (SELECT SUM (amount)
                                                         FROM ar_adjustments_all
                                                        WHERE     customer_trx_id =
                                                                     rct.customer_trx_id
                                                                      AND  NVL(STATUS,'#')<> NVL('R','#')
                                                              AND TRUNC (gl_date) <=
                                                                     :p_as_of_date),
                                                      0)))
                                           * NVL (rpsa.exchange_rate, 1)),
                                          fnd_currency.get_format_mask (
                                             rct.invoice_currency_code,
                                             40))
                                  FROM DUAL
                                 WHERE CEIL (
                                            TO_DATE (
                                               TO_CHAR ( (:p_as_of_date),
                                                        'DD-MON-RR'),
                                               'DD-MON-RR')
                                          - (rct.trx_date)) BETWEEN 1
                                                                AND 30)
                                  bucket_1_i,
                               (SELECT TO_CHAR (
                                          (  (  rpsa.amount_due_original
                                              - (  NVL (
                                                      (SELECT SUM (amount_applied)
                                                         FROM ar_receivable_applications_all
                                                        WHERE     status = 'APP'
                                                              AND applied_customer_trx_id =
                                                                     rct.customer_trx_id
                                                              AND TRUNC (gl_date) <=
                                                                     :p_as_of_date),
                                                      0)
                                                 - NVL (
                                                      (SELECT SUM (amount)
                                                         FROM ar_adjustments_all
                                                        WHERE     customer_trx_id =
                                                                     rct.customer_trx_id
                                                                      AND  NVL(STATUS,'#')<> NVL('R','#')
                                                              AND TRUNC (gl_date) <=
                                                                     :p_as_of_date),
                                                      0)))
                                           * NVL (rpsa.exchange_rate, 1)),
                                          fnd_currency.get_format_mask (
                                             rct.invoice_currency_code,
                                             40))
                                  FROM DUAL
                                 WHERE CEIL (
                                            TO_DATE (
                                               TO_CHAR ( (:p_as_of_date),
                                                        'DD-MON-RR'),
                                               'DD-MON-RR')
                                          - (rct.trx_date)) BETWEEN 31
                                                                AND 60)
                                  bucket_2_i,
                               (SELECT TO_CHAR (
                                          (  (  rpsa.amount_due_original
                                              - (  NVL (
                                                      (SELECT SUM (amount_applied)
                                                         FROM ar_receivable_applications_all
                                                        WHERE     status = 'APP'
                                                              AND applied_customer_trx_id =
                                                                     rct.customer_trx_id
                                                              AND TRUNC (gl_date) <=
                                                                     :p_as_of_date),
                                                      0)
                                                 - NVL (
                                                      (SELECT SUM (amount)
                                                         FROM ar_adjustments_all
                                                        WHERE     customer_trx_id =
                                                                     rct.customer_trx_id
                                                                      AND  NVL(STATUS,'#')<> NVL('R','#')
                                                              AND TRUNC (gl_date) <=
                                                                     :p_as_of_date),
                                                      0)))
                                           * NVL (rpsa.exchange_rate, 1)),
                                          fnd_currency.get_format_mask (
                                             rct.invoice_currency_code,
                                             40))
                                  FROM DUAL
                                 WHERE CEIL (
                                            TO_DATE (
                                               TO_CHAR ( (:p_as_of_date),
                                                        'DD-MON-RR'),
                                               'DD-MON-RR')
                                          - (rct.trx_date)) BETWEEN 61
                                                                AND 90)
                                  bucket_3_i,
                               (SELECT TO_CHAR (
                                          (  (  rpsa.amount_due_original
                                              - (  NVL (
                                                      (SELECT SUM (amount_applied)
                                                         FROM ar_receivable_applications_all
                                                        WHERE     status = 'APP'
                                                              AND applied_customer_trx_id =
                                                                     rct.customer_trx_id
                                                              AND TRUNC (gl_date) <=
                                                                     :p_as_of_date),
                                                      0)
                                                 - NVL (
                                                      (SELECT SUM (amount)
                                                         FROM ar_adjustments_all
                                                        WHERE     customer_trx_id =
                                                                     rct.customer_trx_id
                                                                      AND  NVL(STATUS,'#')<> NVL('R','#')
                                                              AND TRUNC (gl_date) <=
                                                                     :p_as_of_date),
                                                      0)))
                                           * NVL (rpsa.exchange_rate, 1)),
                                          fnd_currency.get_format_mask (
                                             rct.invoice_currency_code,
                                             40))
                                  FROM DUAL
                                 WHERE CEIL (
                                            TO_DATE (
                                               TO_CHAR ( (:p_as_of_date),
                                                        'DD-MON-RR'),
                                               'DD-MON-RR')
                                          - (rct.trx_date)) BETWEEN 91
                                                                AND 120)
                                  bucket_4_i,
                               (SELECT TO_CHAR (
                                          (  (  rpsa.amount_due_original
                                              - (  NVL (
                                                      (SELECT SUM (amount_applied)
                                                         FROM ar_receivable_applications_all
                                                        WHERE     status = 'APP'
                                                              AND applied_customer_trx_id =
                                                                     rct.customer_trx_id
                                                              AND TRUNC (gl_date) <=
                                                                     :p_as_of_date),
                                                      0)
                                                 - NVL (
                                                      (SELECT SUM (amount)
                                                         FROM ar_adjustments_all
                                                        WHERE     customer_trx_id =
                                                                     rct.customer_trx_id
                                                                      AND  NVL(STATUS,'#')<> NVL('R','#')
                                                              AND TRUNC (gl_date) <=
                                                                     :p_as_of_date),
                                                      0)))
                                           * NVL (rpsa.exchange_rate, 1)),
                                          fnd_currency.get_format_mask (
                                             rct.invoice_currency_code,
                                             40))
                                  FROM DUAL
                                 WHERE CEIL (
                                            TO_DATE (
                                               TO_CHAR ( (:p_as_of_date),
                                                        'DD-MON-RR'),
                                               'DD-MON-RR')
                                          - (rct.trx_date)) BETWEEN 121
                                                                AND 150)
                                  bucket_5_i,
                               (SELECT TO_CHAR (
                                          (  (  rpsa.amount_due_original
                                              - (  NVL (
                                                      (SELECT SUM (amount_applied)
                                                         FROM ar_receivable_applications_all
                                                        WHERE     status = 'APP'
                                                              AND applied_customer_trx_id =
                                                                     rct.customer_trx_id
                                                              AND TRUNC (gl_date) <=
                                                                     :p_as_of_date),
                                                      0)
                                                 - NVL (
                                                      (SELECT SUM (amount)
                                                         FROM ar_adjustments_all
                                                        WHERE     customer_trx_id =
                                                                     rct.customer_trx_id
                                                                      AND  NVL(STATUS,'#')<> NVL('R','#')
                                                              AND TRUNC (gl_date) <=
                                                                     :p_as_of_date),
                                                      0)))
                                           * NVL (rpsa.exchange_rate, 1)),
                                          fnd_currency.get_format_mask (
                                             rct.invoice_currency_code,
                                             40))
                                  FROM DUAL
                                 WHERE CEIL (
                                            TO_DATE (
                                               TO_CHAR ( (:p_as_of_date),
                                                        'DD-MON-RR'),
                                               'DD-MON-RR')
                                          - (rct.trx_date)) >= 151)
                                  bucket_6_i,
                               RCT.BILL_TO_CUSTOMER_ID,
                               gcc.segment1 entity, 
                               (SELECT RCTL.DESCRIPTION
                                     FROM RA_CUSTOMER_TRX_LINES_ALL RCTL
                                     WHERE 1=1
                                     AND RCTL.CUSTOMER_TRX_ID=RCT.CUSTOMER_TRX_ID
                                      AND RCTL.LINE_TYPE='LINE'
                                     AND ROWNUM=1)LINE_DESC
                                     ,gcc.segment2 GL_code  --FTP1125
                                     ,gcc.segment1 entity1
                                     ,gcc.segment3 cost_center
                                     ,gcc.segment4 prj
                                     ,gcc.segment5 corp_fun
                                     ,gcc.segment6 loc
                                     ,gcc.segment7 inter_com
                                     ,gcc.segment8 fut1
                                     ,gcc.segment9 fut2
                          FROM ra_customer_trx_all rct,
                               ra_cust_trx_line_gl_dist_all rlg,
                               ar_payment_schedules_all rpsa,
                               hz_parties hzp,
                               hz_cust_accounts hzc,
                               hz_cust_accounts hca,
                               ra_batch_sources_all rbs,
                               ra_cust_trx_types_all rtt,
                               gl_code_combinations gcc,
                               (SELECT lookup_code,
                                       meaning trx_num,
                                       description pay_term,
                                       start_date_active trx_date,
                                       end_date_active due_date
                                  FROM fnd_lookup_values
                                 WHERE     lookup_type = 'STL_AR_NUM_PHASE2'
                                       AND enabled_flag = 'Y') due
                         WHERE     rlg.customer_trx_id = rct.customer_trx_id
                               AND rpsa.customer_trx_id = rct.customer_trx_id
                               AND rlg.code_combination_id = gcc.code_combination_id
                               AND hzc.party_id = hzp.party_id
                               AND hzc.cust_account_id = rct.bill_to_customer_id
                               AND hca.cust_account_id(+) = rct.ship_to_customer_id
                               AND rbs.batch_source_seq_id = rct.batch_source_seq_id
                               AND rtt.cust_trx_type_seq_id =
                                      rct.cust_trx_type_seq_id
                               AND rct.complete_flag = 'Y'
                               AND rlg.account_class = 'REC'
                               AND rpsa.status = 'OP'
                               AND rtt.TYPE IN ('INV', 'DM', 'DEP', 'CB')
                               AND rct.org_id = NVL ( (SELECT organization_id
                                                         FROM hr_operating_units
                                                        WHERE NAME = :p_org_name),
                                                     rct.org_id)
                               -- AND gcc.segment1=:p_unit
                               AND rct.trx_number = due.trx_num(+)
                               AND TRUNC (rlg.gl_date) <= :p_as_of_date
                               AND hzp.party_id =
                                      NVL ( (SELECT h.party_id
                                               FROM hz_parties h
                                              WHERE h.party_name = :p_cust),
                                           hzp.party_id)
                      GROUP BY hzp.party_name,
                               hzp.party_id,
                               hzp.party_type,
                               hzc.account_number,
                               rct.customer_trx_id,
                               rct.bill_to_site_use_id,
                               rct.trx_number,
                               rtt.TYPE,
                               rtt.NAME,
                               rct.trx_date,
                               due.trx_date,
                               due.due_date,
                               rpsa.due_date,
                               rlg.gl_date,
                               rct.invoice_currency_code,
                               rpsa.amount_due_remaining,
                               rct.exchange_rate,
                               rpsa.exchange_rate,
                               rct.org_id,
                               rpsa.amount_due_original,
                               rpsa.CLASS,
                               rlg.customer_trx_id,
                               rlg.code_combination_id,
                               rlg.account_class,
                               RCT.BILL_TO_CUSTOMER_ID,gcc.segment1,gcc.segment2
                                     ,gcc.segment3
                                     ,gcc.segment4 
                                     ,gcc.segment5 
                                     ,gcc.segment6 
                                     ,gcc.segment7 
                                     ,gcc.segment8 
                                     ,gcc.segment9 
                      UNION ALL
                        SELECT '2' SNO,
                               (SELECT segment1
                                  FROM gl_code_combinations
                                 WHERE code_combination_id = rlg.code_combination_id)
                                  unit,
                               rct.exchange_rate,
                               rct.org_id,
                               hzp.party_id party_id,
                               hzp.party_name,
                               hzp.party_type,
                               hzc.account_number customer_number,
                               rct.customer_trx_id,
                               (SELECT segment2
                                  FROM gl_code_combinations
                                 WHERE code_combination_id = rlg.code_combination_id)
                                  receivable_acct,
                                (select hps.PARTY_SITE_NUMBER from
                                hz_cust_site_uses_all hcs,hz_cust_acct_sites_all hcas,hz_party_sites hps
                                   WHERE hcs.site_use_id=rct.bill_to_site_use_id 
                                    and hps.party_id=hzp.party_id
                                    AND hcas.cust_acct_site_id = hcs.cust_acct_site_id
                                    AND hps.party_site_id = hcas.party_site_id)
                                  customer_site,
                               DECODE (rtt.TYPE,
                                       'INV', 'INVOICE',
                                       'DM', 'DEBIT MEMO',
                                       'DEP', 'DEPOSIT',
                                       'CB', 'CHARGEBACK')
                                  invoice_type,
                               rct.trx_number invoice_number,
                               rtt.NAME transaction_type,
                               NVL (due.trx_date, rct.trx_date) invoice_date,
                               rlg.gl_date gl_date,
                               NVL (due.due_date, rpsa.due_date) due_date,
                               rct.invoice_currency_code,
                               rpsa.amount_due_original invoice_amount,
                                 (NVL (
                                     (SELECT SUM (amount_applied)
                                        FROM ar_receivable_applications_all
                                       WHERE     status = 'APP'
                                             AND applied_customer_trx_id =
                                                    rct.customer_trx_id
                                             AND TRUNC (gl_date) <= :p_as_of_date),
                                     0))
                               - (NVL (
                                     (SELECT SUM (amount)
                                        FROM ar_adjustments_all
                                       WHERE     customer_trx_id =
                                                    rct.customer_trx_id
                                                    AND  NVL(STATUS,'#')<> NVL('R','#')
                                             AND TRUNC (gl_date) <= :p_as_of_date),
                                     0))
                                  amount_received,
                                 rpsa.amount_due_original
                               - (  NVL (
                                       (SELECT SUM (amount_applied)
                                          FROM ar_receivable_applications_all
                                         WHERE     status = 'APP'
                                               AND applied_customer_trx_id =
                                                      rct.customer_trx_id
                                               AND TRUNC (gl_date) <= :p_as_of_date),
                                       0)
                                  - NVL (
                                       (SELECT SUM (amount)
                                          FROM ar_adjustments_all
                                         WHERE     customer_trx_id =
                                                      rct.customer_trx_id
                                                       AND  NVL(STATUS,'#')<> NVL('R','#')
                                               AND TRUNC (gl_date) <= :p_as_of_date),
                                       0))
                                  balance_amount,
                               DECODE (
                                  rct.exchange_rate,
                                  NULL, (  rpsa.amount_due_original
                                         - (  NVL (
                                                 (SELECT SUM (amount_applied)
                                                    FROM ar_receivable_applications_all
                                                   WHERE     status = 'APP'
                                                         AND applied_customer_trx_id =
                                                                rct.customer_trx_id
                                                         AND TRUNC (gl_date) <=
                                                                :p_as_of_date),
                                                 0)
                                            - NVL (
                                                 (SELECT SUM (amount)
                                                    FROM ar_adjustments_all
                                                   WHERE     customer_trx_id =
                                                                rct.customer_trx_id
                                                                 AND  NVL(STATUS,'#')<> NVL('R','#')
                                                         AND TRUNC (gl_date) <=
                                                                :p_as_of_date),
                                                 0))),
                                  (  (  rpsa.amount_due_original
                                      - (  NVL (
                                              (SELECT SUM (amount_applied)
                                                 FROM ar_receivable_applications_all
                                                WHERE     status = 'APP'
                                                      AND applied_customer_trx_id =
                                                             rct.customer_trx_id
                                                      AND TRUNC (gl_date) <=
                                                             :p_as_of_date),
                                              0)
                                         - NVL (
                                              (SELECT SUM (amount)
                                                 FROM ar_adjustments_all
                                                WHERE     customer_trx_id =
                                                             rct.customer_trx_id
                                                              AND  NVL(STATUS,'#')<> NVL('R','#')
                                                      AND TRUNC (gl_date) <=
                                                             :p_as_of_date),
                                              0)))
                                   * rct.exchange_rate))
                                  bal_func_amt,
                               (SELECT TO_CHAR (
                                          (  (  rpsa.amount_due_original
                                              - (  NVL (
                                                      (SELECT SUM (amount_applied)
                                                         FROM ar_receivable_applications_all
                                                        WHERE     status = 'APP'
                                                              AND applied_customer_trx_id =
                                                                     rct.customer_trx_id
                                                              AND TRUNC (gl_date) <=
                                                                     :p_as_of_date),
                                                      0)
                                                 - NVL (
                                                      (SELECT SUM (amount)
                                                         FROM ar_adjustments_all
                                                        WHERE     customer_trx_id =
                                                                     rct.customer_trx_id
                                                                      AND  NVL(STATUS,'#')<> NVL('R','#')
                                                              AND TRUNC (gl_date) <=
                                                                     :p_as_of_date),
                                                      0)))
                                           * NVL (rpsa.exchange_rate, 1)),
                                          fnd_currency.get_format_mask (
                                             rct.invoice_currency_code,
                                             40))
                                  FROM DUAL
                                 WHERE CEIL (
                                            TO_DATE (
                                               TO_CHAR ( (:p_as_of_date),
                                                        'DD-MON-RR'),
                                               'DD-MON-RR')
                                          - NVL (due.due_date, rpsa.due_date)) < 0)
                                  not_due,
                               (SELECT TO_CHAR (
                                          (  (  rpsa.amount_due_original
                                              - (  NVL (
                                                      (SELECT SUM (amount_applied)
                                                         FROM ar_receivable_applications_all
                                                        WHERE     status = 'APP'
                                                              AND applied_customer_trx_id =
                                                                     rct.customer_trx_id
                                                              AND TRUNC (gl_date) <=
                                                                     :p_as_of_date),
                                                      0)
                                                 - NVL (
                                                      (SELECT SUM (amount)
                                                         FROM ar_adjustments_all
                                                        WHERE     customer_trx_id =
                                                                     rct.customer_trx_id
                                                                      AND  NVL(STATUS,'#')<> NVL('R','#')
                                                              AND TRUNC (gl_date) <=
                                                                     :p_as_of_date),
                                                      0)))
                                           * NVL (rpsa.exchange_rate, 1)),
                                          fnd_currency.get_format_mask (
                                             rct.invoice_currency_code,
                                             40))
                                  FROM DUAL
                                 WHERE CEIL (
                                            TO_DATE (
                                               TO_CHAR ( (:p_as_of_date),
                                                        'DD-MON-RR'),
                                               'DD-MON-RR')
                                          - NVL (due.due_date, rpsa.due_date)) =0)
                                  Bucket_0,
                               (SELECT TO_CHAR (
                                          (  (  rpsa.amount_due_original
                                              - (  NVL (
                                                      (SELECT SUM (amount_applied)
                                                         FROM ar_receivable_applications_all
                                                        WHERE     status = 'APP'
                                                              AND applied_customer_trx_id =
                                                                     rct.customer_trx_id
                                                              AND TRUNC (gl_date) <=
                                                                     :p_as_of_date),
                                                      0)
                                                 - NVL (
                                                      (SELECT SUM (amount)
                                                         FROM ar_adjustments_all
                                                        WHERE     customer_trx_id =
                                                                     rct.customer_trx_id
                                                                      AND  NVL(STATUS,'#')<> NVL('R','#')
                                                              AND TRUNC (gl_date) <=
                                                                     :p_as_of_date),
                                                      0)))
                                           * NVL (rpsa.exchange_rate, 1)),
                                          fnd_currency.get_format_mask (
                                             rct.invoice_currency_code,
                                             40))
                                  FROM DUAL
                                 WHERE CEIL (
                                            TO_DATE (
                                               TO_CHAR ( (:p_as_of_date),
                                                        'DD-MON-RR'),
                                               'DD-MON-RR')
                                          - NVL (due.due_date, rpsa.due_date)) BETWEEN 1
                                                                                   AND 30)
                                  bucket_1,
                               (SELECT TO_CHAR (
                                          (  (  rpsa.amount_due_original
                                              - (  NVL (
                                                      (SELECT SUM (amount_applied)
                                                         FROM ar_receivable_applications_all
                                                        WHERE     status = 'APP'
                                                              AND applied_customer_trx_id =
                                                                     rct.customer_trx_id
                                                              AND TRUNC (gl_date) <=
                                                                     :p_as_of_date),
                                                      0)
                                                 - NVL (
                                                      (SELECT SUM (amount)
                                                         FROM ar_adjustments_all
                                                        WHERE     customer_trx_id =
                                                                     rct.customer_trx_id
                                                                      AND  NVL(STATUS,'#')<> NVL('R','#')
                                                              AND TRUNC (gl_date) <=
                                                                     :p_as_of_date),
                                                      0)))
                                           * NVL (rpsa.exchange_rate, 1)),
                                          fnd_currency.get_format_mask (
                                             rct.invoice_currency_code,
                                             40))
                                  FROM DUAL
                                 WHERE CEIL (
                                            TO_DATE (
                                               TO_CHAR ( (:p_as_of_date),
                                                        'DD-MON-RR'),
                                               'DD-MON-RR')
                                          - NVL (due.due_date, rpsa.due_date)) BETWEEN 31
                                                                                   AND 60)
                                  bucket_2,
                               (SELECT TO_CHAR (
                                          (  (  rpsa.amount_due_original
                                              - (  NVL (
                                                      (SELECT SUM (amount_applied)
                                                         FROM ar_receivable_applications_all
                                                        WHERE     status = 'APP'
                                                              AND applied_customer_trx_id =
                                                                     rct.customer_trx_id
                                                              AND TRUNC (gl_date) <=
                                                                     :p_as_of_date),
                                                      0)
                                                 - NVL (
                                                      (SELECT SUM (amount)
                                                         FROM ar_adjustments_all
                                                        WHERE     customer_trx_id =
                                                                     rct.customer_trx_id
                                                                      AND  NVL(STATUS,'#')<> NVL('R','#')
                                                              AND TRUNC (gl_date) <=
                                                                     :p_as_of_date),
                                                      0)))
                                           * NVL (rpsa.exchange_rate, 1)),
                                          fnd_currency.get_format_mask (
                                             rct.invoice_currency_code,
                                             40))
                                  FROM DUAL
                                 WHERE CEIL (
                                            TO_DATE (
                                               TO_CHAR ( (:p_as_of_date),
                                                        'DD-MON-RR'),
                                               'DD-MON-RR')
                                          - NVL (due.due_date, rpsa.due_date)) BETWEEN 61
                                                                                   AND 90)
                                  bucket_3,
                               (SELECT TO_CHAR (
                                          (  (  rpsa.amount_due_original
                                              - (  NVL (
                                                      (SELECT SUM (amount_applied)
                                                         FROM ar_receivable_applications_all
                                                        WHERE     status = 'APP'
                                                              AND applied_customer_trx_id =
                                                                     rct.customer_trx_id
                                                              AND TRUNC (gl_date) <=
                                                                     :p_as_of_date),
                                                      0)
                                                 - NVL (
                                                      (SELECT SUM (amount)
                                                         FROM ar_adjustments_all
                                                        WHERE     customer_trx_id =
                                                                     rct.customer_trx_id
                                                                      AND  NVL(STATUS,'#')<> NVL('R','#')
                                                              AND TRUNC (gl_date) <=
                                                                     :p_as_of_date),
                                                      0)))
                                           * NVL (rpsa.exchange_rate, 1)),
                                          fnd_currency.get_format_mask (
                                             rct.invoice_currency_code,
                                             40))
                                  FROM DUAL
                                 WHERE CEIL (
                                            TO_DATE (
                                               TO_CHAR ( (:p_as_of_date),
                                                        'DD-MON-RR'),
                                               'DD-MON-RR')
                                          - NVL (due.due_date, rpsa.due_date)) BETWEEN 91
                                                                                   AND 120)
                                  bucket_4,
                               (SELECT TO_CHAR (
                                          (  (  rpsa.amount_due_original
                                              - (  NVL (
                                                      (SELECT SUM (amount_applied)
                                                         FROM ar_receivable_applications_all
                                                        WHERE     status = 'APP'
                                                              AND applied_customer_trx_id =
                                                                     rct.customer_trx_id
                                                              AND TRUNC (gl_date) <=
                                                                     :p_as_of_date),
                                                      0)
                                                 - NVL (
                                                      (SELECT SUM (amount)
                                                         FROM ar_adjustments_all
                                                        WHERE     customer_trx_id =
                                                                     rct.customer_trx_id
                                                                      AND  NVL(STATUS,'#')<> NVL('R','#')
                                                              AND TRUNC (gl_date) <=
                                                                     :p_as_of_date),
                                                      0)))
                                           * NVL (rpsa.exchange_rate, 1)),
                                          fnd_currency.get_format_mask (
                                             rct.invoice_currency_code,
                                             40))
                                  FROM DUAL
                                 WHERE CEIL (
                                            TO_DATE (
                                               TO_CHAR ( (:p_as_of_date),
                                                        'DD-MON-RR'),
                                               'DD-MON-RR')
                                          - NVL (due.due_date, rpsa.due_date)) BETWEEN 121
                                                                                   AND 150)
                                  bucket_5,
                               (SELECT TO_CHAR (
                                          (  (  rpsa.amount_due_original
                                              - (  NVL (
                                                      (SELECT SUM (amount_applied)
                                                         FROM ar_receivable_applications_all
                                                        WHERE     status = 'APP'
                                                              AND applied_customer_trx_id =
                                                                     rct.customer_trx_id
                                                              AND TRUNC (gl_date) <=
                                                                     :p_as_of_date),
                                                      0)
                                                 - NVL (
                                                      (SELECT SUM (amount)
                                                         FROM ar_adjustments_all
                                                        WHERE     customer_trx_id =
                                                                     rct.customer_trx_id
                                                                      AND  NVL(STATUS,'#')<> NVL('R','#')
                                                              AND TRUNC (gl_date) <=
                                                                     :p_as_of_date),
                                                      0)))
                                           * NVL (rpsa.exchange_rate, 1)),
                                          fnd_currency.get_format_mask (
                                             rct.invoice_currency_code,
                                             40))
                                  FROM DUAL
                                 WHERE CEIL (
                                            TO_DATE (
                                               TO_CHAR ( (:p_as_of_date),
                                                        'DD-MON-RR'),
                                               'DD-MON-RR')
                                          - NVL (due.due_date, rpsa.due_date)) between 151 and 180
                                                                                   )
                                  bucket_6,
            --------------------------upendra
              (SELECT TO_CHAR (
                                          (  (  rpsa.amount_due_original
                                              - (  NVL (
                                                      (SELECT SUM (amount_applied)
                                                         FROM ar_receivable_applications_all
                                                        WHERE     status = 'APP'
                                                              AND applied_customer_trx_id =
                                                                     rct.customer_trx_id
                                                              AND TRUNC (gl_date) <=
                                                                     :p_as_of_date),
                                                      0)
                                                 - NVL (
                                                      (SELECT SUM (amount)
                                                         FROM ar_adjustments_all
                                                        WHERE     customer_trx_id =
                                                                     rct.customer_trx_id
                                                                      AND  NVL(STATUS,'#')<> NVL('R','#')
                                                              AND TRUNC (gl_date) <=
                                                                     :p_as_of_date),
                                                      0)))
                                           * NVL (rpsa.exchange_rate, 1)),
                                          fnd_currency.get_format_mask (
                                             rct.invoice_currency_code,
                                             40))
                                  FROM DUAL
                                 WHERE CEIL (
                                            TO_DATE (
                                               TO_CHAR ( (:p_as_of_date),
                                                        'DD-MON-RR'),
                                               'DD-MON-RR')
                                          - NVL (due.due_date, rpsa.due_date)) BETWEEN 181 AND 210)
                                  bucket_7,
                                   (SELECT TO_CHAR (
                                          (  (  rpsa.amount_due_original
                                              - (  NVL (
                                                      (SELECT SUM (amount_applied)
                                                         FROM ar_receivable_applications_all
                                                        WHERE     status = 'APP'
                                                              AND applied_customer_trx_id =
                                                                     rct.customer_trx_id
                                                              AND TRUNC (gl_date) <=
                                                                     :p_as_of_date),
                                                      0)
                                                 - NVL (
                                                      (SELECT SUM (amount)
                                                         FROM ar_adjustments_all
                                                        WHERE     customer_trx_id =
                                                                     rct.customer_trx_id
                                                                      AND  NVL(STATUS,'#')<> NVL('R','#')
                                                              AND TRUNC (gl_date) <=
                                                                     :p_as_of_date),
                                                      0)))
                                           * NVL (rpsa.exchange_rate, 1)),
                                          fnd_currency.get_format_mask (
                                             rct.invoice_currency_code,
                                             40))
                                  FROM DUAL
                                 WHERE CEIL (
                                            TO_DATE (
                                               TO_CHAR ( (:p_as_of_date),
                                                        'DD-MON-RR'),
                                               'DD-MON-RR')
                                          - NVL (due.due_date, rpsa.due_date)) BETWEEN 211 AND 240)
                                  bucket_8,
                                   (SELECT TO_CHAR (
                                          (  (  rpsa.amount_due_original
                                              - (  NVL (
                                                      (SELECT SUM (amount_applied)
                                                         FROM ar_receivable_applications_all
                                                        WHERE     status = 'APP'
                                                              AND applied_customer_trx_id =
                                                                     rct.customer_trx_id
                                                              AND TRUNC (gl_date) <=
                                                                     :p_as_of_date),
                                                      0)
                                                 - NVL (
                                                      (SELECT SUM (amount)
                                                         FROM ar_adjustments_all
                                                        WHERE     customer_trx_id =
                                                                     rct.customer_trx_id
                                                                      AND  NVL(STATUS,'#')<> NVL('R','#')
                                                              AND TRUNC (gl_date) <=
                                                                     :p_as_of_date),
                                                      0)))
                                           * NVL (rpsa.exchange_rate, 1)),
                                          fnd_currency.get_format_mask (
                                             rct.invoice_currency_code,
                                             40))
                                  FROM DUAL
                                 WHERE CEIL (
                                            TO_DATE (
                                               TO_CHAR ( (:p_as_of_date),
                                                        'DD-MON-RR'),
                                               'DD-MON-RR')
                                          - NVL (due.due_date, rpsa.due_date)) BETWEEN 241 AND 270)
                                  bucket_9,
                                   (SELECT TO_CHAR (
                                          (  (  rpsa.amount_due_original
                                              - (  NVL (
                                                      (SELECT SUM (amount_applied)
                                                         FROM ar_receivable_applications_all
                                                        WHERE     status = 'APP'
                                                              AND applied_customer_trx_id =
                                                                     rct.customer_trx_id
                                                              AND TRUNC (gl_date) <=
                                                                     :p_as_of_date),
                                                      0)
                                                 - NVL (
                                                      (SELECT SUM (amount)
                                                         FROM ar_adjustments_all
                                                        WHERE     customer_trx_id =
                                                                     rct.customer_trx_id
                                                                      AND  NVL(STATUS,'#')<> NVL('R','#')
                                                              AND TRUNC (gl_date) <=
                                                                     :p_as_of_date),
                                                      0)))
                                           * NVL (rpsa.exchange_rate, 1)),
                                          fnd_currency.get_format_mask (
                                             rct.invoice_currency_code,
                                             40))
                                  FROM DUAL
                                 WHERE CEIL (
                                            TO_DATE (
                                               TO_CHAR ( (:p_as_of_date),
                                                        'DD-MON-RR'),
                                               'DD-MON-RR')
                                          - NVL (due.due_date, rpsa.due_date)) BETWEEN 271 AND 300)
                                  bucket_10,
                                   (SELECT TO_CHAR (
                                          (  (  rpsa.amount_due_original
                                              - (  NVL (
                                                      (SELECT SUM (amount_applied)
                                                         FROM ar_receivable_applications_all
                                                        WHERE     status = 'APP'
                                                              AND applied_customer_trx_id =
                                                                     rct.customer_trx_id
                                                              AND TRUNC (gl_date) <=
                                                                     :p_as_of_date),
                                                      0)
                                                 - NVL (
                                                      (SELECT SUM (amount)
                                                         FROM ar_adjustments_all
                                                        WHERE     customer_trx_id =
                                                                     rct.customer_trx_id
                                                                      AND  NVL(STATUS,'#')<> NVL('R','#')
                                                              AND TRUNC (gl_date) <=
                                                                     :p_as_of_date),
                                                      0)))
                                           * NVL (rpsa.exchange_rate, 1)),
                                          fnd_currency.get_format_mask (
                                             rct.invoice_currency_code,
                                             40))
                                  FROM DUAL
                                 WHERE CEIL (
                                            TO_DATE (
                                               TO_CHAR ( (:p_as_of_date),
                                                        'DD-MON-RR'),
                                               'DD-MON-RR')
                                          - NVL (due.due_date, rpsa.due_date)) BETWEEN 301 AND 330)
                                  bucket_11,
                                   (SELECT TO_CHAR (
                                          (  (  rpsa.amount_due_original
                                              - (  NVL (
                                                      (SELECT SUM (amount_applied)
                                                         FROM ar_receivable_applications_all
                                                        WHERE     status = 'APP'
                                                              AND applied_customer_trx_id =
                                                                     rct.customer_trx_id
                                                              AND TRUNC (gl_date) <=
                                                                     :p_as_of_date),
                                                      0)
                                                 - NVL (
                                                      (SELECT SUM (amount)
                                                         FROM ar_adjustments_all
                                                        WHERE     customer_trx_id =
                                                                     rct.customer_trx_id
                                                                      AND  NVL(STATUS,'#')<> NVL('R','#')
                                                              AND TRUNC (gl_date) <=
                                                                     :p_as_of_date),
                                                      0)))
                                           * NVL (rpsa.exchange_rate, 1)),
                                          fnd_currency.get_format_mask (
                                             rct.invoice_currency_code,
                                             40))
                                  FROM DUAL
                                 WHERE CEIL (
                                            TO_DATE (
                                               TO_CHAR ( (:p_as_of_date),
                                                        'DD-MON-RR'),
                                               'DD-MON-RR')
                                          - NVL (due.due_date, rpsa.due_date)) BETWEEN 331 AND 365)
                                  bucket_12,
                                   (SELECT TO_CHAR (
                                          (  (  rpsa.amount_due_original
                                              - (  NVL (
                                                      (SELECT SUM (amount_applied)
                                                         FROM ar_receivable_applications_all
                                                        WHERE     status = 'APP'
                                                              AND applied_customer_trx_id =
                                                                     rct.customer_trx_id
                                                              AND TRUNC (gl_date) <=
                                                                     :p_as_of_date),
                                                      0)
                                                 - NVL (
                                                      (SELECT SUM (amount)
                                                         FROM ar_adjustments_all
                                                        WHERE     customer_trx_id =
                                                                     rct.customer_trx_id
                                                                      AND  NVL(STATUS,'#')<> NVL('R','#')
                                                              AND TRUNC (gl_date) <=
                                                                     :p_as_of_date),
                                                      0)))
                                           * NVL (rpsa.exchange_rate, 1)),
                                          fnd_currency.get_format_mask (
                                             rct.invoice_currency_code,
                                             40))
                                  FROM DUAL
                                 WHERE CEIL (
                                            TO_DATE (
                                               TO_CHAR ( (:p_as_of_date),
                                                        'DD-MON-RR'),
                                               'DD-MON-RR')
                                          - NVL (due.due_date, rpsa.due_date)) BETWEEN 366 AND 730)
                                  bucket_13,
                                   (SELECT TO_CHAR (
                                          (  (  rpsa.amount_due_original
                                              - (  NVL (
                                                      (SELECT SUM (amount_applied)
                                                         FROM ar_receivable_applications_all
                                                        WHERE     status = 'APP'
                                                              AND applied_customer_trx_id =
                                                                     rct.customer_trx_id
                                                              AND TRUNC (gl_date) <=
                                                                     :p_as_of_date),
                                                      0)
                                                 - NVL (
                                                      (SELECT SUM (amount)
                                                         FROM ar_adjustments_all
                                                        WHERE     customer_trx_id =
                                                                     rct.customer_trx_id
                                                                      AND  NVL(STATUS,'#')<> NVL('R','#')
                                                              AND TRUNC (gl_date) <=
                                                                     :p_as_of_date),
                                                      0)))
                                           * NVL (rpsa.exchange_rate, 1)),
                                          fnd_currency.get_format_mask (
                                             rct.invoice_currency_code,
                                             40))
                                  FROM DUAL
                                 WHERE CEIL (
                                            TO_DATE (
                                               TO_CHAR ( (:p_as_of_date),
                                                        'DD-MON-RR'),
                                               'DD-MON-RR')
                                          - NVL (due.due_date, rpsa.due_date)) >=731)
                                  bucket_14,
                                       
            
            
            ------------------upendra                      
                               (SELECT TO_CHAR (
                                          (  (  rpsa.amount_due_original
                                              - (  NVL (
                                                      (SELECT SUM (amount_applied)
                                                         FROM ar_receivable_applications_all
                                                        WHERE     status = 'APP'
                                                              AND applied_customer_trx_id =
                                                                     rct.customer_trx_id
                                                              AND TRUNC (gl_date) <=
                                                                     :p_as_of_date),
                                                      0)
                                                 - NVL (
                                                      (SELECT SUM (amount)
                                                         FROM ar_adjustments_all
                                                        WHERE     customer_trx_id =
                                                                     rct.customer_trx_id
                                                                      AND  NVL(STATUS,'#')<> NVL('R','#')
                                                              AND TRUNC (gl_date) <=
                                                                     :p_as_of_date),
                                                      0)))
                                           * NVL (rpsa.exchange_rate, 1)),
                                          fnd_currency.get_format_mask (
                                             rct.invoice_currency_code,
                                             40))
                                  FROM DUAL
                                 WHERE CEIL (
                                            TO_DATE (
                                               TO_CHAR ( (:p_as_of_date),
                                                        'DD-MON-RR'),
                                               'DD-MON-RR')
                                          - (rct.trx_date))=0
                                                                )
                                  bucket_0_i,
                               (SELECT TO_CHAR (
                                          (  (  rpsa.amount_due_original
                                              - (  NVL (
                                                      (SELECT SUM (amount_applied)
                                                         FROM ar_receivable_applications_all
                                                        WHERE     status = 'APP'
                                                              AND applied_customer_trx_id =
                                                                     rct.customer_trx_id
                                                              AND TRUNC (gl_date) <=
                                                                     :p_as_of_date),
                                                      0)
                                                 - NVL (
                                                      (SELECT SUM (amount)
                                                         FROM ar_adjustments_all
                                                        WHERE     customer_trx_id =
                                                                     rct.customer_trx_id
                                                                      AND  NVL(STATUS,'#')<> NVL('R','#')
                                                              AND TRUNC (gl_date) <=
                                                                     :p_as_of_date),
                                                      0)))
                                           * NVL (rpsa.exchange_rate, 1)),
                                          fnd_currency.get_format_mask (
                                             rct.invoice_currency_code,
                                             40))
                                  FROM DUAL
                                 WHERE CEIL (
                                            TO_DATE (
                                               TO_CHAR ( (:p_as_of_date),
                                                        'DD-MON-RR'),
                                               'DD-MON-RR')
                                          - (rct.trx_date)) BETWEEN 1
                                                                AND 30)
                                  bucket_1_i,
                               (SELECT TO_CHAR (
                                          (  (  rpsa.amount_due_original
                                              - (  NVL (
                                                      (SELECT SUM (amount_applied)
                                                         FROM ar_receivable_applications_all
                                                        WHERE     status = 'APP'
                                                              AND applied_customer_trx_id =
                                                                     rct.customer_trx_id
                                                              AND TRUNC (gl_date) <=
                                                                     :p_as_of_date),
                                                      0)
                                                 - NVL (
                                                      (SELECT SUM (amount)
                                                         FROM ar_adjustments_all
                                                        WHERE     customer_trx_id =
                                                                     rct.customer_trx_id
                                                                      AND  NVL(STATUS,'#')<> NVL('R','#')
                                                              AND TRUNC (gl_date) <=
                                                                     :p_as_of_date),
                                                      0)))
                                           * NVL (rpsa.exchange_rate, 1)),
                                          fnd_currency.get_format_mask (
                                             rct.invoice_currency_code,
                                             40))
                                  FROM DUAL
                                 WHERE CEIL (
                                            TO_DATE (
                                               TO_CHAR ( (:p_as_of_date),
                                                        'DD-MON-RR'),
                                               'DD-MON-RR')
                                          - (rct.trx_date)) BETWEEN 31
                                                                AND 60)
                                  bucket_2_i,
                               (SELECT TO_CHAR (
                                          (  (  rpsa.amount_due_original
                                              - (  NVL (
                                                      (SELECT SUM (amount_applied)
                                                         FROM ar_receivable_applications_all
                                                        WHERE     status = 'APP'
                                                              AND applied_customer_trx_id =
                                                                     rct.customer_trx_id
                                                              AND TRUNC (gl_date) <=
                                                                     :p_as_of_date),
                                                      0)
                                                 - NVL (
                                                      (SELECT SUM (amount)
                                                         FROM ar_adjustments_all
                                                        WHERE     customer_trx_id =
                                                                     rct.customer_trx_id
                                                                      AND  NVL(STATUS,'#')<> NVL('R','#')
                                                              AND TRUNC (gl_date) <=
                                                                     :p_as_of_date),
                                                      0)))
                                           * NVL (rpsa.exchange_rate, 1)),
                                          fnd_currency.get_format_mask (
                                             rct.invoice_currency_code,
                                             40))
                                  FROM DUAL
                                 WHERE CEIL (
                                            TO_DATE (
                                               TO_CHAR ( (:p_as_of_date),
                                                        'DD-MON-RR'),
                                               'DD-MON-RR')
                                          - (rct.trx_date)) BETWEEN 61
                                                                AND 90)
                                  bucket_3_i,
                               (SELECT TO_CHAR (
                                          (  (  rpsa.amount_due_original
                                              - (  NVL (
                                                      (SELECT SUM (amount_applied)
                                                         FROM ar_receivable_applications_all
                                                        WHERE     status = 'APP'
                                                              AND applied_customer_trx_id =
                                                                     rct.customer_trx_id
                                                              AND TRUNC (gl_date) <=
                                                                     :p_as_of_date),
                                                      0)
                                                 - NVL (
                                                      (SELECT SUM (amount)
                                                         FROM ar_adjustments_all
                                                        WHERE     customer_trx_id =
                                                                     rct.customer_trx_id
                                                                      AND  NVL(STATUS,'#')<> NVL('R','#')
                                                              AND TRUNC (gl_date) <=
                                                                     :p_as_of_date),
                                                      0)))
                                           * NVL (rpsa.exchange_rate, 1)),
                                          fnd_currency.get_format_mask (
                                             rct.invoice_currency_code,
                                             40))
                                  FROM DUAL
                                 WHERE CEIL (
                                            TO_DATE (
                                               TO_CHAR ( (:p_as_of_date),
                                                        'DD-MON-RR'),
                                               'DD-MON-RR')
                                          - (rct.trx_date)) BETWEEN 91
                                                                AND 120)
                                  bucket_4_i,
                               (SELECT TO_CHAR (
                                          (  (  rpsa.amount_due_original
                                              - (  NVL (
                                                      (SELECT SUM (amount_applied)
                                                         FROM ar_receivable_applications_all
                                                        WHERE     status = 'APP'
                                                              AND applied_customer_trx_id =
                                                                     rct.customer_trx_id
                                                              AND TRUNC (gl_date) <=
                                                                     :p_as_of_date),
                                                      0)
                                                 - NVL (
                                                      (SELECT SUM (amount)
                                                         FROM ar_adjustments_all
                                                        WHERE     customer_trx_id =
                                                                     rct.customer_trx_id
                                                                      AND  NVL(STATUS,'#')<> NVL('R','#')
                                                              AND TRUNC (gl_date) <=
                                                                     :p_as_of_date),
                                                      0)))
                                           * NVL (rpsa.exchange_rate, 1)),
                                          fnd_currency.get_format_mask (
                                             rct.invoice_currency_code,
                                             40))
                                  FROM DUAL
                                 WHERE CEIL (
                                            TO_DATE (
                                               TO_CHAR ( (:p_as_of_date),
                                                        'DD-MON-RR'),
                                               'DD-MON-RR')
                                          - (rct.trx_date)) BETWEEN 121
                                                                AND 150)
                                  bucket_5_i,
                               (SELECT TO_CHAR (
                                          (  (  rpsa.amount_due_original
                                              - (  NVL (
                                                      (SELECT SUM (amount_applied)
                                                         FROM ar_receivable_applications_all
                                                        WHERE     status = 'APP'
                                                              AND applied_customer_trx_id =
                                                                     rct.customer_trx_id
                                                              AND TRUNC (gl_date) <=
                                                                     :p_as_of_date),
                                                      0)
                                                 - NVL (
                                                      (SELECT SUM (amount)
                                                         FROM ar_adjustments_all
                                                        WHERE     customer_trx_id =
                                                                     rct.customer_trx_id
                                                                      AND  NVL(STATUS,'#')<> NVL('R','#')
                                                              AND TRUNC (gl_date) <=
                                                                     :p_as_of_date),
                                                      0)))
                                           * NVL (rpsa.exchange_rate, 1)),
                                          fnd_currency.get_format_mask (
                                             rct.invoice_currency_code,
                                             40))
                                  FROM DUAL
                                 WHERE CEIL (
                                            TO_DATE (
                                               TO_CHAR ( (:p_as_of_date),
                                                        'DD-MON-RR'),
                                               'DD-MON-RR')
                                          - (rct.trx_date)) >= 151)
                                  bucket_6_i,
                               RCT.BILL_TO_CUSTOMER_ID,
                               gcc.segment1 entity ,
                               (SELECT RCTL.DESCRIPTION
                                     FROM RA_CUSTOMER_TRX_LINES_ALL RCTL
                                     WHERE 1=1
                                     AND RCTL.CUSTOMER_TRX_ID=RCT.CUSTOMER_TRX_ID
                                      AND RCTL.LINE_TYPE='LINE'
                                     AND ROWNUM=1)LINE_DESC
                                     ,gcc.segment2 GL_code  --FTP1125
                                     ,gcc.segment1 entity1
                                     ,gcc.segment3 cost_center
                                     ,gcc.segment4 prj
                                     ,gcc.segment5 corp_fun
                                     ,gcc.segment6 loc
                                     ,gcc.segment7 inter_com
                                     ,gcc.segment8 fut1
                                     ,gcc.segment9 fut2
                          FROM ra_customer_trx_all rct,
                               ra_cust_trx_line_gl_dist_all rlg,
                               ar_payment_schedules_all rpsa,
                               hz_parties hzp,
                               hz_cust_accounts hzc,
                               hz_cust_accounts hca,
                               ra_batch_sources_all rbs,
                               ra_cust_trx_types_all rtt,
                               gl_code_combinations gcc,
                               (SELECT lookup_code,
                                       meaning trx_num,
                                       description pay_term,
                                       start_date_active trx_date,
                                       end_date_active due_date
                                  FROM fnd_lookup_values
                                 WHERE     lookup_type = 'STL_AR_NUM_PHASE2'
                                       AND enabled_flag = 'Y') due
                         WHERE     rlg.customer_trx_id = rct.customer_trx_id
                               AND rpsa.customer_trx_id = rct.customer_trx_id
                               AND rlg.code_combination_id = gcc.code_combination_id
                               AND hzc.party_id = hzp.party_id
                               AND hzc.cust_account_id = rct.bill_to_customer_id
                               AND hca.cust_account_id(+) = rct.ship_to_customer_id
                               AND rbs.batch_source_seq_id = rct.batch_source_seq_id
                               AND rtt.cust_trx_type_seq_id =
                                      rct.cust_trx_type_seq_id
                               AND (   EXISTS
                                          (SELECT (1)
                                             FROM ar_receivable_applications_all
                                            WHERE     TRUNC (gl_date) > :p_as_of_date
                                                  AND applied_customer_trx_id =
                                                         rct.customer_trx_id)
                                    OR (EXISTS
                                           (SELECT (1)
                                              FROM ar_adjustments_all
                                             WHERE     TRUNC (gl_date) >
                                                          :p_as_of_date
                                                           AND  NVL(STATUS,'#')<> NVL('R','#')
                                                   AND customer_trx_id =
                                                          rct.customer_trx_id)))
                               AND rct.complete_flag = 'Y'
                               AND rpsa.status = 'CL'
                               AND rtt.TYPE IN ('INV', 'DM', 'DEP', 'CB')
                               AND rlg.account_class = 'REC'
                               AND rct.trx_number = due.trx_num(+)
                               AND rct.org_id = NVL ( (SELECT organization_id
                                                         FROM hr_operating_units
                                                        WHERE NAME = :p_org_name),
                                                     rct.org_id)
                               --   AND gcc.segment1=:p_unit
                               AND TRUNC (rlg.gl_date) <= :p_as_of_date
                               AND hzp.party_id =
                                      NVL ( (SELECT h.party_id
                                               FROM hz_parties h
                                              WHERE h.party_name = :p_cust),
                                           hzp.party_id)
                      GROUP BY hzp.party_name,
                               hzp.party_id,
                               hzp.party_type,
                               hzc.account_number,
                               rct.customer_trx_id,
                               rct.bill_to_site_use_id,
                               rct.trx_number,
                               rtt.TYPE,
                               rtt.NAME,
                               rct.trx_date,
                               due.trx_date,
                               due.due_date,
                               rlg.gl_date,
                               rpsa.due_date,
                               rct.invoice_currency_code,
                               rct.exchange_rate,
                               rpsa.exchange_rate,
                               rct.org_id,
                               rpsa.amount_due_original,
                               rpsa.CLASS,
                               rlg.customer_trx_id,
                               rlg.code_combination_id,
                               rlg.account_class,
                               RCT.BILL_TO_CUSTOMER_ID,gcc.segment1,gcc.segment2
--                               ,gcc.segment1 
                                     ,gcc.segment3
                                     ,gcc.segment4 
                                     ,gcc.segment5 
                                     ,gcc.segment6 
                                     ,gcc.segment7 
                                     ,gcc.segment8 
                                     ,gcc.segment9 
                     UNION ALL
                     
                         SELECT '3' SNO,
                               (SELECT segment1
                                  FROM gl_code_combinations
                                 WHERE code_combination_id = rlg.code_combination_id AND ROWNUM=1)
                                  unit,
                               rct.exchange_rate,
                               rct.org_id,
                               hzp.party_id party_id,
                               hzp.party_name,
                               hzp.party_type,
                               hzc.account_number customer_number,
                               rct.customer_trx_id,
                               (SELECT segment2
                                  FROM gl_code_combinations
                                 WHERE code_combination_id = rlg.code_combination_id AND ROWNUM=1)
                                  receivable_acct,
                              (select hps.PARTY_SITE_NUMBER from
                                hz_cust_site_uses_all hcs,hz_cust_acct_sites_all hcas,hz_party_sites hps
                                   WHERE hcs.site_use_id=rct.bill_to_site_use_id 
                                    and hps.party_id=hzp.party_id
                                    AND hcas.cust_acct_site_id = hcs.cust_acct_site_id
                                    AND hps.party_site_id = hcas.party_site_id AND ROWNUM=1)
                                  customer_site,
                               DECODE (rtt.TYPE, 'CM', 'CREDIT MEMO') invoice_type,
                               rct.trx_number invoice_number,
                               rtt.NAME transaction_type,
                               NVL (due.trx_date, rct.trx_date) invoice_date,
                               rlg.gl_date gl_date,
                               NVL (due.due_date, rpsa.due_date) due_date,
                               rct.invoice_currency_code,
                               rpsa.amount_due_original invoice_amount,
                                 (NVL (
                                     (SELECT SUM (amount_applied)
                                        FROM ar_receivable_applications_all
                                       WHERE     status = 'APP'
                                             AND customer_trx_id =
                                                    rct.customer_trx_id
                                             AND TRUNC (gl_date) <= :p_as_of_date),
                                     0))
                               - (NVL (
                                     (SELECT SUM (amount)
                                        FROM ar_adjustments_all
                                       WHERE     customer_trx_id =
                                                    rct.customer_trx_id
                                                     AND  NVL(STATUS,'#')<> NVL('R','#')
                                             AND TRUNC (gl_date) <= :p_as_of_date),
                                     0))
                                  amount_received,
                                 rpsa.amount_due_original
                               - (  NVL (
                                       (SELECT (SUM (amount_applied) * -1)
                                          FROM ar_receivable_applications_all
                                         WHERE     status = 'APP'
    --                                           AND applied_customer_trx_id = rct.customer_trx_id
                                               AND customer_trx_id = rct.customer_trx_id
                                               AND TRUNC (gl_date) <= :p_as_of_date),
                                       0)
                                  - NVL (
                                       (SELECT SUM (amount)
                                          FROM ar_adjustments_all
                                         WHERE     customer_trx_id =
                                                      rct.customer_trx_id
                                                       AND  NVL(STATUS,'#')<> NVL('R','#')
                                               AND TRUNC (gl_date) <= :p_as_of_date),
                                       0))
                                  balance_amount,
                               DECODE (
                                  rct.exchange_rate,
                                  NULL, (  rpsa.amount_due_original
                                         - (  NVL (
                                                 (SELECT (SUM (amount_applied) * -1)
                                                    FROM ar_receivable_applications_all
                                                   WHERE     status = 'APP'
                                                         AND customer_trx_id =
                                                                rct.customer_trx_id
                                                         AND TRUNC (gl_date) <=
                                                                :p_as_of_date),
                                                 0)
                                            - NVL (
                                                 (SELECT SUM (amount)
                                                    FROM ar_adjustments_all
                                                   WHERE     customer_trx_id =
                                                                rct.customer_trx_id
                                                                 AND  NVL(STATUS,'#')<> NVL('R','#')
                                                         AND TRUNC (gl_date) <=
                                                                :p_as_of_date),
                                                 0))),
                                  (  (  rpsa.amount_due_original
                                      - (  NVL (
                                              (SELECT (SUM (amount_applied) * -1)
                                                 FROM ar_receivable_applications_all
                                                WHERE     status = 'APP'
                                                      AND customer_trx_id =
                                                             rct.customer_trx_id
                                                      AND TRUNC (gl_date) <=
                                                             :p_as_of_date),
                                              0)
                                         - NVL (
                                              (SELECT SUM (amount)
                                                 FROM ar_adjustments_all
                                                WHERE     customer_trx_id =
                                                             rct.customer_trx_id
                                                              AND  NVL(STATUS,'#')<> NVL('R','#')
                                                      AND TRUNC (gl_date) <=
                                                             :p_as_of_date),
                                              0)))
                                   * rct.exchange_rate))
                                  bal_func_amt,
                               (SELECT TO_CHAR (
                                          (  (  rpsa.amount_due_original
                                              - (  NVL (
                                                      (SELECT (SUM (amount_applied) * -1)
                                                         FROM ar_receivable_applications_all
                                                        WHERE     status = 'APP'
                                                              AND customer_trx_id =
                                                                     rct.customer_trx_id
                                                              AND TRUNC (gl_date) <=
                                                                     :p_as_of_date),
                                                      0)
                                                 - NVL (
                                                      (SELECT SUM (amount)
                                                         FROM ar_adjustments_all
                                                        WHERE     customer_trx_id =
                                                                     rct.customer_trx_id
                                                                      AND  NVL(STATUS,'#')<> NVL('R','#')
                                                              AND TRUNC (gl_date) <=
                                                                     :p_as_of_date),
                                                      0)))
                                           * NVL (rpsa.exchange_rate, 1)),
                                          fnd_currency.get_format_mask (
                                             rct.invoice_currency_code,
                                             40))
                                  FROM DUAL
                                 WHERE CEIL (
                                            TO_DATE (
                                               TO_CHAR ( (:p_as_of_date),
                                                        'DD-MON-RR'),
                                               'DD-MON-RR')
                                          - NVL (due.due_date, rpsa.due_date)) < 0)
                                  not_due,
                               (SELECT TO_CHAR (
                                          (  (  rpsa.amount_due_original
                                              - (  NVL (
                                                      (SELECT (SUM (amount_applied) * -1)
                                                         FROM ar_receivable_applications_all
                                                        WHERE     status = 'APP'
                                                              AND customer_trx_id =
                                                                     rct.customer_trx_id
                                                              AND TRUNC (gl_date) <=
                                                                     :p_as_of_date),
                                                      0)
                                                 - NVL (
                                                      (SELECT SUM (amount)
                                                         FROM ar_adjustments_all
                                                        WHERE     customer_trx_id =
                                                                     rct.customer_trx_id
                                                                      AND  NVL(STATUS,'#')<> NVL('R','#')
                                                              AND TRUNC (gl_date) <=
                                                                     :p_as_of_date),
                                                      0)))
                                           * NVL (rpsa.exchange_rate, 1)),
                                          fnd_currency.get_format_mask (
                                             rct.invoice_currency_code,
                                             40))
                                  FROM DUAL
                                 WHERE CEIL (
                                            TO_DATE (
                                               TO_CHAR ( (:p_as_of_date),
                                                        'DD-MON-RR'),
                                               'DD-MON-RR')
                                          - NVL (due.due_date, rpsa.due_date)) =0
                                                                                   )
                                  "Bucket_0",
                               (SELECT TO_CHAR (
                                          (  (  rpsa.amount_due_original
                                              - (  NVL (
                                                      (SELECT (SUM (amount_applied) * -1)
                                                         FROM ar_receivable_applications_all
                                                        WHERE     status = 'APP'
                                                              AND customer_trx_id =
                                                                     rct.customer_trx_id
                                                              AND TRUNC (gl_date) <=
                                                                     :p_as_of_date),
                                                      0)
                                                 - NVL (
                                                      (SELECT SUM (amount)
                                                         FROM ar_adjustments_all
                                                        WHERE     customer_trx_id =
                                                                     rct.customer_trx_id
                                                                      AND  NVL(STATUS,'#')<> NVL('R','#')
                                                              AND TRUNC (gl_date) <=
                                                                     :p_as_of_date),
                                                      0)))
                                           * NVL (rpsa.exchange_rate, 1)),
                                          fnd_currency.get_format_mask (
                                             rct.invoice_currency_code,
                                             40))
                                  FROM DUAL
                                 WHERE CEIL (
                                            TO_DATE (
                                               TO_CHAR ( (:p_as_of_date),
                                                        'DD-MON-RR'),
                                               'DD-MON-RR')
                                          - NVL (due.due_date, rpsa.due_date)) BETWEEN 1
                                                                                   AND 30)
                                  bucket_1,
                               (SELECT TO_CHAR (
                                          (  (  rpsa.amount_due_original
                                              - (  NVL (
                                                      (SELECT (SUM (amount_applied) * -1)
                                                         FROM ar_receivable_applications_all
                                                        WHERE     status = 'APP'
                                                              AND customer_trx_id =
                                                                     rct.customer_trx_id
                                                              AND TRUNC (gl_date) <=
                                                                     :p_as_of_date),
                                                      0)
                                                 - NVL (
                                                      (SELECT SUM (amount)
                                                         FROM ar_adjustments_all
                                                        WHERE     customer_trx_id =
                                                                     rct.customer_trx_id
                                                                      AND  NVL(STATUS,'#')<> NVL('R','#')
                                                              AND TRUNC (gl_date) <=
                                                                     :p_as_of_date),
                                                      0)))
                                           * NVL (rpsa.exchange_rate, 1)),
                                          fnd_currency.get_format_mask (
                                             rct.invoice_currency_code,
                                             40))
                                  FROM DUAL
                                 WHERE CEIL (
                                            TO_DATE (
                                               TO_CHAR ( (:p_as_of_date),
                                                        'DD-MON-RR'),
                                               'DD-MON-RR')
                                          - NVL (due.due_date, rpsa.due_date)) BETWEEN 31
                                                                                   AND 60)
                                  bucket_2,
                               (SELECT TO_CHAR (
                                          (  (  rpsa.amount_due_original
                                              - (  NVL (
                                                      (SELECT (SUM (amount_applied) * -1)
                                                         FROM ar_receivable_applications_all
                                                        WHERE     status = 'APP'
                                                              AND customer_trx_id =
                                                                     rct.customer_trx_id
                                                              AND TRUNC (gl_date) <=
                                                                     :p_as_of_date),
                                                      0)
                                                 - NVL (
                                                      (SELECT SUM (amount)
                                                         FROM ar_adjustments_all
                                                        WHERE     customer_trx_id =
                                                                     rct.customer_trx_id
                                                                      AND  NVL(STATUS,'#')<> NVL('R','#')
                                                              AND TRUNC (gl_date) <=
                                                                     :p_as_of_date),
                                                      0)))
                                           * NVL (rpsa.exchange_rate, 1)),
                                          fnd_currency.get_format_mask (
                                             rct.invoice_currency_code,
                                             40))
                                  FROM DUAL
                                 WHERE CEIL (
                                            TO_DATE (
                                               TO_CHAR ( (:p_as_of_date),
                                                        'DD-MON-RR'),
                                               'DD-MON-RR')
                                          - NVL (due.due_date, rpsa.due_date)) BETWEEN 61
                                                                                   AND 90)
                                  bucket_3,
                               (SELECT TO_CHAR (
                                          (  (  rpsa.amount_due_original
                                              - (  NVL (
                                                      (SELECT (SUM (amount_applied) * -1)
                                                         FROM ar_receivable_applications_all
                                                        WHERE     status = 'APP'
                                                              AND customer_trx_id =
                                                                     rct.customer_trx_id
                                                              AND TRUNC (gl_date) <=
                                                                     :p_as_of_date),
                                                      0)
                                                 - NVL (
                                                      (SELECT SUM (amount)
                                                         FROM ar_adjustments_all
                                                        WHERE     customer_trx_id =
                                                                     rct.customer_trx_id
                                                                      AND  NVL(STATUS,'#')<> NVL('R','#')
                                                              AND TRUNC (gl_date) <=
                                                                     :p_as_of_date),
                                                      0)))
                                           * NVL (rpsa.exchange_rate, 1)),
                                          fnd_currency.get_format_mask (
                                             rct.invoice_currency_code,
                                             40))
                                  FROM DUAL
                                 WHERE CEIL (
                                            TO_DATE (
                                               TO_CHAR ( (:p_as_of_date),
                                                        'DD-MON-RR'),
                                               'DD-MON-RR')
                                          - NVL (due.due_date, rpsa.due_date)) BETWEEN 91
                                                                                   AND 120)
                                  bucket_4,
                               (SELECT TO_CHAR (
                                          (  (  rpsa.amount_due_original
                                              - (  NVL (
                                                      (SELECT (SUM (amount_applied) * -1)
                                                         FROM ar_receivable_applications_all
                                                        WHERE     status = 'APP'
                                                              AND customer_trx_id =
                                                                     rct.customer_trx_id
                                                              AND TRUNC (gl_date) <=
                                                                     :p_as_of_date),
                                                      0)
                                                 - NVL (
                                                      (SELECT SUM (amount)
                                                         FROM ar_adjustments_all
                                                        WHERE     customer_trx_id =
                                                                     rct.customer_trx_id
                                                                      AND  NVL(STATUS,'#')<> NVL('R','#')
                                                              AND TRUNC (gl_date) <=
                                                                     :p_as_of_date),
                                                      0)))
                                           * NVL (rpsa.exchange_rate, 1)),
                                          fnd_currency.get_format_mask (
                                             rct.invoice_currency_code,
                                             40))
                                  FROM DUAL
                                 WHERE CEIL (
                                            TO_DATE (
                                               TO_CHAR ( (:p_as_of_date),
                                                        'DD-MON-RR'),
                                               'DD-MON-RR')
                                          - NVL (due.due_date, rpsa.due_date)) BETWEEN 121
                                                                                   AND 150)
                                  bucket_5,
                               (SELECT TO_CHAR (
                                          (  (  rpsa.amount_due_original
                                              - (  NVL (
                                                      (SELECT (SUM (amount_applied) * -1)
                                                         FROM ar_receivable_applications_all
                                                        WHERE     status = 'APP'
                                                              AND customer_trx_id =
                                                                     rct.customer_trx_id
                                                              AND TRUNC (gl_date) <=
                                                                     :p_as_of_date),
                                                      0)
                                                 - NVL (
                                                      (SELECT SUM (amount)
                                                         FROM ar_adjustments_all
                                                        WHERE     customer_trx_id =
                                                                     rct.customer_trx_id
                                                                      AND  NVL(STATUS,'#')<> NVL('R','#')
                                                              AND TRUNC (gl_date) <=
                                                                     :p_as_of_date),
                                                      0)))
                                           * NVL (rpsa.exchange_rate, 1)),
                                          fnd_currency.get_format_mask (
                                             rct.invoice_currency_code,
                                             40))
                                  FROM DUAL
                                 WHERE CEIL (
                                            TO_DATE (
                                               TO_CHAR ( (:p_as_of_date),
                                                        'DD-MON-RR'),
                                               'DD-MON-RR')
                                          - NVL (due.due_date, rpsa.due_date)) between 151 and 180
                                                                                   )
                                  bucket_6,
        ---------------upendra
          (SELECT TO_CHAR (
                                          (  (  rpsa.amount_due_original
                                              - (  NVL (
                                                      (SELECT SUM (amount_applied)
                                                         FROM ar_receivable_applications_all
                                                        WHERE     status = 'APP'
                                                              AND applied_customer_trx_id =
                                                                     rct.customer_trx_id
                                                              AND TRUNC (gl_date) <=
                                                                     :p_as_of_date),
                                                      0)
                                                 - NVL (
                                                      (SELECT SUM (amount)
                                                         FROM ar_adjustments_all
                                                        WHERE     customer_trx_id =
                                                                     rct.customer_trx_id
                                                                      AND  NVL(STATUS,'#')<> NVL('R','#')
                                                              AND TRUNC (gl_date) <=
                                                                     :p_as_of_date),
                                                      0)))
                                           * NVL (rpsa.exchange_rate, 1)),
                                          fnd_currency.get_format_mask (
                                             rct.invoice_currency_code,
                                             40))
                                  FROM DUAL
                                 WHERE CEIL (
                                            TO_DATE (
                                               TO_CHAR ( (:p_as_of_date),
                                                        'DD-MON-RR'),
                                               'DD-MON-RR')
                                          - NVL (due.due_date, rpsa.due_date)) BETWEEN 181 AND 210)
                                  bucket_7,
                                   (SELECT TO_CHAR (
                                          (  (  rpsa.amount_due_original
                                              - (  NVL (
                                                      (SELECT SUM (amount_applied)
                                                         FROM ar_receivable_applications_all
                                                        WHERE     status = 'APP'
                                                              AND applied_customer_trx_id =
                                                                     rct.customer_trx_id
                                                              AND TRUNC (gl_date) <=
                                                                     :p_as_of_date),
                                                      0)
                                                 - NVL (
                                                      (SELECT SUM (amount)
                                                         FROM ar_adjustments_all
                                                        WHERE     customer_trx_id =
                                                                     rct.customer_trx_id
                                                                      AND  NVL(STATUS,'#')<> NVL('R','#')
                                                              AND TRUNC (gl_date) <=
                                                                     :p_as_of_date),
                                                      0)))
                                           * NVL (rpsa.exchange_rate, 1)),
                                          fnd_currency.get_format_mask (
                                             rct.invoice_currency_code,
                                             40))
                                  FROM DUAL
                                 WHERE CEIL (
                                            TO_DATE (
                                               TO_CHAR ( (:p_as_of_date),
                                                        'DD-MON-RR'),
                                               'DD-MON-RR')
                                          - NVL (due.due_date, rpsa.due_date)) BETWEEN 211 AND 240)
                                  bucket_8,
                                   (SELECT TO_CHAR (
                                          (  (  rpsa.amount_due_original
                                              - (  NVL (
                                                      (SELECT SUM (amount_applied)
                                                         FROM ar_receivable_applications_all
                                                        WHERE     status = 'APP'
                                                              AND applied_customer_trx_id =
                                                                     rct.customer_trx_id
                                                              AND TRUNC (gl_date) <=
                                                                     :p_as_of_date),
                                                      0)
                                                 - NVL (
                                                      (SELECT SUM (amount)
                                                         FROM ar_adjustments_all
                                                        WHERE     customer_trx_id =
                                                                     rct.customer_trx_id
                                                                      AND  NVL(STATUS,'#')<> NVL('R','#')
                                                              AND TRUNC (gl_date) <=
                                                                     :p_as_of_date),
                                                      0)))
                                           * NVL (rpsa.exchange_rate, 1)),
                                          fnd_currency.get_format_mask (
                                             rct.invoice_currency_code,
                                             40))
                                  FROM DUAL
                                 WHERE CEIL (
                                            TO_DATE (
                                               TO_CHAR ( (:p_as_of_date),
                                                        'DD-MON-RR'),
                                               'DD-MON-RR')
                                          - NVL (due.due_date, rpsa.due_date)) BETWEEN 241 AND 270)
                                  bucket_9,
                                   (SELECT TO_CHAR (
                                          (  (  rpsa.amount_due_original
                                              - (  NVL (
                                                      (SELECT SUM (amount_applied)
                                                         FROM ar_receivable_applications_all
                                                        WHERE     status = 'APP'
                                                              AND applied_customer_trx_id =
                                                                     rct.customer_trx_id
                                                              AND TRUNC (gl_date) <=
                                                                     :p_as_of_date),
                                                      0)
                                                 - NVL (
                                                      (SELECT SUM (amount)
                                                         FROM ar_adjustments_all
                                                        WHERE     customer_trx_id =
                                                                     rct.customer_trx_id
                                                                      AND  NVL(STATUS,'#')<> NVL('R','#')
                                                              AND TRUNC (gl_date) <=
                                                                     :p_as_of_date),
                                                      0)))
                                           * NVL (rpsa.exchange_rate, 1)),
                                          fnd_currency.get_format_mask (
                                             rct.invoice_currency_code,
                                             40))
                                  FROM DUAL
                                 WHERE CEIL (
                                            TO_DATE (
                                               TO_CHAR ( (:p_as_of_date),
                                                        'DD-MON-RR'),
                                               'DD-MON-RR')
                                          - NVL (due.due_date, rpsa.due_date)) BETWEEN 271 AND 300)
                                  bucket_10,
                                   (SELECT TO_CHAR (
                                          (  (  rpsa.amount_due_original
                                              - (  NVL (
                                                      (SELECT SUM (amount_applied)
                                                         FROM ar_receivable_applications_all
                                                        WHERE     status = 'APP'
                                                              AND applied_customer_trx_id =
                                                                     rct.customer_trx_id
                                                              AND TRUNC (gl_date) <=
                                                                     :p_as_of_date),
                                                      0)
                                                 - NVL (
                                                      (SELECT SUM (amount)
                                                         FROM ar_adjustments_all
                                                        WHERE     customer_trx_id =
                                                                     rct.customer_trx_id
                                                                      AND  NVL(STATUS,'#')<> NVL('R','#')
                                                              AND TRUNC (gl_date) <=
                                                                     :p_as_of_date),
                                                      0)))
                                           * NVL (rpsa.exchange_rate, 1)),
                                          fnd_currency.get_format_mask (
                                             rct.invoice_currency_code,
                                             40))
                                  FROM DUAL
                                 WHERE CEIL (
                                            TO_DATE (
                                               TO_CHAR ( (:p_as_of_date),
                                                        'DD-MON-RR'),
                                               'DD-MON-RR')
                                          - NVL (due.due_date, rpsa.due_date)) BETWEEN 301 AND 330)
                                  bucket_11,
                                   (SELECT TO_CHAR (
                                          (  (  rpsa.amount_due_original
                                              - (  NVL (
                                                      (SELECT SUM (amount_applied)
                                                         FROM ar_receivable_applications_all
                                                        WHERE     status = 'APP'
                                                              AND applied_customer_trx_id =
                                                                     rct.customer_trx_id
                                                              AND TRUNC (gl_date) <=
                                                                     :p_as_of_date),
                                                      0)
                                                 - NVL (
                                                      (SELECT SUM (amount)
                                                         FROM ar_adjustments_all
                                                        WHERE     customer_trx_id =
                                                                     rct.customer_trx_id
                                                                      AND  NVL(STATUS,'#')<> NVL('R','#')
                                                              AND TRUNC (gl_date) <=
                                                                     :p_as_of_date),
                                                      0)))
                                           * NVL (rpsa.exchange_rate, 1)),
                                          fnd_currency.get_format_mask (
                                             rct.invoice_currency_code,
                                             40))
                                  FROM DUAL
                                 WHERE CEIL (
                                            TO_DATE (
                                               TO_CHAR ( (:p_as_of_date),
                                                        'DD-MON-RR'),
                                               'DD-MON-RR')
                                          - NVL (due.due_date, rpsa.due_date)) BETWEEN 331 AND 365)
                                  bucket_12,
                                   (SELECT TO_CHAR (
                                          (  (  rpsa.amount_due_original
                                              - (  NVL (
                                                      (SELECT SUM (amount_applied)
                                                         FROM ar_receivable_applications_all
                                                        WHERE     status = 'APP'
                                                              AND applied_customer_trx_id =
                                                                     rct.customer_trx_id
                                                              AND TRUNC (gl_date) <=
                                                                     :p_as_of_date),
                                                      0)
                                                 - NVL (
                                                      (SELECT SUM (amount)
                                                         FROM ar_adjustments_all
                                                        WHERE     customer_trx_id =
                                                                     rct.customer_trx_id
                                                                      AND  NVL(STATUS,'#')<> NVL('R','#')
                                                              AND TRUNC (gl_date) <=
                                                                     :p_as_of_date),
                                                      0)))
                                           * NVL (rpsa.exchange_rate, 1)),
                                          fnd_currency.get_format_mask (
                                             rct.invoice_currency_code,
                                             40))
                                  FROM DUAL
                                 WHERE CEIL (
                                            TO_DATE (
                                               TO_CHAR ( (:p_as_of_date),
                                                        'DD-MON-RR'),
                                               'DD-MON-RR')
                                          - NVL (due.due_date, rpsa.due_date)) BETWEEN 366 AND 730)
                                  bucket_13,
                                   (SELECT TO_CHAR (
                                          (  (  rpsa.amount_due_original
                                              - (  NVL (
                                                      (SELECT SUM (amount_applied)
                                                         FROM ar_receivable_applications_all
                                                        WHERE     status = 'APP'
                                                              AND applied_customer_trx_id =
                                                                     rct.customer_trx_id
                                                              AND TRUNC (gl_date) <=
                                                                     :p_as_of_date),
                                                      0)
                                                 - NVL (
                                                      (SELECT SUM (amount)
                                                         FROM ar_adjustments_all
                                                        WHERE     customer_trx_id =
                                                                     rct.customer_trx_id
                                                                      AND  NVL(STATUS,'#')<> NVL('R','#')
                                                              AND TRUNC (gl_date) <=
                                                                     :p_as_of_date),
                                                      0)))
                                           * NVL (rpsa.exchange_rate, 1)),
                                          fnd_currency.get_format_mask (
                                             rct.invoice_currency_code,
                                             40))
                                  FROM DUAL
                                 WHERE CEIL (
                                            TO_DATE (
                                               TO_CHAR ( (:p_as_of_date),
                                                        'DD-MON-RR'),
                                               'DD-MON-RR')
                                          - NVL (due.due_date, rpsa.due_date)) >=731)
                                  bucket_14,
                                       
        
        ---upendra                          
                               (SELECT TO_CHAR (
                                          (  (  rpsa.amount_due_original
                                              - (  NVL (
                                                      (SELECT (SUM (amount_applied) * -1)
                                                         FROM ar_receivable_applications_all
                                                        WHERE     status = 'APP'
                                                              AND customer_trx_id =
                                                                     rct.customer_trx_id
                                                              AND TRUNC (gl_date) <=
                                                                     :p_as_of_date),
                                                      0)
                                                 - NVL (
                                                      (SELECT SUM (amount)
                                                         FROM ar_adjustments_all
                                                        WHERE     customer_trx_id =
                                                                     rct.customer_trx_id
                                                                      AND  NVL(STATUS,'#')<> NVL('R','#')
                                                              AND TRUNC (gl_date) <=
                                                                     :p_as_of_date),
                                                      0)))
                                           * NVL (rpsa.exchange_rate, 1)),
                                          fnd_currency.get_format_mask (
                                             rct.invoice_currency_code,
                                             40))
                                  FROM DUAL
                                 WHERE CEIL (
                                            TO_DATE (
                                               TO_CHAR ( (:p_as_of_date),
                                                        'DD-MON-RR'),
                                               'DD-MON-RR')
                                          - (rct.trx_date)) =0
                                                                )
                                  bucket_0_i,
                               (SELECT TO_CHAR (
                                          (  (  rpsa.amount_due_original
                                              - (  NVL (
                                                      (SELECT (SUM (amount_applied) * -1)
                                                         FROM ar_receivable_applications_all
                                                        WHERE     status = 'APP'
                                                              AND customer_trx_id =
                                                                     rct.customer_trx_id
                                                              AND TRUNC (gl_date) <=
                                                                     :p_as_of_date),
                                                      0)
                                                 - NVL (
                                                      (SELECT SUM (amount)
                                                         FROM ar_adjustments_all
                                                        WHERE     customer_trx_id =
                                                                     rct.customer_trx_id
                                                                      AND  NVL(STATUS,'#')<> NVL('R','#')
                                                              AND TRUNC (gl_date) <=
                                                                     :p_as_of_date),
                                                      0)))
                                           * NVL (rpsa.exchange_rate, 1)),
                                          fnd_currency.get_format_mask (
                                             rct.invoice_currency_code,
                                             40))
                                  FROM DUAL
                                 WHERE CEIL (
                                            TO_DATE (
                                               TO_CHAR ( (:p_as_of_date),
                                                        'DD-MON-RR'),
                                               'DD-MON-RR')
                                          - (rct.trx_date)) BETWEEN 1
                                                                AND 30)
                                  bucket_1_i,
                               (SELECT TO_CHAR (
                                          (  (  rpsa.amount_due_original
                                              - (  NVL (
                                                      (SELECT (SUM (amount_applied) * -1)
                                                         FROM ar_receivable_applications_all
                                                        WHERE     status = 'APP'
                                                              AND customer_trx_id =
                                                                     rct.customer_trx_id
                                                              AND TRUNC (gl_date) <=
                                                                     :p_as_of_date),
                                                      0)
                                                 - NVL (
                                                      (SELECT SUM (amount)
                                                         FROM ar_adjustments_all
                                                        WHERE     customer_trx_id =
                                                                     rct.customer_trx_id
                                                                      AND  NVL(STATUS,'#')<> NVL('R','#')
                                                              AND TRUNC (gl_date) <=
                                                                     :p_as_of_date),
                                                      0)))
                                           * NVL (rpsa.exchange_rate, 1)),
                                          fnd_currency.get_format_mask (
                                             rct.invoice_currency_code,
                                             40))
                                  FROM DUAL
                                 WHERE CEIL (
                                            TO_DATE (
                                               TO_CHAR ( (:p_as_of_date),
                                                        'DD-MON-RR'),
                                               'DD-MON-RR')
                                          - (rct.trx_date)) BETWEEN 31
                                                                AND 60)
                                  bucket_2_i,
                               (SELECT TO_CHAR (
                                          (  (  rpsa.amount_due_original
                                              - (  NVL (
                                                      (SELECT (SUM (amount_applied) * -1)
                                                         FROM ar_receivable_applications_all
                                                        WHERE     status = 'APP'
                                                              AND customer_trx_id =
                                                                     rct.customer_trx_id
                                                              AND TRUNC (gl_date) <=
                                                                     :p_as_of_date),
                                                      0)
                                                 - NVL (
                                                      (SELECT SUM (amount)
                                                         FROM ar_adjustments_all
                                                        WHERE     customer_trx_id =
                                                                     rct.customer_trx_id
                                                                      AND  NVL(STATUS,'#')<> NVL('R','#')
                                                              AND TRUNC (gl_date) <=
                                                                     :p_as_of_date),
                                                      0)))
                                           * NVL (rpsa.exchange_rate, 1)),
                                          fnd_currency.get_format_mask (
                                             rct.invoice_currency_code,
                                             40))
                                  FROM DUAL
                                 WHERE CEIL (
                                            TO_DATE (
                                               TO_CHAR ( (:p_as_of_date),
                                                        'DD-MON-RR'),
                                               'DD-MON-RR')
                                          - (rct.trx_date)) BETWEEN 61
                                                                AND 90)
                                  bucket_3_i,
                               (SELECT TO_CHAR (
                                          (  (  rpsa.amount_due_original
                                              - (  NVL (
                                                      (SELECT (SUM (amount_applied) * -1)
                                                         FROM ar_receivable_applications_all
                                                        WHERE     status = 'APP'
                                                              AND customer_trx_id =
                                                                     rct.customer_trx_id
                                                              AND TRUNC (gl_date) <=
                                                                     :p_as_of_date),
                                                      0)
                                                 - NVL (
                                                      (SELECT SUM (amount)
                                                         FROM ar_adjustments_all
                                                        WHERE     customer_trx_id =
                                                                     rct.customer_trx_id
                                                                      AND  NVL(STATUS,'#')<> NVL('R','#')
                                                              AND TRUNC (gl_date) <=
                                                                     :p_as_of_date),
                                                      0)))
                                           * NVL (rpsa.exchange_rate, 1)),
                                          fnd_currency.get_format_mask (
                                             rct.invoice_currency_code,
                                             40))
                                  FROM DUAL
                                 WHERE CEIL (
                                            TO_DATE (
                                               TO_CHAR ( (:p_as_of_date),
                                                        'DD-MON-RR'),
                                               'DD-MON-RR')
                                          - (rct.trx_date)) BETWEEN 91
                                                                AND 120)
                                  bucket_4_i,
                               (SELECT TO_CHAR (
                                          (  (  rpsa.amount_due_original
                                              - (  NVL (
                                                      (SELECT (SUM (amount_applied) * -1)
                                                         FROM ar_receivable_applications_all
                                                        WHERE     status = 'APP'
                                                              AND customer_trx_id =
                                                                     rct.customer_trx_id
                                                              AND TRUNC (gl_date) <=
                                                                     :p_as_of_date),
                                                      0)
                                                 - NVL (
                                                      (SELECT SUM (amount)
                                                         FROM ar_adjustments_all
                                                        WHERE     customer_trx_id =
                                                                     rct.customer_trx_id
                                                                      AND  NVL(STATUS,'#')<> NVL('R','#')
                                                              AND TRUNC (gl_date) <=
                                                                     :p_as_of_date),
                                                      0)))
                                           * NVL (rpsa.exchange_rate, 1)),
                                          fnd_currency.get_format_mask (
                                             rct.invoice_currency_code,
                                             40))
                                  FROM DUAL
                                 WHERE CEIL (
                                            TO_DATE (
                                               TO_CHAR ( (:p_as_of_date),
                                                        'DD-MON-RR'),
                                               'DD-MON-RR')
                                          - (rct.trx_date)) BETWEEN 121
                                                                AND 150)
                                  bucket_5_i,
                               (SELECT TO_CHAR (
                                          (  (  rpsa.amount_due_original
                                              - (  NVL (
                                                      (SELECT (SUM (amount_applied) * -1)
                                                         FROM ar_receivable_applications_all
                                                        WHERE     status = 'APP'
                                                              AND customer_trx_id =
                                                                     rct.customer_trx_id
                                                              AND TRUNC (gl_date) <=
                                                                     :p_as_of_date),
                                                      0)
                                                 - NVL (
                                                      (SELECT SUM (amount)
                                                         FROM ar_adjustments_all
                                                        WHERE     customer_trx_id =
                                                                     rct.customer_trx_id
                                                                      AND  NVL(STATUS,'#')<> NVL('R','#')
                                                              AND TRUNC (gl_date) <=
                                                                     :p_as_of_date),
                                                      0)))
                                           * NVL (rpsa.exchange_rate, 1)),
                                          fnd_currency.get_format_mask (
                                             rct.invoice_currency_code,
                                             40))
                                  FROM DUAL
                                 WHERE CEIL (
                                            TO_DATE (
                                               TO_CHAR ( (:p_as_of_date),
                                                        'DD-MON-RR'),
                                               'DD-MON-RR')
                                          - (rct.trx_date)) >= 151)
                                  bucket_6_i,
                               RCT.BILL_TO_CUSTOMER_ID,
                               gcc.segment1 entity ,
                               (SELECT RCTL.DESCRIPTION
                                     FROM RA_CUSTOMER_TRX_LINES_ALL RCTL
                                     WHERE 1=1
                                     AND RCTL.CUSTOMER_TRX_ID=RCT.CUSTOMER_TRX_ID
                                      AND RCTL.LINE_TYPE='LINE'
                                     AND ROWNUM=1)LINE_DESC
                                     ,gcc.segment2 GL_code  --FTP1125
                                     ,gcc.segment1 entity1
                                     ,gcc.segment3 cost_center
                                     ,gcc.segment4 prj
                                     ,gcc.segment5 corp_fun
                                     ,gcc.segment6 loc
                                     ,gcc.segment7 inter_com
                                     ,gcc.segment8 fut1
                                     ,gcc.segment9 fut2
                          FROM ra_customer_trx_all rct,
                               ra_cust_trx_line_gl_dist_all rlg,
                               ar_payment_schedules_all rpsa,
                               hz_parties hzp,
                               hz_cust_accounts hzc,
                               hz_cust_accounts hca,
                               ra_batch_sources_all rbs,
                               ra_cust_trx_types_all rtt,
                               gl_code_combinations gcc,
                               (SELECT lookup_code,
                                       meaning trx_num,
                                       description pay_term,
                                       start_date_active trx_date,
                                       end_date_active due_date
                                  FROM fnd_lookup_values
                                 WHERE     lookup_type = 'STL_AR_NUM_PHASE2'
                                       AND enabled_flag = 'Y') due
                         WHERE     rlg.customer_trx_id = rct.customer_trx_id
                               AND rpsa.customer_trx_id = rct.customer_trx_id
                               AND rlg.code_combination_id = gcc.code_combination_id
                               AND hzc.party_id = hzp.party_id
                               AND hzc.cust_account_id = rct.bill_to_customer_id
                               AND hca.cust_account_id(+) = rct.ship_to_customer_id
                               AND rbs.batch_source_seq_id = rct.batch_source_seq_id
                               AND rtt.cust_trx_type_seq_id =
                                      rct.cust_trx_type_seq_id
                               AND rct.complete_flag = 'Y'
                               AND rpsa.status = 'OP'
                               AND rtt.TYPE = 'CM'
                               AND rlg.account_class = 'REC'
                               AND rct.trx_number = due.trx_num(+)
                               --  AND rct.org_id = nvl(:p_org_name ,rct.org_id)
                               AND rct.org_id = NVL ( (SELECT organization_id
                                                         FROM hr_operating_units
                                                        WHERE NAME = :p_org_name),
                                                     rct.org_id)
                               --   AND gcc.segment1=:p_unit
                               AND TRUNC (rlg.gl_date) <= :p_as_of_date
                               AND hzp.party_id =
                                      NVL ( (SELECT h.party_id
                                               FROM hz_parties h
                                              WHERE h.party_name = :p_cust),
                                           hzp.party_id)
--                                  AND rct.trx_number='121/DL/20/I0008-TDS'         
                      GROUP BY hzp.party_name,
                               hzp.party_id,
                               hzp.party_type,
                               hzc.account_number,
                               rct.customer_trx_id,
                               rct.bill_to_site_use_id,
                               rct.trx_number,
                               rtt.TYPE,
                               rtt.NAME,
                               rct.trx_date,
                               due.trx_date,
                               due.due_date,
                               rlg.gl_date,
                               rct.invoice_currency_code,
                               rct.exchange_rate,
                               rpsa.due_date,
                               rpsa.exchange_rate,
                               rct.org_id,
                               rpsa.amount_due_original,
                               rpsa.CLASS,
                               rlg.customer_trx_id,
                               rlg.code_combination_id,
                               rlg.account_class,
                               RCT.BILL_TO_CUSTOMER_ID,gcc.segment1,gcc.segment2
--                               ,gcc.segment1 
                                     ,gcc.segment3
                                     ,gcc.segment4 
                                     ,gcc.segment5 
                                     ,gcc.segment6 
                                     ,gcc.segment7 
                                     ,gcc.segment8 
                                     ,gcc.segment9 
                      UNION ALL
                        SELECT  '4' SNO,
                               (SELECT segment1
                                  FROM gl_code_combinations
                                 WHERE code_combination_id = rlg.code_combination_id)
                                  unit,
                               rct.exchange_rate,
                               rct.org_id,
                               hzp.party_id party_id,
                               hzp.party_name,
                               hzp.party_type,
                               hzc.account_number customer_number,
                               rct.customer_trx_id,
                               (SELECT segment2
                                  FROM gl_code_combinations
                                 WHERE code_combination_id = rlg.code_combination_id)
                                  receivable_acct,
                               (select hps.PARTY_SITE_NUMBER from
                                hz_cust_site_uses_all hcs,hz_cust_acct_sites_all hcas,hz_party_sites hps
                                   WHERE hcs.site_use_id=rct.bill_to_site_use_id 
                                    and hps.party_id=hzp.party_id
                                    AND hcas.cust_acct_site_id = hcs.cust_acct_site_id
                                    AND hps.party_site_id = hcas.party_site_id)
                                  customer_site,
                               DECODE (rtt.TYPE, 'CM', 'CREDIT MEMO') invoice_type,
                               rct.trx_number invoice_number,
                               rtt.NAME transaction_type,
                               NVL (due.trx_date, rct.trx_date) invoice_date,
                               rlg.gl_date gl_date,
                               NVL (due.due_date, rpsa.due_date) due_date,
                               rct.invoice_currency_code,
                               rpsa.amount_due_original invoice_amount,
                                 (NVL (
                                     (SELECT SUM (amount_applied)
                                        FROM ar_receivable_applications_all
                                       WHERE     status = 'APP'
                                             AND applied_customer_trx_id =
                                                    rct.customer_trx_id
                                             AND TRUNC (gl_date) <= :p_as_of_date),
                                     0))
                               - (NVL (
                                     (SELECT SUM (amount)
                                        FROM ar_adjustments_all
                                       WHERE     customer_trx_id =
                                                    rct.customer_trx_id
                                                     AND  NVL(STATUS,'#')<> NVL('R','#')
                                             AND TRUNC (gl_date) <= :p_as_of_date),
                                     0))
                                  amount_received,
                                 rpsa.amount_due_original
                               - (  NVL (
                                       (SELECT SUM (amount_applied)
                                          FROM ar_receivable_applications_all
                                         WHERE     status = 'APP'
                                               AND applied_customer_trx_id =
                                                      rct.customer_trx_id
                                               AND TRUNC (gl_date) <= :p_as_of_date),
                                       0)
                                  - NVL (
                                       (SELECT SUM (amount)
                                          FROM ar_adjustments_all
                                         WHERE     customer_trx_id =
                                                      rct.customer_trx_id
                                                       AND  NVL(STATUS,'#')<> NVL('R','#')
                                               AND TRUNC (gl_date) <= :p_as_of_date),
                                       0))
                                  balance_amount,
                               DECODE (
                                  rct.exchange_rate,
                                  NULL, (  rpsa.amount_due_original
                                         - (  NVL (
                                                 (SELECT SUM (amount_applied)
                                                    FROM ar_receivable_applications_all
                                                   WHERE     status = 'APP'
                                                         AND applied_customer_trx_id =
                                                                rct.customer_trx_id
                                                         AND TRUNC (gl_date) <=
                                                                :p_as_of_date),
                                                 0)
                                            - NVL (
                                                 (SELECT SUM (amount)
                                                    FROM ar_adjustments_all
                                                   WHERE     customer_trx_id =
                                                                rct.customer_trx_id
                                                                 AND  NVL(STATUS,'#')<> NVL('R','#')
                                                         AND TRUNC (gl_date) <=
                                                                :p_as_of_date),
                                                 0))),
                                  (  (  rpsa.amount_due_original
                                      - (  NVL (
                                              (SELECT SUM (amount_applied)
                                                 FROM ar_receivable_applications_all
                                                WHERE     status = 'APP'
                                                      AND applied_customer_trx_id =
                                                             rct.customer_trx_id
                                                      AND TRUNC (gl_date) <=
                                                             :p_as_of_date),
                                              0)
                                         - NVL (
                                              (SELECT SUM (amount)
                                                 FROM ar_adjustments_all
                                                WHERE     customer_trx_id =
                                                             rct.customer_trx_id
                                                              AND  NVL(STATUS,'#')<> NVL('R','#')
                                                      AND TRUNC (gl_date) <=
                                                             :p_as_of_date),
                                              0)))
                                   * rct.exchange_rate))
                                  bal_func_amt,
                               (SELECT TO_CHAR (
                                          (  (  rpsa.amount_due_original
                                              + (  NVL (
                                                      (SELECT SUM (amount_applied)
                                                         FROM ar_receivable_applications_all
                                                        WHERE     status = 'APP'
                                                              AND applied_customer_trx_id =
                                                                     rct.customer_trx_id
                                                              AND TRUNC (gl_date) <=
                                                                     :p_as_of_date),
                                                      0)
                                                 - NVL (
                                                      (SELECT SUM (amount)
                                                         FROM ar_adjustments_all
                                                        WHERE     customer_trx_id =
                                                                     rct.customer_trx_id
                                                                      AND  NVL(STATUS,'#')<> NVL('R','#')
                                                              AND TRUNC (gl_date) <=
                                                                     :p_as_of_date),
                                                      0)))
                                           * NVL (rpsa.exchange_rate, 1)),
                                          fnd_currency.get_format_mask (
                                             rct.invoice_currency_code,
                                             40))
                                  FROM DUAL
                                 WHERE CEIL (
                                            TO_DATE (
                                               TO_CHAR ( (:p_as_of_date),
                                                        'DD-MON-RR'),
                                               'DD-MON-RR')
                                          - NVL (due.due_date, rpsa.due_date)) < 0)
                                  not_due,
                               (SELECT TO_CHAR (
                                          (  (  rpsa.amount_due_original
                                              + (  NVL (
                                                      (SELECT SUM (amount_applied)
                                                         FROM ar_receivable_applications_all
                                                        WHERE     status = 'APP'
                                                              AND applied_customer_trx_id =
                                                                     rct.customer_trx_id
                                                              AND TRUNC (gl_date) <=
                                                                     :p_as_of_date),
                                                      0)
                                                 - NVL (
                                                      (SELECT SUM (amount)
                                                         FROM ar_adjustments_all
                                                        WHERE     customer_trx_id =
                                                                     rct.customer_trx_id
                                                                      AND  NVL(STATUS,'#')<> NVL('R','#')
                                                              AND TRUNC (gl_date) <=
                                                                     :p_as_of_date),
                                                      0)))
                                           * NVL (rpsa.exchange_rate, 1)),
                                          fnd_currency.get_format_mask (
                                             rct.invoice_currency_code,
                                             40))
                                  FROM DUAL
                                 WHERE CEIL (
                                            TO_DATE (
                                               TO_CHAR ( (:p_as_of_date),
                                                        'DD-MON-RR'),
                                               'DD-MON-RR')
                                          - NVL (due.due_date, rpsa.due_date)) =0)
                                  "Bucket_0",
                               (SELECT TO_CHAR (
                                          (  (  rpsa.amount_due_original
                                              - (  NVL (
                                                      (SELECT SUM (amount_applied)
                                                         FROM ar_receivable_applications_all
                                                        WHERE     status = 'APP'
                                                              AND applied_customer_trx_id =
                                                                     rct.customer_trx_id
                                                              AND TRUNC (gl_date) <=
                                                                     :p_as_of_date),
                                                      0)
                                                 - NVL (
                                                      (SELECT SUM (amount)
                                                         FROM ar_adjustments_all
                                                        WHERE     customer_trx_id =
                                                                     rct.customer_trx_id
                                                                      AND  NVL(STATUS,'#')<> NVL('R','#')
                                                              AND TRUNC (gl_date) <=
                                                                     :p_as_of_date),
                                                      0)))
                                           * NVL (rpsa.exchange_rate, 1)),
                                          fnd_currency.get_format_mask (
                                             rct.invoice_currency_code,
                                             40))
                                  FROM DUAL
                                 WHERE CEIL (
                                            TO_DATE (
                                               TO_CHAR ( (:p_as_of_date),
                                                        'DD-MON-RR'),
                                               'DD-MON-RR')
                                          - NVL (due.due_date, rpsa.due_date)) BETWEEN 1
                                                                                   AND 30)
                                  bucket_1,
                               (SELECT TO_CHAR (
                                          (  (  rpsa.amount_due_original
                                              - (  NVL (
                                                      (SELECT SUM (amount_applied)
                                                         FROM ar_receivable_applications_all
                                                        WHERE     status = 'APP'
                                                              AND applied_customer_trx_id =
                                                                     rct.customer_trx_id
                                                              AND TRUNC (gl_date) <=
                                                                     :p_as_of_date),
                                                      0)
                                                 - NVL (
                                                      (SELECT SUM (amount)
                                                         FROM ar_adjustments_all
                                                        WHERE     customer_trx_id =
                                                                     rct.customer_trx_id
                                                                      AND  NVL(STATUS,'#')<> NVL('R','#')
                                                              AND TRUNC (gl_date) <=
                                                                     :p_as_of_date),
                                                      0)))
                                           * NVL (rpsa.exchange_rate, 1)),
                                          fnd_currency.get_format_mask (
                                             rct.invoice_currency_code,
                                             40))
                                  FROM DUAL
                                 WHERE CEIL (
                                            TO_DATE (
                                               TO_CHAR ( (:p_as_of_date),
                                                        'DD-MON-RR'),
                                               'DD-MON-RR')
                                          - NVL (due.due_date, rpsa.due_date)) BETWEEN 31
                                                                                   AND 60)
                                  bucket_2,
                               (SELECT TO_CHAR (
                                          (  (  rpsa.amount_due_original
                                              - (  NVL (
                                                      (SELECT SUM (amount_applied)
                                                         FROM ar_receivable_applications_all
                                                        WHERE     status = 'APP'
                                                              AND applied_customer_trx_id =
                                                                     rct.customer_trx_id
                                                              AND TRUNC (gl_date) <=
                                                                     :p_as_of_date),
                                                      0)
                                                 - NVL (
                                                      (SELECT SUM (amount)
                                                         FROM ar_adjustments_all
                                                        WHERE     customer_trx_id =
                                                                     rct.customer_trx_id
                                                                      AND  NVL(STATUS,'#')<> NVL('R','#')
                                                              AND TRUNC (gl_date) <=
                                                                     :p_as_of_date),
                                                      0)))
                                           * NVL (rpsa.exchange_rate, 1)),
                                          fnd_currency.get_format_mask (
                                             rct.invoice_currency_code,
                                             40))
                                  FROM DUAL
                                 WHERE CEIL (
                                            TO_DATE (
                                               TO_CHAR ( (:p_as_of_date),
                                                        'DD-MON-RR'),
                                               'DD-MON-RR')
                                          - NVL (due.due_date, rpsa.due_date)) BETWEEN 61
                                                                                   AND 90)
                                  bucket_3,
                               (SELECT TO_CHAR (
                                          (  (  rpsa.amount_due_original
                                              - (  NVL (
                                                      (SELECT SUM (amount_applied)
                                                         FROM ar_receivable_applications_all
                                                        WHERE     status = 'APP'
                                                              AND applied_customer_trx_id =
                                                                     rct.customer_trx_id
                                                              AND TRUNC (gl_date) <=
                                                                     :p_as_of_date),
                                                      0)
                                                 - NVL (
                                                      (SELECT SUM (amount)
                                                         FROM ar_adjustments_all
                                                        WHERE     customer_trx_id =
                                                                     rct.customer_trx_id
                                                                      AND  NVL(STATUS,'#')<> NVL('R','#')
                                                              AND TRUNC (gl_date) <=
                                                                     :p_as_of_date),
                                                      0)))
                                           * NVL (rpsa.exchange_rate, 1)),
                                          fnd_currency.get_format_mask (
                                             rct.invoice_currency_code,
                                             40))
                                  FROM DUAL
                                 WHERE CEIL (
                                            TO_DATE (
                                               TO_CHAR ( (:p_as_of_date),
                                                        'DD-MON-RR'),
                                               'DD-MON-RR')
                                          - NVL (due.due_date, rpsa.due_date)) BETWEEN 91
                                                                                   AND 120)
                                  bucket_4,
                               (SELECT TO_CHAR (
                                          (  (  rpsa.amount_due_original
                                              - (  NVL (
                                                      (SELECT SUM (amount_applied)
                                                         FROM ar_receivable_applications_all
                                                        WHERE     status = 'APP'
                                                              AND applied_customer_trx_id =
                                                                     rct.customer_trx_id
                                                              AND TRUNC (gl_date) <=
                                                                     :p_as_of_date),
                                                      0)
                                                 - NVL (
                                                      (SELECT SUM (amount)
                                                         FROM ar_adjustments_all
                                                        WHERE     customer_trx_id =
                                                                     rct.customer_trx_id
                                                                      AND  NVL(STATUS,'#')<> NVL('R','#')
                                                              AND TRUNC (gl_date) <=
                                                                     :p_as_of_date),
                                                      0)))
                                           * NVL (rpsa.exchange_rate, 1)),
                                          fnd_currency.get_format_mask (
                                             rct.invoice_currency_code,
                                             40))
                                  FROM DUAL
                                 WHERE CEIL (
                                            TO_DATE (
                                               TO_CHAR ( (:p_as_of_date),
                                                        'DD-MON-RR'),
                                               'DD-MON-RR')
                                          - NVL (due.due_date, rpsa.due_date)) BETWEEN 121
                                                                                   AND 150)
                                  bucket_5,
                               (SELECT TO_CHAR (
                                          (  (  rpsa.amount_due_original
                                              - (  NVL (
                                                      (SELECT SUM (amount_applied)
                                                         FROM ar_receivable_applications_all
                                                        WHERE     status = 'APP'
                                                              AND applied_customer_trx_id =
                                                                     rct.customer_trx_id
                                                              AND TRUNC (gl_date) <=
                                                                     :p_as_of_date),
                                                      0)
                                                 - NVL (
                                                      (SELECT SUM (amount)
                                                         FROM ar_adjustments_all
                                                        WHERE     customer_trx_id =
                                                                     rct.customer_trx_id
                                                                      AND  NVL(STATUS,'#')<> NVL('R','#')
                                                              AND TRUNC (gl_date) <=
                                                                     :p_as_of_date),
                                                      0)))
                                           * NVL (rpsa.exchange_rate, 1)),
                                          fnd_currency.get_format_mask (
                                             rct.invoice_currency_code,
                                             40))
                                  FROM DUAL
                                 WHERE CEIL (
                                            TO_DATE (
                                               TO_CHAR ( (:p_as_of_date),
                                                        'DD-MON-RR'),
                                               'DD-MON-RR')
                                          - NVL (due.due_date, rpsa.due_date)) between 151 and 180
                                                                                   )
                                  bucket_6,
    --                           (SELECT TO_CHAR (
    --                                      (  (  rpsa.amount_due_original
    --                                          - (  NVL (
    --                                                  (SELECT SUM (amount_applied)
    --                                                     FROM ar_receivable_applications_all
    --                                                    WHERE     status = 'APP'
    --                                                          AND applied_customer_trx_id =
    --                                                                 rct.customer_trx_id
    --                                                          AND TRUNC (gl_date) <=
    --                                                                 :p_as_of_date),
    --                                                  0)
    --                                             - NVL (
    --                                                  (SELECT SUM (amount)
    --                                                     FROM ar_adjustments_all
    --                                                    WHERE     customer_trx_id =
    --                                                                 rct.customer_trx_id
    --                                                          AND TRUNC (gl_date) <=
    --                                                                 :p_as_of_date),
    --                                                  0)))
    --                                       * NVL (rpsa.exchange_rate, 1)),
    --                                      fnd_currency.get_format_mask (
    --                                         rct.invoice_currency_code,
    --                                         40))
    --                              FROM DUAL
    --                             WHERE CEIL (
    --                                        TO_DATE (
    --                                           TO_CHAR ( (:p_as_of_date),
    --                                                    'DD-MON-RR'),
    --                                           'DD-MON-RR')
    --                                      - NVL (due.due_date, rpsa.due_date)) > 365)
    --                              bucket_7,
   --------------------------upendra
   
    (SELECT TO_CHAR (
                                          (  (  rpsa.amount_due_original
                                              - (  NVL (
                                                      (SELECT SUM (amount_applied)
                                                         FROM ar_receivable_applications_all
                                                        WHERE     status = 'APP'
                                                              AND applied_customer_trx_id =
                                                                     rct.customer_trx_id
                                                              AND TRUNC (gl_date) <=
                                                                     :p_as_of_date),
                                                      0)
                                                 - NVL (
                                                      (SELECT SUM (amount)
                                                         FROM ar_adjustments_all
                                                        WHERE     customer_trx_id =
                                                                     rct.customer_trx_id
                                                                      AND  NVL(STATUS,'#')<> NVL('R','#')
                                                              AND TRUNC (gl_date) <=
                                                                     :p_as_of_date),
                                                      0)))
                                           * NVL (rpsa.exchange_rate, 1)),
                                          fnd_currency.get_format_mask (
                                             rct.invoice_currency_code,
                                             40))
                                  FROM DUAL
                                 WHERE CEIL (
                                            TO_DATE (
                                               TO_CHAR ( (:p_as_of_date),
                                                        'DD-MON-RR'),
                                               'DD-MON-RR')
                                          - NVL (due.due_date, rpsa.due_date)) BETWEEN 181 AND 210)
                                  bucket_7,
                                   (SELECT TO_CHAR (
                                          (  (  rpsa.amount_due_original
                                              - (  NVL (
                                                      (SELECT SUM (amount_applied)
                                                         FROM ar_receivable_applications_all
                                                        WHERE     status = 'APP'
                                                              AND applied_customer_trx_id =
                                                                     rct.customer_trx_id
                                                              AND TRUNC (gl_date) <=
                                                                     :p_as_of_date),
                                                      0)
                                                 - NVL (
                                                      (SELECT SUM (amount)
                                                         FROM ar_adjustments_all
                                                        WHERE     customer_trx_id =
                                                                     rct.customer_trx_id
                                                                      AND  NVL(STATUS,'#')<> NVL('R','#')
                                                              AND TRUNC (gl_date) <=
                                                                     :p_as_of_date),
                                                      0)))
                                           * NVL (rpsa.exchange_rate, 1)),
                                          fnd_currency.get_format_mask (
                                             rct.invoice_currency_code,
                                             40))
                                  FROM DUAL
                                 WHERE CEIL (
                                            TO_DATE (
                                               TO_CHAR ( (:p_as_of_date),
                                                        'DD-MON-RR'),
                                               'DD-MON-RR')
                                          - NVL (due.due_date, rpsa.due_date)) BETWEEN 211 AND 240)
                                  bucket_8,
                                   (SELECT TO_CHAR (
                                          (  (  rpsa.amount_due_original
                                              - (  NVL (
                                                      (SELECT SUM (amount_applied)
                                                         FROM ar_receivable_applications_all
                                                        WHERE     status = 'APP'
                                                              AND applied_customer_trx_id =
                                                                     rct.customer_trx_id
                                                              AND TRUNC (gl_date) <=
                                                                     :p_as_of_date),
                                                      0)
                                                 - NVL (
                                                      (SELECT SUM (amount)
                                                         FROM ar_adjustments_all
                                                        WHERE     customer_trx_id =
                                                                     rct.customer_trx_id
                                                                      AND  NVL(STATUS,'#')<> NVL('R','#')
                                                              AND TRUNC (gl_date) <=
                                                                     :p_as_of_date),
                                                      0)))
                                           * NVL (rpsa.exchange_rate, 1)),
                                          fnd_currency.get_format_mask (
                                             rct.invoice_currency_code,
                                             40))
                                  FROM DUAL
                                 WHERE CEIL (
                                            TO_DATE (
                                               TO_CHAR ( (:p_as_of_date),
                                                        'DD-MON-RR'),
                                               'DD-MON-RR')
                                          - NVL (due.due_date, rpsa.due_date)) BETWEEN 241 AND 270)
                                  bucket_9,
                                   (SELECT TO_CHAR (
                                          (  (  rpsa.amount_due_original
                                              - (  NVL (
                                                      (SELECT SUM (amount_applied)
                                                         FROM ar_receivable_applications_all
                                                        WHERE     status = 'APP'
                                                              AND applied_customer_trx_id =
                                                                     rct.customer_trx_id
                                                              AND TRUNC (gl_date) <=
                                                                     :p_as_of_date),
                                                      0)
                                                 - NVL (
                                                      (SELECT SUM (amount)
                                                         FROM ar_adjustments_all
                                                        WHERE     customer_trx_id =
                                                                     rct.customer_trx_id
                                                                      AND  NVL(STATUS,'#')<> NVL('R','#')
                                                              AND TRUNC (gl_date) <=
                                                                     :p_as_of_date),
                                                      0)))
                                           * NVL (rpsa.exchange_rate, 1)),
                                          fnd_currency.get_format_mask (
                                             rct.invoice_currency_code,
                                             40))
                                  FROM DUAL
                                 WHERE CEIL (
                                            TO_DATE (
                                               TO_CHAR ( (:p_as_of_date),
                                                        'DD-MON-RR'),
                                               'DD-MON-RR')
                                          - NVL (due.due_date, rpsa.due_date)) BETWEEN 271 AND 300)
                                  bucket_10,
                                   (SELECT TO_CHAR (
                                          (  (  rpsa.amount_due_original
                                              - (  NVL (
                                                      (SELECT SUM (amount_applied)
                                                         FROM ar_receivable_applications_all
                                                        WHERE     status = 'APP'
                                                              AND applied_customer_trx_id =
                                                                     rct.customer_trx_id
                                                              AND TRUNC (gl_date) <=
                                                                     :p_as_of_date),
                                                      0)
                                                 - NVL (
                                                      (SELECT SUM (amount)
                                                         FROM ar_adjustments_all
                                                        WHERE     customer_trx_id =
                                                                     rct.customer_trx_id
                                                                      AND  NVL(STATUS,'#')<> NVL('R','#')
                                                              AND TRUNC (gl_date) <=
                                                                     :p_as_of_date),
                                                      0)))
                                           * NVL (rpsa.exchange_rate, 1)),
                                          fnd_currency.get_format_mask (
                                             rct.invoice_currency_code,
                                             40))
                                  FROM DUAL
                                 WHERE CEIL (
                                            TO_DATE (
                                               TO_CHAR ( (:p_as_of_date),
                                                        'DD-MON-RR'),
                                               'DD-MON-RR')
                                          - NVL (due.due_date, rpsa.due_date)) BETWEEN 301 AND 330)
                                  bucket_11,
                                   (SELECT TO_CHAR (
                                          (  (  rpsa.amount_due_original
                                              - (  NVL (
                                                      (SELECT SUM (amount_applied)
                                                         FROM ar_receivable_applications_all
                                                        WHERE     status = 'APP'
                                                              AND applied_customer_trx_id =
                                                                     rct.customer_trx_id
                                                              AND TRUNC (gl_date) <=
                                                                     :p_as_of_date),
                                                      0)
                                                 - NVL (
                                                      (SELECT SUM (amount)
                                                         FROM ar_adjustments_all
                                                        WHERE     customer_trx_id =
                                                                     rct.customer_trx_id
                                                                      AND  NVL(STATUS,'#')<> NVL('R','#')
                                                              AND TRUNC (gl_date) <=
                                                                     :p_as_of_date),
                                                      0)))
                                           * NVL (rpsa.exchange_rate, 1)),
                                          fnd_currency.get_format_mask (
                                             rct.invoice_currency_code,
                                             40))
                                  FROM DUAL
                                 WHERE CEIL (
                                            TO_DATE (
                                               TO_CHAR ( (:p_as_of_date),
                                                        'DD-MON-RR'),
                                               'DD-MON-RR')
                                          - NVL (due.due_date, rpsa.due_date)) BETWEEN 331 AND 365)
                                  bucket_12,
                                   (SELECT TO_CHAR (
                                          (  (  rpsa.amount_due_original
                                              - (  NVL (
                                                      (SELECT SUM (amount_applied)
                                                         FROM ar_receivable_applications_all
                                                        WHERE     status = 'APP'
                                                              AND applied_customer_trx_id =
                                                                     rct.customer_trx_id
                                                              AND TRUNC (gl_date) <=
                                                                     :p_as_of_date),
                                                      0)
                                                 - NVL (
                                                      (SELECT SUM (amount)
                                                         FROM ar_adjustments_all
                                                        WHERE     customer_trx_id =
                                                                     rct.customer_trx_id
                                                                      AND  NVL(STATUS,'#')<> NVL('R','#')
                                                              AND TRUNC (gl_date) <=
                                                                     :p_as_of_date),
                                                      0)))
                                           * NVL (rpsa.exchange_rate, 1)),
                                          fnd_currency.get_format_mask (
                                             rct.invoice_currency_code,
                                             40))
                                  FROM DUAL
                                 WHERE CEIL (
                                            TO_DATE (
                                               TO_CHAR ( (:p_as_of_date),
                                                        'DD-MON-RR'),
                                               'DD-MON-RR')
                                          - NVL (due.due_date, rpsa.due_date)) BETWEEN 366 AND 730)
                                  bucket_13,
                                   (SELECT TO_CHAR (
                                          (  (  rpsa.amount_due_original
                                              - (  NVL (
                                                      (SELECT SUM (amount_applied)
                                                         FROM ar_receivable_applications_all
                                                        WHERE     status = 'APP'
                                                              AND applied_customer_trx_id =
                                                                     rct.customer_trx_id
                                                              AND TRUNC (gl_date) <=
                                                                     :p_as_of_date),
                                                      0)
                                                 - NVL (
                                                      (SELECT SUM (amount)
                                                         FROM ar_adjustments_all
                                                        WHERE     customer_trx_id =
                                                                     rct.customer_trx_id
                                                                      AND  NVL(STATUS,'#')<> NVL('R','#')
                                                              AND TRUNC (gl_date) <=
                                                                     :p_as_of_date),
                                                      0)))
                                           * NVL (rpsa.exchange_rate, 1)),
                                          fnd_currency.get_format_mask (
                                             rct.invoice_currency_code,
                                             40))
                                  FROM DUAL
                                 WHERE CEIL (
                                            TO_DATE (
                                               TO_CHAR ( (:p_as_of_date),
                                                        'DD-MON-RR'),
                                               'DD-MON-RR')
                                          - NVL (due.due_date, rpsa.due_date)) >=731)
                                  bucket_14,
   
   
   
   
   ----------upendra 
                               (SELECT TO_CHAR (
                                          (  (  rpsa.amount_due_original
                                              - (  NVL (
                                                      (SELECT SUM (amount_applied)
                                                         FROM ar_receivable_applications_all
                                                        WHERE     status = 'APP'
                                                              AND applied_customer_trx_id =
                                                                     rct.customer_trx_id
                                                              AND TRUNC (gl_date) <=
                                                                     :p_as_of_date),
                                                      0)
                                                 - NVL (
                                                      (SELECT SUM (amount)
                                                         FROM ar_adjustments_all
                                                        WHERE     customer_trx_id =
                                                                     rct.customer_trx_id
                                                                      AND  NVL(STATUS,'#')<> NVL('R','#')
                                                              AND TRUNC (gl_date) <=
                                                                     :p_as_of_date),
                                                      0)))
                                           * NVL (rpsa.exchange_rate, 1)),
                                          fnd_currency.get_format_mask (
                                             rct.invoice_currency_code,
                                             40))
                                  FROM DUAL
                                 WHERE CEIL (
                                            TO_DATE (
                                               TO_CHAR ( (:p_as_of_date),
                                                        'DD-MON-RR'),
                                               'DD-MON-RR')
                                          - (rct.trx_date)) =0
                                                                )
                                  bucket_0_i,
                               (SELECT TO_CHAR (
                                          (  (  rpsa.amount_due_original
                                              - (  NVL (
                                                      (SELECT SUM (amount_applied)
                                                         FROM ar_receivable_applications_all
                                                        WHERE     status = 'APP'
                                                              AND applied_customer_trx_id =
                                                                     rct.customer_trx_id
                                                              AND TRUNC (gl_date) <=
                                                                     :p_as_of_date),
                                                      0)
                                                 - NVL (
                                                      (SELECT SUM (amount)
                                                         FROM ar_adjustments_all
                                                        WHERE     customer_trx_id =
                                                                     rct.customer_trx_id
                                                                      AND  NVL(STATUS,'#')<> NVL('R','#')
                                                              AND TRUNC (gl_date) <=
                                                                     :p_as_of_date),
                                                      0)))
                                           * NVL (rpsa.exchange_rate, 1)),
                                          fnd_currency.get_format_mask (
                                             rct.invoice_currency_code,
                                             40))
                                  FROM DUAL
                                 WHERE CEIL (
                                            TO_DATE (
                                               TO_CHAR ( (:p_as_of_date),
                                                        'DD-MON-RR'),
                                               'DD-MON-RR')
                                          - (rct.trx_date)) BETWEEN 1
                                                                AND 30)
                                  bucket_1_i,
                               (SELECT TO_CHAR (
                                          (  (  rpsa.amount_due_original
                                              - (  NVL (
                                                      (SELECT SUM (amount_applied)
                                                         FROM ar_receivable_applications_all
                                                        WHERE     status = 'APP'
                                                              AND applied_customer_trx_id =
                                                                     rct.customer_trx_id
                                                              AND TRUNC (gl_date) <=
                                                                     :p_as_of_date),
                                                      0)
                                                 - NVL (
                                                      (SELECT SUM (amount)
                                                         FROM ar_adjustments_all
                                                        WHERE     customer_trx_id =
                                                                     rct.customer_trx_id
                                                                      AND  NVL(STATUS,'#')<> NVL('R','#')
                                                              AND TRUNC (gl_date) <=
                                                                     :p_as_of_date),
                                                      0)))
                                           * NVL (rpsa.exchange_rate, 1)),
                                          fnd_currency.get_format_mask (
                                             rct.invoice_currency_code,
                                             40))
                                  FROM DUAL
                                 WHERE CEIL (
                                            TO_DATE (
                                               TO_CHAR ( (:p_as_of_date),
                                                        'DD-MON-RR'),
                                               'DD-MON-RR')
                                          - (rct.trx_date)) BETWEEN 31
                                                                AND 60)
                                  bucket_2_i,
                               (SELECT TO_CHAR (
                                          (  (  rpsa.amount_due_original
                                              - (  NVL (
                                                      (SELECT SUM (amount_applied)
                                                         FROM ar_receivable_applications_all
                                                        WHERE     status = 'APP'
                                                              AND applied_customer_trx_id =
                                                                     rct.customer_trx_id
                                                              AND TRUNC (gl_date) <=
                                                                     :p_as_of_date),
                                                      0)
                                                 - NVL (
                                                      (SELECT SUM (amount)
                                                         FROM ar_adjustments_all
                                                        WHERE     customer_trx_id =
                                                                     rct.customer_trx_id
                                                                      AND  NVL(STATUS,'#')<> NVL('R','#')
                                                              AND TRUNC (gl_date) <=
                                                                     :p_as_of_date),
                                                      0)))
                                           * NVL (rpsa.exchange_rate, 1)),
                                          fnd_currency.get_format_mask (
                                             rct.invoice_currency_code,
                                             40))
                                  FROM DUAL
                                 WHERE CEIL (
                                            TO_DATE (
                                               TO_CHAR ( (:p_as_of_date),
                                                        'DD-MON-RR'),
                                               'DD-MON-RR')
                                          - (rct.trx_date)) BETWEEN 61
                                                                AND 90)
                                  bucket_3_i,
                               (SELECT TO_CHAR (
                                          (  (  rpsa.amount_due_original
                                              - (  NVL (
                                                      (SELECT SUM (amount_applied)
                                                         FROM ar_receivable_applications_all
                                                        WHERE     status = 'APP'
                                                              AND applied_customer_trx_id =
                                                                     rct.customer_trx_id
                                                              AND TRUNC (gl_date) <=
                                                                     :p_as_of_date),
                                                      0)
                                                 - NVL (
                                                      (SELECT SUM (amount)
                                                         FROM ar_adjustments_all
                                                        WHERE     customer_trx_id =
                                                                     rct.customer_trx_id
                                                                      AND  NVL(STATUS,'#')<> NVL('R','#')
                                                              AND TRUNC (gl_date) <=
                                                                     :p_as_of_date),
                                                      0)))
                                           * NVL (rpsa.exchange_rate, 1)),
                                          fnd_currency.get_format_mask (
                                             rct.invoice_currency_code,
                                             40))
                                  FROM DUAL
                                 WHERE CEIL (
                                            TO_DATE (
                                               TO_CHAR ( (:p_as_of_date),
                                                        'DD-MON-RR'),
                                               'DD-MON-RR')
                                          - (rct.trx_date)) BETWEEN 91
                                                                AND 120)
                                  bucket_4_i,
                               (SELECT TO_CHAR (
                                          (  (  rpsa.amount_due_original
                                              - (  NVL (
                                                      (SELECT SUM (amount_applied)
                                                         FROM ar_receivable_applications_all
                                                        WHERE     status = 'APP'
                                                              AND applied_customer_trx_id =
                                                                     rct.customer_trx_id
                                                              AND TRUNC (gl_date) <=
                                                                     :p_as_of_date),
                                                      0)
                                                 - NVL (
                                                      (SELECT SUM (amount)
                                                         FROM ar_adjustments_all
                                                        WHERE     customer_trx_id =
                                                                     rct.customer_trx_id
                                                                      AND  NVL(STATUS,'#')<> NVL('R','#')
                                                              AND TRUNC (gl_date) <=
                                                                     :p_as_of_date),
                                                      0)))
                                           * NVL (rpsa.exchange_rate, 1)),
                                          fnd_currency.get_format_mask (
                                             rct.invoice_currency_code,
                                             40))
                                  FROM DUAL
                                 WHERE CEIL (
                                            TO_DATE (
                                               TO_CHAR ( (:p_as_of_date),
                                                        'DD-MON-RR'),
                                               'DD-MON-RR')
                                          - (rct.trx_date)) BETWEEN 121
                                                                AND 150)
                                  bucket_5_i,                         
                               (SELECT TO_CHAR (
                                          (  (  rpsa.amount_due_original
                                              - (  NVL (
                                                      (SELECT SUM (amount_applied)
                                                         FROM ar_receivable_applications_all
                                                        WHERE     status = 'APP'
                                                              AND applied_customer_trx_id =
                                                                     rct.customer_trx_id
                                                              AND TRUNC (gl_date) <=
                                                                     :p_as_of_date),
                                                      0)
                                                 - NVL (
                                                      (SELECT SUM (amount)
                                                         FROM ar_adjustments_all
                                                        WHERE     customer_trx_id =
                                                                     rct.customer_trx_id
                                                                      AND  NVL(STATUS,'#')<> NVL('R','#')
                                                              AND TRUNC (gl_date) <=
                                                                     :p_as_of_date),
                                                      0)))
                                           * NVL (rpsa.exchange_rate, 1)),
                                          fnd_currency.get_format_mask (
                                             rct.invoice_currency_code,
                                             40))
                                  FROM DUAL
                                 WHERE CEIL (
                                            TO_DATE (
                                               TO_CHAR ( (:p_as_of_date),
                                                        'DD-MON-RR'),
                                               'DD-MON-RR')
                                          - (rct.trx_date)) >= 151)
                                  bucket_6_i,
                               RCT.BILL_TO_CUSTOMER_ID,
                               gcc.segment1 entity ,
                               (SELECT RCTL.DESCRIPTION
                                     FROM RA_CUSTOMER_TRX_LINES_ALL RCTL
                                     WHERE 1=1
                                     AND RCTL.CUSTOMER_TRX_ID=RCT.CUSTOMER_TRX_ID
                                      AND RCTL.LINE_TYPE='LINE'
                                     AND ROWNUM=1)LINE_DESC
                                     ,gcc.segment2 GL_code  --FTP1125
                                     ,gcc.segment1 entity1
                                     ,gcc.segment3 cost_center
                                     ,gcc.segment4 prj
                                     ,gcc.segment5 corp_fun
                                     ,gcc.segment6 loc
                                     ,gcc.segment7 inter_com
                                     ,gcc.segment8 fut1
                                     ,gcc.segment9 fut2
                          FROM ra_customer_trx_all rct,
                               ra_cust_trx_line_gl_dist_all rlg,
                               ar_payment_schedules_all rpsa,
                               hz_parties hzp,
                               hz_cust_accounts hzc,
                               hz_cust_accounts hca,
                               ra_batch_sources_all rbs,
                               ra_cust_trx_types_all rtt,
                               gl_code_combinations gcc,
                               (SELECT lookup_code,
                                       meaning trx_num,
                                       description pay_term,
                                       start_date_active trx_date,
                                       end_date_active due_date
                                  FROM fnd_lookup_values
                                 WHERE     lookup_type = 'STL_AR_NUM_PHASE2'
                                       AND enabled_flag = 'Y') due
                         WHERE     rlg.customer_trx_id = rct.customer_trx_id
                               AND rpsa.customer_trx_id = rct.customer_trx_id
                               AND rlg.code_combination_id = gcc.code_combination_id
                               AND hzc.party_id = hzp.party_id
                               AND hzc.cust_account_id = rct.bill_to_customer_id
                               AND hca.cust_account_id(+) = rct.ship_to_customer_id
                               AND rbs.batch_source_seq_id = rct.batch_source_seq_id
                               AND rtt.cust_trx_type_seq_id =
                                      rct.cust_trx_type_seq_id
                               AND (   EXISTS
                                          (SELECT (1)
                                             FROM ar_receivable_applications_all
                                            WHERE     TRUNC (gl_date) > :p_as_of_date
                                                  AND NVL (customer_trx_id,
                                                           applied_customer_trx_id) =
                                                         rct.customer_trx_id)
                                    OR (EXISTS
                                           (SELECT (1)
                                              FROM ar_adjustments_all
                                             WHERE     TRUNC (gl_date) >
                                                          :p_as_of_date
                                                           AND  NVL(STATUS,'#')<> NVL('R','#')
                                                   AND customer_trx_id =
                                                          rct.customer_trx_id)))
                               AND rpsa.status = 'CL'
                               AND rtt.TYPE = 'CM'
                               AND rlg.account_class = 'REC'
                               AND rct.complete_flag = 'Y'
                               AND rct.trx_number = due.trx_num(+)
                               AND rct.org_id = NVL ( (SELECT organization_id
                                                         FROM hr_operating_units
                                                        WHERE NAME = :p_org_name),
                                                     rct.org_id)
                               AND TRUNC (rlg.gl_date) <= :p_as_of_date
                               AND hzp.party_id =
                                      NVL ( (SELECT h.party_id
                                               FROM hz_parties h
                                              WHERE h.party_name = :p_cust),
                                           hzp.party_id)
                      GROUP BY hzp.party_name,
                               hzp.party_id,
                               hzp.party_type,
                               hzc.account_number,
                               rct.customer_trx_id,
                               rct.bill_to_site_use_id,
                               rct.trx_number,
                               rtt.TYPE,
                               rtt.NAME,
                               rct.trx_date,
                               due.trx_date,
                               due.due_date,
                               rlg.gl_date,
                               rct.invoice_currency_code,
                               rct.exchange_rate,
                               rpsa.due_date,
                               rpsa.exchange_rate,
                               rct.org_id,
                               rpsa.amount_due_original,
                               rpsa.CLASS,
                               rlg.customer_trx_id,
                               rlg.code_combination_id,
                               rlg.account_class,
                               RCT.BILL_TO_CUSTOMER_ID,gcc.segment1,gcc.segment2
--                               ,gcc.segment1 
                                     ,gcc.segment3
                                     ,gcc.segment4 
                                     ,gcc.segment5 
                                     ,gcc.segment6 
                                     ,gcc.segment7 
                                     ,gcc.segment8 
                                     ,gcc.segment9 
     
               -------------------------ADDED BY UPENDRA 
    UNION
     SELECT '5' sno, 
    NULL unit, 
    ps.exchange_rate, 
    cr.org_id,
     hz.party_id ,
      hz.party_name, 
      hz.party_type,
      h.account_number customer_number,
       cr.cash_receipt_id,
    (SELECT DISTINCT   gcc.segment2
    FROM ar_distributions_all ad, gl_code_combinations gcc
    WHERE 1=1
    AND SOURCE_TYPE = 'UNAPP'
    AND EXISTS (
    SELECT '1'
    FROM ar_receivable_applications_all a,
    ar_cash_receipts_all b
    WHERE a.cash_receipt_id = b.cash_receipt_id
    AND a.receivable_application_id = source_id
    AND b.org_id = a.org_id
    AND B.cash_receipt_id =cr.cash_receipt_id and rownum=1)
    AND ad.code_combination_id = gcc.code_combination_id AND ROWNUM=1) receivable_acct,
      (    
        select hps.PARTY_SITE_NUMBER
             FROM 
            hz_party_sites hps
           ,hz_cust_acct_sites_all hcasa
           where 1=1
           AND hcasa.party_site_id = hps.party_site_id
          AND h.cust_account_id = hcasa.cust_account_id
           AND hz.party_id = hps.party_id AND ROWNUM=1) customer_site,
         'RECEIPT' transaction_type, cr.receipt_number,
    --    CR.type receipt_type,
        M.NAME REC_METHOD_NAME,
       cr.receipt_date,
        ps.gl_date,
           ps.due_date,
        cr.currency_code, 
          NVL(  ps.amount_due_original,0) recipt_amount,      
      CASE WHEN 
         ( SELECT  TRUNC (ARA.gl_date)
         FROM ar_receivable_applications_all ARA
        WHERE     ARA.status = 'APP'
        AND ARA.cash_receipt_id =cr.cash_receipt_id AND ROWNUM=1) <= :p_as_of_date 
        THEN NVL(  ABS(PS.AMOUNT_APPLIED),0) ELSE 0 END  AMOUNT_APPLIED,
          NVL( PS.amount_due_original,0),
          NULL bal_func_amt,
          NULL    not_due,
         (SELECT TO_CHAR (
                                          (  ( NVL( PS.amount_due_original,0)
                                              - (  NVL (
                                                      (SELECT  NVL (SUM (amount_applied)*-1,0)
                                                         FROM ar_receivable_applications_all
                                                        WHERE     status = 'APP'
                                                              AND cash_receipt_id =cr.cash_receipt_id
                                                              AND TRUNC (gl_date) <= :p_as_of_date),
                                                      0)
                                                 - NVL (
                                                      (SELECT  NVL(SUM (amount),0)
                                                         FROM ar_adjustments_all
                                                        WHERE     customer_trx_id =cr.cash_receipt_id
                                                          AND  NVL(STATUS,'#')<> NVL('R','#')
                                                              AND TRUNC (gl_date) <= :p_as_of_date),
                                                      0)))
                                           * NVL (PS.exchange_rate, 1)),
                                          fnd_currency.get_format_mask (
                                             cr.currency_code,
                                             40))
                                  FROM DUAL
                                 WHERE  (ABS (CEIL (
                                            TO_DATE (
                                               TO_CHAR ( (:p_as_of_date),
                                                        'DD-MON-RR'),
                                               'DD-MON-RR')
                                          - (crh.gl_date)) )) =0)   bucket_0,
         (SELECT TO_CHAR (
                                          (  ( NVL( PS.amount_due_original,0)
                                              - (  NVL (
                                                      (SELECT  NVL (SUM (amount_applied)*-1,0)
                                                         FROM ar_receivable_applications_all
                                                        WHERE     status = 'APP'
                                                              AND cash_receipt_id =cr.cash_receipt_id
                                                              AND TRUNC (gl_date) <= :p_as_of_date),
                                                      0)
                                                 - NVL (
                                                      (SELECT  NVL(SUM (amount),0)
                                                         FROM ar_adjustments_all
                                                        WHERE     customer_trx_id =cr.cash_receipt_id
                                                         AND  NVL(STATUS,'#')<> NVL('R','#')
                                                              AND TRUNC (gl_date) <= :p_as_of_date),
                                                      0)))
                                           * NVL (PS.exchange_rate, 1)),
                                          fnd_currency.get_format_mask (
                                             cr.currency_code,
                                             40))
                                  FROM DUAL
                                 WHERE  (ABS (CEIL (
                                            TO_DATE (
                                               TO_CHAR ( (:p_as_of_date),
                                                        'DD-MON-RR'),
                                               'DD-MON-RR')
                                          - (crh.gl_date)) ))  BETWEEN 1 AND 30)   bucket_1,
         (SELECT TO_CHAR (
                                          (  ( NVL( PS.amount_due_original,0)
                                              - (  NVL (
                                                      (SELECT  NVL (SUM (amount_applied)*-1,0)
                                                         FROM ar_receivable_applications_all
                                                        WHERE     status = 'APP'
                                                              AND cash_receipt_id =cr.cash_receipt_id
                                                              AND TRUNC (gl_date) <= :p_as_of_date),
                                                      0)
                                                 - NVL (
                                                      (SELECT  NVL(SUM (amount),0)
                                                         FROM ar_adjustments_all
                                                        WHERE     customer_trx_id =cr.cash_receipt_id
                                                         AND  NVL(STATUS,'#')<> NVL('R','#')
                                                              AND TRUNC (gl_date) <= :p_as_of_date),
                                                      0)))
                                           * NVL (PS.exchange_rate, 1)),
                                          fnd_currency.get_format_mask (
                                             cr.currency_code,
                                             40))
                                  FROM DUAL
                                 WHERE  (ABS (CEIL (
                                            TO_DATE (
                                               TO_CHAR ( (:p_as_of_date),
                                                        'DD-MON-RR'),
                                               'DD-MON-RR')
                                          - (crh.gl_date)) ))  BETWEEN 31 AND 60)   bucket_2,
         (SELECT TO_CHAR (
                                          (  ( NVL( PS.amount_due_original,0)
                                              - (  NVL (
                                                      (SELECT  NVL (SUM (amount_applied)*-1,0)
                                                         FROM ar_receivable_applications_all
                                                        WHERE     status = 'APP'
                                                              AND cash_receipt_id =cr.cash_receipt_id
                                                              AND TRUNC (gl_date) <= :p_as_of_date),
                                                      0)
                                                 - NVL (
                                                      (SELECT  NVL(SUM (amount),0)
                                                         FROM ar_adjustments_all
                                                        WHERE     customer_trx_id =cr.cash_receipt_id
                                                         AND  NVL(STATUS,'#')<> NVL('R','#')
                                                              AND TRUNC (gl_date) <= :p_as_of_date),
                                                      0)))
                                           * NVL (PS.exchange_rate, 1)),
                                          fnd_currency.get_format_mask (
                                             cr.currency_code,
                                             40))
                                  FROM DUAL
                                 WHERE  (ABS (CEIL (
                                            TO_DATE (
                                               TO_CHAR ( (:p_as_of_date),
                                                        'DD-MON-RR'),
                                               'DD-MON-RR')
                                          - (crh.gl_date)) ))  BETWEEN 61 AND 90)    bucket_3,
         (SELECT TO_CHAR (
                                          (  ( NVL( PS.amount_due_original,0)
                                              - (  NVL (
                                                      (SELECT  NVL (SUM (amount_applied)*-1,0)
                                                         FROM ar_receivable_applications_all
                                                        WHERE     status = 'APP'
                                                              AND cash_receipt_id =cr.cash_receipt_id
                                                              AND TRUNC (gl_date) <= :p_as_of_date),
                                                      0)
                                                 - NVL (
                                                      (SELECT  NVL(SUM (amount),0)
                                                         FROM ar_adjustments_all
                                                        WHERE     customer_trx_id =cr.cash_receipt_id
                                                         AND  NVL(STATUS,'#')<> NVL('R','#')
                                                              AND TRUNC (gl_date) <= :p_as_of_date),
                                                      0)))
                                           * NVL (PS.exchange_rate, 1)),
                                          fnd_currency.get_format_mask (
                                             cr.currency_code,
                                             40))
                                  FROM DUAL
                                 WHERE  (ABS (CEIL (
                                            TO_DATE (
                                               TO_CHAR ( (:p_as_of_date),
                                                        'DD-MON-RR'),
                                               'DD-MON-RR')
                                          - (crh.gl_date)) ))  BETWEEN 91 AND 120)   bucket_4,
          (SELECT TO_CHAR (
                                          (  ( NVL( PS.amount_due_original,0)
                                              - (  NVL (
                                                      (SELECT  NVL (SUM (amount_applied)*-1,0)
                                                         FROM ar_receivable_applications_all
                                                        WHERE     status = 'APP'
                                                              AND cash_receipt_id =cr.cash_receipt_id
                                                              AND TRUNC (gl_date) <= :p_as_of_date),
                                                      0)
                                                 - NVL (
                                                      (SELECT  NVL(SUM (amount),0)
                                                         FROM ar_adjustments_all
                                                        WHERE     customer_trx_id =cr.cash_receipt_id
                                                         AND  NVL(STATUS,'#')<> NVL('R','#')
                                                              AND TRUNC (gl_date) <= :p_as_of_date),
                                                      0)))
                                           * NVL (PS.exchange_rate, 1)),
                                          fnd_currency.get_format_mask (
                                             cr.currency_code,
                                             40))
                                  FROM DUAL
                                 WHERE  (ABS (CEIL (
                                            TO_DATE (
                                               TO_CHAR ( (:p_as_of_date),
                                                        'DD-MON-RR'),
                                               'DD-MON-RR')
                                          - (crh.gl_date)) ))  BETWEEN 121 AND 150)   bucket_5,
          (SELECT TO_CHAR (
                                          (  ( NVL( PS.amount_due_original,0)
                                              - (  NVL (
                                                      (SELECT  NVL (SUM (amount_applied)*-1,0)
                                                         FROM ar_receivable_applications_all
                                                        WHERE     status = 'APP'
                                                              AND cash_receipt_id =cr.cash_receipt_id
                                                              AND TRUNC (gl_date) <= :p_as_of_date),
                                                      0)
                                                 - NVL (
                                                      (SELECT  NVL(SUM (amount),0)
                                                         FROM ar_adjustments_all
                                                        WHERE     customer_trx_id =cr.cash_receipt_id
                                                         AND  NVL(STATUS,'#')<> NVL('R','#')
                                                              AND TRUNC (gl_date) <= :p_as_of_date),
                                                      0)))
                                           * NVL (PS.exchange_rate, 1)),
                                          fnd_currency.get_format_mask (
                                             cr.currency_code,
                                             40))
                                  FROM DUAL
                                 WHERE  (ABS (CEIL (
                                            TO_DATE (
                                               TO_CHAR ( (:p_as_of_date),
                                                        'DD-MON-RR'),
                                               'DD-MON-RR')
                                          - (crh.gl_date)) )) between 151 and 180)  bucket_6,
                     -------------upedra
                     
                     (SELECT TO_CHAR (
                                          (  ( NVL( PS.amount_due_original,0)
                                              - (  NVL (
                                                      (SELECT  NVL (SUM (amount_applied)*-1,0)
                                                         FROM ar_receivable_applications_all
                                                        WHERE     status = 'APP'
                                                              AND cash_receipt_id =cr.cash_receipt_id
                                                              AND TRUNC (gl_date) <= :p_as_of_date),
                                                      0)
                                                 - NVL (
                                                      (SELECT  NVL(SUM (amount),0)
                                                         FROM ar_adjustments_all
                                                        WHERE     customer_trx_id =cr.cash_receipt_id
                                                         AND  NVL(STATUS,'#')<> NVL('R','#')
                                                              AND TRUNC (gl_date) <= :p_as_of_date),
                                                      0)))
                                           * NVL (PS.exchange_rate, 1)),
                                          fnd_currency.get_format_mask (
                                             cr.currency_code,
                                             40))
                                  FROM DUAL
                                 WHERE  (ABS (CEIL (
                                            TO_DATE (
                                               TO_CHAR ( (:p_as_of_date),
                                                        'DD-MON-RR'),
                                               'DD-MON-RR')
                                          - (crh.gl_date)) )) between 181 and 210)
                                  bucket_7,
                                 (SELECT TO_CHAR (
                                          (  ( NVL( PS.amount_due_original,0)
                                              - (  NVL (
                                                      (SELECT  NVL (SUM (amount_applied)*-1,0)
                                                         FROM ar_receivable_applications_all
                                                        WHERE     status = 'APP'
                                                              AND cash_receipt_id =cr.cash_receipt_id
                                                              AND TRUNC (gl_date) <= :p_as_of_date),
                                                      0)
                                                 - NVL (
                                                      (SELECT  NVL(SUM (amount),0)
                                                         FROM ar_adjustments_all
                                                        WHERE     customer_trx_id =cr.cash_receipt_id
                                                         AND  NVL(STATUS,'#')<> NVL('R','#')
                                                              AND TRUNC (gl_date) <= :p_as_of_date),
                                                      0)))
                                           * NVL (PS.exchange_rate, 1)),
                                          fnd_currency.get_format_mask (
                                             cr.currency_code,
                                             40))
                                  FROM DUAL
                                 WHERE  (ABS (CEIL (
                                            TO_DATE (
                                               TO_CHAR ( (:p_as_of_date),
                                                        'DD-MON-RR'),
                                               'DD-MON-RR')
                                          - (crh.gl_date)) )) between 211 and 240)
                                  bucket_8,
                                  (SELECT TO_CHAR (
                                          (  ( NVL( PS.amount_due_original,0)
                                              - (  NVL (
                                                      (SELECT  NVL (SUM (amount_applied)*-1,0)
                                                         FROM ar_receivable_applications_all
                                                        WHERE     status = 'APP'
                                                              AND cash_receipt_id =cr.cash_receipt_id
                                                              AND TRUNC (gl_date) <= :p_as_of_date),
                                                      0)
                                                 - NVL (
                                                      (SELECT  NVL(SUM (amount),0)
                                                         FROM ar_adjustments_all
                                                        WHERE     customer_trx_id =cr.cash_receipt_id
                                                         AND  NVL(STATUS,'#')<> NVL('R','#')
                                                              AND TRUNC (gl_date) <= :p_as_of_date),
                                                      0)))
                                           * NVL (PS.exchange_rate, 1)),
                                          fnd_currency.get_format_mask (
                                             cr.currency_code,
                                             40))
                                  FROM DUAL
                                 WHERE  (ABS (CEIL (
                                            TO_DATE (
                                               TO_CHAR ( (:p_as_of_date),
                                                        'DD-MON-RR'),
                                               'DD-MON-RR')
                                          - (crh.gl_date)) )) between 241 and 270)
                                  bucket_9,
                                 (SELECT TO_CHAR (
                                          (  ( NVL( PS.amount_due_original,0)
                                              - (  NVL (
                                                      (SELECT  NVL (SUM (amount_applied)*-1,0)
                                                         FROM ar_receivable_applications_all
                                                        WHERE     status = 'APP'
                                                              AND cash_receipt_id =cr.cash_receipt_id
                                                              AND TRUNC (gl_date) <= :p_as_of_date),
                                                      0)
                                                 - NVL (
                                                      (SELECT  NVL(SUM (amount),0)
                                                         FROM ar_adjustments_all
                                                        WHERE     customer_trx_id =cr.cash_receipt_id
                                                         AND  NVL(STATUS,'#')<> NVL('R','#')
                                                              AND TRUNC (gl_date) <= :p_as_of_date),
                                                      0)))
                                           * NVL (PS.exchange_rate, 1)),
                                          fnd_currency.get_format_mask (
                                             cr.currency_code,
                                             40))
                                  FROM DUAL
                                 WHERE  (ABS (CEIL (
                                            TO_DATE (
                                               TO_CHAR ( (:p_as_of_date),
                                                        'DD-MON-RR'),
                                               'DD-MON-RR')
                                          - (crh.gl_date)) )) between 271 and 300)
                                  bucket_10,
                                  (SELECT TO_CHAR (
                                          (  ( NVL( PS.amount_due_original,0)
                                              - (  NVL (
                                                      (SELECT  NVL (SUM (amount_applied)*-1,0)
                                                         FROM ar_receivable_applications_all
                                                        WHERE     status = 'APP'
                                                              AND cash_receipt_id =cr.cash_receipt_id
                                                              AND TRUNC (gl_date) <= :p_as_of_date),
                                                      0)
                                                 - NVL (
                                                      (SELECT  NVL(SUM (amount),0)
                                                         FROM ar_adjustments_all
                                                        WHERE     customer_trx_id =cr.cash_receipt_id
                                                         AND  NVL(STATUS,'#')<> NVL('R','#')
                                                              AND TRUNC (gl_date) <= :p_as_of_date),
                                                      0)))
                                           * NVL (PS.exchange_rate, 1)),
                                          fnd_currency.get_format_mask (
                                             cr.currency_code,
                                             40))
                                  FROM DUAL
                                 WHERE  (ABS (CEIL (
                                            TO_DATE (
                                               TO_CHAR ( (:p_as_of_date),
                                                        'DD-MON-RR'),
                                               'DD-MON-RR')
                                          - (crh.gl_date)) )) between 301 and 330)
                                  bucket_11,
                                   (SELECT TO_CHAR (
                                          (  ( NVL( PS.amount_due_original,0)
                                              - (  NVL (
                                                      (SELECT  NVL (SUM (amount_applied)*-1,0)
                                                         FROM ar_receivable_applications_all
                                                        WHERE     status = 'APP'
                                                              AND cash_receipt_id =cr.cash_receipt_id
                                                              AND TRUNC (gl_date) <= :p_as_of_date),
                                                      0)
                                                 - NVL (
                                                      (SELECT  NVL(SUM (amount),0)
                                                         FROM ar_adjustments_all
                                                        WHERE     customer_trx_id =cr.cash_receipt_id
                                                         AND  NVL(STATUS,'#')<> NVL('R','#')
                                                              AND TRUNC (gl_date) <= :p_as_of_date),
                                                      0)))
                                           * NVL (PS.exchange_rate, 1)),
                                          fnd_currency.get_format_mask (
                                             cr.currency_code,
                                             40))
                                  FROM DUAL
                                 WHERE  (ABS (CEIL (
                                            TO_DATE (
                                               TO_CHAR ( (:p_as_of_date),
                                                        'DD-MON-RR'),
                                               'DD-MON-RR')
                                          - (crh.gl_date)) )) between 331 and 365)
                                  bucket_12,
                                  (SELECT TO_CHAR (
                                          (  ( NVL( PS.amount_due_original,0)
                                              - (  NVL (
                                                      (SELECT  NVL (SUM (amount_applied)*-1,0)
                                                         FROM ar_receivable_applications_all
                                                        WHERE     status = 'APP'
                                                              AND cash_receipt_id =cr.cash_receipt_id
                                                              AND TRUNC (gl_date) <= :p_as_of_date),
                                                      0)
                                                 - NVL (
                                                      (SELECT  NVL(SUM (amount),0)
                                                         FROM ar_adjustments_all
                                                        WHERE     customer_trx_id =cr.cash_receipt_id
                                                         AND  NVL(STATUS,'#')<> NVL('R','#')
                                                              AND TRUNC (gl_date) <= :p_as_of_date),
                                                      0)))
                                           * NVL (PS.exchange_rate, 1)),
                                          fnd_currency.get_format_mask (
                                             cr.currency_code,
                                             40))
                                  FROM DUAL
                                 WHERE  (ABS (CEIL (
                                            TO_DATE (
                                               TO_CHAR ( (:p_as_of_date),
                                                        'DD-MON-RR'),
                                               'DD-MON-RR')
                                          - (crh.gl_date)) )) between 366 and 730)
                                  bucket_13,
                                   (SELECT TO_CHAR (
                                          (  ( NVL( PS.amount_due_original,0)
                                              - (  NVL (
                                                      (SELECT  NVL (SUM (amount_applied)*-1,0)
                                                         FROM ar_receivable_applications_all
                                                        WHERE     status = 'APP'
                                                              AND cash_receipt_id =cr.cash_receipt_id
                                                              AND TRUNC (gl_date) <= :p_as_of_date),
                                                      0)
                                                 - NVL (
                                                      (SELECT  NVL(SUM (amount),0)
                                                         FROM ar_adjustments_all
                                                        WHERE     customer_trx_id =cr.cash_receipt_id
                                                         AND  NVL(STATUS,'#')<> NVL('R','#')
                                                              AND TRUNC (gl_date) <= :p_as_of_date),
                                                      0)))
                                           * NVL (PS.exchange_rate, 1)),
                                          fnd_currency.get_format_mask (
                                             cr.currency_code,
                                             40))
                                  FROM DUAL
                                 WHERE  (ABS (CEIL (
                                            TO_DATE (
                                               TO_CHAR ( (:p_as_of_date),
                                                        'DD-MON-RR'),
                                               'DD-MON-RR')
                                          - (crh.gl_date)) )) >731)
                                  bucket_14,
                     
                     -------------upendra                     
    (SELECT TO_CHAR (
                                          (  ( NVL( PS.amount_due_original,0)
                                              - (  NVL (
                                                      (SELECT  NVL (SUM (amount_applied)*-1,0)
                                                         FROM ar_receivable_applications_all
                                                        WHERE     status = 'APP'
                                                              AND cash_receipt_id =cr.cash_receipt_id
                                                              AND TRUNC (gl_date) <= :p_as_of_date),
                                                      0)
                                                 - NVL (
                                                      (SELECT  NVL(SUM (amount),0)
                                                         FROM ar_adjustments_all
                                                        WHERE     customer_trx_id =cr.cash_receipt_id
                                                         AND  NVL(STATUS,'#')<> NVL('R','#')
                                                              AND TRUNC (gl_date) <= :p_as_of_date),
                                                      0)))
                                           * NVL (PS.exchange_rate, 1)),
                                          fnd_currency.get_format_mask (
                                             cr.currency_code,
                                             40))
                                  FROM DUAL
                                 WHERE  (ABS (CEIL (
                                            TO_DATE (
                                               TO_CHAR ( (:p_as_of_date),
                                                        'DD-MON-RR'),
                                               'DD-MON-RR')
                                          - (cr.receipt_date)) )) =0) bucket_0_i,
                                 (SELECT TO_CHAR (
                                          (  ( NVL( PS.amount_due_original,0)
                                              - (  NVL (
                                                      (SELECT  NVL (SUM (amount_applied)*-1,0)
                                                         FROM ar_receivable_applications_all
                                                        WHERE     status = 'APP'
                                                              AND cash_receipt_id =cr.cash_receipt_id
                                                              AND TRUNC (gl_date) <= :p_as_of_date),
                                                      0)
                                                 - NVL (
                                                      (SELECT  NVL(SUM (amount),0)
                                                         FROM ar_adjustments_all
                                                        WHERE     customer_trx_id =cr.cash_receipt_id
                                                         AND  NVL(STATUS,'#')<> NVL('R','#')
                                                              AND TRUNC (gl_date) <= :p_as_of_date),
                                                      0)))
                                           * NVL (PS.exchange_rate, 1)),
                                          fnd_currency.get_format_mask (
                                             cr.currency_code,
                                             40))
                                  FROM DUAL
                                 WHERE  (ABS (CEIL (
                                            TO_DATE (
                                               TO_CHAR ( (:p_as_of_date),
                                                        'DD-MON-RR'),
                                               'DD-MON-RR')
                                          - (cr.receipt_date)))) BETWEEN 1 AND 30)  bucket_1_i,
    (SELECT TO_CHAR (
                                          (  ( NVL( PS.amount_due_original,0)
                                              - (  NVL (
                                                      (SELECT  NVL (SUM (amount_applied)*-1,0)
                                                         FROM ar_receivable_applications_all
                                                        WHERE     status = 'APP'
                                                              AND cash_receipt_id =cr.cash_receipt_id
                                                              AND TRUNC (gl_date) <= :p_as_of_date),
                                                      0)
                                                 - NVL (
                                                      (SELECT  NVL(SUM (amount),0)
                                                         FROM ar_adjustments_all
                                                        WHERE     customer_trx_id =cr.cash_receipt_id
                                                         AND  NVL(STATUS,'#')<> NVL('R','#')
                                                              AND TRUNC (gl_date) <= :p_as_of_date),
                                                      0)))
                                           * NVL (PS.exchange_rate, 1)),
                                          fnd_currency.get_format_mask (
                                             cr.currency_code,
                                             40))
                                  FROM DUAL
                                 WHERE CEIL (
                                            TO_DATE (
                                               TO_CHAR ( (:p_as_of_date),
                                                        'DD-MON-RR'),
                                               'DD-MON-RR')
                                          - (cr.receipt_date)) BETWEEN 31 AND 60)  bucket_2_i,
    (SELECT TO_CHAR (
                                          (  ( NVL( PS.amount_due_original,0)
                                              - (  NVL (
                                                      (SELECT  NVL (SUM (amount_applied)*-1,0)
                                                         FROM ar_receivable_applications_all
                                                        WHERE     status = 'APP'
                                                              AND cash_receipt_id =cr.cash_receipt_id
                                                              AND TRUNC (gl_date) <= :p_as_of_date),
                                                      0)
                                                 - NVL (
                                                      (SELECT  NVL(SUM (amount),0)
                                                         FROM ar_adjustments_all
                                                        WHERE     customer_trx_id =cr.cash_receipt_id
                                                         AND  NVL(STATUS,'#')<> NVL('R','#')
                                                              AND TRUNC (gl_date) <= :p_as_of_date),
                                                      0)))
                                           * NVL (PS.exchange_rate, 1)),
                                          fnd_currency.get_format_mask (
                                             cr.currency_code,
                                             40))
                                  FROM DUAL
                                 WHERE CEIL (
                                            TO_DATE (
                                               TO_CHAR ( (:p_as_of_date),
                                                        'DD-MON-RR'),
                                               'DD-MON-RR')
                                          - (cr.receipt_date)) BETWEEN 61 AND 90)        bucket_3_i,
    (SELECT TO_CHAR (
                                          (  ( NVL( PS.amount_due_original,0)
                                              - (  NVL (
                                                      (SELECT  NVL (SUM (amount_applied)*-1,0)
                                                         FROM ar_receivable_applications_all
                                                        WHERE     status = 'APP'
                                                              AND cash_receipt_id =cr.cash_receipt_id
                                                              AND TRUNC (gl_date) <= :p_as_of_date),
                                                      0)
                                                 - NVL (
                                                      (SELECT  NVL(SUM (amount),0)
                                                         FROM ar_adjustments_all
                                                        WHERE     customer_trx_id =cr.cash_receipt_id
                                                         AND  NVL(STATUS,'#')<> NVL('R','#')
                                                              AND TRUNC (gl_date) <= :p_as_of_date),
                                                      0)))
                                           * NVL (PS.exchange_rate, 1)),
                                          fnd_currency.get_format_mask (
                                             cr.currency_code,
                                             40))
                                  FROM DUAL
                                 WHERE CEIL (
                                            TO_DATE (
                                               TO_CHAR ( (:p_as_of_date),
                                                        'DD-MON-RR'),
                                               'DD-MON-RR')
                                          - (cr.receipt_date)) BETWEEN 91 AND 120)      bucket_4_i,
     (SELECT TO_CHAR (
                                          (  ( NVL( PS.amount_due_original,0)
                                              - (  NVL (
                                                      (SELECT  NVL (SUM (amount_applied)*-1,0)
                                                         FROM ar_receivable_applications_all
                                                        WHERE     status = 'APP'
                                                              AND cash_receipt_id =cr.cash_receipt_id
                                                              AND TRUNC (gl_date) <= :p_as_of_date),
                                                      0)
                                                 - NVL (
                                                      (SELECT  NVL(SUM (amount),0)
                                                         FROM ar_adjustments_all
                                                        WHERE     customer_trx_id =cr.cash_receipt_id
                                                         AND  NVL(STATUS,'#')<> NVL('R','#')
                                                              AND TRUNC (gl_date) <= :p_as_of_date),
                                                      0)))
                                           * NVL (PS.exchange_rate, 1)),
                                          fnd_currency.get_format_mask (
                                             cr.currency_code,
                                             40))
                                  FROM DUAL
                                 WHERE CEIL (
                                            TO_DATE (
                                               TO_CHAR ( (:p_as_of_date),
                                                        'DD-MON-RR'),
                                               'DD-MON-RR')
                                          - (cr.receipt_date)) BETWEEN 121 AND 150)  bucket_5_i,
     (SELECT TO_CHAR (
                                          (  ( NVL( PS.amount_due_original,0)
                                              - (  NVL (
                                                      (SELECT  NVL (SUM (amount_applied)*-1,0)
                                                         FROM ar_receivable_applications_all
                                                        WHERE     status = 'APP'
                                                              AND cash_receipt_id =cr.cash_receipt_id
                                                              AND TRUNC (gl_date) <= :p_as_of_date),
                                                      0)
                                                 - NVL (
                                                      (SELECT  NVL(SUM (amount),0)
                                                         FROM ar_adjustments_all
                                                        WHERE     customer_trx_id =cr.cash_receipt_id
                                                         AND  NVL(STATUS,'#')<> NVL('R','#')
                                                              AND TRUNC (gl_date) <= :p_as_of_date),
                                                      0)))
                                           * NVL (PS.exchange_rate, 1)),
                                          fnd_currency.get_format_mask (
                                             cr.currency_code,
                                             40))
                                  FROM DUAL
                                 WHERE CEIL (
                                            TO_DATE (
                                               TO_CHAR ( (:p_as_of_date),
                                                        'DD-MON-RR'),
                                               'DD-MON-RR')
                                          - (cr.receipt_date)) >=151)     bucket_6_i,
     CR.CUSTOMER_SITE_USE_ID 
      ,(SELECT DISTINCT   gcc.segment1
    FROM ar_distributions_all ad, gl_code_combinations gcc
    WHERE 1=1
    AND SOURCE_TYPE = 'UNAPP'
    AND EXISTS (
    SELECT '1'
    FROM ar_receivable_applications_all a,
    ar_cash_receipts_all b
    WHERE a.cash_receipt_id = b.cash_receipt_id
    AND a.receivable_application_id = source_id
    AND b.org_id = a.org_id
    AND B.cash_receipt_id =cr.cash_receipt_id and rownum=1)
    AND ad.code_combination_id = gcc.code_combination_id AND ROWNUM=1)entity  
    ,CR.COMMENTS LINE_DESC 
    ,null GL_code  --FTP1125 
    ,null entity1
                                     ,null cost_center
                                     ,null prj
                                     ,null corp_fun
                                     ,null loc
                                     ,null inter_com
                                     ,null fut1
                                     ,null fut2
      FROM ar_payment_schedules_all ps,
           hz_cust_accounts h,
           hr_operating_units o,
           ar_receipt_methods m,
           ar_cash_receipts_all cr,
           AR_CASH_RECEIPT_HISTORY_ALL CRH,
           hz_parties hz,
            hz_party_sites hps
           , hz_cust_acct_sites_all hcasa
           , hz_cust_site_uses_all hcsua
           
     WHERE 1=1
      AND  cr.cash_receipt_id= CRH.cash_receipt_id
       AND ps.customer_id = h.cust_account_id
       AND ps.cash_receipt_id = cr.cash_receipt_id
       AND cr.receipt_method_id = m.receipt_method_id
       AND ps.CLASS = 'PMT'
       AND ps.status = 'OP'
       AND ps.org_id = o.organization_id
       AND hz.party_id = h.party_id
        AND hz.party_id = hps.party_id
         AND hcasa.party_site_id = hps.party_site_id
         AND h.cust_account_id = hcasa.cust_account_id
         AND hcasa.cust_acct_site_id = hcsua.cust_acct_site_id
        AND hcsua.SITE_USE_CODE='BILL_TO'
        AND cr.org_id = NVL ( (SELECT organization_id  FROM hr_operating_units
                               WHERE NAME = :p_org_name), cr.org_id)                             
        AND hz.party_id = NVL ( (SELECT h.party_id
                                               FROM hz_parties h
                                              WHERE h.party_name = :p_cust), hz.party_id)
--      AND ( hz.party_id IN (:p_cust) OR 'All' IN (:p_cust || 'All') )  
--         AND   h.cust_account_id= NVL (:p_cust,h.cust_account_id)                                      
                                                                  
            ) b
               WHERE 1 = 1------AND party_name like 'ESCORTS LTD.'
--               AND  B.invoice_number IN ('NEFT 24/7/2020','11002838','121/DL/19/I0101')

             )
    GROUP BY unit_code,
             --         org_id,
             party_name,
             --         party_name,
             --         party_id party_id_1,
             --         party_id,
             customer_number,
             customer_site,
             transaction_type,
             invoice_number,
             invoice_type,
             invoice_amount,
             amount_received,
             Bal_Amount,
             invoice_date,
             due_date,
             GL_DATE,INVOICE_CURRENCY_CODE,GL_ACCOUNT,receivable_acct,entity,LINE_DESC,sno,GL_code
              ,entity1,cost_center, prj, corp_fun, loc, inter_com
             , fut1,fut2 
    ORDER BY party_name,customer_site,invoice_date
==========================================================================================================
SELECT
(SELECT rct.NAME
          FROM ra_cust_trx_types_all rct
         WHERE rct.cust_trx_type_seq_id = ratrx.CUST_TRX_TYPE_SEQ_ID
--           AND rct.org_id = ratrx.org_id
           ) transaction_type,
       b.trx_number,
--            TAX.attribute5,
            TAX.line_type,
       (select DISTINCT RCTA2.attribute1
       from ra_customer_trx_all RCTA1, ra_customer_trx_all RCTA2
         where RCTA1.interface_header_attribute1  = RCTA2.attribute1
         and RCTA1.trx_number=b.trx_number)UER_INVOICE_NUM,
        b.trans_amount_remaining due_amount,
--        to_date(to_char(b.as_of_date,'dd/mm/yyyy'),'dd/mm/yyyy')as_of_date,
        to_char(b.as_of_date,'DD-MON-YYYY')as_of_date,
       REPLACE (tax.party_name, ',', ' ') customer_name,
        tax.group_name,
         (
        SELECT
            bpty12.person_first_name
            || ' '
            || bpty12.person_last_name
        FROM
            hz_cust_accounts hca,
            hz_cust_account_roles hcar12,
            hz_relationships hrel12,
            hz_parties bpty12
        WHERE
            1 = 1
            AND hcar12.cust_account_role_id (+) = ratrx.bill_to_contact_id
            AND hrel12.object_id = bpty12.party_id
            AND bpty12.party_id = hca.party_id
            AND hcar12.cust_account_id = hca.cust_account_id
            AND hrel12.subject_id = bpty12.party_id (+)
            AND hrel12.subject_table_name (+) = 'HZ_PARTIES'
            AND hrel12.object_table_name (+) = 'HZ_PARTIES'
            AND hrel12.directional_flag (+) = 'F'
            AND hcar12.role_type (+) = 'CONTACT'
    ) cust_contact,
       ( SELECT
    bpty13.orig_system_reference
FROM   hz_cust_accounts hca,
       hz_cust_account_roles hcar13,
       hz_relationships hrel13,
       hz_parties bpty13
WHERE
    1 = 1
    AND hcar13.cust_account_role_id (+) = ratrx.bill_to_contact_id
    AND hrel13.object_id = bpty13.party_id
    AND bpty13.party_id = hca.party_id
    AND hcar13.cust_account_id = hca.cust_account_id
            AND hrel13.subject_id = bpty13.party_id (+)
                AND hrel13.subject_table_name (+) = 'HZ_PARTIES'
                    AND hrel13.object_table_name (+) = 'HZ_PARTIES'
                        AND hrel13.directional_flag (+) = 'F'
                            AND hcar13.role_type (+) = 'CONTACT'
) cust_contact_id,
           ratrx.CT_REFERENCE CUSTOMER_REFRENCE,
--           GCC.SEGMENT1 Entity,
--           GCC.SEGMENT2 Account,
--           GCC.SEGMENT3  Analysis,
--           GCC.SEGMENT4  Product_Project ,
--           GCC.SEGMENT5  Office_Location,
--           GCC.SEGMENT6  Intercompany,
--           GCC.SEGMENT7  Cost_Center,
--           GCC.SEGMENT8  Future_1,
--           GCC.SEGMENT9  Future_2,
--           GCC.SEGMENT10  Future_3,
            GCC.SEGMENT1 Entity,
           GCC.SEGMENT2 Account,
           TAX.attribute5 Cost_Center,
           GCC.SEGMENT3  Bus_cost_center,
           GCC.SEGMENT4  Product_Project ,
           GCC.SEGMENT5  corp_cost_center,
           GCC.SEGMENT6  Intercompany,
           GCC.SEGMENT7  Location,
           GCC.SEGMENT8  Future_1,
           GCC.SEGMENT9  Future_2,
       TO_CHAR(b.transaction_date,'DD-MON-YYYY'), b.trx_currency_code currency_type,
       DECODE (b.trx_currency_code,
               'INR', 1,
               NVL (gldr.conversion_rate, 0)
              ) conversion_rate,
       NVL (ratrx.exchange_rate, 0) exchange_rate, b.trans_amount,
       tax.tax_remaining, tax.line_remaining,
         b.trans_amount
       * NVL
            (ratrx.exchange_rate,
             DECODE (case when b.trx_currency_code<>b.functional_currency_code then 
             (SELECT conversion_rate 
		 from gl_daily_rates gldr
		 WHERE gldr.from_currency = b.trx_currency_code
			   AND gldr.to_currency = b.functional_currency_code
			   AND gldr.conversion_type = 'Corporate'
			   AND gldr.conversion_date = :as_of_date--SYSDATE
               )
               else 0
               end,
                     0, NVL (ratrx.exchange_rate, 0),
                     case when b.trx_currency_code<>b.functional_currency_code then 
             (SELECT conversion_rate 
		 from gl_daily_rates gldr
		 WHERE gldr.from_currency = b.trx_currency_code
			   AND gldr.to_currency = b.functional_currency_code
			   AND gldr.conversion_type = 'Corporate'
			   AND gldr.conversion_date = :as_of_date--SYSDATE
               )
               else 0
               end
                    )
            ) func_trans_amount,
         tax.tax_remaining
       * DECODE (case when b.trx_currency_code<>b.functional_currency_code then 
             (SELECT conversion_rate 
		 from gl_daily_rates gldr
		 WHERE gldr.from_currency = b.trx_currency_code
			   AND gldr.to_currency = b.functional_currency_code
			   AND gldr.conversion_type = 'Corporate'
			   AND gldr.conversion_date = :as_of_date)
               else 0
               end,
                 0, NVL (ratrx.exchange_rate, 0),
                 case when b.trx_currency_code<>b.functional_currency_code then 
             (SELECT conversion_rate 
		 from gl_daily_rates gldr
		 WHERE gldr.from_currency = b.trx_currency_code
			   AND gldr.to_currency = b.functional_currency_code
			   AND gldr.conversion_type = 'Corporate'
			   AND gldr.conversion_date = :as_of_date)
               else 0
               end
                ) func_tax_remaining,
         tax.line_remaining
       * DECODE (case when b.trx_currency_code<>b.functional_currency_code then 
             (SELECT conversion_rate 
		 from gl_daily_rates gldr
		 WHERE gldr.from_currency = b.trx_currency_code
			   AND gldr.to_currency = b.functional_currency_code
			   AND gldr.conversion_type = 'Corporate'
			   AND gldr.conversion_date = :as_of_date)
               else 0
               end,
                 0, NVL (ratrx.exchange_rate, 0),
                 case when b.trx_currency_code<>b.functional_currency_code then 
             (SELECT conversion_rate 
		 from gl_daily_rates gldr
		 WHERE gldr.from_currency = b.trx_currency_code
			   AND gldr.to_currency = b.functional_currency_code
			   AND gldr.conversion_type = 'Corporate'
			   AND gldr.conversion_date = :as_of_date)
               else 0
               end
                ) func_line_remaining,
       tax.line_applied, tax.tax_applied,
       (CASE
           WHEN TRUNC (  to_date(to_char(as_of_date,'dd/mm/yyyy'),'dd/mm/yyyy')
                       - to_date(to_char(transaction_date,'dd/mm/yyyy'),'dd/mm/yyyy')
                      ) BETWEEN 0 AND 30
              THEN   (tax.tax_remaining + tax.line_remaining)
                   * DECODE
                        (case when b.trx_currency_code<>b.functional_currency_code then 
             (SELECT conversion_rate 
		 from gl_daily_rates gldr
		 WHERE gldr.from_currency = b.trx_currency_code
			   AND gldr.to_currency = b.functional_currency_code
			   AND gldr.conversion_type = 'Corporate'
			   AND gldr.conversion_date = :as_of_date)
               else 0
               end,
                         0, NVL (ratrx.exchange_rate, 0),
                         case when b.trx_currency_code<>b.functional_currency_code then 
             (SELECT conversion_rate 
		 from gl_daily_rates gldr
		 WHERE gldr.from_currency = b.trx_currency_code
			   AND gldr.to_currency = b.functional_currency_code
			   AND gldr.conversion_type = 'Corporate'
			   AND gldr.conversion_date = :as_of_date)
               else 0
               end
                        )
           ELSE 0
        END
       ) days0to30,
       (CASE
           WHEN TRUNC (  to_date(to_char(as_of_date,'dd/mm/yyyy'),'dd/mm/yyyy')
                       - to_date(to_char(transaction_date,'dd/mm/yyyy'),'dd/mm/yyyy')
                      ) BETWEEN 31 AND 60
              THEN   (tax.tax_remaining + tax.line_remaining)
                   * DECODE
                        (case when b.trx_currency_code<>b.functional_currency_code then 
             (SELECT conversion_rate 
		 from gl_daily_rates gldr
		 WHERE gldr.from_currency = b.trx_currency_code
			   AND gldr.to_currency = b.functional_currency_code
			   AND gldr.conversion_type = 'Corporate'
			   AND gldr.conversion_date = :as_of_date)
               else 0
               end,
                         0, NVL (ratrx.exchange_rate, 0),
                         case when b.trx_currency_code<>b.functional_currency_code then 
             (SELECT conversion_rate 
		 from gl_daily_rates gldr
		 WHERE gldr.from_currency = b.trx_currency_code
			   AND gldr.to_currency = b.functional_currency_code
			   AND gldr.conversion_type = 'Corporate'
			   AND gldr.conversion_date = :as_of_date)
               else 0
               end
                        )
           ELSE 0
        END
       ) days31to60,                                         --Days31to60,--18
       (CASE
           WHEN TRUNC (  to_date(to_char(as_of_date,'dd/mm/yyyy'),'dd/mm/yyyy')
                       - to_date(to_char(transaction_date,'dd/mm/yyyy'),'dd/mm/yyyy')
                      ) BETWEEN 61 AND 90
              THEN   (tax.tax_remaining + tax.line_remaining)
                   * DECODE
                        (case when b.trx_currency_code<>b.functional_currency_code then 
             (SELECT conversion_rate 
		 from gl_daily_rates gldr
		 WHERE gldr.from_currency = b.trx_currency_code
			   AND gldr.to_currency = b.functional_currency_code
			   AND gldr.conversion_type = 'Corporate'
			   AND gldr.conversion_date = :as_of_date)
               else 0
               end,
                         0, NVL (ratrx.exchange_rate, 0),
                         case when b.trx_currency_code<>b.functional_currency_code then 
             (SELECT conversion_rate 
		 from gl_daily_rates gldr
		 WHERE gldr.from_currency = b.trx_currency_code
			   AND gldr.to_currency = b.functional_currency_code
			   AND gldr.conversion_type = 'Corporate'
			   AND gldr.conversion_date = :as_of_date)
               else 0
               end
                        )
           ELSE 0
        END
       ) days61to90,                                                      --19
       (CASE
           WHEN TRUNC (  to_date(to_char(as_of_date,'dd/mm/yyyy'),'dd/mm/yyyy')
                       - to_date(to_char(transaction_date,'dd/mm/yyyy'),'dd/mm/yyyy')
                      ) BETWEEN 91 AND 120
              THEN   (tax.tax_remaining + tax.line_remaining)
                   * DECODE
                        (case when b.trx_currency_code<>b.functional_currency_code then 
             (SELECT conversion_rate 
		 from gl_daily_rates gldr
		 WHERE gldr.from_currency = b.trx_currency_code
			   AND gldr.to_currency = b.functional_currency_code
			   AND gldr.conversion_type = 'Corporate'
			   AND gldr.conversion_date = :as_of_date)
               else 0
               end,
                         0, NVL (ratrx.exchange_rate, 0),
                        case when b.trx_currency_code<>b.functional_currency_code then 
             (SELECT conversion_rate 
		 from gl_daily_rates gldr
		 WHERE gldr.from_currency = b.trx_currency_code
			   AND gldr.to_currency = b.functional_currency_code
			   AND gldr.conversion_type = 'Corporate'
			   AND gldr.conversion_date = :as_of_date)
               else 0
               end
                        )
           ELSE 0
        END
       ) days91to120,                                                     --20
       (CASE
           WHEN TRUNC (  to_date(to_char(as_of_date,'dd/mm/yyyy'),'dd/mm/yyyy')
                       - to_date(to_char(transaction_date,'dd/mm/yyyy'),'dd/mm/yyyy')
                      ) BETWEEN 121 AND 150
              THEN   (tax.tax_remaining + tax.line_remaining)
                   * DECODE
                        (case when b.trx_currency_code<>b.functional_currency_code then 
             (SELECT conversion_rate 
		 from gl_daily_rates gldr
		 WHERE gldr.from_currency = b.trx_currency_code
			   AND gldr.to_currency = b.functional_currency_code
			   AND gldr.conversion_type = 'Corporate'
			   AND gldr.conversion_date = :as_of_date)
               else 0
               end,
                         0, NVL (ratrx.exchange_rate, 0),
                         case when b.trx_currency_code<>b.functional_currency_code then 
             (SELECT conversion_rate 
		 from gl_daily_rates gldr
		 WHERE gldr.from_currency = b.trx_currency_code
			   AND gldr.to_currency = b.functional_currency_code
			   AND gldr.conversion_type = 'Corporate'
			   AND gldr.conversion_date = :as_of_date)
               else 0
               end
                        )
           ELSE 0
        END
       ) days121to150,                                                    --21
       (CASE
           WHEN TRUNC (  to_date(to_char(as_of_date,'dd/mm/yyyy'),'dd/mm/yyyy')
                       - to_date(to_char(transaction_date,'dd/mm/yyyy'),'dd/mm/yyyy')
                      ) BETWEEN 151 AND 180
              THEN   (tax.tax_remaining + tax.line_remaining)
                   * DECODE
                        (case when b.trx_currency_code<>b.functional_currency_code then 
             (SELECT conversion_rate 
		 from gl_daily_rates gldr
		 WHERE gldr.from_currency = b.trx_currency_code
			   AND gldr.to_currency = b.functional_currency_code
			   AND gldr.conversion_type = 'Corporate'
			   AND gldr.conversion_date = :as_of_date)
               else 0
               end,
                         0, NVL (ratrx.exchange_rate, 0),
                        case when b.trx_currency_code<>b.functional_currency_code then 
             (SELECT conversion_rate 
		 from gl_daily_rates gldr
		 WHERE gldr.from_currency = b.trx_currency_code
			   AND gldr.to_currency = b.functional_currency_code
			   AND gldr.conversion_type = 'Corporate'
			   AND gldr.conversion_date = :as_of_date)
               else 0
               end
                        )
           ELSE 0
        END
       ) days151to180,                                                    --22
       (CASE
           WHEN TRUNC (  to_date(to_char(as_of_date,'dd/mm/yyyy'),'dd/mm/yyyy')
                       - to_date(to_char(transaction_date,'dd/mm/yyyy'),'dd/mm/yyyy')
                      ) BETWEEN 181 AND 210
              THEN   (tax.tax_remaining + tax.line_remaining)
                   * DECODE
                        (case when b.trx_currency_code<>b.functional_currency_code then 
             (SELECT conversion_rate 
		 from gl_daily_rates gldr
		 WHERE gldr.from_currency = b.trx_currency_code
			   AND gldr.to_currency = b.functional_currency_code
			   AND gldr.conversion_type = 'Corporate'
			   AND gldr.conversion_date = :as_of_date)
               else 0
               end,
                         0, NVL (ratrx.exchange_rate, 0),
                         case when b.trx_currency_code<>b.functional_currency_code then 
             (SELECT conversion_rate 
		 from gl_daily_rates gldr
		 WHERE gldr.from_currency = b.trx_currency_code
			   AND gldr.to_currency = b.functional_currency_code
			   AND gldr.conversion_type = 'Corporate'
			   AND gldr.conversion_date = :as_of_date)
               else 0
               end
                        )
           ELSE 0
        END
       ) days181to210,                                                    --23
       (CASE
           WHEN TRUNC (  to_date(to_char(as_of_date,'dd/mm/yyyy'),'dd/mm/yyyy')
                       - to_date(to_char(transaction_date,'dd/mm/yyyy'),'dd/mm/yyyy')
                      ) BETWEEN 211 AND 240
              THEN   (tax.tax_remaining + tax.line_remaining)
                   * DECODE
                        (case when b.trx_currency_code<>b.functional_currency_code then 
             (SELECT conversion_rate 
		 from gl_daily_rates gldr
		 WHERE gldr.from_currency = b.trx_currency_code
			   AND gldr.to_currency = b.functional_currency_code
			   AND gldr.conversion_type = 'Corporate'
			   AND gldr.conversion_date = :as_of_date)
               else 0
               end,
                         0, NVL (ratrx.exchange_rate, 0),
                         case when b.trx_currency_code<>b.functional_currency_code then 
             (SELECT conversion_rate 
		 from gl_daily_rates gldr
		 WHERE gldr.from_currency = b.trx_currency_code
			   AND gldr.to_currency = b.functional_currency_code
			   AND gldr.conversion_type = 'Corporate'
			   AND gldr.conversion_date = :as_of_date)
               else 0
               end
                        )
           ELSE 0
        END
       ) days211to240,                                                    --24
       (CASE
           WHEN TRUNC (  to_date(to_char(as_of_date,'dd/mm/yyyy'),'dd/mm/yyyy')
                       - to_date(to_char(transaction_date,'dd/mm/yyyy'),'dd/mm/yyyy')
                      ) BETWEEN 241 AND 270
              THEN   (tax.tax_remaining + tax.line_remaining)
                   * DECODE
                        (case when b.trx_currency_code<>b.functional_currency_code then 
             (SELECT conversion_rate 
		 from gl_daily_rates gldr
		 WHERE gldr.from_currency = b.trx_currency_code
			   AND gldr.to_currency = b.functional_currency_code
			   AND gldr.conversion_type = 'Corporate'
			   AND gldr.conversion_date = :as_of_date)
               else 0
               end,
                         0, NVL (ratrx.exchange_rate, 0),
                         case when b.trx_currency_code<>b.functional_currency_code then 
             (SELECT conversion_rate 
		 from gl_daily_rates gldr
		 WHERE gldr.from_currency = b.trx_currency_code
			   AND gldr.to_currency = b.functional_currency_code
			   AND gldr.conversion_type = 'Corporate'
			   AND gldr.conversion_date = :as_of_date)
               else 0
               end
                        )
           ELSE 0
        END
       ) days241to270,                                                    --25
       (CASE
           WHEN TRUNC (  to_date(to_char(as_of_date,'dd/mm/yyyy'),'dd/mm/yyyy')
                       - to_date(to_char(transaction_date,'dd/mm/yyyy'),'dd/mm/yyyy')
                      ) BETWEEN 271 AND 300
              THEN   (tax.tax_remaining + tax.line_remaining)
                   * DECODE
                        (case when b.trx_currency_code<>b.functional_currency_code then 
             (SELECT conversion_rate 
		 from gl_daily_rates gldr
		 WHERE gldr.from_currency = b.trx_currency_code
			   AND gldr.to_currency = b.functional_currency_code
			   AND gldr.conversion_type = 'Corporate'
			   AND gldr.conversion_date = :as_of_date)
               else 0
               end,
                         0, NVL (ratrx.exchange_rate, 0),
                         case when b.trx_currency_code<>b.functional_currency_code then 
             (SELECT conversion_rate 
		 from gl_daily_rates gldr
		 WHERE gldr.from_currency = b.trx_currency_code
			   AND gldr.to_currency = b.functional_currency_code
			   AND gldr.conversion_type = 'Corporate'
			   AND gldr.conversion_date = :as_of_date)
               else 0
               end
                        )
           ELSE 0
        END
       ) days271to300,                                                    --26
       (CASE
           WHEN TRUNC (  to_date(to_char(as_of_date,'dd/mm/yyyy'),'dd/mm/yyyy')
                       - to_date(to_char(transaction_date,'dd/mm/yyyy'),'dd/mm/yyyy')
                      ) BETWEEN 301 AND 330
              THEN   (tax.tax_remaining + tax.line_remaining)
                   * DECODE
                        (case when b.trx_currency_code<>b.functional_currency_code then 
             (SELECT conversion_rate 
		 from gl_daily_rates gldr
		 WHERE gldr.from_currency = b.trx_currency_code
			   AND gldr.to_currency = b.functional_currency_code
			   AND gldr.conversion_type = 'Corporate'
			   AND gldr.conversion_date = :as_of_date)
               else 0
               end,
                         0, NVL (ratrx.exchange_rate, 0),
                        case when b.trx_currency_code<>b.functional_currency_code then 
             (SELECT conversion_rate 
		 from gl_daily_rates gldr
		 WHERE gldr.from_currency = b.trx_currency_code
			   AND gldr.to_currency = b.functional_currency_code
			   AND gldr.conversion_type = 'Corporate'
			   AND gldr.conversion_date = :as_of_date)
               else 0
               end
                        )
           ELSE 0
        END
       ) days301to330,                                                    --27
       (CASE
           WHEN TRUNC (  to_date(to_char(as_of_date,'dd/mm/yyyy'),'dd/mm/yyyy')
                       - to_date(to_char(transaction_date,'dd/mm/yyyy'),'dd/mm/yyyy')
                      ) BETWEEN 331 AND 365
              THEN   (tax.tax_remaining + tax.line_remaining)
                   * DECODE
                        (case when b.trx_currency_code<>b.functional_currency_code then 
             (SELECT conversion_rate 
		 from gl_daily_rates gldr
		 WHERE gldr.from_currency = b.trx_currency_code
			   AND gldr.to_currency = b.functional_currency_code
			   AND gldr.conversion_type = 'Corporate'
			   AND gldr.conversion_date = :as_of_date)
               else 0
               end,
                         0, NVL (ratrx.exchange_rate, 0),
                         case when b.trx_currency_code<>b.functional_currency_code then 
             (SELECT conversion_rate 
		 from gl_daily_rates gldr
		 WHERE gldr.from_currency = b.trx_currency_code
			   AND gldr.to_currency = b.functional_currency_code
			   AND gldr.conversion_type = 'Corporate'
			   AND gldr.conversion_date = :as_of_date)
               else 0
               end
                        )
           ELSE 0
        END
       ) days331to365,                                                    --28
       (CASE
           WHEN TRUNC (  to_date(to_char(as_of_date,'dd/mm/yyyy'),'dd/mm/yyyy')
                       - to_date(to_char(transaction_date,'dd/mm/yyyy'),'dd/mm/yyyy')
                      ) BETWEEN 366 AND 730
              THEN   (tax.tax_remaining + tax.line_remaining)
                   * DECODE
                        (case when b.trx_currency_code<>b.functional_currency_code then 
             (SELECT conversion_rate 
		 from gl_daily_rates gldr
		 WHERE gldr.from_currency = b.trx_currency_code
			   AND gldr.to_currency = b.functional_currency_code
			   AND gldr.conversion_type = 'Corporate'
			   AND gldr.conversion_date = :as_of_date)
               else 0
               end,
                         0, NVL (ratrx.exchange_rate, 0),
                         case when b.trx_currency_code<>b.functional_currency_code then 
             (SELECT conversion_rate 
		 from gl_daily_rates gldr
		 WHERE gldr.from_currency = b.trx_currency_code
			   AND gldr.to_currency = b.functional_currency_code
			   AND gldr.conversion_type = 'Corporate'
			   AND gldr.conversion_date = :as_of_date)
               else 0
               end
                        )
           ELSE 0
        END
       ) days366to730,                                                    --29
       (CASE
           WHEN TRUNC (  to_date(to_char(as_of_date,'dd/mm/yyyy'),'dd/mm/yyyy')
                       - to_date(to_char(transaction_date,'dd/mm/yyyy'),'dd/mm/yyyy')
                      ) > 730
              THEN   (tax.tax_remaining + tax.line_remaining)
                   * DECODE
                        (case when b.trx_currency_code<>b.functional_currency_code then 
             (SELECT conversion_rate 
		 from gl_daily_rates gldr
		 WHERE gldr.from_currency = b.trx_currency_code
			   AND gldr.to_currency = b.functional_currency_code
			   AND gldr.conversion_type = 'Corporate'
			   AND gldr.conversion_date = :as_of_date)
               else 0
               end,
                         0, NVL (ratrx.exchange_rate, 0),
                         case when b.trx_currency_code<>b.functional_currency_code then 
             (SELECT conversion_rate 
		 from gl_daily_rates gldr
		 WHERE gldr.from_currency = b.trx_currency_code
			   AND gldr.to_currency = b.functional_currency_code
			   AND gldr.conversion_type = 'Corporate'
			   AND gldr.conversion_date = :as_of_date)
               else 0
               end
                        )
           ELSE 0
        END
       ) over730,                                                         --30
       NVL
          ((  (tax.tax_remaining + tax.line_remaining)
            * DECODE
                    (case when b.trx_currency_code<>b.functional_currency_code then 
             (SELECT conversion_rate 
		 from gl_daily_rates gldr
		 WHERE gldr.from_currency = b.trx_currency_code
			   AND gldr.to_currency = b.functional_currency_code
			   AND gldr.conversion_type = 'Corporate'
			   AND gldr.conversion_date = :as_of_date)
               else 0
               end,
                     0, NVL (ratrx.exchange_rate, 0),
                     case when b.trx_currency_code<>b.functional_currency_code then 
             (SELECT conversion_rate 
		 from gl_daily_rates gldr
		 WHERE gldr.from_currency = b.trx_currency_code
			   AND gldr.to_currency = b.functional_currency_code
			   AND gldr.conversion_type = 'Corporate'
			   AND gldr.conversion_date = :as_of_date)
               else 0
               end
                    )
           ),
           0
          ) grandtotal                                                    --31
  FROM (
        SELECT
            TO_DATE(TO_CHAR(:as_of_date, 'dd/mm/yyyy'), 'dd/mm/yyyy') as_of_date,
            aaa.name                    organization_name,
            aaa.currency_code           functional_currency_code,
            rct.trx_number              trx_number,
            rct.trx_date                transaction_date,
            rct.invoice_currency_code   trx_currency_code,
            ap.amount_due_original      trans_amount,
            SUM(amount_due_remaining) trans_amount_remaining
        FROM
            ar_payment_schedules_all ap,
            ra_customer_trx_all rct,
            ra_cust_trx_types_all rctt,
            (
                SELECT
                    ho.name,
                    gl.currency_code,
                    ho.organization_id
                FROM
                    hr_operating_units ho,
                    gl_ledgers gl
                WHERE
                    gl.ledger_id = ho.set_of_books_id
            ) aaa
        WHERE
            rct.customer_trx_id = ap.customer_trx_id
--    AND rct.cust_trx_type_id IN (
--        1158,
--        1059,
--        1064,
--        1065
--    )
--    AND rctt.cust_trx_type_id = rct.cust_trx_type_id
            and rct.CUST_TRX_TYPE_SEQ_ID = rctt.CUST_TRX_TYPE_SEQ_ID
--    AND rct.set_of_books_id = 300000002123655--2042
                AND aaa.organization_id = rct.org_id
                    AND rctt.cust_trx_type_id NOT IN (
                SELECT
                    cust_trx_type_id
                FROM
                    ra_cust_trx_types_all
                WHERE
                    type = 'CM'
            )
        GROUP BY
            aaa.name,
            aaa.currency_code,
            rct.trx_number,
            rct.trx_date,
            rct.invoice_currency_code,
            ap.amount_due_original
        HAVING
            SUM(amount_due_remaining) <> 0
        ORDER BY
            rct.trx_number
    ) b,
       (SELECT  
            rctla_line.attribute5,
            rctla_line.line_type,rcta.trx_number, rcta.customer_trx_id,
                 SUM (rctla_line.extended_amount) line_amount,
                 (NVL ((SELECT SUM (rctla_tax.extended_amount)
                          FROM ra_customer_trx_lines_all rctla_tax
                         WHERE rcta.customer_trx_id =
                                                     rctla_tax.customer_trx_id
                           AND rctla_tax.line_type = 'TAX'),
                       0
                      )
                 ) tax_amount,
                 (SELECT NVL (SUM (araa_line.line_applied), 0)
                    FROM ar_receivable_applications_all araa_line
                   WHERE rcta.customer_trx_id =
                                             araa_line.applied_customer_trx_id
                     AND araa_line.apply_date <= :as_of_date) line_applied,
                 (SELECT NVL (SUM (araa_line.tax_applied), 0)
                    FROM ar_receivable_applications_all araa_line
                   WHERE rcta.customer_trx_id =
                                             araa_line.applied_customer_trx_id
                     AND araa_line.apply_date <= :as_of_date) tax_applied,
                 (  (SELECT SUM (extended_amount)
                       FROM ra_customer_trx_lines_all rctla_line
                      WHERE                             --customer_trx_id=4665
                            rctla_line.customer_trx_id = rcta.customer_trx_id
                        AND rctla_line.line_type = 'LINE')
                  - (SELECT (NVL (SUM (araa_line.line_applied), 0))
                       FROM ar_receivable_applications_all araa_line
                      WHERE rcta.customer_trx_id =
                                             araa_line.applied_customer_trx_id
                        AND araa_line.apply_date <= :as_of_date)
                  + (SELECT (NVL (SUM (aav.amount), 0))
                       FROM ar_adjustments_all aav
                      WHERE aav.customer_trx_id = rcta.customer_trx_id
                        AND aav.TYPE = 'LINE'
                        AND aav.apply_date <= :as_of_date)
                 ) line_remaining,
                 (  (SELECT (NVL (SUM (rctla_tax.extended_amount), 0))
                       FROM ra_customer_trx_lines_all rctla_tax
                      WHERE rcta.customer_trx_id = rctla_tax.customer_trx_id
                        AND rctla_tax.line_type = 'TAX')
                  - (SELECT (NVL (SUM (araa_line.tax_applied), 0))
                       FROM ar_receivable_applications_all araa_line
                      WHERE araa_line.applied_customer_trx_id =
                                                          rcta.customer_trx_id
                        AND apply_date <= :as_of_date)
                  + (SELECT (NVL (SUM (aav.amount), 0))
                       FROM ar_adjustments_all aav
                      WHERE aav.customer_trx_id = rcta.customer_trx_id
                        AND aav.TYPE = 'TAX'
                        AND aav.apply_date <= :as_of_date)
                 ) tax_remaining,
                 hp.party_name, hp.attribute1 group_name
            FROM ra_customer_trx_all rcta,
                 ra_customer_trx_lines_all rctla_line,
                 ra_cust_trx_types_all rctta,
                 hz_cust_accounts hza,
                 hz_parties hp,
                 gl_ledgers gl
           WHERE rcta.customer_trx_id = rctla_line.customer_trx_id
             AND rcta.CUST_TRX_TYPE_SEQ_ID = rctta.CUST_TRX_TYPE_SEQ_ID
             AND rctta.accounting_affect_flag = 'Y'
             AND hza.party_id = hp.party_id
             AND gl.ledger_id = rcta.set_of_books_id
             AND rcta.bill_to_customer_id = hza.cust_account_id
             AND rctla_line.LINE_TYPE='LINE'
        GROUP BY rcta.trx_number,
                 rcta.customer_trx_id,
                 rcta.org_id,
                 hp.party_name,
                 hp.attribute1,
            rctla_line.attribute5,
            rctla_line.line_type) tax,
       ra_customer_trx_all ratrx,
       gl_daily_rates gldr,
       ra_cust_trx_line_gl_dist_all lgd,
       gl_code_combinations gcc,
       gl_ledgers gl
 WHERE 1=1
 AND b.as_of_date = :as_of_date
  --AND ratrx.TRX_NUMBER='20009310075'
 and trans_amount_remaining <> 0
   AND tax.trx_number = b.trx_number
--   AND B.TRX_NUMBER<>'100Corporate79'
   AND tax.customer_trx_id = ratrx.customer_trx_id
   AND ratrx.customer_trx_id = lgd.customer_trx_id
   AND lgd.account_class = 'REC'
   AND (   (lgd.account_set_flag = 'N' AND ratrx.invoicing_rule_id IS NULL)
        OR (lgd.account_set_flag = 'Y' AND ratrx.invoicing_rule_id IS NOT NULL
           )
       )
   AND lgd.code_combination_id = gcc.code_combination_id
   AND gl.ledger_id = ratrx.set_of_books_id
--   and gl.LEDGER_ID=300000002123655     
--    and gcc.segment3 >='161101'  
--   AND  gcc.segment3<='161610'   
--   AND  gcc.segment2 = '320001' 
--   and gcc.segment4 >='300001'  
--   and gcc.segment4<='396999' 
   AND b.trx_currency_code = gldr.from_currency(+)
   AND b.functional_currency_code = gldr.to_currency(+)
   AND gldr.conversion_type(+) = 'Corporate'
   AND gldr.conversion_date(+) = :as_of_date
--    AND trunc(b.transaction_date) between nvl(:P_FROM_CHANGE_DATE,b.transaction_date) and nvl(:P_TO_CHANGE_DATE,b.transaction_date)
   union
   SELECT
    (
        SELECT
            rct.name
        FROM
            ra_cust_trx_types_all rct
        WHERE
            rct.cust_trx_type_seq_id = ratrx.CUST_TRX_TYPE_SEQ_ID
--            AND rct.org_id = ratrx.org_id
    ) transaction_type,
    b.trx_number,
--            TAX.attribute5,
            TAX.line_type,
    (
        SELECT DISTINCT
            rcta2.attribute1
        FROM
            ra_customer_trx_all rcta1,
            ra_customer_trx_all rcta2
        WHERE
            rcta1.interface_header_attribute1 = rcta2.attribute1
            AND rcta1.trx_number = b.trx_number
    ) uer_invoice_num,
    b.trans_amount_remaining   due_amount,
--    TO_DATE(TO_CHAR(b.as_of_date, 'dd/mm/yyyy'), 'dd/mm/yyyy') as_of_date,
     to_char(b.as_of_date,'DD-MON-YYYY')as_of_date,
    replace(tax.party_name, ',', ' ') customer_name,
    tax.group_name,
    (
        SELECT
            bpty12.person_first_name
            || ' '
            || bpty12.person_last_name
        FROM
            hz_cust_accounts hca,
            hz_cust_account_roles hcar12,
            hz_relationships hrel12,
            hz_parties bpty12
        WHERE
            1 = 1
            AND hcar12.cust_account_role_id (+) = ratrx.bill_to_contact_id
            AND hrel12.object_id = bpty12.party_id
            AND bpty12.party_id = hca.party_id
            AND hcar12.cust_account_id = hca.cust_account_id
            AND hrel12.subject_id = bpty12.party_id (+)
            AND hrel12.subject_table_name (+) = 'HZ_PARTIES'
            AND hrel12.object_table_name (+) = 'HZ_PARTIES'
            AND hrel12.directional_flag (+) = 'F'
            AND hcar12.role_type (+) = 'CONTACT'
    ) cust_contact,
       ( SELECT
    bpty13.orig_system_reference
FROM   hz_cust_accounts hca,
       hz_cust_account_roles hcar13,
       hz_relationships hrel13,
       hz_parties bpty13
WHERE
    1 = 1
    AND hcar13.cust_account_role_id (+) = ratrx.bill_to_contact_id
    AND hrel13.object_id = bpty13.party_id
    AND bpty13.party_id = hca.party_id
    AND hcar13.cust_account_id = hca.cust_account_id
            AND hrel13.subject_id = bpty13.party_id (+)
                AND hrel13.subject_table_name (+) = 'HZ_PARTIES'
                    AND hrel13.object_table_name (+) = 'HZ_PARTIES'
                        AND hrel13.directional_flag (+) = 'F'
                            AND hcar13.role_type (+) = 'CONTACT'
) cust_contact_id,
  ratrx.ct_reference customer_refrence,
--  gcc.segment1 entity,
--  gcc.segment2 account,
--  gcc.segment3 analysis ,
--  gcc.segment4 product_project,
--  gcc.segment5 Office_Location ,
--  gcc.segment6 intercompany,
--  gcc.segment7 cost_center ,
--  gcc.segment8 future_1,
--  gcc.segment9 future_2,
--  gcc.segment10 future_3,
   GCC.SEGMENT1 Entity,
           GCC.SEGMENT2 Account,
           TAX.attribute5 Cost_Center,
           GCC.SEGMENT3  Bus_cost_center,
           GCC.SEGMENT4  Product_Project ,
           GCC.SEGMENT5  corp_cost_center,
           GCC.SEGMENT6  Intercompany,
           GCC.SEGMENT7  Location,
           GCC.SEGMENT8  Future_1,
           GCC.SEGMENT9  Future_2,
  TO_CHAR(b.transaction_date,'DD-MON-YYYY'),
  b.trx_currency_code currency_type,
  DECODE(b.trx_currency_code, 'INR', 1, nvl(gldr.conversion_rate, 0)) conversion_rate,
  nvl(ratrx.exchange_rate, 0) exchange_rate,
  b.trans_amount,
  tax.tax_remaining,
  tax.line_remaining,
    b.trans_amount
       * NVL
            (ratrx.exchange_rate,
             DECODE (case when b.trx_currency_code<>b.functional_currency_code then 
             (SELECT conversion_rate 
		 from gl_daily_rates gldr
		 WHERE gldr.from_currency = b.trx_currency_code
			   AND gldr.to_currency = b.functional_currency_code
			   AND gldr.conversion_type = 'Corporate'
			   AND gldr.conversion_date = :as_of_date)
               else 0
               end,
                     0, NVL (ratrx.exchange_rate, 0),
                     case when b.trx_currency_code<>b.functional_currency_code then 
             (SELECT conversion_rate 
		 from gl_daily_rates gldr
		 WHERE gldr.from_currency = b.trx_currency_code
			   AND gldr.to_currency = b.functional_currency_code
			   AND gldr.conversion_type = 'Corporate'
			   AND gldr.conversion_date = :as_of_date)
               else 0
               end
                    )
            ) func_trans_amount,
         tax.tax_remaining
       * DECODE (case when b.trx_currency_code<>b.functional_currency_code then 
             (SELECT conversion_rate 
		 from gl_daily_rates gldr
		 WHERE gldr.from_currency = b.trx_currency_code
			   AND gldr.to_currency = b.functional_currency_code
			   AND gldr.conversion_type = 'Corporate'
			   AND gldr.conversion_date = :as_of_date)
               else 0
               end,
                 0, NVL (ratrx.exchange_rate, 0),
                 case when b.trx_currency_code<>b.functional_currency_code then 
             (SELECT conversion_rate 
		 from gl_daily_rates gldr
		 WHERE gldr.from_currency = b.trx_currency_code
			   AND gldr.to_currency = b.functional_currency_code
			   AND gldr.conversion_type = 'Corporate'
			   AND gldr.conversion_date = :as_of_date)
               else 0
               end
                ) func_tax_remaining,
         tax.line_remaining
       * DECODE (case when b.trx_currency_code<>b.functional_currency_code then 
             (SELECT conversion_rate 
		 from gl_daily_rates gldr
		 WHERE gldr.from_currency = b.trx_currency_code
			   AND gldr.to_currency = b.functional_currency_code
			   AND gldr.conversion_type = 'Corporate'
			   AND gldr.conversion_date = :as_of_date)
               else 0
               end,
                 0, NVL (ratrx.exchange_rate, 0),
                 case when b.trx_currency_code<>b.functional_currency_code then 
             (SELECT conversion_rate 
		 from gl_daily_rates gldr
		 WHERE gldr.from_currency = b.trx_currency_code
			   AND gldr.to_currency = b.functional_currency_code
			   AND gldr.conversion_type = 'Corporate'
			   AND gldr.conversion_date = :as_of_date)
               else 0
               end
                ) func_line_remaining,
       tax.line_applied, tax.tax_applied,
       (CASE
           WHEN TRUNC (  to_date(to_char(as_of_date,'dd/mm/yyyy'),'dd/mm/yyyy')
                       - to_date(to_char(transaction_date,'dd/mm/yyyy'),'dd/mm/yyyy')
                      ) BETWEEN 0 AND 30
              THEN   (tax.tax_remaining + tax.line_remaining)
                   * DECODE
                        (case when b.trx_currency_code<>b.functional_currency_code then 
             (SELECT conversion_rate 
		 from gl_daily_rates gldr
		 WHERE gldr.from_currency = b.trx_currency_code
			   AND gldr.to_currency = b.functional_currency_code
			   AND gldr.conversion_type = 'Corporate'
			   AND gldr.conversion_date = :as_of_date)
               else 0
               end,
                         0, NVL (ratrx.exchange_rate, 0),
                         case when b.trx_currency_code<>b.functional_currency_code then 
             (SELECT conversion_rate 
		 from gl_daily_rates gldr
		 WHERE gldr.from_currency = b.trx_currency_code
			   AND gldr.to_currency = b.functional_currency_code
			   AND gldr.conversion_type = 'Corporate'
			   AND gldr.conversion_date = :as_of_date)
               else 0
               end
                        )
           ELSE 0
        END
       ) days0to30,
       (CASE
           WHEN TRUNC (  to_date(to_char(as_of_date,'dd/mm/yyyy'),'dd/mm/yyyy')
                       - to_date(to_char(transaction_date,'dd/mm/yyyy'),'dd/mm/yyyy')
                      ) BETWEEN 31 AND 60
              THEN   (tax.tax_remaining + tax.line_remaining)
                   * DECODE
                        (case when b.trx_currency_code<>b.functional_currency_code then 
             (SELECT conversion_rate 
		 from gl_daily_rates gldr
		 WHERE gldr.from_currency = b.trx_currency_code
			   AND gldr.to_currency = b.functional_currency_code
			   AND gldr.conversion_type = 'Corporate'
			   AND gldr.conversion_date = :as_of_date)
               else 0
               end,
                         0, NVL (ratrx.exchange_rate, 0),
                        case when b.trx_currency_code<>b.functional_currency_code then 
             (SELECT conversion_rate 
		 from gl_daily_rates gldr
		 WHERE gldr.from_currency = b.trx_currency_code
			   AND gldr.to_currency = b.functional_currency_code
			   AND gldr.conversion_type = 'Corporate'
			   AND gldr.conversion_date = :as_of_date)
               else 0
               end
                        )
           ELSE 0
        END
       ) days31to60,                                         --Days31to60,--18
       (CASE
           WHEN TRUNC (  to_date(to_char(as_of_date,'dd/mm/yyyy'),'dd/mm/yyyy')
                       - to_date(to_char(transaction_date,'dd/mm/yyyy'),'dd/mm/yyyy')
                      ) BETWEEN 61 AND 90
              THEN   (tax.tax_remaining + tax.line_remaining)
                   * DECODE
                        (case when b.trx_currency_code<>b.functional_currency_code then 
             (SELECT conversion_rate 
		 from gl_daily_rates gldr
		 WHERE gldr.from_currency = b.trx_currency_code
			   AND gldr.to_currency = b.functional_currency_code
			   AND gldr.conversion_type = 'Corporate'
			   AND gldr.conversion_date = :as_of_date)
               else 0
               end,
                         0, NVL (ratrx.exchange_rate, 0),
                         case when b.trx_currency_code<>b.functional_currency_code then 
             (SELECT conversion_rate 
		 from gl_daily_rates gldr
		 WHERE gldr.from_currency = b.trx_currency_code
			   AND gldr.to_currency = b.functional_currency_code
			   AND gldr.conversion_type = 'Corporate'
			   AND gldr.conversion_date = :as_of_date)
               else 0
               end
                        )
           ELSE 0
        END
       ) days61to90,                                                      --19
       (CASE
           WHEN TRUNC (  to_date(to_char(as_of_date,'dd/mm/yyyy'),'dd/mm/yyyy')
                       - to_date(to_char(transaction_date,'dd/mm/yyyy'),'dd/mm/yyyy')
                      ) BETWEEN 91 AND 120
              THEN   (tax.tax_remaining + tax.line_remaining)
                   * DECODE
                        (case when b.trx_currency_code<>b.functional_currency_code then 
             (SELECT conversion_rate 
		 from gl_daily_rates gldr
		 WHERE gldr.from_currency = b.trx_currency_code
			   AND gldr.to_currency = b.functional_currency_code
			   AND gldr.conversion_type = 'Corporate'
			   AND gldr.conversion_date = :as_of_date)
               else 0
               end,
                         0, NVL (ratrx.exchange_rate, 0),
                         case when b.trx_currency_code<>b.functional_currency_code then 
             (SELECT conversion_rate 
		 from gl_daily_rates gldr
		 WHERE gldr.from_currency = b.trx_currency_code
			   AND gldr.to_currency = b.functional_currency_code
			   AND gldr.conversion_type = 'Corporate'
			   AND gldr.conversion_date = :as_of_date)
               else 0
               end
                        )
           ELSE 0
        END
       ) days91to120,                                                     --20
       (CASE
           WHEN TRUNC (  to_date(to_char(as_of_date,'dd/mm/yyyy'),'dd/mm/yyyy')
                       - to_date(to_char(transaction_date,'dd/mm/yyyy'),'dd/mm/yyyy')
                      ) BETWEEN 121 AND 150
              THEN   (tax.tax_remaining + tax.line_remaining)
                   * DECODE
                        (case when b.trx_currency_code<>b.functional_currency_code then 
             (SELECT conversion_rate 
		 from gl_daily_rates gldr
		 WHERE gldr.from_currency = b.trx_currency_code
			   AND gldr.to_currency = b.functional_currency_code
			   AND gldr.conversion_type = 'Corporate'
			   AND gldr.conversion_date = :as_of_date)
               else 0
               end,
                         0, NVL (ratrx.exchange_rate, 0),
                         case when b.trx_currency_code<>b.functional_currency_code then 
             (SELECT conversion_rate 
		 from gl_daily_rates gldr
		 WHERE gldr.from_currency = b.trx_currency_code
			   AND gldr.to_currency = b.functional_currency_code
			   AND gldr.conversion_type = 'Corporate'
			   AND gldr.conversion_date = :as_of_date)
               else 0
               end
                        )
           ELSE 0
        END
       ) days121to150,                                                    --21
       (CASE
           WHEN TRUNC (  to_date(to_char(as_of_date,'dd/mm/yyyy'),'dd/mm/yyyy')
                       - to_date(to_char(transaction_date,'dd/mm/yyyy'),'dd/mm/yyyy')
                      ) BETWEEN 151 AND 180
              THEN   (tax.tax_remaining + tax.line_remaining)
                   * DECODE
                        (case when b.trx_currency_code<>b.functional_currency_code then 
             (SELECT conversion_rate 
		 from gl_daily_rates gldr
		 WHERE gldr.from_currency = b.trx_currency_code
			   AND gldr.to_currency = b.functional_currency_code
			   AND gldr.conversion_type = 'Corporate'
			   AND gldr.conversion_date = :as_of_date)
               else 0
               end,
                         0, NVL (ratrx.exchange_rate, 0),
                         case when b.trx_currency_code<>b.functional_currency_code then 
             (SELECT conversion_rate 
		 from gl_daily_rates gldr
		 WHERE gldr.from_currency = b.trx_currency_code
			   AND gldr.to_currency = b.functional_currency_code
			   AND gldr.conversion_type = 'Corporate'
			   AND gldr.conversion_date = :as_of_date)
               else 0
               end
                        )
           ELSE 0
        END
       ) days151to180,                                                    --22
       (CASE
           WHEN TRUNC (  to_date(to_char(as_of_date,'dd/mm/yyyy'),'dd/mm/yyyy')
                       - to_date(to_char(transaction_date,'dd/mm/yyyy'),'dd/mm/yyyy')
                      ) BETWEEN 181 AND 210
              THEN   (tax.tax_remaining + tax.line_remaining)
                   * DECODE
                        (case when b.trx_currency_code<>b.functional_currency_code then 
             (SELECT conversion_rate 
		 from gl_daily_rates gldr
		 WHERE gldr.from_currency = b.trx_currency_code
			   AND gldr.to_currency = b.functional_currency_code
			   AND gldr.conversion_type = 'Corporate'
			   AND gldr.conversion_date = :as_of_date)
               else 0
               end,
                         0, NVL (ratrx.exchange_rate, 0),
                         case when b.trx_currency_code<>b.functional_currency_code then 
             (SELECT conversion_rate 
		 from gl_daily_rates gldr
		 WHERE gldr.from_currency = b.trx_currency_code
			   AND gldr.to_currency = b.functional_currency_code
			   AND gldr.conversion_type = 'Corporate'
			   AND gldr.conversion_date = :as_of_date)
               else 0
               end
                        )
           ELSE 0
        END
       ) days181to210,                                                    --23
       (CASE
           WHEN TRUNC (  to_date(to_char(as_of_date,'dd/mm/yyyy'),'dd/mm/yyyy')
                       - to_date(to_char(transaction_date,'dd/mm/yyyy'),'dd/mm/yyyy')
                      ) BETWEEN 211 AND 240
              THEN   (tax.tax_remaining + tax.line_remaining)
                   * DECODE
                        (case when b.trx_currency_code<>b.functional_currency_code then 
             (SELECT conversion_rate 
		 from gl_daily_rates gldr
		 WHERE gldr.from_currency = b.trx_currency_code
			   AND gldr.to_currency = b.functional_currency_code
			   AND gldr.conversion_type = 'Corporate'
			   AND gldr.conversion_date = :as_of_date)
               else 0
               end,
                         0, NVL (ratrx.exchange_rate, 0),
                         case when b.trx_currency_code<>b.functional_currency_code then 
             (SELECT conversion_rate 
		 from gl_daily_rates gldr
		 WHERE gldr.from_currency = b.trx_currency_code
			   AND gldr.to_currency = b.functional_currency_code
			   AND gldr.conversion_type = 'Corporate'
			   AND gldr.conversion_date = :as_of_date)
               else 0
               end
                        )
           ELSE 0
        END
       ) days211to240,                                                    --24
       (CASE
           WHEN TRUNC (  to_date(to_char(as_of_date,'dd/mm/yyyy'),'dd/mm/yyyy')
                       - to_date(to_char(transaction_date,'dd/mm/yyyy'),'dd/mm/yyyy')
                      ) BETWEEN 241 AND 270
              THEN   (tax.tax_remaining + tax.line_remaining)
                   * DECODE
                        (case when b.trx_currency_code<>b.functional_currency_code then 
             (SELECT conversion_rate 
		 from gl_daily_rates gldr
		 WHERE gldr.from_currency = b.trx_currency_code
			   AND gldr.to_currency = b.functional_currency_code
			   AND gldr.conversion_type = 'Corporate'
			   AND gldr.conversion_date = :as_of_date)
               else 0
               end,
                         0, NVL (ratrx.exchange_rate, 0),
                        case when b.trx_currency_code<>b.functional_currency_code then 
             (SELECT conversion_rate 
		 from gl_daily_rates gldr
		 WHERE gldr.from_currency = b.trx_currency_code
			   AND gldr.to_currency = b.functional_currency_code
			   AND gldr.conversion_type = 'Corporate'
			   AND gldr.conversion_date = :as_of_date)
               else 0
               end
                        )
           ELSE 0
        END
       ) days241to270,                                                    --25
       (CASE
           WHEN TRUNC (  to_date(to_char(as_of_date,'dd/mm/yyyy'),'dd/mm/yyyy')
                       - to_date(to_char(transaction_date,'dd/mm/yyyy'),'dd/mm/yyyy')
                      ) BETWEEN 271 AND 300
              THEN   (tax.tax_remaining + tax.line_remaining)
                   * DECODE
                        (case when b.trx_currency_code<>b.functional_currency_code then 
             (SELECT conversion_rate 
		 from gl_daily_rates gldr
		 WHERE gldr.from_currency = b.trx_currency_code
			   AND gldr.to_currency = b.functional_currency_code
			   AND gldr.conversion_type = 'Corporate'
			   AND gldr.conversion_date = :as_of_date)
               else 0
               end,
                         0, NVL (ratrx.exchange_rate, 0),
                        case when b.trx_currency_code<>b.functional_currency_code then 
             (SELECT conversion_rate 
		 from gl_daily_rates gldr
		 WHERE gldr.from_currency = b.trx_currency_code
			   AND gldr.to_currency = b.functional_currency_code
			   AND gldr.conversion_type = 'Corporate'
			   AND gldr.conversion_date = :as_of_date)
               else 0
               end
                        )
           ELSE 0
        END
       ) days271to300,                                                    --26
       (CASE
           WHEN TRUNC (  to_date(to_char(as_of_date,'dd/mm/yyyy'),'dd/mm/yyyy')
                       - to_date(to_char(transaction_date,'dd/mm/yyyy'),'dd/mm/yyyy')
                      ) BETWEEN 301 AND 330
              THEN   (tax.tax_remaining + tax.line_remaining)
                   * DECODE
                        (case when b.trx_currency_code<>b.functional_currency_code then 
             (SELECT conversion_rate 
		 from gl_daily_rates gldr
		 WHERE gldr.from_currency = b.trx_currency_code
			   AND gldr.to_currency = b.functional_currency_code
			   AND gldr.conversion_type = 'Corporate'
			   AND gldr.conversion_date = :as_of_date)
               else 0
               end,
                         0, NVL (ratrx.exchange_rate, 0),
                         case when b.trx_currency_code<>b.functional_currency_code then 
             (SELECT conversion_rate 
		 from gl_daily_rates gldr
		 WHERE gldr.from_currency = b.trx_currency_code
			   AND gldr.to_currency = b.functional_currency_code
			   AND gldr.conversion_type = 'Corporate'
			   AND gldr.conversion_date = :as_of_date)
               else 0
               end
                        )
           ELSE 0
        END
       ) days301to330,                                                    --27
       (CASE
           WHEN TRUNC (  to_date(to_char(as_of_date,'dd/mm/yyyy'),'dd/mm/yyyy')
                       - to_date(to_char(transaction_date,'dd/mm/yyyy'),'dd/mm/yyyy')
                      ) BETWEEN 331 AND 365
              THEN   (tax.tax_remaining + tax.line_remaining)
                   * DECODE
                        (case when b.trx_currency_code<>b.functional_currency_code then 
             (SELECT conversion_rate 
		 from gl_daily_rates gldr
		 WHERE gldr.from_currency = b.trx_currency_code
			   AND gldr.to_currency = b.functional_currency_code
			   AND gldr.conversion_type = 'Corporate'
			   AND gldr.conversion_date = :as_of_date)
               else 0
               end,
                         0, NVL (ratrx.exchange_rate, 0),
                         case when b.trx_currency_code<>b.functional_currency_code then 
             (SELECT conversion_rate 
		 from gl_daily_rates gldr
		 WHERE gldr.from_currency = b.trx_currency_code
			   AND gldr.to_currency = b.functional_currency_code
			   AND gldr.conversion_type = 'Corporate'
			   AND gldr.conversion_date = :as_of_date)
               else 0
               end
                        )
           ELSE 0
        END
       ) days331to365,                                                    --28
       (CASE
           WHEN TRUNC (  to_date(to_char(as_of_date,'dd/mm/yyyy'),'dd/mm/yyyy')
                       - to_date(to_char(transaction_date,'dd/mm/yyyy'),'dd/mm/yyyy')
                      ) BETWEEN 366 AND 730
              THEN   (tax.tax_remaining + tax.line_remaining)
                   * DECODE
                        (case when b.trx_currency_code<>b.functional_currency_code then 
             (SELECT conversion_rate 
		 from gl_daily_rates gldr
		 WHERE gldr.from_currency = b.trx_currency_code
			   AND gldr.to_currency = b.functional_currency_code
			   AND gldr.conversion_type = 'Corporate'
			   AND gldr.conversion_date = :as_of_date)
               else 0
               end,
                         0, NVL (ratrx.exchange_rate, 0),
                        case when b.trx_currency_code<>b.functional_currency_code then 
             (SELECT conversion_rate 
		 from gl_daily_rates gldr
		 WHERE gldr.from_currency = b.trx_currency_code
			   AND gldr.to_currency = b.functional_currency_code
			   AND gldr.conversion_type = 'Corporate'
			   AND gldr.conversion_date = :as_of_date)
               else 0
               end
                        )
           ELSE 0
        END
       ) days366to730, 
  (CASE
           WHEN TRUNC (  to_date(to_char(as_of_date,'dd/mm/yyyy'),'dd/mm/yyyy')
                       - to_date(to_char(transaction_date,'dd/mm/yyyy'),'dd/mm/yyyy')
                      ) > 730
              THEN   (tax.tax_remaining + tax.line_remaining)
                   * DECODE
                        (case when b.trx_currency_code<>b.functional_currency_code then 
             (SELECT conversion_rate 
		 from gl_daily_rates gldr
		 WHERE gldr.from_currency = b.trx_currency_code
			   AND gldr.to_currency = b.functional_currency_code
			   AND gldr.conversion_type = 'Corporate'
			   AND gldr.conversion_date = :as_of_date)
               else 0
               end,
                         0, NVL (ratrx.exchange_rate, 0),
                         case when b.trx_currency_code<>b.functional_currency_code then 
             (SELECT conversion_rate 
		 from gl_daily_rates gldr
		 WHERE gldr.from_currency = b.trx_currency_code
			   AND gldr.to_currency = b.functional_currency_code
			   AND gldr.conversion_type = 'Corporate'
			   AND gldr.conversion_date = :as_of_date)
               else 0
               end
                        )
           ELSE 0
        END
       ) over730,
  NVL
          (( (tax.tax_remaining + tax.line_remaining)
          * DECODE( case when b.trx_currency_code<>b.functional_currency_code then 
             (SELECT conversion_rate 
		 from gl_daily_rates gldr
		 WHERE gldr.from_currency = b.trx_currency_code
			   AND gldr.to_currency = b.functional_currency_code
			   AND gldr.conversion_type = 'Corporate'
			   AND gldr.conversion_date = :as_of_date)
               else 0
               end,0, NVL (ratrx.exchange_rate, 0),
               case when b.trx_currency_code<>b.functional_currency_code then 
             (SELECT conversion_rate 
		 from gl_daily_rates gldr
		 WHERE gldr.from_currency = b.trx_currency_code
			   AND gldr.to_currency = b.functional_currency_code
			   AND gldr.conversion_type = 'Corporate'
			   AND gldr.conversion_date = :as_of_date)
               else 0
               end  )
           ),
           0
          ) grandtotal
FROM
    (
        SELECT
            TO_DATE(TO_CHAR(:as_of_date, 'dd/mm/yyyy'), 'dd/mm/yyyy') as_of_date,
            aaa.name                    organization_name,
            aaa.currency_code           functional_currency_code,
            rct.trx_number              trx_number,
            rct.trx_date                transaction_date,
            rct.invoice_currency_code   trx_currency_code,
            ap.amount_due_original      trans_amount,
            SUM(amount_due_remaining) trans_amount_remaining
        FROM
            ar_payment_schedules_all ap,
            ra_customer_trx_all rct,
            ra_cust_trx_types_all rctt,
            (
                SELECT
                    ho.name,
                    gl.currency_code,
                    ho.organization_id
                FROM
                    hr_operating_units ho,
                    gl_ledgers gl
                WHERE
                    gl.ledger_id = ho.set_of_books_id
            ) aaa
        WHERE
            rct.customer_trx_id = ap.customer_trx_id
--    AND rct.cust_trx_type_id IN (
--        1158,
--        1059,
--        1064,
--        1065
--    )
--    AND rctt.cust_trx_type_id = rct.cust_trx_type_id
             and rct.CUST_TRX_TYPE_SEQ_ID = rctt.CUST_TRX_TYPE_SEQ_ID
--    AND rct.set_of_books_id =300000002123655-- 2042
                AND aaa.organization_id = rct.org_id
                    AND rctt.cust_trx_type_id NOT IN (
                SELECT
                    cust_trx_type_id
                FROM
                    ra_cust_trx_types_all
                WHERE
                    type = 'CM'
            )
        GROUP BY
            aaa.name,
            aaa.currency_code,
            rct.trx_number,
            rct.trx_date,
            rct.invoice_currency_code,
            ap.amount_due_original
        HAVING
            SUM(amount_due_remaining) <> 0
        ORDER BY
            rct.trx_number
    ) b,
    (
        SELECT 
            rctla_line.attribute5,
            rctla_line.line_type,
            rcta.trx_number,
            rcta.customer_trx_id,
            SUM(rctla_line.extended_amount) line_amount,
            ( nvl((
                SELECT
                    SUM(rctla_tax.extended_amount)
                FROM
                    ra_customer_trx_lines_all rctla_tax
                WHERE
                    rcta.customer_trx_id = rctla_tax.customer_trx_id
                    AND rctla_tax.line_type = 'TAX'
            ), 0) ) tax_amount,
            (
                SELECT
                    nvl(SUM(araa_line.line_applied), 0)
                FROM
                    ar_receivable_applications_all araa_line
                WHERE
                    rcta.customer_trx_id = araa_line.applied_customer_trx_id
                    AND araa_line.apply_date <= :as_of_date
            ) line_applied,
            (
                SELECT
                    nvl(SUM(araa_line.tax_applied), 0)
                FROM
                    ar_receivable_applications_all araa_line
                WHERE
                    rcta.customer_trx_id = araa_line.applied_customer_trx_id
                    AND araa_line.apply_date <= :as_of_date
            ) tax_applied,
            ( (
                SELECT
                    SUM(extended_amount)
                FROM
                    ra_customer_trx_lines_all rctla_line
                WHERE
                    rctla_line.customer_trx_id = rcta.customer_trx_id
                    AND rctla_line.line_type = 'LINE'
            ) - (
                SELECT
                    ( nvl(SUM(araa_line.line_applied), 0) )
                FROM
                    ar_receivable_applications_all araa_line
                WHERE
                    rcta.customer_trx_id = araa_line.applied_customer_trx_id
                    AND araa_line.apply_date <= :as_of_date
            ) + (
                SELECT
                    ( nvl(SUM(aav.amount), 0) )
                FROM
                    ar_adjustments_all aav
                WHERE
                    aav.customer_trx_id = rcta.customer_trx_id
                    AND aav.type = 'LINE'
                        AND aav.apply_date <= :as_of_date
            ) ) line_remaining,
            ( (
                SELECT
                    ( nvl(SUM(rctla_tax.extended_amount), 0) )
                FROM
                    ra_customer_trx_lines_all rctla_tax
                WHERE
                    rcta.customer_trx_id = rctla_tax.customer_trx_id
                    AND rctla_tax.line_type = 'TAX'
            ) - (
                SELECT
                    ( nvl(SUM(araa_line.tax_applied), 0) )
                FROM
                    ar_receivable_applications_all araa_line
                WHERE
                    araa_line.applied_customer_trx_id = rcta.customer_trx_id
                    AND apply_date <= :as_of_date
            ) + (
                SELECT
                    ( nvl(SUM(aav.amount), 0) )
                FROM
                    ar_adjustments_all aav
                WHERE
                    aav.customer_trx_id = rcta.customer_trx_id
                    AND aav.type = 'TAX'
                        AND aav.apply_date <= :as_of_date
            ) ) tax_remaining,
            hp.party_name,
            hp.attribute1   group_name
        FROM
            ra_customer_trx_all rcta,
            ra_customer_trx_lines_all rctla_line,
            ra_cust_trx_types_all rctta,
            hz_cust_accounts hza,
            hz_parties hp,
            gl_ledgers gl
        WHERE
            rcta.customer_trx_id = rctla_line.customer_trx_id
            AND rcta.CUST_TRX_TYPE_SEQ_ID = rctta.CUST_TRX_TYPE_SEQ_ID
                AND rctta.accounting_affect_flag = 'Y'
                    AND hza.party_id = hp.party_id
                        AND gl.ledger_id = rcta.set_of_books_id
                            AND rcta.bill_to_customer_id = hza.cust_account_id
                               AND rctla_line.LINE_TYPE='LINE'
        GROUP BY
            rcta.trx_number,
            rcta.customer_trx_id,
            rcta.org_id,
            hp.party_name,
            hp.attribute1,
            rctla_line.attribute5,
            rctla_line.line_type
    ) tax,
    ra_customer_trx_all ratrx,
    gl_daily_rates gldr,
    ra_cust_trx_line_gl_dist_all lgd,
    gl_code_combinations gcc,
    gl_ledgers gl
WHERE 1=1
AND b.as_of_date = :as_of_date
 -- AND ratrx.TRX_NUMBER='20009310075'
    AND trans_amount_remaining <> 0
    AND tax.trx_number = b.trx_number
--        AND b.trx_number <> '100Corporate79'
            AND tax.customer_trx_id = ratrx.customer_trx_id
                AND ratrx.customer_trx_id = lgd.customer_trx_id
   AND lgd.account_class = 'REC'
                    AND ( ( lgd.account_set_flag = 'N'
                            AND ratrx.invoicing_rule_id IS NULL )
                          OR ( lgd.account_set_flag = 'Y'
                               AND ratrx.invoicing_rule_id IS NOT NULL ) )
                        AND lgd.code_combination_id = gcc.code_combination_id
                            AND gl.ledger_id = ratrx.set_of_books_id
--                                AND gl.ledger_id = 300000002123655    
--    and gcc.segment3 >='161101' 
--   AND  gcc.segment3<='161610'    
--   AND  gcc.segment2 = '320001' 
--   and gcc.segment4 ='999999'  
                                    AND b.trx_currency_code = gldr.from_currency (+)
                                        AND b.functional_currency_code = gldr.to_currency (+)
                                            AND gldr.conversion_type (+) = 'Corporate'
                                                AND gldr.conversion_date (+) = :as_of_date
--                                                AND trunc(b.transaction_date) between nvl(:P_FROM_CHANGE_DATE,b.transaction_date) and nvl(:P_TO_CHANGE_DATE,b.transaction_date)
====================================================================================================
select
    dha.order_number,
    dha.order_type_code,
    dla.line_number AS order_line_number,
	dla.creation_date,
	dha.header_id,
	dha.open_flag,
	dha.SOURCE_ORDER_NUMBER,
	item_detail.item_number,
	item_detail.item_description,
	item_detail.INVENTORY_ITEM_ID,
	item_detail.organization_id,
	item_detail.hold_name,
	item_detail.hold_description,
dha.SOURCE_ORDER_ID,
dla.SOURCE_LINE_ID,
hp.country ship_to_Country

FROM
    doo_headers_all   dha,
    doo_lines_all     dla,
	fnd_lookup_values fvl,
	hz_parties hp,
(
SELECT
    esi.item_number,
	esi.INVENTORY_ITEM_ID,
	esi.organization_id,
    esi.description AS item_description,
    (
        SELECT
            dhct.hold_name
        FROM
            doo_hold_codes_tl dhct
        WHERE
                esi.attribute7 = dhct.hold_name
            AND dhct.language (+) = 'US'
    )               AS hold_name,
    (
        SELECT
            dhct.hold_description
        FROM
            doo_hold_codes_tl dhct
        WHERE
                esi.attribute7 = dhct.hold_name
            AND dhct.language (+) = 'US'
    )               AS hold_description,
    iodv.organization_code
FROM
    egp_system_items               esi,
    inv_organization_definitions_v iodv
WHERE
        1 = 1
    AND esi.organization_id = iodv.organization_id
    AND iodv.organization_code IN ( (
        SELECT
            description
        FROM
            fnd_lookup_values
        WHERE
                lookup_type = 'EVOSYS_CUSTOM_REPORTS'
            AND lookup_code = 'ITEM_HOLD_ORGCODE'
            AND language = 'US'
    ), (
        SELECT
            description
        FROM
            fnd_lookup_values
        WHERE
                lookup_type = 'EVOSYS_CUSTOM_REPORTS'
            AND lookup_code = 'ITEM_HOLD_ORGCODE1'
            AND language = 'US'
    ) )
    AND esi.attribute7 IS NOT NULL
   /* AND ( ( esi.creation_date BETWEEN to_date(:p_start_date, 'YYYY-MM-DD HH24:MI:SS') AND to_date(:p_end_date, 'YYYY-MM-DD HH24:MI:SS') )
          OR ( esi.last_update_date BETWEEN to_date(:p_start_date, 'YYYY-MM-DD HH24:MI:SS') AND to_date(:p_end_date, 'YYYY-MM-DD HH24:MI:SS') ) )*/
UNION
SELECT
    esi.item_number,
	esi.INVENTORY_ITEM_ID,
	esi.organization_id,
    esi.description AS item_description,
    (
        SELECT
            dhct.hold_name
        FROM
            doo_hold_codes_tl dhct
        WHERE
                esi.attribute8 = dhct.hold_name
            AND dhct.language (+) = 'US'
    )               AS hold_name,
    (
        SELECT
            dhct.hold_description
        FROM
            doo_hold_codes_tl dhct
        WHERE
                esi.attribute8 = dhct.hold_name
            AND dhct.language (+) = 'US'
    )               AS hold_description,
    iodv.organization_code
FROM
    egp_system_items               esi,
    inv_organization_definitions_v iodv
WHERE
        1 = 1
    AND esi.organization_id = iodv.organization_id
    AND iodv.organization_code IN ( (
        SELECT
            description
        FROM
            fnd_lookup_values
        WHERE
                lookup_type = 'EVOSYS_CUSTOM_REPORTS'
            AND lookup_code = 'ITEM_HOLD_ORGCODE'
            AND language = 'US'
    ), (
        SELECT
            description
        FROM
            fnd_lookup_values
        WHERE
                lookup_type = 'EVOSYS_CUSTOM_REPORTS'
            AND lookup_code = 'ITEM_HOLD_ORGCODE1'
            AND language = 'US'
    ) )
    AND esi.attribute8 IS NOT NULL
    /*AND ( ( esi.creation_date BETWEEN to_date(:p_start_date, 'YYYY-MM-DD HH24:MI:SS') AND to_date(:p_end_date, 'YYYY-MM-DD HH24:MI:SS') )
          OR ( esi.last_update_date BETWEEN to_date(:p_start_date, 'YYYY-MM-DD HH24:MI:SS') AND to_date(:p_end_date, 'YYYY-MM-DD HH24:MI:SS') ) )*/
UNION 
SELECT
    esi.item_number,
	esi.INVENTORY_ITEM_ID,
	esi.organization_id,
    esi.description AS item_description,
    (
        SELECT
            dhct.hold_name
        FROM
            doo_hold_codes_tl dhct
        WHERE
                esi.attribute9 = dhct.hold_name
            AND dhct.language (+) = 'US'
    )               AS hold_name,
    (
        SELECT
            dhct.hold_description
        FROM
            doo_hold_codes_tl dhct
        WHERE
                esi.attribute9 = dhct.hold_name
            AND dhct.language (+) = 'US'
    )               AS hold_description,
    iodv.organization_code
FROM
    egp_system_items               esi,
    inv_organization_definitions_v iodv
WHERE
        1 = 1
    AND esi.organization_id = iodv.organization_id
    AND iodv.organization_code IN ( (
        SELECT
            description
        FROM
            fnd_lookup_values
        WHERE
                lookup_type = 'EVOSYS_CUSTOM_REPORTS'
            AND lookup_code = 'ITEM_HOLD_ORGCODE'
            AND language = 'US'
    ), (
        SELECT
            description
        FROM
            fnd_lookup_values
        WHERE
                lookup_type = 'EVOSYS_CUSTOM_REPORTS'
            AND lookup_code = 'ITEM_HOLD_ORGCODE1'
            AND language = 'US'
    ) )
    AND esi.attribute9 IS NOT NULL
    /*AND ( ( esi.creation_date BETWEEN to_date(:p_start_date, 'YYYY-MM-DD HH24:MI:SS') AND to_date(:p_end_date, 'YYYY-MM-DD HH24:MI:SS') )
          OR ( esi.last_update_date BETWEEN to_date(:p_start_date, 'YYYY-MM-DD HH24:MI:SS') AND to_date(:p_end_date, 'YYYY-MM-DD HH24:MI:SS') ) )*/
UNION
SELECT
    esi.item_number,
	esi.INVENTORY_ITEM_ID,
	esi.organization_id,
    esi.description AS item_description,
    (
        SELECT
            dhct.hold_name
        FROM
            doo_hold_codes_tl dhct
        WHERE
                esi.attribute10 = dhct.hold_name
            AND dhct.language (+) = 'US'
    )               AS hold_name,
    (
        SELECT
            dhct.hold_description
        FROM
            doo_hold_codes_tl dhct
        WHERE
                esi.attribute10 = dhct.hold_name
            AND dhct.language (+) = 'US'
    )               AS hold_description,
    iodv.organization_code
FROM
    egp_system_items               esi,
    inv_organization_definitions_v iodv
WHERE
        1 = 1
    AND esi.organization_id = iodv.organization_id
    AND iodv.organization_code IN ( (
        SELECT
            description
        FROM
            fnd_lookup_values
        WHERE
                lookup_type = 'EVOSYS_CUSTOM_REPORTS'
            AND lookup_code = 'ITEM_HOLD_ORGCODE'
            AND language = 'US'
    ), (
        SELECT
            description
        FROM
            fnd_lookup_values
        WHERE
                lookup_type = 'EVOSYS_CUSTOM_REPORTS'
            AND lookup_code = 'ITEM_HOLD_ORGCODE1'
            AND language = 'US'
    ) )
    AND esi.attribute10 IS NOT NULL
  /*  AND ( ( esi.creation_date BETWEEN to_date(:p_start_date, 'YYYY-MM-DD HH24:MI:SS') AND to_date(:p_end_date, 'YYYY-MM-DD HH24:MI:SS') )
          OR ( esi.last_update_date BETWEEN to_date(:p_start_date, 'YYYY-MM-DD HH24:MI:SS') AND to_date(:p_end_date, 'YYYY-MM-DD HH24:MI:SS') ) ) */
UNION
SELECT
    esi.item_number,
	esi.INVENTORY_ITEM_ID,
	esi.organization_id,
    esi.description AS item_description,
    (
        SELECT
            dhct.hold_name
        FROM
            doo_hold_codes_tl dhct
        WHERE
                esi.attribute9 = dhct.hold_name
            AND dhct.language (+) = 'US'
    )               AS hold_name,
    (
        SELECT
            dhct.hold_description
        FROM
            doo_hold_codes_tl dhct
        WHERE
                esi.attribute9 = dhct.hold_name
            AND dhct.language (+) = 'US'
    )               AS hold_description,
    iodv.organization_code
FROM
    egp_system_items               esi,
    inv_organization_definitions_v iodv
WHERE
        1 = 1
    AND esi.organization_id = iodv.organization_id
    AND iodv.organization_code IN ( (
        SELECT
            description
        FROM
            fnd_lookup_values
        WHERE
                lookup_type = 'EVOSYS_CUSTOM_REPORTS'
            AND lookup_code = 'ITEM_HOLD_ORGCODE'
            AND language = 'US'
    ), (
        SELECT
            description
        FROM
            fnd_lookup_values
        WHERE
                lookup_type = 'EVOSYS_CUSTOM_REPORTS'
            AND lookup_code = 'ITEM_HOLD_ORGCODE1'
            AND language = 'US'
    ) )
    AND esi.attribute9 IS NOT NULL
    /*AND ( ( esi.creation_date BETWEEN to_date(:p_start_date, 'YYYY-MM-DD HH24:MI:SS') AND to_date(:p_end_date, 'YYYY-MM-DD HH24:MI:SS') )
          OR ( esi.last_update_date BETWEEN to_date(:p_start_date, 'YYYY-MM-DD HH24:MI:SS') AND to_date(:p_end_date, 'YYYY-MM-DD HH24:MI:SS') ) )*/
UNION
SELECT
    esi.item_number,
	esi.INVENTORY_ITEM_ID,
	esi.organization_id,
    esi.description AS item_description,
    (
        SELECT
            dhct.hold_name
        FROM
            doo_hold_codes_tl dhct
        WHERE
                esi.attribute10 = dhct.hold_name
            AND dhct.language (+) = 'US'
    )               AS hold_name,
    (
        SELECT
            dhct.hold_description
        FROM
            doo_hold_codes_tl dhct
        WHERE
                esi.attribute10 = dhct.hold_name
            AND dhct.language (+) = 'US'
    )               AS hold_description,
    iodv.organization_code
FROM
    egp_system_items               esi,
    inv_organization_definitions_v iodv
WHERE
        1 = 1
    AND esi.organization_id = iodv.organization_id
    AND iodv.organization_code IN ( (
        SELECT
            description
        FROM
            fnd_lookup_values
        WHERE
                lookup_type = 'EVOSYS_CUSTOM_REPORTS'
            AND lookup_code = 'ITEM_HOLD_ORGCODE'
            AND language = 'US'
    ), (
        SELECT
            description
        FROM
            fnd_lookup_values
        WHERE
                lookup_type = 'EVOSYS_CUSTOM_REPORTS'
            AND lookup_code = 'ITEM_HOLD_ORGCODE1'
            AND language = 'US'
    ) )
    AND esi.attribute7 IS NULL
    AND esi.attribute8 IS NULL
    AND esi.attribute9 IS NULL
    AND esi.attribute10 IS NULL
   /*   AND ( ( esi.creation_date BETWEEN to_date(:p_start_date, 'YYYY-MM-DD HH24:MI:SS') AND to_date(:p_end_date, 'YYYY-MM-DD HH24:MI:SS') )
          OR ( esi.last_update_date BETWEEN to_date(:p_start_date, 'YYYY-MM-DD HH24:MI:SS') AND to_date(:p_end_date, 'YYYY-MM-DD HH24:MI:SS') ) )*/
          ) item_detail
where 		  
  dha.header_id = dla.header_id
  and item_detail.INVENTORY_ITEM_ID =dla.INVENTORY_ITEM_ID
  and item_detail.organization_id = dla.INVENTORY_ORGANIZATION_ID
  --and dha.order_number in ('4851','4843')
  and dha.order_number not in (select  distinct * from(SELECT
                               oh.Source_Order_Number
                               FROM    Fusion.DOO_Hold_Instances hdi   ,
                                       Fusion.DOO_Headers_all oh       ,
                                       Fusion.DOO_Lines_all ol         ,
                                       Fusion.DOO_Fulfill_Lines_all fl ,
                                       Fusion.DOO_HOLD_CODES_B dhcb    ,
                                       Fusion.DOO_HOLD_CODES_tl dhct   
                               WHERE 1=1 
                               --oh.Source_Order_Number in ('4838','4814')
                                       AND hdi.hold_code_id   = dhcb.hold_code_id
                                       AND oh.Header_ID       = ol.Header_id
                                       AND oh.Header_ID       = fl.Header_id
                                       AND fl.line_id         =ol.line_id
                                       AND
                                       (
                                               (
                                                       TRANSACTION_ENTITY_NAME1   = 'DOO_ORDER_LINES_V'
                                                       AND TRANSACTION_ENTITY_ID1 = ol.Line_id
                                               )
                                               OR
                                               (
                                                       TRANSACTION_ENTITY_NAME1   = 'DOO_ORDER_HEADERS_V'
                                                       AND TRANSACTION_ENTITY_ID1 = oh.Header_id
                                               )
                                               OR
                                               (
                                                       TRANSACTION_ENTITY_NAME1   = 'DOO_ORDER_FLINES_V'
                                                       AND TRANSACTION_ENTITY_ID1 = fl.Fulfill_Line_id
                                               )
                                       )
                                       AND dhct.hold_code_id             = dhcb.hold_code_id
                                       AND dhct.language                 = USERENV('LANG')
                                       AND oh.submitted_flag = 'Y'
                                       and active_flag = 'Y'
                               ORDER BY oh.creation_Date DESC))
	and dha.order_type_code =fvl.Lookup_code
and fvl.LOOKUP_TYPE ='ORA_DOO_ORDER_TYPES'
    AND fvl.language = 'US'
	and dha.open_flag='Y'	
and hp.party_id = dha.SOLD_TO_PARTY_ID
--AND nvl(fvl.LOOKUP_CODE,'PP') IN ('CC Patent/Safe','CC Manual')
AND dla.creation_date BETWEEN :p_from_date AND :p_to_date
======================================================================================================
SELECT
    (
        SELECT
            substr(zr.registration_number, 1, 15)
        FROM
            zx_registrations           zr,
            zx_party_tax_profile       ptp,
            xle_establishment_v        xe,
            fun_all_business_units_v   fab
        WHERE
            zr.party_tax_profile_id = ptp.party_tax_profile_id
            AND ptp.party_type_code = 'LEGAL_ESTABLISHMENT'
            AND ptp.party_id = xe.party_id
              --  and xe.main_establishment_flag = 'N' --commented by Ankit on 12thDec2020
            AND xe.legal_entity_id = fab.legal_entity_id
            AND fab.bu_id = rct.org_id
            AND zr.registration_id = rct.first_pty_reg_id --Added by Ankit on 12thDec2020
    ) user_gstin,
    NULL version,
    rct.attribute6    irn,			-- NULL IRN (Logic changed on 01Mar by Pratul)
    substr(rbs.name, 1, 250) sourcesystem,
    CASE
        WHEN (
            SELECT
                COUNT(1)
            FROM
                zx_registrations           zr,
                zx_party_tax_profile       ptp,
                xle_establishment_v        xe,
                fun_all_business_units_v   fab
            WHERE
                zr.party_tax_profile_id = ptp.party_tax_profile_id
                AND ptp.party_type_code = 'LEGAL_ESTABLISHMENT'
                AND zr.registration_status_code = 'SEZ'
                AND ptp.party_id = xe.party_id
                AND xe.legal_entity_id = fab.legal_entity_id
                AND fab.bu_id = rct.org_id
                AND zr.registration_id = rct.first_pty_reg_id
        ) > 0 THEN
            'N'
        WHEN gst.registration_status_code = 'NOT REGISTERED' THEN
            'N'
        WHEN fab.bu_name IN (
            'CRISIL Ratings Limited',
            'PRAGMATIX SERVICES PRIVATE LIMITED'
        ) THEN
            'N'
       --- when gst.registration_status_code IN ('EXPORT', 'SEZ', 'REGISTERED') then --Added REGISTERED by Ankit on 12thDec2020
        ELSE
            'Y'
    END is_irn,
    'crisilar@crisil.com' email,
    'GST' trandtls_taxsch,
    'Outward' trandtls_outwardinward,
    CASE
        WHEN gst.registration_status_code = 'EXPORT' THEN
            'Export'
       /* Commented on 21Dec by Pratul
                   when gst.registration_status_code IN
                            ('REGISTERED', 'NOT REGISTERED', 'SEZ') then
                        'Supply'*/
        ELSE
            'Supply'
    END trandtls_subtype,
    CASE
        WHEN gst.registration_status_code = 'EXPORT'         THEN
            'EXPWOP'
        WHEN gst.registration_status_code = 'SEZ'            THEN
            'SEZWOP'
        WHEN gst.registration_status_code = 'NOT REGISTERED' THEN
            'B2C'
        WHEN gst.registration_number IS NOT NULL THEN
            'B2B'
        ELSE
            NULL
    END trandtls_suptyp,
    'N' trandtls_regrev,
    'REG' trandtls_typ,
       /*case   Commented by Pratul on 30Dec
                       when gst.registration_status_code = 'SEZ' then
                        'Y'
                       else
                        'N'
                     end TranDtls_IgstOnIntra,*/
    'N' trandtls_igstonintra, -- Added by Pratul on 30Dec
    CASE
        WHEN gst.registration_status_code = 'EXEMPT'         THEN
            'Exempted'
        WHEN gst.registration_status_code = 'SEZ'            THEN
            'Supply to SEZ'
        WHEN gst.registration_status_code = 'EXPORT'         THEN
            'Export'
        WHEN gst.registration_status_code = 'NIL RATED'      THEN
            'NIL Rated'
        WHEN gst.registration_status_code = 'NOT REGISTERED' THEN					-- New Condition added on 1Mar by Pratul
            'Taxable'
        WHEN gst.registration_number IS NOT NULL THEN
            'Taxable'
        ELSE
            NULL
    END trandtls_taxability,
    CASE
        WHEN gst.registration_status_code = 'SEZ' THEN
            'INTER'
        WHEN (
            SELECT
                COUNT(*)
            FROM
                zx_lines
            WHERE
                application_id = 222
                AND trx_id = rct.customer_trx_id
                AND trx_line_id = rctl.customer_trx_line_id
                AND tax LIKE '%IGST%'
        ) > 0 THEN
            'INTER'
        WHEN (
            SELECT
                COUNT(1)
            FROM
                zx_lines
            WHERE
                application_id = 222
                AND trx_id = rct.customer_trx_id
                AND trx_line_id = rctl.customer_trx_line_id
                AND tax NOT LIKE '%US_SALES_TAX%'
        ) = 0 THEN
            CASE
                WHEN ( (
                    SELECT
                        flv.tag
                    FROM
                        xle_establishment_v    xe,
                        zx_registrations       zr,
                        zx_party_tax_profile   ptp,
                        fnd_lookup_values      flv
                    WHERE
                        zr.party_tax_profile_id = ptp.party_tax_profile_id
                        AND ptp.party_type_code = 'LEGAL_ESTABLISHMENT'
                        AND ptp.party_id = xe.party_id
                        AND zr.registration_id = rct.first_pty_reg_id
                        AND upper(xe.region_2) = upper(flv.meaning)
                        AND flv.lookup_type = 'CRISIL_STATE_CODE'
                        AND flv.enabled_flag = 'Y'
                        AND flv.language = 'US'
                ) = (
                    CASE
                        WHEN gst.registration_status_code = 'EXPORT' THEN
                            '96'
                        ELSE
                            (
                                SELECT
                                    tag
                                FROM
                                    fnd_lookup_values
                                WHERE
                                    lookup_type = 'CRISIL_STATE_CODE'
                                    AND enabled_flag = 'Y'
                                    AND language = 'US'
                                    AND upper(meaning) = upper(hl.state)
                            )
                    END
                ) ) THEN
                    'INTRA'
                ELSE
                    'INTER'
            END
        ELSE
            'INTRA'
    END trandtls_interintra,
    decode(rctt.type, 'DM', 'DBN', 'CM', 'CRN',
           'INV', 'INV', NULL) docdtls_typ,
    substr(rct.trx_number, 1, 16) docdtls_no,
    to_char(rct.trx_date, 'DD/MM/YYYY') docdtls_dt,
    rct.attribute11   docdtls_reasonforcndn, -- Added by Pratul on 16Dec
    (
        SELECT
            substr(zr.registration_number, 1, 15)
        FROM
            zx_registrations           zr,
            zx_party_tax_profile       ptp,
            xle_establishment_v        xe,
            fun_all_business_units_v   fab
        WHERE
            zr.party_tax_profile_id = ptp.party_tax_profile_id
            AND ptp.party_type_code = 'LEGAL_ESTABLISHMENT'
            AND ptp.party_id = xe.party_id
              -- and xe.main_establishment_flag = 'N' --commented by Ankit on 12thDec2020
            AND xe.legal_entity_id = fab.legal_entity_id
            AND fab.bu_id = rct.org_id
            AND zr.registration_id = rct.first_pty_reg_id --Added by Ankit on 12thDec2020
    ) sellerdtls_gstin,
      /* (select substr(xe.establishment_name, 1, 100)
          from xle_establishment_v xe
         where xe.main_establishment_flag = 'Y'
           and xe.legal_entity_id = rct.legal_entity_id) SellerDtls_LglNm, */ -- Commented by Pratul on 13Jan
    (
        SELECT
            substr(xep.name, 1, 100)
        FROM
            xle_establishment_v    xe,
            zx_registrations       zr,
            zx_party_tax_profile   ptp,
            xle_entity_profiles    xep
        WHERE
            zr.party_tax_profile_id = ptp.party_tax_profile_id
            AND ptp.party_type_code = 'LEGAL_ESTABLISHMENT'
            AND ptp.party_id = xe.party_id
            AND xe.legal_entity_id = xep.legal_entity_id
            AND zr.registration_id = rct.first_pty_reg_id
    ) sellerdtls_lglnm,	-- Added by Pratul on 13Jan
    (
        SELECT
            substr(xep.name, 1, 100)
        FROM
            xle_establishment_v    xe,
            zx_registrations       zr,
            zx_party_tax_profile   ptp,
            xle_entity_profiles    xep
        WHERE
            zr.party_tax_profile_id = ptp.party_tax_profile_id
            AND ptp.party_type_code = 'LEGAL_ESTABLISHMENT'
            AND ptp.party_id = xe.party_id
            AND xe.legal_entity_id = xep.legal_entity_id
            AND zr.registration_id = rct.first_pty_reg_id
    ) sellerdtls_trdnm,
    (
        SELECT
            substr(xe.address_line_1, 1, 100)
        FROM
            xle_establishment_v    xe,
            zx_registrations       zr,
            zx_party_tax_profile   ptp
        WHERE
            zr.party_tax_profile_id = ptp.party_tax_profile_id
            AND ptp.party_type_code = 'LEGAL_ESTABLISHMENT'
            AND ptp.party_id = xe.party_id
            AND zr.registration_id = rct.first_pty_reg_id
    ) sellerdtls_addr1,
    (
        SELECT
            substr(xe.address_line_2, 1, 100)
        FROM
            xle_establishment_v    xe,
            zx_registrations       zr,
            zx_party_tax_profile   ptp
        WHERE
            zr.party_tax_profile_id = ptp.party_tax_profile_id
            AND ptp.party_type_code = 'LEGAL_ESTABLISHMENT'
            AND ptp.party_id = xe.party_id
            AND zr.registration_id = rct.first_pty_reg_id
    ) sellerdtls_addr2,
    (
        SELECT
            substr(xe.town_or_city, 1, 50)
        FROM
            xle_establishment_v    xe,
            zx_registrations       zr,
            zx_party_tax_profile   ptp
        WHERE
            zr.party_tax_profile_id = ptp.party_tax_profile_id
            AND ptp.party_type_code = 'LEGAL_ESTABLISHMENT'
            AND ptp.party_id = xe.party_id
            AND zr.registration_id = rct.first_pty_reg_id
    ) sellerdtls_loc,
    (
        SELECT
            xe.postal_code
        FROM
            xle_establishment_v    xe,
            zx_registrations       zr,
            zx_party_tax_profile   ptp
        WHERE
            zr.party_tax_profile_id = ptp.party_tax_profile_id
            AND ptp.party_type_code = 'LEGAL_ESTABLISHMENT'
            AND ptp.party_id = xe.party_id
            AND zr.registration_id = rct.first_pty_reg_id
    ) sellerdtls_pin,
    (
        SELECT
            flv.tag
        FROM
            xle_establishment_v    xe,
            zx_registrations       zr,
            zx_party_tax_profile   ptp,
            fnd_lookup_values      flv
        WHERE
            zr.party_tax_profile_id = ptp.party_tax_profile_id
            AND ptp.party_type_code = 'LEGAL_ESTABLISHMENT'
            AND ptp.party_id = xe.party_id
            AND zr.registration_id = rct.first_pty_reg_id
            AND upper(xe.region_2) = upper(flv.meaning)
            AND flv.lookup_type = 'CRISIL_STATE_CODE'
            AND flv.enabled_flag = 'Y'
            AND flv.language = 'US'
    ) sellerdtls_stcd,		-- Added by Pratul on 13Jan
       /*(select flv.tag
          from xle_establishment_v xe, fnd_lookup_values flv
         where xe.main_establishment_flag = 'Y'
           and xe.legal_entity_id = rct.legal_entity_id
           and upper(xe.region_2) = upper(flv.meaning)
           and flv.lookup_type = 'CRISIL_STATE_CODE'
           and flv.enabled_flag = 'Y'
           and flv.language = 'US') SellerDtls_Stcd,	Commented by Pratul on 13Jan*/
    NULL sellerdtls_ph,
    NULL sellerdtls_em,
    CASE
        WHEN gst.registration_status_code IN (
            'EXPORT',
            'NOT REGISTERED'
        ) THEN
            'URP'
        ELSE
            substr(gst.registration_number, 1, 15)
    END buyerdtls_gstin,
    substr(hp.party_name, 1, 100) buyerdtls_lglnm,
    substr(hp.party_name, 1, 100) buyerdtls_trdnm,
    substr(hl.address1, 1, 100) buyerdtls_addr1,
    substr(hl.address2, 1, 100) buyerdtls_addr2,
    substr(hl.city, 1, 100) buyerdtls_loc,
    CASE
        WHEN gst.registration_status_code = 'EXPORT' THEN
            '999999'
        ELSE
            hl.postal_code
    END buyerdtls_pin,
    CASE
        WHEN gst.registration_status_code = 'EXPORT' THEN
            '96'
        ELSE
            (
                SELECT
                    tag
                FROM
                    fnd_lookup_values
                WHERE
                    lookup_type = 'CRISIL_STATE_CODE'
                    AND enabled_flag = 'Y'
                    AND language = 'US'
                    AND upper(meaning) = upper(hl.state)
            )
    END buyerdtls_stcd,
    CASE
        WHEN gst.registration_status_code = 'EXPORT' THEN
            '96'
        ELSE
            (
                SELECT
                    flv.tag
                FROM
                    hz_party_site_uses   hpsu,
                    hz_party_sites       hps1,
                    hz_locations         hl1,
                    fnd_lookup_values    flv
                WHERE
                    hpsu.party_site_use_id = rct.ship_to_party_site_use_id
                    AND hpsu.party_site_id = hps1.party_site_id
                    AND hps1.location_id = hl1.location_id
                    AND upper(hl1.state) = upper(flv.meaning)
                    AND flv.lookup_type = 'CRISIL_STATE_CODE'
                    AND flv.enabled_flag = 'Y'
                    AND flv.language = 'US'
            )
    END buyerdtls_pos,
    substr(hca.account_number, 1, 250) buyerdtls_customercode,
    substr(rctl.line_number, 1, 6) itemslist_slno,
    substr(rctl.attribute1, 1, 8) itemslist_hsncd,
    CASE
        WHEN rctl.attribute1 LIKE '99%' THEN
            'Y'
        ELSE
            'N'
    END itemslist_isservc,
    decode(rctt.type, 'CM', abs(nvl(rctl.quantity_invoiced, rctl.quantity_credited)), nvl(rctl.quantity_invoiced, rctl.quantity_credited
    )) itemlist_unit, --Added by Meenal on 30Dec
    ( ( regexp_replace(rctl.attribute2, '[^0-9.]') * nvl(rct.exchange_rate, 1) ) / nvl(rctl.quantity_invoiced, rctl.quantity_credited
    ) ) itemlist_unitprice,
    ( decode(rctt.type, 'CM', abs(regexp_replace(rctl.attribute2, '[^0-9.]')), regexp_replace(rctl.attribute2, '[^0-9.]')) * nvl(
    rct.exchange_rate, 1) ) itemslist_totamt, --Added by Meenal on 30Dec
    ( decode(rctt.type, 'CM', abs(regexp_replace(rctl.attribute3, '[^0-9.]')), regexp_replace(rctl.attribute3, '[^0-9.]')) * nvl(
    rct.exchange_rate, 1) ) itemlist_discount, --Added by Meenal on 30Dec
    NULL itemslist_pretaxval,
    ( decode(rctt.type, 'CM', abs(regexp_replace(rctl.attribute2, '[^0-9.]') - regexp_replace(rctl.attribute3, '[^0-9.]')),(regexp_replace
    (rctl.attribute2, '[^0-9.]') - regexp_replace(rctl.attribute3, '[^0-9.]'))) * nvl(rct.exchange_rate, 1) ) itemslist_assamt, --Added by Meenal on 30Dec
    (
        SELECT
            SUM(tax_rate)
        FROM
            zx_lines
        WHERE
            application_id = 222
            AND trx_id = rct.customer_trx_id
            AND trx_line_id = rctl.customer_trx_line_id
            AND tax NOT LIKE '%US_SALES_TAX%'
    ) itemslist_gstrt,
    (
        SELECT
            SUM(tax_rate)
        FROM
            zx_lines
        WHERE
            application_id = 222
            AND trx_id = rct.customer_trx_id
            AND trx_line_id = rctl.customer_trx_line_id
            AND tax LIKE '%CGST%'
    ) itemslist_cgstrt,
    (
        SELECT
            SUM(tax_rate)
        FROM
            zx_lines
        WHERE
            application_id = 222
            AND trx_id = rct.customer_trx_id
            AND trx_line_id = rctl.customer_trx_line_id
            AND tax LIKE '%SGST%'
    ) itemslist_sgstrt,
    (
        SELECT
            SUM(tax_rate)
        FROM
            zx_lines
        WHERE
            application_id = 222
            AND trx_id = rct.customer_trx_id
            AND trx_line_id = rctl.customer_trx_line_id
            AND tax LIKE '%IGST%'
    ) itemslist_igstrt,
    (
        SELECT
            SUM(tax_rate)
        FROM
            zx_lines
        WHERE
            application_id = 222
            AND trx_id = rct.customer_trx_id
            AND trx_line_id = rctl.customer_trx_line_id
            AND tax LIKE '%CESS%'
    ) itemslist_cesrt,
    ( decode(rctt.type, 'CM', abs((
        SELECT
            SUM(tax_amt)
        FROM
            zx_lines
        WHERE
            application_id = 222
            AND trx_id = rct.customer_trx_id
            AND trx_line_id = rctl.customer_trx_line_id
            AND tax LIKE '%IGST%'
    )),(
        SELECT
            SUM(tax_amt)
        FROM
            zx_lines
        WHERE
            application_id = 222
            AND trx_id = rct.customer_trx_id
            AND trx_line_id = rctl.customer_trx_line_id
            AND tax LIKE '%IGST%'
    )) * nvl(rct.exchange_rate, 1) ) itemslist_igstamt, --Added by Meenal on 30Dec
    ( decode(rctt.type, 'CM', abs((
        SELECT
            SUM(tax_amt)
        FROM
            zx_lines
        WHERE
            application_id = 222
            AND trx_id = rct.customer_trx_id
            AND trx_line_id = rctl.customer_trx_line_id
            AND tax LIKE '%CGST%'
    )),(
        SELECT
            SUM(tax_amt)
        FROM
            zx_lines
        WHERE
            application_id = 222
            AND trx_id = rct.customer_trx_id
            AND trx_line_id = rctl.customer_trx_line_id
            AND tax LIKE '%CGST%'
    )) * nvl(rct.exchange_rate, 1) ) itemslist_cgstamt, --Added by Meenal on 30Dec
    ( decode(rctt.type, 'CM', abs((
        SELECT
            SUM(tax_amt)
        FROM
            zx_lines
        WHERE
            application_id = 222
            AND trx_id = rct.customer_trx_id
            AND trx_line_id = rctl.customer_trx_line_id
            AND tax LIKE '%SGST%'
    )),(
        SELECT
            SUM(tax_amt)
        FROM
            zx_lines
        WHERE
            application_id = 222
            AND trx_id = rct.customer_trx_id
            AND trx_line_id = rctl.customer_trx_line_id
            AND tax LIKE '%CGST%'
    )) * nvl(rct.exchange_rate, 1) ) itemslist_sgstamt, --Added by Meenal on 30Dec
    ( decode(rctt.type, 'CM', abs((
        SELECT
            SUM(tax_amt)
        FROM
            zx_lines
        WHERE
            application_id = 222
            AND trx_id = rct.customer_trx_id
            AND trx_line_id = rctl.customer_trx_line_id
            AND tax LIKE '%CESS%'
    )),(
        SELECT
            SUM(tax_amt)
        FROM
            zx_lines
        WHERE
            application_id = 222
            AND trx_id = rct.customer_trx_id
            AND trx_line_id = rctl.customer_trx_line_id
            AND tax LIKE '%CESS%'
    )) * nvl(rct.exchange_rate, 1) ) itemslist_cesamt,
    ( decode(rctt.type, 'CM', abs((regexp_replace(rctl.attribute2, '[^0-9.]') - regexp_replace(rctl.attribute3, '[^0-9.]')) +(
        SELECT
            nvl(SUM(tax_amt), 0)
        FROM
            zx_lines
        WHERE
            application_id = 222
            AND trx_id = rct.customer_trx_id
            AND trx_line_id = rctl.customer_trx_line_id
            AND tax NOT LIKE '%US_SALES_TAX%'
    )),((regexp_replace(rctl.attribute2, '[^0-9.]') - regexp_replace(rctl.attribute3, '[^0-9.]')) +(
        SELECT
            nvl(SUM(tax_amt), 0)
        FROM
            zx_lines
        WHERE
            application_id = 222
            AND trx_id = rct.customer_trx_id
            AND trx_line_id = rctl.customer_trx_line_id
            AND tax NOT LIKE '%US_SALES_TAX%'
    ))) * nvl(rct.exchange_rate, 1) ) itemslist_totitemval, -- Added on 15Dec by Pratul  --Added by Meenal on 30Dec
       /*(select NVL(sum(extended_amount), 0)      -- Commented on 11Jan by Pratul
                      from ra_customer_trx_lines_all
                     where customer_trx_id = rct.customer_trx_id
                       and link_to_cust_trx_line_id = rctl.customer_trx_line_id
                       and line_type = 'TAX')*/
       /* rctl.extended_amount ItemsList_TotItemVal,       
                     (select sum(rctl.extended_amount)
                        from ra_customer_trx_lines_all
                       where customer_trx_id = rct.customer_trx_id) ItemsList_TotItemVal, -- Commented on 15Dec by Pratul*/
    'IN' itemslist_orgcntry,
    (
        SELECT
            substr(gcc.segment2, 1, 250)
        FROM
            ra_cust_trx_line_gl_dist_all   rctlgd,
            gl_code_combinations           gcc
        WHERE
            rctlgd.account_class = 'REV'
            AND rctlgd.code_combination_id = gcc.code_combination_id
            AND rctlgd.customer_trx_line_id = rctl.customer_trx_line_id
            AND ROWNUM = 1
    ) itemlist_glcoderevenueexpense,
    '212056' itemlist_glcodeigst,
    '212057' itemlist_glcodecgst,
    '212058' itemlist_glcodesgst,
    '212059' itemlist_glcodecess,
    (
        SELECT
            substr(gcc.segment1, 1, 250)
        FROM
            ra_cust_trx_line_gl_dist_all   rctlgd,
            gl_code_combinations           gcc
        WHERE
            rctlgd.account_class = 'REC'
            AND rctlgd.code_combination_id = gcc.code_combination_id
            AND rctlgd.customer_trx_id = rct.customer_trx_id
            AND ROWNUM = 1
    ) itemlist_mis1,
    (
        SELECT
            substr(gcc.segment2, 1, 250)
        FROM
            ra_cust_trx_line_gl_dist_all   rctlgd,
            gl_code_combinations           gcc
        WHERE
            rctlgd.account_class = 'REC'
            AND rctlgd.code_combination_id = gcc.code_combination_id
            AND rctlgd.customer_trx_id = rct.customer_trx_id
            AND ROWNUM = 1
    ) itemlist_mis_2,
    (
        SELECT
            substr(gcc.segment3, 1, 250)
        FROM
            ra_cust_trx_line_gl_dist_all   rctlgd,
            gl_code_combinations           gcc
        WHERE
            rctlgd.account_class = 'REC'
            AND rctlgd.code_combination_id = gcc.code_combination_id
            AND rctlgd.customer_trx_id = rct.customer_trx_id
            AND ROWNUM = 1
    ) itemlist_mis_3,
    (
        SELECT
            substr(gcc.segment4, 1, 250)
        FROM
            ra_cust_trx_line_gl_dist_all   rctlgd,
            gl_code_combinations           gcc
        WHERE
            rctlgd.account_class = 'REC'
            AND rctlgd.code_combination_id = gcc.code_combination_id
            AND rctlgd.customer_trx_id = rct.customer_trx_id
            AND ROWNUM = 1
    ) itemlist_mis_4,
    (
        SELECT
            substr(gcc.segment5, 1, 250)
        FROM
            ra_cust_trx_line_gl_dist_all   rctlgd,
            gl_code_combinations           gcc
        WHERE
            rctlgd.account_class = 'REC'
            AND rctlgd.code_combination_id = gcc.code_combination_id
            AND rctlgd.customer_trx_id = rct.customer_trx_id
            AND ROWNUM = 1
    ) itemlist_mis_5,
    (
        SELECT
            substr(gcc.segment6, 1, 250)
        FROM
            ra_cust_trx_line_gl_dist_all   rctlgd,
            gl_code_combinations           gcc
        WHERE
            rctlgd.account_class = 'REC'
            AND rctlgd.code_combination_id = gcc.code_combination_id
            AND rctlgd.customer_trx_id = rct.customer_trx_id
            AND ROWNUM = 1
    ) itemlist_mis_6,
    (
        SELECT
            substr(gcc.segment7, 1, 250)
        FROM
            ra_cust_trx_line_gl_dist_all   rctlgd,
            gl_code_combinations           gcc
        WHERE
            rctlgd.account_class = 'REC'
            AND rctlgd.code_combination_id = gcc.code_combination_id
            AND rctlgd.customer_trx_id = rct.customer_trx_id
            AND ROWNUM = 1
    ) itemlist_mis_7,
    (
        SELECT
            substr(gcc.segment8, 1, 250)
        FROM
            ra_cust_trx_line_gl_dist_all   rctlgd,
            gl_code_combinations           gcc
        WHERE
            rctlgd.account_class = 'REC'
            AND rctlgd.code_combination_id = gcc.code_combination_id
            AND rctlgd.customer_trx_id = rct.customer_trx_id
            AND ROWNUM = 1
    ) itemlist_mis_8,
    (
        SELECT
            substr(gcc.segment9, 1, 250)
        FROM
            ra_cust_trx_line_gl_dist_all   rctlgd,
            gl_code_combinations           gcc
        WHERE
            rctlgd.account_class = 'REC'
            AND rctlgd.code_combination_id = gcc.code_combination_id
            AND rctlgd.customer_trx_id = rct.customer_trx_id
            AND ROWNUM = 1
    ) itemlist_mis_9,
    ( decode(rctt.type, 'CM', abs((
        SELECT
            SUM(regexp_replace(attribute2, '[^0-9.]') - regexp_replace(attribute3, '[^0-9.]'))
        FROM
            ra_customer_trx_lines_all
        WHERE
            customer_trx_id = rct.customer_trx_id
    )),(
        SELECT
            SUM(regexp_replace(attribute2, '[^0-9.]') - regexp_replace(attribute3, '[^0-9.]'))
        FROM
            ra_customer_trx_lines_all
        WHERE
            customer_trx_id = rct.customer_trx_id
    )) * nvl(rct.exchange_rate, 1) ) valdtls_assval, -- Added by Pratul on 16Dec    --Added by Meenal on 30Dec
       /* (select sum(extended_amount)
                        from ra_customer_trx_lines_all
                       where customer_trx_id = rct.customer_trx_id) ValDtls_AssVal, Commented by Pratul Goel on 15Dec*/
    ( decode(rctt.type, 'CM', abs((
        SELECT
            SUM(tax_amt)
        FROM
            zx_lines
        WHERE
            application_id = 222
            AND trx_id = rct.customer_trx_id
                        --- and trx_line_id = rctl.customer_trx_line_id     Commented by Pratul Goel on 16Dec
            AND tax LIKE '%CGST%'
    )),(
        SELECT
            SUM(tax_amt)
        FROM
            zx_lines
        WHERE
            application_id = 222
            AND trx_id = rct.customer_trx_id
                     --- and trx_line_id = rctl.customer_trx_line_id     Commented by Pratul Goel on 16Dec
            AND tax LIKE '%CGST%'
    )) * nvl(rct.exchange_rate, 1) ) valdtls_cgstval, --Added by Meenal on 30Dec
    ( decode(rctt.type, 'CM', abs((
        SELECT
            SUM(tax_amt)
        FROM
            zx_lines
        WHERE
            application_id = 222
            AND trx_id = rct.customer_trx_id
                        --- and trx_line_id = rctl.customer_trx_line_id   Commented by Pratul Goel on 16Dec
            AND tax LIKE '%SGST%'
    )),(
        SELECT
            SUM(tax_amt)
        FROM
            zx_lines
        WHERE
            application_id = 222
            AND trx_id = rct.customer_trx_id
                     --- and trx_line_id = rctl.customer_trx_line_id   Commented by Pratul Goel on 16Dec
            AND tax LIKE '%SGST%'
    )) * nvl(rct.exchange_rate, 1) ) valdtls_sgstval, --Added by Meenal on 30Dec
    ( decode(rctt.type, 'CM', abs((
        SELECT
            SUM(tax_amt)
        FROM
            zx_lines
        WHERE
            application_id = 222
            AND trx_id = rct.customer_trx_id
                        --- and trx_line_id = rctl.customer_trx_line_id   Commented by Pratul Goel on 16Dec
            AND tax LIKE '%IGST%'
    )),(
        SELECT
            SUM(tax_amt)
        FROM
            zx_lines
        WHERE
            application_id = 222
            AND trx_id = rct.customer_trx_id
                     --- and trx_line_id = rctl.customer_trx_line_id   Commented by Pratul Goel on 16Dec
            AND tax LIKE '%IGST%'
    )) * nvl(rct.exchange_rate, 1) ) valdtls_igstval,
    ( decode(rctt.type, 'CM', abs((
        SELECT
            SUM(tax_amt)
        FROM
            zx_lines
        WHERE
            application_id = 222
            AND trx_id = rct.customer_trx_id
                        --- and trx_line_id = rctl.customer_trx_line_id   Commented by Pratul Goel on 15Dec
            AND tax LIKE '%CESS%'
    )),(
        SELECT
            SUM(tax_amt)
        FROM
            zx_lines
        WHERE
            application_id = 222
            AND trx_id = rct.customer_trx_id
                     --- and trx_line_id = rctl.customer_trx_line_id   Commented by Pratul Goel on 15Dec
            AND tax LIKE '%CESS%'
    )) * nvl(rct.exchange_rate, 1) ) valdtls_cesval,
    0 valdtls_discount, -- Added by Pratul on 06Jan
       /* DECODE(rctt.type, 'CM', ABS((select sum(attribute3)
                      from ra_customer_trx_lines_all
                       where customer_trx_id = rct.customer_trx_id)), (select sum(attribute3)
                      from ra_customer_trx_lines_all
                       where customer_trx_id = rct.customer_trx_id)) ValDtls_Discount,    Commented by Pratul Goel on06Jan*/
    decode(rctt.type, 'CM', abs((
        SELECT
            SUM(rctlgd.acctd_amount)
        FROM
            ra_cust_trx_line_gl_dist_all rctlgd
        WHERE
            rctlgd.account_class = 'ROUND'
            AND rctlgd.customer_trx_id = rct.customer_trx_id
    )),(
        SELECT
            SUM(rctlgd.acctd_amount)
        FROM
            ra_cust_trx_line_gl_dist_all rctlgd
        WHERE
            rctlgd.account_class = 'ROUND'
            AND rctlgd.customer_trx_id = rct.customer_trx_id
    )) valdtls_rndoffamt,
    ( decode(rctt.type, 'CM', abs((
        SELECT
            nvl(SUM(regexp_replace(attribute2, '[^0-9.]') - regexp_replace(attribute3, '[^0-9.]')), 0)
        FROM
            ra_customer_trx_lines_all
        WHERE
            customer_trx_id = rct.customer_trx_id
            AND line_type = 'LINE'
    ) +(
        SELECT
            nvl(SUM(tax_amt), 0)
        FROM
            zx_lines
        WHERE
            application_id = 222
            AND trx_id = rct.customer_trx_id
            AND tax NOT LIKE '%US_SALES_TAX%'
    )),((
        SELECT
            nvl(SUM(regexp_replace(attribute2, '[^0-9.]') - regexp_replace(attribute3, '[^0-9.]')), 0)
        FROM
            ra_customer_trx_lines_all
        WHERE
            customer_trx_id = rct.customer_trx_id
            AND line_type = 'LINE'
    ) +(
        SELECT
            nvl(SUM(tax_amt), 0)
        FROM
            zx_lines
        WHERE
            application_id = 222
            AND trx_id = rct.customer_trx_id
            AND tax NOT LIKE '%US_SALES_TAX%'
    ))) * nvl(rct.exchange_rate, 1) ) valdtls_totinvval, -- Added on 15Dec by Pratul --Added by Meenal 30Dec
       /*rctl.extended_amount ValDtls_TotInvVal,     
                     (select sum(extended_amount)
                        from ra_customer_trx_lines_all
                       where customer_trx_id = rct.customer_trx_id) ValDtls_TotInvVal,  -- Commented on 15Dec by Pratul */
    substr(rct.trx_number, 1, 250) refdtls_accountingdocno,
    (
        SELECT
            to_char(rctlgd.gl_date, 'DD/MM/YYYY')
        FROM
            ra_cust_trx_line_gl_dist_all rctlgd
        WHERE
            1 = 1 ---rctlgd.customer_trx_line_id = rctl.customer_trx_line_id
            AND rctlgd.customer_trx_id = rct.customer_trx_id
            AND rctlgd.account_class = 'REC'
            AND ROWNUM = 1
    ) refdtls_accountingdocdt,
    (
        SELECT
            to_char(rctlgd.gl_date, 'MON-YY')
        FROM
            ra_cust_trx_line_gl_dist_all rctlgd
        WHERE
            1 = 1 --rctlgd.customer_trx_line_id = rctl.customer_trx_line_id
            AND rctlgd.customer_trx_id = rct.customer_trx_id
            AND rctlgd.account_class = 'REC'
            AND ROWNUM = 1
    ) miscolumns_returnperiod,
    rct.customer_trx_id,
    CASE
        WHEN ( rctt.attribute_category = 'CRISIL_Additional_Information'
               AND upper(rctt.attribute1) = 'YES' ) THEN
            'Y'
        ELSE
            'N'
    END einvoice_applicable,
    (
        SELECT
            trx_number
        FROM
            ra_customer_trx_all rct1
        WHERE
            rct1.customer_trx_id = rct.previous_customer_trx_id
    ) orig_inv_num,
    (
        SELECT
            to_char(trx_date, 'DD/MM/YYYY')
        FROM
            ra_customer_trx_all rct1
        WHERE
            rct1.customer_trx_id = rct.previous_customer_trx_id
    ) orig_inv_date,
    rctt.name         trx_type
FROM
    ra_customer_trx_all            rct,
    ra_customer_trx_lines_all      rctl,
    ra_cust_trx_line_gl_dist_all   rctlgda,  --Added by Ankit on 12thDec2020 for finding Accounting invoices
    ra_batch_sources_all           rbs,
    ra_cust_trx_types_all          rctt,
    hz_cust_accounts               hca,
    hz_parties                     hp,
    hz_cust_site_uses_all          hcsu,
    hz_cust_acct_sites_all         hcas,
    hz_party_sites                 hps,
    hz_locations                   hl,
    fun_all_business_units_v       fab,
    (
        SELECT
            decode(zr.registration_number, 'ECC123456', NULL, 'UNR123456', NULL,
                   zr.registration_number) registration_number,
            ptp.party_id,
            zr.registration_status_code
        FROM
            zx_registrations       zr,
            zx_party_tax_profile   ptp
        WHERE
            zr.party_tax_profile_id = ptp.party_tax_profile_id
            AND ptp.party_type_code = 'THIRD_PARTY_SITE'
            AND zr.tax_regime_code = 'IN_GST'
            AND trunc(sysdate) BETWEEN trunc(zr.effective_from) AND nvl(trunc(zr.effective_to), trunc(sysdate))
    ) gst
WHERE
    rct.batch_source_seq_id = rbs.batch_source_seq_id
    AND rct.cust_trx_type_seq_id = rctt.cust_trx_type_seq_id
    AND rct.customer_trx_id = rctl.customer_trx_id
    AND rct.customer_trx_id = rctlgda.customer_trx_id --Added by Ankit on 12thDec2020 for finding Accounting invoices
    AND rctlgda.gl_posted_date IS NOT NULL --Added by Ankit on 12thDec2020 for finding Accounting invoices
    AND rctlgda.account_class = 'REC'  --Added by Ankit on 12thDec2020 for finding Accounting invoices
    AND rctl.line_type = 'LINE'
    AND rctt.type <> 'CM'
    AND rct.bill_to_customer_id = hca.cust_account_id
    AND hca.party_id = hp.party_id
    AND rct.bill_to_site_use_id = hcsu.site_use_id
    AND hcsu.cust_acct_site_id = hcas.cust_acct_site_id
    AND hcas.party_site_id = hps.party_site_id
    AND hps.location_id = hl.location_id
    AND hps.party_site_id = gst.party_id (+)
    AND rct.complete_flag = 'Y'
    AND fab.bu_id = rct.org_id
    AND fab.bu_name IN (
        'CRISIL LIMITED',
        'CRISIL Ratings Limited',
        --/*Commected by Filix Ram dated 30.04.2021--'PRAGMATIX SERVICES PRIVATE LIMITED',*/
        'CRISIL Risk and Infrastructure Solutions Limited'
    )
    AND rctt.attribute_category = 'CRISIL_Additional_Information'
    AND upper(rctt.attribute1) = 'YES'
    /*Commected by Filix Ram dated 30.04.2021
    AND NOT EXISTS (
        SELECT
            COUNT(1)
        FROM
            zx_registrations           zr,
            zx_party_tax_profile       ptp,
            xle_establishment_v        xe,
            fun_all_business_units_v   fab
        WHERE
            zr.party_tax_profile_id = ptp.party_tax_profile_id
            AND ptp.party_type_code = 'LEGAL_ESTABLISHMENT'
            AND zr.registration_status_code = 'SEZ'
            AND ptp.party_id = xe.party_id
            AND xe.legal_entity_id = fab.legal_entity_id
            AND fab.bu_id = rct.org_id
            AND zr.registration_id = rct.first_pty_reg_id
    )end Commected by Filix Ram dated 30.04.2021*/
    AND gst.registration_status_code NOT IN (
        'NOT REGISTERED',
        'EXPORT'
    )
    /*Commected by Filix Ram dated 30.04.2021
    AND fab.bu_name NOT IN (
        'CRISIL Ratings Limited',
        'PRAGMATIX SERVICES PRIVATE LIMITED'
    )
     end Commected by Filix Ram dated 30.04.2021*/
    AND rct.attribute6 IS NULL
    --Added by Filix Ram to exclude invoice which adjusted against CM
    AND NOT EXISTS (
        SELECT
            1
        FROM
            ra_customer_trx_all     a1,
            ra_cust_trx_types_all   a2
        WHERE
            1 = 1
            AND a1.cust_trx_type_seq_id = a2.cust_trx_type_seq_id
            AND a1.previous_customer_trx_id = rct.customer_trx_id
            AND a2.type = 'CM'
    )
    --End Added by Filix Ram to exclude invoice which adjusted against CM
    /*Commected by Filix Ram dated 30.04.2021*/
    /*AND to_char((
        SELECT
            gl_date
        FROM
            ra_cust_trx_line_gl_dist_all
        WHERE
            customer_trx_id = rct.customer_trx_id
            AND account_class = 'REC'
            AND ROWNUM = 1
    ), 'MM-DD-YYYY') = to_char(fnd_timezone_pub.adjust_datetime(sysdate, 'GMT', 'Asia/Calcutta'), 'MM-DD-YYYY')*/
    /* end Commected by Filix Ram dated 30.04.2021*/
    /*Added by Filix Ram dated 30.04.2021*/
    AND to_char((
        SELECT
            gl_date
        FROM
            ra_cust_trx_line_gl_dist_all
        WHERE
            customer_trx_id = rct.customer_trx_id
            AND account_class = 'REC'
            AND ROWNUM = 1
    ), 'MM-DD-YYYY') <= to_char(fnd_timezone_pub.adjust_datetime(sysdate - 1, 'GMT', 'Asia/Calcutta'), 'MM-DD-YYYY')
    /*end Added by Filix Ram dated 30.04.2021*/
UNION
SELECT
    (
        SELECT
            substr(zr.registration_number, 1, 15)
        FROM
            zx_registrations           zr,
            zx_party_tax_profile       ptp,
            xle_establishment_v        xe,
            fun_all_business_units_v   fab
        WHERE
            zr.party_tax_profile_id = ptp.party_tax_profile_id
            AND ptp.party_type_code = 'LEGAL_ESTABLISHMENT'
            AND ptp.party_id = xe.party_id
              --  and xe.main_establishment_flag = 'N' --commented by Ankit on 12thDec2020
            AND xe.legal_entity_id = fab.legal_entity_id
            AND fab.bu_id = rct.org_id
            AND zr.registration_id = rct.first_pty_reg_id --Added by Ankit on 12thDec2020
    ) user_gstin,
    NULL version,
    rct.attribute6    irn,							-- NULL IRN (Logic changed on 01Mar by Pratul)
    substr(rbs.name, 1, 250) sourcesystem,
    CASE
        WHEN (
            SELECT
                COUNT(1)
            FROM
                zx_registrations           zr,
                zx_party_tax_profile       ptp,
                xle_establishment_v        xe,
                fun_all_business_units_v   fab
            WHERE
                zr.party_tax_profile_id = ptp.party_tax_profile_id
                AND ptp.party_type_code = 'LEGAL_ESTABLISHMENT'
                AND zr.registration_status_code = 'SEZ'
                AND ptp.party_id = xe.party_id
                AND xe.legal_entity_id = fab.legal_entity_id
                AND fab.bu_id = rct.org_id
                AND zr.registration_id = rct.first_pty_reg_id
        ) > 0 THEN
            'N'
        WHEN gst.registration_status_code = 'NOT REGISTERED' THEN
            'N'
        WHEN fab.bu_name IN (
            'CRISIL Ratings Limited',
            'PRAGMATIX SERVICES PRIVATE LIMITED'
        ) THEN
            'N'
       --- when gst.registration_status_code IN ('EXPORT', 'SEZ', 'REGISTERED') then --Added REGISTERED by Ankit on 12thDec2020
        ELSE
            'Y'
    END is_irn,
    'crisilar@crisil.com' email,
    'GST' trandtls_taxsch,
    'Outward' trandtls_outwardinward,
    CASE
        WHEN gst.registration_status_code = 'EXPORT' THEN
            'Export'
       /* Commented on 21Dec by Pratul
                   when gst.registration_status_code IN
                            ('REGISTERED', 'NOT REGISTERED', 'SEZ') then
                        'Supply'*/
        ELSE
            'Supply'
    END trandtls_subtype,
    CASE
        WHEN gst.registration_status_code = 'EXPORT'         THEN
            'EXPWOP'
        WHEN gst.registration_status_code = 'SEZ'            THEN
            'SEZWOP'
        WHEN gst.registration_status_code = 'NOT REGISTERED' THEN
            'B2C'
        WHEN gst.registration_number IS NOT NULL THEN
            'B2B'
        ELSE
            NULL
    END trandtls_suptyp,
    'N' trandtls_regrev,
    'REG' trandtls_typ,
       /*case   Commented by Pratul on 30Dec
                       when gst.registration_status_code = 'SEZ' then
                        'Y'
                       else
                        'N'
                     end TranDtls_IgstOnIntra,*/
    'N' trandtls_igstonintra, -- Added by Pratul on 30Dec
    CASE
        WHEN gst.registration_status_code = 'EXEMPT'         THEN
            'Exempted'
        WHEN gst.registration_status_code = 'SEZ'            THEN
            'Supply to SEZ'
        WHEN gst.registration_status_code = 'EXPORT'         THEN
            'Export'
        WHEN gst.registration_status_code = 'NIL RATED'      THEN
            'NIL Rated'
        WHEN gst.registration_status_code = 'NOT REGISTERED' THEN				-- New Condition added on 1Mar by Pratul
            'Taxable'
        WHEN gst.registration_number IS NOT NULL THEN
            'Taxable'
        ELSE
            NULL
    END trandtls_taxability,
    CASE
        WHEN gst.registration_status_code = 'SEZ' THEN
            'INTER'
        WHEN (
            SELECT
                COUNT(*)
            FROM
                zx_lines
            WHERE
                application_id = 222
                AND trx_id = rct.customer_trx_id
                AND trx_line_id = rctl.customer_trx_line_id
                AND tax LIKE '%IGST%'
        ) > 0 THEN
            'INTER'
        WHEN (
            SELECT
                COUNT(1)
            FROM
                zx_lines
            WHERE
                application_id = 222
                AND trx_id = rct.customer_trx_id
                AND trx_line_id = rctl.customer_trx_line_id
                AND tax NOT LIKE '%US_SALES_TAX%'
        ) = 0 THEN
            CASE
                WHEN ( (
                    SELECT
                        flv.tag
                    FROM
                        xle_establishment_v    xe,
                        zx_registrations       zr,
                        zx_party_tax_profile   ptp,
                        fnd_lookup_values      flv
                    WHERE
                        zr.party_tax_profile_id = ptp.party_tax_profile_id
                        AND ptp.party_type_code = 'LEGAL_ESTABLISHMENT'
                        AND ptp.party_id = xe.party_id
                        AND zr.registration_id = rct.first_pty_reg_id
                        AND upper(xe.region_2) = upper(flv.meaning)
                        AND flv.lookup_type = 'CRISIL_STATE_CODE'
                        AND flv.enabled_flag = 'Y'
                        AND flv.language = 'US'
                ) = (
                    CASE
                        WHEN gst.registration_status_code = 'EXPORT' THEN
                            '96'
                        ELSE
                            (
                                SELECT
                                    tag
                                FROM
                                    fnd_lookup_values
                                WHERE
                                    lookup_type = 'CRISIL_STATE_CODE'
                                    AND enabled_flag = 'Y'
                                    AND language = 'US'
                                    AND upper(meaning) = upper(hl.state)
                            )
                    END
                ) ) THEN
                    'INTRA'
                ELSE
                    'INTER'
            END
        ELSE
            'INTRA'
    END trandtls_interintra,
    decode(rctt.type, 'DM', 'DBN', 'CM', 'CRN',
           'INV', 'INV', NULL) docdtls_typ,
    substr(rct.trx_number, 1, 16) docdtls_no,
    to_char(rct.trx_date, 'DD/MM/YYYY') docdtls_dt,
    rct.attribute11   docdtls_reasonforcndn, -- Added by Pratul on 16Dec
    (
        SELECT
            substr(zr.registration_number, 1, 15)
        FROM
            zx_registrations           zr,
            zx_party_tax_profile       ptp,
            xle_establishment_v        xe,
            fun_all_business_units_v   fab
        WHERE
            zr.party_tax_profile_id = ptp.party_tax_profile_id
            AND ptp.party_type_code = 'LEGAL_ESTABLISHMENT'
            AND ptp.party_id = xe.party_id
              -- and xe.main_establishment_flag = 'N' --commented by Ankit on 12thDec2020
            AND xe.legal_entity_id = fab.legal_entity_id
            AND fab.bu_id = rct.org_id
            AND zr.registration_id = rct.first_pty_reg_id --Added by Ankit on 12thDec2020
    ) sellerdtls_gstin,
      /* (select substr(xe.establishment_name, 1, 100)
          from xle_establishment_v xe
         where xe.main_establishment_flag = 'Y'
           and xe.legal_entity_id = rct.legal_entity_id) SellerDtls_LglNm, */ -- Commented by Pratul on 13Jan
    (
        SELECT
            substr(xep.name, 1, 100)
        FROM
            xle_establishment_v    xe,
            zx_registrations       zr,
            zx_party_tax_profile   ptp,
            xle_entity_profiles    xep
        WHERE
            zr.party_tax_profile_id = ptp.party_tax_profile_id
            AND ptp.party_type_code = 'LEGAL_ESTABLISHMENT'
            AND ptp.party_id = xe.party_id
            AND xe.legal_entity_id = xep.legal_entity_id
            AND zr.registration_id = rct.first_pty_reg_id
    ) sellerdtls_lglnm,	-- Added by Pratul on 13Jan
    (
        SELECT
            substr(xep.name, 1, 100)
        FROM
            xle_establishment_v    xe,
            zx_registrations       zr,
            zx_party_tax_profile   ptp,
            xle_entity_profiles    xep
        WHERE
            zr.party_tax_profile_id = ptp.party_tax_profile_id
            AND ptp.party_type_code = 'LEGAL_ESTABLISHMENT'
            AND ptp.party_id = xe.party_id
            AND xe.legal_entity_id = xep.legal_entity_id
            AND zr.registration_id = rct.first_pty_reg_id
    ) sellerdtls_trdnm,
    (
        SELECT
            substr(xe.address_line_1, 1, 100)
        FROM
            xle_establishment_v    xe,
            zx_registrations       zr,
            zx_party_tax_profile   ptp
        WHERE
            zr.party_tax_profile_id = ptp.party_tax_profile_id
            AND ptp.party_type_code = 'LEGAL_ESTABLISHMENT'
            AND ptp.party_id = xe.party_id
            AND zr.registration_id = rct.first_pty_reg_id
    ) sellerdtls_addr1,
    (
        SELECT
            substr(xe.address_line_2, 1, 100)
        FROM
            xle_establishment_v    xe,
            zx_registrations       zr,
            zx_party_tax_profile   ptp
        WHERE
            zr.party_tax_profile_id = ptp.party_tax_profile_id
            AND ptp.party_type_code = 'LEGAL_ESTABLISHMENT'
            AND ptp.party_id = xe.party_id
            AND zr.registration_id = rct.first_pty_reg_id
    ) sellerdtls_addr2,
    (
        SELECT
            substr(xe.town_or_city, 1, 50)
        FROM
            xle_establishment_v    xe,
            zx_registrations       zr,
            zx_party_tax_profile   ptp
        WHERE
            zr.party_tax_profile_id = ptp.party_tax_profile_id
            AND ptp.party_type_code = 'LEGAL_ESTABLISHMENT'
            AND ptp.party_id = xe.party_id
            AND zr.registration_id = rct.first_pty_reg_id
    ) sellerdtls_loc,
    (
        SELECT
            xe.postal_code
        FROM
            xle_establishment_v    xe,
            zx_registrations       zr,
            zx_party_tax_profile   ptp
        WHERE
            zr.party_tax_profile_id = ptp.party_tax_profile_id
            AND ptp.party_type_code = 'LEGAL_ESTABLISHMENT'
            AND ptp.party_id = xe.party_id
            AND zr.registration_id = rct.first_pty_reg_id
    ) sellerdtls_pin,
    (
        SELECT
            flv.tag
        FROM
            xle_establishment_v    xe,
            zx_registrations       zr,
            zx_party_tax_profile   ptp,
            fnd_lookup_values      flv
        WHERE
            zr.party_tax_profile_id = ptp.party_tax_profile_id
            AND ptp.party_type_code = 'LEGAL_ESTABLISHMENT'
            AND ptp.party_id = xe.party_id
            AND zr.registration_id = rct.first_pty_reg_id
            AND upper(xe.region_2) = upper(flv.meaning)
            AND flv.lookup_type = 'CRISIL_STATE_CODE'
            AND flv.enabled_flag = 'Y'
            AND flv.language = 'US'
    ) sellerdtls_stcd,		-- Added by Pratul on 13Jan
       /*(select flv.tag
          from xle_establishment_v xe, fnd_lookup_values flv
         where xe.main_establishment_flag = 'Y'
           and xe.legal_entity_id = rct.legal_entity_id
           and upper(xe.region_2) = upper(flv.meaning)
           and flv.lookup_type = 'CRISIL_STATE_CODE'
           and flv.enabled_flag = 'Y'
           and flv.language = 'US') SellerDtls_Stcd,	Commented by Pratul on 13Jan*/
    NULL sellerdtls_ph,
    NULL sellerdtls_em,
    CASE
        WHEN gst.registration_status_code IN (
            'EXPORT',
            'NOT REGISTERED'
        ) THEN
            'URP'
        ELSE
            substr(gst.registration_number, 1, 15)
    END buyerdtls_gstin,
    substr(hp.party_name, 1, 100) buyerdtls_lglnm,
    substr(hp.party_name, 1, 100) buyerdtls_trdnm,
    substr(hl.address1, 1, 100) buyerdtls_addr1,
    substr(hl.address2, 1, 100) buyerdtls_addr2,
    substr(hl.city, 1, 100) buyerdtls_loc,
    CASE
        WHEN gst.registration_status_code = 'EXPORT' THEN
            '999999'
        ELSE
            hl.postal_code
    END buyerdtls_pin,
    CASE
        WHEN gst.registration_status_code = 'EXPORT' THEN
            '96'
        ELSE
            (
                SELECT
                    tag
                FROM
                    fnd_lookup_values
                WHERE
                    lookup_type = 'CRISIL_STATE_CODE'
                    AND enabled_flag = 'Y'
                    AND language = 'US'
                    AND upper(meaning) = upper(hl.state)
            )
    END buyerdtls_stcd,
    CASE
        WHEN gst.registration_status_code = 'EXPORT' THEN
            '96'
        ELSE
            (
                SELECT
                    flv.tag
                FROM
                    hz_party_site_uses   hpsu,
                    hz_party_sites       hps1,
                    hz_locations         hl1,
                    fnd_lookup_values    flv
                WHERE
                    hpsu.party_site_use_id = rct.ship_to_party_site_use_id
                    AND hpsu.party_site_id = hps1.party_site_id
                    AND hps1.location_id = hl1.location_id
                    AND upper(hl1.state) = upper(flv.meaning)
                    AND flv.lookup_type = 'CRISIL_STATE_CODE'
                    AND flv.enabled_flag = 'Y'
                    AND flv.language = 'US'
            )
    END buyerdtls_pos,
    substr(hca.account_number, 1, 250) buyerdtls_customercode,
    substr(rctl.line_number, 1, 6) itemslist_slno,
    substr(rctl.attribute1, 1, 8) itemslist_hsncd,
    CASE
        WHEN rctl.attribute1 LIKE '99%' THEN
            'Y'
        ELSE
            'N'
    END itemslist_isservc,
    1 itemlist_unit, --Added by Meenal on 30Dec
    abs(regexp_replace(rctl.attribute2, '[^0-9.]') * nvl(rct.exchange_rate, 1)) itemlist_unitprice,
    abs(regexp_replace(rctl.attribute2, '[^0-9.]') * nvl(rct.exchange_rate, 1)) itemslist_totamt, --Added by Meenal on 30Dec
    abs(regexp_replace(rctl.attribute3, '[^0-9.]') * nvl(rct.exchange_rate, 1)) itemlist_discount, --Added by Meenal on 30Dec
    NULL itemslist_pretaxval,
    ( abs(regexp_replace(rctl.attribute2, '[^0-9.]') - regexp_replace(rctl.attribute3, '[^0-9.]')) * nvl(rct.exchange_rate, 1) ) itemslist_assamt
    , --Added by Meenal on 30Dec
    (
        SELECT
            SUM(tax_rate)
        FROM
            zx_lines
        WHERE
            application_id = 222
            AND trx_id = rct.customer_trx_id
            AND trx_line_id = rctl.customer_trx_line_id
            AND tax NOT LIKE '%US_SALES_TAX%'
    ) itemslist_gstrt,
    (
        SELECT
            SUM(tax_rate)
        FROM
            zx_lines
        WHERE
            application_id = 222
            AND trx_id = rct.customer_trx_id
            AND trx_line_id = rctl.customer_trx_line_id
            AND tax LIKE '%CGST%'
    ) itemslist_cgstrt,
    (
        SELECT
            SUM(tax_rate)
        FROM
            zx_lines
        WHERE
            application_id = 222
            AND trx_id = rct.customer_trx_id
            AND trx_line_id = rctl.customer_trx_line_id
            AND tax LIKE '%SGST%'
    ) itemslist_sgstrt,
    (
        SELECT
            SUM(tax_rate)
        FROM
            zx_lines
        WHERE
            application_id = 222
            AND trx_id = rct.customer_trx_id
            AND trx_line_id = rctl.customer_trx_line_id
            AND tax LIKE '%IGST%'
    ) itemslist_igstrt,
    (
        SELECT
            SUM(tax_rate)
        FROM
            zx_lines
        WHERE
            application_id = 222
            AND trx_id = rct.customer_trx_id
            AND trx_line_id = rctl.customer_trx_line_id
            AND tax LIKE '%CESS%'
    ) itemslist_cesrt,
    CASE
        WHEN (
            SELECT
                COUNT(1)
            FROM
                zx_lines
            WHERE
                application_id = 222
                AND trx_id = rct.customer_trx_id
                AND trx_line_id = rctl.customer_trx_line_id
                AND tax LIKE '%IGST%'
        ) > 0 THEN
            round(((abs(regexp_replace(rctl.attribute2, '[^0-9.]') - regexp_replace(rctl.attribute3, '[^0-9.]')) *(
                SELECT
                    SUM(tax_rate)
                FROM
                    zx_lines
                WHERE
                    application_id = 222
                    AND trx_id = rct.customer_trx_id
                    AND trx_line_id = rctl.customer_trx_line_id
                    AND tax LIKE '%IGST%'
            ) * nvl(rct.exchange_rate, 1)) / 100), 5)
        ELSE
            NULL
    END itemslist_igstamt,
    CASE
        WHEN (
            SELECT
                COUNT(1)
            FROM
                zx_lines
            WHERE
                application_id = 222
                AND trx_id = rct.customer_trx_id
                AND trx_line_id = rctl.customer_trx_line_id
                AND tax LIKE '%CGST%'
        ) > 0 THEN
            round(((abs(regexp_replace(rctl.attribute2, '[^0-9.]') - regexp_replace(rctl.attribute3, '[^0-9.]')) *(
                SELECT
                    SUM(tax_rate)
                FROM
                    zx_lines
                WHERE
                    application_id = 222
                    AND trx_id = rct.customer_trx_id
                    AND trx_line_id = rctl.customer_trx_line_id
                    AND tax LIKE '%CGST%'
            ) * nvl(rct.exchange_rate, 1)) / 100), 5)
        ELSE
            NULL
    END itemslist_cgstamt,
    CASE
        WHEN (
            SELECT
                COUNT(1)
            FROM
                zx_lines
            WHERE
                application_id = 222
                AND trx_id = rct.customer_trx_id
                AND trx_line_id = rctl.customer_trx_line_id
                AND tax LIKE '%SGST%'
        ) > 0 THEN
            round(((abs(regexp_replace(rctl.attribute2, '[^0-9.]') - regexp_replace(rctl.attribute3, '[^0-9.]')) *(
                SELECT
                    SUM(tax_rate)
                FROM
                    zx_lines
                WHERE
                    application_id = 222
                    AND trx_id = rct.customer_trx_id
                    AND trx_line_id = rctl.customer_trx_line_id
                    AND tax LIKE '%SGST%'
            ) * nvl(rct.exchange_rate, 1)) / 100), 5)
        ELSE
            NULL
    END itemslist_sgstamt,
    CASE
        WHEN (
            SELECT
                COUNT(1)
            FROM
                zx_lines
            WHERE
                application_id = 222
                AND trx_id = rct.customer_trx_id
                AND trx_line_id = rctl.customer_trx_line_id
                AND tax LIKE '%CESS%'
        ) > 0 THEN
            round(((abs(regexp_replace(rctl.attribute2, '[^0-9.]') - regexp_replace(rctl.attribute3, '[^0-9.]')) *(
                SELECT
                    SUM(tax_rate)
                FROM
                    zx_lines
                WHERE
                    application_id = 222
                    AND trx_id = rct.customer_trx_id
                    AND trx_line_id = rctl.customer_trx_line_id
                    AND tax LIKE '%CESS%'
            ) * nvl(rct.exchange_rate, 1)) / 100), 5)
        ELSE
            NULL
    END itemslist_cesamt,
    round(((abs(regexp_replace(rctl.attribute2, '[^0-9.]') - regexp_replace(rctl.attribute3, '[^0-9.]')) * nvl(rct.exchange_rate,
    1)) +((abs(regexp_replace(rctl.attribute2, '[^0-9.]') - regexp_replace(rctl.attribute3, '[^0-9.]')) *(
        SELECT
            nvl(SUM(tax_rate), 0)
        FROM
            zx_lines
        WHERE
            application_id = 222
            AND trx_id = rct.customer_trx_id
            AND trx_line_id = rctl.customer_trx_line_id
            AND tax NOT LIKE '%US_SALES_TAX%'
    ) * nvl(rct.exchange_rate, 1)) / 100)), 5) itemslist_totitemval,
    'IN' itemslist_orgcntry,
    (
        SELECT
            substr(gcc.segment2, 1, 250)
        FROM
            ra_cust_trx_line_gl_dist_all   rctlgd,
            gl_code_combinations           gcc
        WHERE
            rctlgd.account_class = 'REV'
            AND rctlgd.code_combination_id = gcc.code_combination_id
            AND rctlgd.customer_trx_line_id = rctl.customer_trx_line_id
            AND ROWNUM = 1
    ) itemlist_glcoderevenueexpense,
    '212056' itemlist_glcodeigst,
    '212057' itemlist_glcodecgst,
    '212058' itemlist_glcodesgst,
    '212059' itemlist_glcodecess,
    (
        SELECT
            substr(gcc.segment1, 1, 250)
        FROM
            ra_cust_trx_line_gl_dist_all   rctlgd,
            gl_code_combinations           gcc
        WHERE
            rctlgd.account_class = 'REC'
            AND rctlgd.code_combination_id = gcc.code_combination_id
            AND rctlgd.customer_trx_id = rct.customer_trx_id
            AND ROWNUM = 1
    ) itemlist_mis1,
    (
        SELECT
            substr(gcc.segment2, 1, 250)
        FROM
            ra_cust_trx_line_gl_dist_all   rctlgd,
            gl_code_combinations           gcc
        WHERE
            rctlgd.account_class = 'REC'
            AND rctlgd.code_combination_id = gcc.code_combination_id
            AND rctlgd.customer_trx_id = rct.customer_trx_id
            AND ROWNUM = 1
    ) itemlist_mis_2,
    (
        SELECT
            substr(gcc.segment3, 1, 250)
        FROM
            ra_cust_trx_line_gl_dist_all   rctlgd,
            gl_code_combinations           gcc
        WHERE
            rctlgd.account_class = 'REC'
            AND rctlgd.code_combination_id = gcc.code_combination_id
            AND rctlgd.customer_trx_id = rct.customer_trx_id
            AND ROWNUM = 1
    ) itemlist_mis_3,
    (
        SELECT
            substr(gcc.segment4, 1, 250)
        FROM
            ra_cust_trx_line_gl_dist_all   rctlgd,
            gl_code_combinations           gcc
        WHERE
            rctlgd.account_class = 'REC'
            AND rctlgd.code_combination_id = gcc.code_combination_id
            AND rctlgd.customer_trx_id = rct.customer_trx_id
            AND ROWNUM = 1
    ) itemlist_mis_4,
    (
        SELECT
            substr(gcc.segment5, 1, 250)
        FROM
            ra_cust_trx_line_gl_dist_all   rctlgd,
            gl_code_combinations           gcc
        WHERE
            rctlgd.account_class = 'REC'
            AND rctlgd.code_combination_id = gcc.code_combination_id
            AND rctlgd.customer_trx_id = rct.customer_trx_id
            AND ROWNUM = 1
    ) itemlist_mis_5,
    (
        SELECT
            substr(gcc.segment6, 1, 250)
        FROM
            ra_cust_trx_line_gl_dist_all   rctlgd,
            gl_code_combinations           gcc
        WHERE
            rctlgd.account_class = 'REC'
            AND rctlgd.code_combination_id = gcc.code_combination_id
            AND rctlgd.customer_trx_id = rct.customer_trx_id
            AND ROWNUM = 1
    ) itemlist_mis_6,
    (
        SELECT
            substr(gcc.segment7, 1, 250)
        FROM
            ra_cust_trx_line_gl_dist_all   rctlgd,
            gl_code_combinations           gcc
        WHERE
            rctlgd.account_class = 'REC'
            AND rctlgd.code_combination_id = gcc.code_combination_id
            AND rctlgd.customer_trx_id = rct.customer_trx_id
            AND ROWNUM = 1
    ) itemlist_mis_7,
    (
        SELECT
            substr(gcc.segment8, 1, 250)
        FROM
            ra_cust_trx_line_gl_dist_all   rctlgd,
            gl_code_combinations           gcc
        WHERE
            rctlgd.account_class = 'REC'
            AND rctlgd.code_combination_id = gcc.code_combination_id
            AND rctlgd.customer_trx_id = rct.customer_trx_id
            AND ROWNUM = 1
    ) itemlist_mis_8,
    (
        SELECT
            substr(gcc.segment9, 1, 250)
        FROM
            ra_cust_trx_line_gl_dist_all   rctlgd,
            gl_code_combinations           gcc
        WHERE
            rctlgd.account_class = 'REC'
            AND rctlgd.code_combination_id = gcc.code_combination_id
            AND rctlgd.customer_trx_id = rct.customer_trx_id
            AND ROWNUM = 1
    ) itemlist_mis_9,
    (
        SELECT
            abs(SUM(regexp_replace(attribute2, '[^0-9.]') - regexp_replace(attribute3, '[^0-9.]')) * nvl(rct.exchange_rate, 1))
        FROM
            ra_customer_trx_lines_all
        WHERE
            customer_trx_id = rct.customer_trx_id
    ) valdtls_assval,
    round((((
        SELECT
            abs(SUM(regexp_replace(attribute2, '[^0-9.]') - regexp_replace(attribute3, '[^0-9.]')))
        FROM
            ra_customer_trx_lines_all
        WHERE
            customer_trx_id = rct.customer_trx_id
    ) *(
        SELECT
            SUM(tax_rate)
        FROM
            zx_lines
        WHERE
            application_id = 222
            AND trx_id = rct.customer_trx_id
            AND trx_line_id = rctl.customer_trx_line_id
            AND tax LIKE '%CGST%'
    ) * nvl(rct.exchange_rate, 1)) / 100), 5) valdtls_cgstval,
    round((((
        SELECT
            abs(SUM(regexp_replace(attribute2, '[^0-9.]') - regexp_replace(attribute3, '[^0-9.]')))
        FROM
            ra_customer_trx_lines_all
        WHERE
            customer_trx_id = rct.customer_trx_id
    ) *(
        SELECT
            SUM(tax_rate)
        FROM
            zx_lines
        WHERE
            application_id = 222
            AND trx_id = rct.customer_trx_id
            AND trx_line_id = rctl.customer_trx_line_id
            AND tax LIKE '%SGST%'
    ) * nvl(rct.exchange_rate, 1)) / 100), 5) valdtls_sgstval,
    round((((
        SELECT
            abs(SUM(regexp_replace(attribute2, '[^0-9.]') - regexp_replace(attribute3, '[^0-9.]')))
        FROM
            ra_customer_trx_lines_all
        WHERE
            customer_trx_id = rct.customer_trx_id
    ) *(
        SELECT
            SUM(tax_rate)
        FROM
            zx_lines
        WHERE
            application_id = 222
            AND trx_id = rct.customer_trx_id
            AND trx_line_id = rctl.customer_trx_line_id
            AND tax LIKE '%IGST%'
    ) * nvl(rct.exchange_rate, 1)) / 100), 5) valdtls_igstval,
    round((((
        SELECT
            abs(SUM(regexp_replace(attribute2, '[^0-9.]') - regexp_replace(attribute3, '[^0-9.]')))
        FROM
            ra_customer_trx_lines_all
        WHERE
            customer_trx_id = rct.customer_trx_id
    ) *(
        SELECT
            SUM(tax_rate)
        FROM
            zx_lines
        WHERE
            application_id = 222
            AND trx_id = rct.customer_trx_id
            AND trx_line_id = rctl.customer_trx_line_id
            AND tax LIKE '%CESS%'
    ) * nvl(rct.exchange_rate, 1)) / 100), 5) valdtls_cesval,
    0 valdtls_discount, -- Added by Pratul on 06Jan
    abs((
        SELECT
            SUM(rctlgd.acctd_amount)
        FROM
            ra_cust_trx_line_gl_dist_all rctlgd
        WHERE
            rctlgd.account_class = 'ROUND'
            AND rctlgd.customer_trx_id = rct.customer_trx_id
    )) valdtls_rndoffamt,
    round(((
        SELECT
            nvl(abs(SUM(regexp_replace(attribute2, '[^0-9.]') - regexp_replace(attribute3, '[^0-9.]')) * nvl(rct.exchange_rate, 1
            )), 0)
        FROM
            ra_customer_trx_lines_all
        WHERE
            customer_trx_id = rct.customer_trx_id
            AND line_type = 'LINE'
    ) +(((
        SELECT
            nvl(abs(SUM(regexp_replace(attribute2, '[^0-9.]') - regexp_replace(attribute3, '[^0-9.]'))), 0)
        FROM
            ra_customer_trx_lines_all
        WHERE
            customer_trx_id = rct.customer_trx_id
            AND line_type = 'LINE'
    ) *(
        SELECT
            nvl(SUM(tax_rate), 0)
        FROM
            zx_lines
        WHERE
            application_id = 222
            AND trx_id = rct.customer_trx_id
            AND trx_line_id = rctl.customer_trx_line_id
            AND tax NOT LIKE '%US_SALES_TAX%'
    ) * nvl(rct.exchange_rate, 1)) / 100)), 5) valdtls_totinvval,
    substr(rct.trx_number, 1, 250) refdtls_accountingdocno,
    (
        SELECT
            to_char(rctlgd.gl_date, 'DD/MM/YYYY')
        FROM
            ra_cust_trx_line_gl_dist_all rctlgd
        WHERE
            1 = 1 ---rctlgd.customer_trx_line_id = rctl.customer_trx_line_id
            AND rctlgd.customer_trx_id = rct.customer_trx_id
            AND rctlgd.account_class = 'REC'
            AND ROWNUM = 1
    ) refdtls_accountingdocdt,
    (
        SELECT
            to_char(rctlgd.gl_date, 'MON-YY')
        FROM
            ra_cust_trx_line_gl_dist_all rctlgd
        WHERE
            1 = 1 --rctlgd.customer_trx_line_id = rctl.customer_trx_line_id
            AND rctlgd.customer_trx_id = rct.customer_trx_id
            AND rctlgd.account_class = 'REC'
            AND ROWNUM = 1
    ) miscolumns_returnperiod,
    rct.customer_trx_id,
    CASE
        WHEN ( rctt.attribute_category = 'CRISIL_Additional_Information'
               AND upper(rctt.attribute1) = 'YES' ) THEN
            'Y'
        ELSE
            'N'
    END einvoice_applicable,
    (
        SELECT
            trx_number
        FROM
            ra_customer_trx_all rct1
        WHERE
            rct1.customer_trx_id = rct.previous_customer_trx_id
    ) orig_inv_num,
    (
        SELECT
            to_char(trx_date, 'DD/MM/YYYY')
        FROM
            ra_customer_trx_all rct1
        WHERE
            rct1.customer_trx_id = rct.previous_customer_trx_id
    ) orig_inv_date,
    rctt.name         trx_type
FROM
    ra_customer_trx_all            rct,
    ra_customer_trx_lines_all      rctl,
    ra_cust_trx_line_gl_dist_all   rctlgda,  --Added by Ankit on 12thDec2020 for finding Accounting invoices
    ra_batch_sources_all           rbs,
    ra_cust_trx_types_all          rctt,
    hz_cust_accounts               hca,
    hz_parties                     hp,
    hz_cust_site_uses_all          hcsu,
    hz_cust_acct_sites_all         hcas,
    hz_party_sites                 hps,
    hz_locations                   hl,
    fun_all_business_units_v       fab,
    (
        SELECT
            zr.registration_number,
            ptp.party_id,
            zr.registration_status_code
        FROM
            zx_registrations       zr,
            zx_party_tax_profile   ptp
        WHERE
            zr.party_tax_profile_id = ptp.party_tax_profile_id
            AND ptp.party_type_code = 'THIRD_PARTY_SITE'
            AND zr.tax_regime_code = 'IN_GST'
            AND trunc(sysdate) BETWEEN trunc(zr.effective_from) AND nvl(trunc(zr.effective_to), trunc(sysdate))
    ) gst
WHERE
    rct.batch_source_seq_id = rbs.batch_source_seq_id
    AND rct.cust_trx_type_seq_id = rctt.cust_trx_type_seq_id
    AND rct.customer_trx_id = rctl.customer_trx_id
    AND rct.customer_trx_id = rctlgda.customer_trx_id --Added by Ankit on 12thDec2020 for finding Accounting invoices
    AND rctlgda.gl_posted_date IS NOT NULL --Added by Ankit on 12thDec2020 for finding Accounting invoices
    AND rctlgda.account_class = 'REC'  --Added by Ankit on 12thDec2020 for finding Accounting invoices
    AND rctl.line_type = 'LINE'
    AND rctt.type = 'CM'
    AND rct.bill_to_customer_id = hca.cust_account_id
    AND hca.party_id = hp.party_id
    AND rct.bill_to_site_use_id = hcsu.site_use_id
    AND hcsu.cust_acct_site_id = hcas.cust_acct_site_id
    AND hcas.party_site_id = hps.party_site_id
    AND hps.location_id = hl.location_id
    AND hps.party_site_id = gst.party_id (+)
    AND rct.complete_flag = 'Y'
   --and rctt.attribute_category = 'CRISIL_Additional_Information'
   --and UPPER(rctt.attribute1) = 'YES' --Added by Meenal on 30Dec for including only applicable invoices
    AND rctl.attribute_category IS NOT NULL
    AND fab.bu_id = rct.org_id
    AND fab.bu_name IN (
        'CRISIL LIMITED',
        'CRISIL Ratings Limited',
        /*Commected by Filix Ram dated 30.04.2021 --'PRAGMATIX SERVICES PRIVATE LIMITED',*/
        'CRISIL Risk and Infrastructure Solutions Limited'
    )
    AND rctt.attribute_category = 'CRISIL_Additional_Information'
    AND upper(rctt.attribute1) = 'YES'
    /*Commected by Filix Ram dated 30.04.2021*/
    /*AND NOT EXISTS (
        SELECT
            COUNT(1)
        FROM
            zx_registrations           zr,
            zx_party_tax_profile       ptp,
            xle_establishment_v        xe,
            fun_all_business_units_v   fab
        WHERE
            zr.party_tax_profile_id = ptp.party_tax_profile_id
            AND ptp.party_type_code = 'LEGAL_ESTABLISHMENT'
            AND zr.registration_status_code = 'SEZ'
            AND ptp.party_id = xe.party_id
            AND xe.legal_entity_id = fab.legal_entity_id
            AND fab.bu_id = rct.org_id
            AND zr.registration_id = rct.first_pty_reg_id
    )*/
    /*end Commected by Filix Ram dated 30.04.2021*/
    AND gst.registration_status_code NOT IN (
        'NOT REGISTERED',
        'EXPORT'
    )
    /*Commected by Filix Ram dated 30.04.2021*/
    /*AND fab.bu_name NOT IN (
        'CRISIL Ratings Limited',
        'PRAGMATIX SERVICES PRIVATE LIMITED'
    )*/
    /*end Commected by Filix Ram dated 30.04.2021*/
    AND rct.attribute6 IS NULL
    /*Commected by Filix Ram dated 30.04.2021*/
    /*AND to_char((
        SELECT
            gl_date
        FROM
            ra_cust_trx_line_gl_dist_all
        WHERE
            customer_trx_id = rct.customer_trx_id
            AND account_class = 'REC'
            AND ROWNUM = 1
    ), 'MM-DD-YYYY') = to_char(fnd_timezone_pub.adjust_datetime(sysdate, 'GMT', 'Asia/Calcutta'), 'MM-DD-YYYY')*/
    /* end Commected by Filix Ram dated 30.04.2021*/
    /*Added by Filix Ram dated 30.04.2021*/
    AND to_char((
        SELECT
            gl_date
        FROM
            ra_cust_trx_line_gl_dist_all
        WHERE
            customer_trx_id = rct.customer_trx_id
            AND account_class = 'REC'
            AND ROWNUM = 1
    ), 'MM-DD-YYYY') <= to_char(fnd_timezone_pub.adjust_datetime(sysdate - 1, 'GMT', 'Asia/Calcutta'), 'MM-DD-YYYY')
    /*end Added by Filix Ram dated 30.04.2021*/
	=====================================================================================================================
	select (select substr(zr.registration_number, 1, 15)
          from zx_registrations         zr,
               zx_party_tax_profile     ptp,
               xle_establishment_v      xe,
               fun_all_business_units_v fab
         where zr.party_tax_profile_id = ptp.party_tax_profile_id
           and ptp.party_type_code = 'LEGAL_ESTABLISHMENT'
           and ptp.party_id = xe.party_id
              --  and xe.main_establishment_flag = 'N' --commented by Ankit on 12thDec2020
           and xe.legal_entity_id = fab.legal_entity_id
           and fab.bu_id = rct.org_id
           AND zr.registration_id = rct.first_pty_reg_id --Added by Ankit on 12thDec2020
        ) User_GSTIN,
       null Version,
       rct.attribute6 IRN,			-- NULL IRN (Logic changed on 01Mar by Pratul)
       substr(rbs.name, 1, 250) SourceSystem,
       case
         when (select count(1)
                 from zx_registrations         zr,
                      zx_party_tax_profile     ptp,
                      xle_establishment_v      xe,
                      fun_all_business_units_v fab
                where zr.party_tax_profile_id = ptp.party_tax_profile_id
                  and ptp.party_type_code = 'LEGAL_ESTABLISHMENT'
                  and zr.registration_status_code = 'SEZ'
                  and ptp.party_id = xe.party_id
                  and xe.legal_entity_id = fab.legal_entity_id
                  and fab.bu_id = rct.org_id
                  AND zr.registration_id = rct.first_pty_reg_id) > 0 then
          'N'
         when gst.registration_status_code = 'NOT REGISTERED' then
          'N'
		 when fab.bu_name in ('CRISIL Ratings Limited', 'PRAGMATIX SERVICES PRIVATE LIMITED') then
		  'N'
       --- when gst.registration_status_code IN ('EXPORT', 'SEZ', 'REGISTERED') then --Added REGISTERED by Ankit on 12thDec2020
         else
          'Y'
       end is_irn,
       'crisilar@crisil.com' email,
       'GST' TranDtls_TaxSch,
       'Outward' TranDtls_OutwardInward,
       case
         when gst.registration_status_code = 'EXPORT' then
          'Export'
       /* Commented on 21Dec by Pratul
                   when gst.registration_status_code IN
                            ('REGISTERED', 'NOT REGISTERED', 'SEZ') then
                        'Supply'*/
         else
          'Supply'
       end TranDtls_SubType,
       case
         when gst.registration_status_code = 'EXPORT' then
          'EXPWOP'
         when gst.registration_status_code = 'SEZ' then
          'SEZWOP'
         when gst.registration_status_code = 'NOT REGISTERED' then
          'B2C'
         when gst.registration_number is not null then
          'B2B'
         else
          null
       end TranDtls_SupTyp,
       'N' TranDtls_RegRev,
       'REG' TranDtls_Typ,
       /*case   Commented by Pratul on 30Dec
                       when gst.registration_status_code = 'SEZ' then
                        'Y'
                       else
                        'N'
                     end TranDtls_IgstOnIntra,*/
       'N' TranDtls_IgstOnIntra, -- Added by Pratul on 30Dec
       case
         when gst.registration_status_code = 'EXEMPT' then
          'Exempted'
         when gst.registration_status_code = 'SEZ' then
          'Supply to SEZ'
         when gst.registration_status_code = 'EXPORT' then
          'Export'
         when gst.registration_status_code = 'NIL RATED' then
          'NIL Rated'
		 when gst.registration_status_code = 'NOT REGISTERED' then					-- New Condition added on 1Mar by Pratul
          'Taxable'
         when gst.registration_number is not null then
          'Taxable'
         else
          null
       end TranDtls_Taxability,
       case
         when gst.registration_status_code = 'SEZ' then
          'INTER'
         when (select count(*)
                 from zx_lines
                where application_id = 222
                  and trx_id = rct.customer_trx_id
                  and trx_line_id = rctl.customer_trx_line_id
                  and tax like '%IGST%') > 0 then
          'INTER'
         when (select count(1)
                     from zx_lines
                    where application_id = 222
                      and trx_id = rct.customer_trx_id
                      and trx_line_id = rctl.customer_trx_line_id
                      and tax not like '%US_SALES_TAX%') = 0 then
			 case when ((select flv.tag
						  from xle_establishment_v xe, 
							   zx_registrations zr, 
							   zx_party_tax_profile ptp,
							   fnd_lookup_values flv
						 where zr.party_tax_profile_id = ptp.party_tax_profile_id
						   and ptp.party_type_code = 'LEGAL_ESTABLISHMENT'
						   and ptp.party_id = xe.party_id
						   and zr.registration_id = rct.first_pty_reg_id
						   and upper(xe.region_2) = upper(flv.meaning)
						   and flv.lookup_type = 'CRISIL_STATE_CODE'
						   and flv.enabled_flag = 'Y'
						   and flv.language = 'US') = (case when gst.registration_status_code = 'EXPORT' then '96'
															else
															  (select tag from fnd_lookup_values
																where lookup_type = 'CRISIL_STATE_CODE'
																  and enabled_flag = 'Y'
																  and language = 'US'
																  and upper(meaning) = upper(hl.state))
													   end)) then 'INTRA'
				  else 'INTER' end
		 else
          'INTRA'
       end TranDtls_InterIntra,
       DECODE(rctt.type, 'DM', 'DBN', 'CM', 'CRN', 'INV', 'INV', null) DocDtls_Typ,
       substr(rct.trx_number, 1, 16) DocDtls_No,
       to_char(rct.trx_date, 'DD/MM/YYYY') DocDtls_Dt,
       rct.attribute11 DocDtls_ReasonForCnDn, -- Added by Pratul on 16Dec
       (select substr(zr.registration_number, 1, 15)
          from zx_registrations         zr,
               zx_party_tax_profile     ptp,
               xle_establishment_v      xe,
               fun_all_business_units_v fab
         where zr.party_tax_profile_id = ptp.party_tax_profile_id
           and ptp.party_type_code = 'LEGAL_ESTABLISHMENT'
           and ptp.party_id = xe.party_id
              -- and xe.main_establishment_flag = 'N' --commented by Ankit on 12thDec2020
           and xe.legal_entity_id = fab.legal_entity_id
           and fab.bu_id = rct.org_id
           AND zr.registration_id = rct.first_pty_reg_id --Added by Ankit on 12thDec2020
        ) SellerDtls_Gstin,
      /* (select substr(xe.establishment_name, 1, 100)
          from xle_establishment_v xe
         where xe.main_establishment_flag = 'Y'
           and xe.legal_entity_id = rct.legal_entity_id) SellerDtls_LglNm, */ -- Commented by Pratul on 13Jan
	   (select substr(xep.name, 1, 100)
		  from xle_establishment_v xe, 
			   zx_registrations zr, 
			   zx_party_tax_profile ptp,
			   xle_entity_profiles xep
		 where zr.party_tax_profile_id = ptp.party_tax_profile_id
		   and ptp.party_type_code = 'LEGAL_ESTABLISHMENT'
		   and ptp.party_id = xe.party_id
		   and xe.legal_entity_id = xep.legal_entity_id
		   and zr.registration_id = rct.first_pty_reg_id) SellerDtls_LglNm,	-- Added by Pratul on 13Jan
	   (select substr(xep.name, 1, 100)
		  from xle_establishment_v xe, 
			   zx_registrations zr, 
			   zx_party_tax_profile ptp,
			   xle_entity_profiles xep
		 where zr.party_tax_profile_id = ptp.party_tax_profile_id
		   and ptp.party_type_code = 'LEGAL_ESTABLISHMENT'
		   and ptp.party_id = xe.party_id
		   and xe.legal_entity_id = xep.legal_entity_id
		   and zr.registration_id = rct.first_pty_reg_id) SellerDtls_TrdNm,
       (select substr(xe.address_line_1, 1, 100)
		  from xle_establishment_v xe, 
			   zx_registrations zr, 
			   zx_party_tax_profile ptp
		 where zr.party_tax_profile_id = ptp.party_tax_profile_id
		   and ptp.party_type_code = 'LEGAL_ESTABLISHMENT'
		   and ptp.party_id = xe.party_id
		   and zr.registration_id = rct.first_pty_reg_id) SellerDtls_Addr1,
       (select substr(xe.address_line_2, 1, 100)
		  from xle_establishment_v xe, 
			   zx_registrations zr, 
			   zx_party_tax_profile ptp
		 where zr.party_tax_profile_id = ptp.party_tax_profile_id
		   and ptp.party_type_code = 'LEGAL_ESTABLISHMENT'
		   and ptp.party_id = xe.party_id
		   and zr.registration_id = rct.first_pty_reg_id) SellerDtls_Addr2,
       (select substr(xe.town_or_city, 1, 50)
		  from xle_establishment_v xe, 
			   zx_registrations zr, 
			   zx_party_tax_profile ptp
		 where zr.party_tax_profile_id = ptp.party_tax_profile_id
		   and ptp.party_type_code = 'LEGAL_ESTABLISHMENT'
		   and ptp.party_id = xe.party_id
		   and zr.registration_id = rct.first_pty_reg_id) SellerDtls_Loc,
       (select xe.postal_code
		  from xle_establishment_v xe, 
			   zx_registrations zr, 
			   zx_party_tax_profile ptp
		 where zr.party_tax_profile_id = ptp.party_tax_profile_id
		   and ptp.party_type_code = 'LEGAL_ESTABLISHMENT'
		   and ptp.party_id = xe.party_id
		   and zr.registration_id = rct.first_pty_reg_id) SellerDtls_Pin,
   	   (select flv.tag
		  from xle_establishment_v xe, 
			   zx_registrations zr, 
			   zx_party_tax_profile ptp,
			   fnd_lookup_values flv
		 where zr.party_tax_profile_id = ptp.party_tax_profile_id
		   and ptp.party_type_code = 'LEGAL_ESTABLISHMENT'
		   and ptp.party_id = xe.party_id
		   and zr.registration_id = rct.first_pty_reg_id
		   and upper(xe.region_2) = upper(flv.meaning)
		   and flv.lookup_type = 'CRISIL_STATE_CODE'
           and flv.enabled_flag = 'Y'
           and flv.language = 'US') SellerDtls_Stcd,		-- Added by Pratul on 13Jan
       /*(select flv.tag
          from xle_establishment_v xe, fnd_lookup_values flv
         where xe.main_establishment_flag = 'Y'
           and xe.legal_entity_id = rct.legal_entity_id
           and upper(xe.region_2) = upper(flv.meaning)
           and flv.lookup_type = 'CRISIL_STATE_CODE'
           and flv.enabled_flag = 'Y'
           and flv.language = 'US') SellerDtls_Stcd,	Commented by Pratul on 13Jan*/
       null SellerDtls_Ph,
       null SellerDtls_Em,
       case
         when gst.registration_status_code IN ('EXPORT', 'NOT REGISTERED') then
          'URP'
         else
          substr(gst.registration_number, 1, 15)
       end BuyerDtls_Gstin,
       substr(hp.party_name, 1, 100) BuyerDtls_LglNm,
       substr(hp.party_name, 1, 100) BuyerDtls_TrdNm,
       substr(hl.address1, 1, 100) BuyerDtls_Addr1,
       substr(hl.address2, 1, 100) BuyerDtls_Addr2,
       substr(hl.city, 1, 100) BuyerDtls_Loc,
       case
         when gst.registration_status_code = 'EXPORT' then
          '999999'
         else
          hl.postal_code
       end BuyerDtls_Pin,
       case
         when gst.registration_status_code = 'EXPORT' then
          '96'
         else
          (select tag
             from fnd_lookup_values
            where lookup_type = 'CRISIL_STATE_CODE'
              and enabled_flag = 'Y'
              and language = 'US'
              and upper(meaning) = upper(hl.state))
       end BuyerDtls_Stcd,
       case
         when gst.registration_status_code = 'EXPORT' then
          '96'
         else
          (select flv.tag
             from hz_party_site_uses hpsu,
                  hz_party_sites     hps1,
                  hz_locations       hl1,
                  fnd_lookup_values  flv
            where hpsu.party_site_use_id = rct.ship_to_party_site_use_id
              and hpsu.party_site_id = hps1.party_site_id
              and hps1.location_id = hl1.location_id
              and upper(hl1.state) = upper(flv.meaning)
              and flv.lookup_type = 'CRISIL_STATE_CODE'
              and flv.enabled_flag = 'Y'
              and flv.language = 'US')
       end BuyerDtls_Pos,
       substr(hca.account_number, 1, 250) BuyerDtls_CustomerCode,
       substr(rctl.line_number, 1, 6) ItemsList_SlNo,
       substr(rctl.attribute1, 1, 8) ItemsList_HsnCd,
       case
         when rctl.attribute1 like '99%' then
          'Y'
         else
          'N'
       end ItemsList_IsServc,
       DECODE(rctt.type,
              'CM',
              ABS(nvl(rctl.quantity_invoiced, rctl.quantity_credited)),
              nvl(rctl.quantity_invoiced, rctl.quantity_credited)) ItemList_Unit, --Added by Meenal on 30Dec
       ((regexp_replace(rctl.attribute2, '[^0-9.]') * NVL(rct.exchange_rate, 1)) /
       nvl(rctl.quantity_invoiced, rctl.quantity_credited)) ItemList_UnitPrice,
       (DECODE(rctt.type, 'CM', 
						ABS(regexp_replace(rctl.attribute2, '[^0-9.]')), 
					    regexp_replace(rctl.attribute2, '[^0-9.]')
			 ) * NVL(rct.exchange_rate, 1)) itemslist_TotAmt, --Added by Meenal on 30Dec
       (DECODE(rctt.type, 'CM', 
						ABS(regexp_replace(rctl.attribute3, '[^0-9.]')), 
						regexp_replace(rctl.attribute3, '[^0-9.]')
			 ) * NVL(rct.exchange_rate, 1))  ItemList_Discount, --Added by Meenal on 30Dec
       null ItemsList_PreTaxVal,
       (DECODE(rctt.type,
              'CM',
              ABS(regexp_replace(rctl.attribute2, '[^0-9.]') - regexp_replace(rctl.attribute3, '[^0-9.]')),
              (regexp_replace(rctl.attribute2, '[^0-9.]') - regexp_replace(rctl.attribute3, '[^0-9.]'))
			 ) * NVL(rct.exchange_rate, 1)) ItemsList_AssAmt, --Added by Meenal on 30Dec
       (select sum(tax_rate)
          from zx_lines
         where application_id = 222
           and trx_id = rct.customer_trx_id
           and trx_line_id = rctl.customer_trx_line_id
           and tax not like '%US_SALES_TAX%') itemslist_GstRt,
       (select sum(tax_rate)
          from zx_lines
         where application_id = 222
           and trx_id = rct.customer_trx_id
           and trx_line_id = rctl.customer_trx_line_id
           and tax like '%CGST%') ItemsList_CgstRt,
       (select sum(tax_rate)
          from zx_lines
         where application_id = 222
           and trx_id = rct.customer_trx_id
           and trx_line_id = rctl.customer_trx_line_id
           and tax like '%SGST%') ItemsList_SgstRt,
       (select sum(tax_rate)
          from zx_lines
         where application_id = 222
           and trx_id = rct.customer_trx_id
           and trx_line_id = rctl.customer_trx_line_id
           and tax like '%IGST%') ItemsList_IgstRt,
       (select sum(tax_rate)
          from zx_lines
         where application_id = 222
           and trx_id = rct.customer_trx_id
           and trx_line_id = rctl.customer_trx_line_id
           and tax like '%CESS%') ItemsList_CesRt,
       (DECODE(rctt.type,
              'CM',
              ABS((select sum(tax_amt)
                    from zx_lines
                   where application_id = 222
                     and trx_id = rct.customer_trx_id
                     and trx_line_id = rctl.customer_trx_line_id
                     and tax like '%IGST%')),
              (select sum(tax_amt)
                 from zx_lines
                where application_id = 222
                  and trx_id = rct.customer_trx_id
                  and trx_line_id = rctl.customer_trx_line_id
                  and tax like '%IGST%')) * NVL(rct.exchange_rate, 1)) ItemsList_IgstAmt, --Added by Meenal on 30Dec
       (DECODE(rctt.type,
              'CM',
              ABS((select sum(tax_amt)
                    from zx_lines
                   where application_id = 222
                     and trx_id = rct.customer_trx_id
                     and trx_line_id = rctl.customer_trx_line_id
                     and tax like '%CGST%')),
              (select sum(tax_amt)
                 from zx_lines
                where application_id = 222
                  and trx_id = rct.customer_trx_id
                  and trx_line_id = rctl.customer_trx_line_id
                  and tax like '%CGST%')) * NVL(rct.exchange_rate, 1)) ItemsList_CgstAmt, --Added by Meenal on 30Dec
       (DECODE(rctt.type,
              'CM',
              ABS((select sum(tax_amt)
                    from zx_lines
                   where application_id = 222
                     and trx_id = rct.customer_trx_id
                     and trx_line_id = rctl.customer_trx_line_id
                     and tax like '%SGST%')),
              (select sum(tax_amt)
                 from zx_lines
                where application_id = 222
                  and trx_id = rct.customer_trx_id
                  and trx_line_id = rctl.customer_trx_line_id
                  and tax like '%CGST%')) * NVL(rct.exchange_rate, 1)) ItemsList_SgstAmt, --Added by Meenal on 30Dec
       (DECODE(rctt.type,
              'CM',
              ABS((select sum(tax_amt)
                    from zx_lines
                   where application_id = 222
                     and trx_id = rct.customer_trx_id
                     and trx_line_id = rctl.customer_trx_line_id
                     and tax like '%CESS%')),
              (select sum(tax_amt)
                 from zx_lines
                where application_id = 222
                  and trx_id = rct.customer_trx_id
                  and trx_line_id = rctl.customer_trx_line_id
                  and tax like '%CESS%')) * NVL(rct.exchange_rate, 1)) ItemsList_CesAmt,
       (DECODE(rctt.type,
              'CM',
              ABS((regexp_replace(rctl.attribute2, '[^0-9.]') - regexp_replace(rctl.attribute3, '[^0-9.]')) +
                  (select NVL(sum(tax_amt), 0)
                     from zx_lines
                    where application_id = 222
                      and trx_id = rct.customer_trx_id
                      and trx_line_id = rctl.customer_trx_line_id
                      and tax not like '%US_SALES_TAX%')),
              ((regexp_replace(rctl.attribute2, '[^0-9.]') - regexp_replace(rctl.attribute3, '[^0-9.]')) +
              (select NVL(sum(tax_amt), 0)
                  from zx_lines
                 where application_id = 222
                   and trx_id = rct.customer_trx_id
                   and trx_line_id = rctl.customer_trx_line_id
                   and tax not like '%US_SALES_TAX%'))) * NVL(rct.exchange_rate, 1)) ItemsList_TotItemVal, -- Added on 15Dec by Pratul  --Added by Meenal on 30Dec
       /*(select NVL(sum(extended_amount), 0)      -- Commented on 11Jan by Pratul
                      from ra_customer_trx_lines_all
                     where customer_trx_id = rct.customer_trx_id
                       and link_to_cust_trx_line_id = rctl.customer_trx_line_id
                       and line_type = 'TAX')*/
       /* rctl.extended_amount ItemsList_TotItemVal,       
                     (select sum(rctl.extended_amount)
                        from ra_customer_trx_lines_all
                       where customer_trx_id = rct.customer_trx_id) ItemsList_TotItemVal, -- Commented on 15Dec by Pratul*/
       'IN' ItemsList_OrgCntry,
       (Select substr(gcc.segment2, 1, 250)
          from ra_cust_trx_line_gl_dist_all rctlgd, gl_code_combinations gcc
         where rctlgd.account_class = 'REV'
           and rctlgd.code_combination_id = gcc.code_combination_id
           and rctlgd.customer_trx_line_id = rctl.customer_trx_line_id
           and rownum = 1) ItemList_GlCodeRevenueExpense,
       '212056' ItemList_GlCodeIgst,
       '212057' ItemList_GlCodeCgst,
       '212058' ItemList_GlCodeSgst,
       '212059' ItemList_GlCodeCess,
       (select substr(gcc.segment1, 1, 250)
          from ra_cust_trx_line_gl_dist_all rctlgd, gl_code_combinations gcc
         where rctlgd.account_class = 'REC'
           and rctlgd.code_combination_id = gcc.code_combination_id
           and rctlgd.customer_trx_id = rct.customer_trx_id
           and rownum = 1) ItemList_Mis1,
       (select substr(gcc.segment2, 1, 250)
          from ra_cust_trx_line_gl_dist_all rctlgd, gl_code_combinations gcc
         where rctlgd.account_class = 'REC'
           and rctlgd.code_combination_id = gcc.code_combination_id
           and rctlgd.customer_trx_id = rct.customer_trx_id
           and rownum = 1) ItemList_Mis_2,
       (select substr(gcc.segment3, 1, 250)
          from ra_cust_trx_line_gl_dist_all rctlgd, gl_code_combinations gcc
         where rctlgd.account_class = 'REC'
           and rctlgd.code_combination_id = gcc.code_combination_id
           and rctlgd.customer_trx_id = rct.customer_trx_id
           and rownum = 1) ItemList_Mis_3,
       (select substr(gcc.segment4, 1, 250)
          from ra_cust_trx_line_gl_dist_all rctlgd, gl_code_combinations gcc
         where rctlgd.account_class = 'REC'
           and rctlgd.code_combination_id = gcc.code_combination_id
           and rctlgd.customer_trx_id = rct.customer_trx_id
           and rownum = 1) ItemList_Mis_4,
       (select substr(gcc.segment5, 1, 250)
          from ra_cust_trx_line_gl_dist_all rctlgd, gl_code_combinations gcc
         where rctlgd.account_class = 'REC'
           and rctlgd.code_combination_id = gcc.code_combination_id
           and rctlgd.customer_trx_id = rct.customer_trx_id
           and rownum = 1) ItemList_Mis_5,
       (select substr(gcc.segment6, 1, 250)
          from ra_cust_trx_line_gl_dist_all rctlgd, gl_code_combinations gcc
         where rctlgd.account_class = 'REC'
           and rctlgd.code_combination_id = gcc.code_combination_id
           and rctlgd.customer_trx_id = rct.customer_trx_id
           and rownum = 1) ItemList_Mis_6,
       (select substr(gcc.segment7, 1, 250)
          from ra_cust_trx_line_gl_dist_all rctlgd, gl_code_combinations gcc
         where rctlgd.account_class = 'REC'
           and rctlgd.code_combination_id = gcc.code_combination_id
           and rctlgd.customer_trx_id = rct.customer_trx_id
           and rownum = 1) ItemList_Mis_7,
       (select substr(gcc.segment8, 1, 250)
          from ra_cust_trx_line_gl_dist_all rctlgd, gl_code_combinations gcc
         where rctlgd.account_class = 'REC'
           and rctlgd.code_combination_id = gcc.code_combination_id
           and rctlgd.customer_trx_id = rct.customer_trx_id
           and rownum = 1) ItemList_Mis_8,
       (select substr(gcc.segment9, 1, 250)
          from ra_cust_trx_line_gl_dist_all rctlgd, gl_code_combinations gcc
         where rctlgd.account_class = 'REC'
           and rctlgd.code_combination_id = gcc.code_combination_id
           and rctlgd.customer_trx_id = rct.customer_trx_id
           and rownum = 1) ItemList_Mis_9,
       (DECODE(rctt.type,
              'CM',
              ABS((select sum(regexp_replace(attribute2, '[^0-9.]') - regexp_replace(attribute3, '[^0-9.]'))
                    from ra_customer_trx_lines_all
                   where customer_trx_id = rct.customer_trx_id)),
              (select sum(regexp_replace(attribute2, '[^0-9.]') - regexp_replace(attribute3, '[^0-9.]'))
                 from ra_customer_trx_lines_all
                where customer_trx_id = rct.customer_trx_id)) * NVL(rct.exchange_rate, 1)) ValDtls_AssVal, -- Added by Pratul on 16Dec    --Added by Meenal on 30Dec
       /* (select sum(extended_amount)
                        from ra_customer_trx_lines_all
                       where customer_trx_id = rct.customer_trx_id) ValDtls_AssVal, Commented by Pratul Goel on 15Dec*/
       (DECODE(rctt.type,
              'CM',
              ABS((select sum(tax_amt)
                    from zx_lines
                   where application_id = 222
                     and trx_id = rct.customer_trx_id
                        --- and trx_line_id = rctl.customer_trx_line_id     Commented by Pratul Goel on 16Dec
                     and tax like '%CGST%')),
              (select sum(tax_amt)
                 from zx_lines
                where application_id = 222
                  and trx_id = rct.customer_trx_id
                     --- and trx_line_id = rctl.customer_trx_line_id     Commented by Pratul Goel on 16Dec
                  and tax like '%CGST%')) * NVL(rct.exchange_rate, 1)) ValDtls_CgstVal, --Added by Meenal on 30Dec
       (DECODE(rctt.type,
              'CM',
              ABS((select sum(tax_amt)
                    from zx_lines
                   where application_id = 222
                     and trx_id = rct.customer_trx_id
                        --- and trx_line_id = rctl.customer_trx_line_id   Commented by Pratul Goel on 16Dec
                     and tax like '%SGST%')),
              (select sum(tax_amt)
                 from zx_lines
                where application_id = 222
                  and trx_id = rct.customer_trx_id
                     --- and trx_line_id = rctl.customer_trx_line_id   Commented by Pratul Goel on 16Dec
                  and tax like '%SGST%')) * NVL(rct.exchange_rate, 1)) ValDtls_SgstVal, --Added by Meenal on 30Dec
       (DECODE(rctt.type,
              'CM',
              ABS((select sum(tax_amt)
                    from zx_lines
                   where application_id = 222
                     and trx_id = rct.customer_trx_id
                        --- and trx_line_id = rctl.customer_trx_line_id   Commented by Pratul Goel on 16Dec
                     and tax like '%IGST%')),
              (select sum(tax_amt)
                 from zx_lines
                where application_id = 222
                  and trx_id = rct.customer_trx_id
                     --- and trx_line_id = rctl.customer_trx_line_id   Commented by Pratul Goel on 16Dec
                  and tax like '%IGST%')) * NVL(rct.exchange_rate, 1)) ValDtls_IgstVal,
       (DECODE(rctt.type,
              'CM',
              ABS((select sum(tax_amt)
                    from zx_lines
                   where application_id = 222
                     and trx_id = rct.customer_trx_id
                        --- and trx_line_id = rctl.customer_trx_line_id   Commented by Pratul Goel on 15Dec
                     and tax like '%CESS%')),
              (select sum(tax_amt)
                 from zx_lines
                where application_id = 222
                  and trx_id = rct.customer_trx_id
                     --- and trx_line_id = rctl.customer_trx_line_id   Commented by Pratul Goel on 15Dec
                  and tax like '%CESS%')) * NVL(rct.exchange_rate, 1)) ValDtls_CesVal,
       0 ValDtls_Discount, -- Added by Pratul on 06Jan
       /* DECODE(rctt.type, 'CM', ABS((select sum(attribute3)
                      from ra_customer_trx_lines_all
                       where customer_trx_id = rct.customer_trx_id)), (select sum(attribute3)
                      from ra_customer_trx_lines_all
                       where customer_trx_id = rct.customer_trx_id)) ValDtls_Discount,    Commented by Pratul Goel on06Jan*/
       DECODE(rctt.type,
              'CM',
              ABS((select sum(rctlgd.acctd_amount)
                    from ra_cust_trx_line_gl_dist_all rctlgd
                   where rctlgd.account_class = 'ROUND'
                     and rctlgd.customer_trx_id = rct.customer_trx_id)),
              (select sum(rctlgd.acctd_amount)
                 from ra_cust_trx_line_gl_dist_all rctlgd
                where rctlgd.account_class = 'ROUND'
                  and rctlgd.customer_trx_id = rct.customer_trx_id)) ValDtls_RndOffAmt,
       (DECODE(rctt.type,
              'CM',
              ABS((select NVL(sum(regexp_replace(attribute2, '[^0-9.]') - regexp_replace(attribute3, '[^0-9.]')), 0)
                     from ra_customer_trx_lines_all
                    where customer_trx_id = rct.customer_trx_id
                      and line_type = 'LINE') +
                  (select nvl(sum(tax_amt), 0)
                     from zx_lines
                    where application_id = 222
                      and trx_id = rct.customer_trx_id
                      and tax not like '%US_SALES_TAX%')),
              ((select NVL(sum(regexp_replace(attribute2, '[^0-9.]') - regexp_replace(attribute3, '[^0-9.]')), 0)
                  from ra_customer_trx_lines_all
                 where customer_trx_id = rct.customer_trx_id
                   and line_type = 'LINE') +
              (select nvl(sum(tax_amt), 0)
                  from zx_lines
                 where application_id = 222
                   and trx_id = rct.customer_trx_id
                   and tax not like '%US_SALES_TAX%'))) * NVL(rct.exchange_rate, 1)) ValDtls_TotInvVal, -- Added on 15Dec by Pratul --Added by Meenal 30Dec
       /*rctl.extended_amount ValDtls_TotInvVal,     
                     (select sum(extended_amount)
                        from ra_customer_trx_lines_all
                       where customer_trx_id = rct.customer_trx_id) ValDtls_TotInvVal,  -- Commented on 15Dec by Pratul */
       substr(rct.trx_number, 1, 250) RefDtls_AccountingDocNo,
       (Select to_char(rctlgd.gl_date, 'DD/MM/YYYY')
          from ra_cust_trx_line_gl_dist_all rctlgd
         where 1=1 ---rctlgd.customer_trx_line_id = rctl.customer_trx_line_id
           and rctlgd.customer_trx_id = rct.customer_trx_id
		   and rctlgd.account_class = 'REC'
           and rownum = 1) RefDtls_AccountingDocDt,
       (Select to_char(rctlgd.gl_date, 'MON-YY')
          from ra_cust_trx_line_gl_dist_all rctlgd
         where 1=1 --rctlgd.customer_trx_line_id = rctl.customer_trx_line_id
           and rctlgd.customer_trx_id = rct.customer_trx_id
		   and rctlgd.account_class = 'REC'
           and rownum = 1) MisColumns_ReturnPeriod,
       rct.customer_trx_id,
       case
         when (rctt.attribute_category = 'CRISIL_Additional_Information' and
              UPPER(rctt.attribute1) = 'YES') then
          'Y'
         else
          'N'
       end einvoice_applicable,
       (select trx_number
          from ra_customer_trx_all rct1
         where rct1.customer_trx_id = rct.previous_customer_trx_id) orig_inv_num,
       (select to_char(trx_date, 'DD/MM/YYYY')
          from ra_customer_trx_all rct1
         where rct1.customer_trx_id = rct.previous_customer_trx_id) orig_inv_date,
       rctt.name trx_type
  from ra_customer_trx_all       rct,
       ra_customer_trx_lines_all rctl,
       ra_cust_trx_line_gl_dist_all RCTLGDA,  --Added by Ankit on 12thDec2020 for finding Accounting invoices
       ra_batch_sources_all rbs,
       ra_cust_trx_types_all rctt,
       hz_cust_accounts hca,
       hz_parties hp,
       hz_cust_site_uses_all hcsu,
       hz_cust_acct_sites_all hcas,
       hz_party_sites hps,
       hz_locations hl,
	   fun_all_business_units_v fab,
       (select DECODE(ZR.registration_number, 'ECC123456', NULL, 'UNR123456', NULL, ZR.registration_number) registration_number,
               ptp.party_id,
               zr.registration_status_code
          from zx_registrations zr, zx_party_tax_profile ptp
         where zr.party_tax_profile_id = ptp.party_tax_profile_id
           and ptp.party_type_code = 'THIRD_PARTY_SITE'
           and zr.tax_regime_code = 'IN_GST'
           and trunc(sysdate) between trunc(zr.effective_from) and
               nvl(trunc(zr.effective_to), trunc(sysdate))) gst
 where rct.batch_source_seq_id = rbs.batch_source_seq_id
   and rct.cust_trx_type_seq_id = rctt.cust_trx_type_seq_id
   and rct.customer_trx_id = rctl.customer_trx_id
   and rct.customer_trx_id = RCTLGDA.customer_trx_id --Added by Ankit on 12thDec2020 for finding Accounting invoices
   and RCTLGDA.gl_posted_date IS NOT NULL --Added by Ankit on 12thDec2020 for finding Accounting invoices
   and RCTLGDA.account_class =  'REC'  --Added by Ankit on 12thDec2020 for finding Accounting invoices
   and rctl.line_type = 'LINE'
   and rctt.type <> 'CM'
   and rct.bill_to_customer_id = hca.cust_account_id
   and hca.party_id = hp.party_id
   and rct.bill_to_site_use_id = hcsu.site_use_id
   and hcsu.cust_acct_site_id = hcas.cust_acct_site_id
   and hcas.party_site_id = hps.party_site_id
   and hps.location_id = hl.location_id
   and hps.party_site_id = gst.party_id(+)
   and rct.complete_flag = 'Y'
   and fab.bu_id = rct.org_id
   and fab.bu_name in ('CRISIL LIMITED', 'CRISIL Ratings Limited',
						'PRAGMATIX SERVICES PRIVATE LIMITED',
						'CRISIL Risk and Infrastructure Solutions Limited')
   and rctt.attribute_category = 'CRISIL_Additional_Information' 
   and UPPER(rctt.attribute1) = 'YES'    
   and not exists (select count(1)
                 from zx_registrations         zr,
                      zx_party_tax_profile     ptp,
                      xle_establishment_v      xe,
                      fun_all_business_units_v fab
                where zr.party_tax_profile_id = ptp.party_tax_profile_id
                  and ptp.party_type_code = 'LEGAL_ESTABLISHMENT'
                  and zr.registration_status_code = 'SEZ'
                  and ptp.party_id = xe.party_id
                  and xe.legal_entity_id = fab.legal_entity_id
                  and fab.bu_id = rct.org_id
                  AND zr.registration_id = rct.first_pty_reg_id) 
     and gst.registration_status_code <> 'NOT REGISTERED' 
     and  fab.bu_name not in ('CRISIL Ratings Limited', 'PRAGMATIX SERVICES PRIVATE LIMITED') 
     and rct.attribute6 is null 
  and TO_CHAR((SELECT gl_date
				  FROM ra_cust_trx_line_gl_dist_all
				 WHERE customer_trx_id = RCT.customer_trx_id
				   AND account_class =  'REC'
				   AND rownum = 1), 'MM-DD-YYYY') =                                                   
to_char(fnd_timezone_pub.adjust_datetime(sysdate, 'GMT', 'Asia/Calcutta'), 'MM-DD-YYYY')
 union
 select (select substr(zr.registration_number, 1, 15)
          from zx_registrations         zr,
               zx_party_tax_profile     ptp,
               xle_establishment_v      xe,
               fun_all_business_units_v fab
         where zr.party_tax_profile_id = ptp.party_tax_profile_id
           and ptp.party_type_code = 'LEGAL_ESTABLISHMENT'
           and ptp.party_id = xe.party_id
              --  and xe.main_establishment_flag = 'N' --commented by Ankit on 12thDec2020
           and xe.legal_entity_id = fab.legal_entity_id
           and fab.bu_id = rct.org_id
           AND zr.registration_id = rct.first_pty_reg_id --Added by Ankit on 12thDec2020
        ) User_GSTIN,
       null Version,
       rct.attribute6 IRN,							-- NULL IRN (Logic changed on 01Mar by Pratul)
       substr(rbs.name, 1, 250) SourceSystem,
       case
         when (select count(1)
                 from zx_registrations         zr,
                      zx_party_tax_profile     ptp,
                      xle_establishment_v      xe,
                      fun_all_business_units_v fab
                where zr.party_tax_profile_id = ptp.party_tax_profile_id
                  and ptp.party_type_code = 'LEGAL_ESTABLISHMENT'
                  and zr.registration_status_code = 'SEZ'
                  and ptp.party_id = xe.party_id
                  and xe.legal_entity_id = fab.legal_entity_id
                  and fab.bu_id = rct.org_id
                  AND zr.registration_id = rct.first_pty_reg_id) > 0 then
          'N'
         when gst.registration_status_code = 'NOT REGISTERED' then
          'N'
		 when fab.bu_name in ('CRISIL Ratings Limited', 'PRAGMATIX SERVICES PRIVATE LIMITED') then
		  'N'
       --- when gst.registration_status_code IN ('EXPORT', 'SEZ', 'REGISTERED') then --Added REGISTERED by Ankit on 12thDec2020
         else
          'Y'
       end is_irn,
       'crisilar@crisil.com' email,
       'GST' TranDtls_TaxSch,
       'Outward' TranDtls_OutwardInward,
       case
         when gst.registration_status_code = 'EXPORT' then
          'Export'
       /* Commented on 21Dec by Pratul
                   when gst.registration_status_code IN
                            ('REGISTERED', 'NOT REGISTERED', 'SEZ') then
                        'Supply'*/
         else
          'Supply'
       end TranDtls_SubType,
       case
         when gst.registration_status_code = 'EXPORT' then
          'EXPWOP'
         when gst.registration_status_code = 'SEZ' then
          'SEZWOP'
         when gst.registration_status_code = 'NOT REGISTERED' then
          'B2C'
         when gst.registration_number is not null then
          'B2B'
         else
          null
       end TranDtls_SupTyp,
       'N' TranDtls_RegRev,
       'REG' TranDtls_Typ,
       /*case   Commented by Pratul on 30Dec
                       when gst.registration_status_code = 'SEZ' then
                        'Y'
                       else
                        'N'
                     end TranDtls_IgstOnIntra,*/
       'N' TranDtls_IgstOnIntra, -- Added by Pratul on 30Dec
       case
         when gst.registration_status_code = 'EXEMPT' then
          'Exempted'
         when gst.registration_status_code = 'SEZ' then
          'Supply to SEZ'
         when gst.registration_status_code = 'EXPORT' then
          'Export'
         when gst.registration_status_code = 'NIL RATED' then
          'NIL Rated'
		 when gst.registration_status_code = 'NOT REGISTERED' then				-- New Condition added on 1Mar by Pratul
          'Taxable'		  
         when gst.registration_number is not null then
          'Taxable'
         else
          null
       end TranDtls_Taxability,
	   case
         when gst.registration_status_code = 'SEZ' then
          'INTER'
         when (select count(*)
                 from zx_lines
                where application_id = 222
                  and trx_id = rct.customer_trx_id
                  and trx_line_id = rctl.customer_trx_line_id
                  and tax like '%IGST%') > 0 then
          'INTER'
         when (select count(1)
                     from zx_lines
                    where application_id = 222
                      and trx_id = rct.customer_trx_id
                      and trx_line_id = rctl.customer_trx_line_id
                      and tax not like '%US_SALES_TAX%') = 0 then
			 case when ((select flv.tag
						  from xle_establishment_v xe, 
							   zx_registrations zr, 
							   zx_party_tax_profile ptp,
							   fnd_lookup_values flv
						 where zr.party_tax_profile_id = ptp.party_tax_profile_id
						   and ptp.party_type_code = 'LEGAL_ESTABLISHMENT'
						   and ptp.party_id = xe.party_id
						   and zr.registration_id = rct.first_pty_reg_id
						   and upper(xe.region_2) = upper(flv.meaning)
						   and flv.lookup_type = 'CRISIL_STATE_CODE'
						   and flv.enabled_flag = 'Y'
						   and flv.language = 'US') = (case when gst.registration_status_code = 'EXPORT' then '96'
															else
															  (select tag from fnd_lookup_values
																where lookup_type = 'CRISIL_STATE_CODE'
																  and enabled_flag = 'Y'
																  and language = 'US'
																  and upper(meaning) = upper(hl.state))
													   end)) then 'INTRA'
				  else 'INTER' end
		 else
          'INTRA'
       end TranDtls_InterIntra,
       DECODE(rctt.type, 'DM', 'DBN', 'CM', 'CRN', 'INV', 'INV', null) DocDtls_Typ,
       substr(rct.trx_number, 1, 16) DocDtls_No,
       to_char(rct.trx_date, 'DD/MM/YYYY') DocDtls_Dt,
       rct.attribute11 DocDtls_ReasonForCnDn, -- Added by Pratul on 16Dec
       (select substr(zr.registration_number, 1, 15)
          from zx_registrations         zr,
               zx_party_tax_profile     ptp,
               xle_establishment_v      xe,
               fun_all_business_units_v fab
         where zr.party_tax_profile_id = ptp.party_tax_profile_id
           and ptp.party_type_code = 'LEGAL_ESTABLISHMENT'
           and ptp.party_id = xe.party_id
              -- and xe.main_establishment_flag = 'N' --commented by Ankit on 12thDec2020
           and xe.legal_entity_id = fab.legal_entity_id
           and fab.bu_id = rct.org_id
           AND zr.registration_id = rct.first_pty_reg_id --Added by Ankit on 12thDec2020
        ) SellerDtls_Gstin,
      /* (select substr(xe.establishment_name, 1, 100)
          from xle_establishment_v xe
         where xe.main_establishment_flag = 'Y'
           and xe.legal_entity_id = rct.legal_entity_id) SellerDtls_LglNm, */ -- Commented by Pratul on 13Jan
	   (select substr(xep.name, 1, 100)
		  from xle_establishment_v xe, 
			   zx_registrations zr, 
			   zx_party_tax_profile ptp,
			   xle_entity_profiles xep
		 where zr.party_tax_profile_id = ptp.party_tax_profile_id
		   and ptp.party_type_code = 'LEGAL_ESTABLISHMENT'
		   and ptp.party_id = xe.party_id
		   and xe.legal_entity_id = xep.legal_entity_id
		   and zr.registration_id = rct.first_pty_reg_id) SellerDtls_LglNm,	-- Added by Pratul on 13Jan
	   (select substr(xep.name, 1, 100)
		  from xle_establishment_v xe, 
			   zx_registrations zr, 
			   zx_party_tax_profile ptp,
			   xle_entity_profiles xep
		 where zr.party_tax_profile_id = ptp.party_tax_profile_id
		   and ptp.party_type_code = 'LEGAL_ESTABLISHMENT'
		   and ptp.party_id = xe.party_id
		   and xe.legal_entity_id = xep.legal_entity_id
		   and zr.registration_id = rct.first_pty_reg_id) SellerDtls_TrdNm,
       (select substr(xe.address_line_1, 1, 100)
		  from xle_establishment_v xe, 
			   zx_registrations zr, 
			   zx_party_tax_profile ptp
		 where zr.party_tax_profile_id = ptp.party_tax_profile_id
		   and ptp.party_type_code = 'LEGAL_ESTABLISHMENT'
		   and ptp.party_id = xe.party_id
		   and zr.registration_id = rct.first_pty_reg_id) SellerDtls_Addr1,
       (select substr(xe.address_line_2, 1, 100)
		  from xle_establishment_v xe, 
			   zx_registrations zr, 
			   zx_party_tax_profile ptp
		 where zr.party_tax_profile_id = ptp.party_tax_profile_id
		   and ptp.party_type_code = 'LEGAL_ESTABLISHMENT'
		   and ptp.party_id = xe.party_id
		   and zr.registration_id = rct.first_pty_reg_id) SellerDtls_Addr2,
       (select substr(xe.town_or_city, 1, 50)
		  from xle_establishment_v xe, 
			   zx_registrations zr, 
			   zx_party_tax_profile ptp
		 where zr.party_tax_profile_id = ptp.party_tax_profile_id
		   and ptp.party_type_code = 'LEGAL_ESTABLISHMENT'
		   and ptp.party_id = xe.party_id
		   and zr.registration_id = rct.first_pty_reg_id) SellerDtls_Loc,
       (select xe.postal_code
		  from xle_establishment_v xe, 
			   zx_registrations zr, 
			   zx_party_tax_profile ptp
		 where zr.party_tax_profile_id = ptp.party_tax_profile_id
		   and ptp.party_type_code = 'LEGAL_ESTABLISHMENT'
		   and ptp.party_id = xe.party_id
		   and zr.registration_id = rct.first_pty_reg_id) SellerDtls_Pin,
   	   (select flv.tag
		  from xle_establishment_v xe, 
			   zx_registrations zr, 
			   zx_party_tax_profile ptp,
			   fnd_lookup_values flv
		 where zr.party_tax_profile_id = ptp.party_tax_profile_id
		   and ptp.party_type_code = 'LEGAL_ESTABLISHMENT'
		   and ptp.party_id = xe.party_id
		   and zr.registration_id = rct.first_pty_reg_id
		   and upper(xe.region_2) = upper(flv.meaning)
		   and flv.lookup_type = 'CRISIL_STATE_CODE'
           and flv.enabled_flag = 'Y'
           and flv.language = 'US') SellerDtls_Stcd,		-- Added by Pratul on 13Jan
       /*(select flv.tag
          from xle_establishment_v xe, fnd_lookup_values flv
         where xe.main_establishment_flag = 'Y'
           and xe.legal_entity_id = rct.legal_entity_id
           and upper(xe.region_2) = upper(flv.meaning)
           and flv.lookup_type = 'CRISIL_STATE_CODE'
           and flv.enabled_flag = 'Y'
           and flv.language = 'US') SellerDtls_Stcd,	Commented by Pratul on 13Jan*/
       null SellerDtls_Ph,
       null SellerDtls_Em,
       case
         when gst.registration_status_code IN ('EXPORT', 'NOT REGISTERED') then
          'URP'
         else
          substr(gst.registration_number, 1, 15)
       end BuyerDtls_Gstin,
       substr(hp.party_name, 1, 100) BuyerDtls_LglNm,
       substr(hp.party_name, 1, 100) BuyerDtls_TrdNm,
       substr(hl.address1, 1, 100) BuyerDtls_Addr1,
       substr(hl.address2, 1, 100) BuyerDtls_Addr2,
       substr(hl.city, 1, 100) BuyerDtls_Loc,
       case
         when gst.registration_status_code = 'EXPORT' then
          '999999'
         else
          hl.postal_code
       end BuyerDtls_Pin,
       case
         when gst.registration_status_code = 'EXPORT' then
          '96'
         else
          (select tag
             from fnd_lookup_values
            where lookup_type = 'CRISIL_STATE_CODE'
              and enabled_flag = 'Y'
              and language = 'US'
              and upper(meaning) = upper(hl.state))
       end BuyerDtls_Stcd,
       case
         when gst.registration_status_code = 'EXPORT' then
          '96'
         else
          (select flv.tag
             from hz_party_site_uses hpsu,
                  hz_party_sites     hps1,
                  hz_locations       hl1,
                  fnd_lookup_values  flv
            where hpsu.party_site_use_id = rct.ship_to_party_site_use_id
              and hpsu.party_site_id = hps1.party_site_id
              and hps1.location_id = hl1.location_id
              and upper(hl1.state) = upper(flv.meaning)
              and flv.lookup_type = 'CRISIL_STATE_CODE'
              and flv.enabled_flag = 'Y'
              and flv.language = 'US')
       end BuyerDtls_Pos,
       substr(hca.account_number, 1, 250) BuyerDtls_CustomerCode,
       substr(rctl.line_number, 1, 6) ItemsList_SlNo,
       substr(rctl.attribute1, 1, 8) ItemsList_HsnCd,
       case
         when rctl.attribute1 like '99%' then
          'Y'
         else
          'N'
       end ItemsList_IsServc,
       1 ItemList_Unit, --Added by Meenal on 30Dec
       ABS(regexp_replace(rctl.attribute2, '[^0-9.]') * NVL(rct.exchange_rate, 1)) ItemList_UnitPrice,
       ABS(regexp_replace(rctl.attribute2, '[^0-9.]') * NVL(rct.exchange_rate, 1)) itemslist_TotAmt, --Added by Meenal on 30Dec
       ABS(regexp_replace(rctl.attribute3, '[^0-9.]') * NVL(rct.exchange_rate, 1)) ItemList_Discount, --Added by Meenal on 30Dec
       null ItemsList_PreTaxVal,
       (ABS(regexp_replace(rctl.attribute2, '[^0-9.]') - regexp_replace(rctl.attribute3, '[^0-9.]')) * NVL(rct.exchange_rate, 1)) ItemsList_AssAmt, --Added by Meenal on 30Dec
       (select sum(tax_rate)
          from zx_lines
         where application_id = 222
           and trx_id = rct.customer_trx_id
           and trx_line_id = rctl.customer_trx_line_id
           and tax not like '%US_SALES_TAX%') itemslist_GstRt,
       (select sum(tax_rate)
          from zx_lines
         where application_id = 222
           and trx_id = rct.customer_trx_id
           and trx_line_id = rctl.customer_trx_line_id
           and tax like '%CGST%') ItemsList_CgstRt,
       (select sum(tax_rate)
          from zx_lines
         where application_id = 222
           and trx_id = rct.customer_trx_id
           and trx_line_id = rctl.customer_trx_line_id
           and tax like '%SGST%') ItemsList_SgstRt,
       (select sum(tax_rate)
          from zx_lines
         where application_id = 222
           and trx_id = rct.customer_trx_id
           and trx_line_id = rctl.customer_trx_line_id
           and tax like '%IGST%') ItemsList_IgstRt,
       (select sum(tax_rate)
          from zx_lines
         where application_id = 222
           and trx_id = rct.customer_trx_id
           and trx_line_id = rctl.customer_trx_line_id
           and tax like '%CESS%') ItemsList_CesRt,
       CASE WHEN (select COUNT(1)
                    from zx_lines
                   where application_id = 222
                     and trx_id = rct.customer_trx_id
                     and trx_line_id = rctl.customer_trx_line_id
                     and tax like '%IGST%') > 0 THEN
		ROUND(((ABS(regexp_replace(rctl.attribute2, '[^0-9.]') - regexp_replace(rctl.attribute3, '[^0-9.]')) * 
				   (select sum(tax_rate)
					  from zx_lines
					 where application_id = 222
					   and trx_id = rct.customer_trx_id
					   and trx_line_id = rctl.customer_trx_line_id
					   and tax like '%IGST%') * NVL(rct.exchange_rate, 1))/100), 5)
			ELSE null 
	   END ItemsList_IgstAmt,
       CASE WHEN (select COUNT(1)
                    from zx_lines
                   where application_id = 222
                     and trx_id = rct.customer_trx_id
                     and trx_line_id = rctl.customer_trx_line_id
                     and tax like '%CGST%') > 0 THEN
		ROUND(((ABS(regexp_replace(rctl.attribute2, '[^0-9.]') - regexp_replace(rctl.attribute3, '[^0-9.]')) * 
  				   (select sum(tax_rate)
					  from zx_lines
					 where application_id = 222
					   and trx_id = rct.customer_trx_id
					   and trx_line_id = rctl.customer_trx_line_id
					   and tax like '%CGST%') * NVL(rct.exchange_rate, 1))/100), 5)
			ELSE null 
	   END ItemsList_CgstAmt,	   
       CASE WHEN (select COUNT(1)
                    from zx_lines
                   where application_id = 222
                     and trx_id = rct.customer_trx_id
                     and trx_line_id = rctl.customer_trx_line_id
                     and tax like '%SGST%') > 0 THEN
		ROUND(((ABS(regexp_replace(rctl.attribute2, '[^0-9.]') - regexp_replace(rctl.attribute3, '[^0-9.]')) * 
				   (select sum(tax_rate)
					  from zx_lines
					 where application_id = 222
					   and trx_id = rct.customer_trx_id
					   and trx_line_id = rctl.customer_trx_line_id
					   and tax like '%SGST%') * NVL(rct.exchange_rate, 1))/100), 5)
			ELSE null 
	   END ItemsList_SgstAmt,
       CASE WHEN (select COUNT(1)
                    from zx_lines
                   where application_id = 222
                     and trx_id = rct.customer_trx_id
                     and trx_line_id = rctl.customer_trx_line_id
                     and tax like '%CESS%') > 0 THEN
		ROUND(((ABS(regexp_replace(rctl.attribute2, '[^0-9.]') - regexp_replace(rctl.attribute3, '[^0-9.]')) * 
				   (select sum(tax_rate)
					  from zx_lines
					 where application_id = 222
					   and trx_id = rct.customer_trx_id
					   and trx_line_id = rctl.customer_trx_line_id
					   and tax like '%CESS%') * NVL(rct.exchange_rate, 1))/100), 5)
			ELSE null 
	   END ItemsList_CesAmt,
       ROUND(((ABS(regexp_replace(rctl.attribute2, '[^0-9.]') - regexp_replace(rctl.attribute3, '[^0-9.]')) * NVL(rct.exchange_rate, 1)) + 
				 ((ABS(regexp_replace(rctl.attribute2, '[^0-9.]') - regexp_replace(rctl.attribute3, '[^0-9.]')) * 
					   (select NVL(sum(tax_rate), 0)
						  from zx_lines
						 where application_id = 222
						   and trx_id = rct.customer_trx_id
						   and trx_line_id = rctl.customer_trx_line_id
						   and tax not like '%US_SALES_TAX%') * NVL(rct.exchange_rate, 1))/100)), 5) ItemsList_TotItemVal,
       'IN' ItemsList_OrgCntry,
       (Select substr(gcc.segment2, 1, 250)
          from ra_cust_trx_line_gl_dist_all rctlgd, gl_code_combinations gcc
         where rctlgd.account_class = 'REV'
           and rctlgd.code_combination_id = gcc.code_combination_id
           and rctlgd.customer_trx_line_id = rctl.customer_trx_line_id
           and rownum = 1) ItemList_GlCodeRevenueExpense,
       '212056' ItemList_GlCodeIgst,
       '212057' ItemList_GlCodeCgst,
       '212058' ItemList_GlCodeSgst,
       '212059' ItemList_GlCodeCess,
       (select substr(gcc.segment1, 1, 250)
          from ra_cust_trx_line_gl_dist_all rctlgd, gl_code_combinations gcc
         where rctlgd.account_class = 'REC'
           and rctlgd.code_combination_id = gcc.code_combination_id
           and rctlgd.customer_trx_id = rct.customer_trx_id
           and rownum = 1) ItemList_Mis1,
       (select substr(gcc.segment2, 1, 250)
          from ra_cust_trx_line_gl_dist_all rctlgd, gl_code_combinations gcc
         where rctlgd.account_class = 'REC'
           and rctlgd.code_combination_id = gcc.code_combination_id
           and rctlgd.customer_trx_id = rct.customer_trx_id
           and rownum = 1) ItemList_Mis_2,
       (select substr(gcc.segment3, 1, 250)
          from ra_cust_trx_line_gl_dist_all rctlgd, gl_code_combinations gcc
         where rctlgd.account_class = 'REC'
           and rctlgd.code_combination_id = gcc.code_combination_id
           and rctlgd.customer_trx_id = rct.customer_trx_id
           and rownum = 1) ItemList_Mis_3,
       (select substr(gcc.segment4, 1, 250)
          from ra_cust_trx_line_gl_dist_all rctlgd, gl_code_combinations gcc
         where rctlgd.account_class = 'REC'
           and rctlgd.code_combination_id = gcc.code_combination_id
           and rctlgd.customer_trx_id = rct.customer_trx_id
           and rownum = 1) ItemList_Mis_4,
       (select substr(gcc.segment5, 1, 250)
          from ra_cust_trx_line_gl_dist_all rctlgd, gl_code_combinations gcc
         where rctlgd.account_class = 'REC'
           and rctlgd.code_combination_id = gcc.code_combination_id
           and rctlgd.customer_trx_id = rct.customer_trx_id
           and rownum = 1) ItemList_Mis_5,
       (select substr(gcc.segment6, 1, 250)
          from ra_cust_trx_line_gl_dist_all rctlgd, gl_code_combinations gcc
         where rctlgd.account_class = 'REC'
           and rctlgd.code_combination_id = gcc.code_combination_id
           and rctlgd.customer_trx_id = rct.customer_trx_id
           and rownum = 1) ItemList_Mis_6,
       (select substr(gcc.segment7, 1, 250)
          from ra_cust_trx_line_gl_dist_all rctlgd, gl_code_combinations gcc
         where rctlgd.account_class = 'REC'
           and rctlgd.code_combination_id = gcc.code_combination_id
           and rctlgd.customer_trx_id = rct.customer_trx_id
           and rownum = 1) ItemList_Mis_7,
       (select substr(gcc.segment8, 1, 250)
          from ra_cust_trx_line_gl_dist_all rctlgd, gl_code_combinations gcc
         where rctlgd.account_class = 'REC'
           and rctlgd.code_combination_id = gcc.code_combination_id
           and rctlgd.customer_trx_id = rct.customer_trx_id
           and rownum = 1) ItemList_Mis_8,
       (select substr(gcc.segment9, 1, 250)
          from ra_cust_trx_line_gl_dist_all rctlgd, gl_code_combinations gcc
         where rctlgd.account_class = 'REC'
           and rctlgd.code_combination_id = gcc.code_combination_id
           and rctlgd.customer_trx_id = rct.customer_trx_id
           and rownum = 1) ItemList_Mis_9,
       (select ABS(sum(regexp_replace(attribute2, '[^0-9.]') - regexp_replace(attribute3, '[^0-9.]')) * NVL(rct.exchange_rate, 1))
		  from ra_customer_trx_lines_all
	     where customer_trx_id = rct.customer_trx_id) ValDtls_AssVal,
  	   ROUND((((select ABS(sum(regexp_replace(attribute2, '[^0-9.]') - regexp_replace(attribute3, '[^0-9.]')))
				  from ra_customer_trx_lines_all
				 where customer_trx_id = rct.customer_trx_id) * 
			   (select sum(tax_rate)
  				 from zx_lines
			    where application_id = 222
			 	  and trx_id = rct.customer_trx_id
				  and trx_line_id = rctl.customer_trx_line_id
				  and tax like '%CGST%') * NVL(rct.exchange_rate, 1))/100), 5) ValDtls_CgstVal,
	   ROUND((((select ABS(sum(regexp_replace(attribute2, '[^0-9.]') - regexp_replace(attribute3, '[^0-9.]')))
				  from ra_customer_trx_lines_all
				 where customer_trx_id = rct.customer_trx_id) * 
			   (select sum(tax_rate)
  				 from zx_lines
			    where application_id = 222
			 	  and trx_id = rct.customer_trx_id
				  and trx_line_id = rctl.customer_trx_line_id
				  and tax like '%SGST%') * NVL(rct.exchange_rate, 1))/100), 5) ValDtls_SgstVal,
	   ROUND((((select ABS(sum(regexp_replace(attribute2, '[^0-9.]') - regexp_replace(attribute3, '[^0-9.]')))
				  from ra_customer_trx_lines_all
				 where customer_trx_id = rct.customer_trx_id) * 
			   (select sum(tax_rate)
  				 from zx_lines
			    where application_id = 222
			 	  and trx_id = rct.customer_trx_id
				  and trx_line_id = rctl.customer_trx_line_id
				  and tax like '%IGST%') * NVL(rct.exchange_rate, 1))/100), 5) ValDtls_IgstVal,	 				  
	   ROUND((((select ABS(sum(regexp_replace(attribute2, '[^0-9.]') - regexp_replace(attribute3, '[^0-9.]')))
				  from ra_customer_trx_lines_all
				 where customer_trx_id = rct.customer_trx_id) * 
			   (select sum(tax_rate)
  				 from zx_lines
			    where application_id = 222
			 	  and trx_id = rct.customer_trx_id
				  and trx_line_id = rctl.customer_trx_line_id
				  and tax like '%CESS%') * NVL(rct.exchange_rate, 1))/100), 5) ValDtls_CesVal,
      0 ValDtls_Discount, -- Added by Pratul on 06Jan
	  ABS((select sum(rctlgd.acctd_amount)
			from ra_cust_trx_line_gl_dist_all rctlgd
		   where rctlgd.account_class = 'ROUND'
			 and rctlgd.customer_trx_id = rct.customer_trx_id)) ValDtls_RndOffAmt,
	  ROUND(((select NVL(ABS(sum(regexp_replace(attribute2, '[^0-9.]') - regexp_replace(attribute3, '[^0-9.]')) * NVL(rct.exchange_rate, 1)), 0)
			 from ra_customer_trx_lines_all
			where customer_trx_id = rct.customer_trx_id
			  and line_type = 'LINE') + 	
		 (((select NVL(ABS(sum(regexp_replace(attribute2, '[^0-9.]') - regexp_replace(attribute3, '[^0-9.]'))), 0)
			 from ra_customer_trx_lines_all
			where customer_trx_id = rct.customer_trx_id
			  and line_type = 'LINE') * (select NVL(sum(tax_rate), 0)
									  from zx_lines
									 where application_id = 222
									   and trx_id = rct.customer_trx_id
									   and trx_line_id = rctl.customer_trx_line_id
									   and tax not like '%US_SALES_TAX%') * NVL(rct.exchange_rate, 1))/100)), 5) ValDtls_TotInvVal,
       substr(rct.trx_number, 1, 250) RefDtls_AccountingDocNo,
       (Select to_char(rctlgd.gl_date, 'DD/MM/YYYY')
          from ra_cust_trx_line_gl_dist_all rctlgd
         where 1=1 ---rctlgd.customer_trx_line_id = rctl.customer_trx_line_id
           and rctlgd.customer_trx_id = rct.customer_trx_id
		   and rctlgd.account_class = 'REC'
           and rownum = 1) RefDtls_AccountingDocDt,
       (Select to_char(rctlgd.gl_date, 'MON-YY')
          from ra_cust_trx_line_gl_dist_all rctlgd
         where 1=1 --rctlgd.customer_trx_line_id = rctl.customer_trx_line_id
           and rctlgd.customer_trx_id = rct.customer_trx_id
		   and rctlgd.account_class = 'REC'
           and rownum = 1) MisColumns_ReturnPeriod,
       rct.customer_trx_id,
       case
         when (rctt.attribute_category = 'CRISIL_Additional_Information' and
              UPPER(rctt.attribute1) = 'YES') then
          'Y'
         else
          'N'
       end einvoice_applicable,
       (select trx_number
          from ra_customer_trx_all rct1
         where rct1.customer_trx_id = rct.previous_customer_trx_id) orig_inv_num,
       (select to_char(trx_date, 'DD/MM/YYYY')
          from ra_customer_trx_all rct1
         where rct1.customer_trx_id = rct.previous_customer_trx_id) orig_inv_date,
       rctt.name trx_type
  from ra_customer_trx_all       rct,
       ra_customer_trx_lines_all rctl,
       ra_cust_trx_line_gl_dist_all RCTLGDA,  --Added by Ankit on 12thDec2020 for finding Accounting invoices
       ra_batch_sources_all rbs,
       ra_cust_trx_types_all rctt,
       hz_cust_accounts hca,
       hz_parties hp,
       hz_cust_site_uses_all hcsu,
       hz_cust_acct_sites_all hcas,
       hz_party_sites hps,
       hz_locations hl,
	   fun_all_business_units_v fab,
       (select zr.registration_number,
               ptp.party_id,
               zr.registration_status_code
          from zx_registrations zr, zx_party_tax_profile ptp
         where zr.party_tax_profile_id = ptp.party_tax_profile_id
           and ptp.party_type_code = 'THIRD_PARTY_SITE'
           and zr.tax_regime_code = 'IN_GST'
           and trunc(sysdate) between trunc(zr.effective_from) and
               nvl(trunc(zr.effective_to), trunc(sysdate))) gst
 where rct.batch_source_seq_id = rbs.batch_source_seq_id
   and rct.cust_trx_type_seq_id = rctt.cust_trx_type_seq_id
   and rct.customer_trx_id = rctl.customer_trx_id
   and rct.customer_trx_id = RCTLGDA.customer_trx_id --Added by Ankit on 12thDec2020 for finding Accounting invoices
   and RCTLGDA.gl_posted_date IS NOT NULL --Added by Ankit on 12thDec2020 for finding Accounting invoices
   and RCTLGDA.account_class =  'REC'  --Added by Ankit on 12thDec2020 for finding Accounting invoices
   and rctl.line_type = 'LINE'
   and rctt.type = 'CM'
   and rct.bill_to_customer_id = hca.cust_account_id
   and hca.party_id = hp.party_id
   and rct.bill_to_site_use_id = hcsu.site_use_id
   and hcsu.cust_acct_site_id = hcas.cust_acct_site_id
   and hcas.party_site_id = hps.party_site_id
   and hps.location_id = hl.location_id
   and hps.party_site_id = gst.party_id(+)
   and rct.complete_flag = 'Y'
   --and rctt.attribute_category = 'CRISIL_Additional_Information'
   --and UPPER(rctt.attribute1) = 'YES' --Added by Meenal on 30Dec for including only applicable invoices
   and rctl.attribute_category is not null
   and fab.bu_id = rct.org_id
   and fab.bu_name in ('CRISIL LIMITED', 'CRISIL Ratings Limited',
						'PRAGMATIX SERVICES PRIVATE LIMITED',
						'CRISIL Risk and Infrastructure Solutions Limited')
   and rctt.attribute_category = 'CRISIL_Additional_Information' 
   and UPPER(rctt.attribute1) = 'YES'    
   and not exists (select count(1)
                 from zx_registrations         zr,
                      zx_party_tax_profile     ptp,
                      xle_establishment_v      xe,
                      fun_all_business_units_v fab
                where zr.party_tax_profile_id = ptp.party_tax_profile_id
                  and ptp.party_type_code = 'LEGAL_ESTABLISHMENT'
                  and zr.registration_status_code = 'SEZ'
                  and ptp.party_id = xe.party_id
                  and xe.legal_entity_id = fab.legal_entity_id
                  and fab.bu_id = rct.org_id
                  AND zr.registration_id = rct.first_pty_reg_id) 
     and gst.registration_status_code <> 'NOT REGISTERED' 
     and  fab.bu_name not in ('CRISIL Ratings Limited', 'PRAGMATIX SERVICES PRIVATE LIMITED') 
     and rct.attribute6 is null
     and TO_CHAR((SELECT gl_date
				  FROM ra_cust_trx_line_gl_dist_all
				 WHERE customer_trx_id = RCT.customer_trx_id
				   AND account_class =  'REC'
				   AND rownum = 1), 'MM-DD-YYYY') =                                                   
to_char(fnd_timezone_pub.adjust_datetime(sysdate, 'GMT', 'Asia/Calcutta'), 'MM-DD-YYYY')
========================================================================================================
SELECT
    (
        SELECT
            substr(zr.registration_number, 1, 15)
        FROM
            zx_registrations           zr,
            zx_party_tax_profile       ptp,
            xle_establishment_v        xe,
            fun_all_business_units_v   fab
        WHERE
            zr.party_tax_profile_id = ptp.party_tax_profile_id
            AND ptp.party_type_code = 'LEGAL_ESTABLISHMENT'
            AND ptp.party_id = xe.party_id
              --  and xe.main_establishment_flag = 'N' --commented by Ankit on 12thDec2020
            AND xe.legal_entity_id = fab.legal_entity_id
            AND fab.bu_id = rct.org_id
            AND zr.registration_id = rct.first_pty_reg_id --Added by Ankit on 12thDec2020
    ) user_gstin,
    NULL version,
    rct.attribute6    irn,			-- NULL IRN (Logic changed on 01Mar by Pratul)
    substr(rbs.name, 1, 250) sourcesystem,
    CASE
        WHEN (
            SELECT
                COUNT(1)
            FROM
                zx_registrations           zr,
                zx_party_tax_profile       ptp,
                xle_establishment_v        xe,
                fun_all_business_units_v   fab
            WHERE
                zr.party_tax_profile_id = ptp.party_tax_profile_id
                AND ptp.party_type_code = 'LEGAL_ESTABLISHMENT'
                AND zr.registration_status_code = 'SEZ'
                AND ptp.party_id = xe.party_id
                AND xe.legal_entity_id = fab.legal_entity_id
                AND fab.bu_id = rct.org_id
                AND zr.registration_id = rct.first_pty_reg_id
        ) > 0 THEN
            'N'
        WHEN gst.registration_status_code = 'NOT REGISTERED' THEN
            'N'
        WHEN fab.bu_name IN (
            'CRISIL Ratings Limited',
            'PRAGMATIX SERVICES PRIVATE LIMITED'
        ) THEN
            'N'
       --- when gst.registration_status_code IN ('EXPORT', 'SEZ', 'REGISTERED') then --Added REGISTERED by Ankit on 12thDec2020
        ELSE
            'Y'
    END is_irn,
    'crisilar@crisil.com' email,
    'GST' trandtls_taxsch,
    'Outward' trandtls_outwardinward,
    CASE
        WHEN gst.registration_status_code = 'EXPORT' THEN
            'Export'
       /* Commented on 21Dec by Pratul
                   when gst.registration_status_code IN
                            ('REGISTERED', 'NOT REGISTERED', 'SEZ') then
                        'Supply'*/
        ELSE
            'Supply'
    END trandtls_subtype,
    CASE
        WHEN gst.registration_status_code = 'EXPORT'         THEN
            'EXPWOP'
        WHEN gst.registration_status_code = 'SEZ'            THEN
            'SEZWOP'
        WHEN gst.registration_status_code = 'NOT REGISTERED' THEN
            'B2C'
        WHEN gst.registration_number IS NOT NULL THEN
            'B2B'
        ELSE
            NULL
    END trandtls_suptyp,
    'N' trandtls_regrev,
    'REG' trandtls_typ,
       /*case   Commented by Pratul on 30Dec
                       when gst.registration_status_code = 'SEZ' then
                        'Y'
                       else
                        'N'
                     end TranDtls_IgstOnIntra,*/
    'N' trandtls_igstonintra, -- Added by Pratul on 30Dec
    CASE
        WHEN gst.registration_status_code = 'EXEMPT'         THEN
            'Exempted'
        WHEN gst.registration_status_code = 'SEZ'            THEN
            'Supply to SEZ'
        WHEN gst.registration_status_code = 'EXPORT'         THEN
            'Export'
        WHEN gst.registration_status_code = 'NIL RATED'      THEN
            'NIL Rated'
        WHEN gst.registration_status_code = 'NOT REGISTERED' THEN					-- New Condition added on 1Mar by Pratul
            'Taxable'
        WHEN gst.registration_number IS NOT NULL THEN
            'Taxable'
        ELSE
            NULL
    END trandtls_taxability,
    CASE
        WHEN gst.registration_status_code = 'SEZ' THEN
            'INTER'
        WHEN (
            SELECT
                COUNT(*)
            FROM
                zx_lines
            WHERE
                application_id = 222
                AND trx_id = rct.customer_trx_id
                AND trx_line_id = rctl.customer_trx_line_id
                AND tax LIKE '%IGST%'
        ) > 0 THEN
            'INTER'
        WHEN (
            SELECT
                COUNT(1)
            FROM
                zx_lines
            WHERE
                application_id = 222
                AND trx_id = rct.customer_trx_id
                AND trx_line_id = rctl.customer_trx_line_id
                AND tax NOT LIKE '%US_SALES_TAX%'
        ) = 0 THEN
            CASE
                WHEN ( (
                    SELECT
                        flv.tag
                    FROM
                        xle_establishment_v    xe,
                        zx_registrations       zr,
                        zx_party_tax_profile   ptp,
                        fnd_lookup_values      flv
                    WHERE
                        zr.party_tax_profile_id = ptp.party_tax_profile_id
                        AND ptp.party_type_code = 'LEGAL_ESTABLISHMENT'
                        AND ptp.party_id = xe.party_id
                        AND zr.registration_id = rct.first_pty_reg_id
                        AND upper(xe.region_2) = upper(flv.meaning)
                        AND flv.lookup_type = 'CRISIL_STATE_CODE'
                        AND flv.enabled_flag = 'Y'
                        AND flv.language = 'US'
                ) = (
                    CASE
                        WHEN gst.registration_status_code = 'EXPORT' THEN
                            '96'
                        ELSE
                            (
                                SELECT
                                    tag
                                FROM
                                    fnd_lookup_values
                                WHERE
                                    lookup_type = 'CRISIL_STATE_CODE'
                                    AND enabled_flag = 'Y'
                                    AND language = 'US'
                                    AND upper(meaning) = upper(hl.state)
                            )
                    END
                ) ) THEN
                    'INTRA'
                ELSE
                    'INTER'
            END
        ELSE
            'INTRA'
    END trandtls_interintra,
    decode(rctt.type, 'DM', 'DBN', 'CM', 'CRN',
           'INV', 'INV', NULL) docdtls_typ,
    substr(rct.trx_number, 1, 16) docdtls_no,
    to_char(rct.trx_date, 'DD/MM/YYYY') docdtls_dt,
    rct.attribute11   docdtls_reasonforcndn, -- Added by Pratul on 16Dec
    (
        SELECT
            substr(zr.registration_number, 1, 15)
        FROM
            zx_registrations           zr,
            zx_party_tax_profile       ptp,
            xle_establishment_v        xe,
            fun_all_business_units_v   fab
        WHERE
            zr.party_tax_profile_id = ptp.party_tax_profile_id
            AND ptp.party_type_code = 'LEGAL_ESTABLISHMENT'
            AND ptp.party_id = xe.party_id
              -- and xe.main_establishment_flag = 'N' --commented by Ankit on 12thDec2020
            AND xe.legal_entity_id = fab.legal_entity_id
            AND fab.bu_id = rct.org_id
            AND zr.registration_id = rct.first_pty_reg_id --Added by Ankit on 12thDec2020
    ) sellerdtls_gstin,
      /* (select substr(xe.establishment_name, 1, 100)
          from xle_establishment_v xe
         where xe.main_establishment_flag = 'Y'
           and xe.legal_entity_id = rct.legal_entity_id) SellerDtls_LglNm, */ -- Commented by Pratul on 13Jan
    (
        SELECT
            substr(xep.name, 1, 100)
        FROM
            xle_establishment_v    xe,
            zx_registrations       zr,
            zx_party_tax_profile   ptp,
            xle_entity_profiles    xep
        WHERE
            zr.party_tax_profile_id = ptp.party_tax_profile_id
            AND ptp.party_type_code = 'LEGAL_ESTABLISHMENT'
            AND ptp.party_id = xe.party_id
            AND xe.legal_entity_id = xep.legal_entity_id
            AND zr.registration_id = rct.first_pty_reg_id
    ) sellerdtls_lglnm,	-- Added by Pratul on 13Jan
    (
        SELECT
            substr(xep.name, 1, 100)
        FROM
            xle_establishment_v    xe,
            zx_registrations       zr,
            zx_party_tax_profile   ptp,
            xle_entity_profiles    xep
        WHERE
            zr.party_tax_profile_id = ptp.party_tax_profile_id
            AND ptp.party_type_code = 'LEGAL_ESTABLISHMENT'
            AND ptp.party_id = xe.party_id
            AND xe.legal_entity_id = xep.legal_entity_id
            AND zr.registration_id = rct.first_pty_reg_id
    ) sellerdtls_trdnm,
    (
        SELECT
            substr(xe.address_line_1, 1, 100)
        FROM
            xle_establishment_v    xe,
            zx_registrations       zr,
            zx_party_tax_profile   ptp
        WHERE
            zr.party_tax_profile_id = ptp.party_tax_profile_id
            AND ptp.party_type_code = 'LEGAL_ESTABLISHMENT'
            AND ptp.party_id = xe.party_id
            AND zr.registration_id = rct.first_pty_reg_id
    ) sellerdtls_addr1,
    (
        SELECT
            substr(xe.address_line_2, 1, 100)
        FROM
            xle_establishment_v    xe,
            zx_registrations       zr,
            zx_party_tax_profile   ptp
        WHERE
            zr.party_tax_profile_id = ptp.party_tax_profile_id
            AND ptp.party_type_code = 'LEGAL_ESTABLISHMENT'
            AND ptp.party_id = xe.party_id
            AND zr.registration_id = rct.first_pty_reg_id
    ) sellerdtls_addr2,
    (
        SELECT
            substr(xe.town_or_city, 1, 50)
        FROM
            xle_establishment_v    xe,
            zx_registrations       zr,
            zx_party_tax_profile   ptp
        WHERE
            zr.party_tax_profile_id = ptp.party_tax_profile_id
            AND ptp.party_type_code = 'LEGAL_ESTABLISHMENT'
            AND ptp.party_id = xe.party_id
            AND zr.registration_id = rct.first_pty_reg_id
    ) sellerdtls_loc,
    (
        SELECT
            xe.postal_code
        FROM
            xle_establishment_v    xe,
            zx_registrations       zr,
            zx_party_tax_profile   ptp
        WHERE
            zr.party_tax_profile_id = ptp.party_tax_profile_id
            AND ptp.party_type_code = 'LEGAL_ESTABLISHMENT'
            AND ptp.party_id = xe.party_id
            AND zr.registration_id = rct.first_pty_reg_id
    ) sellerdtls_pin,
    (
        SELECT
            flv.tag
        FROM
            xle_establishment_v    xe,
            zx_registrations       zr,
            zx_party_tax_profile   ptp,
            fnd_lookup_values      flv
        WHERE
            zr.party_tax_profile_id = ptp.party_tax_profile_id
            AND ptp.party_type_code = 'LEGAL_ESTABLISHMENT'
            AND ptp.party_id = xe.party_id
            AND zr.registration_id = rct.first_pty_reg_id
            AND upper(xe.region_2) = upper(flv.meaning)
            AND flv.lookup_type = 'CRISIL_STATE_CODE'
            AND flv.enabled_flag = 'Y'
            AND flv.language = 'US'
    ) sellerdtls_stcd,		-- Added by Pratul on 13Jan
       /*(select flv.tag
          from xle_establishment_v xe, fnd_lookup_values flv
         where xe.main_establishment_flag = 'Y'
           and xe.legal_entity_id = rct.legal_entity_id
           and upper(xe.region_2) = upper(flv.meaning)
           and flv.lookup_type = 'CRISIL_STATE_CODE'
           and flv.enabled_flag = 'Y'
           and flv.language = 'US') SellerDtls_Stcd,	Commented by Pratul on 13Jan*/
    NULL sellerdtls_ph,
    NULL sellerdtls_em,
    CASE
        WHEN gst.registration_status_code IN (
            'EXPORT',
            'NOT REGISTERED'
        ) THEN
            'URP'
        ELSE
            substr(gst.registration_number, 1, 15)
    END buyerdtls_gstin,
    substr(hp.party_name, 1, 100) buyerdtls_lglnm,
    substr(hp.party_name, 1, 100) buyerdtls_trdnm,
    substr(hl.address1, 1, 100) buyerdtls_addr1,
    substr(hl.address2, 1, 100) buyerdtls_addr2,
    substr(hl.city, 1, 100) buyerdtls_loc,
    CASE
        WHEN gst.registration_status_code = 'EXPORT' THEN
            '999999'
        ELSE
            hl.postal_code
    END buyerdtls_pin,
    CASE
        WHEN gst.registration_status_code = 'EXPORT' THEN
            '96'
        ELSE
            (
                SELECT
                    tag
                FROM
                    fnd_lookup_values
                WHERE
                    lookup_type = 'CRISIL_STATE_CODE'
                    AND enabled_flag = 'Y'
                    AND language = 'US'
                    AND upper(meaning) = upper(hl.state)
            )
    END buyerdtls_stcd,
    CASE
        WHEN gst.registration_status_code = 'EXPORT' THEN
            '96'
        ELSE
            (
                SELECT
                    flv.tag
                FROM
                    hz_party_site_uses   hpsu,
                    hz_party_sites       hps1,
                    hz_locations         hl1,
                    fnd_lookup_values    flv
                WHERE
                    hpsu.party_site_use_id = rct.ship_to_party_site_use_id
                    AND hpsu.party_site_id = hps1.party_site_id
                    AND hps1.location_id = hl1.location_id
                    AND upper(hl1.state) = upper(flv.meaning)
                    AND flv.lookup_type = 'CRISIL_STATE_CODE'
                    AND flv.enabled_flag = 'Y'
                    AND flv.language = 'US'
            )
    END buyerdtls_pos,
    substr(hca.account_number, 1, 250) buyerdtls_customercode,
    substr(rctl.line_number, 1, 6) itemslist_slno,
    substr(rctl.attribute1, 1, 8) itemslist_hsncd,
    CASE
        WHEN rctl.attribute1 LIKE '99%' THEN
            'Y'
        ELSE
            'N'
    END itemslist_isservc,
    decode(rctt.type, 'CM', abs(nvl(rctl.quantity_invoiced, rctl.quantity_credited)), nvl(rctl.quantity_invoiced, rctl.quantity_credited
    )) itemlist_unit, --Added by Meenal on 30Dec
    ( ( regexp_replace(rctl.attribute2, '[^0-9.]') * nvl(rct.exchange_rate, 1) ) / nvl(rctl.quantity_invoiced, rctl.quantity_credited
    ) ) itemlist_unitprice,
    ( decode(rctt.type, 'CM', abs(regexp_replace(rctl.attribute2, '[^0-9.]')), regexp_replace(rctl.attribute2, '[^0-9.]')) * nvl(
    rct.exchange_rate, 1) ) itemslist_totamt, --Added by Meenal on 30Dec
    ( decode(rctt.type, 'CM', abs(regexp_replace(rctl.attribute3, '[^0-9.]')), regexp_replace(rctl.attribute3, '[^0-9.]')) * nvl(
    rct.exchange_rate, 1) ) itemlist_discount, --Added by Meenal on 30Dec
    NULL itemslist_pretaxval,
    ( decode(rctt.type, 'CM', abs(regexp_replace(rctl.attribute2, '[^0-9.]') - regexp_replace(rctl.attribute3, '[^0-9.]')),(regexp_replace
    (rctl.attribute2, '[^0-9.]') - regexp_replace(rctl.attribute3, '[^0-9.]'))) * nvl(rct.exchange_rate, 1) ) itemslist_assamt, --Added by Meenal on 30Dec
    (
        SELECT
            SUM(tax_rate)
        FROM
            zx_lines
        WHERE
            application_id = 222
            AND trx_id = rct.customer_trx_id
            AND trx_line_id = rctl.customer_trx_line_id
            AND tax NOT LIKE '%US_SALES_TAX%'
    ) itemslist_gstrt,
    (
        SELECT
            SUM(tax_rate)
        FROM
            zx_lines
        WHERE
            application_id = 222
            AND trx_id = rct.customer_trx_id
            AND trx_line_id = rctl.customer_trx_line_id
            AND tax LIKE '%CGST%'
    ) itemslist_cgstrt,
    (
        SELECT
            SUM(tax_rate)
        FROM
            zx_lines
        WHERE
            application_id = 222
            AND trx_id = rct.customer_trx_id
            AND trx_line_id = rctl.customer_trx_line_id
            AND tax LIKE '%SGST%'
    ) itemslist_sgstrt,
    (
        SELECT
            SUM(tax_rate)
        FROM
            zx_lines
        WHERE
            application_id = 222
            AND trx_id = rct.customer_trx_id
            AND trx_line_id = rctl.customer_trx_line_id
            AND tax LIKE '%IGST%'
    ) itemslist_igstrt,
    (
        SELECT
            SUM(tax_rate)
        FROM
            zx_lines
        WHERE
            application_id = 222
            AND trx_id = rct.customer_trx_id
            AND trx_line_id = rctl.customer_trx_line_id
            AND tax LIKE '%CESS%'
    ) itemslist_cesrt,
    ( decode(rctt.type, 'CM', abs((
        SELECT
            SUM(tax_amt)
        FROM
            zx_lines
        WHERE
            application_id = 222
            AND trx_id = rct.customer_trx_id
            AND trx_line_id = rctl.customer_trx_line_id
            AND tax LIKE '%IGST%'
    )),(
        SELECT
            SUM(tax_amt)
        FROM
            zx_lines
        WHERE
            application_id = 222
            AND trx_id = rct.customer_trx_id
            AND trx_line_id = rctl.customer_trx_line_id
            AND tax LIKE '%IGST%'
    )) * nvl(rct.exchange_rate, 1) ) itemslist_igstamt, --Added by Meenal on 30Dec
    ( decode(rctt.type, 'CM', abs((
        SELECT
            SUM(tax_amt)
        FROM
            zx_lines
        WHERE
            application_id = 222
            AND trx_id = rct.customer_trx_id
            AND trx_line_id = rctl.customer_trx_line_id
            AND tax LIKE '%CGST%'
    )),(
        SELECT
            SUM(tax_amt)
        FROM
            zx_lines
        WHERE
            application_id = 222
            AND trx_id = rct.customer_trx_id
            AND trx_line_id = rctl.customer_trx_line_id
            AND tax LIKE '%CGST%'
    )) * nvl(rct.exchange_rate, 1) ) itemslist_cgstamt, --Added by Meenal on 30Dec
    ( decode(rctt.type, 'CM', abs((
        SELECT
            SUM(tax_amt)
        FROM
            zx_lines
        WHERE
            application_id = 222
            AND trx_id = rct.customer_trx_id
            AND trx_line_id = rctl.customer_trx_line_id
            AND tax LIKE '%SGST%'
    )),(
        SELECT
            SUM(tax_amt)
        FROM
            zx_lines
        WHERE
            application_id = 222
            AND trx_id = rct.customer_trx_id
            AND trx_line_id = rctl.customer_trx_line_id
            AND tax LIKE '%CGST%'
    )) * nvl(rct.exchange_rate, 1) ) itemslist_sgstamt, --Added by Meenal on 30Dec
    ( decode(rctt.type, 'CM', abs((
        SELECT
            SUM(tax_amt)
        FROM
            zx_lines
        WHERE
            application_id = 222
            AND trx_id = rct.customer_trx_id
            AND trx_line_id = rctl.customer_trx_line_id
            AND tax LIKE '%CESS%'
    )),(
        SELECT
            SUM(tax_amt)
        FROM
            zx_lines
        WHERE
            application_id = 222
            AND trx_id = rct.customer_trx_id
            AND trx_line_id = rctl.customer_trx_line_id
            AND tax LIKE '%CESS%'
    )) * nvl(rct.exchange_rate, 1) ) itemslist_cesamt,
    ( decode(rctt.type, 'CM', abs((regexp_replace(rctl.attribute2, '[^0-9.]') - regexp_replace(rctl.attribute3, '[^0-9.]')) +(
        SELECT
            nvl(SUM(tax_amt), 0)
        FROM
            zx_lines
        WHERE
            application_id = 222
            AND trx_id = rct.customer_trx_id
            AND trx_line_id = rctl.customer_trx_line_id
            AND tax NOT LIKE '%US_SALES_TAX%'
    )),((regexp_replace(rctl.attribute2, '[^0-9.]') - regexp_replace(rctl.attribute3, '[^0-9.]')) +(
        SELECT
            nvl(SUM(tax_amt), 0)
        FROM
            zx_lines
        WHERE
            application_id = 222
            AND trx_id = rct.customer_trx_id
            AND trx_line_id = rctl.customer_trx_line_id
            AND tax NOT LIKE '%US_SALES_TAX%'
    ))) * nvl(rct.exchange_rate, 1) ) itemslist_totitemval, -- Added on 15Dec by Pratul  --Added by Meenal on 30Dec
       /*(select NVL(sum(extended_amount), 0)      -- Commented on 11Jan by Pratul
                      from ra_customer_trx_lines_all
                     where customer_trx_id = rct.customer_trx_id
                       and link_to_cust_trx_line_id = rctl.customer_trx_line_id
                       and line_type = 'TAX')*/
       /* rctl.extended_amount ItemsList_TotItemVal,       
                     (select sum(rctl.extended_amount)
                        from ra_customer_trx_lines_all
                       where customer_trx_id = rct.customer_trx_id) ItemsList_TotItemVal, -- Commented on 15Dec by Pratul*/
    'IN' itemslist_orgcntry,
    (
        SELECT
            substr(gcc.segment2, 1, 250)
        FROM
            ra_cust_trx_line_gl_dist_all   rctlgd,
            gl_code_combinations           gcc
        WHERE
            rctlgd.account_class = 'REV'
            AND rctlgd.code_combination_id = gcc.code_combination_id
            AND rctlgd.customer_trx_line_id = rctl.customer_trx_line_id
            AND ROWNUM = 1
    ) itemlist_glcoderevenueexpense,
    '212056' itemlist_glcodeigst,
    '212057' itemlist_glcodecgst,
    '212058' itemlist_glcodesgst,
    '212059' itemlist_glcodecess,
    (
        SELECT
            substr(gcc.segment1, 1, 250)
        FROM
            ra_cust_trx_line_gl_dist_all   rctlgd,
            gl_code_combinations           gcc
        WHERE
            rctlgd.account_class = 'REC'
            AND rctlgd.code_combination_id = gcc.code_combination_id
            AND rctlgd.customer_trx_id = rct.customer_trx_id
            AND ROWNUM = 1
    ) itemlist_mis1,
    (
        SELECT
            substr(gcc.segment2, 1, 250)
        FROM
            ra_cust_trx_line_gl_dist_all   rctlgd,
            gl_code_combinations           gcc
        WHERE
            rctlgd.account_class = 'REC'
            AND rctlgd.code_combination_id = gcc.code_combination_id
            AND rctlgd.customer_trx_id = rct.customer_trx_id
            AND ROWNUM = 1
    ) itemlist_mis_2,
    (
        SELECT
            substr(gcc.segment3, 1, 250)
        FROM
            ra_cust_trx_line_gl_dist_all   rctlgd,
            gl_code_combinations           gcc
        WHERE
            rctlgd.account_class = 'REC'
            AND rctlgd.code_combination_id = gcc.code_combination_id
            AND rctlgd.customer_trx_id = rct.customer_trx_id
            AND ROWNUM = 1
    ) itemlist_mis_3,
    (
        SELECT
            substr(gcc.segment4, 1, 250)
        FROM
            ra_cust_trx_line_gl_dist_all   rctlgd,
            gl_code_combinations           gcc
        WHERE
            rctlgd.account_class = 'REC'
            AND rctlgd.code_combination_id = gcc.code_combination_id
            AND rctlgd.customer_trx_id = rct.customer_trx_id
            AND ROWNUM = 1
    ) itemlist_mis_4,
    (
        SELECT
            substr(gcc.segment5, 1, 250)
        FROM
            ra_cust_trx_line_gl_dist_all   rctlgd,
            gl_code_combinations           gcc
        WHERE
            rctlgd.account_class = 'REC'
            AND rctlgd.code_combination_id = gcc.code_combination_id
            AND rctlgd.customer_trx_id = rct.customer_trx_id
            AND ROWNUM = 1
    ) itemlist_mis_5,
    (
        SELECT
            substr(gcc.segment6, 1, 250)
        FROM
            ra_cust_trx_line_gl_dist_all   rctlgd,
            gl_code_combinations           gcc
        WHERE
            rctlgd.account_class = 'REC'
            AND rctlgd.code_combination_id = gcc.code_combination_id
            AND rctlgd.customer_trx_id = rct.customer_trx_id
            AND ROWNUM = 1
    ) itemlist_mis_6,
    (
        SELECT
            substr(gcc.segment7, 1, 250)
        FROM
            ra_cust_trx_line_gl_dist_all   rctlgd,
            gl_code_combinations           gcc
        WHERE
            rctlgd.account_class = 'REC'
            AND rctlgd.code_combination_id = gcc.code_combination_id
            AND rctlgd.customer_trx_id = rct.customer_trx_id
            AND ROWNUM = 1
    ) itemlist_mis_7,
    (
        SELECT
            substr(gcc.segment8, 1, 250)
        FROM
            ra_cust_trx_line_gl_dist_all   rctlgd,
            gl_code_combinations           gcc
        WHERE
            rctlgd.account_class = 'REC'
            AND rctlgd.code_combination_id = gcc.code_combination_id
            AND rctlgd.customer_trx_id = rct.customer_trx_id
            AND ROWNUM = 1
    ) itemlist_mis_8,
    (
        SELECT
            substr(gcc.segment9, 1, 250)
        FROM
            ra_cust_trx_line_gl_dist_all   rctlgd,
            gl_code_combinations           gcc
        WHERE
            rctlgd.account_class = 'REC'
            AND rctlgd.code_combination_id = gcc.code_combination_id
            AND rctlgd.customer_trx_id = rct.customer_trx_id
            AND ROWNUM = 1
    ) itemlist_mis_9,
    ( decode(rctt.type, 'CM', abs((
        SELECT
            SUM(regexp_replace(attribute2, '[^0-9.]') - regexp_replace(attribute3, '[^0-9.]'))
        FROM
            ra_customer_trx_lines_all
        WHERE
            customer_trx_id = rct.customer_trx_id
    )),(
        SELECT
            SUM(regexp_replace(attribute2, '[^0-9.]') - regexp_replace(attribute3, '[^0-9.]'))
        FROM
            ra_customer_trx_lines_all
        WHERE
            customer_trx_id = rct.customer_trx_id
    )) * nvl(rct.exchange_rate, 1) ) valdtls_assval, -- Added by Pratul on 16Dec    --Added by Meenal on 30Dec
       /* (select sum(extended_amount)
                        from ra_customer_trx_lines_all
                       where customer_trx_id = rct.customer_trx_id) ValDtls_AssVal, Commented by Pratul Goel on 15Dec*/
    ( decode(rctt.type, 'CM', abs((
        SELECT
            SUM(tax_amt)
        FROM
            zx_lines
        WHERE
            application_id = 222
            AND trx_id = rct.customer_trx_id
                        --- and trx_line_id = rctl.customer_trx_line_id     Commented by Pratul Goel on 16Dec
            AND tax LIKE '%CGST%'
    )),(
        SELECT
            SUM(tax_amt)
        FROM
            zx_lines
        WHERE
            application_id = 222
            AND trx_id = rct.customer_trx_id
                     --- and trx_line_id = rctl.customer_trx_line_id     Commented by Pratul Goel on 16Dec
            AND tax LIKE '%CGST%'
    )) * nvl(rct.exchange_rate, 1) ) valdtls_cgstval, --Added by Meenal on 30Dec
    ( decode(rctt.type, 'CM', abs((
        SELECT
            SUM(tax_amt)
        FROM
            zx_lines
        WHERE
            application_id = 222
            AND trx_id = rct.customer_trx_id
                        --- and trx_line_id = rctl.customer_trx_line_id   Commented by Pratul Goel on 16Dec
            AND tax LIKE '%SGST%'
    )),(
        SELECT
            SUM(tax_amt)
        FROM
            zx_lines
        WHERE
            application_id = 222
            AND trx_id = rct.customer_trx_id
                     --- and trx_line_id = rctl.customer_trx_line_id   Commented by Pratul Goel on 16Dec
            AND tax LIKE '%SGST%'
    )) * nvl(rct.exchange_rate, 1) ) valdtls_sgstval, --Added by Meenal on 30Dec
    ( decode(rctt.type, 'CM', abs((
        SELECT
            SUM(tax_amt)
        FROM
            zx_lines
        WHERE
            application_id = 222
            AND trx_id = rct.customer_trx_id
                        --- and trx_line_id = rctl.customer_trx_line_id   Commented by Pratul Goel on 16Dec
            AND tax LIKE '%IGST%'
    )),(
        SELECT
            SUM(tax_amt)
        FROM
            zx_lines
        WHERE
            application_id = 222
            AND trx_id = rct.customer_trx_id
                     --- and trx_line_id = rctl.customer_trx_line_id   Commented by Pratul Goel on 16Dec
            AND tax LIKE '%IGST%'
    )) * nvl(rct.exchange_rate, 1) ) valdtls_igstval,
    ( decode(rctt.type, 'CM', abs((
        SELECT
            SUM(tax_amt)
        FROM
            zx_lines
        WHERE
            application_id = 222
            AND trx_id = rct.customer_trx_id
                        --- and trx_line_id = rctl.customer_trx_line_id   Commented by Pratul Goel on 15Dec
            AND tax LIKE '%CESS%'
    )),(
        SELECT
            SUM(tax_amt)
        FROM
            zx_lines
        WHERE
            application_id = 222
            AND trx_id = rct.customer_trx_id
                     --- and trx_line_id = rctl.customer_trx_line_id   Commented by Pratul Goel on 15Dec
            AND tax LIKE '%CESS%'
    )) * nvl(rct.exchange_rate, 1) ) valdtls_cesval,
    0 valdtls_discount, -- Added by Pratul on 06Jan
       /* DECODE(rctt.type, 'CM', ABS((select sum(attribute3)
                      from ra_customer_trx_lines_all
                       where customer_trx_id = rct.customer_trx_id)), (select sum(attribute3)
                      from ra_customer_trx_lines_all
                       where customer_trx_id = rct.customer_trx_id)) ValDtls_Discount,    Commented by Pratul Goel on06Jan*/
    decode(rctt.type, 'CM', abs((
        SELECT
            SUM(rctlgd.acctd_amount)
        FROM
            ra_cust_trx_line_gl_dist_all rctlgd
        WHERE
            rctlgd.account_class = 'ROUND'
            AND rctlgd.customer_trx_id = rct.customer_trx_id
    )),(
        SELECT
            SUM(rctlgd.acctd_amount)
        FROM
            ra_cust_trx_line_gl_dist_all rctlgd
        WHERE
            rctlgd.account_class = 'ROUND'
            AND rctlgd.customer_trx_id = rct.customer_trx_id
    )) valdtls_rndoffamt,
    ( decode(rctt.type, 'CM', abs((
        SELECT
            nvl(SUM(regexp_replace(attribute2, '[^0-9.]') - regexp_replace(attribute3, '[^0-9.]')), 0)
        FROM
            ra_customer_trx_lines_all
        WHERE
            customer_trx_id = rct.customer_trx_id
            AND line_type = 'LINE'
    ) +(
        SELECT
            nvl(SUM(tax_amt), 0)
        FROM
            zx_lines
        WHERE
            application_id = 222
            AND trx_id = rct.customer_trx_id
            AND tax NOT LIKE '%US_SALES_TAX%'
    )),((
        SELECT
            nvl(SUM(regexp_replace(attribute2, '[^0-9.]') - regexp_replace(attribute3, '[^0-9.]')), 0)
        FROM
            ra_customer_trx_lines_all
        WHERE
            customer_trx_id = rct.customer_trx_id
            AND line_type = 'LINE'
    ) +(
        SELECT
            nvl(SUM(tax_amt), 0)
        FROM
            zx_lines
        WHERE
            application_id = 222
            AND trx_id = rct.customer_trx_id
            AND tax NOT LIKE '%US_SALES_TAX%'
    ))) * nvl(rct.exchange_rate, 1) ) valdtls_totinvval, -- Added on 15Dec by Pratul --Added by Meenal 30Dec
       /*rctl.extended_amount ValDtls_TotInvVal,     
                     (select sum(extended_amount)
                        from ra_customer_trx_lines_all
                       where customer_trx_id = rct.customer_trx_id) ValDtls_TotInvVal,  -- Commented on 15Dec by Pratul */
    substr(rct.trx_number, 1, 250) refdtls_accountingdocno,
    (
        SELECT
            to_char(rctlgd.gl_date, 'DD/MM/YYYY')
        FROM
            ra_cust_trx_line_gl_dist_all rctlgd
        WHERE
            1 = 1 ---rctlgd.customer_trx_line_id = rctl.customer_trx_line_id
            AND rctlgd.customer_trx_id = rct.customer_trx_id
            AND rctlgd.account_class = 'REC'
            AND ROWNUM = 1
    ) refdtls_accountingdocdt,
    (
        SELECT
            to_char(rctlgd.gl_date, 'MON-YY')
        FROM
            ra_cust_trx_line_gl_dist_all rctlgd
        WHERE
            1 = 1 --rctlgd.customer_trx_line_id = rctl.customer_trx_line_id
            AND rctlgd.customer_trx_id = rct.customer_trx_id
            AND rctlgd.account_class = 'REC'
            AND ROWNUM = 1
    ) miscolumns_returnperiod,
    rct.customer_trx_id,
    CASE
        WHEN ( rctt.attribute_category = 'CRISIL_Additional_Information'
               AND upper(rctt.attribute1) = 'YES' ) THEN
            'Y'
        ELSE
            'N'
    END einvoice_applicable,
    (
        SELECT
            trx_number
        FROM
            ra_customer_trx_all rct1
        WHERE
            rct1.customer_trx_id = rct.previous_customer_trx_id
    ) orig_inv_num,
    (
        SELECT
            to_char(trx_date, 'DD/MM/YYYY')
        FROM
            ra_customer_trx_all rct1
        WHERE
            rct1.customer_trx_id = rct.previous_customer_trx_id
    ) orig_inv_date,
    rctt.name         trx_type
FROM
    ra_customer_trx_all            rct,
    ra_customer_trx_lines_all      rctl,
    ra_cust_trx_line_gl_dist_all   rctlgda,  --Added by Ankit on 12thDec2020 for finding Accounting invoices
    ra_batch_sources_all           rbs,
    ra_cust_trx_types_all          rctt,
    hz_cust_accounts               hca,
    hz_parties                     hp,
    hz_cust_site_uses_all          hcsu,
    hz_cust_acct_sites_all         hcas,
    hz_party_sites                 hps,
    hz_locations                   hl,
    fun_all_business_units_v       fab,
    (
        SELECT
            decode(zr.registration_number, 'ECC123456', NULL, 'UNR123456', NULL,
                   zr.registration_number) registration_number,
            ptp.party_id,
            zr.registration_status_code
        FROM
            zx_registrations       zr,
            zx_party_tax_profile   ptp
        WHERE
            zr.party_tax_profile_id = ptp.party_tax_profile_id
            AND ptp.party_type_code = 'THIRD_PARTY_SITE'
            AND zr.tax_regime_code = 'IN_GST'
            AND trunc(sysdate) BETWEEN trunc(zr.effective_from) AND nvl(trunc(zr.effective_to), trunc(sysdate))
    ) gst
WHERE
    rct.batch_source_seq_id = rbs.batch_source_seq_id
    AND rct.cust_trx_type_seq_id = rctt.cust_trx_type_seq_id
    AND rct.customer_trx_id = rctl.customer_trx_id
    AND rct.customer_trx_id = rctlgda.customer_trx_id --Added by Ankit on 12thDec2020 for finding Accounting invoices
    AND rctlgda.gl_posted_date IS NOT NULL --Added by Ankit on 12thDec2020 for finding Accounting invoices
    AND rctlgda.account_class = 'REC'  --Added by Ankit on 12thDec2020 for finding Accounting invoices
    AND rctl.line_type = 'LINE'
    AND rctt.type <> 'CM'
    AND rct.bill_to_customer_id = hca.cust_account_id
    AND hca.party_id = hp.party_id
    AND rct.bill_to_site_use_id = hcsu.site_use_id
    AND hcsu.cust_acct_site_id = hcas.cust_acct_site_id
    AND hcas.party_site_id = hps.party_site_id
    AND hps.location_id = hl.location_id
    AND hps.party_site_id = gst.party_id (+)
    AND rct.complete_flag = 'Y'
    AND fab.bu_id = rct.org_id
    AND fab.bu_name IN (
        'CRISIL LIMITED',
        'CRISIL Ratings Limited',
        --/*Commected by Filix Ram dated 30.04.2021--'PRAGMATIX SERVICES PRIVATE LIMITED',*/
        'CRISIL Risk and Infrastructure Solutions Limited'
    )
    AND rctt.attribute_category = 'CRISIL_Additional_Information'
    AND upper(rctt.attribute1) = 'YES'
    /*Commected by Filix Ram dated 30.04.2021
    AND NOT EXISTS (
        SELECT
            COUNT(1)
        FROM
            zx_registrations           zr,
            zx_party_tax_profile       ptp,
            xle_establishment_v        xe,
            fun_all_business_units_v   fab
        WHERE
            zr.party_tax_profile_id = ptp.party_tax_profile_id
            AND ptp.party_type_code = 'LEGAL_ESTABLISHMENT'
            AND zr.registration_status_code = 'SEZ'
            AND ptp.party_id = xe.party_id
            AND xe.legal_entity_id = fab.legal_entity_id
            AND fab.bu_id = rct.org_id
            AND zr.registration_id = rct.first_pty_reg_id
    )end Commected by Filix Ram dated 30.04.2021*/
    AND gst.registration_status_code NOT IN (
        'NOT REGISTERED',
        'EXPORT'
    )
    /*Commected by Filix Ram dated 30.04.2021
    AND fab.bu_name NOT IN (
        'CRISIL Ratings Limited',
        'PRAGMATIX SERVICES PRIVATE LIMITED'
    )
     end Commected by Filix Ram dated 30.04.2021*/
    AND rct.attribute6 IS NULL
    --Added by Filix Ram to exclude invoice which adjusted against CM
    AND NOT EXISTS (
        SELECT
            1
        FROM
            ra_customer_trx_all     a1,
            ra_cust_trx_types_all   a2
        WHERE
            1 = 1
            AND a1.cust_trx_type_seq_id = a2.cust_trx_type_seq_id
            AND a1.previous_customer_trx_id = rct.customer_trx_id
            AND a2.type = 'CM'
    )
    --End Added by Filix Ram to exclude invoice which adjusted against CM
    AND fab.bu_name = :p_bu_name
    AND rct.trx_number = nvl(:p_trx_number, rct.trx_number)
    AND to_char((
        SELECT
            gl_date
        FROM
            ra_cust_trx_line_gl_dist_all
        WHERE
            customer_trx_id = rct.customer_trx_id
            AND account_class = 'REC'
            AND ROWNUM = 1
    ), 'MM-DD-YYYY') BETWEEN to_char(fnd_timezone_pub.adjust_datetime(:p_from_period, 'GMT', 'Asia/Calcutta'), 'MM-DD-YYYY') AND to_char
    (fnd_timezone_pub.adjust_datetime(:p_to_period, 'GMT', 'Asia/Calcutta'), 'MM-DD-YYYY')
UNION
SELECT
    (
        SELECT
            substr(zr.registration_number, 1, 15)
        FROM
            zx_registrations           zr,
            zx_party_tax_profile       ptp,
            xle_establishment_v        xe,
            fun_all_business_units_v   fab
        WHERE
            zr.party_tax_profile_id = ptp.party_tax_profile_id
            AND ptp.party_type_code = 'LEGAL_ESTABLISHMENT'
            AND ptp.party_id = xe.party_id
              --  and xe.main_establishment_flag = 'N' --commented by Ankit on 12thDec2020
            AND xe.legal_entity_id = fab.legal_entity_id
            AND fab.bu_id = rct.org_id
            AND zr.registration_id = rct.first_pty_reg_id --Added by Ankit on 12thDec2020
    ) user_gstin,
    NULL version,
    rct.attribute6    irn,							-- NULL IRN (Logic changed on 01Mar by Pratul)
    substr(rbs.name, 1, 250) sourcesystem,
    CASE
        WHEN (
            SELECT
                COUNT(1)
            FROM
                zx_registrations           zr,
                zx_party_tax_profile       ptp,
                xle_establishment_v        xe,
                fun_all_business_units_v   fab
            WHERE
                zr.party_tax_profile_id = ptp.party_tax_profile_id
                AND ptp.party_type_code = 'LEGAL_ESTABLISHMENT'
                AND zr.registration_status_code = 'SEZ'
                AND ptp.party_id = xe.party_id
                AND xe.legal_entity_id = fab.legal_entity_id
                AND fab.bu_id = rct.org_id
                AND zr.registration_id = rct.first_pty_reg_id
        ) > 0 THEN
            'N'
        WHEN gst.registration_status_code = 'NOT REGISTERED' THEN
            'N'
        WHEN fab.bu_name IN (
            'CRISIL Ratings Limited',
            'PRAGMATIX SERVICES PRIVATE LIMITED'
        ) THEN
            'N'
       --- when gst.registration_status_code IN ('EXPORT', 'SEZ', 'REGISTERED') then --Added REGISTERED by Ankit on 12thDec2020
        ELSE
            'Y'
    END is_irn,
    'crisilar@crisil.com' email,
    'GST' trandtls_taxsch,
    'Outward' trandtls_outwardinward,
    CASE
        WHEN gst.registration_status_code = 'EXPORT' THEN
            'Export'
       /* Commented on 21Dec by Pratul
                   when gst.registration_status_code IN
                            ('REGISTERED', 'NOT REGISTERED', 'SEZ') then
                        'Supply'*/
        ELSE
            'Supply'
    END trandtls_subtype,
    CASE
        WHEN gst.registration_status_code = 'EXPORT'         THEN
            'EXPWOP'
        WHEN gst.registration_status_code = 'SEZ'            THEN
            'SEZWOP'
        WHEN gst.registration_status_code = 'NOT REGISTERED' THEN
            'B2C'
        WHEN gst.registration_number IS NOT NULL THEN
            'B2B'
        ELSE
            NULL
    END trandtls_suptyp,
    'N' trandtls_regrev,
    'REG' trandtls_typ,
       /*case   Commented by Pratul on 30Dec
                       when gst.registration_status_code = 'SEZ' then
                        'Y'
                       else
                        'N'
                     end TranDtls_IgstOnIntra,*/
    'N' trandtls_igstonintra, -- Added by Pratul on 30Dec
    CASE
        WHEN gst.registration_status_code = 'EXEMPT'         THEN
            'Exempted'
        WHEN gst.registration_status_code = 'SEZ'            THEN
            'Supply to SEZ'
        WHEN gst.registration_status_code = 'EXPORT'         THEN
            'Export'
        WHEN gst.registration_status_code = 'NIL RATED'      THEN
            'NIL Rated'
        WHEN gst.registration_status_code = 'NOT REGISTERED' THEN				-- New Condition added on 1Mar by Pratul
            'Taxable'
        WHEN gst.registration_number IS NOT NULL THEN
            'Taxable'
        ELSE
            NULL
    END trandtls_taxability,
    CASE
        WHEN gst.registration_status_code = 'SEZ' THEN
            'INTER'
        WHEN (
            SELECT
                COUNT(*)
            FROM
                zx_lines
            WHERE
                application_id = 222
                AND trx_id = rct.customer_trx_id
                AND trx_line_id = rctl.customer_trx_line_id
                AND tax LIKE '%IGST%'
        ) > 0 THEN
            'INTER'
        WHEN (
            SELECT
                COUNT(1)
            FROM
                zx_lines
            WHERE
                application_id = 222
                AND trx_id = rct.customer_trx_id
                AND trx_line_id = rctl.customer_trx_line_id
                AND tax NOT LIKE '%US_SALES_TAX%'
        ) = 0 THEN
            CASE
                WHEN ( (
                    SELECT
                        flv.tag
                    FROM
                        xle_establishment_v    xe,
                        zx_registrations       zr,
                        zx_party_tax_profile   ptp,
                        fnd_lookup_values      flv
                    WHERE
                        zr.party_tax_profile_id = ptp.party_tax_profile_id
                        AND ptp.party_type_code = 'LEGAL_ESTABLISHMENT'
                        AND ptp.party_id = xe.party_id
                        AND zr.registration_id = rct.first_pty_reg_id
                        AND upper(xe.region_2) = upper(flv.meaning)
                        AND flv.lookup_type = 'CRISIL_STATE_CODE'
                        AND flv.enabled_flag = 'Y'
                        AND flv.language = 'US'
                ) = (
                    CASE
                        WHEN gst.registration_status_code = 'EXPORT' THEN
                            '96'
                        ELSE
                            (
                                SELECT
                                    tag
                                FROM
                                    fnd_lookup_values
                                WHERE
                                    lookup_type = 'CRISIL_STATE_CODE'
                                    AND enabled_flag = 'Y'
                                    AND language = 'US'
                                    AND upper(meaning) = upper(hl.state)
                            )
                    END
                ) ) THEN
                    'INTRA'
                ELSE
                    'INTER'
            END
        ELSE
            'INTRA'
    END trandtls_interintra,
    decode(rctt.type, 'DM', 'DBN', 'CM', 'CRN',
           'INV', 'INV', NULL) docdtls_typ,
    substr(rct.trx_number, 1, 16) docdtls_no,
    to_char(rct.trx_date, 'DD/MM/YYYY') docdtls_dt,
    rct.attribute11   docdtls_reasonforcndn, -- Added by Pratul on 16Dec
    (
        SELECT
            substr(zr.registration_number, 1, 15)
        FROM
            zx_registrations           zr,
            zx_party_tax_profile       ptp,
            xle_establishment_v        xe,
            fun_all_business_units_v   fab
        WHERE
            zr.party_tax_profile_id = ptp.party_tax_profile_id
            AND ptp.party_type_code = 'LEGAL_ESTABLISHMENT'
            AND ptp.party_id = xe.party_id
              -- and xe.main_establishment_flag = 'N' --commented by Ankit on 12thDec2020
            AND xe.legal_entity_id = fab.legal_entity_id
            AND fab.bu_id = rct.org_id
            AND zr.registration_id = rct.first_pty_reg_id --Added by Ankit on 12thDec2020
    ) sellerdtls_gstin,
      /* (select substr(xe.establishment_name, 1, 100)
          from xle_establishment_v xe
         where xe.main_establishment_flag = 'Y'
           and xe.legal_entity_id = rct.legal_entity_id) SellerDtls_LglNm, */ -- Commented by Pratul on 13Jan
    (
        SELECT
            substr(xep.name, 1, 100)
        FROM
            xle_establishment_v    xe,
            zx_registrations       zr,
            zx_party_tax_profile   ptp,
            xle_entity_profiles    xep
        WHERE
            zr.party_tax_profile_id = ptp.party_tax_profile_id
            AND ptp.party_type_code = 'LEGAL_ESTABLISHMENT'
            AND ptp.party_id = xe.party_id
            AND xe.legal_entity_id = xep.legal_entity_id
            AND zr.registration_id = rct.first_pty_reg_id
    ) sellerdtls_lglnm,	-- Added by Pratul on 13Jan
    (
        SELECT
            substr(xep.name, 1, 100)
        FROM
            xle_establishment_v    xe,
            zx_registrations       zr,
            zx_party_tax_profile   ptp,
            xle_entity_profiles    xep
        WHERE
            zr.party_tax_profile_id = ptp.party_tax_profile_id
            AND ptp.party_type_code = 'LEGAL_ESTABLISHMENT'
            AND ptp.party_id = xe.party_id
            AND xe.legal_entity_id = xep.legal_entity_id
            AND zr.registration_id = rct.first_pty_reg_id
    ) sellerdtls_trdnm,
    (
        SELECT
            substr(xe.address_line_1, 1, 100)
        FROM
            xle_establishment_v    xe,
            zx_registrations       zr,
            zx_party_tax_profile   ptp
        WHERE
            zr.party_tax_profile_id = ptp.party_tax_profile_id
            AND ptp.party_type_code = 'LEGAL_ESTABLISHMENT'
            AND ptp.party_id = xe.party_id
            AND zr.registration_id = rct.first_pty_reg_id
    ) sellerdtls_addr1,
    (
        SELECT
            substr(xe.address_line_2, 1, 100)
        FROM
            xle_establishment_v    xe,
            zx_registrations       zr,
            zx_party_tax_profile   ptp
        WHERE
            zr.party_tax_profile_id = ptp.party_tax_profile_id
            AND ptp.party_type_code = 'LEGAL_ESTABLISHMENT'
            AND ptp.party_id = xe.party_id
            AND zr.registration_id = rct.first_pty_reg_id
    ) sellerdtls_addr2,
    (
        SELECT
            substr(xe.town_or_city, 1, 50)
        FROM
            xle_establishment_v    xe,
            zx_registrations       zr,
            zx_party_tax_profile   ptp
        WHERE
            zr.party_tax_profile_id = ptp.party_tax_profile_id
            AND ptp.party_type_code = 'LEGAL_ESTABLISHMENT'
            AND ptp.party_id = xe.party_id
            AND zr.registration_id = rct.first_pty_reg_id
    ) sellerdtls_loc,
    (
        SELECT
            xe.postal_code
        FROM
            xle_establishment_v    xe,
            zx_registrations       zr,
            zx_party_tax_profile   ptp
        WHERE
            zr.party_tax_profile_id = ptp.party_tax_profile_id
            AND ptp.party_type_code = 'LEGAL_ESTABLISHMENT'
            AND ptp.party_id = xe.party_id
            AND zr.registration_id = rct.first_pty_reg_id
    ) sellerdtls_pin,
    (
        SELECT
            flv.tag
        FROM
            xle_establishment_v    xe,
            zx_registrations       zr,
            zx_party_tax_profile   ptp,
            fnd_lookup_values      flv
        WHERE
            zr.party_tax_profile_id = ptp.party_tax_profile_id
            AND ptp.party_type_code = 'LEGAL_ESTABLISHMENT'
            AND ptp.party_id = xe.party_id
            AND zr.registration_id = rct.first_pty_reg_id
            AND upper(xe.region_2) = upper(flv.meaning)
            AND flv.lookup_type = 'CRISIL_STATE_CODE'
            AND flv.enabled_flag = 'Y'
            AND flv.language = 'US'
    ) sellerdtls_stcd,		-- Added by Pratul on 13Jan
       /*(select flv.tag
          from xle_establishment_v xe, fnd_lookup_values flv
         where xe.main_establishment_flag = 'Y'
           and xe.legal_entity_id = rct.legal_entity_id
           and upper(xe.region_2) = upper(flv.meaning)
           and flv.lookup_type = 'CRISIL_STATE_CODE'
           and flv.enabled_flag = 'Y'
           and flv.language = 'US') SellerDtls_Stcd,	Commented by Pratul on 13Jan*/
    NULL sellerdtls_ph,
    NULL sellerdtls_em,
    CASE
        WHEN gst.registration_status_code IN (
            'EXPORT',
            'NOT REGISTERED'
        ) THEN
            'URP'
        ELSE
            substr(gst.registration_number, 1, 15)
    END buyerdtls_gstin,
    substr(hp.party_name, 1, 100) buyerdtls_lglnm,
    substr(hp.party_name, 1, 100) buyerdtls_trdnm,
    substr(hl.address1, 1, 100) buyerdtls_addr1,
    substr(hl.address2, 1, 100) buyerdtls_addr2,
    substr(hl.city, 1, 100) buyerdtls_loc,
    CASE
        WHEN gst.registration_status_code = 'EXPORT' THEN
            '999999'
        ELSE
            hl.postal_code
    END buyerdtls_pin,
    CASE
        WHEN gst.registration_status_code = 'EXPORT' THEN
            '96'
        ELSE
            (
                SELECT
                    tag
                FROM
                    fnd_lookup_values
                WHERE
                    lookup_type = 'CRISIL_STATE_CODE'
                    AND enabled_flag = 'Y'
                    AND language = 'US'
                    AND upper(meaning) = upper(hl.state)
            )
    END buyerdtls_stcd,
    CASE
        WHEN gst.registration_status_code = 'EXPORT' THEN
            '96'
        ELSE
            (
                SELECT
                    flv.tag
                FROM
                    hz_party_site_uses   hpsu,
                    hz_party_sites       hps1,
                    hz_locations         hl1,
                    fnd_lookup_values    flv
                WHERE
                    hpsu.party_site_use_id = rct.ship_to_party_site_use_id
                    AND hpsu.party_site_id = hps1.party_site_id
                    AND hps1.location_id = hl1.location_id
                    AND upper(hl1.state) = upper(flv.meaning)
                    AND flv.lookup_type = 'CRISIL_STATE_CODE'
                    AND flv.enabled_flag = 'Y'
                    AND flv.language = 'US'
            )
    END buyerdtls_pos,
    substr(hca.account_number, 1, 250) buyerdtls_customercode,
    substr(rctl.line_number, 1, 6) itemslist_slno,
    substr(rctl.attribute1, 1, 8) itemslist_hsncd,
    CASE
        WHEN rctl.attribute1 LIKE '99%' THEN
            'Y'
        ELSE
            'N'
    END itemslist_isservc,
    1 itemlist_unit, --Added by Meenal on 30Dec
    abs(regexp_replace(rctl.attribute2, '[^0-9.]') * nvl(rct.exchange_rate, 1)) itemlist_unitprice,
    abs(regexp_replace(rctl.attribute2, '[^0-9.]') * nvl(rct.exchange_rate, 1)) itemslist_totamt, --Added by Meenal on 30Dec
    abs(regexp_replace(rctl.attribute3, '[^0-9.]') * nvl(rct.exchange_rate, 1)) itemlist_discount, --Added by Meenal on 30Dec
    NULL itemslist_pretaxval,
    ( abs(regexp_replace(rctl.attribute2, '[^0-9.]') - regexp_replace(rctl.attribute3, '[^0-9.]')) * nvl(rct.exchange_rate, 1) ) itemslist_assamt
    , --Added by Meenal on 30Dec
    (
        SELECT
            SUM(tax_rate)
        FROM
            zx_lines
        WHERE
            application_id = 222
            AND trx_id = rct.customer_trx_id
            AND trx_line_id = rctl.customer_trx_line_id
            AND tax NOT LIKE '%US_SALES_TAX%'
    ) itemslist_gstrt,
    (
        SELECT
            SUM(tax_rate)
        FROM
            zx_lines
        WHERE
            application_id = 222
            AND trx_id = rct.customer_trx_id
            AND trx_line_id = rctl.customer_trx_line_id
            AND tax LIKE '%CGST%'
    ) itemslist_cgstrt,
    (
        SELECT
            SUM(tax_rate)
        FROM
            zx_lines
        WHERE
            application_id = 222
            AND trx_id = rct.customer_trx_id
            AND trx_line_id = rctl.customer_trx_line_id
            AND tax LIKE '%SGST%'
    ) itemslist_sgstrt,
    (
        SELECT
            SUM(tax_rate)
        FROM
            zx_lines
        WHERE
            application_id = 222
            AND trx_id = rct.customer_trx_id
            AND trx_line_id = rctl.customer_trx_line_id
            AND tax LIKE '%IGST%'
    ) itemslist_igstrt,
    (
        SELECT
            SUM(tax_rate)
        FROM
            zx_lines
        WHERE
            application_id = 222
            AND trx_id = rct.customer_trx_id
            AND trx_line_id = rctl.customer_trx_line_id
            AND tax LIKE '%CESS%'
    ) itemslist_cesrt,
    CASE
        WHEN (
            SELECT
                COUNT(1)
            FROM
                zx_lines
            WHERE
                application_id = 222
                AND trx_id = rct.customer_trx_id
                AND trx_line_id = rctl.customer_trx_line_id
                AND tax LIKE '%IGST%'
        ) > 0 THEN
            round(((abs(regexp_replace(rctl.attribute2, '[^0-9.]') - regexp_replace(rctl.attribute3, '[^0-9.]')) *(
                SELECT
                    SUM(tax_rate)
                FROM
                    zx_lines
                WHERE
                    application_id = 222
                    AND trx_id = rct.customer_trx_id
                    AND trx_line_id = rctl.customer_trx_line_id
                    AND tax LIKE '%IGST%'
            ) * nvl(rct.exchange_rate, 1)) / 100), 5)
        ELSE
            NULL
    END itemslist_igstamt,
    CASE
        WHEN (
            SELECT
                COUNT(1)
            FROM
                zx_lines
            WHERE
                application_id = 222
                AND trx_id = rct.customer_trx_id
                AND trx_line_id = rctl.customer_trx_line_id
                AND tax LIKE '%CGST%'
        ) > 0 THEN
            round(((abs(regexp_replace(rctl.attribute2, '[^0-9.]') - regexp_replace(rctl.attribute3, '[^0-9.]')) *(
                SELECT
                    SUM(tax_rate)
                FROM
                    zx_lines
                WHERE
                    application_id = 222
                    AND trx_id = rct.customer_trx_id
                    AND trx_line_id = rctl.customer_trx_line_id
                    AND tax LIKE '%CGST%'
            ) * nvl(rct.exchange_rate, 1)) / 100), 5)
        ELSE
            NULL
    END itemslist_cgstamt,
    CASE
        WHEN (
            SELECT
                COUNT(1)
            FROM
                zx_lines
            WHERE
                application_id = 222
                AND trx_id = rct.customer_trx_id
                AND trx_line_id = rctl.customer_trx_line_id
                AND tax LIKE '%SGST%'
        ) > 0 THEN
            round(((abs(regexp_replace(rctl.attribute2, '[^0-9.]') - regexp_replace(rctl.attribute3, '[^0-9.]')) *(
                SELECT
                    SUM(tax_rate)
                FROM
                    zx_lines
                WHERE
                    application_id = 222
                    AND trx_id = rct.customer_trx_id
                    AND trx_line_id = rctl.customer_trx_line_id
                    AND tax LIKE '%SGST%'
            ) * nvl(rct.exchange_rate, 1)) / 100), 5)
        ELSE
            NULL
    END itemslist_sgstamt,
    CASE
        WHEN (
            SELECT
                COUNT(1)
            FROM
                zx_lines
            WHERE
                application_id = 222
                AND trx_id = rct.customer_trx_id
                AND trx_line_id = rctl.customer_trx_line_id
                AND tax LIKE '%CESS%'
        ) > 0 THEN
            round(((abs(regexp_replace(rctl.attribute2, '[^0-9.]') - regexp_replace(rctl.attribute3, '[^0-9.]')) *(
                SELECT
                    SUM(tax_rate)
                FROM
                    zx_lines
                WHERE
                    application_id = 222
                    AND trx_id = rct.customer_trx_id
                    AND trx_line_id = rctl.customer_trx_line_id
                    AND tax LIKE '%CESS%'
            ) * nvl(rct.exchange_rate, 1)) / 100), 5)
        ELSE
            NULL
    END itemslist_cesamt,
    round(((abs(regexp_replace(rctl.attribute2, '[^0-9.]') - regexp_replace(rctl.attribute3, '[^0-9.]')) * nvl(rct.exchange_rate,
    1)) +((abs(regexp_replace(rctl.attribute2, '[^0-9.]') - regexp_replace(rctl.attribute3, '[^0-9.]')) *(
        SELECT
            nvl(SUM(tax_rate), 0)
        FROM
            zx_lines
        WHERE
            application_id = 222
            AND trx_id = rct.customer_trx_id
            AND trx_line_id = rctl.customer_trx_line_id
            AND tax NOT LIKE '%US_SALES_TAX%'
    ) * nvl(rct.exchange_rate, 1)) / 100)), 5) itemslist_totitemval,
    'IN' itemslist_orgcntry,
    (
        SELECT
            substr(gcc.segment2, 1, 250)
        FROM
            ra_cust_trx_line_gl_dist_all   rctlgd,
            gl_code_combinations           gcc
        WHERE
            rctlgd.account_class = 'REV'
            AND rctlgd.code_combination_id = gcc.code_combination_id
            AND rctlgd.customer_trx_line_id = rctl.customer_trx_line_id
            AND ROWNUM = 1
    ) itemlist_glcoderevenueexpense,
    '212056' itemlist_glcodeigst,
    '212057' itemlist_glcodecgst,
    '212058' itemlist_glcodesgst,
    '212059' itemlist_glcodecess,
    (
        SELECT
            substr(gcc.segment1, 1, 250)
        FROM
            ra_cust_trx_line_gl_dist_all   rctlgd,
            gl_code_combinations           gcc
        WHERE
            rctlgd.account_class = 'REC'
            AND rctlgd.code_combination_id = gcc.code_combination_id
            AND rctlgd.customer_trx_id = rct.customer_trx_id
            AND ROWNUM = 1
    ) itemlist_mis1,
    (
        SELECT
            substr(gcc.segment2, 1, 250)
        FROM
            ra_cust_trx_line_gl_dist_all   rctlgd,
            gl_code_combinations           gcc
        WHERE
            rctlgd.account_class = 'REC'
            AND rctlgd.code_combination_id = gcc.code_combination_id
            AND rctlgd.customer_trx_id = rct.customer_trx_id
            AND ROWNUM = 1
    ) itemlist_mis_2,
    (
        SELECT
            substr(gcc.segment3, 1, 250)
        FROM
            ra_cust_trx_line_gl_dist_all   rctlgd,
            gl_code_combinations           gcc
        WHERE
            rctlgd.account_class = 'REC'
            AND rctlgd.code_combination_id = gcc.code_combination_id
            AND rctlgd.customer_trx_id = rct.customer_trx_id
            AND ROWNUM = 1
    ) itemlist_mis_3,
    (
        SELECT
            substr(gcc.segment4, 1, 250)
        FROM
            ra_cust_trx_line_gl_dist_all   rctlgd,
            gl_code_combinations           gcc
        WHERE
            rctlgd.account_class = 'REC'
            AND rctlgd.code_combination_id = gcc.code_combination_id
            AND rctlgd.customer_trx_id = rct.customer_trx_id
            AND ROWNUM = 1
    ) itemlist_mis_4,
    (
        SELECT
            substr(gcc.segment5, 1, 250)
        FROM
            ra_cust_trx_line_gl_dist_all   rctlgd,
            gl_code_combinations           gcc
        WHERE
            rctlgd.account_class = 'REC'
            AND rctlgd.code_combination_id = gcc.code_combination_id
            AND rctlgd.customer_trx_id = rct.customer_trx_id
            AND ROWNUM = 1
    ) itemlist_mis_5,
    (
        SELECT
            substr(gcc.segment6, 1, 250)
        FROM
            ra_cust_trx_line_gl_dist_all   rctlgd,
            gl_code_combinations           gcc
        WHERE
            rctlgd.account_class = 'REC'
            AND rctlgd.code_combination_id = gcc.code_combination_id
            AND rctlgd.customer_trx_id = rct.customer_trx_id
            AND ROWNUM = 1
    ) itemlist_mis_6,
    (
        SELECT
            substr(gcc.segment7, 1, 250)
        FROM
            ra_cust_trx_line_gl_dist_all   rctlgd,
            gl_code_combinations           gcc
        WHERE
            rctlgd.account_class = 'REC'
            AND rctlgd.code_combination_id = gcc.code_combination_id
            AND rctlgd.customer_trx_id = rct.customer_trx_id
            AND ROWNUM = 1
    ) itemlist_mis_7,
    (
        SELECT
            substr(gcc.segment8, 1, 250)
        FROM
            ra_cust_trx_line_gl_dist_all   rctlgd,
            gl_code_combinations           gcc
        WHERE
            rctlgd.account_class = 'REC'
            AND rctlgd.code_combination_id = gcc.code_combination_id
            AND rctlgd.customer_trx_id = rct.customer_trx_id
            AND ROWNUM = 1
    ) itemlist_mis_8,
    (
        SELECT
            substr(gcc.segment9, 1, 250)
        FROM
            ra_cust_trx_line_gl_dist_all   rctlgd,
            gl_code_combinations           gcc
        WHERE
            rctlgd.account_class = 'REC'
            AND rctlgd.code_combination_id = gcc.code_combination_id
            AND rctlgd.customer_trx_id = rct.customer_trx_id
            AND ROWNUM = 1
    ) itemlist_mis_9,
    (
        SELECT
            abs(SUM(regexp_replace(attribute2, '[^0-9.]') - regexp_replace(attribute3, '[^0-9.]')) * nvl(rct.exchange_rate, 1))
        FROM
            ra_customer_trx_lines_all
        WHERE
            customer_trx_id = rct.customer_trx_id
    ) valdtls_assval,
    round((((
        SELECT
            abs(SUM(regexp_replace(attribute2, '[^0-9.]') - regexp_replace(attribute3, '[^0-9.]')))
        FROM
            ra_customer_trx_lines_all
        WHERE
            customer_trx_id = rct.customer_trx_id
    ) *(
        SELECT
            SUM(tax_rate)
        FROM
            zx_lines
        WHERE
            application_id = 222
            AND trx_id = rct.customer_trx_id
            AND trx_line_id = rctl.customer_trx_line_id
            AND tax LIKE '%CGST%'
    ) * nvl(rct.exchange_rate, 1)) / 100), 5) valdtls_cgstval,
    round((((
        SELECT
            abs(SUM(regexp_replace(attribute2, '[^0-9.]') - regexp_replace(attribute3, '[^0-9.]')))
        FROM
            ra_customer_trx_lines_all
        WHERE
            customer_trx_id = rct.customer_trx_id
    ) *(
        SELECT
            SUM(tax_rate)
        FROM
            zx_lines
        WHERE
            application_id = 222
            AND trx_id = rct.customer_trx_id
            AND trx_line_id = rctl.customer_trx_line_id
            AND tax LIKE '%SGST%'
    ) * nvl(rct.exchange_rate, 1)) / 100), 5) valdtls_sgstval,
    round((((
        SELECT
            abs(SUM(regexp_replace(attribute2, '[^0-9.]') - regexp_replace(attribute3, '[^0-9.]')))
        FROM
            ra_customer_trx_lines_all
        WHERE
            customer_trx_id = rct.customer_trx_id
    ) *(
        SELECT
            SUM(tax_rate)
        FROM
            zx_lines
        WHERE
            application_id = 222
            AND trx_id = rct.customer_trx_id
            AND trx_line_id = rctl.customer_trx_line_id
            AND tax LIKE '%IGST%'
    ) * nvl(rct.exchange_rate, 1)) / 100), 5) valdtls_igstval,
    round((((
        SELECT
            abs(SUM(regexp_replace(attribute2, '[^0-9.]') - regexp_replace(attribute3, '[^0-9.]')))
        FROM
            ra_customer_trx_lines_all
        WHERE
            customer_trx_id = rct.customer_trx_id
    ) *(
        SELECT
            SUM(tax_rate)
        FROM
            zx_lines
        WHERE
            application_id = 222
            AND trx_id = rct.customer_trx_id
            AND trx_line_id = rctl.customer_trx_line_id
            AND tax LIKE '%CESS%'
    ) * nvl(rct.exchange_rate, 1)) / 100), 5) valdtls_cesval,
    0 valdtls_discount, -- Added by Pratul on 06Jan
    abs((
        SELECT
            SUM(rctlgd.acctd_amount)
        FROM
            ra_cust_trx_line_gl_dist_all rctlgd
        WHERE
            rctlgd.account_class = 'ROUND'
            AND rctlgd.customer_trx_id = rct.customer_trx_id
    )) valdtls_rndoffamt,
    round(((
        SELECT
            nvl(abs(SUM(regexp_replace(attribute2, '[^0-9.]') - regexp_replace(attribute3, '[^0-9.]')) * nvl(rct.exchange_rate, 1
            )), 0)
        FROM
            ra_customer_trx_lines_all
        WHERE
            customer_trx_id = rct.customer_trx_id
            AND line_type = 'LINE'
    ) +(((
        SELECT
            nvl(abs(SUM(regexp_replace(attribute2, '[^0-9.]') - regexp_replace(attribute3, '[^0-9.]'))), 0)
        FROM
            ra_customer_trx_lines_all
        WHERE
            customer_trx_id = rct.customer_trx_id
            AND line_type = 'LINE'
    ) *(
        SELECT
            nvl(SUM(tax_rate), 0)
        FROM
            zx_lines
        WHERE
            application_id = 222
            AND trx_id = rct.customer_trx_id
            AND trx_line_id = rctl.customer_trx_line_id
            AND tax NOT LIKE '%US_SALES_TAX%'
    ) * nvl(rct.exchange_rate, 1)) / 100)), 5) valdtls_totinvval,
    substr(rct.trx_number, 1, 250) refdtls_accountingdocno,
    (
        SELECT
            to_char(rctlgd.gl_date, 'DD/MM/YYYY')
        FROM
            ra_cust_trx_line_gl_dist_all rctlgd
        WHERE
            1 = 1 ---rctlgd.customer_trx_line_id = rctl.customer_trx_line_id
            AND rctlgd.customer_trx_id = rct.customer_trx_id
            AND rctlgd.account_class = 'REC'
            AND ROWNUM = 1
    ) refdtls_accountingdocdt,
    (
        SELECT
            to_char(rctlgd.gl_date, 'MON-YY')
        FROM
            ra_cust_trx_line_gl_dist_all rctlgd
        WHERE
            1 = 1 --rctlgd.customer_trx_line_id = rctl.customer_trx_line_id
            AND rctlgd.customer_trx_id = rct.customer_trx_id
            AND rctlgd.account_class = 'REC'
            AND ROWNUM = 1
    ) miscolumns_returnperiod,
    rct.customer_trx_id,
    CASE
        WHEN ( rctt.attribute_category = 'CRISIL_Additional_Information'
               AND upper(rctt.attribute1) = 'YES' ) THEN
            'Y'
        ELSE
            'N'
    END einvoice_applicable,
    (
        SELECT
            trx_number
        FROM
            ra_customer_trx_all rct1
        WHERE
            rct1.customer_trx_id = rct.previous_customer_trx_id
    ) orig_inv_num,
    (
        SELECT
            to_char(trx_date, 'DD/MM/YYYY')
        FROM
            ra_customer_trx_all rct1
        WHERE
            rct1.customer_trx_id = rct.previous_customer_trx_id
    ) orig_inv_date,
    rctt.name         trx_type
FROM
    ra_customer_trx_all            rct,
    ra_customer_trx_lines_all      rctl,
    ra_cust_trx_line_gl_dist_all   rctlgda,  --Added by Ankit on 12thDec2020 for finding Accounting invoices
    ra_batch_sources_all           rbs,
    ra_cust_trx_types_all          rctt,
    hz_cust_accounts               hca,
    hz_parties                     hp,
    hz_cust_site_uses_all          hcsu,
    hz_cust_acct_sites_all         hcas,
    hz_party_sites                 hps,
    hz_locations                   hl,
    fun_all_business_units_v       fab,
    (
        SELECT
            zr.registration_number,
            ptp.party_id,
            zr.registration_status_code
        FROM
            zx_registrations       zr,
            zx_party_tax_profile   ptp
        WHERE
            zr.party_tax_profile_id = ptp.party_tax_profile_id
            AND ptp.party_type_code = 'THIRD_PARTY_SITE'
            AND zr.tax_regime_code = 'IN_GST'
            AND trunc(sysdate) BETWEEN trunc(zr.effective_from) AND nvl(trunc(zr.effective_to), trunc(sysdate))
    ) gst
WHERE
    rct.batch_source_seq_id = rbs.batch_source_seq_id
    AND rct.cust_trx_type_seq_id = rctt.cust_trx_type_seq_id
    AND rct.customer_trx_id = rctl.customer_trx_id
    AND rct.customer_trx_id = rctlgda.customer_trx_id --Added by Ankit on 12thDec2020 for finding Accounting invoices
    AND rctlgda.gl_posted_date IS NOT NULL --Added by Ankit on 12thDec2020 for finding Accounting invoices
    AND rctlgda.account_class = 'REC'  --Added by Ankit on 12thDec2020 for finding Accounting invoices
    AND rctl.line_type = 'LINE'
    AND rctt.type = 'CM'
    AND rct.bill_to_customer_id = hca.cust_account_id
    AND hca.party_id = hp.party_id
    AND rct.bill_to_site_use_id = hcsu.site_use_id
    AND hcsu.cust_acct_site_id = hcas.cust_acct_site_id
    AND hcas.party_site_id = hps.party_site_id
    AND hps.location_id = hl.location_id
    AND hps.party_site_id = gst.party_id (+)
    AND rct.complete_flag = 'Y'
   --and rctt.attribute_category = 'CRISIL_Additional_Information'
   --and UPPER(rctt.attribute1) = 'YES' --Added by Meenal on 30Dec for including only applicable invoices
    AND rctl.attribute_category IS NOT NULL
    AND fab.bu_id = rct.org_id
    AND fab.bu_name IN (
        'CRISIL LIMITED',
        'CRISIL Ratings Limited',
        /*Commected by Filix Ram dated 30.04.2021 --'PRAGMATIX SERVICES PRIVATE LIMITED',*/
        'CRISIL Risk and Infrastructure Solutions Limited'
    )
    AND rctt.attribute_category = 'CRISIL_Additional_Information'
    AND upper(rctt.attribute1) = 'YES'
    /*Commected by Filix Ram dated 30.04.2021*/
    /*AND NOT EXISTS (
        SELECT
            COUNT(1)
        FROM
            zx_registrations           zr,
            zx_party_tax_profile       ptp,
            xle_establishment_v        xe,
            fun_all_business_units_v   fab
        WHERE
            zr.party_tax_profile_id = ptp.party_tax_profile_id
            AND ptp.party_type_code = 'LEGAL_ESTABLISHMENT'
            AND zr.registration_status_code = 'SEZ'
            AND ptp.party_id = xe.party_id
            AND xe.legal_entity_id = fab.legal_entity_id
            AND fab.bu_id = rct.org_id
            AND zr.registration_id = rct.first_pty_reg_id
    )*/
    /*end Commected by Filix Ram dated 30.04.2021*/
    AND gst.registration_status_code NOT IN (
        'NOT REGISTERED',
        'EXPORT'
    )
    /*Commected by Filix Ram dated 30.04.2021*/
    /*AND fab.bu_name NOT IN (
        'CRISIL Ratings Limited',
        'PRAGMATIX SERVICES PRIVATE LIMITED'
    )*/
    /*end Commected by Filix Ram dated 30.04.2021*/
    AND rct.attribute6 IS NULL
    AND fab.bu_name = :p_bu_name
    AND rct.trx_number = nvl(:p_trx_number, rct.trx_number)
    AND to_char((
        SELECT
            gl_date
        FROM
            ra_cust_trx_line_gl_dist_all
        WHERE
            customer_trx_id = rct.customer_trx_id
            AND account_class = 'REC'
            AND ROWNUM = 1
    ), 'MM-DD-YYYY') BETWEEN to_char(fnd_timezone_pub.adjust_datetime(:p_from_period, 'GMT', 'Asia/Calcutta'), 'MM-DD-YYYY') AND to_char
    (fnd_timezone_pub.adjust_datetime(:p_to_period, 'GMT', 'Asia/Calcutta'), 'MM-DD-YYYY')
======================================================================================================
---------------------Enterprise Structure Report Data Model------------------------------
--TOP_HYPERLINK_LOOKUP
SELECT HcmLookupPEO.MEANING 
   FROM HCM_LOOKUPS HcmLookupPEO
   WHERE HcmLookupPEO.LOOKUP_CODE = 'TOP'
   AND   HcmLookupPEO.LOOKUP_TYPE = 'ORA_CMP_TCS_RTF_LINK_LABELS'
   AND   HcmLookupPEO.ENABLED_FLAG = 'Y'
   
--TREE_DATA
SELECT value_set_code,
  DECODE(pos, 9, decode(summary_flag,'Y',value,NULL), 8, NULL, 7, NULL, 6, NULL, 5, NULL, 4, NULL, 3, NULL, 2, NULL, 1, NULL, 0, NULL) AS Level9,
  DECODE(pos, 9, NULL, 8, decode(summary_flag,'Y',value,NULL), 7, NULL, 6, NULL, 5, NULL, 4, NULL, 3, NULL, 2, NULL, 1, NULL, 0, NULL) AS Level8,
  DECODE(pos, 9, NULL, 8, NULL, 7, decode(summary_flag,'Y',value,NULL), 6, NULL, 5, NULL, 4, NULL, 3, NULL, 2, NULL, 1, NULL, 0, NULL) AS Level7,
  DECODE(pos, 9, NULL, 8, NULL, 7, NULL, 6, decode(summary_flag,'Y',value,NULL), 5, NULL, 4, NULL, 3, NULL, 2, NULL, 1, NULL, 0, NULL) AS Level6,
  DECODE(pos, 9, NULL, 8, NULL, 7, NULL, 6, NULL, 5, decode(summary_flag,'Y',value,NULL), 4, NULL, 3, NULL, 2, NULL, 1, NULL, 0, NULL) AS Level5,
  DECODE(pos, 9, NULL, 8, NULL, 7, NULL, 6, NULL, 5, NULL, 4, decode(summary_flag,'Y',value,NULL), 3, NULL, 2, NULL, 1, NULL, 0, NULL) AS Level4,
  DECODE(pos, 9, NULL, 8, NULL, 7, NULL, 6, NULL, 5, NULL, 4, NULL, 3, decode(summary_flag,'Y',value,NULL), 2, NULL, 1, NULL, 0, NULL) AS Level3,
  DECODE(pos, 9, NULL, 8, NULL, 7, NULL, 6, NULL, 5, NULL, 4, NULL, 3, NULL, 2, decode(summary_flag,'Y',value,NULL), 1, NULL, 0, NULL) AS Level2,
  DECODE(pos, 9, NULL, 8, NULL, 7, NULL, 6, NULL, 5, NULL, 4, NULL, 3, NULL, 2, NULL, 1, decode(summary_flag,'Y',value,NULL), 0, NULL) AS Level1,
  decode(summary_flag,'N',value,NULL) AS child,
  summary_flag,
  description,
  (select meaning from fnd_LOOKUPS where LOOKUP_TYPE = 'ACCOUNT_TYPE' and lookup_code = account_type) AS account_type,
  (select meaning from fnd_LOOKUPS where LOOKUP_TYPE = 'FINANCIAL_CATEGORY' and  lookup_code = financial_category ) AS financial_category,
  segment_label,
  tree_code,
  segment_code,
  sequence_number,
  tree_version_name
FROM
  (SELECT pk1_start_value AS value,
    (
    (SELECT MAX(ftn.depth)
    FROM fnd_tree_node ftn
    WHERE ftn.tree_structure_code = 'GL_ACCT_FLEX'
    AND   ftn.tree_code = val.tree_code
    AND   ftn.tree_version_id = val.tree_version_id
    ) - depth ) AS pos,
    description,
    summary_flag,
    account_type,
    financial_category,
    segment_label,
    value_set_code,
    tree_code,
    segment_code,
    sequence_number,
    tree_version_name
  FROM
    (SELECT ftn.pk1_start_value,
      ftn.data_source_id,
      ftn.depth,
      ftn.parent_pk1_value,
      vsval.description,
      vsval.summary_flag,
      vsval.flex_value_attribute3 as account_type,
      vsval.flex_value_attribute6 as financial_category,
      label.segment_label_code as segment_label,
      vset.value_set_code,
      ftn.tree_code,
      ftn.sort_order,
      fksi.segment_code,
      fks.sequence_number,
      ftver.tree_version_name,
      ftver.tree_version_id
     FROM fnd_tree_node       ftn,
          fnd_tree_version_vl ftver,
          fnd_vs_value_sets   vset,
          fnd_vs_values_vl vsval,
          fnd_kf_segment_instances fksi,
          fnd_kf_segments_b fks,
          fnd_kf_str_instances_b fksib,
          fnd_kf_labeled_segments label
    WHERE ftn.tree_structure_code         = ftver.tree_structure_code
    AND   ftn.tree_code                   = ftver.tree_code
    AND   ftn.tree_version_id             = ftver.tree_version_id
    and   ftn.pk1_start_value             = vsval.value
    AND   ftn.pk2_start_value             = vset.value_set_code
    AND   ftver.tree_structure_code       = 'GL_ACCT_FLEX'
    and   vset.value_set_id               = vsval.value_set_id
    and   fksi.value_set_id               = vset.value_set_id
    and   fks.structure_id                = fksib.structure_id
    and   fks.segment_code                = fksi.segment_code
    and   label.structure_id (+)             = fks.structure_id
    and   label.segment_code  (+)            = fksi.segment_code
    and   label.segment_label_code (+)       = 'GL_ACCOUNT'
    and   fksi.structure_instance_id      = fksib.structure_instance_id
    AND   fksib.application_id            = 101
    AND   fksib.key_flexfield_code        = 'GL#'
    and   fksib.structure_instance_number = :P_CHART_OF_ACCOUNTS_ID
    AND   ftver.status                    = 'ACTIVE'
    AND   SYSDATE BETWEEN ftver.effective_start_date AND NVL(ftver.effective_end_date,SYSDATE)
    AND   ftver.tree_code = fksi.tree_code
    ) val
    START WITH parent_pk1_value IS NULL
    CONNECT BY prior pk1_start_value = parent_pk1_value
    and prior value_set_code = value_set_code
    and prior tree_code = tree_code
    and prior segment_code = segment_code
    ORDER SIBLINGS BY nvl(summary_flag,'Y') ASC, sort_order ASC
  )
 
 --SEGMENT_DATA
 SELECT   FND_KF_SEGMENTS_VL.SEQUENCE_NUMBER,
  FND_KF_SEGMENTS_VL.NAME,
  FND_KF_SEGMENTS_VL.SEGMENT_CODE,
  FND_KF_STRUCTURES_VL.DELIMITER,
  FND_KF_SEGMENTS_VL.COLUMN_NAME,
  FND_KF_SEGMENTS_VL.PROMPT,
  --DECODE(FND_KF_SEGMENTS_VL.ENABLED_FLAG,'Y','Yes','No') ENABLED,
  fnd1.MEANING ENABLED,
  FND_KF_SEGMENTS_VL.DISPLAY_WIDTH,
  FND_KF_SEGMENTS_VL.SHORT_PROMPT,
  FND_VS_VALUE_SETS.VALUE_SET_CODE,
  --DECODE(FND_KF_SEGMENT_INSTANCES.QUERY_REQUIRED_TYPE,'OPTIONAL','Optional',FND_KF_SEGMENT_INSTANCES.QUERY_REQUIRED_TYPE) QUERY_REQUIRED_TYPE,
  --DECODE(FND_KF_SEGMENT_INSTANCES.REQUIRED_FLAG,'Y','Yes','No') REQUIRED_FLAG,
  --DECODE(FND_KF_SEGMENT_INSTANCES.DISPLAY_FLAG,'Y','Yes','No') DISPLAY_FLAG
  fnd2.MEANING QUERY_REQUIRED_TYPE,
  fnd3.MEANING REQUIRED_FLAG,
  fnd4.MEANING DISPLAY_FLAG
FROM FUSION.FND_KF_STR_INSTANCES_VL FND_KF_STR_INSTANCES_VL,
  FUSION.FND_KF_STRUCTURES_VL FND_KF_STRUCTURES_VL,
  FUSION.FND_KF_SEGMENTS_VL FND_KF_SEGMENTS_VL,
  FND_VS_VALUE_SETS FND_VS_VALUE_SETS,
  FND_KF_SEGMENT_INSTANCES FND_KF_SEGMENT_INSTANCES,
  FND_LOOKUPS fnd1,
  FND_LOOKUPS fnd2,
  FND_LOOKUPS fnd3,
  FND_LOOKUPS fnd4
WHERE FND_KF_STR_INSTANCES_VL.STRUCTURE_INSTANCE_NUMBER=:P_CHART_OF_ACCOUNTS_ID
AND FND_KF_STRUCTURES_VL.STRUCTURE_ID                  = FND_KF_STR_INSTANCES_VL.STRUCTURE_ID
AND FND_KF_SEGMENTS_VL.STRUCTURE_ID                    =FND_KF_STRUCTURES_VL.STRUCTURE_ID
AND FND_KF_STR_INSTANCES_VL.KEY_FLEXFIELD_CODE         ='GL#'
AND FND_VS_VALUE_SETS.VALUE_SET_ID                  =FND_KF_SEGMENT_INSTANCES.VALUE_SET_ID
AND FND_KF_SEGMENT_INSTANCES.STRUCTURE_INSTANCE_ID    =FND_KF_STR_INSTANCES_VL.STRUCTURE_INSTANCE_ID
AND FND_KF_SEGMENT_INSTANCES.SEGMENT_CODE=FND_KF_SEGMENTS_VL.SEGMENT_CODE
AND fnd1.LOOKUP_TYPE = 'YES_NO'
AND fnd1.LOOKUP_CODE = FND_KF_SEGMENTS_VL.ENABLED_FLAG
AND fnd2.LOOKUP_TYPE = 'FND_KF_SEGMENT_QUERY_REQ_TYPES'
AND fnd2.LOOKUP_CODE = FND_KF_SEGMENT_INSTANCES.QUERY_REQUIRED_TYPE
AND fnd3.LOOKUP_TYPE = 'YES_NO'
AND fnd3.LOOKUP_CODE = FND_KF_SEGMENT_INSTANCES.REQUIRED_FLAG
AND fnd4.LOOKUP_TYPE = 'YES_NO'
AND fnd4.LOOKUP_CODE = FND_KF_SEGMENT_INSTANCES.DISPLAY_FLAG
ORDER BY SEQUENCE_NUMBER

--VALUE_SET_DATA
SELECT  vs.VALUE_SET_CODE,
  vs.DESCRIPTION,
  --DECODE(vs.VALIDATION_TYPE,'INDEP','Independent','FORMAT','Format Only','TABLE','Table','SUBSET','Subset','DEP','Dependent', vs.VALIDATION_TYPE) VALIDATION_TYPE,
 -- DECODE(vs.VALUE_DATA_TYPE,'TIMESTAMP','Date Time','NUMBER','Number','DATE','Date','VARCHAR2','Character',vs.VALUE_DATA_TYPE) VALUE_DATA_TYPE,
  --DECODE(vs.PROTECTED_FLAG,'Y','Yes','No') PROTECTED_FLAG,
  fnd1.MEANING VALIDATION_TYPE,
  fnd2.MEANING VALUE_DATA_TYPE,
  fnd3.MEANING PROTECTED_FLAG,
  fksegi.segment_code
FROM FND_KF_SEGMENT_INSTANCES fksegi,
  FND_VS_VALUE_SETS vs,
  FND_KF_STR_INSTANCES_VL fkstri,
  FND_KF_SEGMENTS_VL fkseg,
  FND_LOOKUPS fnd1,
  FND_LOOKUPS fnd2,
  FND_LOOKUPS fnd3
WHERE vs.VALUE_SET_ID                  = fksegi.VALUE_SET_ID
AND fksegi.STRUCTURE_INSTANCE_ID       = fkstri.STRUCTURE_INSTANCE_ID
AND fkstri.STRUCTURE_INSTANCE_NUMBER   = :P_CHART_OF_ACCOUNTS_ID
AND fkstri.KEY_FLEXFIELD_CODE          ='GL#'
AND fkstri.STRUCTURE_ID = fkseg.STRUCTURE_ID               
and fkseg.segment_code=fksegi.segment_code
AND fnd1.LOOKUP_TYPE = 'FND_VS_VALIDATION_TYPES'
AND fnd1.LOOKUP_CODE = vs.VALIDATION_TYPE
AND fnd2.LOOKUP_TYPE = 'FND_VS_VALUE_DATA_TYPES'
AND fnd2.LOOKUP_CODE = vs.VALUE_DATA_TYPE
AND fnd3.LOOKUP_TYPE = 'YES_NO'
AND fnd3.LOOKUP_CODE = vs.PROTECTED_FLAG
and  not exists ( select 1 
                 from FND_KF_SEGMENT_INSTANCES fksegi1, 
                      FND_KF_SEGMENTS_VL fkseg1  
                where fksegi1.STRUCTURE_INSTANCE_ID = fksegi.STRUCTURE_INSTANCE_ID 
                AND   fkseg1.segment_code=fksegi1.segment_code
                AND   fksegi1.VALUE_SET_ID = fksegi.VALUE_SET_ID
                and   fkseg1.structure_id = fkseg.structure_id
                and   fkseg1.sequence_number < fkseg.sequence_number )
order by  fkseg.sequence_number

--FND_KF_STR_INSTANCES_VL
SELECT FND_KF_STR_INSTANCES_VL.NAME,
  FND_KF_STR_INSTANCES_VL.DESCRIPTION, 
  FND_KF_STRUCTURES_VL.NAME STRUCTURE_NAME,
  FND_KF_STRUCTURES_VL.STRUCTURE_CODE,
  FND_KF_STRUCTURES_VL.DELIMITER,
  --DECODE(FND_KF_STR_INSTANCES_VL.ENABLED_FLAG,'Y','Yes','No') ENABLED,
  --DECODE(DYNAMIC_COMBO_CREATION_FLAG,'Y','Yes','No') DYNAMIC_COMBO_CREATION_FLAG
  FND_LOOKUPS1.MEANING ENABLED,
  FND_LOOKUPS2.MEANING DYNAMIC_COMBO_CREATION_FLAG
FROM FUSION.FND_KF_STR_INSTANCES_VL FND_KF_STR_INSTANCES_VL, FUSION.FND_KF_STRUCTURES_VL FND_KF_STRUCTURES_VL,
     FUSION.FND_LOOKUPS FND_LOOKUPS1, FUSION.FND_LOOKUPS FND_LOOKUPS2
WHERE FND_KF_STR_INSTANCES_VL.STRUCTURE_INSTANCE_NUMBER=:P_CHART_OF_ACCOUNTS_ID
AND FND_KF_STRUCTURES_VL.STRUCTURE_ID = FND_KF_STR_INSTANCES_VL.STRUCTURE_ID
AND FND_KF_STR_INSTANCES_VL.KEY_FLEXFIELD_CODE         ='GL#'
AND FND_LOOKUPS1.LOOKUP_TYPE = 'YES_NO'
AND FND_LOOKUPS1.LOOKUP_CODE = FND_KF_STR_INSTANCES_VL.ENABLED_FLAG
AND FND_LOOKUPS2.LOOKUP_TYPE = 'YES_NO'
AND FND_LOOKUPS2.LOOKUP_CODE = DYNAMIC_COMBO_CREATION_FLAG

--GL_LEDGER_LE_V
SELECT GL_LEDGER_LE_V.CHART_OF_ACCOUNTS_ID AS CHART_OF_ACCOUNTS_ID,
GL_LEDGER_LE_V.LEDGER_NAME,
  XLE_ENTITY_PROFILES.LEGAL_ENTITY_ID,
  XLE_ENTITY_PROFILES.PARTY_ID,
  XLE_ENTITY_PROFILES.LEGAL_ENTITY_IDENTIFIER,
  XLE_ENTITY_PROFILES.NAME,
  XLE_ENTITY_PROFILES.GEOGRAPHY_ID,
  XLE_ENTITY_PROFILES.TRANSACTING_ENTITY_FLAG,
  XLE_ENTITY_PROFILES.EFFECTIVE_FROM,
  XLE_ENTITY_PROFILES.EFFECTIVE_TO,
  XLE_ENTITY_PROFILES.OBJECT_VERSION_NUMBER,
  XLE_ENTITY_PROFILES.ACTIVITY_CODE,
  XLE_ENTITY_PROFILES.SUB_ACTIVITY_CODE,
  XLE_ENTITY_PROFILES.TYPE_OF_COMPANY,
  XLE_ENTITY_PROFILES.LEGAL_EMPLOYER_FLAG,
  XLE_ENTITY_PROFILES.PARENT_PSU_ID,
  XLE_ENTITY_PROFILES.PSU_FLAG,
  GeographyPEO.GEOGRAPHY_ID AS GEOGRAPHY_ID1,
  TerritoryPEO.TERRITORY_SHORT_NAME,
  TerritoryPEO.TERRITORY_CODE,
  LocationDPEO.LOCATION_ID,
  LocationDPEO.ADDRESS1,
  LocationDPEO.ADDRESS2,
  LocationDPEO.ADDRESS3,
  LocationDPEO.CITY,
  LocationDPEO.POSTAL_CODE,
  LocationDPEO.STATE,
  LocationDPEO.COUNTY,
  LocationDPEO.PROVINCE,
  RegistrationPEO.REGISTRATION_NUMBER,
  RegistrationPEO.REGISTRATION_ID,
  LocationDPEO.DESCRIPTION,
  HZ_FORMAT_PUB.format_address(LocationDPEO.LOCATION_ID) FORMATTED_ADDRESS 
FROM FUSION.GL_LEDGER_LE_V GL_LEDGER_LE_V,
  FUSION.XLE_ENTITY_PROFILES XLE_ENTITY_PROFILES,
   FUSION.HZ_GEOGRAPHIES GeographyPEO,
   FUSION.FND_TERRITORIES_VL TerritoryPEO,
   FUSION.XLE_REGISTRATIONS RegistrationPEO,
   FUSION.HZ_LOCATIONS LocationDPEO
WHERE GL_LEDGER_LE_V.LEGAL_ENTITY_ID      = XLE_ENTITY_PROFILES.LEGAL_ENTITY_ID
AND GL_LEDGER_LE_V. CHART_OF_ACCOUNTS_ID                  =:P_CHART_OF_ACCOUNTS_ID
AND (XLE_ENTITY_PROFILES.legal_entity_id  = RegistrationPEO.source_id)
AND(XLE_ENTITY_PROFILES.geography_id      = geographypeo.geography_id)
AND(TerritoryPEO.TERRITORY_CODE           = geographypeo.geography_CODE)
AND(RegistrationPEO.location_id           = locationdpeo.location_id)
AND(RegistrationPEO.source_table          = 'XLE_ENTITY_PROFILES' )
AND(RegistrationPEO.identifying_flag      = 'Y' )
AND(geographypeo.geography_type           = 'COUNTRY')
ORDER BY GL_LEDGER_LE_V.LEDGER_NAME, XLE_ENTITY_PROFILES.NAME

--GL_LEDGERS
select GL_LEDGERS.LEDGER_ID LEDGER_ID,
	 GL_LEDGERS.NAME as NAME,
	 GL_LEDGERS.SHORT_NAME as SHORT_NAME,
	 GL_LEDGERS.DESCRIPTION as DESCRIPTION,
	 GL_LEDGERS.LEDGER_CATEGORY_CODE as LEDGER_CATEGORY_CODE,
	 GL_LEDGERS.LE_LEDGER_TYPE_CODE as LE_LEDGER_TYPE_CODE,
	 GL_LEDGERS.COMPLETION_STATUS_CODE as COMPLETION_STATUS_CODE,
	 GL_LEDGERS.CURRENCY_CODE as CURRENCY_CODE,
	 GL_LEDGERS.PERIOD_SET_NAME as PERIOD_SET_NAME,
	 GL_LEDGERS.ACCOUNTED_PERIOD_TYPE as ACCOUNTED_PERIOD_TYPE,
	 GL_LEDGERS.ALLOW_INTERCOMPANY_POST_FLAG as ALLOW_INTERCOMPANY_POST_FLAG,
   GL_CALENDARS.USER_PERIOD_SET_NAME CALENDAR_NAME,
   --DECODE(GL_LEDGERS.LEDGER_CATEGORY_CODE,'PRIMARY','Primary','SECONDARY','Secondary',GL_LEDGERS.LEDGER_CATEGORY_CODE) as LEDGER_CATEGORY,
	 --DECODE(GL_LEDGERS.COMPLETION_STATUS_CODE,'CONFIRMED','Confirmed','NOT_STARTED','Not Started','ERROR','Error',GL_LEDGERS.COMPLETION_STATUS_CODE) as COMPLETION_STATUS,
	 GL_LOOKUPS1.MEANING as LEDGER_CATEGORY,
	 DECODE(GL_LEDGERS.COMPLETION_STATUS_CODE,'NOT_STARTED',(SELECT MEANING FROM GL_LOOKUPS WHERE LOOKUP_TYPE='GL_ASF_CFG_STATUS_CODES'
           AND LOOKUP_CODE = GL_LEDGERS.COMPLETION_STATUS_CODE)	,GL_LOOKUPS2.meaning ) as COMPLETION_STATUS,
   GL_BALANCES_CUBES.APPLICATION_NAME CUBE
 from	FUSION.GL_LEDGERS GL_LEDGERS, FUSION.GL_CALENDARS GL_CALENDARS, GL_BALANCES_CUBES GL_BALANCES_CUBES,
        FUSION.GL_LOOKUPS GL_LOOKUPS1, FUSION.GL_LOOKUPS GL_LOOKUPS2
WHERE  GL_LEDGERS.CHART_OF_ACCOUNTS_ID=:P_CHART_OF_ACCOUNTS_ID
AND GL_LEDGERS.PERIOD_SET_NAME =GL_CALENDARS.PERIOD_SET_NAME
AND GL_LEDGERS.ACCOUNTED_PERIOD_TYPE =GL_CALENDARS.PERIOD_TYPE
AND GL_BALANCES_CUBES.PERIOD_SET_NAME(+)=GL_LEDGERS.PERIOD_SET_NAME 
AND GL_LOOKUPS1.LOOKUP_TYPE = 'GL_ASF_LEDGER_CATEGORY'
AND GL_LOOKUPS1.LOOKUP_CODE = GL_LEDGERS.LEDGER_CATEGORY_CODE
AND GL_LOOKUPS2.LOOKUP_TYPE (+) = 'GL_CONFIG_STATUS'
AND GL_LOOKUPS2.LOOKUP_CODE (+)=  GL_LEDGERS.COMPLETION_STATUS_CODE
AND GL_BALANCES_CUBES.CHART_OF_ACCOUNTS_ID(+)=GL_LEDGERS.CHART_OF_ACCOUNTS_ID
ORDER BY  GL_LEDGERS.NAME

--FUN_ALL_BUSINESS_UNITS_V
SELECT BusinessUnitEO.NAME BU_NAME,
  LocationDPEO.LOCATION_CODE LOCATION,
  PersonNameDPEO.LIST_NAME MANAGER_NAME,
  --DECODE(BusinessUnitEO.STATUS,'A','Active','Inactive') STATUS,
  HcmLookup.meaning AS STATUS,
  GL_LEDGER_LE_V.LEGAL_ENTITY_NAME AS LEGAL_ENTITY_NAME,
  GL_LEDGER_LE_V.LEDGER_NAME       AS LEDGER_NAME,
  SetIdSetPEO.SET_CODE,
  SetIdSetPEO.SET_NAME,
  GL_LEDGER_LE_V.CHART_OF_ACCOUNTS_ID,
  GL_LEDGER_LE_V.LEGAL_ENTITY_ID,
  GL_LEDGER_LE_V.LEDGER_ID
FROM  FUSION.HR_ORGANIZATION_V BusinessUnitEO,
   FUSION.HR_ORG_DETAILS_BY_CLASS_V BusinessUnitDetailEO,
   FUSION.GL_LEDGER_LE_V GL_LEDGER_LE_V,
   FUSION.FUN_FIN_BUSINESS_UNITS_V FinancialsBusinessUnitPEO,
   FUSION.FND_SETID_SETS_VL SetIdSetPEO,
   FUSION.HR_LOCATIONS_ALL LocationDPEO,
   FUSION.PER_PERSON_NAMES_F_V PersonNameDPEO,
   FUSION.HCM_LOOKUPS HcmLookup
WHERE (BusinessUnitEO.ORGANIZATION_ID            = BusinessUnitDetailEO.ORGANIZATION_ID)
AND (BusinessUnitEO.CLASSIFICATION_CODE          = BusinessUnitDetailEO.CLASSIFICATION_CODE)
AND BusinessUnitDetailEO.ORG_INFORMATION_CONTEXT = BusinessUnitEO.CLASSIFICATION_CODE
AND BusinessUnitEO.CLASSIFICATION_CODE           = 'FUN_BUSINESS_UNIT'
AND (BusinessUnitDetailEO.ORG_INFORMATION2       = GL_LEDGER_LE_V.LEGAL_ENTITY_ID)
AND (BusinessUnitDetailEO.ORG_INFORMATION3       = GL_LEDGER_LE_V.LEDGER_ID)
AND (BusinessUnitDetailEO.ORG_INFORMATION7       = FinancialsBusinessUnitPEO.BU_ID(+))
AND (BusinessUnitDetailEO.ORG_INFORMATION4       = SetIdSetPEO.SET_ID(+))
AND (BusinessUnitEO.LOCATION_ID                  = LocationDPEO.LOCATION_ID(+))
AND (BusinessUnitDetailEO.ORG_INFORMATION1       = PersonNameDPEO.PERSON_ID(+))
AND HcmLookup.LOOKUP_TYPE = 'ACTIVE_INACTIVE'
AND HcmLookup.LOOKUP_CODE = BusinessUnitEO.STATUS
AND GL_LEDGER_LE_V.CHART_OF_ACCOUNTS_ID          =:P_CHART_OF_ACCOUNTS_ID
ORDER BY BusinessUnitEO.NAME
==================================================================================================
SELECT * 
  FROM( SELECT * 
          FROM  (SELECT GL.name                                                 LEDGER_NAME
					   ,GB.period_name
					   ,GB.currency_code                                        CURRENCY_CODE
					   ,GCC.segment3                                            BCC_CODE               --6.
					   ,GCC.segment5                                            CC_CODE   --9.
					   ,GCC.segment2                                            ACCOUNT_CODE   --1.
					   ,GCC.segment1||'.'
						||GCC.segment2||'.'
						||GCC.segment3||'.'
						||GCC.segment4||'.'
						||GCC.segment5||'.'
						||GCC.segment6||'.'                                      CONCAT_SEGMENT
					   ,CASE WHEN GCC.segment5 = '521' THEN 'Corporate Group'
					          ELSE CC_DESC.LOB_LEVEL_1_DES 
                        END                         							 CC_LVL_DESC_1  --8.
					   ,BCC_DESC.LOB_LEVEL_1_DES                                 LOB_LEVEL_1     --5.
					   ,BCC_DESC.LOB_LEVEL_2_DES                                 LOB_LEVEL_2  --4.
					   ,BCC_DESC.LOB_LEVEL_3_DES                                 LOB_LEVEL_3  --3.
					   ,gl_flexfields_pkg.get_description_sql (
												   gcc.chart_of_accounts_id,
												   3,
												   gcc.segment3
												)                               BCC_DESC        -- 7.
					   ,gl_flexfields_pkg.get_description_sql (
												   gcc.chart_of_accounts_id,
												   5,
												   gcc.segment5
												)                               CC_DESC		  --10.
					   ,gl_flexfields_pkg.get_description_sql (
												   gcc.chart_of_accounts_id,
												   2,
												   gcc.segment2
												)                               ACCOUNT_DESC  --3.
					   ,NVL (gb.period_net_dr, 0)
												 - NVL (gb.period_net_cr, 0)   CURR_PTD_BALANCE
					   ,ROUND((NVL (gb.period_net_dr, 0)
												 - NVL (gb.period_net_cr, 0))
						 *DECODE(GB.currency_code, 'INR', 1, (SELECT AVG(conversion_rate)
							 FROM gl_daily_rates
							WHERE conversion_type = 'Corporate'
							  AND to_currency = 'INR'	
							  AND from_currency =  GB.currency_code
							  AND TRUNC(conversion_date) = TRUNC(GP.end_Date))), 4) CURR_PTD_BALANCE_INR	  
						,CASE WHEN GB.period_name = :p_period_1 
								THEN 'P1'  
							  WHEN GB.period_name = :p_period_2
								THEN 'P2'  
							  WHEN GB.period_name = :p_adj_period 
								THEN 'ADJ' 
							  ELSE '0'
						 END pivot_param
				 FROM  gl_ledgers            GL
					  ,gl_balances           GB
					  ,gl_code_combinations  GCC
					  ,gl_periods            GP
					  /*,(SELECT FFVB.VALUE, FFVB.flex_value_attribute3
							   ,FLV.meaning
						  FROM fnd_flex_value_sets FFVS
							 , fnd_vs_values_b FFVB
							 ,fnd_lookup_values FLV
						 WHERE FFVS.flex_value_set_id = FFVB.value_set_id
						   AND FLV.lookup_code = FFVB.flex_value_attribute3
						   AND FLV.lookup_type = 'ACCOUNT_TYPE'
						   AND FFVS.flex_value_set_name in ('CRISIL ACCOUNT')) ACC_TYPE*/
					  ,(SELECT  TREE.parent_pk1_value                          LOB_LEVEL_1 
							   ,TREE.pk1_start_value                           LOB_LEVEL_0
							   ,TREE1.parent_pk1_value                         LOB_LEVEL_2
							   ,TREE2.parent_pk1_value                         LOB_LEVEL_3
							   ,(SELECT FFVV.description
								   FROM fnd_flex_values_vl FFVV
									   ,fnd_flex_value_sets FFVS
								  WHERE FFVV.flex_value = TREE.parent_pk1_value
									AND FFVS.flex_value_set_id = FFVV.flex_value_set_id
									AND FFVS.flex_value_set_name in
										 ('CRISIL BUSINESS COST CENTER'))      LOB_LEVEL_1_DES
							   ,(SELECT FFVV.description
								   FROM fnd_flex_values_vl FFVV
									   ,fnd_flex_value_sets FFVS
								  WHERE FFVV.flex_value = TREE1.parent_pk1_value
									AND FFVS.flex_value_set_id = FFVV.flex_value_set_id
									AND FFVS.flex_value_set_name in
										 ('CRISIL BUSINESS COST CENTER'))       LOB_LEVEL_2_DES
							   ,(SELECT FFVV.description
								   FROM fnd_flex_values_vl FFVV
									   ,fnd_flex_value_sets FFVS
								  WHERE FFVV.flex_value = TREE2.parent_pk1_value
									AND FFVS.flex_value_set_id = FFVV.flex_value_set_id
									AND FFVS.flex_value_set_name in
										 ('CRISIL BUSINESS COST CENTER'))       LOB_LEVEL_3_DES
						 FROM  fnd_tree_node  TREE
							  ,fnd_tree_node  TREE1
							  ,fnd_tree_node  TREE2
							  ,fnd_tree_version FTV
							  ,fnd_tree_version FTV1
							  ,fnd_tree_version FTV2
						WHERE TREE.tree_structure_code  = 'GL_ACCT_FLEX'
						  AND TREE.tree_code            = 'CRISIL BUSINESS COST CENTER'
						  AND TREE1.tree_structure_code = 'GL_ACCT_FLEX'
						  AND TREE.tree_version_id = FTV.tree_version_id
						  AND FTV.status = 'ACTIVE'
						  AND TREE1.tree_version_id = FTV1.tree_version_id
							 AND FTV1.status = 'ACTIVE'
							 AND TREE2.tree_version_id = FTV2.tree_version_id
							 AND FTV2.status = 'ACTIVE'
						  AND TREE1.tree_code           = 'CRISIL BUSINESS COST CENTER'
						  AND TREE2.tree_structure_code = 'GL_ACCT_FLEX'
						  AND TREE2.tree_code           = 'CRISIL BUSINESS COST CENTER'
						  AND TREE.parent_pk1_value     = tree1.pk1_start_value
						  AND TREE1.parent_pk1_value    = tree2.pk1_start_value)      BCC_DESC
						,(SELECT  TREE.parent_pk1_value          LOB_LEVEL_1 
							   ,TREE.pk1_start_value             LOB_LEVEL_0
							   ,(SELECT FFVV.description
								   FROM fnd_flex_values_vl FFVV
									   ,fnd_flex_value_sets FFVS
								  WHERE FFVV.flex_value = TREE.parent_pk1_value
									AND FFVS.flex_value_set_id = FFVV.flex_value_set_id
									AND FFVS.flex_value_set_name in
										 ('CRISIL_CORPORATE_FUNCTION'))      LOB_LEVEL_1_DES	          
							FROM  fnd_tree_node  TREE
								 ,fnd_tree_version FTV			
						   WHERE TREE.tree_structure_code  = 'GL_ACCT_FLEX'
							 AND TREE.tree_version_id = FTV.tree_version_id
							 AND FTV.status = 'ACTIVE'
							 AND TREE.tree_code            = 'CRISIL_CORPORATE_FUNCTION')  CC_DESC
				 WHERE  GL.ledger_id                   =  GB.ledger_id
				   AND  GB.code_combination_id         =  GCC.code_combination_id  
				   --AND  GCC.segment2                   =  ACC_TYPE.value(+)   
				   --AND  ACC_TYPE.meaning               = 'Expense'               -- commented by Anand as per Srini's confirmation 29Mar2021
				   AND  GCC.segment3                   =  BCC_DESC.LOB_LEVEL_0(+)
				   AND  GB.currency_code               =  GL.currency_code
				   AND  GCC.segment5                   =  CC_DESC.LOB_LEVEL_0(+)
				   AND  GL.ledger_category_code        =  'PRIMARY'		   
				   AND  GB.period_name                 =  GP.period_name
				   AND  GB.period_year                 =  GP.period_year
				   AND  GB.period_type                 =  GP.period_type
				   --AND  TRUNC(GP.start_date) BETWEEN TRUNC(:p_from_date) AND TRUNC(:p_to_date)
				   AND GB.period_name                  IN (:p_period_1, :p_period_2, :p_adj_period)
				   AND  GL.name                        =  NVL(:p_ledger_name, GL.name)
				   AND (GCC.segment2 LIKE '5%'
				        OR GCC.segment2                IN (SELECT lookup_code
															 FROM fnd_lookup_values
															WHERE lookup_type = 'CRISIL_EXP_VARIANCE_GL_CODE'))
				   --AND NVL (gb.period_net_dr, 0) - NVL (gb.period_net_cr, 0) <> 0
				   )
		   PIVOT (SUM(NVL(CURR_PTD_BALANCE, 0)) as PTD, SUM(NVL(CURR_PTD_BALANCE_INR, 0)) as PTD_INR
		          FOR pivot_param
				  IN ('P1' P1, 'P2' P2, 'ADJ' P3)
				  )
)
 WHERE NVL(P1_PTD, 0) <> 0
   OR NVL(P2_PTD, 0) <> 0
   OR NVL(P3_PTD, 0) <> 0
ORDER BY ACCOUNT_CODE
=========================================================================================================
SELECT
    *
FROM
    (
        SELECT DISTINCT
            (
                SELECT
                    display_name
                FROM
                    per_person_names_f ppnf
                WHERE
                    ppnf.name_type = 'GLOBAL'
                    AND ppnf.person_id = pda.deliver_to_person_id
                    AND trunc(sysdate) BETWEEN effective_start_date AND effective_end_date
                    AND ROWNUM = 1
            ) requestor_name,
            ct.rcv_transaction_id,
            cre.transaction_amt,
            (
                SELECT
                    fab.bu_name
                FROM
                    fun_all_business_units_v fab
                WHERE
                    fab.bu_id = cpod.procurement_business_unit_id
                    AND ROWNUM = 1
            ) entity_name,
            (
                SELECT
                    ps.segment1
                FROM
                    poz_suppliers_v ps
                WHERE
                    ps.vendor_id = cpod.vendor_id
                    AND ROWNUM = 1
            ) vendor_code,
            (
                SELECT
                    ps.vendor_name
                FROM
                    poz_suppliers_v ps
                WHERE
                    ps.vendor_id = cpod.vendor_id
                    AND ROWNUM = 1
            ) vendor_name,
            cpod.item_description,
            (
                SELECT
                    segment1
                    || '-'
                    || segment2
                    || '-'
                    || segment3
                    || '-'
                    || segment4
                    || '-'
                    || segment5
                    || '-'
                    || segment6
                    || '-'
                    || segment7
                    || '-'
                    || segment8
                    || '-'
                    || segment9
                FROM
                    gl_code_combinations gcc
                WHERE
                    gcc.code_combination_id = cpod.charge_account_id
                    AND ROWNUM = 1
            ) charge_account,
            cpod.po_number,
            (
                SELECT
                    to_char(pha.creation_date, 'DD/MM/YYYY')
                FROM
                    po_headers_all pha
                WHERE
                    pha.po_header_id = cpod.po_header_id
                    AND ROWNUM = 1
            ) po_date,
            (
                SELECT
                    nvl(pla.quantity, 1)
                FROM
                    po_lines_all pla
                WHERE
                    pla.po_line_id = cpod.po_line_id
                    AND ROWNUM = 1
            ) po_qty,
            cre.po_unit_price        unit_rate,
            nvl(ct.transaction_qty, 1) grn_recvd_qty,
            (
                SELECT
                    to_char(rsh.creation_date, 'DD/MM/YYYY')
                FROM
                    rcv_shipment_headers rsh
                WHERE
                    rsh.receipt_num = ct.receipt_number
                    AND ROWNUM = 1
            ) receipt_date,
            (
                SELECT
                    display_name
                FROM
                    per_person_names_f     ppnf,
                    rcv_shipment_headers   rsh
                WHERE
                    ppnf.name_type = 'GLOBAL'
                    AND ppnf.person_id = rsh.employee_id
                    AND rsh.receipt_num = ct.receipt_number
                    AND trunc(sysdate) BETWEEN effective_start_date AND effective_end_date
                    AND ROWNUM = 1
            ) grn_received,
            ( (
                SELECT
                    trunc(gps.end_date)
                FROM
                    gl_period_statuses gps
                WHERE
                    gps.period_name = :p_period_name
                    AND gps.application_id = 101
                    AND gps.ledger_id = gl.ledger_id
                    AND ROWNUM = 1
            ) - (
                SELECT
                    trunc(rsh.creation_date)
                FROM
                    rcv_shipment_headers rsh
                WHERE
                    rsh.receipt_num = ct.receipt_number
                    AND ROWNUM = 1
            ) ) grn_aging,
            decode(nvl(gjl.entered_dr, 0), 0,((nvl(ct.transaction_qty, 0)) -(
                SELECT
                    nvl(SUM(aida.quantity_invoiced), 0)
                FROM
                    ap_invoice_distributions_all aida
                WHERE
                    aida.rcv_transaction_id = ct.rcv_transaction_id
                    AND aida.line_type_lookup_code = 'ITEM'
                    AND aida.posted_flag = 'Y'
                    AND trunc(aida.accounting_date) <= trunc(gps.end_date)
            )),((nvl(ct.transaction_qty, 0)) -(
                SELECT
                    nvl(SUM(aida.quantity_invoiced), 0)
                FROM
                    ap_invoice_distributions_all aida
                WHERE
                    aida.rcv_transaction_id = ct.rcv_transaction_id
                    AND aida.line_type_lookup_code = 'ITEM'
                    AND aida.posted_flag = 'Y'
                    AND trunc(aida.accounting_date) <= trunc(gps.end_date)
            )) * - 1) accrual_qty,
            decode(nvl(gjl.entered_dr, 0), 0,(((nvl(ct.transaction_qty, ct.transaction_amt)) -(
                SELECT
                    nvl(SUM(nvl(aida.quantity_invoiced, aida.amount)), 0)
                FROM
                    ap_invoice_distributions_all aida
                WHERE
                    aida.rcv_transaction_id = ct.rcv_transaction_id
                    AND aida.line_type_lookup_code = 'ITEM'
                    AND aida.posted_flag = 'Y'
                    AND trunc(aida.accounting_date) <= trunc(gps.end_date)
            )) * nvl(cpod.price, 1)),(((nvl(ct.transaction_qty, ct.transaction_amt)) -(
                SELECT
                    nvl(SUM(nvl(aida.quantity_invoiced, aida.amount)), 0)
                FROM
                    ap_invoice_distributions_all aida
                WHERE
                    aida.rcv_transaction_id = ct.rcv_transaction_id
                    AND aida.line_type_lookup_code = 'ITEM'
                    AND aida.posted_flag = 'Y'
                    AND trunc(aida.accounting_date) <= trunc(gps.end_date)
            )) * nvl(cpod.price, 1) * - 1)) accrual_amount,
            decode(nvl(gjl.entered_dr, 0), 0,(((nvl(ct.transaction_qty, ct.transaction_amt)) -(
                SELECT
                    nvl(SUM(nvl(aida.quantity_invoiced, aida.amount)), 0)
                FROM
                    ap_invoice_distributions_all aida
                WHERE
                    aida.rcv_transaction_id = ct.rcv_transaction_id
                    AND aida.line_type_lookup_code = 'ITEM'
                    AND aida.posted_flag = 'Y'
                    AND trunc(aida.accounting_date) <= trunc(gps.end_date)
            )) * nvl(ct.currency_conversion_rate, 1) * nvl(cpod.price, 1)),(((nvl(ct.transaction_qty, ct.transaction_amt)) -(
                SELECT
                    nvl(SUM(nvl(aida.quantity_invoiced, aida.amount)), 0)
                FROM
                    ap_invoice_distributions_all aida
                WHERE
                    aida.rcv_transaction_id = ct.rcv_transaction_id
                    AND aida.line_type_lookup_code = 'ITEM'
                    AND aida.posted_flag = 'Y'
                    AND trunc(aida.accounting_date) <= trunc(gps.end_date)
            )) * nvl(ct.currency_conversion_rate, 1) * nvl(cpod.price, 1) * - 1)) accrual_inr_amount
	  /*,ROUND((CRE.transaction_amt / CRE.po_unit_price), 2) accrual_qty
	  ,DECODE(NVL(GJL.entered_dr, 0), 0, ROUND(CRE.transaction_amt, 2), -1*ROUND(ABS(CRE.transaction_amt), 2)) accrual_amount	  
	  ,DECODE(NVL(GJL.entered_dr, 0), 
			  0,
			  (ROUND(CRE.transaction_amt, 2) * NVL(CT.currency_conversion_rate, 1)),
			  -1*(ROUND(ABS(CRE.transaction_amt), 2) * NVL(CT.currency_conversion_rate, 1))) accrual_inr_amount*/,
            gjh.doc_sequence_value   gl_voucher_num,
            (
                SELECT
                    gps.period_name
                FROM
                    gl_period_statuses gps
                WHERE
                    gps.application_id = 101
                    AND gps.ledger_id = gl.ledger_id
                    AND trunc(cpod.event_date) BETWEEN trunc(start_date) AND trunc(end_date)
                    AND ROWNUM = 1
            ) provision_month,
            ct.receipt_number        grn_number,
            (
                SELECT
                    pla.item_description
                FROM
                    po_lines_all pla
                WHERE
                    pla.po_line_id = cpod.po_line_id
                    AND ROWNUM = 1
            ) po_line_desc,
            cpod.line_number         po_line_num,
            cpod.currency_code,
            (
                SELECT
                    pha.type_lookup_code
                FROM
                    po_headers_all pha
                WHERE
                    pha.po_header_id = cpod.po_header_id
                    AND ROWNUM = 1
            ) po_type,
            NULL bpa_num
	--  ,GJL.je_line_num
        FROM
            gl_je_headers             gjh,
            gl_je_lines               gjl,
            gl_ledgers                gl,
            gl_import_references      gir,
            gl_period_statuses        gps,
            xla_ae_lines              xal,
            xla_distribution_links    xd,
            po_distributions_all      pda,
            cmr_rcv_events            cre,
            cmr_purchase_order_dtls   cpod,
            cmr_transactions          ct
        WHERE
            gjh.je_source = 'Receipt Accounting'
            AND gjh.je_category = 'Period End Accrual'
            AND gjh.ledger_id = gl.ledger_id
            AND gl.name = :p_ledger_name
            AND gjh.period_name = gps.period_name
            AND gps.application_id = 101
            AND gps.ledger_id = gl.ledger_id
            AND gps.period_name = :p_period_name
            AND gjh.je_header_id = gjl.je_header_id
            AND gir.je_header_id = gjl.je_header_id
            AND gir.je_line_num = gjl.je_line_num
            AND gir.gl_sl_link_id = xal.gl_sl_link_id
            AND gir.gl_sl_link_table = 'XLAJEL'
            AND xal.accounting_class_code = 'EXPENSE_ACCRUAL'
            AND xal.ae_header_id = xd.ae_header_id
            AND xal.ae_line_num = xd.ae_line_num
            AND xd.event_id = cre.event_id
            AND cre.cmr_po_distribution_id = cpod.cmr_po_distribution_id
            AND cpod.event_type = 'PO Approval'
            AND cpod.cmr_po_distribution_id = ct.cmr_po_distribution_id
            AND ct.po_distribution_id = pda.po_distribution_id
  -- AND CPOD.po_number in ('CUK1900004','CUK1900002') 
            AND ct.rcv_transaction_id IN (
                10023,
                11010
            )
  -- AND DECODE(CT.rcv_transaction_id, 10023, -1 , 11010, -1 , CRE.transaction_amt) = CRE.transaction_amt --Added by Ankit on 24th March to handle duplicate cases
            AND cre.transaction_amt >= 0 --Added by Ankit on 24th March to handle duplicate cases
 ----  AND CPOD.po_number in ('CRL1101474', 'CRL1101463', 'CRL1101497', 'CRL1101527', 'CRL1101524', 'CRL1101466')
 ----  AND GJH.je_batch_Id <> 101041
            AND trunc(ct.transaction_date) <= trunc(gps.end_date)
            AND EXISTS (
                SELECT
                    '1'
                FROM
                    xla_ae_headers xah
                WHERE
                    xah.ae_header_id = xal.ae_header_id
                    AND xah.parent_ae_header_id IS NULL
            )
        UNION ALL
        SELECT DISTINCT
            (
                SELECT
                    display_name
                FROM
                    per_person_names_f ppnf
                WHERE
                    ppnf.name_type = 'GLOBAL'
                    AND ppnf.person_id = pda.deliver_to_person_id
                    AND trunc(sysdate) BETWEEN effective_start_date AND effective_end_date
                    AND ROWNUM = 1
            ) requestor_name,
            ct.rcv_transaction_id,
            cre.transaction_amt,
            (
                SELECT
                    fab.bu_name
                FROM
                    fun_all_business_units_v fab
                WHERE
                    fab.bu_id = cpod.procurement_business_unit_id
                    AND ROWNUM = 1
            ) entity_name,
            (
                SELECT
                    ps.segment1
                FROM
                    poz_suppliers_v ps
                WHERE
                    ps.vendor_id = cpod.vendor_id
                    AND ROWNUM = 1
            ) vendor_code,
            (
                SELECT
                    ps.vendor_name
                FROM
                    poz_suppliers_v ps
                WHERE
                    ps.vendor_id = cpod.vendor_id
                    AND ROWNUM = 1
            ) vendor_name,
            cpod.item_description,
            (
                SELECT
                    segment1
                    || '-'
                    || segment2
                    || '-'
                    || segment3
                    || '-'
                    || segment4
                    || '-'
                    || segment5
                    || '-'
                    || segment6
                    || '-'
                    || segment7
                    || '-'
                    || segment8
                    || '-'
                    || segment9
                FROM
                    gl_code_combinations gcc
                WHERE
                    gcc.code_combination_id = cpod.charge_account_id
                    AND ROWNUM = 1
            ) charge_account,
            cpod.po_number,
            (
                SELECT
                    to_char(pha.creation_date, 'DD/MM/YYYY')
                FROM
                    po_headers_all pha
                WHERE
                    pha.po_header_id = cpod.po_header_id
                    AND ROWNUM = 1
            ) po_date,
            (
                SELECT
                    nvl(pla.quantity, 1)
                FROM
                    po_lines_all pla
                WHERE
                    pla.po_line_id = cpod.po_line_id
                    AND ROWNUM = 1
            ) po_qty,
            cre.po_unit_price        unit_rate,
            nvl(ct.transaction_qty, 1) grn_recvd_qty,
            (
                SELECT
                    to_char(rsh.creation_date, 'DD/MM/YYYY')
                FROM
                    rcv_shipment_headers rsh
                WHERE
                    rsh.receipt_num = ct.receipt_number
                    AND ROWNUM = 1
            ) receipt_date,
            (
                SELECT
                    display_name
                FROM
                    per_person_names_f     ppnf,
                    rcv_shipment_headers   rsh
                WHERE
                    ppnf.name_type = 'GLOBAL'
                    AND ppnf.person_id = rsh.employee_id
                    AND rsh.receipt_num = ct.receipt_number
                    AND trunc(sysdate) BETWEEN effective_start_date AND effective_end_date
                    AND ROWNUM = 1
            ) grn_received,
            ( (
                SELECT
                    trunc(gps.end_date)
                FROM
                    gl_period_statuses gps
                WHERE
                    gps.period_name = :p_period_name
                    AND gps.application_id = 101
                    AND gps.ledger_id = gl.ledger_id
                    AND ROWNUM = 1
            ) - (
                SELECT
                    trunc(rsh.creation_date)
                FROM
                    rcv_shipment_headers rsh
                WHERE
                    rsh.receipt_num = ct.receipt_number
                    AND ROWNUM = 1
            ) ) grn_aging,
            decode(nvl(gjl.entered_dr, 0), 0,((nvl(ct.transaction_qty, 0)) -(
                SELECT
                    nvl(SUM(aida.quantity_invoiced), 0)
                FROM
                    ap_invoice_distributions_all aida
                WHERE
                    aida.rcv_transaction_id = ct.rcv_transaction_id
                    AND aida.line_type_lookup_code = 'ITEM'
                    AND aida.posted_flag = 'Y'
                    AND trunc(aida.accounting_date) <= trunc(gps.end_date)
            )),((nvl(ct.transaction_qty, 0)) -(
                SELECT
                    nvl(SUM(aida.quantity_invoiced), 0)
                FROM
                    ap_invoice_distributions_all aida
                WHERE
                    aida.rcv_transaction_id = ct.rcv_transaction_id
                    AND aida.line_type_lookup_code = 'ITEM'
                    AND aida.posted_flag = 'Y'
                    AND trunc(aida.accounting_date) <= trunc(gps.end_date)
            )) * - 1) accrual_qty,
            decode(nvl(gjl.entered_dr, 0), 0,(((nvl(ct.transaction_qty, ct.transaction_amt)) -(
                SELECT
                    nvl(SUM(nvl(aida.quantity_invoiced, aida.amount)), 0)
                FROM
                    ap_invoice_distributions_all aida
                WHERE
                    aida.rcv_transaction_id = ct.rcv_transaction_id
                    AND aida.line_type_lookup_code = 'ITEM'
                    AND aida.posted_flag = 'Y'
                    AND trunc(aida.accounting_date) <= trunc(gps.end_date)
            )) * nvl(cpod.price, 1)),(((nvl(ct.transaction_qty, ct.transaction_amt)) -(
                SELECT
                    nvl(SUM(nvl(aida.quantity_invoiced, aida.amount)), 0)
                FROM
                    ap_invoice_distributions_all aida
                WHERE
                    aida.rcv_transaction_id = ct.rcv_transaction_id
                    AND aida.line_type_lookup_code = 'ITEM'
                    AND aida.posted_flag = 'Y'
                    AND trunc(aida.accounting_date) <= trunc(gps.end_date)
            )) * nvl(cpod.price, 1) * - 1)) accrual_amount,
            decode(nvl(gjl.entered_dr, 0), 0,(((nvl(ct.transaction_qty, ct.transaction_amt)) -(
                SELECT
                    nvl(SUM(nvl(aida.quantity_invoiced, aida.amount)), 0)
                FROM
                    ap_invoice_distributions_all aida
                WHERE
                    aida.rcv_transaction_id = ct.rcv_transaction_id
                    AND aida.line_type_lookup_code = 'ITEM'
                    AND aida.posted_flag = 'Y'
                    AND trunc(aida.accounting_date) <= trunc(gps.end_date)
            )) * nvl(ct.currency_conversion_rate, 1) * nvl(cpod.price, 1)),(((nvl(ct.transaction_qty, ct.transaction_amt)) -(
                SELECT
                    nvl(SUM(nvl(aida.quantity_invoiced, aida.amount)), 0)
                FROM
                    ap_invoice_distributions_all aida
                WHERE
                    aida.rcv_transaction_id = ct.rcv_transaction_id
                    AND aida.line_type_lookup_code = 'ITEM'
                    AND aida.posted_flag = 'Y'
                    AND trunc(aida.accounting_date) <= trunc(gps.end_date)
            )) * nvl(ct.currency_conversion_rate, 1) * nvl(cpod.price, 1) * - 1)) accrual_inr_amount
	  /*,ROUND((CRE.transaction_amt / CRE.po_unit_price), 2) accrual_qty
	  ,DECODE(NVL(GJL.entered_dr, 0), 0, ROUND(CRE.transaction_amt, 2), -1*ROUND(ABS(CRE.transaction_amt), 2)) accrual_amount	  
	  ,DECODE(NVL(GJL.entered_dr, 0), 
			  0,
			  (ROUND(CRE.transaction_amt, 2) * NVL(CT.currency_conversion_rate, 1)),
			  -1*(ROUND(ABS(CRE.transaction_amt), 2) * NVL(CT.currency_conversion_rate, 1))) accrual_inr_amount*/,
            gjh.doc_sequence_value   gl_voucher_num,
            (
                SELECT
                    gps.period_name
                FROM
                    gl_period_statuses gps
                WHERE
                    gps.application_id = 101
                    AND gps.ledger_id = gl.ledger_id
                    AND trunc(cpod.event_date) BETWEEN trunc(start_date) AND trunc(end_date)
                    AND ROWNUM = 1
            ) provision_month,
            ct.receipt_number        grn_number,
            (
                SELECT
                    pla.item_description
                FROM
                    po_lines_all pla
                WHERE
                    pla.po_line_id = cpod.po_line_id
                    AND ROWNUM = 1
            ) po_line_desc,
            cpod.line_number         po_line_num,
            cpod.currency_code,
            (
                SELECT
                    pha.type_lookup_code
                FROM
                    po_headers_all pha
                WHERE
                    pha.po_header_id = cpod.po_header_id
                    AND ROWNUM = 1
            ) po_type,
            NULL bpa_num
	--  ,GJL.je_line_num
        FROM
            gl_je_headers             gjh,
            gl_je_lines               gjl,
            gl_ledgers                gl,
            gl_import_references      gir,
            gl_period_statuses        gps,
            xla_ae_lines              xal,
            xla_distribution_links    xd,
            po_distributions_all      pda,
            cmr_rcv_events            cre,
            cmr_purchase_order_dtls   cpod,
            cmr_transactions          ct
        WHERE
            gjh.je_source = 'Receipt Accounting'
            AND gjh.je_category = 'Period End Accrual'
            AND gjh.ledger_id = gl.ledger_id
            AND gl.name = :p_ledger_name
            AND gjh.period_name = gps.period_name
            AND gps.application_id = 101
            AND gps.ledger_id = gl.ledger_id
            AND gps.period_name = :p_period_name
            AND gjh.je_header_id = gjl.je_header_id
            AND gir.je_header_id = gjl.je_header_id
            AND gir.je_line_num = gjl.je_line_num
            AND gir.gl_sl_link_id = xal.gl_sl_link_id
            AND gir.gl_sl_link_table = 'XLAJEL'
            AND xal.accounting_class_code = 'EXPENSE_ACCRUAL'
            AND xal.ae_header_id = xd.ae_header_id
            AND xal.ae_line_num = xd.ae_line_num
            AND xd.event_id = cre.event_id
            AND cre.cmr_po_distribution_id = cpod.cmr_po_distribution_id
            AND cpod.event_type = 'PO Approval'
            AND cpod.cmr_po_distribution_id = ct.cmr_po_distribution_id
            AND ct.po_distribution_id = pda.po_distribution_id
  -- AND CPOD.po_number in ('CUK1900004','CUK1900002') 
            AND ct.rcv_transaction_id NOT IN (
                10023,
                11010
            )
  -- AND DECODE(CT.rcv_transaction_id, 10023, -1 , 11010, -1 , CRE.transaction_amt) = CRE.transaction_amt --Added by Ankit on 24th March to handle duplicate cases
	--AND CRE.transaction_amt > =0 --Added by Ankit on 24th March to handle duplicate cases
 ----  AND CPOD.po_number in ('CRL1101474', 'CRL1101463', 'CRL1101497', 'CRL1101527', 'CRL1101524', 'CRL1101466')
 ----  AND GJH.je_batch_Id <> 101041
            AND trunc(ct.transaction_date) <= trunc(gps.end_date)
            AND EXISTS (
                SELECT
                    '1'
                FROM
                    xla_ae_headers xah
                WHERE
                    xah.ae_header_id = xal.ae_header_id
                    AND xah.parent_ae_header_id IS NULL
            )
    )
ORDER BY
    po_number
=======================================================================================================
-----------------------------------------------------------------------ExtractICEarningTrxDm--------------------------------------------------------------------------------
Select Cn_Tp_Earnings_All_V.Earning_Id              AS EarningId
      ,Cn_Tp_Measure_Results_All.Measure_Result_Id  As MeasureResultId
      ,Cn_Tp_Earnings_All_V.Credit_Id               As CreditId
      ,Cn_Tp_Earnings_All_V.Transaction_Id          As TransactionId
      ,Cn_Srp_Participant_Hdr_Ro_V.Participant_Name As ParticipantName
      ,to_char(Cn_Tp_Earnings_All_V.Source_Event_Date, 'YYYY-MM-DD') As SourceEventDate
      ,Cn_Periods_Tl.Period_Name                    As PeriodName
      ,Cn_Tp_Earnings_All_V.Comm_Amt_Func_Curr      As CommAmtFuncCurr
      ,Cn_Tp_Earnings_All_V.Comm_Amt_Calc_Curr      As CommAmtCalcCurr
      ,Cn_Tp_Measure_Results_All.Output_Achieved    As OutputAchieved
      ,Cn_Tp_Earnings_All_V.Calc_Currency_Code      As CalcCurrencyCode
      ,Transaction_Type.Meaning                     As TransactionType
      ,Cn_Tp_Earnings_All_V.Eligible_Cat_Id         As EligibleCatId
      ,Cn_Eligible_Cats_All_Tl.Name                 As CreditCategory
      ,Cn_Tp_Earnings_All_V.Object_Status           As ObjectStatus
      ,Cn_Tp_Earnings_All_V.Org_Id                  As OrgId
      ,Cn_Tp_Transactions_All.Source_Trx_Number     As SourceTrxNumber
      ,Cn_Tp_Earnings_All_V.Plan_Component_Id       As PlanComponentId
      ,Cn_Plan_Components_All_Tl.Plan_Component_Name As PlanComponentName
      ,Cn_Tp_Transactions_All.Sales_Channel         As OriginatingChannelName
      ,Case When :P_Transaction_Category = 'Held Payment' Then 'Y' Else 'N' End     As HoldFlag
      ,Cn_Tp_Transactions_All.Attribute1            As TrxAttribute1
      ,Cn_Tp_Transactions_All.Attribute2            As TrxAttribute2--BROKER_NAME
      ,Cn_Tp_Transactions_All.Attribute3            As TrxAttribute3
      ,Cn_Tp_Transactions_All.Attribute4            As TrxAttribute4--CUSTOMER_NAME
      ,Cn_Tp_Transactions_All.Attribute5            As TrxAttribute5
      ,Cn_Tp_Transactions_All.Attribute6            As TrxAttribute6--LENDER
      ,Cn_Tp_Transactions_All.Attribute7            As TrxAttribute7
      ,Cn_Tp_Transactions_All.Attribute8            As TrxAttribute8
      ,Cn_Tp_Transactions_All.Attribute9            As TrxAttribute9
      ,Cn_Tp_Transactions_All.Attribute10           As TrxAttribute10
      ,Cn_Tp_Transactions_All.Attribute11           As TrxAttribute11
      ,Cn_Tp_Transactions_All.Attribute12           As TrxAttribute12
      ,Cn_Tp_Transactions_All.Attribute13           As TrxAttribute13
      ,Cn_Tp_Transactions_All.Attribute14           As TrxAttribute14
      ,Cn_Tp_Transactions_All.Attribute15           As TrxAttribute15--FUNDER_NAME
      ,Cn_Tp_Transactions_All.Attribute16           As TrxAttribute16
      ,Cn_Tp_Transactions_All.Attribute17           As TrxAttribute17
      ,Cn_Tp_Transactions_All.Attribute18           As TrxAttribute18
      ,Cn_Tp_Transactions_All.Attribute19           As TrxAttribute19--CURRENT_CHANNEL_NAME
      ,Cn_Tp_Transactions_All.Attribute20           As TrxAttribute20--PRODUCT_NAME
      ,Cn_Tp_Transactions_All.Attribute21           As TrxAttribute21--TRANSACTION_SUB_TYPE
      ,Cn_Tp_Transactions_All.Attribute22           As TrxAttribute22--PAY_TRANSACTION_CATEGORY
      ,Cn_Tp_Transactions_All.Attribute23           As TrxAttribute23--PRODUCT_TYPE
      ,Cn_Tp_Transactions_All.Attribute24           As TrxAttribute24
      ,Cn_Tp_Transactions_All.Attribute25           As TrxAttribute25
      ,Cn_Tp_Transactions_All.Attribute26           As TrxAttribute26
      ,Cn_Tp_Transactions_All.Attribute27           As TrxAttribute27--HEAD_OFFICE_BRANCH_NAME
      ,Cn_Tp_Transactions_All.Attribute28           As TrxAttribute28--SALES_MANAGER_NAME
      ,Cn_Tp_Transactions_All.Attribute29           As TrxAttribute29
      ,Cn_Tp_Transactions_All.Attribute30           As TrxAttribute30--LOAN_STATUS
      ,Cn_Tp_Transactions_All.Attribute31           As TrxAttribute31
      ,Cn_Tp_Transactions_All.Attribute32           As TrxAttribute32
      ,Cn_Tp_Transactions_All.Attribute33           As TrxAttribute33
      ,Cn_Tp_Transactions_All.Attribute34           As TrxAttribute34--STATE
      ,Cn_Tp_Transactions_All.Attribute35           As TrxAttribute35
      ,Cn_Tp_Transactions_All.Attribute36           As TrxAttribute36
      ,Cn_Tp_Transactions_All.Attribute37           As TrxAttribute37
      ,Cn_Tp_Transactions_All.Attribute38           As TrxAttribute38
      ,Cn_Tp_Transactions_All.Attribute39           As TrxAttribute39
      ,Cn_Tp_Transactions_All.Attribute40           As TrxAttribute40
      ,Cn_Tp_Transactions_All.Attribute_Number1     As TrxAttributeNumber1
      ,Cn_Tp_Transactions_All.Attribute_Number2     As TrxAttributeNumber2
      ,Cn_Tp_Transactions_All.Attribute_Number3     As TrxAttributeNumber3
      ,Cn_Tp_Transactions_All.Attribute_Number4     As TrxAttributeNumber4
      ,Cn_Tp_Transactions_All.Attribute_Number5     As TrxAttributeNumber5
      ,Cn_Tp_Transactions_All.Attribute_Number6     As TrxAttributeNumber6
      ,Cn_Tp_Transactions_All.Attribute_Number7     As TrxAttributeNumber7
      ,Cn_Tp_Transactions_All.Attribute_Number8     As TrxAttributeNumber8
      ,Cn_Tp_Transactions_All.Attribute_Number9     As TrxAttributeNumber9
      ,Cn_Tp_Transactions_All.Attribute_Number10    As TrxAttributeNumber10
      ,Cn_Tp_Transactions_All.Attribute_Number11    As TrxAttributeNumber11
      ,Cn_Tp_Transactions_All.Attribute_Number12    As TrxAttributeNumber12--GST
      ,Cn_Tp_Transactions_All.Attribute_Number13    As TrxAttributeNumber13
      ,Cn_Tp_Transactions_All.Attribute_Number14    As TrxAttributeNumber14
      ,Cn_Tp_Transactions_All.Attribute_Number15    As TrxAttributeNumber15
      ,Cn_Tp_Transactions_All.Attribute_Number16    As TrxAttributeNumber16
      ,Cn_Tp_Transactions_All.Attribute_Number17    As TrxAttributeNumber17
      ,Cn_Tp_Transactions_All.Attribute_Number18    As TrxAttributeNumber18
      ,Cn_Tp_Transactions_All.Attribute_Number19    As TrxAttributeNumber19
      ,Cn_Tp_Transactions_All.Attribute_Number20    As TrxAttributeNumber20
      ,Cn_Tp_Transactions_All.Attribute_Number21    As TrxAttributeNumber21
      ,Cn_Tp_Transactions_All.Attribute_Number22    As TrxAttributeNumber22
      ,Cn_Tp_Transactions_All.Attribute_Number23    As TrxAttributeNumber23
      ,Cn_Tp_Transactions_All.Attribute_Number24    As TrxAttributeNumber24
      ,Cn_Tp_Transactions_All.Attribute_Number25    As TrxAttributeNumber25
      ,Cn_Plan_Components_All_B.Attribute1          As PlanAttribute1
      ,Cn_Plan_Components_All_B.Attribute2          As PlanAttribute2
      ,Cn_Plan_Components_All_B.Attribute3          As PlanAttribute3
      ,Cn_Plan_Components_All_B.Attribute4          As PlanAttribute4
      ,Cn_Plan_Components_All_B.Attribute5          As PlanAttribute5
      ,Cn_Plan_Components_All_B.Attribute6          As PlanAttribute6
      ,Cn_Plan_Components_All_B.Attribute7          As PlanAttribute7
      ,Cn_Plan_Components_All_B.Attribute8          As PlanAttribute8
      ,Cn_Plan_Components_All_B.Attribute9          As PlanAttribute9
      ,Cn_Plan_Components_All_B.Attribute10         As PlanAttribute10
      ,Cn_Plan_Components_All_B.Attribute11         As PlanAttribute11
      ,Cn_Plan_Components_All_B.Attribute12         As PlanAttribute12
      ,Cn_Plan_Components_All_B.Attribute13         As PlanAttribute13
      ,Cn_Plan_Components_All_B.Attribute14         As ComponentCategory
      ,Cn_Plan_Components_All_B.Attribute15         As ComponentType
      ,Cn_Formulas_All_B.Attribute1                 As PmAttribute1
      ,Cn_Formulas_All_B.Attribute2                 As PmAttribute2
      ,Cn_Formulas_All_B.Attribute3                 As PmAttribute3
      ,Cn_Formulas_All_B.Attribute4                 As PmAttribute4
      ,Cn_Formulas_All_B.Attribute5                 As PmAttribute5
      ,Cn_Formulas_All_B.Attribute6                 As PmAttribute6
      ,Cn_Formulas_All_B.Attribute7                 As PmAttribute7
      ,Cn_Formulas_All_B.Attribute8                 As PmAttribute8
      ,Cn_Formulas_All_B.Attribute9                 As PmAttribute9
      ,Cn_Formulas_All_B.Attribute10                As PmAttribute10
      ,Cn_Formulas_All_B.Attribute11                As PmAttribute11
      ,Cn_Formulas_All_B.Attribute12                As PmAttribute12
      ,Cn_Formulas_All_B.Attribute13                As PmAttribute13
      ,Cn_Formulas_All_B.Attribute14                As PmAttribute14
      ,Cn_Formulas_All_B.Attribute15                As MeasureType
From Cn_Tp_Earnings_All Cn_Tp_Earnings_All_V
    ,Cn_Tp_Measure_Results_All
    ,Cn_Formulas_All_B
    ,Cn_Tp_Transactions_All
    ,Cn_Eligible_Cats_All_B
    ,Cn_Eligible_Cats_All_Tl
    ,Cn_Plan_Components_All_B
    ,Cn_Plan_Components_All_Tl
    ,Cn_Srp_Participant_Hdr_Ro_V
    ,Cn_Repositories_All_B
    ,Cn_Periods_Tl
    ,Cn_Lookups Transaction_Type
Where Cn_Tp_Transactions_All.Source_Trx_Number   = Cn_Tp_Earnings_All_V.Source_Trx_Number
And Cn_Tp_Transactions_All.Transaction_Type      = Cn_Tp_Earnings_All_V.Transaction_Type
And Cn_Eligible_Cats_All_B.Eligible_Cat_Id       = Cn_Eligible_Cats_All_Tl.Eligible_Cat_Id
And Cn_Eligible_Cats_All_Tl.Language             = 'US'
And Cn_Tp_Earnings_All_V.Eligible_Cat_Id         = Cn_Eligible_Cats_All_B.Eligible_Cat_Id
And Cn_Tp_Measure_Results_All.Transaction_Id       = Cn_Tp_Earnings_All_V.Transaction_Id
And Cn_Tp_Measure_Results_All.Plan_Component_Id    = Cn_Tp_Earnings_All_V.Plan_Component_Id
AND Cn_Tp_Measure_Results_All.Participant_Id = Cn_Srp_Participant_Hdr_Ro_V.Participant_Id
And Cn_Formulas_All_B.Formula_Id                   = Cn_Tp_Measure_Results_All.Formula_Id
And Cn_Tp_Earnings_All_V.Plan_Component_Id       = Cn_Plan_Components_All_B.Plan_Component_Id
And Cn_Plan_Components_All_Tl.Plan_Component_Id  = Cn_Plan_Components_All_B.Plan_Component_Id
And Cn_Plan_Components_All_Tl.Language           = 'US'
And Cn_Tp_Earnings_All_V.Credited_Participant_Id = Cn_Srp_Participant_Hdr_Ro_V.Participant_Id
And Cn_Tp_Earnings_All_V.Org_Id                  = Cn_Repositories_All_B.Org_Id
And Cn_Repositories_All_B.Calendar_Id            = Cn_Periods_Tl.Calendar_Id
And Cn_Tp_Earnings_All_V.Source_Event_Period_Id  = Cn_Periods_Tl.Period_Id
And Cn_Periods_Tl.Language                       = 'US'
And (Transaction_Type.Lookup_Code                = Cn_Tp_Transactions_All.Transaction_Type
And Transaction_Type.Lookup_Type                 = 'CN_TP_TRANSACTION_TYPE')
And Cn_Tp_Earnings_All_V.Org_Id                  = Nvl(:P_Org_Id, Cn_Tp_Earnings_All_V.Org_Id)
And Cn_Periods_Tl.Period_Id                      = Nvl(:P_Period_Id, Cn_Periods_Tl.Period_Id)
And ((:P_Transaction_Category = 'Expected' And Nvl(Cn_Plan_Components_All_B.Attribute15 || ' ' || Cn_Plan_Components_All_B.Attribute14, -99) In ('Expected Revenue', 'Expected Expense'))
 Or (:P_Transaction_Category = 'Held Payment' And Cn_Formulas_All_B.Attribute12 = 'Y' And Nvl(Cn_Plan_Components_All_B.Attribute15 || ' ' || Cn_Plan_Components_All_B.Attribute14, -99) = 'Actual Expense' 
     And Not Exists (Select 1 From Cn_Tp_Participant_Pay_All Pay Where Pay.Earning_Id = Cn_Tp_Earnings_All_V.Earning_Id) And Cn_Srp_Participant_Hdr_Ro_V.Hold_Payment_Flag = 'Y')
 Or (:P_Transaction_Category Not In ('Expected', 'Held Payment') And :P_Transaction_Category = Nvl(Cn_Plan_Components_All_B.Attribute15 || ' ' || Cn_Plan_Components_All_B.Attribute14, -99))
)
And Cn_Formulas_All_B.Attribute14 = 'Y'
And Cn_Formulas_All_B.Attribute15 In ('Commission', 'GST')
And Cn_Tp_Earnings_All_V.Source_Event_Date       >= Nvl(:P_From_Date, Cn_Tp_Earnings_All_V.Source_Event_Date)
And Cn_Tp_Earnings_All_V.Source_Event_Date       <= Nvl(:P_To_Date, Cn_Tp_Earnings_All_V.Source_Event_Date)
And Not Exists(Select 1 From Gl_Import_References Gl_Ref Where Gl_Ref.Reference_6 = 'OIC' And To_Char(Gl_Ref.Reference_2) = To_Char(Cn_Tp_Earnings_All_V.Earning_Id))
--------------------------------------------------------------------General Ledger Journal and Balance Report Data Model----------------------------------------------------
--Q_REP_PARAMETER_INFO
select
TO_CHAR(:P_START_DATE,'YYYY-MM-DD')   CP_START_DATE,
TO_CHAR(:P_END_DATE,'YYYY-MM-DD')     CP_END_DATE
from dual
--Q_BAL_DATE
SELECT 
   GLBAL.CODE_COMBINATION_ID CODE_COMBINATION_ID  ,  
   GLBAL.BEGIN_BALANCE_DR + NVL((SELECT 
   NVL(SUM(&SELECT_DR),0) BEGIN_BAL_DATE_DR
FROM
    GL_JE_LINES GLL,
    GL_JE_HEADERS GLH,
    GL_JE_BATCHES GLBATCH
 WHERE  
GLBATCH.AVERAGE_JOURNAL_FLAG = 'N'
AND GLBATCH.STATUS = 'P'
AND GLBATCH.JE_BATCH_ID = GLH.JE_BATCH_ID
&BUDENC_WHERE_JRNL
&CURR_WHERE_JRNL
AND GLH.DEFAULT_EFFECTIVE_DATE < DECODE( :P_START_DATE, NULL, :FP_START_DATE,TRUNC(:P_START_DATE))
AND GLH.LEDGER_ID = :P_LEDGER_ID
AND GLH.ACTUAL_FLAG = :P_BALANCE_TYPE
AND GLH.JE_HEADER_ID = GLL.JE_HEADER_ID
AND GLL.PERIOD_NAME = :P_PERIOD_FROM
AND GLL.STATUS = 'P'
AND GLL.LEDGER_ID = :P_LEDGER_ID
AND GLL.CODE_COMBINATION_ID = :CCID
GROUP BY
GLL.CODE_COMBINATION_ID),0) BAL_DR, 
   GLBAL.BEGIN_BALANCE_CR + NVL((SELECT 
   NVL(SUM(&SELECT_CR),0) BEGIN_BAL_DATE_CR
FROM
    GL_JE_LINES GLL,
    GL_JE_HEADERS GLH,
    GL_JE_BATCHES GLBATCH
 WHERE  
GLBATCH.AVERAGE_JOURNAL_FLAG = 'N'
AND GLBATCH.STATUS = 'P'
AND GLBATCH.JE_BATCH_ID = GLH.JE_BATCH_ID
&BUDENC_WHERE_JRNL
&CURR_WHERE_JRNL
AND GLH.DEFAULT_EFFECTIVE_DATE < DECODE( :P_START_DATE, NULL, :FP_START_DATE,TRUNC(:P_START_DATE))
AND GLH.LEDGER_ID = :P_LEDGER_ID
AND GLH.ACTUAL_FLAG = :P_BALANCE_TYPE
AND GLH.JE_HEADER_ID = GLL.JE_HEADER_ID
AND GLL.PERIOD_NAME = :P_PERIOD_FROM
AND GLL.STATUS = 'P'
AND GLL.LEDGER_ID = :P_LEDGER_ID
AND GLL.CODE_COMBINATION_ID = :CCID
GROUP BY
GLL.CODE_COMBINATION_ID),0) BAL_CR
FROM
    GL_BALANCES GLBAL
WHERE 
GLBAL.CODE_COMBINATION_ID=:CCID
AND GLBAL.PERIOD_NAME=:P_PERIOD_FROM
AND GLBAL.LEDGER_ID = :P_LEDGER_ID
&CURR_WHERE_BAL
&BUDENC_WHERE_BAL
AND GLBAL.CURRENCY_CODE = :BAL_CURRENCY
AND GLBAL.ACTUAL_FLAG = :P_BALANCE_TYPE
AND GLBAL.TEMPLATE_ID IS NULL
--Q_BATCH
SELECT 
    GLBATCH.NAME BATCH_NAME,
    GLH.JE_HEADER_ID JRNL_HEADER_ID,
    GLH.NAME JRNL_NAME,
    GLH.PERIOD_NAME BATCH_PERIOD,
    GLH.CURRENCY_CODE JRNL_CURRENCY_CODE,
    TO_CHAR(GLH.DEFAULT_EFFECTIVE_DATE, 'YYYY-MM-DD') || 'T' || TO_CHAR(GLH.DEFAULT_EFFECTIVE_DATE, 'HH24:MI:SS') JRNL_EFFECTIVE_DATE,
    NVL(SRC.USER_JE_SOURCE_NAME, '**********') JRNL_SOURCE,
    NVL(CAT.USER_JE_CATEGORY_NAME, '**********') JRNL_CATEGORY,
    FSV.HEADER_NAME JRNL_ACCT_SEQ_NAME,
    FSV.VERSION_NAME JRNL_ACCT_SEQ_VERSION,
    GLH.CLOSE_ACCT_SEQ_VALUE JRNL_ACCT_SEQ_NUM,
    DOCSEQ.NAME JRNL_DOC_SEQ_NAME,
    GLH.DOC_SEQUENCE_VALUE JRNL_DOC_SEQ_NUM,
    GLL.JE_LINE_NUM JRNL_LINE_NUM,
    NVL(&SELECT_DR, 0) JRNL_LINE_DR,
    NVL(&SELECT_CR, 0) JRNL_LINE_CR,
    GLL.DESCRIPTION JRNL_LINE_DESC,
    GLL.SUBLEDGER_DOC_SEQUENCE_ID  REFERENCE1,
    GLL.CODE_COMBINATION_ID CODE_COMBIINATION_ID,
    GLH.POSTING_ACCT_SEQ_VALUE JRNL_GL_ACCT_SEQ_NUM,
    &SELECT_ACCT_SEG ACCT_VALUE_IN,
   DECODE(&SELECT_ACCT_SEG,NULL,&SELECT_ACCT_SEG,SUBSTR(&SELECT_ACCT_SEG,1,3)) ACCT_LEVEL_VALUE_IN,
   gjlr.jgzz_recon_ref                          JGZZ_RECON_REF,
   to_char(gjlr.jgzz_recon_date,'YYYY-MM-DD')   JGZZ_RECON_DATE,
   gjlr.jgzz_recon_id                           JGZZ_RECON_GROUP,
   gjlr.jgzz_recon_status                       JGZZ_RECON_STATUS, 	
   (SELECT meaning	
    FROM gl_lookups
    WHERE lookup_type = 'ORA_GL_LINE_RECON_STATUS'
    AND lookup_code   = Nvl(gjlr.jgzz_recon_status, 'U')) AS RECON_STATUS
FROM
    GL_JE_LINES GLL,
    GL_JE_HEADERS GLH,
    GL_JE_BATCHES GLBATCH,
    FUN_SEQ_VERSIONS FSV,
    FND_DOCUMENT_SEQUENCES DOCSEQ,
    GL_JE_LINES_RECON GJLR,  -- bug 25112757
    GL_JE_SOURCES SRC,
    GL_JE_CATEGORIES CAT,
    GL_CODE_COMBINATIONS CC
WHERE CAT.JE_CATEGORY_NAME = GLH.JE_CATEGORY
AND SRC.JE_SOURCE_NAME = GLH.JE_SOURCE
AND GLH.DOC_SEQUENCE_ID = DOCSEQ.DOC_SEQUENCE_ID (+)
AND GLH.CLOSE_ACCT_SEQ_VERSION_ID = FSV.SEQ_VERSION_ID (+)
AND GLBATCH.AVERAGE_JOURNAL_FLAG = 'N'
AND GLBATCH.STATUS = 'P'
AND GLBATCH.JE_BATCH_ID = GLH.JE_BATCH_ID
&BUDENC_WHERE_JRNL
&CURR_WHERE_JRNL
AND GLH.DEFAULT_EFFECTIVE_DATE BETWEEN :FP_START_DATE AND :TP_END_DATE
AND GLH.LEDGER_ID = :P_LEDGER_ID
AND GLH.ACTUAL_FLAG = :P_BALANCE_TYPE
AND GLH.JE_HEADER_ID = GLL.JE_HEADER_ID
AND GLL.STATUS = 'P'
AND GLL.LEDGER_ID = :P_LEDGER_ID
AND GLL.PERIOD_NAME = :PERIOD_NAME
AND GLL.CODE_COMBINATION_ID = :CCID
AND GLL.JE_HEADER_ID 	= GJLR.JE_HEADER_ID(+)
AND GLL.JE_LINE_NUM	= GJLR.JE_LINE_NUM(+)
AND CC.CODE_COMBINATION_ID = GLL.CODE_COMBINATION_ID
AND CC.CHART_OF_ACCOUNTS_ID = :P_COA_ID
--Q_BAL
SELECT 
    &ACCT ACCT,
	&ACCT_DESC ACCT_DESC,
    &SELECT_LE LEGAL_ENTITY_ID,
   decode(:g_acctg_code,'EXCLUSIVE', JGZZGLJRB.legal_entity_nameformula(:g_legal_entity_id),
                       'SHARED',     JGZZGLJRB.legal_entity_nameformula(&SELECT_LE), 
			'') LEGAL_ENTITY_NAME,
   decode(:g_acctg_code,'EXCLUSIVE', JGZZGLJRB.le_address_line_1formula(:g_legal_entity_id),
                       'SHARED',     JGZZGLJRB.le_address_line_1formula(&SELECT_LE), 
			'') LE_ADDRESS_LINE_1, 
   decode(:g_acctg_code,'EXCLUSIVE', JGZZGLJRB.le_address_line_2formula(:g_legal_entity_id),
                       'SHARED',     JGZZGLJRB.le_address_line_2formula(&SELECT_LE), 
			'') LE_ADDRESS_LINE_2, 
   decode(:g_acctg_code,'EXCLUSIVE', JGZZGLJRB.le_address_line_3formula(:g_legal_entity_id),
                       'SHARED',     JGZZGLJRB.le_address_line_3formula(&SELECT_LE), 
			'') LE_ADDRESS_LINE_3, 
   decode(:g_acctg_code,'EXCLUSIVE', JGZZGLJRB.le_cityformula(:g_legal_entity_id),
                       'SHARED',     JGZZGLJRB.le_cityformula(&SELECT_LE), 
			'') LE_CITY, 
   decode(:g_acctg_code,'EXCLUSIVE', JGZZGLJRB.le_postal_codeformula(:g_legal_entity_id),
                       'SHARED',     JGZZGLJRB.le_postal_codeformula(&SELECT_LE), 
			'') LE_POSTAL_CODE, 
   decode(:g_acctg_code,'EXCLUSIVE', JGZZGLJRB.le_registration_numberformula(:g_legal_entity_id),
                       'SHARED',     JGZZGLJRB.le_registration_numberformula(&SELECT_LE), 
			'') LE_REGISTRATION_NUMBER,
    &SELECT_ACCOUNT ACCOUNT,
    &SELECT_ACCT_SEG ACCOUNT_VALUE,
    &SELECT_BAL_SEG BALANCING_SEGMENT_VALUE,
    &SELECT_CC_SEG COST_CENTER_VALUE,
    &SELECT_IC_SEG INTERCOMPANY_SEGMENT_VALUE,
    &SELECT_MGT_SEG MANAGEMENT_SEGMENT_VALUE,
    &SELECT_ST_SEG SECONDARY_TRACK_SEGMENT_VALUE,
    &SELECT_BEGIN_BAL BEGIN_BALANCE,
    GLBAL.PERIOD_NAME PERIOD_NAME,
    GLBAL.PERIOD_NUM PERIOD_NUM,
    GLBAL.CODE_COMBINATION_ID CCID,
    GLP.EFFECTIVE_PERIOD_NUM
FROM
    GL_PERIOD_STATUSES GLP,
    GL_CODE_COMBINATIONS CC,
    &FROM_LNSV
    GL_BALANCES GLBAL
WHERE GLBAL.LEDGER_ID = :P_LEDGER_ID
&BUDENC_WHERE_BAL
&CURR_WHERE_BAL
AND GLBAL.CURRENCY_CODE = :BAL_CURRENCY
AND GLBAL.ACTUAL_FLAG = :P_BALANCE_TYPE
AND GLBAL.TEMPLATE_ID IS NULL
AND GLBAL.PERIOD_NAME = GLP.PERIOD_NAME
AND GLBAL.CODE_COMBINATION_ID = CC.CODE_COMBINATION_ID
&LE_WHERE
&PERIOD_WHERE
AND GLP.APPLICATION_ID = 101
AND GLP.LEDGER_ID = :P_LEDGER_ID
&DAS_WHERE
&SEG_SECURITY_WHERE
&ACCT_WHERE
AND CC.CHART_OF_ACCOUNTS_ID = :P_COA_ID
AND &LEX_FILTER_WHERE
AND     &FLEXDATA_SECURE = 'N'
ORDER BY 
          decode(:g_acctg_code,'EXCLUSIVE', JGZZGLJRB.legal_entity_nameformula(:g_legal_entity_id),
                       'SHARED',     JGZZGLJRB.legal_entity_nameformula(&SELECT_LE), 
			''),
         effective_period_num,
	 &SELECT_BAL_SEG,
         &SELECT_ACCT_SEG,
	 &SELECT_CC_SEG
==================================================================================================
-------------------------ExtractICPaymentTrxDm---------------------------
--Q_PAY_TRX
Select Cn_Srp_Participant_Details_All.Country_Code  As CountryCode
      ,Cn_Tp_Participant_Pay_All.Earning_Id         AS EarningId
      ,Cn_Tp_Earnings_All_V.Transaction_Id          AS TransactionId
      ,:P_Hold_Flag                                 AS HoldFlag
      ,Cn_Tp_Participant_Pay_All.Incentive_Type_Code AS IncentiveTypeCode
      ,Payment_Status.Meaning                       AS ObjectStatus
      ,Cn_Tp_Participant_Pay_All.Org_Id             AS OrgId
      ,Cn_Tp_Transactions_All.Sales_Channel         AS OriginatingChannelName
      ,Cn_Tp_Participant_Pay_All.Participant_Pay_Id AS ParticipantPayId
      ,Cn_Srp_Participant_Hdr_Ro_V.Participant_Type AS ParticipantType
      ,Cn_Srp_Participant_Hdr_Ro_V.Party_Id         AS PartyId
      ,Cn_Srp_Participant_Hdr_Ro_V.Participant_Name AS PartyName
      ,Cn_Srp_Participant_Hdr_Ro_V.Party_Number     AS PartyNumber
      ,Cn_Tp_Participant_Pay_All.Pay_Amt_Func_Curr  AS FuncCurrencyPayAmount
      ,Cn_Tp_Participant_Pay_All.Pay_Amt_Pay_Curr   AS PayCurrencyPayAmount
      ,Cn_Tp_Participant_Pay_All.Pay_Currency_Code  AS PayCurrencyCode
      ,to_char(Cn_Tp_Payruns_All.Pay_Date, 'YYYY-MM-DD') AS PayDate
      ,Cn_Periods_Tl.Period_Name                    AS PayPeriodName
      ,Cn_Tp_Payruns_All.Payrun_Id                  AS PayRunId
      ,Cn_Tp_Participant_Pay_All.Plan_Component_Id  AS PlanComponentId
      ,Cn_Plan_Components_All_Tl.Plan_Component_Name AS PlanComponentName
      ,Cn_Tp_Transactions_All.Source_Trx_Number     AS TransactionNumber
      ,Transaction_Type.Meaning                     AS TranactionType
      ,Source_Type.Meaning                          AS SourceType
      ,Cn_Tp_Earnings_All_V.Eligible_Cat_Id         AS EligibleCatId
      ,Cn_Eligible_Cats_All_Tl.NAME                 AS CreditCategory
      ,CASE
        WHEN Cn_Tp_Earnings_All_V.Object_Status = 'REVERSED'
        THEN 0 - Cn_Tp_Measure_Results_All.Output_Achieved
        ELSE Cn_Tp_Measure_Results_All.Output_Achieved
       END AS OutputAchieved
      ,Cn_Tp_Measure_Results_All.Measure_Result_Id  AS MeasureResultId
      ,Cn_Tp_Paysheets_All.Paysheet_Id              AS PaysheetId
      ,Cn_Tp_Transactions_All.Attribute1            AS TrxAttribute1
      ,Cn_Tp_Transactions_All.Attribute2            AS TrxAttribute2
      ,Cn_Tp_Transactions_All.Attribute3            AS TrxAttribute3
      ,Cn_Tp_Transactions_All.Attribute4            AS TrxAttribute4--CUSTOMER_NAME
      ,Cn_Tp_Transactions_All.Attribute5            AS TrxAttribute5
      ,Cn_Tp_Transactions_All.Attribute6            AS TrxAttribute6--LENDER
      ,Cn_Tp_Transactions_All.Attribute7            AS TrxAttribute7
      ,Cn_Tp_Transactions_All.Attribute8            AS TrxAttribute8
      ,Cn_Tp_Transactions_All.Attribute9            AS TrxAttribute9
      ,Cn_Tp_Transactions_All.Attribute10           AS TrxAttribute10
      ,Cn_Tp_Transactions_All.Attribute11           AS TrxAttribute11
      ,Cn_Tp_Transactions_All.Attribute12           AS TrxAttribute12
      ,Cn_Tp_Transactions_All.Attribute13           AS TrxAttribute13
      ,Cn_Tp_Transactions_All.Attribute14           AS TrxAttribute14
      ,Cn_Tp_Transactions_All.Attribute15           AS TrxAttribute15--FUNDER_NAME
      ,Cn_Tp_Transactions_All.Attribute16           AS TrxAttribute16
      ,Cn_Tp_Transactions_All.Attribute17           AS TrxAttribute17
      ,Cn_Tp_Transactions_All.Attribute18           AS TrxAttribute18
      ,Cn_Tp_Transactions_All.Attribute19           AS TrxAttribute19--CURRENT_CHANNEL_NAME
      ,Cn_Tp_Transactions_All.Attribute20           AS TrxAttribute20--PRODUCT_NAME
      ,Cn_Tp_Transactions_All.Attribute21           AS TrxAttribute21--TRANSACTION_SUB_TYPE
      ,Cn_Tp_Transactions_All.Attribute22           AS TrxAttribute22--PAY_TRANSACTION_CATEGORY
      ,Cn_Tp_Transactions_All.Attribute23           AS TrxAttribute23--PRODUCT_TYPE
      ,Cn_Tp_Transactions_All.Attribute24           AS TrxAttribute24
      ,Cn_Tp_Transactions_All.Attribute25           AS TrxAttribute25
      ,Cn_Tp_Transactions_All.Attribute26           AS TrxAttribute26
      ,Cn_Tp_Transactions_All.Attribute27           AS TrxAttribute27--HEAD_OFFICE_BRANCH_NAME
      ,Cn_Tp_Transactions_All.Attribute28           AS TrxAttribute28--SALES_MANAGER_NAME
      ,Cn_Tp_Transactions_All.Attribute29           AS TrxAttribute29
      ,Cn_Tp_Transactions_All.Attribute30           AS TrxAttribute30--LOAN_STATUS
      ,Cn_Tp_Transactions_All.Attribute31           AS TrxAttribute31
      ,Cn_Tp_Transactions_All.Attribute32           AS TrxAttribute32
      ,Cn_Tp_Transactions_All.Attribute33           AS TrxAttribute33
      ,Cn_Tp_Transactions_All.Attribute34           AS TrxAttribute34--STATE
      ,Cn_Tp_Transactions_All.Attribute35           AS TrxAttribute35
      ,Cn_Tp_Transactions_All.Attribute36           AS TrxAttribute36
      ,Cn_Tp_Transactions_All.Attribute37           AS TrxAttribute37
      ,Cn_Tp_Transactions_All.Attribute38           AS TrxAttribute38
      ,Cn_Tp_Transactions_All.Attribute39           AS TrxAttribute39
      ,Cn_Tp_Transactions_All.Attribute40           AS TrxAttribute40--LEGAL_ENTITY_ID
      ,Cn_Tp_Transactions_All.Attribute_Number1     AS TrxAttributeNumber1
      ,Cn_Tp_Transactions_All.Attribute_Number2     AS TrxAttributeNumber2
      ,Cn_Tp_Transactions_All.Attribute_Number3     AS TrxAttributeNumber3
      ,Cn_Tp_Transactions_All.Attribute_Number4     AS TrxAttributeNumber4
      ,Cn_Tp_Transactions_All.Attribute_Number5     AS TrxAttributeNumber5
      ,Cn_Tp_Transactions_All.Attribute_Number6     AS TrxAttributeNumber6
      ,Cn_Tp_Transactions_All.Attribute_Number7     AS TrxAttributeNumber7
      ,Cn_Tp_Transactions_All.Attribute_Number8     AS TrxAttributeNumber8
      ,Cn_Tp_Transactions_All.Attribute_Number9     AS TrxAttributeNumber9
      ,Cn_Tp_Transactions_All.Attribute_Number10    AS TrxAttributeNumber10
      ,Cn_Tp_Transactions_All.Attribute_Number11    AS TrxAttributeNumber11
      ,Cn_Tp_Transactions_All.Attribute_Number12    AS TrxAttributeNumber12--GST
      ,Cn_Tp_Transactions_All.Attribute_Number13    AS TrxAttributeNumber13
      ,Cn_Tp_Transactions_All.Attribute_Number14    AS TrxAttributeNumber14
      ,Cn_Tp_Transactions_All.Attribute_Number15    AS TrxAttributeNumber15
      ,Cn_Tp_Transactions_All.Attribute_Number16    AS TrxAttributeNumber16
      ,Cn_Tp_Transactions_All.Attribute_Number17    AS TrxAttributeNumber17
      ,Cn_Tp_Transactions_All.Attribute_Number18    AS TrxAttributeNumber18
      ,Cn_Tp_Transactions_All.Attribute_Number19    AS TrxAttributeNumber19
      ,Cn_Tp_Transactions_All.Attribute_Number20    AS TrxAttributeNumber20
      ,Cn_Tp_Transactions_All.Attribute_Number21    AS TrxAttributeNumber21
      ,Cn_Tp_Transactions_All.Attribute_Number22    AS TrxAttributeNumber22
      ,Cn_Tp_Transactions_All.Attribute_Number23    AS TrxAttributeNumber23
      ,Cn_Tp_Transactions_All.Attribute_Number24    AS TrxAttributeNumber24
      ,Cn_Tp_Transactions_All.Attribute_Number25    AS TrxAttributeNumber25
      ,Cn_Plan_Components_All_B.Attribute1          AS PlanAttribute1
      ,Cn_Plan_Components_All_B.Attribute2          AS PlanAttribute2
      ,Cn_Plan_Components_All_B.Attribute3          AS PlanAttribute3
      ,Cn_Plan_Components_All_B.Attribute4          AS PlanAttribute4
      ,Cn_Plan_Components_All_B.Attribute5          AS PlanAttribute5
      ,Cn_Plan_Components_All_B.Attribute6          AS PlanAttribute6
      ,Cn_Plan_Components_All_B.Attribute7          AS PlanAttribute7
      ,Cn_Plan_Components_All_B.Attribute8          AS PlanAttribute8
      ,Cn_Plan_Components_All_B.Attribute9          AS PlanAttribute9
      ,Cn_Plan_Components_All_B.Attribute10         AS PlanAttribute10
      ,Cn_Plan_Components_All_B.Attribute11         AS PlanAttribute11
      ,Cn_Plan_Components_All_B.Attribute12         AS PlanAttribute12
      ,Cn_Plan_Components_All_B.Attribute13         AS PlanAttribute13
      ,Cn_Plan_Components_All_B.Attribute14         AS ComponentCategory
      ,Cn_Plan_Components_All_B.Attribute15         AS ComponentType
      ,Cn_Formulas_All_B.Attribute1                 AS PmAttribute1
      ,Cn_Formulas_All_B.Attribute2                 AS PmAttribute2
      ,Cn_Formulas_All_B.Attribute3                 AS PmAttribute3
      ,Cn_Formulas_All_B.Attribute4                 AS PmAttribute4
      ,Cn_Formulas_All_B.Attribute5                 AS PmAttribute5
      ,Cn_Formulas_All_B.Attribute6                 AS PmAttribute6
      ,Cn_Formulas_All_B.Attribute7                 AS PmAttribute7
      ,Cn_Formulas_All_B.Attribute8                 AS PmAttribute8
      ,Cn_Formulas_All_B.Attribute9                 AS PmAttribute9
      ,Cn_Formulas_All_B.Attribute10                AS PmAttribute10
      ,Cn_Formulas_All_B.Attribute11                AS PmAttribute11
      ,Cn_Formulas_All_B.Attribute12                AS PmAttribute12
      ,Cn_Formulas_All_B.Attribute13                AS PmAttribute13
      ,Cn_Formulas_All_B.Attribute14                AS PmAttribute14
      ,Cn_Formulas_All_B.Attribute15                AS MeasureType	  
FROM Cn_Tp_Participant_Pay_All
    ,Cn_Tp_Measure_Results_All
    ,Cn_Formulas_All_B
    ,Cn_Srp_Participant_Hdr_Ro_V
    ,Cn_Srp_Participant_Details_All
    ,Cn_Tp_Earnings_All_V
    ,Cn_Tp_Payruns_All
    ,Cn_Plan_Components_All_B
    ,Cn_Plan_Components_All_Tl
    ,Cn_Tp_Transactions_All
    ,Cn_Tp_Paysheets_All
    ,Cn_Repositories_All_B
    ,Cn_Periods_Tl
    ,Cn_Credit_Types_All_Tl
    ,Cn_Eligible_Cats_All_B
    ,Cn_Eligible_Cats_All_Tl
    ,Cn_Lookups Payment_Status
    ,Cn_Lookups Transaction_Type
    ,(SELECT * FROM Cn_Lookups WHERE Lookup_Type = 'CN_TP_SOURCE_TYPE') Source_Type
WHERE Cn_Tp_Participant_Pay_All.Payee_Participant_Id = Cn_Srp_Participant_Hdr_Ro_V.Participant_Id
AND Cn_Srp_Participant_Hdr_Ro_V.Participant_Id       = Cn_Srp_Participant_Details_All.Participant_Id --new
AND (Cn_Tp_Payruns_All.Pay_Date BETWEEN Cn_Srp_Participant_Details_All.Start_Date AND Nvl(Cn_Srp_Participant_Details_All.End_Date,Cn_Tp_Payruns_All.Pay_Date+1))
AND Cn_Eligible_Cats_All_B.Eligible_Cat_Id       = Cn_Eligible_Cats_All_Tl.Eligible_Cat_Id
AND Cn_Eligible_Cats_All_Tl.Language             = 'US'
AND Cn_Tp_Earnings_All_V.Eligible_Cat_Id         = Cn_Eligible_Cats_All_B.Eligible_Cat_Id
AND Cn_Tp_Participant_Pay_All.Earning_Id           = Cn_Tp_Earnings_All_V.Earning_Id
AND Cn_Tp_Participant_Pay_All.Payrun_Id            = Cn_Tp_Payruns_All.Payrun_Id
AND Cn_Tp_Participant_Pay_All.Plan_Component_Id    = Cn_Plan_Components_All_B.Plan_Component_Id
AND Cn_Plan_Components_All_Tl.Plan_Component_Id    = Cn_Plan_Components_All_B.Plan_Component_Id
AND Cn_Plan_Components_All_Tl.Language             = 'US'
AND Cn_Tp_Measure_Results_All.Transaction_Id       = Cn_Tp_Earnings_All_V.Transaction_Id
AND Cn_Tp_Measure_Results_All.Plan_Component_Id    = Cn_Tp_Earnings_All_V.Plan_Component_Id
AND Cn_Tp_Measure_Results_All.Participant_Id = Cn_Tp_Participant_Pay_All.Payee_Participant_Id
AND Cn_Formulas_All_B.Formula_Id                   = Cn_Tp_Measure_Results_All.Formula_Id
AND Cn_Tp_Transactions_All.Source_Trx_Number       = Cn_Tp_Participant_Pay_All.Source_Trx_Number
AND Cn_Tp_Transactions_All.Transaction_Type        = Cn_Tp_Participant_Pay_All.Transaction_Type
AND Cn_Tp_Participant_Pay_All.Payee_Participant_Id = Cn_Tp_Paysheets_All.Participant_Id
AND Cn_Tp_Participant_Pay_All.Payrun_Id            = Cn_Tp_Paysheets_All.Payrun_Id
AND Cn_Tp_Paysheets_All.Quota_Id                   IS NULL
AND Cn_Srp_Participant_Hdr_Ro_V.Participant_Id     = Cn_Tp_Paysheets_All.Participant_Id
AND Cn_Tp_Participant_Pay_All.Org_Id               = Cn_Repositories_All_B.Org_Id
AND Cn_Repositories_All_B.Calendar_Id              = Cn_Periods_Tl.Calendar_Id
AND Cn_Tp_Payruns_All.Pay_Period_Id                = Cn_Periods_Tl.Period_Id
AND Cn_Periods_Tl.Language                         = 'US'
AND Cn_Credit_Types_All_Tl.Credit_Type_Id          = Cn_Tp_Participant_Pay_All.Credit_Type_Id
AND Cn_Credit_Types_All_Tl.Language                = 'US'
AND Cn_Credit_Types_All_Tl.Org_Id                  = Cn_Tp_Participant_Pay_All.Org_Id
AND (Payment_Status.Lookup_Code                    = Nvl(Cn_Tp_Participant_Pay_All.Object_Status, 'UNPAID')
AND Payment_Status.Lookup_Type                     = 'CN_PAYMENT_STATUS')
AND (Transaction_Type.Lookup_Code                  = Cn_Tp_Transactions_All.Transaction_Type
AND Transaction_Type.Lookup_Type                   = 'CN_TP_TRANSACTION_TYPE')
AND Cn_Tp_Transactions_All.Source_Type             = Source_Type.Lookup_Code (+)
AND (Cn_Plan_Components_All_B.Attribute15 ||' '|| Cn_Plan_Components_All_B.Attribute14) IN ('Actual Expense')
AND Cn_Formulas_All_B.Attribute14 = 'Y'
AND Cn_Formulas_All_B.Attribute15 IN ('Commission', 'GST')
AND Ja_Au_Api.Get_Hold_Flag(Nvl(Cn_Tp_Participant_Pay_All.Hold_Flag, 'N'), Nvl(Cn_Srp_Participant_Hdr_Ro_V.Hold_Payment_Flag,'N'), Cn_Tp_Paysheets_All.Object_Status) = :P_Hold_Flag
AND Cn_Tp_Participant_Pay_All.Org_Id               = Nvl(:P_Org_Id,Cn_Tp_Participant_Pay_All.Org_Id)
AND Cn_Periods_Tl.Period_Id                        = Nvl(:P_Period_Id ,Cn_Periods_Tl.Period_Id)
AND Cn_Tp_Payruns_All.Pay_Date                      >= Nvl(:P_From_Date ,Cn_Tp_Payruns_All.Pay_Date)
AND Cn_Tp_Payruns_All.Pay_Date                      <= Nvl(:P_To_Date ,Cn_Tp_Payruns_All.Pay_Date)
AND Cn_Srp_Participant_Hdr_Ro_V.Participant_Id      = Nvl(:P_Participant_Id ,Cn_Srp_Participant_Hdr_Ro_V.Participant_Id)
AND ((:P_Hold_Flag = 'N' AND CN_TP_PARTICIPANT_PAY_ALL.OBJECT_STATUS = 'PAID' AND NOT EXISTS(SELECT 1 FROM Ap_Invoices_All Inv WHERE Inv.Attribute15 = Cn_Tp_Paysheets_All.Paysheet_Id))
 OR (:P_Hold_Flag = 'Y' AND Cn_Formulas_All_B.Attribute12 = 'Y' AND NOT EXISTS(SELECT 1 FROM Gl_Import_References Gl_Ref WHERE Gl_Ref.Reference_6 = 'OIC' AND To_Char(Gl_Ref.Reference_2) = To_Char(Cn_Tp_Earnings_All_V.Earning_Id))))
UNION
SELECT Cn_Srp_Participant_Details_All.Country_Code  AS CountryCode
      ,Cn_Tp_Participant_Pay_All.Earning_Id         AS EarningId
      ,Cn_Tp_Earnings_All_V.Transaction_Id          AS TransactionId
      ,:P_Hold_Flag                                 AS HoldFlag
      ,Cn_Tp_Participant_Pay_All.Incentive_Type_Code AS IncentiveTypeCode
      ,Payment_Status.Meaning                       AS ObjectStatus
      ,Cn_Tp_Participant_Pay_All.Org_Id             AS OrgId
      ,Cn_Tp_Transactions_All.Sales_Channel         AS OriginatingChannelName
      ,Cn_Tp_Participant_Pay_All.Participant_Pay_Id AS ParticipantPayId
      ,Cn_Srp_Participant_Hdr_Ro_V.Participant_Type AS ParticipantType
      ,Cn_Srp_Participant_Hdr_Ro_V.Party_Id         AS PartyId
      ,Cn_Srp_Participant_Hdr_Ro_V.Participant_Name AS PartyName
      ,Cn_Srp_Participant_Hdr_Ro_V.Party_Number     AS PartyNumber
      ,Cn_Tp_Participant_Pay_All.Pay_Amt_Func_Curr  AS FuncCurrencyPayAmount
      ,Cn_Tp_Participant_Pay_All.Pay_Amt_Pay_Curr   AS PayCurrencyPayAmount
      ,Cn_Tp_Participant_Pay_All.Pay_Currency_Code  AS PayCurrencyCode
      ,to_char(Cn_Tp_Payruns_All.Pay_Date, 'YYYY-MM-DD') AS PayDate
      ,Cn_Periods_Tl.Period_Name                    AS PayPeriodName
      ,Cn_Tp_Payruns_All.Payrun_Id                  AS PayRunId
      ,Cn_Tp_Participant_Pay_All.Plan_Component_Id  AS PlanComponentId
      ,Cn_Plan_Components_All_Tl.Plan_Component_Name AS PlanComponentName
      ,Cn_Tp_Transactions_All.Source_Trx_Number     AS TransactionNumber
      ,Transaction_Type.Meaning                     AS TranactionType
      ,Source_Type.Meaning                          AS SourceType
      ,Cn_Tp_Earnings_All_V.Eligible_Cat_Id         AS EligibleCatId
      ,Cn_Eligible_Cats_All_Tl.NAME                 AS CreditCategory
      ,0 - imported_lines.amount AS OutputAchieved
      ,NULL                                         AS MeasureResultId
      ,Cn_Tp_Paysheets_All.Paysheet_Id              AS PaysheetId
      ,Cn_Tp_Transactions_All.Attribute1            AS TrxAttribute1
      ,Cn_Tp_Transactions_All.Attribute2            AS TrxAttribute2
      ,Cn_Tp_Transactions_All.Attribute3            AS TrxAttribute3
      ,Cn_Tp_Transactions_All.Attribute4            AS TrxAttribute4--CUSTOMER_NAME
      ,Cn_Tp_Transactions_All.Attribute5            AS TrxAttribute5
      ,Cn_Tp_Transactions_All.Attribute6            AS TrxAttribute6--LENDER
      ,Cn_Tp_Transactions_All.Attribute7            AS TrxAttribute7
      ,Cn_Tp_Transactions_All.Attribute8            AS TrxAttribute8
      ,Cn_Tp_Transactions_All.Attribute9            AS TrxAttribute9
      ,Cn_Tp_Transactions_All.Attribute10           AS TrxAttribute10
      ,Cn_Tp_Transactions_All.Attribute11           AS TrxAttribute11
      ,Cn_Tp_Transactions_All.Attribute12           AS TrxAttribute12
      ,Cn_Tp_Transactions_All.Attribute13           AS TrxAttribute13
      ,Cn_Tp_Transactions_All.Attribute14           AS TrxAttribute14
      ,Cn_Tp_Transactions_All.Attribute15           AS TrxAttribute15--FUNDER_NAME
      ,Cn_Tp_Transactions_All.Attribute16           AS TrxAttribute16
      ,Cn_Tp_Transactions_All.Attribute17           AS TrxAttribute17
      ,Cn_Tp_Transactions_All.Attribute18           AS TrxAttribute18
      ,Cn_Tp_Transactions_All.Attribute19           AS TrxAttribute19--CURRENT_CHANNEL_NAME
      ,Cn_Tp_Transactions_All.Attribute20           AS TrxAttribute20--PRODUCT_NAME
      ,Cn_Tp_Transactions_All.Attribute21           AS TrxAttribute21--TRANSACTION_SUB_TYPE
      ,Cn_Tp_Transactions_All.Attribute22           AS TrxAttribute22--PAY_TRANSACTION_CATEGORY
      ,Cn_Tp_Transactions_All.Attribute23           AS TrxAttribute23--PRODUCT_TYPE
      ,Cn_Tp_Transactions_All.Attribute24           AS TrxAttribute24
      ,Cn_Tp_Transactions_All.Attribute25           AS TrxAttribute25
      ,Cn_Tp_Transactions_All.Attribute26           AS TrxAttribute26
      ,Cn_Tp_Transactions_All.Attribute27           AS TrxAttribute27--HEAD_OFFICE_BRANCH_NAME
      ,Cn_Tp_Transactions_All.Attribute28           AS TrxAttribute28--SALES_MANAGER_NAME
      ,Cn_Tp_Transactions_All.Attribute29           AS TrxAttribute29
      ,Cn_Tp_Transactions_All.Attribute30           AS TrxAttribute30--LOAN_STATUS
      ,Cn_Tp_Transactions_All.Attribute31           AS TrxAttribute31
      ,Cn_Tp_Transactions_All.Attribute32           AS TrxAttribute32
      ,Cn_Tp_Transactions_All.Attribute33           AS TrxAttribute33
      ,Cn_Tp_Transactions_All.Attribute34           AS TrxAttribute34--STATE
      ,Cn_Tp_Transactions_All.Attribute35           AS TrxAttribute35
      ,Cn_Tp_Transactions_All.Attribute36           AS TrxAttribute36
      ,Cn_Tp_Transactions_All.Attribute37           AS TrxAttribute37
      ,Cn_Tp_Transactions_All.Attribute38           AS TrxAttribute38
      ,Cn_Tp_Transactions_All.Attribute39           AS TrxAttribute39
      ,Cn_Tp_Transactions_All.Attribute40           AS TrxAttribute40--LEGAL_ENTITY_ID
      ,Cn_Tp_Transactions_All.Attribute_Number1     AS TrxAttributeNumber1
      ,Cn_Tp_Transactions_All.Attribute_Number2     AS TrxAttributeNumber2
      ,Cn_Tp_Transactions_All.Attribute_Number3     AS TrxAttributeNumber3
      ,Cn_Tp_Transactions_All.Attribute_Number4     AS TrxAttributeNumber4
      ,Cn_Tp_Transactions_All.Attribute_Number5     AS TrxAttributeNumber5
      ,Cn_Tp_Transactions_All.Attribute_Number6     AS TrxAttributeNumber6
      ,Cn_Tp_Transactions_All.Attribute_Number7     AS TrxAttributeNumber7
      ,Cn_Tp_Transactions_All.Attribute_Number8     AS TrxAttributeNumber8
      ,Cn_Tp_Transactions_All.Attribute_Number9     AS TrxAttributeNumber9
      ,Cn_Tp_Transactions_All.Attribute_Number10    AS TrxAttributeNumber10
      ,Cn_Tp_Transactions_All.Attribute_Number11    AS TrxAttributeNumber11
      ,Cn_Tp_Transactions_All.Attribute_Number12    AS TrxAttributeNumber12--GST
      ,Cn_Tp_Transactions_All.Attribute_Number13    AS TrxAttributeNumber13
      ,Cn_Tp_Transactions_All.Attribute_Number14    AS TrxAttributeNumber14
      ,Cn_Tp_Transactions_All.Attribute_Number15    AS TrxAttributeNumber15
      ,Cn_Tp_Transactions_All.Attribute_Number16    AS TrxAttributeNumber16
      ,Cn_Tp_Transactions_All.Attribute_Number17    AS TrxAttributeNumber17
      ,Cn_Tp_Transactions_All.Attribute_Number18    AS TrxAttributeNumber18
      ,Cn_Tp_Transactions_All.Attribute_Number19    AS TrxAttributeNumber19
      ,Cn_Tp_Transactions_All.Attribute_Number20    AS TrxAttributeNumber20
      ,Cn_Tp_Transactions_All.Attribute_Number21    AS TrxAttributeNumber21
      ,Cn_Tp_Transactions_All.Attribute_Number22    AS TrxAttributeNumber22
      ,Cn_Tp_Transactions_All.Attribute_Number23    AS TrxAttributeNumber23
      ,Cn_Tp_Transactions_All.Attribute_Number24    AS TrxAttributeNumber24
      ,Cn_Tp_Transactions_All.Attribute_Number25    AS TrxAttributeNumber25
      ,Cn_Plan_Components_All_B.Attribute1          AS PlanAttribute1
      ,Cn_Plan_Components_All_B.Attribute2          AS PlanAttribute2
      ,Cn_Plan_Components_All_B.Attribute3          AS PlanAttribute3
      ,Cn_Plan_Components_All_B.Attribute4          AS PlanAttribute4
      ,Cn_Plan_Components_All_B.Attribute5          AS PlanAttribute5
      ,Cn_Plan_Components_All_B.Attribute6          AS PlanAttribute6
      ,Cn_Plan_Components_All_B.Attribute7          AS PlanAttribute7
      ,Cn_Plan_Components_All_B.Attribute8          AS PlanAttribute8
      ,Cn_Plan_Components_All_B.Attribute9          AS PlanAttribute9
      ,Cn_Plan_Components_All_B.Attribute10         AS PlanAttribute10
      ,Cn_Plan_Components_All_B.Attribute11         AS PlanAttribute11
      ,Cn_Plan_Components_All_B.Attribute12         AS PlanAttribute12
      ,Cn_Plan_Components_All_B.Attribute13         AS PlanAttribute13
      ,Cn_Plan_Components_All_B.Attribute14         AS ComponentCategory
      ,Cn_Plan_Components_All_B.Attribute15         AS ComponentType
      ,NULL                                         AS PmAttribute1
      ,NULL                                         AS PmAttribute2
      ,NULL                                         AS PmAttribute3
      ,NULL                                         AS PmAttribute4
      ,NULL                                         AS PmAttribute5
      ,NULL                                         AS PmAttribute6
      ,NULL                                         AS PmAttribute7
      ,NULL                                         AS PmAttribute8
      ,NULL                                         AS PmAttribute9
      ,NULL                                         AS PmAttribute10
      ,NULL                                         AS PmAttribute11
      ,NULL                                         AS PmAttribute12
      ,imported_lines.TAX_RATE_CODE                 AS PmAttribute13
      ,NULL                                         AS PmAttribute14
      ,NULL                                         AS MeasureType
FROM Cn_Tp_Participant_Pay_All
    ,Cn_Srp_Participant_Hdr_Ro_V
    ,Cn_Srp_Participant_Details_All
    ,Cn_Tp_Earnings_All_V
    ,Cn_Tp_Payruns_All
    ,Cn_Plan_Components_All_B
    ,Cn_Plan_Components_All_Tl
    ,Cn_Tp_Transactions_All
    ,Cn_Tp_Paysheets_All
    ,Cn_Repositories_All_B
    ,Cn_Periods_Tl
    ,Cn_Credit_Types_All_Tl
    ,Cn_Eligible_Cats_All_B
    ,Cn_Eligible_Cats_All_Tl
    ,Cn_Lookups Payment_Status
    ,Cn_Lookups Transaction_Type
    ,(SELECT * FROM Cn_Lookups WHERE Lookup_Type = 'CN_TP_SOURCE_TYPE') Source_Type
    ,Cn_Tp_Participant_Pay_All original_payment
    ,ap_invoice_lines_all imported_lines
WHERE Cn_Tp_Participant_Pay_All.Payee_Participant_Id = Cn_Srp_Participant_Hdr_Ro_V.Participant_Id
AND Cn_Srp_Participant_Hdr_Ro_V.Participant_Id       = Cn_Srp_Participant_Details_All.Participant_Id --new
AND (Cn_Tp_Payruns_All.Pay_Date BETWEEN Cn_Srp_Participant_Details_All.Start_Date AND Nvl(Cn_Srp_Participant_Details_All.End_Date,Cn_Tp_Payruns_All.Pay_Date+1))
AND Cn_Eligible_Cats_All_B.Eligible_Cat_Id       = Cn_Eligible_Cats_All_Tl.Eligible_Cat_Id
AND Cn_Eligible_Cats_All_Tl.Language             = 'US'
AND Cn_Tp_Earnings_All_V.Eligible_Cat_Id         = Cn_Eligible_Cats_All_B.Eligible_Cat_Id
AND Cn_Tp_Participant_Pay_All.Earning_Id           = Cn_Tp_Earnings_All_V.Earning_Id
AND Cn_Tp_Participant_Pay_All.Payrun_Id            = Cn_Tp_Payruns_All.Payrun_Id
AND Cn_Tp_Participant_Pay_All.Plan_Component_Id    = Cn_Plan_Components_All_B.Plan_Component_Id
AND Cn_Plan_Components_All_Tl.Plan_Component_Id    = Cn_Plan_Components_All_B.Plan_Component_Id
AND Cn_Plan_Components_All_Tl.Language             = 'US'
AND NOT EXISTS(SELECT 1 FROM Cn_Tp_Measure_Results_All, Cn_Formulas_All_B
               WHERE Cn_Tp_Measure_Results_All.Transaction_Id = Cn_Tp_Earnings_All_V.Transaction_Id
                 AND Cn_Tp_Measure_Results_All.Plan_Component_Id = Cn_Tp_Earnings_All_V.Plan_Component_Id
                 AND Cn_Formulas_All_B.Formula_Id = Cn_Tp_Measure_Results_All.Formula_Id)
AND original_payment.Earning_Id                    = Cn_Tp_Participant_Pay_All.Earning_Id
AND original_payment.Participant_Pay_Id            <> Cn_Tp_Participant_Pay_All.Participant_Pay_Id
AND original_payment.Participant_Pay_Id            = imported_lines.attribute15
AND Cn_Tp_Transactions_All.Source_Trx_Number       = Cn_Tp_Participant_Pay_All.Source_Trx_Number
AND Cn_Tp_Transactions_All.Transaction_Type        = Cn_Tp_Participant_Pay_All.Transaction_Type
AND Cn_Tp_Participant_Pay_All.Payee_Participant_Id = Cn_Tp_Paysheets_All.Participant_Id
AND Cn_Tp_Participant_Pay_All.Payrun_Id            = Cn_Tp_Paysheets_All.Payrun_Id
AND Cn_Tp_Paysheets_All.Quota_Id                   IS NULL
AND Cn_Srp_Participant_Hdr_Ro_V.Participant_Id     = Cn_Tp_Paysheets_All.Participant_Id
AND Cn_Tp_Participant_Pay_All.Org_Id               = Cn_Repositories_All_B.Org_Id
AND Cn_Repositories_All_B.Calendar_Id              = Cn_Periods_Tl.Calendar_Id
AND Cn_Tp_Payruns_All.Pay_Period_Id                = Cn_Periods_Tl.Period_Id
AND Cn_Periods_Tl.Language                         = 'US'
AND Cn_Credit_Types_All_Tl.Credit_Type_Id          = Cn_Tp_Participant_Pay_All.Credit_Type_Id
AND Cn_Credit_Types_All_Tl.Language                = 'US'
AND Cn_Credit_Types_All_Tl.Org_Id                  = Cn_Tp_Participant_Pay_All.Org_Id
AND (Payment_Status.Lookup_Code                    = Nvl(Cn_Tp_Participant_Pay_All.Object_Status, 'UNPAID')
AND Payment_Status.Lookup_Type                     = 'CN_PAYMENT_STATUS')
AND (Transaction_Type.Lookup_Code                  = Cn_Tp_Transactions_All.Transaction_Type
AND Transaction_Type.Lookup_Type                   = 'CN_TP_TRANSACTION_TYPE')
AND Cn_Tp_Transactions_All.Source_Type             = Source_Type.Lookup_Code (+)
AND (Cn_Plan_Components_All_B.Attribute15 ||' '|| Cn_Plan_Components_All_B.Attribute14) IN ('Actual Expense')
AND Ja_Au_Api.Get_Hold_Flag(Nvl(Cn_Tp_Participant_Pay_All.Hold_Flag, 'N'), Nvl(Cn_Srp_Participant_Hdr_Ro_V.Hold_Payment_Flag,'N'), Cn_Tp_Paysheets_All.Object_Status) = :P_Hold_Flag
AND Cn_Tp_Participant_Pay_All.Org_Id               = Nvl(:P_Org_Id,Cn_Tp_Participant_Pay_All.Org_Id)
AND Cn_Periods_Tl.Period_Id                        = Nvl(:P_Period_Id ,Cn_Periods_Tl.Period_Id)
AND Cn_Tp_Payruns_All.Pay_Date                      >= Nvl(:P_From_Date ,Cn_Tp_Payruns_All.Pay_Date)
AND Cn_Tp_Payruns_All.Pay_Date                      <= Nvl(:P_To_Date ,Cn_Tp_Payruns_All.Pay_Date)
AND Cn_Srp_Participant_Hdr_Ro_V.Participant_Id      = Nvl(:P_Participant_Id ,Cn_Srp_Participant_Hdr_Ro_V.Participant_Id)
AND ((:P_Hold_Flag = 'N' AND CN_TP_PARTICIPANT_PAY_ALL.OBJECT_STATUS = 'PAID' AND NOT EXISTS(SELECT 1 FROM Ap_Invoices_All Inv WHERE Inv.Attribute15 = Cn_Tp_Paysheets_All.Paysheet_Id))
 OR (:P_Hold_Flag = 'Y' AND NOT EXISTS(SELECT 1 FROM Gl_Import_References Gl_Ref WHERE Gl_Ref.Reference_6 = 'OIC' AND To_Char(Gl_Ref.Reference_2) = To_Char(Cn_Tp_Earnings_All_V.Earning_Id))))
 ================================================================================================================
 ----------------------------Fairfield GL by Transaction Project----------------------------------------------------------
--G_DETAILS
select A, transaction_number,
transaction_name,
transaction_type,
item_number,
description,
REFERENCE,
ref_type,
transaction_quantity,
transaction_id,
project_number,
Project_name,
task_number,
task_name
from (
----Receivables
SELECT 1 A, rct.trx_number transaction_number,
  rctt.NAME transaction_name,
  rctt.TYPE transaction_type,
  TO_CHAR(NULL) item_number,
  TO_CHAR(NULL) description,
  TO_CHAR(NULL) REFERENCE,
  TO_CHAR(NULL) ref_type,
  NULL transaction_quantity,
  NULL transaction_id,
    null project_number,
  null Project_name,
  null task_number,
  null task_name 
FROM ra_cust_trx_line_gl_dist_all rctl,
  ra_customer_trx_all rct,
  ra_cust_trx_types_all rctt
WHERE rctl.customer_trx_id  =rct.customer_trx_id
AND rct.cust_trx_type_seq_id=rctt.cust_trx_type_seq_id
AND cust_trx_line_gl_dist_id=:source_distribution_id_num_1
AND :journal_source ='Receivables'
UNION ALL
-- Cost Accounting
/*SELECT ccd.transaction_number,
  NULL,
  itt.transaction_type_name,
  esi.item_number,
  est.description,
  DECODE(itt.transaction_type_name, 'Sales Order Issue',
  (SELECT wdd.source_header_number
  FROM wsh_delivery_details wdd
  WHERE wdd.delivery_detail_id = imt.trx_source_line_id
  ), 'Sales Order Pick',
  (SELECT wdd.source_header_number
  FROM wsh_delivery_details wdd
  WHERE wdd.delivery_detail_id = imt.trx_source_line_id
  ), 'Cycle Count Adjustment',
  (SELECT cycle_count_header_name
  FROM inv_cycle_count_headers
  WHERE cycle_count_header_id = imt.transaction_source_id
  ), 'Account Alias Issue',
  (SELECT segment1
  FROM inv_generic_dispositions
  WHERE disposition_id = imt.transaction_source_id
  ), 'Purchase Order Receipt',
  (SELECT segment1
  FROM po_headers_all pha,
    rcv_transactions rt
  WHERE rt.po_header_id = pha.po_header_id
  AND rt.transaction_id = imt.rcv_transaction_id
  ), NVL(imt.transaction_source_name, imt.transaction_id) )REFERENCE,
  (SELECT transaction_source_type_name
  FROM inv_txn_source_types_tl its
  WHERE transaction_source_type_id = imt.transaction_source_type_id
  ) ref_type,
  imt.transaction_quantity,
  ccd.transaction_id
FROM cst_cost_distributions ccd,
  cst_cost_distribution_lines ccdl,
  cst_transactions ct,
  cst_inv_transactions cit,
  inv_material_txns imt,
  inv_transaction_types_tl itt,
  egp_system_items_b esi,
  egp_system_items_tl est
WHERE ccdl.distribution_id    = ccd.distribution_id
AND ccdl.distribution_line_id =:source_distribution_id_num_1
AND ccd.transaction_id        = ct.transaction_id(+)
AND ct.cst_inv_transaction_id =cit.cst_inv_transaction_id(+)
AND cit.external_system_ref_id=imt.transaction_id(+)
AND imt.transaction_type_id   = itt.transaction_type_id(+)
AND itt.language(+)           = userenv('LANG')
AND imt.organization_id       = esi.organization_id(+)
AND imt.inventory_item_id     = esi.inventory_item_id(+)
AND esi.organization_id       = est.organization_id(+)
AND esi.inventory_item_id     = est.inventory_item_id(+)
AND est.language(+)           =userenv('LANG')
AND :journal_source           ='Cost Accounting'*/
SELECT distinct 2 A, clc.txn_source_ref_doc_number transaction_number,
  NULL,
  itt.transaction_type_name,
  esi.item_number,
  est.description,
  clc.txn_source_ref_doc_number REFERENCE,
  CASE
    WHEN clc.txn_source_ref_doc_type='WO'
    THEN 'Work Order'
    WHEN clc.txn_source_ref_doc_type='SO'
    THEN 'Sales Order'
    WHEN clc.txn_source_ref_doc_type='PO'
    THEN 'Purchase Order'
    ELSE clc.txn_source_ref_doc_type
  END ref_type,
  ccd.layer_quantity transaction_quantity,
  ccd.transaction_id,
     (select   DECODE(TO_CHAR(COUNT(DISTINCT(ppav.project_id))),
                           '1',  TO_CHAR(MAX(ppav.segment1)) ,
                           '0',  TO_CHAR(NULL),
                           'Multiple')  
         from     po_distributions_all pod,
                  pjf_projects_all_vl ppav
         where    pod.pjc_project_id = ppav.project_id
         and      pod.PO_DISTRIBUTION_ID = clc.PO_DISTRIBUTION_ID	 ) project_number,
         --
         (select   DECODE(TO_CHAR(COUNT(DISTINCT(ppav.project_id))),
                           '1',  TO_CHAR(MAX(ppav.name)) ,
                           '0',  TO_CHAR(NULL),
                           'Multiple')  
         from     po_distributions_all pod,
                  pjf_projects_all_vl ppav
         where    pod.pjc_project_id = ppav.project_id
         and      pod.PO_DISTRIBUTION_ID = clc.PO_DISTRIBUTION_ID) project_name,
         --
         (select   DECODE(TO_CHAR(COUNT(DISTINCT(ptv.task_id))),
                           '1',  TO_CHAR(MAX(ptv.task_number)) ,
                           '0',  TO_CHAR(NULL),
                           'Multiple')  
         from     po_distributions_all pod,
                  pjf_tasks_v ptv
         where    pod.pjc_task_id = ptv.task_id
         and      pod.PO_DISTRIBUTION_ID = clc.PO_DISTRIBUTION_ID) task_number,
         --
         (select   DECODE(TO_CHAR(COUNT(DISTINCT(ptv.task_id))),
                           '1',  TO_CHAR(MAX(ptv.task_name)) ,
                           '0',  TO_CHAR(NULL),
                           'Multiple')  
         from     po_distributions_all pod,
                  pjf_tasks_v ptv
         where    pod.pjc_task_id = ptv.task_id
         and      pod.PO_DISTRIBUTION_ID = clc.PO_DISTRIBUTION_ID) task_name
FROM cst_cost_distributions ccd,
  cst_cost_distribution_lines ccdl,
  cst_xla_transaction_costs_v clc,
  inv_transaction_types_tl itt,
  egp_system_items_b esi,
  egp_system_items_tl est
WHERE ccdl.distribution_id    = ccd.distribution_id
AND ccdl.distribution_line_id =:source_distribution_id_num_1
AND ccd.transaction_id        =clc.transaction_id
AND ccdl.cost_id              =clc.cost_id
AND clc.base_txn_type_id      = itt.transaction_type_id(+)
AND clc.inv_org_id            = esi.organization_id(+)
AND clc.inventory_item_id     = esi.inventory_item_id(+)
AND esi.organization_id       = est.organization_id(+)
AND esi.inventory_item_id     = est.inventory_item_id(+)
AND :journal_source           ='Cost Accounting'
union all --Added entire union select statement Jan 11
select distinct 3 A, wo.work_order_number transaction_number
 , NULL
 , wtyp.BASE_TXN_TYPE_NAME transaction_type_name
 , itm.item_number itm
 , itm.description
 , wo.work_order_number reference
 , 'Work Order' ref_type
 , ccd.layer_quantity transaction_quantity
  ,ccd.transaction_id,
  null project_number,
  null Project_name,
  null task_number,
  null task_name  
from cst_work_orders wo 
 ,CST_INTERNAL_TXN_TYPES_VL wtyp
 ,egp_system_items_vl itm 
 ,cst_wo_update_event_txns wtx 
 ,cst_cost_distributions ccd
 ,CST_COST_DISTRIBUTION_LINES ccdl
 ,cst_wo_cost_variances wcvar
where ccd.distribution_id = ccdl.DISTRIBUTION_ID
AND ccdl.distribution_line_id =:source_distribution_id_num_1
and ccd.distribution_id = wcvar.distribution_id
and wcvar.wo_update_event_txn_id = wtx.wo_update_event_txn_id
and wtx.inventory_item_id = itm.inventory_item_id
and wtx.cst_work_order_id = wo.cst_work_order_id
and wtyp.BASE_TXN_TYPE_ID = wtx.BASE_TXN_TYPE_ID
AND :journal_source           ='Cost Accounting' -- end add on Jan 11
UNION ALL
SELECT distinct 4 A, ct.txn_source_ref_doc_number transaction_number,
  xet.name transaction_name,
  xec.name transaction_type,
  esi.item_number,
  est.description,
  xte.transaction_number REFERENCE,
  CASE
    WHEN ct.txn_source_ref_doc_type='WO'
    THEN 'Work Order'
    WHEN ct.txn_source_ref_doc_type='SO'
    THEN 'Sales Order'
    WHEN ct.txn_source_ref_doc_type='PO'
    THEN 'Purchase Order'
    ELSE ct.txn_source_ref_doc_type
  END ref_type,
  ccd.layer_quantity transaction_quantity,
  ccd.transaction_id,
     (select   DECODE(TO_CHAR(COUNT(DISTINCT(ppav.project_id))),
                           '1',  TO_CHAR(MAX(ppav.segment1)) ,
                           '0',  TO_CHAR(NULL),
                           'Multiple')  
         from     po_distributions_all pod,
                  pjf_projects_all_vl ppav
         where    pod.pjc_project_id = ppav.project_id
         and      pod.PO_DISTRIBUTION_ID = ct.PO_DISTRIBUTION_ID	 ) project_number,
         --
         (select   DECODE(TO_CHAR(COUNT(DISTINCT(ppav.project_id))),
                           '1',  TO_CHAR(MAX(ppav.name)) ,
                           '0',  TO_CHAR(NULL),
                           'Multiple')  
         from     po_distributions_all pod,
                  pjf_projects_all_vl ppav
         where    pod.pjc_project_id = ppav.project_id
         and      pod.PO_DISTRIBUTION_ID = ct.PO_DISTRIBUTION_ID) project_name,
         --
         (select   DECODE(TO_CHAR(COUNT(DISTINCT(ptv.task_id))),
                           '1',  TO_CHAR(MAX(ptv.task_number)) ,
                           '0',  TO_CHAR(NULL),
                           'Multiple')  
         from     po_distributions_all pod,
                  pjf_tasks_v ptv
         where    pod.pjc_task_id = ptv.task_id
         and      pod.PO_DISTRIBUTION_ID = ct.PO_DISTRIBUTION_ID) task_number,
         --
         (select   DECODE(TO_CHAR(COUNT(DISTINCT(ptv.task_id))),
                           '1',  TO_CHAR(MAX(ptv.task_name)) ,
                           '0',  TO_CHAR(NULL),
                           'Multiple')  
         from     po_distributions_all pod,
                  pjf_tasks_v ptv
         where    pod.pjc_task_id = ptv.task_id
         and      pod.PO_DISTRIBUTION_ID = ct.PO_DISTRIBUTION_ID) task_name
FROM cst_cost_distributions ccd,
  cst_cost_distribution_lines ccdl,
  cst_transactions ct,
  cst_transaction_costs ctc,
  inv_transaction_types_tl itt,
  egp_system_items_b esi,
  xla_transaction_entities xte,
  CST_INTERNAL_TXN_TYPES_TL citt,
  egp_system_items_tl est,
  xla_events xe,
  xla_event_types_TL xet,
  xla_event_classes_tl xec
WHERE ccdl.distribution_id    = ccd.distribution_id
AND ccdl.distribution_line_id =:source_distribution_id_num_1
AND ccdl.cost_id              =ctc.TRANSACTION_COST_ID (+)
AND ctc.transaction_id        =ct.transaction_id (+)
AND ct.base_txn_type_id       = citt.base_txn_type_id(+)
AND ct.base_txn_source_type_id = citt.base_txn_source_type_id (+)
AND ct.INVENTORY_ORG_ID            = esi.organization_id(+)
AND ct.inventory_item_id     = esi.inventory_item_id(+)
AND esi.organization_id       = est.organization_id(+)
AND esi.inventory_item_id     = est.inventory_item_id(+)
AND :journal_source           ='Cost Accounting'
AND :application_id			  =xte.application_id(+)
AND :entity_id				  =xte.entity_id(+)
AND :event_id				  =xe.event_id (+)
AND xe.event_type_code 		  =xet.event_type_code (+)
AND xet.event_Class_code	  =xec.event_class_code (+)
UNION ALL
SELECT distinct  5 A, clc.txn_source_ref_doc_number transaction_number,
  NULL,
  itt.transaction_type_name,
  esi.item_number,
  est.description,
  clc.txn_source_ref_doc_number REFERENCE,
  CASE
    WHEN clc.txn_source_ref_doc_type='WO'
    THEN 'Work Order'
    WHEN clc.txn_source_ref_doc_type='SO'
    THEN 'Sales Order'
    WHEN clc.txn_source_ref_doc_type='PO'
    THEN 'Purchase Order'
    ELSE clc.txn_source_ref_doc_type
  END ref_type,
  ccd.layer_quantity transaction_quantity,
  ccd.transaction_id,
  null project_number,
  null Project_name,
  null task_number,
  null task_name  
FROM cst_cost_distributions ccd,
  cst_cost_distribution_lines ccdl,
  cst_xla_wo_variance_costs_v clc,
  inv_transaction_types_tl itt,
  egp_system_items_b esi,
  egp_system_items_tl est
WHERE ccdl.distribution_id    = ccd.distribution_id
AND ccdl.distribution_line_id =:source_distribution_id_num_1
AND ccd.transaction_id        =clc.wo_update_event_txn_id
AND ccdl.cost_id              =clc.wo_cost_variance_id
AND clc.base_txn_type_id      = itt.transaction_type_id(+)
AND clc.inv_org_id            = esi.organization_id(+)
AND clc.inventory_item_id     = esi.inventory_item_id(+)
AND esi.organization_id       = est.organization_id(+)
AND esi.inventory_item_id     = est.inventory_item_id(+)
AND :journal_source           ='Cost Accounting'
UNION ALL
SELECT Distinct 6 A, cre.source_doc_number transaction_number,
  cre.event_type_code transaction_name,
  NULL transaction_type,
  esi.item_number,
  nvl(est.description,cpod.item_description) description,
  TO_CHAR(NULL) REFERENCE,
  to_char(null) ref_type,
  nvl(cre.PRIMARY_QTY,cpod.quantity_ordered) transaction_quantity,
  NULL transaction_id,
   (select   DECODE(TO_CHAR(COUNT(DISTINCT(ppav.project_id))),
                           '1',  TO_CHAR(MAX(ppav.segment1)) ,
                           '0',  TO_CHAR(NULL),
                           'Multiple')  
         from     po_line_locations_all poll,
                  po_distributions_all pod,
                  pjf_projects_all_vl ppav
         where    poll.line_location_id = pod.line_location_id
         and      pod.pjc_project_id = ppav.project_id
         and      pod.po_header_id = cpod.po_header_id
		 and 	  pod.po_line_id = cpod.po_line_id ) project_number,
         --
         (select   DECODE(TO_CHAR(COUNT(DISTINCT(ppav.project_id))),
                           '1',  TO_CHAR(MAX(ppav.name)) ,
                           '0',  TO_CHAR(NULL),
                           'Multiple')  
         from     po_line_locations_all poll,
                  po_distributions_all pod,
                  pjf_projects_all_vl ppav
         where    poll.line_location_id = pod.line_location_id
         and      pod.pjc_project_id = ppav.project_id
         and      pod.po_header_id = cpod.po_header_id
		 and 	  pod.po_line_id = cpod.po_line_id) project_name,
         --
         (select   DECODE(TO_CHAR(COUNT(DISTINCT(ptv.task_id))),
                           '1',  TO_CHAR(MAX(ptv.task_number)) ,
                           '0',  TO_CHAR(NULL),
                           'Multiple')  
         from     po_line_locations_all poll,
                  po_distributions_all pod,
                  pjf_tasks_v ptv
         where    poll.line_location_id = pod.line_location_id
         and      pod.pjc_task_id = ptv.task_id
         and      pod.po_header_id = cpod.po_header_id
		 and 	  pod.po_line_id = cpod.po_line_id) task_number,
         --
         (select   DECODE(TO_CHAR(COUNT(DISTINCT(ptv.task_id))),
                           '1',  TO_CHAR(MAX(ptv.task_name)) ,
                           '0',  TO_CHAR(NULL),
                           'Multiple')  
         from     po_line_locations_all poll,
                  po_distributions_all pod,
                  pjf_tasks_v ptv
         where    poll.line_location_id = pod.line_location_id
         and      pod.pjc_task_id = ptv.task_id
         and      pod.po_header_id = cpod.po_header_id
		 and 	  pod.po_line_id = cpod.po_line_id) task_name
FROM cmr_rcv_events cre,
  cmr_rcv_distributions crd,
  egp_system_items_b esi,
  egp_system_items_tl est,
  cmr_purchase_order_dtls cpod
WHERE cre.accounting_event_id=crd.accounting_event_id
AND crd.cmr_sub_ledger_id    =:source_distribution_id_num_1
AND cre.inventory_org_id     = esi.organization_id(+)
AND cre.inventory_item_id    = esi.inventory_item_id(+)
AND esi.organization_id      = est.organization_id(+)
AND esi.inventory_item_id    = est.inventory_item_id(+)
and cre.cmr_po_distribution_id =cpod.cmr_po_distribution_id(+)
AND :journal_source          ='Receipt Accounting'
UNION ALL
SELECT distinct 7 A, fth.transaction_header_id
  ||' ' transaction_number,
  fth.transaction_type_code transaction_name,
  fth.transaction_type_code transaction_type,
  TO_CHAR(NULL) item_number,
  TO_CHAR(NULL) description,
  fa.asset_number REFERENCE,
  'Fixed Assets' ref_type,
  NULL transaction_quantity,
  NULL transaction_id,
    null project_number,
  null Project_name,
  null task_number,
  null task_name  
FROM fa_transaction_headers fth,
  fa_additions_b fa
WHERE fth.asset_id           =fa.asset_id
AND fth.transaction_header_id=:source_distribution_id_num_1
UNION ALL
SELECT distinct 7 A, aia.invoice_num
  ||' ' transaction_number,
  aia.invoice_type_lookup_code transaction_name,
  aia.invoice_type_lookup_code transaction_type,
  (SELECT item_number
  FROM egp_system_items_b
  WHERE inventory_item_id=aila.inventory_item_id
  AND rownum             =1
  ) item_number,
  aila.item_description,
  aia.invoice_num REFERENCE,
  'Payables' ref_type,
  aila.quantity_invoiced transaction_quantity,
  NULL transaction_id,
  (select   DECODE(TO_CHAR(COUNT(DISTINCT(ppav.project_id))),
                           '1',  TO_CHAR(MAX(ppav.segment1)) ,
                           '0',  TO_CHAR(NULL),
                           'Multiple')  
         from     pjf_projects_all_vl ppav
         where    aid.project_id = ppav.project_id ) project_number,
         --
         (select   DECODE(TO_CHAR(COUNT(DISTINCT(ppav.project_id))),
                           '1',  TO_CHAR(MAX(ppav.name)) ,
                           '0',  TO_CHAR(NULL),
                           'Multiple')  
         from     pjf_projects_all_vl ppav
         where    aid.project_id = ppav.project_id) project_name,
         --
         (select   DECODE(TO_CHAR(COUNT(DISTINCT(ptv.task_id))),
                           '1',  TO_CHAR(MAX(ptv.task_number)) ,
                           '0',  TO_CHAR(NULL),
                           'Multiple')  
         from     pjf_tasks_v ptv
         where    aid.task_id = ptv.task_id ) task_number,
         --
         (select   DECODE(TO_CHAR(COUNT(DISTINCT(ptv.task_id))),
                           '1',  TO_CHAR(MAX(ptv.task_name)) ,
                           '0',  TO_CHAR(NULL),
                           'Multiple')  
         from     pjf_tasks_v ptv
         where    aid.task_id = ptv.task_id ) task_name
FROM ap_invoice_distributions_all aid,
  ap_invoices_all aia,
  ap_invoice_lines_all aila
WHERE aid.invoice_id           =aia.invoice_id
AND aid.invoice_distribution_id=:source_distribution_id_num_1
AND aid.invoice_id             =aila.invoice_id
AND aid.invoice_line_number    =aila.line_number
AND :journal_source        = 'Payables'
)
where rownum=1

--Q_JOURNALS
SELECT distinct gjb.NAME batch_name,
  gll.name ledger_name,
  gjb.status batch_status,
  gjh.je_category journal_category,
  gjh.je_source journal_source,
  gjh.period_name ,
  gjh.NAME journal_name,
  gjh.currency_code ,
  gjh.status journal_status,
  gjh.posted_date,
  gjl.je_line_num,
  gjl.entered_dr,
  gjl.entered_cr,
  NVL(xal.accounted_dr,0) cost_value_debit,
  NVL(xal.accounted_cr,0) cost_value_credit,
  (gcc.segment1||'.'||gcc.segment2||'.'||gcc.segment3||'.'||gcc.segment4||'.'||gcc.segment5||'.'||gcc.segment6||'.'||gcc.segment7 ) ACCOUNT,
  fa.application_short_name,
  xdl.SOURCE_DISTRIBUTION_TYPE ,
  xdl.SOURCE_DISTRIBUTION_ID_NUM_1,
  xdl.SOURCE_DISTRIBUTION_ID_NUM_2,
  xah.entity_id,
  xal.application_id,
  xah.event_id,
  xal.ACCOUNTING_CLASS_CODE,
  TO_CHAR(XAl.accounting_date,'DD/MM/RRRR') accounting_date
  ,gjh.je_header_id 
FROM gl_je_batches gjb,
  gl_je_headers gjh,
  gl_ledgers gll,
  gl_je_lines gjl,
  gl_import_references gir,
  xla_ae_lines xal,
  XLA_AE_HEADERS xah,
  XLA_DISTRIBUTION_LINKS xdl,
  fnd_application fa,
  gl_code_combinations gcc
WHERE gjb.je_batch_id       =gjh.je_batch_id
AND gjh.ledger_id           =gll.ledger_id
AND gjh.je_header_id        =gjl.je_header_id
AND gjl.je_line_num         =gir.je_line_num
AND gjl.je_header_id        = gir.je_header_id
AND gir.gl_sl_link_table    = xal.gl_sl_link_table
AND gir.gl_sl_link_id       = xal.gl_sl_link_id
AND xal.code_combination_id = gcc.code_combination_id
AND xal.AE_HEADER_ID        = xah.AE_HEADER_ID
AND xal.AE_HEADER_ID        = xdl.AE_HEADER_ID
AND xal.AE_LINE_NUM         = xdl.AE_LINE_NUM
AND xah.application_id      =fa.application_id
  /*and (gcc.segment1
  ||'.'
  ||gcc.segment2
  ||'.'
  ||gcc.segment3
  ||'.'
  ||gcc.segment4
  ||'.'
  ||gcc.segment5
  ||'.'
  ||gcc.segment6
  ||'.'
  ||gcc.segment7 ) = '101.00.16999.000.000.000.0000'*/
AND gjh.je_source          IN ('Project Accounting', 'Receivables', 'Cash Management', 'Cost Accounting','Receipt Accounting', 'Assets')
--AND gjh.je_source='Payables'
AND gcc.code_combination_id = NVL(:P_ACCOUNT,gcc.code_combination_id)
AND XAl.accounting_date BETWEEN NVL(:P_DATE_FROM,XAl.accounting_date ) AND NVL(:P_DATE_TO,XAl.accounting_date )
union all 
SELECT distinct gjb.NAME batch_name,
  gll.name ledger_name,
  gjb.status batch_status,
  gjh.je_category journal_category,
  gjh.je_source journal_source,
  gjh.period_name ,
  gjh.NAME journal_name,
  gjh.currency_code ,
  gjh.status journal_status,
  gjh.posted_date,
  gjl.je_line_num,
  gjl.entered_dr,
  gjl.entered_cr,
  nvl(gjl.accounted_dr,0) cost_value_debit,
  NVL(gjl.accounted_cr,0) cost_value_credit,
  (gcc.segment1
  ||'.'
  ||gcc.segment2
  ||'.'
  ||gcc.segment3
  ||'.'
  ||gcc.segment4
  ||'.'
  ||gcc.segment5
  ||'.'
  ||gcc.segment6
  ||'.'
  ||gcc.segment7 ) ACCOUNT,
  NULL application_short_name,
  null source_distribution_type ,
  null source_distribution_id_num_1,
  null source_distribution_id_num_2,
  null entity_id,
  null application_id,
  null event_id,
  null ACCOUNTING_CLASS_CODE,
  TO_CHAR(gjh.posted_date,'DD/MM/RRRR') accounting_date
  ,gjh.je_header_id 
FROM gl_je_batches gjb,
  gl_je_headers gjh,
  gl_ledgers gll,
  gl_je_lines gjl,
  gl_code_combinations gcc
WHERE gjb.je_batch_id       =gjh.je_batch_id
AND gjh.ledger_id           =gll.ledger_id
AND gjh.je_header_id        =gjl.je_header_id
AND gjl.code_combination_id = gcc.code_combination_id
and gjh.je_source          in (
 'Manual'
, 'Spreadsheet'
,'AutoCopy'
)
and gcc.code_combination_id = nvl(:p_account,gcc.code_combination_id)
AND gjh.period_name in (select period_name  from gl_periods where end_date between NVL(:P_DATE_FROM,end_date ) AND NVL(:P_DATE_TO,end_date ))
union all
SELECT distinct gjb.NAME batch_name,
  gll.name ledger_name,
  gjb.status batch_status,
  gjh.je_category journal_category,
  gjh.je_source journal_source,
  gjh.period_name ,
  gjh.NAME journal_name,
  gjh.currency_code ,
  gjh.status journal_status,
  gjh.posted_date,
  gjl.je_line_num,
  gjl.entered_dr,
  gjl.entered_cr,
  NVL(xal.accounted_dr,0) cost_value_debit,
  NVL(xal.accounted_cr,0) cost_value_credit,
  (gcc.segment1||'.'||gcc.segment2||'.'||gcc.segment3||'.'||gcc.segment4||'.'||gcc.segment5||'.'||gcc.segment6||'.'||gcc.segment7 ) ACCOUNT,
  fa.application_short_name,
  xdl.SOURCE_DISTRIBUTION_TYPE ,
  null SOURCE_DISTRIBUTION_ID_NUM_1,
  null SOURCE_DISTRIBUTION_ID_NUM_2,
  xah.entity_id,
  xal.application_id,
  xah.event_id,
  xal.ACCOUNTING_CLASS_CODE,
  TO_CHAR(XAl.accounting_date,'DD/MM/RRRR') accounting_date
  ,gjh.je_header_id 
FROM gl_je_batches gjb,
  gl_je_headers gjh,
  gl_ledgers gll,
  gl_je_lines gjl,
  gl_import_references gir,
  xla_ae_lines xal,
  XLA_AE_HEADERS xah,
  XLA_DISTRIBUTION_LINKS xdl,
  fnd_application fa,
  gl_code_combinations gcc
WHERE gjb.je_batch_id       =gjh.je_batch_id
AND gjh.ledger_id           =gll.ledger_id
AND gjh.je_header_id        =gjl.je_header_id
AND gjl.je_line_num         =gir.je_line_num
AND gjl.je_header_id        = gir.je_header_id
AND gir.gl_sl_link_table    = xal.gl_sl_link_table
AND gir.gl_sl_link_id       = xal.gl_sl_link_id
AND xal.code_combination_id = gcc.code_combination_id
AND xal.AE_HEADER_ID        = xah.AE_HEADER_ID
AND xal.AE_HEADER_ID        = xdl.AE_HEADER_ID
AND xal.AE_LINE_NUM         = xdl.AE_LINE_NUM
AND xah.application_id      =fa.application_id
  /*and (gcc.segment1
  ||'.'
  ||gcc.segment2
  ||'.'
  ||gcc.segment3
  ||'.'
  ||gcc.segment4
  ||'.'
  ||gcc.segment5
  ||'.'
  ||gcc.segment6
  ||'.'
  ||gcc.segment7 ) = '101.00.16999.000.000.000.0000'*/
AND gjh.je_source='Payables'
AND gcc.code_combination_id = NVL(:P_ACCOUNT,gcc.code_combination_id)
AND XAl.accounting_date BETWEEN NVL(:P_DATE_FROM,XAl.accounting_date ) AND NVL(:P_DATE_TO,XAl.accounting_date )
=================================================================================================================
-----------------------------------FII - Payables Invoice Aging Data Model--------------------------------------
--Q_bu
select MO_UTILS.GET_ORG_NAME(:P_BUSINESS_UNIT) C_BUSINESS_UNIT from dual
--Q_vendor
SELECT  nvl(pozv.vendor_name,hp.party_name) C_VENDOR_NAME, /*Bug12393630: Added NVL */
                     pozv.segment1 C_VENDOR_NUMBER,
                    decode(upper(:P_SORT_OPTION),
                      'VENDOR NAME',decode(:C_VENDOR_NAME_SELECT,
                                  '%',upper(nvl(pozv.vendor_name,hp.party_name)),
                                     nvl(pozv.vendor_name, hp.party_name)) ,
                    alc.displayed_field) C_PRIMARY_BRK, /*Bug12393630: Added NVL */ 
                    nvl(pozv.vendor_name,hp.party_name) C_SHORT_VENDOR_NAME,  /*Bug12393630: Added NVL */
                    pozv.vendor_id C_VENDOR_ID,
                    i.vendor_site_id C_CONTACT_SITE_ID,
                    pozsv.vendor_site_code C_VENDOR_SITE_CODE,
                    nvl(pozsv.state,' ')  C_VENDOR_STATE,
                    nvl(substr(pozsv.city,1,15),' ') C_VENDOR_CITY,
                    ps.payment_num C_REFERENCE_NUMBER,
                    i.vendor_site_id C_ADDRESS_ID,
                    nvl(substr(i.invoice_type_lookup_code,1,20), ' ') C_INVOICE_TYPE,
                    i.invoice_id C_PAYMENT_SCHED_ID,
                    TO_CHAR(ps.due_date,'YYYY-MM-DD') C_DUE_DATE,
                     decode(i.invoice_currency_code,:C_BASE_CURRENCY_CODE,
                       decode(:C_BASE_MIN_ACCT_UNIT,
                       0,round(((nvl(ps.amount_remaining, 0)/(nvl(i.payment_cross_rate,1))) *
                                nvl(i.exchange_rate,1)),:C_BASE_PRECISION),
                         round(((nvl(ps.amount_remaining, 0)/(nvl(i.payment_cross_rate,1))) *
                                nvl(i.exchange_rate,1))/:C_BASE_MIN_ACCT_UNIT) *
                                          :C_BASE_MIN_ACCT_UNIT),
                   decode(i.exchange_rate,NULL,0,
                       decode(:C_BASE_MIN_ACCT_UNIT,
                       0,round(((nvl(ps.amount_remaining, 0)/(nvl(i.payment_cross_rate,1))) *
                                nvl(i.exchange_rate,1)),:C_BASE_PRECISION),
                         round(((nvl(ps.amount_remaining, 0)/(nvl(i.payment_cross_rate,1))) *
                                nvl(i.exchange_rate,1))/:C_BASE_MIN_ACCT_UNIT) *
                                          :C_BASE_MIN_ACCT_UNIT)))  C_AMT_DUE_REMAINING,
                   decode(i.invoice_currency_code,:C_BASE_CURRENCY_CODE,
                       decode(:C_BASE_MIN_ACCT_UNIT,
                       0,round(((nvl(ps.gross_amount, 0)/(nvl(i.payment_cross_rate,1))) *
                                nvl(i.exchange_rate,1)),:C_BASE_PRECISION),
                         round(((nvl(ps.gross_amount, 0)/(nvl(i.payment_cross_rate,1))) *
                                nvl(i.exchange_rate,1))/:C_BASE_MIN_ACCT_UNIT) *
                                          :C_BASE_MIN_ACCT_UNIT),
                   decode(i.exchange_rate,NULL,0,
                       decode(:C_BASE_MIN_ACCT_UNIT,
                       0,round(((nvl(ps.gross_amount, 0)/(nvl(i.payment_cross_rate,1))) *
                                nvl(i.exchange_rate,1)),:C_BASE_PRECISION),
                         round(((nvl(ps.gross_amount, 0)/(nvl(i.payment_cross_rate,1))) *
                                nvl(i.exchange_rate,1))/:C_BASE_MIN_ACCT_UNIT) *
                                          :C_BASE_MIN_ACCT_UNIT)))  C_AMT_DUE_ORIGINAL,
                    i.accts_pay_code_combination_id  C_VENDOR_TRX_ID,
                    i.invoice_num C_INVOICE_NUMBER,
                    i.invoice_num C_INVOICE_NUM_SHORT,
                   i.invoice_date C_INVOICE_DATE,
                    ceil(to_date(to_char(SYSDATE,'DD-MON-RRRR'),'DD-MON-RRRR') -
                                 ps.due_date) C_DAYS_PAST_DUE,
                    decode(i.invoice_currency_code,
                       :C_BASE_CURRENCY_CODE, ' ',
                                              decode(i.exchange_rate,
                                                 NULL,'*',
                                                      ' ')) C_DATA_CONVERTED,
                    nvl(i.exchange_rate, 1) C_EXCHANGE_RATE,
                AP_APXINAGE_XMLP_PKG.c_per_inv_due_amt_1formula(:C_SUM_INV_DUE_AMT_1, :C_SUM_AMT_REMAINING) C_PER_INV_DUE_AMT_1,
                AP_APXINAGE_XMLP_PKG.c_pgbrk_data_convertedformula(:C_SUM_DATA_CONVERTED) C_PGBRK_DATA_CONVERTED,
                AP_APXINAGE_XMLP_PKG.c_per_inv_due_amt_2formula(:C_SUM_INV_DUE_AMT_2, :C_SUM_AMT_REMAINING) C_PER_INV_DUE_AMT_2,
                AP_APXINAGE_XMLP_PKG.c_per_inv_due_amt_3formula(:C_SUM_INV_DUE_AMT_3, :C_SUM_AMT_REMAINING) C_PER_INV_DUE_AMT_3,
                AP_APXINAGE_XMLP_PKG.c_per_inv_due_amt_4formula(:C_SUM_INV_DUE_AMT_4, :C_SUM_AMT_REMAINING) C_PER_INV_DUE_AMT_4,
                AP_APXINAGE_XMLP_PKG.c_per_v_inv_amt_1formula(:C_SUM_V_INV_AMT_1, :C_SUM_V_DUE_REMAINING) C_PER_V_INV_AMT_1,
                AP_APXINAGE_XMLP_PKG.c_per_v_inv_amt_2formula(:C_SUM_V_INV_AMT_2, :C_SUM_V_DUE_REMAINING) C_PER_V_INV_AMT_2,
                AP_APXINAGE_XMLP_PKG.c_per_v_inv_amt_3formula(:C_SUM_V_INV_AMT_3, :C_SUM_V_DUE_REMAINING) C_PER_V_INV_AMT_3,
                AP_APXINAGE_XMLP_PKG.c_per_v_inv_amt_4formula(:C_SUM_V_INV_AMT_4, :C_SUM_V_DUE_REMAINING) C_PER_V_INV_AMT_4,
                AP_APXINAGE_XMLP_PKG.c_v_data_convertedformula(:C_SUM_V_DATA_CONVERTED) C_V_DATA_CONVERTED,
                --AP_APXINAGE_XMLP_PKG.c_contact_lineformula(i.vendor_site_id) C_CONTACT_LINE,
		(SELECT nvl(first_name,'') 
                         || decode(last_name, '', '', 
                                                  '.'|| last_name 
                                  ) 
                         || decode(phone, '', '', 
                                              ' '|| phone 
                                  ) 
                       FROM POZ_SUPPLIER_CONTACTS_V 
                      WHERE vendor_site_id = i.vendor_site_id 
                        AND rownum = 1 
                 ) C_CONTACT_LINE,
                AP_APXINAGE_XMLP_PKG.c_percent_remainingformula(decode ( i.invoice_currency_code , :C_BASE_CURRENCY_CODE , decode ( :C_BASE_MIN_ACCT_UNIT , 0 , round ( ( ( nvl ( ps.gross_amount , 0 ) / ( nvl ( i.payment_cross_rate , 1 ) ) ) * nvl ( i.exchange_rate , 1 ) ) , :C_BASE_PRECISION ) , round ( ( ( nvl ( ps.gross_amount , 0 ) / ( nvl ( i.payment_cross_rate , 1 ) ) ) * nvl ( i.exchange_rate , 1 ) ) / :C_BASE_MIN_ACCT_UNIT ) * :C_BASE_MIN_ACCT_UNIT ) , decode ( i.exchange_rate , NULL , 0 , decode ( :C_BASE_MIN_ACCT_UNIT , 0 , round ( ( ( nvl ( ps.gross_amount , 0 ) / ( nvl ( i.payment_cross_rate , 1 ) ) ) * nvl ( i.exchange_rate , 1 ) ) , :C_BASE_PRECISION ) , round ( ( ( nvl ( ps.gross_amount , 0 ) / ( nvl ( i.payment_cross_rate , 1 ) ) ) * nvl ( i.exchange_rate , 1 ) ) / :C_BASE_MIN_ACCT_UNIT ) * :C_BASE_MIN_ACCT_UNIT ) ) ), decode ( i.invoice_currency_code , :C_BASE_CURRENCY_CODE , decode ( :C_BASE_MIN_ACCT_UNIT , 0 , round ( ( ( nvl ( ps.amount_remaining , 0 ) / ( nvl ( i.payment_cross_rate , 1 ) ) ) * nvl ( i.exchange_rate , 1 ) ) , :C_BASE_PRECISION ) , round ( ( ( nvl ( ps.amount_remaining , 0 ) / ( nvl ( i.payment_cross_rate , 1 ) ) ) * nvl ( i.exchange_rate , 1 ) ) / :C_BASE_MIN_ACCT_UNIT ) * :C_BASE_MIN_ACCT_UNIT ) , decode ( i.exchange_rate , NULL , 0 , decode ( :C_BASE_MIN_ACCT_UNIT , 0 , round ( ( ( nvl ( ps.amount_remaining , 0 ) / ( nvl ( i.payment_cross_rate , 1 ) ) ) * nvl ( i.exchange_rate , 1 ) ) , :C_BASE_PRECISION ) , round ( ( ( nvl ( ps.amount_remaining , 0 ) / ( nvl ( i.payment_cross_rate , 1 ) ) ) * nvl ( i.exchange_rate , 1 ) ) / :C_BASE_MIN_ACCT_UNIT ) * :C_BASE_MIN_ACCT_UNIT ) ) )) C_PERCENT_REMAINING,
                AP_APXINAGE_XMLP_PKG.c_inv_due_amt_1formula(ceil ( to_date ( to_char ( SYSDATE , 'DD-MON-RRRR' ) , 'DD-MON-RRRR' ) - ps.due_date ), decode ( i.invoice_currency_code , :C_BASE_CURRENCY_CODE , decode ( :C_BASE_MIN_ACCT_UNIT , 0 , round ( ( ( nvl ( ps.amount_remaining , 0 ) / ( nvl ( i.payment_cross_rate , 1 ) ) ) * nvl ( i.exchange_rate , 1 ) ) , :C_BASE_PRECISION ) , round ( ( ( nvl ( ps.amount_remaining , 0 ) / ( nvl ( i.payment_cross_rate , 1 ) ) ) * nvl ( i.exchange_rate , 1 ) ) / :C_BASE_MIN_ACCT_UNIT ) * :C_BASE_MIN_ACCT_UNIT ) , decode ( i.exchange_rate , NULL , 0 , decode ( :C_BASE_MIN_ACCT_UNIT , 0 , round ( ( ( nvl ( ps.amount_remaining , 0 ) / ( nvl ( i.payment_cross_rate , 1 ) ) ) * nvl ( i.exchange_rate , 1 ) ) , :C_BASE_PRECISION ) , round ( ( ( nvl ( ps.amount_remaining , 0 ) / ( nvl ( i.payment_cross_rate , 1 ) ) ) * nvl ( i.exchange_rate , 1 ) ) / :C_BASE_MIN_ACCT_UNIT ) * :C_BASE_MIN_ACCT_UNIT ) ) )) C_INV_DUE_AMT_1,
                AP_APXINAGE_XMLP_PKG.c_inv_due_amt_2formula(ceil ( to_date ( to_char ( SYSDATE , 'DD-MON-RRRR' ) , 'DD-MON-RRRR' ) - ps.due_date ), decode ( i.invoice_currency_code , :C_BASE_CURRENCY_CODE , decode ( :C_BASE_MIN_ACCT_UNIT , 0 , round ( ( ( nvl ( ps.amount_remaining , 0 ) / ( nvl ( i.payment_cross_rate , 1 ) ) ) * nvl ( i.exchange_rate , 1 ) ) , :C_BASE_PRECISION ) , round ( ( ( nvl ( ps.amount_remaining , 0 ) / ( nvl ( i.payment_cross_rate , 1 ) ) ) * nvl ( i.exchange_rate , 1 ) ) / :C_BASE_MIN_ACCT_UNIT ) * :C_BASE_MIN_ACCT_UNIT ) , decode ( i.exchange_rate , NULL , 0 , decode ( :C_BASE_MIN_ACCT_UNIT , 0 , round ( ( ( nvl ( ps.amount_remaining , 0 ) / ( nvl ( i.payment_cross_rate , 1 ) ) ) * nvl ( i.exchange_rate , 1 ) ) , :C_BASE_PRECISION ) , round ( ( ( nvl ( ps.amount_remaining , 0 ) / ( nvl ( i.payment_cross_rate , 1 ) ) ) * nvl ( i.exchange_rate , 1 ) ) / :C_BASE_MIN_ACCT_UNIT ) * :C_BASE_MIN_ACCT_UNIT ) ) )) C_INV_DUE_AMT_2,
                AP_APXINAGE_XMLP_PKG.c_inv_due_amt_3formula(ceil ( to_date ( to_char ( SYSDATE , 'DD-MON-RRRR' ) , 'DD-MON-RRRR' ) - ps.due_date ), decode ( i.invoice_currency_code , :C_BASE_CURRENCY_CODE , decode ( :C_BASE_MIN_ACCT_UNIT , 0 , round ( ( ( nvl ( ps.amount_remaining , 0 ) / ( nvl ( i.payment_cross_rate , 1 ) ) ) * nvl ( i.exchange_rate , 1 ) ) , :C_BASE_PRECISION ) , round ( ( ( nvl ( ps.amount_remaining , 0 ) / ( nvl ( i.payment_cross_rate , 1 ) ) ) * nvl ( i.exchange_rate , 1 ) ) / :C_BASE_MIN_ACCT_UNIT ) * :C_BASE_MIN_ACCT_UNIT ) , decode ( i.exchange_rate , NULL , 0 , decode ( :C_BASE_MIN_ACCT_UNIT , 0 , round ( ( ( nvl ( ps.amount_remaining , 0 ) / ( nvl ( i.payment_cross_rate , 1 ) ) ) * nvl ( i.exchange_rate , 1 ) ) , :C_BASE_PRECISION ) , round ( ( ( nvl ( ps.amount_remaining , 0 ) / ( nvl ( i.payment_cross_rate , 1 ) ) ) * nvl ( i.exchange_rate , 1 ) ) / :C_BASE_MIN_ACCT_UNIT ) * :C_BASE_MIN_ACCT_UNIT ) ) )) C_INV_DUE_AMT_3,
                AP_APXINAGE_XMLP_PKG.c_inv_due_amt_4formula(ceil ( to_date ( to_char ( SYSDATE , 'DD-MON-RRRR' ) , 'DD-MON-RRRR' ) - ps.due_date ), decode ( i.invoice_currency_code , :C_BASE_CURRENCY_CODE , decode ( :C_BASE_MIN_ACCT_UNIT , 0 , round ( ( ( nvl ( ps.amount_remaining , 0 ) / ( nvl ( i.payment_cross_rate , 1 ) ) ) * nvl ( i.exchange_rate , 1 ) ) , :C_BASE_PRECISION ) , round ( ( ( nvl ( ps.amount_remaining , 0 ) / ( nvl ( i.payment_cross_rate , 1 ) ) ) * nvl ( i.exchange_rate , 1 ) ) / :C_BASE_MIN_ACCT_UNIT ) * :C_BASE_MIN_ACCT_UNIT ) , decode ( i.exchange_rate , NULL , 0 , decode ( :C_BASE_MIN_ACCT_UNIT , 0 , round ( ( ( nvl ( ps.amount_remaining , 0 ) / ( nvl ( i.payment_cross_rate , 1 ) ) ) * nvl ( i.exchange_rate , 1 ) ) , :C_BASE_PRECISION ) , round ( ( ( nvl ( ps.amount_remaining , 0 ) / ( nvl ( i.payment_cross_rate , 1 ) ) ) * nvl ( i.exchange_rate , 1 ) ) / :C_BASE_MIN_ACCT_UNIT ) * :C_BASE_MIN_ACCT_UNIT ) ) )) C_INV_DUE_AMT_4,
                AP_APXINAGE_XMLP_PKG.c_check_data_convertedformula(decode ( i.invoice_currency_code , :C_BASE_CURRENCY_CODE , ' ' , decode ( i.exchange_rate , NULL , '*' , ' ' ) )) C_CHECK_DATA_CONVERTED
            FROM    ap_payment_schedules_all ps,
                    ap_invoices_all i,
                    hz_parties hp,
                    poz_suppliers_v pozv,  --rchandan
				    --ap_poz_site_addr_assignment_v pozsv --rchandan
					poz_supplier_sites_v pozsv, -- anupgupt
					ap_lookup_codes alc
            WHERE   ps.org_id = :P_BUSINESS_UNIT
	    AND     i.org_id = :P_BUSINESS_UNIT
	    AND     i.invoice_id = ps.invoice_id
            AND     i.party_id = hp.party_id
	    /*Bug12393630 : Added below join, and commented join between hz_parties and poz_suppliers_v*/
	    AND     i.vendor_id=pozv.vendor_id(+)
            --  AND     hp.party_id = pozv.party_id (+)
            AND     i.vendor_site_id = pozsv.vendor_site_id (+)
            AND     (hp.party_id = :P_PARTY_ID or :P_PARTY_ID is null) -- Bug 11782631 
            /*AND     ((to_date(to_char(SYSDATE,'DD-MON-RRRR'),'DD-MON-RRRR') - ps.due_date)
                          between :C_MINDAYS and  :C_MAXDAYS)*/
	    AND (ps.due_date between 
             (to_date(to_char(SYSDATE,'DD-MM-RRRR'),'DD-MM-RRRR') - :C_MAXDAYS) 
             AND  (to_date(to_char(SYSDATE,'DD-MM-RRRR'),'DD-MM-RRRR') - :C_MINDAYS))
            AND     i.invoice_type_lookup_code like :C_INVOICE_TYPE_SELECT
            AND     i.cancelled_date IS NULL
            AND     (nvl(ps.amount_remaining, 0) * nvl(i.exchange_rate,1))  != 0
            and (NVL(PS.AMOUNT_REMAINING, 0) * NVL(I.EXCHANGE_RATE,1)) 
		between NVL(:P_AMOUNT_DUE_LOW,(NVL(PS.AMOUNT_REMAINING, 0) * NVL(I.EXCHANGE_RATE,1))) 
			AND NVL(:P_AMOUNT_DUE_HIGH,(NVL(PS.AMOUNT_REMAINING, 0) * NVL(I.EXCHANGE_RATE,1))) -- Bug 11782631 
            AND     nvl(i.payment_status_flag,'N') in ('N','P') -- for bug 7500141
           /*added by rchandan*/
            AND ps.org_id = :P_BUSINESS_UNIT
			/* start additions by ssumaith*/
            AND     alc.lookup_type = 'INVOICE TYPE'
            AND     alc.lookup_code = i.invoice_type_lookup_code			
            ORDER BY
             C_PRIMARY_BRK,
             C_VENDOR_NUMBER,
             C_VENDOR_SITE_CODE,
             pozv.vendor_id,
             i.invoice_type_lookup_code,
     	     ps.due_date,
             i.invoice_num,
             ps.payment_num
=================================================================================
------------------------------------------FII_ImagingAuditabilityDm-----------------------------------
SELECT /*+ use_hash(inv) */
			to_timestamp_tz(ema.ecActionDataText1
  ||' UTC', 'YYYY-MM-DD HH24:MI:SS TZR') AS "Mail Received",
  to_timestamp_tz(DECODE(cs.ecActionDataText5, NULL, NULL, cs.ecActionDataText5
  ||' UTC'), 'YYYY-MM-DD HH24:MI:SS TZR')                        AS "ODC",
  inte.creation_date                                                                                                                                                     AS "Interface",
  inv.creation_date                                                                                                                                                      AS "Invoice Creation",
  ema.ecActionDataText2                                                                                                                                                  AS "Received from Email",
  ema.ecActionDataText3                                                                                                                                                  AS "Email Subject",
  pag.ecActionDataText2                                                                                                                                                  AS "Name of Attachment",
  DECODE(inv.invoice_id, NULL, inte.invoice_num, inv.invoice_num)                                                                                                        AS "Invoice Number",
  DECODE(inv.invoice_id, NULL, DECODE(inte.invoice_id, NULL, 'Email Received', DECODE(inte.status, 'REJECTED', 'In Interface – Rejected','PROCESSED','Deleted after Import','In Interface')), 'Completed') AS "Processing Status",
  DECODE(inv.invoice_id, NULL, NULL, alc.displayed_field)                                                                                                                AS "Invoice Status",
  ema.ecBatchID                                                                                                                                                        AS "Batch Number ODC",
  inte.request_id                                                                                                                                                      AS "Import Process ID",
  pag.ecActionDataText1                                                                                                                                                 AS "URN Number",
  DECODE(inv.invoice_id,NULL,'N/A',(SELECT approvalstatus.displayed_field FROM FUSION.AP_LOOKUP_CODES approvalstatus 
  WHERE approvalstatus.lookup_type = 'AP_WFAPPROVAL_STATUS' AND approvalstatus.lookup_code = DECODE(inv.wfapproval_status,'STOPPED','WITHDRAWN',inv.wfapproval_status))) AS "ApprovalStatus", 
  DECODE(inv.invoice_id,NULL,'N/A',(SELECT invoicepaymentstatus.displayed_field FROM FUSION.AP_LOOKUP_CODES invoicepaymentstatus WHERE invoicepaymentstatus.lookup_type = 'INVOICE PAYMENT STATUS' AND invoicepaymentstatus.lookup_code = inv.payment_status_flag)) AS "PaidStatus",
  DECODE(inv.invoice_id,NULL,'N/A',(SELECT asl.displayed_field FROM FUSION.AP_LOOKUP_CODES asl where asl.lookup_type = 'AP_ACCOUNTING_STATUS' AND asl.lookup_code = FUSION.ap_invoices_utility_pkg.get_accounting_status(inv.invoice_id))) AS "AccountingStatus"
  ,nvl(inv.invoice_id, inte.invoice_id) "InvoiceID"
  ,rej.reject_lookup_code "RejectionReason"
  , NVL((CASE WHEN instr(inte.po_number, 'FN') = 0 THEN NULL
		WHEN instr(inte.po_number, 'MF') = 0 THEN NULL
		ELSE inte.po_number END), PO.SEGMENT1) "PoNumber"
  ,POL.LINE_NUM "PO LINE NUM"
  ,DECODE (RCV.TRANSACTION_TYPE, 'RECEIVE', 'RECEIVED'
								,'DELIVER', 'DELIVERED', NULL) "RECEIPT STATUS"
  ,DECODE(NVL(pol.ITEM_DESCRIPTION, 'N'), 'N', 'N', 'Y') INV_ITEM
  ,pol.quantity line_qty
  ,rcv.quantity rcv_qty
  FROM "FUSION".ecAudit ema,
  "FUSION".ecAudit pag,
  "FUSION".ecAudit cs,
  FUSION.AP_INVOICES_INTERFACE inte,
  FUSION.AP_INVOICES_ALL inv,
  FUSION.AP_LOOKUP_CODES alc,
  PO_HEADERS_ALL PO,
  PO_LINES_ALL POL,
  RCV_TRANSACTIONS RCV,
  (SELECT PARENT_TABLE
				,PARENT_ID
				,REJECT_LOOKUP_CODE
				,LAST_UPDATE_DATE
				,PARENT_ID INVOICE_ID
				,NULL LINE_ID
				,NULL LINE_NUMBER
		FROM AP_INTERFACE_REJECTIONS
		WHERE PARENT_TABLE = 'AP_INVOICES_INTERFACE'
UNION
		SELECT R.PARENT_TABLE
				,R.PARENT_ID
				,R.REJECT_LOOKUP_CODE REJECT_LOOKUP_CODE
				,R.LAST_UPDATE_DATE
				,L.INVOICE_ID
				,R.PARENT_ID LINE_ID
				,L.LINE_NUMBER
		FROM AP_INTERFACE_REJECTIONS R,
			AP_INVOICE_LINES_INTERFACE L
		WHERE R.PARENT_TABLE = 'AP_INVOICE_LINES_INTERFACE'
		AND R.PARENT_ID = L.INVOICE_LINE_ID
ORDER BY INVOICE_ID
) rej
WHERE ema.ecActionID       = 1001
AND PO.SEGMENT1(+) = INTE.PO_NUMBER  
--AND PO.PO_HEADER_ID(+) = INV.PO_HEADER_ID
AND POL.LINE_NUM(+) = REJ.LINE_NUMBER
AND PO.PO_HEADER_ID = POL.PO_HEADER_ID(+)
AND POL.PO_LINE_ID = RCV.PO_LINE_ID(+)
AND nvl(inv.invoice_id, inte.invoice_id) = REJ.INVOICE_ID(+)
AND ema.ecBatchID          = cs.ecBatchID(+)
AND cs.ecActionID(+)       = 13
AND ema.ecBatchID          = pag.ecBatchID(+)
AND pag.ecActionID(+)      = 1002
AND pag.ecActionDataText1  = inte.Routing_Attribute5(+)
AND inte.source(+)         = 'IMAGE'
AND pag.ecActionDataText1  = inv.Routing_Attribute5(+)
AND inv.source(+)          = 'IMAGE'
AND alc.lookup_type(+) = 'NLS TRANSLATION'                
AND alc.lookup_code(+)     = inv.approval_status
AND (ema.ecActionDataText2 = :P_EMAIL 
OR :P_EMAIL               IS NULL)
AND to_timestamp_tz(ema.ecActionDataText1
  ||' UTC', 'YYYY-MM-DD HH24:MI:SS TZR') >= :P_DATE_START 
 AND to_timestamp_tz(ema.ecActionDataText1   
     ||' UTC', 'YYYY-MM-DD HH24:MI:SS TZR') - interval '1' DAY < :P_DATE_END 
ORDER BY ema.ecActionDataText1, POL.LINE_NUM, RCV.TRANSACTION_TYPE desc
===========================================================================================
SELECT        FB.book_type_code                                 ASSET_BOOK  
            , FAB.asset_number                                  ASSET_NUMBER
			, FAT.description				                    ASSET_DESCRIPTION
			, FC.segment1 					                    MAJOR_CATEGORY
            , FC.segment2 					                    MINOR_CATEGORY
			, (SELECT asset_number
				 FROM fa_additions_b
				WHERE asset_id = FAB.parent_asset_id
				  AND rownum < 2)                               PARENT_ASSET_NUMBER
			, FC.segment3                                       SUB_MINOR_CATEGORY
			, FAB.asset_type                                    
			, FAB.tag_number                                    TAG_NUMBER
			, FAB.serial_number                                 SERIAL_NUMBER
			, FAB.current_units                                 CURRENT_UNITS
			, FAB.manufacturer_name                             MANUFACTURER
			, FAB.model_number                                  MODEL_NUMBER
			, FAB.owned_leased                                  OWNED_LEASED
			, TO_CHAR(FB.date_placed_in_service, 'DD-MM-YYYY')  PLACED_IN_SERVICE
			, TO_CHAR(FB.date_placed_in_service, 'DD-MM-YYYY')  DEPRE_START_DATE
			, FL.segment1                                       CITY
			, FL.segment2                                       BUILDING
			, FL.segment3                                       FLOOR
			, PPNF.display_name                                 EMPLOYEE_NAME
			, (SELECT life_in_months                                                           
				 FROM FA_METHODS                                                                  
				WHERE method_id = FB.method_id
				AND rownum < 2)                 LIFE_IN_MONTHS
			, FAB.asset_id
			, FB.cost                                           ORIGINAL_COST
			, FB.recoverable_cost                               CURRENT_COST
			, GCC.segment1
			  ||'.'
			  ||GCC.segment2
			  ||'.'
			  ||GCC.segment3
			  ||'.'
			  ||GCC.segment4
			  ||'.'
			  ||GCC.segment5
			  ||'.'
			  ||GCC.segment6
			  ||'.'
			  ||GCC.segment7
			  ||'.'
			  ||GCC.segment8                                    COST_CENTER_ACCOUNT
			, FAI.vendor_name
			, FAI.invoice_number
			, FAI.inv_voucher_number
			, FDD.deprn_reserve                                 ACCUMULATED_RESERVE
			, FDD.ytd_deprn                                     YTD_DEPRN
			, NVL(FDD.adjusted_cost, FB.cost) 
			 - (FDD.deprn_reserve)                               ASSET_NBV
			, FR.GAIN_LOSS_AMOUNT  
			, FR.cost_retired
			, TO_CHAR(FR.date_effective,'DD-MM-YYYY')            DATE_RETIRED
			, FR.NBV_RETIRED
			, FR.PROCEEDS_OF_SALE
			, FR.cost_retired - FR.NBV_RETIRED                   RESERVE_RETIRED
			, FR.units                                           UNITS_RETIRED
			, FAB.creation_date
			, (SELECT LISTAGG(period_name, '|, ') WITHIN GROUP (ORDER BY period_name)
			     FROM fa_deprn_periods FDP
                WHERE FAB.creation_date between 
				      FDP.period_open_date
                  AND nvl(FDP.period_close_date, sysdate)
				  AND FDP.book_type_code = FB.book_type_code)       PERIOD_ENTERED
            , (SELECT LISTAGG(period_name, '|, ') WITHIN GROUP (ORDER BY period_name)
			      FROM fa_transaction_headers  FTH
				       ,fa_deprn_periods       FDP
				 WHERE FTH.asset_id = FAB.asset_id
				   and FTH.book_type_code = FDP.book_type_code
                   and FTH.date_effective between FDP.period_open_date
                   and nvl(FDP.period_close_date, sysdate)
				   AND FTH.transaction_type_code LIKE '%ADDITION%')	  ADDITION_PERIOD
            , (SELECT LISTAGG(period_name, '|, ') WITHIN GROUP (ORDER BY period_name)
			      FROM  fa_transaction_headers  FTH
				       ,fa_deprn_periods       FDP
				 WHERE FTH.asset_id = FAB.asset_id
				   and FTH.book_type_code = FDP.book_type_code
                   and FTH.date_effective between FDP.period_open_date
                   and nvl(FDP.period_close_date, sysdate)
				   AND FTH.transaction_type_code LIKE '%ADJUSTMENT%')  ADJUSTMENT_PERIOD
            , (SELECT LISTAGG(period_name, '|, ') WITHIN GROUP (ORDER BY period_name)
			      FROM  fa_transaction_headers  FTH
				       ,fa_deprn_periods       FDP
				 WHERE FTH.asset_id = FAB.asset_id
				   and FTH.book_type_code = FDP.book_type_code
                   and FTH.date_effective between FDP.period_open_date
                   and nvl(FDP.period_close_date, sysdate)
				   AND FTH.transaction_type_code LIKE '%PARTIAL RETIREMENT%')  PARTIAL_RETIREMENT_PERIOD	
            , (SELECT LISTAGG(period_name, '|, ') WITHIN GROUP (ORDER BY period_name)
			      FROM  fa_transaction_headers  FTH
				       ,fa_deprn_periods       FDP
				 WHERE FTH.asset_id = FAB.asset_id
				   and FTH.book_type_code = FDP.book_type_code
                   and FTH.date_effective between FDP.period_open_date
                   and nvl(FDP.period_close_date, sysdate)
				   AND FTH.transaction_type_code LIKE '%FULL RETIREMENT%')  FULL_RETIREMENT_PERIOD
           , (SELECT LISTAGG(period_name, '|, ') WITHIN GROUP (ORDER BY period_name)
			      FROM  fa_transaction_headers  FTH
				       ,fa_deprn_periods       FDP
				 WHERE FTH.asset_id = FAB.asset_id
				   and FTH.book_type_code = FDP.book_type_code
                   and FTH.date_effective between FDP.period_open_date
                   and nvl(FDP.period_close_date, sysdate)
				   AND FTH.transaction_type_code LIKE '%REINSTATEMENT%')  REINSTATEMENT_PERIOD	
             , (SELECT method_code
			     FROM fa_methods
				WHERE method_id = FB.method_id)                           DEPRECIATION_METHOD 
            , NVL((SELECT SUM(FDD1.deprn_amount)
                      FROM fa_deprn_summary FDD1
					      ,fa_deprn_periods  FDP
                    WHERE 1 = 1
                      AND deprn_source_code       = 'DEPRN'
					  AND FDD1.book_type_code = FDP.book_type_code 
					  and FDD1.period_counter = FDP.period_counter
					  AND FDD1.asset_id = FAB.asset_id	
					  AND FDP.period_name = :p_period_name), 0)       DEPRN_AMOUNT	
            , FAK.segment1                                            OFA_ASSET_NUMBER
            , FAK.segment2                                            OFA_ASSET_ID			        
			
  FROM     fa_additions_b 				                           FAB
		 , fa_categories_b 				                           FC
		 , fa_books      				                           FB
		 , fa_category_books 				                       FCB
		 , fa_additions_tl 				                           FAT
		 , fa_locations                                            FL
		 , fa_distribution_history 		                           FDH
		 , gl_code_combinations 			                       GCC
		 , per_all_people_f                                        PAPF
		 , per_person_names_f                                      PPNF
		 , fa_retirements                                          FR
		 , fa_asset_keywords                                       FAK
		 ,(SELECT    FAI1.asset_id
					,LISTAGG(FAI1.vendor_name, '| ') WITHIN GROUP (ORDER BY FAI1.invoice_number) vendor_name
		            ,LISTAGG(FAI1.invoice_number, '| ') WITHIN GROUP (ORDER BY FAI1.invoice_number) invoice_number
					,LISTAGG(AIA.doc_sequence_value, '| ') WITHIN GROUP (ORDER BY FAI1.invoice_number) inv_voucher_number
             FROM   fa_asset_invoices                FAI1
			      , ap_invoices_all                  AIA
            WHERE  1  =   1
	          AND  NVL(FAI1.invoice_line_type, 'XYZ')   <> 'TAX'
			  AND  FAI1.invoice_id = AIA.invoice_id(+)
              AND  TRUNC(SYSDATE) BETWEEN FAI1.date_effective(+)
                        		   AND NVL(FAI1.date_ineffective(+), SYSDATE)
         GROUP BY    FAI1.asset_id)                           FAI 
		 , (SELECT FDD.adjusted_cost
                    	   ,FDD.deprn_reserve
                    	   ,FDD.asset_id
                    	   ,FDD.DEPRN_RUN_DATE
                    	   --,FDD.distribution_id
						   ,FDD.YTD_DEPRN
						   ,FDP.period_name
						   ,FDD.deprn_amount
                      FROM fa_deprn_summary FDD
					       ,fa_deprn_periods  FDP
                    WHERE 1 = 1
					  AND FDD.book_type_code = FDP.book_type_code 
					  and FDD.period_counter = FDP.period_counter
                      AND deprn_source_code       = 'DEPRN'
					  AND FDD.deprn_run_date  = (SELECT MAX(DEPRN_RUN_DATE)
                                                FROM FA_DEPRN_DETAIL  
                    			               WHERE asset_id = FDD.asset_id
                                                 AND deprn_source_code = 'D'))                       FDD
  WHERE    1         =       1
    AND  FAB.asset_category_id 					=  FC.category_id
	AND  FB.asset_id 							=  FAB.asset_id
	AND  FCB.book_type_code 					=  FB.book_type_code
	AND  FC.category_id 						=  FCB.category_id
	AND  FAT.asset_id 							=  FAB.asset_id
	AND  FAT.asset_id 							=  FR.asset_id(+)
	AND  GCC.code_combination_id 				=  FDH.code_combination_id
 	AND  FAB.asset_id 							=  FAI.asset_id(+)
	AND  FAB.asset_id 							=  FDH.asset_id
	AND  FB.book_type_code 						=  FDH.book_type_code
	AND  FDH.assigned_to                        =  PAPF.person_id(+)
	AND  PPNF.person_id(+)                      =  FDH.assigned_to
	AND  FB.asset_id 							=  FDH.asset_id
	AND  FAB.asset_id                           =  FDD.asset_id(+)
	--AND  FDH.distribution_id                    =  FDD.distribution_id(+)
	AND  FDH.location_id 						=  FL.location_id
	AND  FAB.asset_key_ccid                     =  FAK.code_combination_id(+)
	--AND  FAB.asset_number                       =  '1027'
	AND  FR.status(+)                           =  'PROCESSED'
	AND  FAB.owned_leased                       =  'OWNED'
	AND  FDH.date_ineffective IS NULL
    AND  FB.date_ineffective IS NULL	
	AND  TRUNC(SYSDATE) BETWEEN PAPF.effective_start_date(+) AND PAPF.effective_end_Date(+)
	AND  TRUNC(SYSDATE) BETWEEN PPNF.effective_start_date(+) AND PPNF.effective_end_Date(+)
	AND  TRUNC(FAB.creation_date) BETWEEN NVL(:p_from_date, TO_DATE('19510101', 'YYYYMMDD')) AND NVL(:p_to_date, TO_DATE('47121231', 'YYYYMMDD'))
	AND  FC.segment1                                 = NVL(:p_major_category, FC.segment1)
	AND  FC.segment2                                 = NVL(:p_minor_category, FC.segment2)
	AND  FC.segment3                                 = NVL(:p_sub_minor_cat, FC.segment3)
	AND  FAB.asset_type                              = NVL(:p_asset_type, FAB.asset_type)
	AND  FL.segment1                                 = NVL(:p_city, FL.segment1)
    AND  FL.segment2                                 = NVL(:p_building, FL.segment2)
	AND  PPNF.name_type(+) = 'GLOBAL'
	AND  FB.book_type_code = :p_asset_book
=================================================================================================
------------------------------------------------French DAS2 Contractor Letters Data Model-------------------------------------------------------
--Q_honoraires
select   to_char(d.validite)                                      TITRE,
         to_char(sysdate,'dd/mm/rr')                              SYS_DATE,
         rtrim(nvl(d.SEGMENT1,' '))                               SEGMENT1,
         d.siret_benef				                        SUPPLIER_SIRET,
         rtrim(rtrim(nvl(d.nom,' ') || ' ' || nvl(d.prenom,' '))) NOM_PRENOM,
         rtrim(nvl(d.RAISON_SOCIALE,' '))                         RAISON_SOCIALE,
         rtrim(nvl(hzl.address1, ' '))                     ADR_COMPL,
         decode ( nvl(hzl.city,0) , hzl.city, 
                      substr(decode(hzl.country, null, upper(hzl.postal_code),
                                                 'FR', upper(hzl.postal_code),
                                                 'MC', '99138',
                                                 'AD', '99130', '99999' ), 1, 5),
                      decode(hzl.country, null, upper(substr(hzl.postal_code,1,5))||' '||substr(hzl.city ,1,24),
                                          'FR', upper(substr(hzl.postal_code,1,5))||' '||substr(hzl.city ,1,24),
                                          'MC', '99138 '||substr(hzl.city ,1,24),
                                          'AD', '99130 '||substr(hzl.city ,1,24), hzl.city) ) 
                                                                  ADR_COM,
         rtrim(hzl.city)                                          BDIST,
         rtrim(d10.ADR_COMMUNE_ET) || ',  ' || to_char(sysdate,'dd/mm/rr')
                                                                  PLACE_DATE,
         rtrim(nvl(d20.raison_sociale,' '))                         ETAB ,
         d.dhon_h                                                 DHON_H,
         d.dcom_c                                                 DCOM_C,
         d.DCO_CO                                                 DCO_CO,
         d.DRIS_R                                                 DRIS_R,
         d.DJE_JP                                                 DJE_JP,
         d.DDA_DA                                                 DDA_DA,
         d.DDI_I                                                  DDI_I,
         d.DAU_AR                                                 DAU_AR,
         d.AVAN                                                   AVAN,
         d.INDE                                                   INDE,
         d.TVA_NETTE                                     	      TVA_NETTE,
         d.RETE                                                   RETE,
         d.dhon_h + d.dcom_c + d.dco_co + d.dris_r + d.dje_jp + d.dda_da +
         d.ddi_i + d.dau_ar + d.avan + d.inde - d.tva_nette -d.rete      TOT_DECL,
         d.age_11                                                 COTIS,
         d.dhon_h + d.dcom_c + d.dco_co + d.dris_r + d.dje_jp + d.dda_da +
                d.ddi_i + d.dau_ar + d.avan + d.inde - d.tva_nette -
                d.rete - d.age_11                                TOT_REV12 ,
         rtrim(:P_CONTACT_FIRST) || ' ' || rtrim(:P_CONTACT_LAST)
                                                                  CONTACTE,
         decode(substr(:P_CONTACT_TPH, 1, 10), '          ', 'inconnu',
                 rtrim(:P_CONTACT_TPH))                        CONTACTE_TPH,
         rtrim(:P_MANAGER_FIRST) || ' ' || rtrim(:P_MANAGER_LAST)   RESPONSABLE,
         decode(substr(d300.tph_fonc_resp, 1, 10), '          ', 'inconnu',
                 rtrim(d300.tph_fonc_resp))                       RESP_TPH
from     je_fr_das2_ven_summary_t  d,
         je_fr_das2_le_headers_t   d10,
         je_fr_das2_le_etb_summ_t  d300,
         je_fr_das2_etb_headers_t  d20,
         poz_supplier_sites_all_x  pvs,
         hz_locations hzl
where    d.legal_entity_id  = nvl(:P_LEGAL_ENTITY_ID, d.legal_entity_id)
and      d.establishment_id = nvl(:P_ETAB_ID, d.establishment_id)
and      d300.type_enreg = '300'
and      d10.legal_entity_id   = d.legal_entity_id
and      d300.legal_entity_id = d.legal_entity_id
and      d20.legal_entity_id  = d.legal_entity_id
and      d.establishment_id = d300.establishment_id
and      d.establishment_id = d20.establishment_id
and      d.siren_etab = d300.siren_etab
and      d.nic_etab = d300.nic_etab
and      d.siren_etab = d20.siren_etab
and      d.nic_etab = d20.nic_etab
and      d.vendor_site_id = pvs.vendor_site_id
and      pvs.location_id = hzl.location_id
and (d.raison_sociale = nvl(:P_VENDOR,d.raison_sociale)
     or d.vendor_name = nvl(:P_VENDOR,d.vendor_name))
group by to_char(d.validite),
         to_char(sysdate,'dd/mm/rr'),
         rtrim(nvl(d.SEGMENT1,' ')),
         d.siret_benef,
         rtrim(rtrim(nvl(d.nom,' ') || ' ' || nvl(d.prenom,' '))),
         rtrim(nvl(d.RAISON_SOCIALE,' ')) ,
         rtrim(nvl(hzl.address1, ' ')),
         decode ( nvl(hzl.city,0) , hzl.city, 
                      substr(decode(hzl.country, null, upper(hzl.postal_code),
                                                 'FR', upper(hzl.postal_code),
                                                 'MC', '99138',
                                                 'AD', '99130', '99999' ), 1, 5),
                      decode(hzl.country, null, upper(substr(hzl.postal_code,1,5))||' '||substr(hzl.city ,1,24),
                                          'FR', upper(substr(hzl.postal_code,1,5))||' '||substr(hzl.city ,1,24),
                                          'MC', '99138 '||substr(hzl.city ,1,24),
                                          'AD', '99130 '||substr(hzl.city ,1,24), hzl.city) ),
         rtrim(hzl.city),
         rtrim(d10.ADR_COMMUNE_ET) || ',  ' || to_char(sysdate,'dd/mm/rr'),
         rtrim(nvl(d20.raison_sociale,' ')),
         d.dhon_h,
         d.dcom_c,
         d.DCO_CO,
         d.DRIS_R,
         d.DJE_JP,
         d.DDA_DA,
         d.DDI_I,
         d.DAU_AR,
         d.AVAN,
         d.INDE,
         d.TVA_NETTE,
         d.RETE,
         d.dhon_h + d.dcom_c + d.dco_co + d.dris_r + d.dje_jp + d.dda_da +
         d.ddi_i + d.dau_ar + d.avan + d.inde - d.tva_nette -d.rete      ,
         d.age_11                                                ,
         d.dhon_h + d.dcom_c + d.dco_co + d.dris_r + d.dje_jp + d.dda_da +
                d.ddi_i + d.dau_ar + d.avan + d.inde - d.tva_nette -
                d.rete - d.age_11                                ,
         rtrim(:P_CONTACT_FIRST) || ' ' || rtrim(:P_CONTACT_LAST)
                                                        ,
         decode(substr(:P_CONTACT_TPH, 1, 10), '          ', 'inconnu',
                rtrim(:P_CONTACT_TPH))                       ,
         rtrim(:P_MANAGER_FIRST) || ' ' || rtrim(:P_MANAGER_LAST)          ,
         decode(substr(d300.tph_fonc_resp, 1, 10), '          ', 'inconnu',
                rtrim(d300.tph_fonc_resp))                      
order by nom_prenom, 
         rtrim(nvl(d.RAISON_SOCIALE,' ')), 
         rtrim(nvl(hzl.address1, ' ')), 
         to_char(d.validite), 
         sysdate, 
         rtrim(nvl(d.SEGMENT1,' '))
--Q_LRU
select  raison_sociale lru_name
	             from    je_fr_das2_etb_headers_t 
	             where   legal_entity_id = :P_LEGAL_ENTITY_ID   
                     and     establishment_id = :P_ETAB_ID
--Q_LE
select  raison_sociale le_name
                     from    je_fr_das2_le_headers_t 
                     where   legal_entity_id = :P_LEGAL_ENTITY_ID
============================================================================================
-----------------------------------------------------French DAS2 File Data Model----------------------------------------------------------
--Q_total_entreprise
select  nvl(das310.siren_ent,0)		SIREN,
	nvl(das310.z0,' ')			Section,
	nvl(das310.type_enreg,' ')		Record_Type, 
        (select nvl(count(*),0) from (select *
        from   je_fr_das2_le_etb_summ_t
        where  type_enreg = '300' 
        and    legal_entity_id = nvl(:P_LEGAL_ENTITY_ID, legal_entity_id)
        and    establishment_id = nvl(:P_ETAB_ID, establishment_id )))  DAS2_Type_020,
	nvl(das310.nbre_200 ,0)		DAS2_Type_200, 
      (select nvl(count(*),0)
       from   (select vendor_site_id, establishment_id
               from   je_fr_das2_details_t
               where   legal_entity_id = nvl(:P_LEGAL_ENTITY_ID, legal_entity_id)
               and     establishment_id = nvl(:P_ETAB_ID, establishment_id )
               group by vendor_site_id, establishment_id)) DAS2_Type_210,	
	nvl(das310.z1,' ')				Reserved_Zone_1, 
	sum(nvl(das300.base_brute_fisc ,0))	        Base_Of_Gross_Fiscal,
	sum(nvl(das300.remunerations_net,0))	        Net_Remuneration,
	sum(nvl(das300.avantages_nat,0))		Misc_Benefits,
	sum(nvl(das300.frais_prof ,0))		        Professional_Expenses,
	sum(nvl(das300.cheque_vac ,0))	                Holiday_checks,
	sum(nvl(das300.total_impos ,0))		        Total_Taxable,
	sum(nvl(das300.total_base_impos1 ,0))	        Total_Base_Taxable_First,
	sum(nvl(das300.total_base_impos2,0))	        Total_Base_Taxable_Second,
	sum(nvl(das300.total_ret,0))		        Total_Deduction_On_Source, 
	sum(nvl(das300.dhon_h ,0))			Fees,
	sum(nvl(das300.dcom_c ,0))			Commissions,
	sum(nvl(das300.dco_co,0))			Brokerage,
	sum(nvl(das300.dris_r ,0))			Repayments,
	sum(nvl(das300.dje_jp ,0))			Compensations,
	sum(nvl(das300.dda_da,0))			Copyright,
	sum(nvl(das300.ddi_i ,0))			Inventors_Right,
	sum(nvl(das300.dau_ar ,0))			Other_Compensations,
	sum(nvl(das300.inde ,0))			Indemnities,
	sum(nvl(das300.avan ,0))			Misc_Benefits_2,
	sum(nvl(das300.rete,0))			        Deduction_on_Source,
	nvl(das310.z2,' ')			        Reserved_Zone_2,
	sum(nvl(das300.taxe_sal,0))			Tax_On_Salaries,
	-- Bug 18385826 nvl(das310.z3,' ')			        Reserved_Zone_3,
	sum(nvl(das300.effectif_ent,0))		        Number_of_Employee,
	nvl(das310.z4,' ')		 	        Reserved_Zone_4
from    je_fr_das2_le_etb_summ_t    das310,
        je_fr_das2_le_etb_summ_t    das300
where   das310.type_enreg = '310'
and     das300.type_enreg = '300'  
and     das310.legal_entity_id = nvl(:P_LEGAL_ENTITY_ID, das310.legal_entity_id)
and     das310.legal_entity_id = das300.legal_entity_id
and     das300.establishment_id = nvl(:P_ETAB_ID, das300.establishment_id)
group by 
        nvl(das310.siren_ent,0),
	nvl(das310.z0,' '),
	nvl(das310.type_enreg,' '),
	nvl(das310.nbre_200 ,0),
        nvl(das310.z1,' '),
	nvl(das310.base_brute_fisc ,0),
	nvl(das310.remunerations_net,0),
	nvl(das310.avantages_nat,0),
	nvl(das310.frais_prof ,0),
	nvl(das310.cheque_vac ,0),
	nvl(das310.total_impos ,0),
	nvl(das310.total_base_impos1 ,0),
	nvl(das310.total_base_impos2,0),
	nvl(das310.total_ret,0), 
	nvl(das310.z2,' '),
	nvl(das310.z3,' '),
	nvl(das310.z4,' ')
--Q_total_etablissement
select	nvl( siren_etab,0)	SIREN,
	nvl(nic_etab,0)			NIC,
	nvl(section_das,' ')		Section_Code,
	nvl( validite,0)			Expiration_Date,
	nvl(type_das,' ')			DAS2_Type,
	nvl(type_enreg,' ')		Record_Type,
	nvl(z1,' ')				Reserved_Zone_1,
	nvl( base_brute_fisc,0)		Base_of_Gross_Fiscal,
	nvl(remunerations_net,0)	Net_Remuneration,
	nvl(avantages_nat,0)		Misc_benefits,
	nvl(frais_prof,0)			Professional_Expenses,
	nvl(cheque_vac,0)			Holiday_checks,
	nvl(total_impos,0)		Total_Taxable,
	nvl(total_base_impos1,0)	Total_Base_Taxable_First,
	nvl( total_base_impos2,0)	Total_Base_Taxable_Second,
	nvl(total_ret,0)			Total_Deduction_On_Source,
	nvl(dhon_h,0)			Fees,
	nvl( dcom_c ,0)			Commissions,
	nvl( dco_co,0)			Brokerage,
	nvl(dris_r,0)			Repayments,
	nvl(dje_jp,0)			Compensations,
	nvl( dda_da,0)			Copyright,
	nvl(ddi_i,0)			Inventors_Right,
	nvl( dau_ar,0)			Other_Compensations,
	nvl(inde,0)				Indemnities,
	nvl( avan,0)			Misc_Benefits_2,
	nvl(rete,0)				Deduction_on_Source,
	nvl(z2,' ')				Reserved_Zone_2,
	nvl( taxe_sal,0)			Tax_On_Salaries,
	nvl(z3,' ')				Reserved_Zone_3,
	nvl( effectif_etab,0)		Number_of_Employee,
	nvl(z4,' ')				Reserved_Zone_4,
       -- Bug 18385826 : Start
	nvl(:P_MANAGER_LAST,' ') || ' ' || nvl(:P_MANAGER_FIRST,' ')	Full_Name,
       -- Bug 18385826 : End
	nvl(:P_MANAGER_TPH,' ')		Phone_Number,
       -- Bug 18385826 : Start
        nvl(:P_EMAIL_ADDRESS,' ')            Email_Address,
        -- Bug 18385826 : End
	nvl(z5,' ')				Reserved_Zone_5
from    je_fr_das2_le_etb_summ_t    das
where   das.type_enreg = '300'
and     das.legal_entity_id = nvl(:P_LEGAL_ENTITY_ID, das.legal_entity_id)
and     das.establishment_id = nvl( :P_ETAB_ID , das.establishment_id)
and     das.establishment_id = :LRU_ID
--Q_honoraire
select  nvl(siren_etab,0)	SIREN,
	nvl(nic_etab,0)		NIC,
	nvl(section_das,' ')	Section_Code,
	nvl(validite,0)		Expiration_Date,
	nvl(type_das,' ')		DAS2_Type,
	nvl(type_enreg,' ')	Record_Type,
	nvl(siret_benef,'0')	SIRET,
	nvl(upper(nom), ' ')		Beneficiarys_Surname,
	nvl(upper(prenom), ' ')		Beneficiarys_First_Name,
	nvl(upper(raison_sociale), ' ')	Company_Name,
	nvl(upper(profession),' ')	Profession,
	nvl(adr_voie,' ')		Complement_of_Address,
	nvl(z1,' ')			Reserved_Zone_1,
	nvl(adr_num,' ')		Building_Number,
	nvl(adr_type,' ')		Address_Type,
	nvl(z2,' ')			Separator_1,
	nvl(upper(adr_compl),' ')	Address_Complement,
	nvl(adr_insee,' ')	INSEE_Code,
	nvl(z3,' ')			Separator_2,
	nvl(upper(adr_bur_dist),' ')	Distributors_Address,
	nvl(adr_cpostal,' ')	Zip_Code,
	nvl(z4,' ')			Separator_3,
	nvl(upper(adr_bur_dist),' ')	Distributors_Address_2,
	nvl(dhon_h,0)		Fees,
	nvl(dcom_c,0)		Commissions,
	nvl(dco_co,0)		Brokerage,
	nvl(dris_r ,0)		Repayments,
	nvl(dje_jp,0)		Compensations,
	nvl(dda_da,0)		Copyright,
	nvl(ddi_i,0)		Inventors_Right,
	nvl( dau_ar,0)		Other_Compensations,
	nvl(inde,0)			Indemnities,
	nvl(avan,0)			Misc_Benefits,
	nvl(rete,0) 		Deduction_on_Source,
	decode(nat_avan_nour, 'X', ' ', nat_avan_nour)	Meal_Benefits,
	decode(nat_avan_loge, 'X', ' ', nat_avan_loge)	Housing_Benefits,
	decode(nat_avan_voit, 'X', ' ', nat_avan_voit)	Car_Benefits,
	decode(nat_avan_autr, 'X', ' ', nat_avan_autr) Other_Benefits,
	nvl(z5,' ')			Reserved_Zone_2,
	decode(nat_rete_allo, 'X', ' ', nat_rete_allo) Allowances,
	decode(nat_rete_remb, 'X', ' ', nat_rete_remb) Reimbursements,
	decode(nat_rete_pris, 'X', ' ', nat_rete_pris)	Ind_Reim_by_Employer,
	decode(nat_tva_redui, 'X', ' ', nat_tva_redui)	Reduced_Tax,
	decode(nat_tva_dispe, 'X', ' ', nat_tva_dispe)	Exemptions,
	nvl( tva_nette ,0)	Net_VAT,
	nvl(z6,' ')			Reserved_Zone_3
from    je_fr_das2_ven_summary_t das
where   das.legal_entity_id = nvl(:P_LEGAL_ENTITY_ID, das.legal_entity_id)
and     das.establishment_id = :LRU_ID
--Q_etablissement
select establishment_id       LRU_ID,  
      nvl(siren_etab ,0)	SIREN,
	nvl(nic_etab,0)		NIC,
	nvl(section_das,' ')	Section_Code,
	nvl(validite,0)		Expiration_Date,
	nvl(type_das,' ')		DAS2_Type,
	nvl(type_enreg,' ')	Record_Type,
	nvl(z01_94_1,' ')		SIRET,
	nvl(code_ape,' ')		NAF_Code,
	nvl(z01_94_2,' ')		Reserved_Zone_1,
	nvl(siret_01_jan ,0)	SIRET_on_1st_January,
	nvl( nic_01_jan ,0)	NIC_on_1st_of_January,
	nvl(z02,' ')		Reserved_Zone_2,
	nvl(raison_sociale,' ')	Company_Name,
	nvl(adr_compl,' ')	Complement_of_Address,
	nvl(z1,' ')			Reserved_Zone_3,
	nvl(adr_concat,' ')	Address_complement,
	nvl(adr_insee,' ')	INSEE_Code,
	nvl(z3,' ')			Separator_1,
	nvl(adr_bur_dist,' ')	Distributors_Address,
	nvl(adr_cpostal,' ')	Zip_Code,
	nvl(z4,' ')			Separator_2,
	nvl(adr_bur_dist,' ')	Distributors_Address_2,
	nvl(profession, ' ')	Profession,
	nvl(z5,' ')			Reserved_Zone_4,
	nvl(code_taxe_sal,' ')	Salary_Tax_Code,
	nvl(z6,' ')			Reserved_Zone_5
from    je_fr_das2_etb_headers_t d20
where   d20.legal_entity_id = nvl(:P_LEGAL_ENTITY_ID, d20.legal_entity_id)
and     d20.establishment_id =nvl( :P_ETAB_ID, d20.establishment_id )
and     exists  (
        select  null
        from    je_fr_das2_ven_summary_t d210
        where  d20.nic_etab = d210.nic_etab
        and     d20.siren_etab = d210.siren_etab
        and     d210.legal_entity_id = d20.legal_entity_id
        &CP_ENTITY_CLAUSE
        )
--Q_entreprise
select	siret_entr 			SIREN_number,
	nvl(z01,' ')			Separator_1,
	nvl(type_enreg,' ')		Record_Type,
	nvl(z0_94_1,' ')			Reserved_Zone_1,
	nvl(code_ape,' ')			NAF_Code,
	nvl(z0_94_2,' ')			Reserved_Zone_2,
	nvl(raison_sociale,' ')		Company_Name,
	nvl(adr_concat,' ')		Concatenated_Address,
	nvl(adr_insee,'0')		INSEE_Code,
	nvl(z3,' ')				Reserved_Zone_3,
	nvl(adr_bur_dist,' ')		Distributors_Address,
	nvl(adr_cpostal,' ')		Zip_Code,
	nvl(z4,' ')				Separator_2,
	nvl(adr_bur_dist,' ')		Distributors_Address_2,
	nvl(z5,' ')				Reserved_Zone_4,
	nvl(type_fichier,' ')		Files_Type,
	nvl(to_char( siret_etab),' ')	SIRET,
	nvl(z6,' ')				Reserved_Zone_5,
	nvl(adr_compl_et,' ')		Complement_of_Address,
	nvl(z7,' ')				Separator_3,
	nvl(adr_concat_et,' ')		Concatenated_Address_2,
	nvl(adr_insee_et,' ')		INSEE_Code_2,
	nvl(z9,' ')				Separator_4,
	nvl(adr_bur_dist,' ')		Distributors_Address_3,
	nvl(adr_cpostal_et,' ')		Distributors_Zip_Code,
	nvl(z10,' ')			Separator_5,
	nvl(adr_bur_dist_et,' ')	Distributors_Address_4,
	nvl(decode(:P_FUNC_CURRENCY,'EUR',' ', :P_FUNC_CURRENCY),' ')	Currency_Code,
	nvl(z11,' ')			Reserved_Zone_6
from   	je_fr_das2_le_headers_t         das
where   das.legal_entity_id = nvl(:P_LEGAL_ENTITY_ID, das.legal_entity_id)
========================================================================================\
------------------------------------------------French DAS2 Verification Data Model-----------------------------------------------------------
--Q_JEFRDS
select        d.legal_entity_id,
	          x.name legal_entity_name,
	          d.vendor_name,
                pov.segment1,
                d.vendor_site_id,
                d.vendor_site_code,
                d.type_1099,
                d.invoice_num,
                TO_CHAR(d.invoice_date,'YYYY-MM-DD') invoice_date,
                d.check_number,
                decode(d.type_1099,'AVAN/A',AVAN,
                                   'AVAN/L',AVAN,
                                   'AVAN/N',AVAN,
                                   'AVAN/V',AVAN,
                                   'COTIS',AGE_11,
                                   'DAU/AR',DAU_AR,
                                   'DCO/CO',DCO_CO,
                                   'DCOM/C',DCOM_C,
                                   'DDA/DA',DDA_DA,
                                   'DDI/DI',DDI_I,
                                   'DHON/H',DHON_H,
                                   'DJE/JP',DJE_JP,
                                   'DRIS/R',DRIS_R,
                                   'INDE/F',INDE,
                                   'INDE/P',INDE,
                                   'INDE/R',INDE,
                                   'RETE/D',RETE,
                                   'RETE/R',RETE,
                                   'TVA/47',TVA_NETTE )  invoice_amount, 
	  &CS_LEGAL_ENTITY_TOTAL CF_FMT_LEGAL_ENTITY_TOTAL, 
	  &CS_SUPPLIER_TOTAL CF_FMT_SUPPLIER_TOTAL, 
	  &CS_SITE_SUB_TOTAL CF_FMT_SITE_TOTAL, 
	  &CS_TAX_CODE_TOTAL CF_FMT_TAX_CODE_TOTAL, 
	  JE_REP_FR_DAS2_VERIF.cf_fmt_invoice_amountformula(d.invoice_num, d.vendor_name, decode ( d.type_1099 , 'AVAN/A' , AVAN , 'AVAN/L' , AVAN , 'AVAN/N' , AVAN , 'AVAN/V' , AVAN , 'COTIS' , AGE_11 , 'DAU/AR' , DAU_AR , 'DCO/CO' , DCO_CO , 'DCOM/C' , DCOM_C , 'DDA/DA' , DDA_DA , 'DDI/DI' , DDI_I , 'DHON/H' , DHON_H , 'DJE/JP' , DJE_JP , 'DRIS/R' , DRIS_R , 'INDE/F' , INDE , 'INDE/P' , INDE , 'INDE/R' , INDE , 'RETE/D' , RETE , 'RETE/R' , RETE , 'TVA/47' , TVA_NETTE )) CF_FMT_INVOICE_AMOUNT, 
	  &invoice_date CF_INVOICE_DATE
  from  je_fr_das2_details_t d , 
        poz_suppliers_v pov ,
	  xle_firstparty_information_v x,
	  poz_supplier_sites_all_x povs
  where d.legal_entity_id = nvl(:P_LEGAL_ENTITY_ID ,d.legal_entity_id)
  and   x.legal_entity_id = d.legal_entity_id
  and   pov.vendor_id = povs.vendor_id
  and   povs.vendor_site_id = d.vendor_site_id 
  and   d.vendor_site_code in (
                       select d.vendor_site_code
                        from je_fr_das2_details_t dd
                        where dd.legal_entity_id = nvl(:P_LEGAL_ENTITY_ID,dd.legal_entity_id)
                        group by d.vendor_site_code
                )
  and d.validite = :P_YEAR 
        -- &CP_ENTITY_CLAUSE
        order by       
	  d.legal_entity_id,
	  d.vendor_name,
        d.vendor_site_code,
        d.type_1099,
        d.invoice_num desc
--Q_TAX
select  meaning  tax_for_salaries
  from    fnd_lookups
  where   lookup_type = 'YES_NO'
  and     lookup_code = :P_TAX_FOR_SALARIES
--Q_EXTRACT
select  meaning  extract_data
  from    fnd_lookups
  where   lookup_type = 'YES_NO'
  and     lookup_code = :P_EXTRACT_FLAG
--Q_LE
select  name le_name
        from    xle_entity_profiles
        where   legal_entity_id = :P_LEGAL_ENTITY_ID
=====================================================================================
---------------------------------------------French Type 210 Updates Data Model---------------------------------------------------------
--Q_TYPE210
select  e.raison_sociale                                               numero,        
        substr(rtrim(n.raison_sociale),1,50) || ' (' ||                
        to_char(n.siret_benef) ||                ')'                   raison_sociale,        
        rtrim(n.prenom)||' '||rtrim(n.nom)                             nom,        
        n.adr_compl                                                    address,  
        --Bug 12745183
        n.last_updated_by                                              Qui,
        n.last_update_date                                             Quand ,        
        decode(n.dhon_h - o.dhon_h, 0, null, 
               '('||o.dhon_h||', '||n.dhon_h||')')                     Honor,        
        decode(n.dcom_c - o.dcom_c, 0, null, 
               '('||o.dcom_c||', '||n.dcom_c||')')                     Comm,        
        decode(n.dco_co - o.dco_co, 0, null, 
               '('||o.dco_co||', '||n.dco_co||')')                     Court,        
        decode(n.dris_r - o.dris_r, 0, null, 
               '('||o.dris_r||', '||n.dris_r||')')                     Rist,        
        decode(n.dje_jp - o.dje_jp, 0, null, 
               '('||o.dje_jp||', '||n.dje_jp||')')                     Jeton,        
        decode(n.dda_da - o.dda_da, 0, null, 
               '('||o.dda_da||', '||n.dda_da||')')                     Daut,        
        decode(n.ddi_i  - o.ddi_i, 0, null, 
               '('||o.ddi_i||', '||n.ddi_i||')')                       Dinv,        
        decode(n.dau_ar - o.dau_ar, 0, null, 
               '('||o.dau_ar||', '||n.dau_ar||')')                     Autre,        
        decode(n.inde - o.inde, 0, null, 
               '('||o.inde||', '||n.inde||')')                         Inde,        
        decode(n.avan - o.avan, 0, null, 
               '('||o.avan||', '||n.avan||')')                         Avan,        
        decode(n.rete   - o.rete, 0, null, 
               '('||o.rete||', '||n.rete||')')                         Rete,        
        decode(n.tva_nette - o.tva_nette, 0, null, 
               '('||o.tva_nette||', '||n.tva_nette||')')               Tva,        
        decode(n.age_11 - o.age_11, 0, null, 
               '('||o.age_11||', '||n.age_11||')')                     Agessa,        
        decode(nvl(rtrim(n.nat_avan_nour), 'NO_VALUE'),                
               nvl(rtrim(o.nat_avan_nour), 'NO_VALUE'),                
               null, 
               '('||decode(o.nat_avan_nour,'X',null,o.nat_avan_nour)||', '||decode(n.nat_avan_nour,'X',null,n.nat_avan_nour)||')') AvaNou,
        decode(nvl(rtrim(n.nat_avan_loge), 'NO_VALUE'), 
               nvl(rtrim(o.nat_avan_loge), 'NO_VALUE'), 
               null,                             
               '('||decode(o.nat_avan_loge,'X',null,o.nat_avan_loge)||', '||decode(n.nat_avan_loge,'X',null,n.nat_avan_loge)||')') AvaLog,    
        decode(nvl(rtrim(n.nat_avan_voit), 'NO_VALUE'),                
               nvl(rtrim(o.nat_avan_voit), 'NO_VALUE'),                
               null, 
               '('||decode(o.nat_avan_voit,'X',null,o.nat_avan_voit)||', '||decode(n.nat_avan_voit,'X',null,n.nat_avan_voit)||')') AvaVoi,
        decode(nvl(rtrim(n.nat_avan_autr), 'NO_VALUE'),                
               nvl(rtrim(o.nat_avan_autr), 'NO_VALUE'),                
               null,
               '('||decode(o.nat_avan_autr,'X',null,o.nat_avan_autr)||', '||decode(n.nat_avan_autr,'X',null,n.nat_avan_autr)||')') AvaAut,               
        decode(nvl(rtrim(n.nat_rete_allo), 'NO_VALUE'),                
               nvl(rtrim(o.nat_rete_allo), 'NO_VALUE'),                
               null,
               '('||decode(o.nat_rete_allo,'X',null,o.nat_rete_allo)||', '||decode(n.nat_rete_allo,'X',null,n.nat_rete_allo)||')') NatAll,               
        decode(nvl(rtrim(n.nat_rete_remb), 'NO_VALUE'),                
               nvl(rtrim(o.nat_rete_remb), 'NO_VALUE'),                
               null,
               '('||decode(o.nat_rete_remb,'X',null,o.nat_rete_remb)||', '||decode(n.nat_rete_remb,'X',null,n.nat_rete_remb)||')') NatRem,                 
        decode(nvl(rtrim(n.nat_tva_redui), 'NO_VALUE'),                
               nvl(rtrim(o.nat_tva_redui), 'NO_VALUE'),                
               null, 
               '('||decode(o.nat_tva_redui,'X',null,o.nat_tva_redui)||', '||decode(n.nat_tva_redui,'X',null,n.nat_tva_redui)||')') NatRed,                
        decode(nvl(rtrim(n.nat_tva_dispe), 'NO_VALUE'),                
               nvl(rtrim(o.nat_tva_dispe), 'NO_VALUE'),                
               null, 
               '('||decode(o.nat_tva_dispe,'X',null,o.nat_tva_dispe)||', '||decode(n.nat_tva_dispe,'X',null,n.nat_tva_dispe)||')') NatDis              
from    je_fr_das2_le_etb_summ_t        o,        
        je_fr_das2_ven_summary_t        n,
        je_fr_das2_etb_headers_t        e
where   o.type_enreg='210'
and     nvl(rtrim(n.raison_sociale), ' ') = nvl(rtrim(o.raison_sociale), ' ')
and     nvl(n.nom, ' ') = nvl(o.nom, ' ')
and     nvl(n.prenom, ' ') = nvl(o.prenom, ' ')
and     n.siren_etab = o.siren_etab
and     n.nic_etab = o.nic_etab
and     n.vendor_site_id = o.vendor_site_id
and     n.establishment_id = e.establishment_id
and     n.establishment_id = o.establishment_id
and    (n.dhon_h - o.dhon_h <> 0 
 or     n.dcom_c - o.dcom_c <> 0 
 or     n.dco_co - o.dco_co <> 0 
 or     n.dris_r - o.dris_r <> 0 
 or     n.dje_jp - o.dje_jp <> 0 
 or     n.dda_da - o.dda_da <> 0 
 or     n.ddi_i  - o.ddi_i  <> 0 
 or     n.dau_ar - o.dau_ar <> 0 
 or     n.inde - o.inde <> 0 
 or     n.avan - o.avan <> 0 
 or     n.rete - o.rete <> 0 
 or     n.tva_nette - o.tva_nette <> 0 
 or     n.age_11 - o.age_11 <> 0 
 or     n.nat_avan_nour <> o.nat_avan_nour 
 or     n.nat_avan_loge <> o.nat_avan_loge
 or     n.nat_avan_voit <> o.nat_avan_voit 
 or     n.nat_avan_autr <> o.nat_avan_autr 
 or     n.nat_rete_allo <> o.nat_rete_allo 
 or     n.nat_rete_remb <> o.nat_rete_remb 
 or     n.nat_tva_redui <> o.nat_tva_redui
 or     n.nat_tva_dispe <> o.nat_tva_dispe)
and     n.legal_entity_id= nvl(:P_LEGAL_ENTITY_ID, n.legal_entity_id)
and     n.establishment_id= nvl(:P_ESTABLISHMENT_ID, n.establishment_id)
order   by n.segment1, n.raison_sociale
--Q_LRU
select  name lru_name
	  from    xle_etb_profiles 
	  where   establishment_id = :P_ESTABLISHMENT_ID
--Q_LE
select  name le_name
        from    xle_entity_profiles
        where   legal_entity_id = :P_LEGAL_ENTITY_ID
==========================================================================================

--------------------------------------------------------General Ledger Data Model-------------------------------------------------------------------------------
--Q_DETAIL
SELECT  
        nvl(src.user_je_source_name, '**************')  SOURCE,
        nvl(cat.user_je_category_name, '**************')  CATEGORY,
        jeh.name JRNL_NAME,
        jel.code_combination_id CCID1,
        jel.period_name PERIOD_NAME1, 
        jeb.name BATCH_NAME,
        jeb.DESCRIPTION  BATCH_DESC,
        jeb.created_by               BATCH_CREATED_BY,
        jeb.creation_date            BATCH_CREATION_DATE,
        jeb.last_updated_by          BATCH_LAST_UPDATED_BY,
        jeb.last_update_date         BATCH_LAST_UPDATE_DATE,
        jeb.last_update_login        BATCH_LAST_UPDATE_LOGIN,
        to_char(jel.effective_date, 'YYYY-MM-DD"T"HH24:MI:SS') EFFECTIVE_DATE,
        jel.description DESCRIPTION,
        seq.name SEQUENCE_NAME,
        jeh.doc_sequence_value DOCUMENT_NUMBER,
        fsv1.version_name        ACCOUNTING_SEQ_VERSION,
        jeh.posting_acct_seq_value ACCOUNTING_SEQ_NUMBER,
        fsv1.header_name         ACCOUNTING_SEQ_NAME,
        fsv2.version_name      REPORTING_SEQ_VERSION,
        jeh.close_acct_seq_value REPORTING_SEQ_NUMBER,
        fsv2.header_name       REPORTING_SEQ_NAME,
        jel.ledger_id LEDGER_ID1,
        jel.REFERENCE_1 REFERENCE_1,
        jel.REFERENCE_2 REFERENCE_2,
        jel.REFERENCE_3 REFERENCE_3,
        jel.REFERENCE_4 REFERENCE_4,
        jel.REFERENCE_5 REFERENCE_5,
        jel.currency_conversion_rate CONV_RATE,
        jel.currency_conversion_type CONV_TYPE,
        to_char(jel.currency_conversion_date, 'YYYY-MM-DD"T"HH24:MI:SS') CONV_DATE,
        jel.tax_type_code TAX_TYPE,
        jel.tax_code  TAX_CODE,
        jel.amount_includes_tax_flag TAX_FLAG,
        jel.tax_document_identifier TAX_DOC_ID,
        to_char(jel.tax_document_date, 'YYYY-MM-DD"T"HH24:MI:SS') TAX_DOC_DATE,
        jel.tax_customer_name TAX_CT_NAME,
        jel.tax_customer_reference TAX_CT_REF,
        jel.tax_registration_number TAX_REG_NUM,
        recon.JGZZ_RECON_REF   RECON_REF,
        lk.meaning RECON_STATUS,
        recon.JGZZ_RECON_ID	RECON_ID,
        to_char(recon.JGZZ_RECON_DATE, 'YYYY-MM-DD"T"HH24:MI:SS') RECON_DATE,
        jel.je_line_num  JEL_LINE_NUM,
        jeh.posted_date	   JRNL_POSTED_DATE,
        jeh.external_reference JRNL_EXT_REF,
        nvl(&SELECT_DR,0) ACCOUNTED_DR,
        nvl(&SELECT_CR,0) ACCOUNTED_CR,
        nvl(jel.entered_dr,0) ENTERED_DR,
        nvl(jel.entered_cr,0) ENTERED_CR,
        jel.accounted_dr ACCOUNTED_DR1,
        jel.accounted_cr ACCOUNTED_CR1,
        jeh.JE_HEADER_ID JRNL_HEADER_ID,
        jeh.CURRENCY_CODE JRNL_CURRENCY_CODE,        
        jel.SUBLEDGER_DOC_SEQUENCE_ID SUB_DOC_SEQ_ID,
        &ACCT_FIELD ACCT_VALUE_IN,
        DECODE(&ACCT_FIELD,NULL,&ACCT_FIELD,SUBSTR(&ACCT_FIELD,1,3)) ACCT_LEVEL_VALUE_IN,
        recon.jgzz_recon_status JGZZ_RECON_STATUS,
		TO_CHAR(jeh.DEFAULT_EFFECTIVE_DATE, 'YYYY-MM-DD') || 'T' || TO_CHAR(jeh.DEFAULT_EFFECTIVE_DATE, 'HH24:MI:SS') JRNL_EFFECTIVE_DATE
/*,
        &P_FLEXFIELD FLEXFIELD, 
        &P_FLEX_SECURE FLEX_SECURE,
        &FLEXDESC FLEXDESC*/
 FROM  gl_je_lines jel,
       gl_je_headers jeh,
       gl_je_batches jeb,
       gl_je_categories cat,
       gl_je_sources src,
       gl_je_lines_recon recon,
       gl_lookups lk,
       gl_code_combinations cc,
       fnd_document_sequences seq,
       fun_seq_versions                fsv1,
       fun_seq_versions                fsv2
 --      gl_je_headers                   h
WHERE jel.status = 'P'
AND   jeh.je_header_id = jel.je_header_id
AND   jeb.je_batch_id = jeh.je_batch_id
AND   src.je_source_name = jeh.je_source
AND   cat.je_category_name = jeh.je_category 
AND   jeh.actual_flag = :P_ACTUAL_FLAG
AND   jeb.average_journal_flag = 'N'
AND   jel.ledger_id=:LEDGER_ID
AND   cc.CHART_OF_ACCOUNTS_ID = :P_STRUCT_NUM -- cc.CHART_OF_ACCOUNTS_ID 
AND   jeb.CHART_OF_ACCOUNTS_ID = :P_STRUCT_NUM            -- rrajarap
AND   cc.CODE_COMBINATION_ID = jel.CODE_COMBINATION_ID  -- rrajarap
AND   jel.period_name= :PERIOD_NAME
AND   recon.je_header_id (+) = jeh.je_header_id
AND   recon.je_line_num (+) = jel.je_line_num
AND   lk.lookup_type (+) = 'ORA_GL_LINE_RECON_STATUS'
AND   lk.lookup_code (+) = recon.JGZZ_RECON_STATUS
AND   seq.doc_sequence_id(+) = jeh.doc_sequence_id 
     &P_AMT_NOT_NULL
AND   jel.code_combination_id= :CCID                 -- rrajarap
AND   &WHERE_CURRENCY_CODE
AND &LEX_FILTER_WHERE
--  &X_WHERE_EXPRESSION  -- rrajarap
AND     fsv1.seq_version_id(+) = jeh.posting_acct_seq_version_id   -- h to jeh
AND     fsv2.seq_version_id(+) = jeh.close_acct_seq_version_id     -- h to jeh
AND   &WHERE_ACTUAL_TYPE
--AND &ACCT_WHERE
-- Bug 11785547. Uncommented the following as part DAS security
 &WHERE_DAS_JE  
 &P_PERIOD_DATE_LINE
ORDER BY jeh.name, jel.je_line_num

--Q_MASTER
SELECT QRY.LEDGER_NAME,
       QRY.LEDGER_ID,
       QRY.BEGIN_DR,
       QRY.BEGIN_CR,
       QRY.BEGIN_BAL,
       QRY.PERIOD_DR,
       QRY.PERIOD_CR,
       QRY.END_DR,
       QRY.END_CR,
       QRY.END_BAL,
       QRY.BEGIN_ACC_DR,
       QRY.BEGIN_ACC_CR,
       QRY.BEGIN_ACC_BAL,
       QRY.PERIOD_ACC_DR,
       QRY.PERIOD_ACC_CR,
       QRY.END_ACC_DR,
       QRY.END_ACC_CR,
       QRY.END_ACC_BAL,
       QRY.BEGIN_BALANCE_DR_CR_SIGN,
       QRY.END_BALANCE_DR_CR_SIGN,
       QRY.PERIOD_NAME,
       QRY.CCID,
       QRY.PERIOD_NUM,
       QRY.PERIOD_YEAR,
       QRY.TEMPLATE_ID,
       QRY.ENCUMBRANCE_TYPE,
       QRY.BAL_FIELD,
       QRY.BAL_DESC,
       QRY.ACCT_FIELD,
       QRY.ACCT_DESC,
       QRY.FLEXFIELD,
       QRY.FLEXDESC,
       QRY.EFFECTIVE_PERIOD_NUM,
       QRY.COST_CENTER_VALUE,
       QRY.INTERCOMPANY_SEGMENT_VALUE,
       QRY.LEGAL_ENTITY_ID,
       QRY.LEGAL_ENTITY_NAME,
       QRY.LE_ADDRESS_LINE_1,
       QRY.LE_ADDRESS_LINE_2,
       QRY.LE_ADDRESS_LINE_3,
       QRY.LE_CITY,
       QRY.LE_POSTAL_CODE,
       QRY.LE_REGISTRATION_NUMBER,
       QRY.LE_ACTIVITY_CODE
    FROM
(WITH &P_SEG_DESC_WITH
   SELECT  l2.name LEDGER_NAME ,
         l2.ledger_id LEDGER_ID,
-- entered
DECODE(:CURRENCY_TYPE_PARAM, 'E', DECODE(bal.currency_code, :LEDGER_CURRENCY_PARAM, bal.begin_balance_dr_beq, bal.begin_balance_dr),
                            'T', null,
                            'S', bal.begin_balance_dr)
 BEGIN_DR,
DECODE(:CURRENCY_TYPE_PARAM, 'E', DECODE(bal.currency_code, :LEDGER_CURRENCY_PARAM, bal.begin_balance_cr_beq, bal.begin_balance_cr),
                            'T', null,
                            'S', bal.begin_balance_cr)
 BEGIN_CR,
DECODE(:CURRENCY_TYPE_PARAM, 'E', DECODE(bal.currency_code, :LEDGER_CURRENCY_PARAM, abs(bal.begin_balance_dr_beq - bal.begin_balance_cr_beq), abs(bal.begin_balance_dr - bal.begin_balance_cr)),
                            'T', null,
                            'S', abs(bal.begin_balance_dr - bal.begin_balance_cr))
 BEGIN_BAL,
DECODE(:CURRENCY_TYPE_PARAM, 'E', DECODE(bal.currency_code, :LEDGER_CURRENCY_PARAM, bal.period_net_dr_beq, bal.period_net_dr),
                            'T', null,
                            'S', bal.period_net_dr)
 PERIOD_DR,
DECODE(:CURRENCY_TYPE_PARAM, 'E', DECODE(bal.currency_code, :LEDGER_CURRENCY_PARAM, bal.period_net_cr_beq, bal.period_net_cr),
                            'T', null,
                            'S', bal.period_net_cr)
 PERIOD_CR,
DECODE(:CURRENCY_TYPE_PARAM, 'E', DECODE(bal.currency_code, :LEDGER_CURRENCY_PARAM, bal.begin_balance_dr_beq + bal.period_net_dr_beq, bal.begin_balance_dr + bal.period_net_dr),
                            'T', null,
                            'S', bal.begin_balance_dr + bal.period_net_dr)
 END_DR,
DECODE(:CURRENCY_TYPE_PARAM, 'E', DECODE(bal.currency_code, :LEDGER_CURRENCY_PARAM, bal.begin_balance_cr_beq + bal.period_net_cr_beq, bal.begin_balance_cr + bal.period_net_cr),
                            'T', null,
                            'S', bal.begin_balance_cr + bal.period_net_cr)
 END_CR,
DECODE(:CURRENCY_TYPE_PARAM, 'E', DECODE(bal.currency_code, :LEDGER_CURRENCY_PARAM, abs(bal.begin_balance_dr_beq + bal.period_net_dr_beq - bal.begin_balance_cr_beq - bal.period_net_cr_beq),
                                                                                  abs(bal.begin_balance_dr + bal.period_net_dr - bal.begin_balance_cr - bal.period_net_cr)),
                            'T', null,
                            'S', abs(bal.begin_balance_dr + bal.period_net_dr - bal.begin_balance_cr - bal.period_net_cr))
 END_BAL,
-- accounted
DECODE(:CURRENCY_TYPE_PARAM, 'E',bal.begin_balance_dr_beq,
                            'T', bal.begin_balance_dr,
                            'S', bal.begin_balance_dr)
 BEGIN_ACC_DR,
DECODE(:CURRENCY_TYPE_PARAM, 'E',bal.begin_balance_cr_beq,
                            'T', bal.begin_balance_cr,
                            'S', bal.begin_balance_cr)
 BEGIN_ACC_CR,
DECODE(:CURRENCY_TYPE_PARAM, 'E',abs(bal.begin_balance_dr_beq - bal.begin_balance_cr_beq),
                            'T', abs(bal.begin_balance_dr - bal.begin_balance_cr),
                            'S', abs(bal.begin_balance_dr - bal.begin_balance_cr))
 BEGIN_ACC_BAL,
DECODE(:CURRENCY_TYPE_PARAM, 'E',bal.period_net_dr_beq,
                            'T', bal.period_net_dr,
                            'S', bal.period_net_dr)
 PERIOD_ACC_DR,
DECODE(:CURRENCY_TYPE_PARAM, 'E',bal.period_net_cr_beq,
                            'T', bal.period_net_cr,
                            'S', bal.period_net_cr)
 PERIOD_ACC_CR,
DECODE(:CURRENCY_TYPE_PARAM, 'E',bal.begin_balance_dr_beq + bal.period_net_dr_beq,
                            'T', bal.begin_balance_dr + bal.period_net_dr,
                            'S', bal.begin_balance_dr + bal.period_net_dr)
 END_ACC_DR,
DECODE(:CURRENCY_TYPE_PARAM, 'E',bal.begin_balance_cr_beq + bal.period_net_cr_beq,
                            'T', bal.begin_balance_cr + bal.period_net_cr,
                            'S', bal.begin_balance_cr + bal.period_net_cr)
 END_ACC_CR,
DECODE(:CURRENCY_TYPE_PARAM, 'E',abs(bal.begin_balance_dr_beq + bal.period_net_dr_beq - bal.begin_balance_cr_beq - bal.period_net_cr_beq),
                            'T', abs(bal.begin_balance_dr + bal.period_net_dr - bal.begin_balance_cr - bal.period_net_cr),
                            'S', abs(bal.begin_balance_dr + bal.period_net_dr - bal.begin_balance_cr - bal.period_net_cr))
 END_ACC_BAL,
DECODE(substr(DECODE(:CURRENCY_TYPE_PARAM, 'E', DECODE(bal.currency_code, :LEDGER_CURRENCY_PARAM, bal.begin_balance_dr_beq - bal.begin_balance_cr_beq, bal.begin_balance_dr - bal.begin_balance_cr),
                            'T', bal.begin_balance_dr - bal.begin_balance_cr,
                            'S', bal.begin_balance_dr - bal.begin_balance_cr), 1, 1), '-' , GL_GLGENLED_XMLP_PKG.CR_SIGN, GL_GLGENLED_XMLP_PKG.DR_SIGN) BEGIN_BALANCE_DR_CR_SIGN,
DECODE(substr(DECODE(:CURRENCY_TYPE_PARAM, 'E', DECODE(bal.currency_code, :LEDGER_CURRENCY_PARAM, bal.begin_balance_dr_beq + bal.period_net_dr_beq - bal.begin_balance_cr_beq - bal.period_net_cr_beq,
                                                                                  bal.begin_balance_dr + bal.period_net_dr - bal.begin_balance_cr - bal.period_net_cr),
                            'T', bal.begin_balance_dr + bal.period_net_dr - bal.begin_balance_cr - bal.period_net_cr,
                            'S', bal.begin_balance_dr + bal.period_net_dr - bal.begin_balance_cr - bal.period_net_cr), 1, 1), '-' , GL_GLGENLED_XMLP_PKG.CR_SIGN, GL_GLGENLED_XMLP_PKG.DR_SIGN) END_BALANCE_DR_CR_SIGN,
                bal.period_name PERIOD_NAME,
                cc.code_combination_id CCID,
                bal.period_num  PERIOD_NUM,
                bal.period_year  PERIOD_YEAR,
                cc.template_id  TEMPLATE_ID,
                decode(:P_ACTUAL_FLAG, 'A', null, 'E', nvl(:ENCUMBRANCE_TYPE_PARAM,
                       gl_glgenled_xmlp_pkg.enc_type(bal.encumbrance_type_id))) ENCUMBRANCE_TYPE,
                &P_BALANCING_SEGMENT_VALUE BAL_FIELD,
--                &BALANCING_SEGMENT_VALUE BAL_FIELD_W_DEP,
                &FLEX_GL_BALANCING_DESC BAL_DESC,
                &ACCT_FIELD ACCT_FIELD,
--                &ACCT_FIELD ACCT_FIELD_W_DEP,
                &FLEX_GL_ACCOUNT_DESC ACCT_DESC,
                &P_FLEXFIELD FLEXFIELD,
                &P_FLEXDESC FLEXDESC,
                PS.EFFECTIVE_PERIOD_NUM,
                &SELECT_CC_SEG COST_CENTER_VALUE,
                &SELECT_IC_SEG INTERCOMPANY_SEGMENT_VALUE
                &SELECT_RPT
   FROM  GL_LEDGERS L,
            GL_LEDGER_SET_ASSIGNMENTS LS,
            GL_LEDGERS L2,
            GL_CODE_COMBINATIONS CC,
            GL_PERIOD_STATUSES PS,
            GL_BALANCES BAL			
            &SEG_DESC_FROM
            &P_ACCT_DESC_FROM
            &P_FROM_LNSV
WHERE l.ledger_id = :LEDGER_ID_PARAM
AND   ls.ledger_set_id(+) =l.ledger_id
AND   bal.ledger_id = l2.ledger_id
AND   l2.ledger_id = nvl(ls.ledger_id, l.ledger_id)
--AND   l2.currency_code = nvl(:ENTERED_CURRENCY_PARAM,:LEDGER_CURRENCY_PARAM) -- rrajarap bug 9524131
AND   l2.currency_code = :LEDGER_CURRENCY_PARAM
AND   cc.chart_of_accounts_id = :P_STRUCT_NUM --cc.chart_of_accounts_id
AND   ps.ledger_id = l2.ledger_id
AND   bal.code_combination_id = cc.code_combination_id
AND   bal.period_name = ps.period_name
AND   bal.actual_flag = :P_ACTUAL_FLAG
/*AND   bal.currency_code = decode(:CURRENCY_TYPE_PARAM, 'S','STAT',nvl(:ENTERED_CURRENCY_PARAM, :LEDGER_CURRENCY_PARAM))*/
AND  &WHERE_CURRENCY_BAL
AND  &WHERE_TRANSLATED_FLAG
&P_FLEX_SECURE

AND   ps.application_id = 101
/*AND   nvl(bal.translated_flag, 'X')= decode (:CURRENCY_TYPE_PARAM , 'E' , decode(:ENTERED_CURRENCY_PARAM,:LEDGER_CURRENCY_PARAM, 'X', 'R'), 'X')*//*rrajarap bug 11729713 */
AND   ps.effective_period_num
              BETWEEN :START_EFF_PERIOD_NUM
              AND :END_EFF_PERIOD_NUM
&P_GL_RPT_WHERE
&SEG_DESC_WHERE
&P_ACCT_DESC_WHERE
AND   &WHERE_ACTUAL_TYPE
-- &X_WHERE_EXPRESSION
 AND &LEX_FILTER_WHERE
 &P_PERIOD_DATE_WHERE
-- bug 11785547. Uncommented the following
 &WHERE_DAS
 &P_LE_WHERE
--/*ORDER BY LEDGER_NAME, &ORDERBY_BAL, &ORDERBY_BAL2,
--&ORDERBY_ACCT, &ORDERBY_ACCT2, &ORDERBY_ALL */
ORDER BY &P_ORDER_BY) QRY
=============================================================================================

-------------------------------------------------- General Ledger Journal and Subledger Transaction Mapping Report Data Model-------------------------------------------------
select period,
       account,
       account_desc,
       currency_code,
       currency_conversion_rate,
       entered_cr,
       entered_dr,
       accounted_dr,
       accounted_cr,
       entered_amount,
       accounted_amount,
       je_source,
       je_category,
       journal_batch_name,
       journal_name,
       journal_desc,
       document_number,
       gl_date,
       je_line_num,
       voucher_number,
       je_line_desc,
       event_class,
       event_type,
       transaction_date,
       customer_supplier_name,
       receipt_payment_number,
       trx_invoice_number,
       sla_header_desc,
       receipt_number,
       po_number,
       inter_batch_number
  from JA_CN_TRANS_MAPPING
WHERE request_id = :P_PARENT_REQUEST_ID
============================================================================================
----------------------------------------------------------------------General Ledger Journal Entry Report Data Model for Germany--------------------------------------------
SELECT  
    LGR.NAME LEDGER_NAME,
    LGR.LEDGER_ID LEDGER_ID,
    glc.acctg_environment_code ENVIRONMENT_CODE,
    lgr.configuration_id CONFIGURATION_ID,
	cc.DESCRIPTION ACCT_DESC,
	&ACCT  ACCT,
	&ACCT_DESC ACCT_DESC,	
    &SELECT_ACCOUNT ACCOUNT,
    &SELECT_ACCT_SEG ACCT_VALUE,
    &SELECT_BAL_SEG BALANCING_SEGMENT_VALUE,
    &SELECT_CC_SEG COST_CENTER_VALUE,
    &SELECT_IC_SEG INTERCOMPANY_SEG_VAL,
    &SELECT_MGT_SEG MANAGEMENT_SEGMENT_VALUE,
    &SELECT_ST_SEG SECONDARY_TRACK_SEG_VAL,
    GLBATCH.NAME BATCH_NAME,
    GLBATCH.DESCRIPTION BATCH_DESC,
    GLBATCH.ACTUAL_FLAG ACTUAL_FLAG,
    DECODE(GLBATCH.POSTED_DATE, NULL, NULL, TO_CHAR(GLBATCH.POSTED_DATE,  'YYYY-MM-DD') || 'T' ||  
    TO_CHAR(GLBATCH.POSTED_DATE,'HH24:MI:SS')) BATCH_POSTED_DATE,
    JG_REP_DE_GL_JRN_PKG.POSTING_STATUS_PARAM_p BATCH_STATUS,
    LOOK.MEANING BATCH_POSTED_STATUS,
    GLH.NAME JRNL_NAME,
    GLH.DESCRIPTION JRNL_DESC,
    GLH.PERIOD_NAME PERIOD_NAME,
    GLH.CURRENCY_CODE JRNL_CURRENCY_CODE,
    TO_CHAR(GLH.DEFAULT_EFFECTIVE_DATE, 'YYYY-MM-DD') || 'T' ||  
    TO_CHAR(GLH.DEFAULT_EFFECTIVE_DATE, 'HH24:MI:SS') JRNL_EFFECTIVE_DATE,
    NVL(SRC.USER_JE_SOURCE_NAME, '**********') JRNL_SOURCE,
    NVL(CAT.USER_JE_CATEGORY_NAME, '**********') JRNL_CATEGORY,
    FSV.HEADER_NAME JRNL_ACCT_SEQ_NAME,
    FSV.VERSION_NAME JRNL_ACCT_SEQ_VERSION,
    GLH.POSTING_ACCT_SEQ_VALUE JRNL_ACCT_SEQ_NUM,
    DOCSEQ.NAME JRNL_DOC_SEQ_NAME,
    GLH.DOC_SEQUENCE_VALUE JRNL_DOC_SEQ_NUM,
    GLL.JE_LINE_NUM JRNL_LINE_NUM,
    GLL.ENTERED_DR		ENTERED_DR,
    GLL.ENTERED_CR		ENTERED_CR,
    GLL.ACCOUNTED_DR	ACCOUNTED_DR,
    GLL.ACCOUNTED_CR	ACCOUNTED_CR,
    GLL.DESCRIPTION JRNL_LINE_DESC,
    GLL.SUBLEDGER_DOC_SEQUENCE_ID  REFERENCE1,
    GLH.CLOSE_ACCT_SEQ_VALUE     JRNL_REP_SEQ_NUM,
    FSV2.VERSION_NAME              JRNL_REP_SEQ_VERSION,
    FSV2.HEADER_NAME               JRNL_REP_SEQ_NAME
FROM   &P_FROM_CLAUSE 
WHERE CAT.JE_CATEGORY_NAME = GLH.JE_CATEGORY
AND SRC.JE_SOURCE_NAME = GLH.JE_SOURCE
AND GLH.DOC_SEQUENCE_ID = DOCSEQ.DOC_SEQUENCE_ID (+)
AND GLH.POSTING_ACCT_SEQ_VERSION_ID = FSV.SEQ_VERSION_ID (+)
AND GLH.CLOSE_ACCT_SEQ_VERSION_ID = FSV2.SEQ_VERSION_ID(+) -- added for bug 1830686
AND GLBATCH.AVERAGE_JOURNAL_FLAG = 'N' 
AND GLBATCH.JE_BATCH_ID = GLH.JE_BATCH_ID
&P_POSTING_STATUS
&P_HEADER_POSTING_STATUS
&CURR_WHERE_JRNL
&P_DATE_WHERE
&P_LEDGER_WHERE
AND GLH.LEDGER_ID = LGR.LEDGER_ID
AND lgr.configuration_id = glc.configuration_id
&P_BALANCE_TYPE_WHERE
AND GLL.PERIOD_NAME = GLP.PERIOD_NAME
AND GLP.APPLICATION_ID = 101
AND GLP.LEDGER_ID = LGR.LEDGER_ID 
AND GLBATCH.STATUS= LOOK.LOOKUP_CODE
AND LOOK.LOOKUP_TYPE = 'MJE_BATCH_STATUS'
&PERIOD_WHERE
&DAS_WHERE
&SEG_SECURITY_WHERE
&ACCT_WHERE
AND CC.CHART_OF_ACCOUNTS_ID = :P_COA_ID
&P_SOURCE_WHERE
&P_CATEGORY_WHERE
&P_BATCH_WHERE
&P_DOC_SEQ_WHERE
&P_ACCT_SEQ_WHERE
&P_REP_SEQ_WHERE
AND &LEX_FILTER_WHERE
AND     &FLEXDATA_SECURE = 'N'
order by JRNL_EFFECTIVE_DATE
=========================================================================================
--------------------------------------------------------------------General Ledger Journal Entry Report Data Model------------------------------------------------
SELECT  
    --&P_PERIOD_INX_HINT
    LGR.NAME LEDGER_NAME,
    LGR.LEDGER_ID LEDGER_ID,
    LGR.CURRENCY_CODE LGR_CURRENCY_CODE,
    glc.acctg_environment_code ENVIRONMENT_CODE,
    lgr.configuration_id CONFIGURATION_ID,
	&ACCT  ACCT,
	&ACCT_DESC ACCT_DESC,
    &SELECT_ACCOUNT ACCOUNT,
    &SELECT_ACCT_SEG ACCT_VALUE,
    &SELECT_BAL_SEG BALANCING_SEGMENT_VALUE,
    &SELECT_CC_SEG COST_CENTER_VALUE,
    &SELECT_IC_SEG INTERCOMPANY_SEG_VAL,
    &SELECT_MGT_SEG MANAGEMENT_SEGMENT_VALUE,
    &SELECT_ST_SEG SECONDARY_TRACK_SEG_VAL,
    GLBATCH.NAME BATCH_NAME,
    GLBATCH.DESCRIPTION BATCH_DESC,
    GLBATCH.ACTUAL_FLAG ACTUAL_FLAG,
    DECODE(GLBATCH.POSTED_DATE, NULL, NULL, TO_CHAR(GLBATCH.POSTED_DATE,  'YYYY-MM-DD') || 'T' ||  
    TO_CHAR(GLBATCH.POSTED_DATE,'HH24:MI:SS')) BATCH_POSTED_DATE,
    JGZZGLJRN.POSTING_STATUS_PARAM_p BATCH_STATUS,
    LOOK.MEANING BATCH_POSTED_STATUS,
    GLH.NAME JRNL_NAME,
    GLH.DESCRIPTION JRNL_DESC,
    GLH.PERIOD_NAME PERIOD_NAME,
    GLH.CURRENCY_CODE JRNL_CURRENCY_CODE,
    TO_CHAR(GLH.DEFAULT_EFFECTIVE_DATE, 'YYYY-MM-DD') || 'T' ||  
    TO_CHAR(GLH.DEFAULT_EFFECTIVE_DATE, 'HH24:MI:SS') JRNL_EFFECTIVE_DATE,
    NVL(SRC.USER_JE_SOURCE_NAME, '**********') JRNL_SOURCE,
    NVL(CAT.USER_JE_CATEGORY_NAME, '**********') JRNL_CATEGORY,
    FSV.HEADER_NAME JRNL_ACCT_SEQ_NAME,
    FSV.VERSION_NAME JRNL_ACCT_SEQ_VERSION,
    GLH.POSTING_ACCT_SEQ_VALUE JRNL_ACCT_SEQ_NUM,
    DOCSEQ.NAME JRNL_DOC_SEQ_NAME,
    GLH.DOC_SEQUENCE_VALUE JRNL_DOC_SEQ_NUM,
    GLL.JE_LINE_NUM JRNL_LINE_NUM,
    GLL.ENTERED_DR		ENTERED_DR,
    GLL.ENTERED_CR		ENTERED_CR,
    GLL.ACCOUNTED_DR	ACCOUNTED_DR,
    GLL.ACCOUNTED_CR	ACCOUNTED_CR,
    GLL.DESCRIPTION JRNL_LINE_DESC,
    GLL.SUBLEDGER_DOC_SEQUENCE_ID  REFERENCE1,
    GLL.CURRENCY_CODE              JRNL_LINE_CURRENCY_CODE,
    GLH.CLOSE_ACCT_SEQ_VALUE     JRNL_REP_SEQ_NUM,
    FSV2.VERSION_NAME              JRNL_REP_SEQ_VERSION,                                                                                
    FSV2.HEADER_NAME               JRNL_REP_SEQ_NAME,
    &SELECT_LE LEGAL_ENTITY_ID, 
    decode(:g_acctg_code,'EXCLUSIVE', JGZZGLJRN.legal_entity_nameformula(:g_legal_entity_id, :LEGAL_ENTITY_NAME),
    'SHARED', JGZZGLJRN.legal_entity_nameformula(&SELECT_LE, :LEGAL_ENTITY_NAME), '') LEGAL_ENTITY_NAME,
    decode(:g_acctg_code,'EXCLUSIVE', JGZZGLJRN.le_address_line_1formula(:g_legal_entity_id, :LE_ADDRESS_LINE_1), 
    'SHARED', JGZZGLJRN.le_address_line_1formula(&SELECT_LE, :LE_ADDRESS_LINE_1), '') LE_ADDRESS_LINE_1, 
    decode(:g_acctg_code,'EXCLUSIVE', JGZZGLJRN.le_address_line_2formula(:g_legal_entity_id, :LE_ADDRESS_LINE_2), 
    'SHARED',     JGZZGLJRN.le_address_line_2formula(&SELECT_LE, :LE_ADDRESS_LINE_2), '') LE_ADDRESS_LINE_2, 
    decode(:g_acctg_code,'EXCLUSIVE', JGZZGLJRN.le_address_line_3formula(:g_legal_entity_id, :LE_ADDRESS_LINE_3), 
    'SHARED', JGZZGLJRN.le_address_line_3formula(&SELECT_LE, :LE_ADDRESS_LINE_3), '') LE_ADDRESS_LINE_3, 
    decode(:g_acctg_code,'EXCLUSIVE', JGZZGLJRN.le_cityformula(:g_legal_entity_id, :LE_CITY), 
    'SHARED', JGZZGLJRN.le_cityformula(&SELECT_LE, :LE_CITY), '') LE_CITY, 
    decode(:g_acctg_code,'EXCLUSIVE', JGZZGLJRN.le_postal_codeformula(:g_legal_entity_id, :LE_POSTAL_CODE), 
    'SHARED', JGZZGLJRN.le_postal_codeformula(&SELECT_LE, :LE_POSTAL_CODE), '') LE_POSTAL_CODE, 
    decode(:g_acctg_code,'EXCLUSIVE', JGZZGLJRN.le_registration_numberformula(:g_legal_entity_id, :LE_REGISTRATION_NUMBER), 
    'SHARED', JGZZGLJRN.le_registration_numberformula(&SELECT_LE, :LE_REGISTRATION_NUMBER), '') LE_REGISTRATION_NUMBER,
    decode(:g_acctg_code,'EXCLUSIVE', JGZZGLJRN.le_activity_codeformula(:g_legal_entity_id, :LE_ACTIVITY_CODE), 
    'SHARED', JGZZGLJRN.le_activity_codeformula(&SELECT_LE, :LE_ACTIVITY_CODE), '') LE_ACTIVITY_CODE
FROM   
&FROM_LNSV
&P_FROM_CLAUSE
WHERE CAT.JE_CATEGORY_NAME = GLH.JE_CATEGORY
AND SRC.JE_SOURCE_NAME = GLH.JE_SOURCE
AND GLH.DOC_SEQUENCE_ID = DOCSEQ.DOC_SEQUENCE_ID (+)
AND GLH.POSTING_ACCT_SEQ_VERSION_ID = FSV.SEQ_VERSION_ID (+)
AND GLH.CLOSE_ACCT_SEQ_VERSION_ID = FSV2.SEQ_VERSION_ID(+) -- added for bug 1830686
AND GLBATCH.AVERAGE_JOURNAL_FLAG = 'N' 
AND GLBATCH.JE_BATCH_ID = GLH.JE_BATCH_ID
&P_POSTING_STATUS
&P_HEADER_POSTING_STATUS
&CURR_WHERE_JRNL
&P_DATE_WHERE
&P_LEDGER_WHERE
AND GLH.LEDGER_ID = LGR.LEDGER_ID
AND lgr.configuration_id = glc.configuration_id
&P_BALANCE_TYPE_WHERE
AND GLL.PERIOD_NAME = GLP.PERIOD_NAME
AND GLP.APPLICATION_ID = 101
AND GLP.LEDGER_ID = LGR.LEDGER_ID 
AND GLBATCH.STATUS= LOOK.LOOKUP_CODE
AND LOOK.LOOKUP_TYPE = 'MJE_BATCH_STATUS'
&PERIOD_WHERE
&DAS_WHERE
&SEG_SECURITY_WHERE
&ACCT_WHERE
AND CC.CHART_OF_ACCOUNTS_ID = :P_COA_ID
AND &LEX_FILTER_WHERE
&P_SOURCE_WHERE
&P_CATEGORY_WHERE
&P_BATCH_WHERE
&P_DOC_SEQ_WHERE
&P_ACCT_SEQ_WHERE
&P_REP_SEQ_WHERE
&LE_WHERE
AND     &FLEXDATA_SECURE = 'N'
order by JRNL_EFFECTIVE_DATE, BATCH_NAME, JRNL_NAME, JRNL_LINE_NUM
============================================================================================
----------------------------------General Ledger Trial Balance Data Model--------------------------------------
SELECT 
  ACCOUNT,
  ACCOUNT_SEGMENT_VALUE,
  BALANCING_SEGMENT_VALUE,
  COST_CENTER_VALUE,
  INTERCOMPANY_SEG_VAL,
  MANAGEMENT_SEGMENT_VALUE,
  SEC_TRACK_SEGMENT_VALUE,
  ACCOUNT_TYPE,
  &SELECT_LE LEGAL_ENTITY_ID,
  decode(:P_ZERO_BYB, 'Y', 0, YEAR_BEGIN_DR) ADJ_BEGIN_YEAR_DR,
  decode(:P_ZERO_BYB, 'Y', 0, YEAR_BEGIN_CR) ADJ_BEGIN_YEAR_CR,
  ADJ_FIRST_PERIOD_DR,
  ADJ_FIRST_PERIOD_CR,
  FROM_PERIOD_BEGIN_DR - nvl(YEAR_BEGIN_DR, 0) PRIOR_PERIOD_DR,
  FROM_PERIOD_BEGIN_CR - nvl(YEAR_BEGIN_CR, 0) PRIOR_PERIOD_CR,
  PERIODS_TOTAL_DR PERIOD_DR,
  PERIODS_TOTAL_CR PERIOD_CR,
  TO_PERIOD_END_DR - decode(:P_ZERO_BYB, 'Y', YEAR_BEGIN_DR, 0) END_BALANCE_DR,
  TO_PERIOD_END_CR - decode(:P_ZERO_BYB, 'Y', YEAR_BEGIN_CR, 0) END_BALANCE_CR,
  decode(SIGN(decode(:P_ZERO_BYB,'Y',0,YEAR_BEGIN_DR - YEAR_BEGIN_CR)),1,YEAR_BEGIN_DR - YEAR_BEGIN_CR,0) NET_BEGIN_DR_BAL,
  decode(SIGN(decode(:P_ZERO_BYB,'Y',0,YEAR_BEGIN_DR - YEAR_BEGIN_CR)),-1,YEAR_BEGIN_CR - YEAR_BEGIN_DR,0) NET_BEGIN_CR_BAL,
 decode(SIGN(decode(:P_ZERO_BYB, 'Y',(TO_PERIOD_END_DR - YEAR_BEGIN_DR) - (TO_PERIOD_END_CR - YEAR_BEGIN_CR),TO_PERIOD_END_DR - TO_PERIOD_END_CR)),
1,decode(:P_ZERO_BYB, 'Y',(TO_PERIOD_END_DR - YEAR_BEGIN_DR) - (TO_PERIOD_END_CR - YEAR_BEGIN_CR),TO_PERIOD_END_DR - TO_PERIOD_END_CR),0) NET_ENDING_DR_BAL,
decode(SIGN(decode(:P_ZERO_BYB, 'Y',(TO_PERIOD_END_DR - YEAR_BEGIN_DR) - (TO_PERIOD_END_CR - YEAR_BEGIN_CR),TO_PERIOD_END_DR - TO_PERIOD_END_CR)),
-1,decode(:P_ZERO_BYB, 'Y',(TO_PERIOD_END_CR - YEAR_BEGIN_CR) - (TO_PERIOD_END_DR - YEAR_BEGIN_DR),TO_PERIOD_END_CR - TO_PERIOD_END_DR),0) NET_ENDING_CR_BAL,
fnd_flex_xml_publisher_apis.process_kff_combination_1('ACCT', 'GL', 'GL#', :COA_ID, NULL,CODE_COMBINATION_ID, 'ALL', 'Y', 'VALUE') ACCT,
fnd_flex_xml_publisher_apis.process_kff_combination_1('ACCT_DESC', 'GL', 'GL#', :COA_ID, NULL, CODE_COMBINATION_ID, 'ALL', 'N', 'DESCRIPTION') ACCT_DESC,
fnd_flex_xml_publisher_apis.process_kff_combination_1('ACCT_VALUE_DESC', 'GL', 'GL#', :COA_ID, NULL, CODE_COMBINATION_ID, 'GL_ACCOUNT', 'N', 'DESCRIPTION')  ACCT_VALUE_DESC,
	JGZZGLTRB.le_nameformula(0, :LE_NAME) LE_NAME, 
	JGZZGLTRB.le_addr1formula(0, :LE_ADDR1) LE_ADDR1, 
	JGZZGLTRB.le_addr2formula(0, :LE_ADDR2) LE_ADDR2, 
	JGZZGLTRB.le_addr3formula(0, :LE_ADDR3) LE_ADDR3, 
	JGZZGLTRB.le_cityformula(0, :LE_CITY) LE_CITY, 
	JGZZGLTRB.le_postal_codeformula(0, :LE_POSTAL_CODE) LE_POSTAL_CODE, 
	JGZZGLTRB.le_service_typeformula(0, :LE_SERVICE_TYPE) LE_SERVICE_TYPE, 
	JGZZGLTRB.le_tax_payer_idformula(0, :LE_TAX_PAYER_ID) LE_TAX_PAYER_ID, 
	JGZZGLTRB.acct_valueformula(ACCOUNT_SEGMENT_VALUE, :ACCT_VALUE_DESC) ACCT_VALUE, 
	JGZZGLTRB.acct_level1_valueformula(ACCOUNT_SEGMENT_VALUE, :ACCT_VALUE_DESC) ACCT_LEVEL1_VALUE, 
	JGZZGLTRB.acct_level1_value_descformula(ACCOUNT_SEGMENT_VALUE, :ACCT_VALUE_DESC) ACCT_LEVEL1_VALUE_DESC, 
	JGZZGLTRB.acct_level2_valueformula(ACCOUNT_SEGMENT_VALUE, :ACCT_VALUE_DESC) ACCT_LEVEL2_VALUE, 
	JGZZGLTRB.acct_level2_value_descformula(ACCOUNT_SEGMENT_VALUE, :ACCT_VALUE_DESC) ACCT_LEVEL2_VALUE_DESC, 
	JGZZGLTRB.acct_level3_valueformula(ACCOUNT_SEGMENT_VALUE, :ACCT_VALUE_DESC) ACCT_LEVEL3_VALUE, 
	JGZZGLTRB.acct_level3_value_descformula(ACCOUNT_SEGMENT_VALUE, :ACCT_VALUE_DESC) ACCT_LEVEL3_VALUE_DESC, 
	JGZZGLTRB.acct_level4_valueformula(ACCOUNT_SEGMENT_VALUE, :ACCT_VALUE_DESC) ACCT_LEVEL4_VALUE, 
	JGZZGLTRB.acct_level4_value_descformula(ACCOUNT_SEGMENT_VALUE, :ACCT_VALUE_DESC) ACCT_LEVEL4_VALUE_DESC, 
	JGZZGLTRB.acct_level5_valueformula(ACCOUNT_SEGMENT_VALUE, :ACCT_VALUE_DESC) ACCT_LEVEL5_VALUE, 
	JGZZGLTRB.acct_level5_value_descformula(ACCOUNT_SEGMENT_VALUE, :ACCT_VALUE_DESC) ACCT_LEVEL5_VALUE_DESC, 
	JGZZGLTRB.acct_level6_valueformula(ACCOUNT_SEGMENT_VALUE, :ACCT_VALUE_DESC) ACCT_LEVEL6_VALUE, 
	JGZZGLTRB.acct_level6_value_descformula(ACCOUNT_SEGMENT_VALUE, :ACCT_VALUE_DESC) ACCT_LEVEL6_VALUE_DESC, 
	JGZZGLTRB.acct_level7_valueformula(ACCOUNT_SEGMENT_VALUE, :ACCT_VALUE_DESC) ACCT_LEVEL7_VALUE, 
	JGZZGLTRB.acct_level7_value_descformula(ACCOUNT_SEGMENT_VALUE, :ACCT_VALUE_DESC) ACCT_LEVEL7_VALUE_DESC, 
	JGZZGLTRB.acct_level8_valueformula(ACCOUNT_SEGMENT_VALUE, :ACCT_VALUE_DESC) ACCT_LEVEL8_VALUE, 
	JGZZGLTRB.acct_level8_value_descformula(ACCOUNT_SEGMENT_VALUE, :ACCT_VALUE_DESC) ACCT_LEVEL8_VALUE_DESC, 
	JGZZGLTRB.acct_level9_valueformula(ACCOUNT_SEGMENT_VALUE, :ACCT_VALUE_DESC) ACCT_LEVEL9_VALUE, 
	JGZZGLTRB.acct_level9_value_descformula(ACCOUNT_SEGMENT_VALUE, :ACCT_VALUE_DESC) ACCT_LEVEL9_VALUE_DESC, 
	JGZZGLTRB.acct_level10_value_descformula(ACCOUNT_SEGMENT_VALUE, :ACCT_VALUE_DESC) ACCT_LEVEL10_VALUE_DESC, 
	JGZZGLTRB.acct_level10_valueformula(ACCOUNT_SEGMENT_VALUE, :ACCT_VALUE_DESC) ACCT_LEVEL10_VALUE
FROM
(SELECT
  &SELECT_ACCOUNT	ACCOUNT,
  &SELECT_ACCT_SEG	ACCOUNT_SEGMENT_VALUE,
  &SELECT_BAL_SEG	BALANCING_SEGMENT_VALUE,
  &SELECT_CC_SEG	COST_CENTER_VALUE,
  &SELECT_IC_SEG	INTERCOMPANY_SEG_VAL,
  &SELECT_MGT_SEG 	MANAGEMENT_SEGMENT_VALUE,
  &SELECT_ST_SEG	SEC_TRACK_SEGMENT_VALUE,
  max(gcc.account_type)	ACCOUNT_TYPE,
  max(null) LEGAL_ENTITY_ID,
  sum(decode(bal.period_name, :FIRST_PERIOD_NAME, decode(:P_CURRENCY_TYPE, 'E', decode(bal.translated_flag,'R', nvl(bal.begin_balance_dr, 0), nvl(bal.begin_balance_dr_beq, 0)), nvl(bal.begin_balance_dr, 0)), 0))  YEAR_BEGIN_DR,
  sum(decode(bal.period_name, :FIRST_PERIOD_NAME, decode(:P_CURRENCY_TYPE, 'E', decode(bal.translated_flag, 'R', nvl(bal.begin_balance_cr, 0), nvl(bal.begin_balance_cr_beq, 0)), nvl(bal.begin_balance_cr, 0)), 0))  YEAR_BEGIN_CR,
  sum(decode(:P_PERIOD_FROM, :FIRST_PERIOD_NAME, 0, decode(:FIRST_PERIOD_ADJ_FLAG, 'Y', decode(bal.period_name, :FIRST_PERIOD_NAME, decode(:P_CURRENCY_TYPE, 'E', decode(bal.translated_flag, 'R', nvl(bal.period_net_dr, 0), nvl(bal.period_net_dr_beq, 0)), nvl(bal.period_net_dr, 0)), 0), 0)))  ADJ_FIRST_PERIOD_DR,
  sum(decode(:P_PERIOD_FROM, :FIRST_PERIOD_NAME, 0, decode(:FIRST_PERIOD_ADJ_FLAG, 'Y', decode(bal.period_name, :FIRST_PERIOD_NAME, decode(:P_CURRENCY_TYPE, 'E', decode(bal.translated_flag,'R', nvl(bal.period_net_cr, 0), nvl(bal.period_net_cr_beq, 0)), nvl(bal.period_net_cr, 0)), 0), 0)))  ADJ_FIRST_PERIOD_CR,
  sum(decode(bal.period_name, :P_PERIOD_FROM, decode(:P_CURRENCY_TYPE, 'E', decode(bal.translated_flag, 'R', nvl(bal.begin_balance_dr, 0), nvl(bal.begin_balance_dr_beq, 0)), nvl(bal.begin_balance_dr, 0)), 0))  FROM_PERIOD_BEGIN_DR,  sum(decode(bal.period_name, :P_PERIOD_FROM, decode(:P_CURRENCY_TYPE, 'E', decode(bal.translated_flag,'R', nvl(bal.begin_balance_cr, 0), nvl(bal.begin_balance_cr_beq, 0)), nvl(bal.begin_balance_cr, 0)), 0))  FROM_PERIOD_BEGIN_CR,
  sum(decode(bal.period_name, :FIRST_PERIOD_NAME, decode(:P_PERIOD_FROM, :FIRST_PERIOD_NAME, decode(:P_CURRENCY_TYPE, 'E', decode(bal.translated_flag,'R', nvl(bal.period_net_dr, 0), nvl(bal.period_net_dr_beq, 0)), nvl(bal.period_net_dr, 0)), 0), decode(:P_CURRENCY_TYPE, 'E', decode(bal.translated_flag,'R', nvl(bal.period_net_dr, 0), nvl(bal.period_net_dr_beq, 0)), nvl(bal.period_net_dr, 0))))	PERIODS_TOTAL_DR,
  sum(decode(bal.period_name, :FIRST_PERIOD_NAME, decode(:P_PERIOD_FROM, :FIRST_PERIOD_NAME, decode(:P_CURRENCY_TYPE, 'E', decode(bal.translated_flag,'R', nvl(bal.period_net_cr, 0), nvl(bal.period_net_cr_beq, 0)), nvl(bal.period_net_cr, 0)), 0), decode(:P_CURRENCY_TYPE, 'E', decode(bal.translated_flag,'R', nvl(bal.period_net_cr, 0), nvl(bal.period_net_cr_beq, 0)), nvl(bal.period_net_cr, 0))))	PERIODS_TOTAL_CR,
  sum(decode(bal.period_name, :P_PERIOD_TO, decode(:P_CURRENCY_TYPE, 'E', decode(bal.translated_flag, 'R', nvl(bal.begin_balance_dr, 0) + nvl(bal.period_net_dr, 0), nvl(bal.begin_balance_dr_beq, 0) + nvl(bal.period_net_dr_beq, 0)), nvl(bal.begin_balance_dr, 0) + nvl(bal.period_net_dr, 0)), 0))  TO_PERIOD_END_DR,
  sum(decode(bal.period_name, :P_PERIOD_TO, decode(:P_CURRENCY_TYPE, 'E', decode(bal.translated_flag,'R', nvl(bal.begin_balance_cr, 0) + nvl(bal.period_net_cr, 0), nvl(bal.begin_balance_cr_beq, 0) + nvl(bal.period_net_cr_beq, 0)), nvl(bal.begin_balance_cr, 0) + nvl(bal.period_net_cr, 0)), 0))  TO_PERIOD_END_CR,
 GCC.CODE_COMBINATION_ID   
  FROM
  GL_CODE_COMBINATIONS	gcc,
  GL_BALANCES		bal
WHERE gcc.chart_of_accounts_id = :COA_ID
and decode(:P_REPORT_TYPE, null, :PER_TO_END_DATE, nvl(gcc.start_date_active, :PER_TO_END_DATE)) <= :PER_TO_END_DATE
and &WHERE_ACCT_RANGE
and &LEX_FILTER_WHERE
&WHERE_ACCT_CLASS
and bal.ledger_id = :P_LEDGER_ID
and bal.code_combination_id = gcc.code_combination_id
and bal.period_name IN ( select per.period_name 
                          from GL_PERIODS per
			 where  per.period_set_name = :PERIOD_SET_NAME
                         &WHERE_PERIOD)
and bal.currency_code = decode(:P_CURRENCY_TYPE, 'T', :P_LEDGER_CURRENCY, :P_ENTERED_CURRENCY)
&WHERE_TRANSLATED_FLAG
and bal.actual_flag = 'A'
and bal.template_id IS NULL
&WHERE_DEGREE
&WHERE_DAS
AND     &FLEXDATA_SECURE = 'N'
GROUP BY &SELECT_ACCOUNT, &SELECT_ACCT_SEG,&SELECT_BAL_SEG,&SELECT_CC_SEG, &SELECT_IC_SEG,&SELECT_MGT_SEG,&SELECT_ST_SEG,gcc.account_type,GCC.CODE_COMBINATION_ID
) &FROM_LNSV
&WHERE_LE
ORDER BY LE_NAME, BALANCING_SEGMENT_VALUE, ACCOUNT_SEGMENT_VALUE,ACCOUNT
===================================================================================================
------------------------------------------------------Account Analysis For Contra Account Report---------------------------------------------------------------------------------
SELECT   &P_HINT_CLAUSE
    	LGR.NAME		LEDGER_NAME,
	LGR.CURRENCY_CODE	LEDGER_CURRENCY,
	LGR.LEDGER_ID		LEDGER_ID,
	GLB.JE_BATCH_ID		BATCH_ID,
    	GLB.NAME		BATCH_NAME,
	GLB.DESCRIPTION		BATCH_DESC,
	GLB.STATUS		BATCH_STATUS_CODE,
     	GLB.POSTED_DATE		BATCH_POSTED_DATE,
     	GLB.DEFAULT_PERIOD_NAME	BATCH_PERIOD_NAME,
     	to_char(GLB.DEFAULT_EFFECTIVE_DATE, 'YYYY-MM-DD"T"HH24:MI:SS') BATCH_EFFECTIVE_DATE,
        GLB.ACTUAL_FLAG			ACTUAL_FLAG,
	GLB.AVERAGE_JOURNAL_FLAG	AVERAGE_JOURNAL_FLAG,
	GLB.APPROVAL_STATUS_CODE	APPROVAL_STATUS_CODE,
	/*GLB.BUDGETARY_CONTROL_STATUS	BUD_CONTROL_STATUS,*//*commented by rchandan for fusion*/
	GLB.RUNNING_TOTAL_DR	BATCH_TOT_DR,
	GLB.RUNNING_TOTAL_CR	BATCH_TOT_CR,
	GLB.RUNNING_TOTAL_ACCOUNTED_DR	BATCH_TOT_ACC_DR,
	GLB.RUNNING_TOTAL_ACCOUNTED_CR	BATCH_TOT_ACC_CR,
	GLB.DATE_CREATED	BATCH_DATE_CREATED,
        GLB.CREATED_BY          BATCH_CREATED_BY,
        GLB.CREATION_DATE       BATCH_CREATION_DATE,
        GLB.LAST_UPDATED_BY     BATCH_LAST_UPDATED_BY,
        GLB.LAST_UPDATE_DATE    BATCH_LAST_UPDATE_DATE,
        GLB.LAST_UPDATE_LOGIN   BATCH_LAST_UPDATE_LOGIN,
        NVL(gl_journals_rpt_pkg.get_action_user(GLB.je_batch_id, 'CREATED'), GLB.created_by)	BATCH_CREATED_BY_NAME,
        DECODE(GLB.status, 'P', gl_journals_rpt_pkg.get_action_user(GLB.je_batch_id, 'POSTED'), null)	BATCH_POSTED_BY,
        DECODE(GLB.approval_status_code, 'A', gl_journals_rpt_pkg.get_action_user(GLB.je_batch_id, 'APPROVED'), null)	BATCH_APPROVED_BY,
	GLH.JE_HEADER_ID	HDR_ID,
	GLH.NAME		HDR_NAME,
	GLH.DESCRIPTION		HDR_DESC,
	GLH.TAX_STATUS_CODE	TAX_STATUS_CODE,
	GLH.RUNNING_TOTAL_DR	HDR_TOT_DR,
	GLH.RUNNING_TOTAL_CR	HDR_TOT_CR,
	GLH.RUNNING_TOTAL_ACCOUNTED_DR	HDR_TOT_ACC_DR,
	GLH.RUNNING_TOTAL_ACCOUNTED_CR	HDR_TOT_ACC_CR,
	GLH.CURRENCY_CODE 	HDR_CURR_CODE, 
	to_char(GLH.CURRENCY_CONVERSION_DATE, 'YYYY-MM-DD"T"HH24:MI:SS') HDR_CONVERSION_DATE, /*rchandan*/
	ROUND(GLH.CURRENCY_CONVERSION_RATE, 6)	HDR_CONVERSION_RATE, /*rchandan*/
	DECODE(GLH.CURRENCY_CONVERSION_TYPE, NULL, NULL, (SELECT d.user_conversion_type FROM GL_DAILY_CONVERSION_TYPES d WHERE d.conversion_type = GLH.currency_conversion_type))	HDR_CONVERSION_TYPE,
	/*GLH.BUDGET_VERSION_ID	BUDGET_VERSION_ID,*//*commented by rchandan for fusion*/
	/*GLH.ENCUMBRANCE_TYPE_ID	ENCUMBRANCE_TYPE_ID,*//*commented by rchandan for fusion*/
	GLH.EXTERNAL_REFERENCE	HDR_EXTREFERENCE,
	GLH.LAST_UPDATE_DATE	HDR_LAST_UPDATE_DATE,
	to_char(GLH.DEFAULT_EFFECTIVE_DATE, 'YYYY-MM-DD"T"HH24:MI:SS') HDR_EFF_DATE,
--        GLH.DOC_SEQUENCE_ID          DOC_SEQ_ID,
--	DOCSEQ.NAME		DOC_SEQ_NAME,
--	GLH.DOC_SEQUENCE_VALUE	DOC_SEQ_VALUE,
	GLH.LAST_UPDATED_BY		HDR_LAST_UPDATED_BY, /*rallamse bug 11729375 : replaced PPN.FULL_NAME*/
	FSV1.HEADER_NAME	ACCOUNTING_SEQ_NAME,
	FSV1.VERSION_NAME	ACCOUNTING_SEQ_VERSION,
	GLH.POSTING_ACCT_SEQ_VALUE	ACCOUNTING_SEQ_NUMBER,
	FSV2.HEADER_NAME	REPORTING_SEQ_NAME,
	FSV2.VERSION_NAME	REPORTING_SEQ_VERSION,
	GLH.CLOSE_ACCT_SEQ_VALUE	REPORTING_SEQ_NUMBER,
	to_char(GLH.REFERENCE_DATE, 'YYYY-MM-DD"T"HH24:MI:SS') REFERENCE_DATE,
	GJS.USER_JE_SOURCE_NAME	HDR_SOURCE,
	GJC.USER_JE_CATEGORY_NAME	HDR_CATEGORY,
        LE.NAME	LEGAL_ENTITY_NAME,
	GLL.JE_LINE_NUM		JE_LINE_NUM,
	GLL.CURRENCY_CODE 	LINE_CURR_CODE, /*rchandan*/
	to_char(GLL.CURRENCY_CONVERSION_DATE, 'YYYY-MM-DD"T"HH24:MI:SS') LINE_CONVERSION_DATE, /*rchandan*/
	ROUND(GLL.CURRENCY_CONVERSION_RATE, 6)	LINE_CONVERSION_RATE, /*rchandan*/
	DCT.USER_CONVERSION_TYPE	LINE_CONVERSION_TYPE,
	GLL.TAX_CODE_ID		TAX_CODE_ID,
	GLL.TAX_TYPE_CODE	TAX_TYPE_CODE,
	GLL.DESCRIPTION		LINE_DESC,
	GLL.ENTERED_DR		ENTERED_DR,
	GLL.ENTERED_CR		ENTERED_CR,
	GLL.ACCOUNTED_DR	ACCOUNTED_DR,
	GLL.ACCOUNTED_CR	ACCOUNTED_CR,
        (NVL(ACCOUNTED_DR,0)-NVL(ACCOUNTED_CR,0)) ACCOUNTED_NET,
	GLL.STAT_AMOUNT		STAT_AMOUNT,
	to_char(GLL.EFFECTIVE_DATE, 'YYYY-MM-DD"T"HH24:MI:SS') EFFECTIVE_DATE,
	GLL.REFERENCE_1		REFERENCE1,
	GLL.REFERENCE_2		REFERENCE2,
	GLL.REFERENCE_3		REFERENCE3,
	GLL.REFERENCE_4		REFERENCE4,
	GLL.REFERENCE_5		REFERENCE5,
	GLL.REFERENCE_6		REFERENCE6,
	GLL.REFERENCE_7		REFERENCE7,
	GLL.REFERENCE_8		REFERENCE8,
	GLL.REFERENCE_9		REFERENCE9,
	GLL.REFERENCE_10	REFERENCE10,
	SUBDOCSEQ.NAME		SUB_DOC_SEQ_NAME,
        GLL.SUBLEDGER_DOC_SEQUENCE_ID SUB_DOC_SEQ_ID,
	GLL.SUBLEDGER_DOC_SEQUENCE_VALUE	SUB_DOC_SEQ_VAL,
	RECON.JGZZ_RECON_REF	RECON_REF,
	GL_JOURNALS_EXP_RPT_PKG.get_lookup_value('M', RECON.JGZZ_RECON_STATUS, 'ORA_GL_LINE_RECON_STATUS') RECON_STATUS,
	RECON.JGZZ_RECON_ID	RECON_ID,
	to_char(RECON.JGZZ_RECON_DATE, 'YYYY-MM-DD"T"HH24:MI:SS') RECON_DATE,
	GL_JOURNALS_EXP_RPT_PKG.get_lookup_value('M', GLB.ACTUAL_FLAG, 'BATCH_TYPE') BATCH_TYPE,
	DECODE(GLB.STATUS,
		'P', GL_JOURNALS_EXP_RPT_PKG.get_lookup_value('M', GLB.STATUS, 'MJE_BATCH_STATUS'),
		'I', GL_JOURNALS_EXP_RPT_PKG.get_lookup_value('M', GLB.STATUS, 'MJE_BATCH_STATUS'),
		'S', GL_JOURNALS_EXP_RPT_PKG.get_lookup_value('M', GLB.STATUS, 'MJE_BATCH_STATUS'),
		'U', GL_JOURNALS_EXP_RPT_PKG.get_lookup_value('M', GLB.STATUS, 'MJE_BATCH_STATUS'),
		'u', GL_JOURNALS_EXP_RPT_PKG.get_lookup_value('M', GLB.STATUS, 'MJE_BATCH_STATUS'),
		NVL(ERROR_MESSAGE, GL_JOURNALS_EXP_RPT_PKG.get_lookup_value('M', GLB.STATUS, 'MJE_BATCH_STATUS'))) BATCH_STATUS,
	GL_JOURNALS_EXP_RPT_PKG.get_lookup_value('M', GLB.APPROVAL_STATUS_CODE, 'JE_BATCH_APPROVAL_STATUS') APPROVAL_STATUS,
	GL_JOURNALS_EXP_RPT_PKG.get_lookup_value('M', GLB.AVERAGE_JOURNAL_FLAG, 'AB_JOURNAL_TYPE') JRNL_TYPE,
        GL_JOURNALS_EXP_RPT_PKG.funds_status(GLB.funds_status_code) FUNDS_STATUS,
	GL_JOURNALS_EXP_RPT_PKG.get_lookup_value('M', GLH.TAX_STATUS_CODE, 'TAX_STATUS') TAX_STATUS,
	GL_JOURNALS_EXP_RPT_PKG.get_lookup_value('M', GLL.TAX_TYPE_CODE, 'TAX_TYPE') TAX_TYPE,
	GL_JOURNALS_EXP_RPT_PKG.tax_code(GLL.TAX_CODE_ID, GLL.TAX_TYPE_CODE) TAX_CODE,
	DECODE(:P_ACTUAL_FLAG, 'A', NULL, 'E', NVL(:PARAM_ENCUMBRANCE_TYPE, GL_JOURNALS_EXP_RPT_PKG.enc_type(GLH.ENCUMBRANCE_TYPE_ID))) ENCUMBRANCE_TYPE,
	&ACCOUNT ACCOUNT,
	&ACCOUNT_DESC ACCOUNT_DESC,
	&BALANCING_SEGMENT_VALUE	BALANCING_SEGMENT_VALUE,
	&BALANCING_SEGMENT_DESC		BALANCING_SEGMENT_DESC,
	&NATURAL_ACCT_SEGMENT_VAL	NATURAL_ACCT_SEGMENT_VAL,
	&NATURAL_ACCT_SEGMENT_DESC	NATURAL_ACCT_SEGMENT_DESC,
	&COST_CENTER_SEGMENT_VALUE	COST_CENTER_SEGMENT_VALUE,
	&COST_CENTER_SEGMENT_DESC	COST_CENTER_SEGMENT_DESC,
	DECODE(:P_SEC_SEG_NUM, null, null, &ADDITIONAL_SEGMENT_VALUE)	ADDITIONAL_SEGMENT_VALUE,
	DECODE(:P_SEC_SEG_NUM, null, null, &ADDITIONAL_SEGMENT_DESC)	ADDITIONAL_SEGMENT_DESC,
	GL_JOURNALS_EXP_RPT_PKG.contra_acct_value(GLH.JE_HEADER_ID, GLL.SUBLEDGER_DOC_SEQUENCE_ID, GLL.SUBLEDGER_DOC_SEQUENCE_VALUE, GLL.ACCOUNTED_DR, GLL.ACCOUNTED_CR) CONTRA_ACCT_VALUE,
	GL_JOURNALS_EXP_RPT_PKG.contra_acct_desc(GLH.JE_HEADER_ID, GLL.SUBLEDGER_DOC_SEQUENCE_ID, GLL.SUBLEDGER_DOC_SEQUENCE_VALUE, GLL.ACCOUNTED_DR, GLL.ACCOUNTED_CR) CONTRA_ACCT_DESC,
        GL_JOURNALS_EXP_RPT_PKG.begin_balance(&BALANCING_SEGMENT_VALUE,&NATURAL_ACCT_SEGMENT_VAL,DECODE(:P_SEC_SEG_NUM, null, null, &ADDITIONAL_SEGMENT_VALUE), LGR.LEDGER_ID, GLB.STATUS, GLH.ENCUMBRANCE_TYPE_ID) BEGIN_BALANCE
FROM
  &P_PERF_FROM
  &P_JOURNAL_FROM_CLAUSE
  &P_LEDGER_FROM
WHERE 
    fsv1.seq_version_id(+) = glh.posting_acct_seq_version_id
AND fsv2.seq_version_id(+) = glh.close_acct_seq_version_id
AND le.legal_entity_id (+) = glh.legal_entity_id
AND recon.je_header_id (+) = gll.je_header_id
AND recon.je_line_num (+) = gll.je_line_num
AND GLH.LEDGER_ID = LGR.LEDGER_ID
&P_LEDGER_WHERE
AND GLH.JE_SOURCE = GJS.JE_SOURCE_NAME
AND GLH.JE_CATEGORY  =  GJC.JE_CATEGORY_NAME
--  AND  GLH.LAST_UPDATED_BY = PP.USERNAME /*rallamse bug 11729375*/
--  AND ppn.person_id = pp.person_id       /*rallamse bug 11729375*/
AND GLB.JE_BATCH_ID = GLH.JE_BATCH_ID
--AND GLH.DOC_SEQUENCE_ID = DOCSEQ.DOC_SEQUENCE_ID(+)
AND GLL.SUBLEDGER_DOC_SEQUENCE_ID = SUBDOCSEQ.DOC_SEQUENCE_ID(+)
AND DCT.CONVERSION_TYPE  = GLL.CURRENCY_CONVERSION_TYPE /*rchandan*/ 
&P_POSTING_STATUS
&P_HEADER_POSTING_STATUS
&P_DAS_WHERE
&P_CURRENCY_WHERE
&P_ACTUAL_TYPE_WHERE
&P_BATCH_WHERE
&P_SOURCE_WHERE
&P_CATEGORY_WHERE
and &P_BAL_WHERE
--&P_DOC_ID_WHERE
--&P_DOC_VAL_WHERE
&P_SUB_DOC_ID_WHERE
&P_SUB_DOC_VAL_WHERE
&P_NOT_ZERO_LINE_WHERE
&P_PERIOD_WHERE
&P_CONTRA_ACCOUNT_WHERE
&P_JOURNAL_DATE_WHERE
&P_JOURNAL_UPD_DATE_WHERE
&P_JOURNAL_LAST_UPD_WHERE
AND &P_AFF_WHERE
AND &FLEXDATA_SECURE = 'N'
&P_AMOUNT_WHERE
&P_JOURNAL_WHERE_CLAUSE
&P_LE_WHERE_CLAUSE
&ACCT_ANAL_ORDERBY

------------------------------------------------------------------Accounting Automation Exception Analysis Report--------------------------------------------------------------------------
--Q_POSTED_TRANS_SUMM
SELECT distinct l.name led_name,
                   l.currency_code led_currency,
                   p.total_amount POST_TOTAL_AMOUNT
            FROM   gl_autorun_run_results p
                   ,GL_LEDGERS  l
            WHERE  p.autorun_request_id = :P_AUTORUN_REQ_ID
            --AND    p.ledger_id = :led_id
            AND    p.ledger_id = l.ledger_id (+)
            AND    p.result_type_code = 'BALANCE'
            ORDER BY p.total_amount
--Q_APPROVALS_DETAIL
SELECT e.transaction_name,
       src.USER_JE_SOURCE_NAME je_source, 
       ( SELECT max(n.display_name)
         FROM per_users u, per_person_names_f_v n
         WHERE u.username like e.error_detail_char1 || decode(length(e.error_detail_char1), 64, '%', '')
         AND   sysdate between u.start_date and nvl(u.end_date, sysdate)
         AND   n.person_id = u.person_id
       ) display_name,
       lk.meaning status,
       e.amount amount, 
       e.error_detail_number2 age
FROM   gl_autorun_run_errors e,
       gl_je_batches bt,
       gl_je_sources_tl src,
       FND_LOOKUP_VALUES_TL lk
WHERE  e.autorun_request_id = :P_AUTORUN_REQ_ID
AND    e.ledger_id = :led_id
AND    e.error_category_code = 'ORA_APPROVAL'
AND    e.error_code IN ('GL_AUTORUN_JE_REJECTED', 'GL_AUTORUN_JE_PENDING_APPROVAL')
AND    e.error_detail_number1 = bt.je_batch_id
and    bt.JE_SOURCE = src.JE_SOURCE_NAME
and    src.language = :P_LANGUAGE_CODE
AND    lk.lookup_type (+)= 'JE_BATCH_APPROVAL_STATUS'
AND    lk.lookup_code (+) = decode(e.error_detail_char2, 'R', 'I', e.error_detail_char2) 
AND    lk.view_application_id(+) = 101
AND    lk.language(+) = :P_LANGUAGE_CODE
&REPORT_DATA_FILTER
AND    rownum <= :rowlimit -- added for performance reasons.
ORDER BY e.error_detail_number2, e.transaction_name

--Q_APPROVALS_SUMMARY
SELECT e.autorun_request_id,
       e.ledger_id,
       SUM(e.amount) TOTAL_AMOUNT,
       SUM(case when e.age_days <4 then e.amount else 0 end) as AMT_LESS_4, 
       SUM(case when e.age_days >=4 and e.age_days <8 then e.amount else 0 end) as AMT_MORE_4_LESS_8, 
       SUM(case when e.age_days >=8 and e.age_days <12 then e.amount else 0 end) as AMT_MORE_8_LESS_12, 
       SUM(case when e.age_days >=12  then e.amount else 0 end) as AMT_MORE_12 ,
       SUM(case when e.age_days <4 then 1 else 0 end) LESS_4,
       SUM(case when e.age_days >=4 and e.age_days <8 then 1 else 0 end) MORE_4_LESS_8,
       SUM(case when e.age_days >=8 and e.age_days <12 then 1 else 0 end) MORE_8_LESS_12,
       SUM(case when e.age_days >=12  then 1 else 0 end) MORE_12, 
       to_char(e.ledger_id)||'-'||SUM(case when e.age_days <4 then 1 else 0 end) LESS_4_LINK,
       to_char(e.ledger_id)||'-'||SUM(case when e.age_days >=4 and e.age_days <8 then 1 else 0 end) MORE_4_LESS_8_LINK,
       to_char(e.ledger_id)||'-'||SUM(case when e.age_days >=8 and e.age_days <12 then 1 else 0 end) MORE_8_LESS_12_LINK, 
       to_char(e.ledger_id)||'-'||SUM(case when e.age_days >=12  then 1 else 0 end) MORE_12_LINK, 
       count(*) TOTAL_ROW_COUNT
FROM
 (SELECT autorun_request_id,
         ledger_id,
         MAX(NVL(amount, 0)) AMOUNT,
         error_detail_number2 AGE_DAYS
  FROM GL_AUTORUN_RUN_ERRORS e
  WHERE autorun_request_id = :P_AUTORUN_REQ_ID
  AND PROGRAM_CODE = 'JOURNAL_APPROVAL'
  AND ERROR_CATEGORY_CODE = 'ORA_APPROVAL'
  AND error_code IN ('GL_AUTORUN_JE_REJECTED', 'GL_AUTORUN_JE_PENDING_APPROVAL')
  AND ledger_id = :led_id
  &REPORT_DATA_FILTER
  GROUP BY autorun_request_id,
           ledger_id,
           error_detail_number1, 
           error_detail_number2) e
GROUP BY e.autorun_request_id,
         e.ledger_id
ORDER BY SUM(e.amount)
--Q_DETAIL
SELECT e.error_text,
       e.transaction_name,
       lk.meaning transaction_type,
       decode(prev.autorun_request_id, null, decode(e.reported_flag, 'Y', 'N', 'Y'), 'N') new_error_flag,
       decode(prev.autorun_request_id, null, decode(e.reported_flag, 'Y', 0, 1), 0) new_error_count,
       e.amount,
       e.incomplete_amount_flag,
       decode(e.incomplete_amount_flag, 'Y', 1, 0) incomplete_amount_count,
       src.user_je_source_name je_source_d
FROM   gl_autorun_run_errors e,
       gl_autorun_error_codes ec,
       fnd_lookup_values_tl lk,
       gl_je_sources_tl src,
       gl_autorun_run_errors prev
WHERE  e.autorun_request_id IN (:P_AUTORUN_REQ_ID, -1)
AND    e.last_update_date >= decode(e.autorun_request_id, -1, sysdate-1, e.last_update_date)
AND    NVL(e.status_code, 'ORA_READY_FOR_DISPLAY') <> 'ORA_PREPARING'
AND    e.ledger_id  = nvl(:led_id, -99)
AND    e.error_category_code = :error_category_code
AND    e.error_code NOT IN ('GL_AUTORUN_JE_REJECTED', 'GL_AUTORUN_JE_PENDING_APPROVAL')
AND    ec.error_code (+) = e.error_code
AND    lk.lookup_type (+) = 'ORA_TRANSACTION_TYPE'
AND    lk.lookup_code (+) = ec.object_type_code
AND    lk.view_application_id(+) = 101
AND    lk.language(+) = :P_LANGUAGE_CODE
AND    src.je_source_name (+) = e.je_source_name
AND    src.language (+) = :P_LANGUAGE_CODE
&REPORT_DATA_FILTER
AND    prev.autorun_request_id (+) = :P_PREV_AUTORUN_REQ_ID
AND    prev.program_code (+) = e.program_code
AND    prev.amount_key (+) = e.amount_key
AND    prev.error_text (+) = e.error_text
AND    prev.error_key (+) = e.error_key
AND    rownum <= :rowlimit -- added for performance reasons.
ORDER BY lk.meaning, e.transaction_name

--Q_SUMMARY
SELECT e.autorun_request_id,
       e.ledger_id led_summ_id,
       e.error_category_code,
       lk.meaning error_category_name,
       --to_char(e.ledger_id)||'-'||e.error_category_code DRILLDOWN_LINK,
       to_char(e.ledger_id)||'-'||decode(e.error_category_code, 'ORA_SUBLEDGER_TRANSACTION_DATA', 'ORA_SUBLEDGER_TRANS', e.error_category_code) DRILLDOWN_LINK,
       SUM(e.amount) TOTAL_AMOUNT_S,
       SUM(e.row_count) TOTAL_ROW_COUNT_S,
       src.user_je_source_name,
       &NOTIFIED_USER_SELECT notified
FROM
 (SELECT autorun_request_id,
         ledger_id,
         error_category_code,
         je_source_name je_source_name,
         MAX(NVL(amount, 0)) AMOUNT,
         count(*)    ROW_COUNT
  FROM GL_AUTORUN_RUN_ERRORS e
  WHERE autorun_request_id IN (:P_AUTORUN_REQ_ID, -1)
  AND   e.last_update_date >= decode(e.autorun_request_id, -1, sysdate-1, e.last_update_date)
  AND   NVL(status_code, 'ORA_READY_FOR_DISPLAY') <> 'ORA_PREPARING'
  AND   ledger_id =  nvl(:led_id, -99)
  AND   e.error_code NOT IN ('GL_AUTORUN_JE_REJECTED', 'GL_AUTORUN_JE_PENDING_APPROVAL')
  &EXCLD_SRC_FILTER
  &REPORT_DATA_FILTER
  GROUP BY autorun_request_id,
           ledger_id,
           error_category_code,
           je_source_name,
           program_code,
           amount_key) e,
       FND_LOOKUP_VALUES_TL  lk,
       GL_JE_SOURCES_TL src
WHERE  lk.lookup_type = 'ORA_ERROR_CATEGORIES'
  AND  lk.lookup_code = e.error_category_code
  AND  lk.view_application_id = 101
  AND  lk.language = :P_LANGUAGE_CODE
  AND  src.je_source_name (+) = e.je_source_name
  AND  src.language (+) = :P_LANGUAGE_CODE
GROUP BY e.autorun_request_id,
         e.ledger_id,
         e.error_category_code,
         to_char(e.ledger_id)||'-'||e.error_category_code,
         lk.meaning,
         e.je_source_name,
         src.user_je_source_name
ORDER BY lk.meaning, src.user_je_source_name

--Q_RPT_ROWLIMIT
SELECT nvl(FND_PROFILE.VALUE('GL_AUTORUN_RPT_ROWLIMIT'), 100) rowlimit
                      FROM  dual
--Q_LEDGER
SELECT distinct l.name ledger_name,
                            l.currency_code ledger_currency, 
                            l.ledger_id led_id
                      FROM  GL_AUTORUN_RUN_ERRORS e, 
                            GL_LEDGERS  l
                      WHERE l.ledger_id (+) = e.ledger_id
                        AND e.autorun_request_id IN (:P_AUTORUN_REQ_ID, -1)
                        AND e.last_update_date >= decode(e.autorun_request_id, -1, sysdate-1, e.last_update_date)
                        AND NVL(e.status_code, 'ORA_READY_FOR_DISPLAY') <> 'ORA_PREPARING'
                      &EXCLD_SRC_FILTER
                      &REPORT_DATA_FILTER
                      ORDER by l.name
----------------------------------------------------------Average Balance Audit Account Analysis Report	---------------------------------------------------------------
SELECT CC.code_combination_id CCID,
	to_char(dbal.accounting_date, 'YYYY-MM-DD"T"HH24:MI:SS') ACC_DATE,
	dbal.end_of_date_balance_num END_OF_DATE_BALANCE,
	decode(:P_BALANCE_TYPE, 'PATD', dbal.period_aggregate_num,
				'QATD', dbal.quarter_aggregate_num,
				'YATD', dbal.year_aggregate_num, 0) AGGREGATE,
	decode(:P_BALANCE_TYPE, 'PATD', dbal.period_average_to_date_num,
				'QATD', dbal.quarter_average_to_date_num,
				'YATD', dbal.year_average_to_date_num, 0) AVERAGE,
	&BAL_FIELD BAL_FIELD, 
	&BAL_DESC BAL_DESC, 
	&ACCT_FIELD ACCT_FIELD, 
	&ACCT_DESC ACCT_DESC, 
	&FLEXFIELD FLEXFIELD, 
	&FLEXDESC FLEXDESC, 
	GL_ACCT_ANALYSIS_AVG_RPT_PKG.get_opening_balance(CC.code_combination_id) opening_bal
FROM
	GL_DAILY_BALANCES_V DBAL,
	GL_CODE_COMBINATIONS CC
WHERE
      dbal.ledger_id = :P_LEDGER_ID
      AND dbal.ledger_currency = :LEDGER_CURRENCY
      AND dbal.period_set_name = :PERIOD_SET_NAME_1
      AND dbal.period_type = :PERIOD_TYPE_1
      AND dbal.accounting_date <= :P_REPORTING_DATE
      AND dbal.accounting_date >= :START_DATE
      AND cc.chart_of_accounts_id = :P_STRUCT_NUM
      AND cc.code_combination_id = dbal.code_combination_id
      AND dbal.currency_code = :REPORTING_CURR
      AND dbal.currency_type = decode(:P_CURRENCY_TYPE, 'E', 'E', 'U')
      AND &ACT_FILTER_WHERE
      &WHERE_DAS
      AND &FLEX_SECURE = 'N'
ORDER BY
       &ORDERBY_BAL,
       &ORDERBY_ACCT,
       &ORDERBY_ALL,
       dbal.accounting_date
	   
-------------------------------------------------- General Ledger Journal and Subledger Transaction Mapping Report Data Model-------------------------------------------------
select period,
       account,
       account_desc,
       currency_code,
       currency_conversion_rate,
       entered_cr,
       entered_dr,
       accounted_dr,
       accounted_cr,
       entered_amount,
       accounted_amount,
       je_source,
       je_category,
       journal_batch_name,
       journal_name,
       journal_desc,
       document_number,
       gl_date,
       je_line_num,
       voucher_number,
       je_line_desc,
       event_class,
       event_type,
       transaction_date,
       customer_supplier_name,
       receipt_payment_number,
       trx_invoice_number,
       sla_header_desc,
       receipt_number,
       po_number,
       inter_batch_number
  from JA_CN_TRANS_MAPPING
WHERE request_id = :P_PARENT_REQUEST_ID

--------------------------------------------------------General Ledger Data Model-------------------------------------------------------------------------------
--Q_DETAIL
SELECT  
        nvl(src.user_je_source_name, '**************')  SOURCE,
        nvl(cat.user_je_category_name, '**************')  CATEGORY,
        jeh.name JRNL_NAME,
        jel.code_combination_id CCID1,
        jel.period_name PERIOD_NAME1, 
        jeb.name BATCH_NAME,
        jeb.DESCRIPTION  BATCH_DESC,
        jeb.created_by               BATCH_CREATED_BY,
        jeb.creation_date            BATCH_CREATION_DATE,
        jeb.last_updated_by          BATCH_LAST_UPDATED_BY,
        jeb.last_update_date         BATCH_LAST_UPDATE_DATE,
        jeb.last_update_login        BATCH_LAST_UPDATE_LOGIN,
        to_char(jel.effective_date, 'YYYY-MM-DD"T"HH24:MI:SS') EFFECTIVE_DATE,
        jel.description DESCRIPTION,
        seq.name SEQUENCE_NAME,
        jeh.doc_sequence_value DOCUMENT_NUMBER,
        fsv1.version_name        ACCOUNTING_SEQ_VERSION,
        jeh.posting_acct_seq_value ACCOUNTING_SEQ_NUMBER,
        fsv1.header_name         ACCOUNTING_SEQ_NAME,
        fsv2.version_name      REPORTING_SEQ_VERSION,
        jeh.close_acct_seq_value REPORTING_SEQ_NUMBER,
        fsv2.header_name       REPORTING_SEQ_NAME,
        jel.ledger_id LEDGER_ID1,
        jel.REFERENCE_1 REFERENCE_1,
        jel.REFERENCE_2 REFERENCE_2,
        jel.REFERENCE_3 REFERENCE_3,
        jel.REFERENCE_4 REFERENCE_4,
        jel.REFERENCE_5 REFERENCE_5,
        jel.currency_conversion_rate CONV_RATE,
        jel.currency_conversion_type CONV_TYPE,
        to_char(jel.currency_conversion_date, 'YYYY-MM-DD"T"HH24:MI:SS') CONV_DATE,
        jel.tax_type_code TAX_TYPE,
        jel.tax_code  TAX_CODE,
        jel.amount_includes_tax_flag TAX_FLAG,
        jel.tax_document_identifier TAX_DOC_ID,
        to_char(jel.tax_document_date, 'YYYY-MM-DD"T"HH24:MI:SS') TAX_DOC_DATE,
        jel.tax_customer_name TAX_CT_NAME,
        jel.tax_customer_reference TAX_CT_REF,
        jel.tax_registration_number TAX_REG_NUM,
        recon.JGZZ_RECON_REF   RECON_REF,
        lk.meaning RECON_STATUS,
        recon.JGZZ_RECON_ID	RECON_ID,
        to_char(recon.JGZZ_RECON_DATE, 'YYYY-MM-DD"T"HH24:MI:SS') RECON_DATE,
        jel.je_line_num  JEL_LINE_NUM,
        jeh.posted_date	   JRNL_POSTED_DATE,
        jeh.external_reference JRNL_EXT_REF,
        nvl(&SELECT_DR,0) ACCOUNTED_DR,
        nvl(&SELECT_CR,0) ACCOUNTED_CR,
        nvl(jel.entered_dr,0) ENTERED_DR,
        nvl(jel.entered_cr,0) ENTERED_CR,
        jel.accounted_dr ACCOUNTED_DR1,
        jel.accounted_cr ACCOUNTED_CR1,
        jeh.JE_HEADER_ID JRNL_HEADER_ID,
        jeh.CURRENCY_CODE JRNL_CURRENCY_CODE,        
        jel.SUBLEDGER_DOC_SEQUENCE_ID SUB_DOC_SEQ_ID,
        &ACCT_FIELD ACCT_VALUE_IN,
        DECODE(&ACCT_FIELD,NULL,&ACCT_FIELD,SUBSTR(&ACCT_FIELD,1,3)) ACCT_LEVEL_VALUE_IN,
        recon.jgzz_recon_status JGZZ_RECON_STATUS,
		TO_CHAR(jeh.DEFAULT_EFFECTIVE_DATE, 'YYYY-MM-DD') || 'T' || TO_CHAR(jeh.DEFAULT_EFFECTIVE_DATE, 'HH24:MI:SS') JRNL_EFFECTIVE_DATE
/*,
        &P_FLEXFIELD FLEXFIELD, 
        &P_FLEX_SECURE FLEX_SECURE,
        &FLEXDESC FLEXDESC*/
 FROM  gl_je_lines jel,
       gl_je_headers jeh,
       gl_je_batches jeb,
       gl_je_categories cat,
       gl_je_sources src,
       gl_je_lines_recon recon,
       gl_lookups lk,
       gl_code_combinations cc,
       fnd_document_sequences seq,
       fun_seq_versions                fsv1,
       fun_seq_versions                fsv2
 --      gl_je_headers                   h
WHERE jel.status = 'P'
AND   jeh.je_header_id = jel.je_header_id
AND   jeb.je_batch_id = jeh.je_batch_id
AND   src.je_source_name = jeh.je_source
AND   cat.je_category_name = jeh.je_category 
AND   jeh.actual_flag = :P_ACTUAL_FLAG
AND   jeb.average_journal_flag = 'N'
AND   jel.ledger_id=:LEDGER_ID
AND   cc.CHART_OF_ACCOUNTS_ID = :P_STRUCT_NUM -- cc.CHART_OF_ACCOUNTS_ID 
AND   jeb.CHART_OF_ACCOUNTS_ID = :P_STRUCT_NUM            -- rrajarap
AND   cc.CODE_COMBINATION_ID = jel.CODE_COMBINATION_ID  -- rrajarap
AND   jel.period_name= :PERIOD_NAME
AND   recon.je_header_id (+) = jeh.je_header_id
AND   recon.je_line_num (+) = jel.je_line_num
AND   lk.lookup_type (+) = 'ORA_GL_LINE_RECON_STATUS'
AND   lk.lookup_code (+) = recon.JGZZ_RECON_STATUS
AND   seq.doc_sequence_id(+) = jeh.doc_sequence_id 
     &P_AMT_NOT_NULL
AND   jel.code_combination_id= :CCID                 -- rrajarap
AND   &WHERE_CURRENCY_CODE
AND &LEX_FILTER_WHERE
--  &X_WHERE_EXPRESSION  -- rrajarap
AND     fsv1.seq_version_id(+) = jeh.posting_acct_seq_version_id   -- h to jeh
AND     fsv2.seq_version_id(+) = jeh.close_acct_seq_version_id     -- h to jeh
AND   &WHERE_ACTUAL_TYPE
--AND &ACCT_WHERE
-- Bug 11785547. Uncommented the following as part DAS security
 &WHERE_DAS_JE  
 &P_PERIOD_DATE_LINE
ORDER BY jeh.name, jel.je_line_num

--Q_MASTER
SELECT QRY.LEDGER_NAME,
       QRY.LEDGER_ID,
       QRY.BEGIN_DR,
       QRY.BEGIN_CR,
       QRY.BEGIN_BAL,
       QRY.PERIOD_DR,
       QRY.PERIOD_CR,
       QRY.END_DR,
       QRY.END_CR,
       QRY.END_BAL,
       QRY.BEGIN_ACC_DR,
       QRY.BEGIN_ACC_CR,
       QRY.BEGIN_ACC_BAL,
       QRY.PERIOD_ACC_DR,
       QRY.PERIOD_ACC_CR,
       QRY.END_ACC_DR,
       QRY.END_ACC_CR,
       QRY.END_ACC_BAL,
       QRY.BEGIN_BALANCE_DR_CR_SIGN,
       QRY.END_BALANCE_DR_CR_SIGN,
       QRY.PERIOD_NAME,
       QRY.CCID,
       QRY.PERIOD_NUM,
       QRY.PERIOD_YEAR,
       QRY.TEMPLATE_ID,
       QRY.ENCUMBRANCE_TYPE,
       QRY.BAL_FIELD,
       QRY.BAL_DESC,
       QRY.ACCT_FIELD,
       QRY.ACCT_DESC,
       QRY.FLEXFIELD,
       QRY.FLEXDESC,
       QRY.EFFECTIVE_PERIOD_NUM,
       QRY.COST_CENTER_VALUE,
       QRY.INTERCOMPANY_SEGMENT_VALUE,
       QRY.LEGAL_ENTITY_ID,
       QRY.LEGAL_ENTITY_NAME,
       QRY.LE_ADDRESS_LINE_1,
       QRY.LE_ADDRESS_LINE_2,
       QRY.LE_ADDRESS_LINE_3,
       QRY.LE_CITY,
       QRY.LE_POSTAL_CODE,
       QRY.LE_REGISTRATION_NUMBER,
       QRY.LE_ACTIVITY_CODE
    FROM
(WITH &P_SEG_DESC_WITH
   SELECT  l2.name LEDGER_NAME ,
         l2.ledger_id LEDGER_ID,
-- entered
DECODE(:CURRENCY_TYPE_PARAM, 'E', DECODE(bal.currency_code, :LEDGER_CURRENCY_PARAM, bal.begin_balance_dr_beq, bal.begin_balance_dr),
                            'T', null,
                            'S', bal.begin_balance_dr)
 BEGIN_DR,
DECODE(:CURRENCY_TYPE_PARAM, 'E', DECODE(bal.currency_code, :LEDGER_CURRENCY_PARAM, bal.begin_balance_cr_beq, bal.begin_balance_cr),
                            'T', null,
                            'S', bal.begin_balance_cr)
 BEGIN_CR,
DECODE(:CURRENCY_TYPE_PARAM, 'E', DECODE(bal.currency_code, :LEDGER_CURRENCY_PARAM, abs(bal.begin_balance_dr_beq - bal.begin_balance_cr_beq), abs(bal.begin_balance_dr - bal.begin_balance_cr)),
                            'T', null,
                            'S', abs(bal.begin_balance_dr - bal.begin_balance_cr))
 BEGIN_BAL,
DECODE(:CURRENCY_TYPE_PARAM, 'E', DECODE(bal.currency_code, :LEDGER_CURRENCY_PARAM, bal.period_net_dr_beq, bal.period_net_dr),
                            'T', null,
                            'S', bal.period_net_dr)
 PERIOD_DR,
DECODE(:CURRENCY_TYPE_PARAM, 'E', DECODE(bal.currency_code, :LEDGER_CURRENCY_PARAM, bal.period_net_cr_beq, bal.period_net_cr),
                            'T', null,
                            'S', bal.period_net_cr)
 PERIOD_CR,
DECODE(:CURRENCY_TYPE_PARAM, 'E', DECODE(bal.currency_code, :LEDGER_CURRENCY_PARAM, bal.begin_balance_dr_beq + bal.period_net_dr_beq, bal.begin_balance_dr + bal.period_net_dr),
                            'T', null,
                            'S', bal.begin_balance_dr + bal.period_net_dr)
 END_DR,
DECODE(:CURRENCY_TYPE_PARAM, 'E', DECODE(bal.currency_code, :LEDGER_CURRENCY_PARAM, bal.begin_balance_cr_beq + bal.period_net_cr_beq, bal.begin_balance_cr + bal.period_net_cr),
                            'T', null,
                            'S', bal.begin_balance_cr + bal.period_net_cr)
 END_CR,
DECODE(:CURRENCY_TYPE_PARAM, 'E', DECODE(bal.currency_code, :LEDGER_CURRENCY_PARAM, abs(bal.begin_balance_dr_beq + bal.period_net_dr_beq - bal.begin_balance_cr_beq - bal.period_net_cr_beq),
                                                                                  abs(bal.begin_balance_dr + bal.period_net_dr - bal.begin_balance_cr - bal.period_net_cr)),
                            'T', null,
                            'S', abs(bal.begin_balance_dr + bal.period_net_dr - bal.begin_balance_cr - bal.period_net_cr))
 END_BAL,
-- accounted
DECODE(:CURRENCY_TYPE_PARAM, 'E',bal.begin_balance_dr_beq,
                            'T', bal.begin_balance_dr,
                            'S', bal.begin_balance_dr)
 BEGIN_ACC_DR,
DECODE(:CURRENCY_TYPE_PARAM, 'E',bal.begin_balance_cr_beq,
                            'T', bal.begin_balance_cr,
                            'S', bal.begin_balance_cr)
 BEGIN_ACC_CR,
DECODE(:CURRENCY_TYPE_PARAM, 'E',abs(bal.begin_balance_dr_beq - bal.begin_balance_cr_beq),
                            'T', abs(bal.begin_balance_dr - bal.begin_balance_cr),
                            'S', abs(bal.begin_balance_dr - bal.begin_balance_cr))
 BEGIN_ACC_BAL,
DECODE(:CURRENCY_TYPE_PARAM, 'E',bal.period_net_dr_beq,
                            'T', bal.period_net_dr,
                            'S', bal.period_net_dr)
 PERIOD_ACC_DR,
DECODE(:CURRENCY_TYPE_PARAM, 'E',bal.period_net_cr_beq,
                            'T', bal.period_net_cr,
                            'S', bal.period_net_cr)
 PERIOD_ACC_CR,
DECODE(:CURRENCY_TYPE_PARAM, 'E',bal.begin_balance_dr_beq + bal.period_net_dr_beq,
                            'T', bal.begin_balance_dr + bal.period_net_dr,
                            'S', bal.begin_balance_dr + bal.period_net_dr)
 END_ACC_DR,
DECODE(:CURRENCY_TYPE_PARAM, 'E',bal.begin_balance_cr_beq + bal.period_net_cr_beq,
                            'T', bal.begin_balance_cr + bal.period_net_cr,
                            'S', bal.begin_balance_cr + bal.period_net_cr)
 END_ACC_CR,
DECODE(:CURRENCY_TYPE_PARAM, 'E',abs(bal.begin_balance_dr_beq + bal.period_net_dr_beq - bal.begin_balance_cr_beq - bal.period_net_cr_beq),
                            'T', abs(bal.begin_balance_dr + bal.period_net_dr - bal.begin_balance_cr - bal.period_net_cr),
                            'S', abs(bal.begin_balance_dr + bal.period_net_dr - bal.begin_balance_cr - bal.period_net_cr))
 END_ACC_BAL,
DECODE(substr(DECODE(:CURRENCY_TYPE_PARAM, 'E', DECODE(bal.currency_code, :LEDGER_CURRENCY_PARAM, bal.begin_balance_dr_beq - bal.begin_balance_cr_beq, bal.begin_balance_dr - bal.begin_balance_cr),
                            'T', bal.begin_balance_dr - bal.begin_balance_cr,
                            'S', bal.begin_balance_dr - bal.begin_balance_cr), 1, 1), '-' , GL_GLGENLED_XMLP_PKG.CR_SIGN, GL_GLGENLED_XMLP_PKG.DR_SIGN) BEGIN_BALANCE_DR_CR_SIGN,
DECODE(substr(DECODE(:CURRENCY_TYPE_PARAM, 'E', DECODE(bal.currency_code, :LEDGER_CURRENCY_PARAM, bal.begin_balance_dr_beq + bal.period_net_dr_beq - bal.begin_balance_cr_beq - bal.period_net_cr_beq,
                                                                                  bal.begin_balance_dr + bal.period_net_dr - bal.begin_balance_cr - bal.period_net_cr),
                            'T', bal.begin_balance_dr + bal.period_net_dr - bal.begin_balance_cr - bal.period_net_cr,
                            'S', bal.begin_balance_dr + bal.period_net_dr - bal.begin_balance_cr - bal.period_net_cr), 1, 1), '-' , GL_GLGENLED_XMLP_PKG.CR_SIGN, GL_GLGENLED_XMLP_PKG.DR_SIGN) END_BALANCE_DR_CR_SIGN,
                bal.period_name PERIOD_NAME,
                cc.code_combination_id CCID,
                bal.period_num  PERIOD_NUM,
                bal.period_year  PERIOD_YEAR,
                cc.template_id  TEMPLATE_ID,
                decode(:P_ACTUAL_FLAG, 'A', null, 'E', nvl(:ENCUMBRANCE_TYPE_PARAM,
                       gl_glgenled_xmlp_pkg.enc_type(bal.encumbrance_type_id))) ENCUMBRANCE_TYPE,
                &P_BALANCING_SEGMENT_VALUE BAL_FIELD,
--                &BALANCING_SEGMENT_VALUE BAL_FIELD_W_DEP,
                &FLEX_GL_BALANCING_DESC BAL_DESC,
                &ACCT_FIELD ACCT_FIELD,
--                &ACCT_FIELD ACCT_FIELD_W_DEP,
                &FLEX_GL_ACCOUNT_DESC ACCT_DESC,
                &P_FLEXFIELD FLEXFIELD,
                &P_FLEXDESC FLEXDESC,
                PS.EFFECTIVE_PERIOD_NUM,
                &SELECT_CC_SEG COST_CENTER_VALUE,
                &SELECT_IC_SEG INTERCOMPANY_SEGMENT_VALUE
                &SELECT_RPT
   FROM  GL_LEDGERS L,
            GL_LEDGER_SET_ASSIGNMENTS LS,
            GL_LEDGERS L2,
            GL_CODE_COMBINATIONS CC,
            GL_PERIOD_STATUSES PS,
            GL_BALANCES BAL			
            &SEG_DESC_FROM
            &P_ACCT_DESC_FROM
            &P_FROM_LNSV
WHERE l.ledger_id = :LEDGER_ID_PARAM
AND   ls.ledger_set_id(+) =l.ledger_id
AND   bal.ledger_id = l2.ledger_id
AND   l2.ledger_id = nvl(ls.ledger_id, l.ledger_id)
--AND   l2.currency_code = nvl(:ENTERED_CURRENCY_PARAM,:LEDGER_CURRENCY_PARAM) -- rrajarap bug 9524131
AND   l2.currency_code = :LEDGER_CURRENCY_PARAM
AND   cc.chart_of_accounts_id = :P_STRUCT_NUM --cc.chart_of_accounts_id
AND   ps.ledger_id = l2.ledger_id
AND   bal.code_combination_id = cc.code_combination_id
AND   bal.period_name = ps.period_name
AND   bal.actual_flag = :P_ACTUAL_FLAG
/*AND   bal.currency_code = decode(:CURRENCY_TYPE_PARAM, 'S','STAT',nvl(:ENTERED_CURRENCY_PARAM, :LEDGER_CURRENCY_PARAM))*/
AND  &WHERE_CURRENCY_BAL
AND  &WHERE_TRANSLATED_FLAG
&P_FLEX_SECURE

AND   ps.application_id = 101
/*AND   nvl(bal.translated_flag, 'X')= decode (:CURRENCY_TYPE_PARAM , 'E' , decode(:ENTERED_CURRENCY_PARAM,:LEDGER_CURRENCY_PARAM, 'X', 'R'), 'X')*//*rrajarap bug 11729713 */
AND   ps.effective_period_num
              BETWEEN :START_EFF_PERIOD_NUM
              AND :END_EFF_PERIOD_NUM
&P_GL_RPT_WHERE
&SEG_DESC_WHERE
&P_ACCT_DESC_WHERE
AND   &WHERE_ACTUAL_TYPE
-- &X_WHERE_EXPRESSION
 AND &LEX_FILTER_WHERE
 &P_PERIOD_DATE_WHERE
-- bug 11785547. Uncommented the following
 &WHERE_DAS
 &P_LE_WHERE
--/*ORDER BY LEDGER_NAME, &ORDERBY_BAL, &ORDERBY_BAL2,
--&ORDERBY_ACCT, &ORDERBY_ACCT2, &ORDERBY_ALL */
ORDER BY &P_ORDER_BY) QRY

-------------------------------------------------------------Unprocessed Accounting Transactions Report-------------------------------------------------------------------------
--Q_BATCH_INTERFACE
SELECT distinct ds.ledger_name led_name,
             ds.ledger_id led_id,
             ds.transaction_name trans_name,
             --ds.transaction_name_perf trans_name_perf,
             ds.ledger_currency ledger_currency_code,
             ds.amount led_amt, 
             ds.row_count row_count,
             to_char(ds.ledger_id)||'-'||ds.trans_id DRILLDOWN_LINK,
             to_char(ds.ledger_id)||'-'||ds.transaction_type DRILLDOWN_TRANSTYPE_LINK,
             ds.creation_date num_days, 
             --decode(ds.transaction_type, 'ORA_GL_JOURNAL', 'General Ledger Journal', 'ORA_JOURNAL_INTERFACE', 'Journal Interface', ds.transaction_type) trans_type,
             lkup.meaning trans_type,
             ds.created_on created_on
       FROM ( 
              SELECT greatest(sum(decode(jeh.currency_code, 'STAT', 0, nvl(jeh.running_total_accounted_dr,0))), sum(decode(jeh.currency_code, 'STAT', 0, nvl(jeh.running_total_accounted_cr,0)))) amount
                   --,substr(replace(replace(gl_message.get_message('GL_AUTORUN_BATCH_IDENTIFIER', 'N'), '{BATCH_NAME}', jeb.name), '{BATCH_PERIOD}', jeb.default_period_name), 1, 1000) transaction_name
                   ,substr(replace(replace(&G_AUTORUN_BATCH_ID , '{BATCH_NAME}', jeb.name), '{BATCH_PERIOD}', jeb.default_period_name), 1, 1000) transaction_name
                   ,lgrb.name ledger_name
                   ,lgrb.currency_code ledger_currency
                   ,lgrb.ledger_id ledger_id
                   ,to_char(jeb.je_batch_id) trans_id
                   ,extract(day from (sysdate - jeb.creation_date)) creation_date
                   ,'ORA_GL_JOURNAL' transaction_type
                   ,jeb.creation_date created_on
                   --,count(*) row_count
                   , 1 row_count
              FROM gl_je_batches jeb, 
                   gl_je_headers jeh, 
                   gl_ledgers lgrb
              WHERE (jeb.status < 'P' OR jeb.status > 'P')
              AND   jeb.status <> 'u'
              --AND   greatest(jeb.default_effective_date, jeb.creation_date) >= :effective_start_date
              &WHERE_START_DATE_BATCH
              &WHERE_END_DATE_BATCH
              AND   jeh.je_batch_id = jeb.je_batch_id
              AND   nvl(jeh.display_alc_journal_flag, 'Y') = 'Y'
              AND   lgrb.ledger_id = jeh.ledger_id
              GROUP BY jeb.name, jeb.default_period_name, lgrb.ledger_id, jeb.je_batch_id, lgrb.name, lgrb.currency_code, jeb.creation_date
              UNION
              SELECT null amount
                   --, substr(replace(replace(gl_message.get_message('GL_AUTORUN_REPORT_JRNLIMPORT', 'N'),'{JRL_SOURCE}', decode(js2.import_using_key_flag,'Y', js2.user_je_source_name,interf.user_je_source_name)), '{GROUP_ID}', interf.group_id),1,1000) transaction_name
                   , substr(replace(replace(&G_AUTORUN_JRNL_IMPORT,'{JRL_SOURCE}', decode(js2.import_using_key_flag,'Y', js2.user_je_source_name,interf.user_je_source_name)), '{GROUP_ID}', interf.group_id),1,1000) transaction_name
                   ,lgri.name ledger_name 
                   ,lgri.currency_code ledger_currency
                   ,lgri.ledger_id ledger_id
                   ,interf.user_je_source_name ||'-'|| interf.group_id trans_id
                   ,interf.creation_date creation_date
                   ,'ORA_JOURNAL_INTERFACE' transaction_type
                   ,interf.created_on
                   ,interf.row_count
              FROM (SELECT inter.user_je_source_name
                         ,inter.group_id
                         ,nvl(decode(inter.ledger_id, -1, NULL, inter.ledger_id), decode(inter.set_of_books_id, -1, NULL, inter.set_of_books_id)) ledger_id
                         --,extract(day from (sysdate - nvl(inter.creation_date, inter.accounting_date))) creation_date
                         --,nvl(inter.creation_date,inter.accounting_date) created_on
                         ,max(extract(day from (sysdate - nvl(inter.creation_date, inter.date_created)))) creation_date 
                         ,max(nvl(inter.creation_date, inter.date_created)) created_on
                         --,count(*) row_count
                         ,1 row_count
                    FROM gl_interface inter
                    --WHERE inter.accounting_date >= :effective_start_date
                    &WHERE_START_DATE_INTER
                    &WHERE_END_DATE_INTER
                    AND status != 'PROCESSED'
                    GROUP BY inter.user_je_source_name, 
                            inter.group_id, 
                            nvl(decode(inter.ledger_id, -1, NULL, inter.ledger_id), decode(inter.set_of_books_id, -1, NULL, inter.set_of_books_id)), 
                            --nvl(inter.creation_date, inter.accounting_date)
                            trunc(nvl(inter.creation_date, inter.date_created))
                  ) interf, 
                  gl_ledgers lgri,
                  gl_je_sources js2
              WHERE js2.je_source_key(+) = interf.user_je_source_name 
              AND lgri.ledger_id(+) = interf.ledger_id
              UNION
              SELECT  decode(nvl(sum(xal.accounted_dr),sum(xal.accounted_cr)),NULL,to_number(NULL), greatest(sum(decode(xal.currency_code, 'STAT', 0, nvl(xal.accounted_dr,0))), sum(decode(xal.currency_code, 'STAT', 0, nvl(xal.accounted_cr,0))))) amount
                      ,dat.transaction_name trans_name
                      --,dat.transaction_name trans_name_perf
                      ,lgr.name ledger_name
                      ,lgr.currency_code ledger_currency
                      ,lgr.ledger_id led_id
                      ,to_char(nvl(xal.ae_header_id, dat.event_id)) trans_id
                      ,dat.age creation_date
                      ,dat.transaction_type_code transaction_type
                      ,dat.date_created  created_on
                      --,xal.creation_date  created_on
                      --,count(*) row_count
                      ,1 row_count
              FROM GL_AUTORUN_UNPROCESSED_DATA_GT dat,
                   gl_ledgers lgr,
                   xla_ae_lines xal
              WHERE lgr.ledger_id = dat.ledger_id
              AND   xal.ae_header_id(+) = dat.ae_header_id
              AND   xal.application_id(+) = dat.application_id
              GROUP BY dat.transaction_name, lgr.name, lgr.currency_code, lgr.ledger_id, dat.age, dat.transaction_type_code, nvl(xal.ae_header_id, dat.event_id), dat.date_created --xal.creation_date
             )ds
             ,gl_lookups lkup
       WHERE ds.transaction_type = lkup.lookup_code
       &WHERE_PARAMS_CLAUSE
       AND lkup.lookup_type = 'ORA_TRANSACTION_TYPE'
       ORDER BY ds.ledger_name , lkup.meaning, ds.amount desc --, num_days desc, trans_name
	   
--Q_EFF_START_DATE
--SELECT to_char(min(trunc(decode(current_period.start_date,current_period.quarter_start_date,prior_quarter.quarter_start_date,current_period.quarter_start_date))), 'YYYY/MM/DD') effective_start_date
            SELECT nvl(min(trunc(decode(current_period.start_date,current_period.quarter_start_date,prior_quarter.quarter_start_date,current_period.quarter_start_date))), (sysdate -90)) effective_start_date
            FROM gl_date_period_map period_map,gl_ledgers ledger,gl_period_statuses current_period,gl_period_statuses prior_quarter
            WHERE period_map.period_set_name    = ledger.period_set_name 
            AND period_map.period_type        = ledger.accounted_period_type
            AND period_map.period_type        = current_period.period_type
            AND period_map.period_type        = prior_quarter.period_type
            AND period_map.accounting_date    = trunc(sysdate)
            AND current_period.ledger_id      = ledger.ledger_id
            AND current_period.period_name    = period_map.period_name
            AND prior_quarter.ledger_id       = ledger.ledger_id
            AND prior_quarter.end_date        = current_period.quarter_start_date - 1 
            AND current_period.application_id = 101 
            AND prior_quarter.application_id  = 101
-----------------------------------------------------------------------ExtractICEarningTrxDm--------------------------------------------------------------------------------
Select Cn_Tp_Earnings_All_V.Earning_Id              AS EarningId
      ,Cn_Tp_Measure_Results_All.Measure_Result_Id  As MeasureResultId
      ,Cn_Tp_Earnings_All_V.Credit_Id               As CreditId
      ,Cn_Tp_Earnings_All_V.Transaction_Id          As TransactionId
      ,Cn_Srp_Participant_Hdr_Ro_V.Participant_Name As ParticipantName
      ,to_char(Cn_Tp_Earnings_All_V.Source_Event_Date, 'YYYY-MM-DD') As SourceEventDate
      ,Cn_Periods_Tl.Period_Name                    As PeriodName
      ,Cn_Tp_Earnings_All_V.Comm_Amt_Func_Curr      As CommAmtFuncCurr
      ,Cn_Tp_Earnings_All_V.Comm_Amt_Calc_Curr      As CommAmtCalcCurr
      ,Cn_Tp_Measure_Results_All.Output_Achieved    As OutputAchieved
      ,Cn_Tp_Earnings_All_V.Calc_Currency_Code      As CalcCurrencyCode
      ,Transaction_Type.Meaning                     As TransactionType
      ,Cn_Tp_Earnings_All_V.Eligible_Cat_Id         As EligibleCatId
      ,Cn_Eligible_Cats_All_Tl.Name                 As CreditCategory
      ,Cn_Tp_Earnings_All_V.Object_Status           As ObjectStatus
      ,Cn_Tp_Earnings_All_V.Org_Id                  As OrgId
      ,Cn_Tp_Transactions_All.Source_Trx_Number     As SourceTrxNumber
      ,Cn_Tp_Earnings_All_V.Plan_Component_Id       As PlanComponentId
      ,Cn_Plan_Components_All_Tl.Plan_Component_Name As PlanComponentName
      ,Cn_Tp_Transactions_All.Sales_Channel         As OriginatingChannelName
      ,Case When :P_Transaction_Category = 'Held Payment' Then 'Y' Else 'N' End     As HoldFlag
      ,Cn_Tp_Transactions_All.Attribute1            As TrxAttribute1
      ,Cn_Tp_Transactions_All.Attribute2            As TrxAttribute2--BROKER_NAME
      ,Cn_Tp_Transactions_All.Attribute3            As TrxAttribute3
      ,Cn_Tp_Transactions_All.Attribute4            As TrxAttribute4--CUSTOMER_NAME
      ,Cn_Tp_Transactions_All.Attribute5            As TrxAttribute5
      ,Cn_Tp_Transactions_All.Attribute6            As TrxAttribute6--LENDER
      ,Cn_Tp_Transactions_All.Attribute7            As TrxAttribute7
      ,Cn_Tp_Transactions_All.Attribute8            As TrxAttribute8
      ,Cn_Tp_Transactions_All.Attribute9            As TrxAttribute9
      ,Cn_Tp_Transactions_All.Attribute10           As TrxAttribute10
      ,Cn_Tp_Transactions_All.Attribute11           As TrxAttribute11
      ,Cn_Tp_Transactions_All.Attribute12           As TrxAttribute12
      ,Cn_Tp_Transactions_All.Attribute13           As TrxAttribute13
      ,Cn_Tp_Transactions_All.Attribute14           As TrxAttribute14
      ,Cn_Tp_Transactions_All.Attribute15           As TrxAttribute15--FUNDER_NAME
      ,Cn_Tp_Transactions_All.Attribute16           As TrxAttribute16
      ,Cn_Tp_Transactions_All.Attribute17           As TrxAttribute17
      ,Cn_Tp_Transactions_All.Attribute18           As TrxAttribute18
      ,Cn_Tp_Transactions_All.Attribute19           As TrxAttribute19--CURRENT_CHANNEL_NAME
      ,Cn_Tp_Transactions_All.Attribute20           As TrxAttribute20--PRODUCT_NAME
      ,Cn_Tp_Transactions_All.Attribute21           As TrxAttribute21--TRANSACTION_SUB_TYPE
      ,Cn_Tp_Transactions_All.Attribute22           As TrxAttribute22--PAY_TRANSACTION_CATEGORY
      ,Cn_Tp_Transactions_All.Attribute23           As TrxAttribute23--PRODUCT_TYPE
      ,Cn_Tp_Transactions_All.Attribute24           As TrxAttribute24
      ,Cn_Tp_Transactions_All.Attribute25           As TrxAttribute25
      ,Cn_Tp_Transactions_All.Attribute26           As TrxAttribute26
      ,Cn_Tp_Transactions_All.Attribute27           As TrxAttribute27--HEAD_OFFICE_BRANCH_NAME
      ,Cn_Tp_Transactions_All.Attribute28           As TrxAttribute28--SALES_MANAGER_NAME
      ,Cn_Tp_Transactions_All.Attribute29           As TrxAttribute29
      ,Cn_Tp_Transactions_All.Attribute30           As TrxAttribute30--LOAN_STATUS
      ,Cn_Tp_Transactions_All.Attribute31           As TrxAttribute31
      ,Cn_Tp_Transactions_All.Attribute32           As TrxAttribute32
      ,Cn_Tp_Transactions_All.Attribute33           As TrxAttribute33
      ,Cn_Tp_Transactions_All.Attribute34           As TrxAttribute34--STATE
      ,Cn_Tp_Transactions_All.Attribute35           As TrxAttribute35
      ,Cn_Tp_Transactions_All.Attribute36           As TrxAttribute36
      ,Cn_Tp_Transactions_All.Attribute37           As TrxAttribute37
      ,Cn_Tp_Transactions_All.Attribute38           As TrxAttribute38
      ,Cn_Tp_Transactions_All.Attribute39           As TrxAttribute39
      ,Cn_Tp_Transactions_All.Attribute40           As TrxAttribute40
      ,Cn_Tp_Transactions_All.Attribute_Number1     As TrxAttributeNumber1
      ,Cn_Tp_Transactions_All.Attribute_Number2     As TrxAttributeNumber2
      ,Cn_Tp_Transactions_All.Attribute_Number3     As TrxAttributeNumber3
      ,Cn_Tp_Transactions_All.Attribute_Number4     As TrxAttributeNumber4
      ,Cn_Tp_Transactions_All.Attribute_Number5     As TrxAttributeNumber5
      ,Cn_Tp_Transactions_All.Attribute_Number6     As TrxAttributeNumber6
      ,Cn_Tp_Transactions_All.Attribute_Number7     As TrxAttributeNumber7
      ,Cn_Tp_Transactions_All.Attribute_Number8     As TrxAttributeNumber8
      ,Cn_Tp_Transactions_All.Attribute_Number9     As TrxAttributeNumber9
      ,Cn_Tp_Transactions_All.Attribute_Number10    As TrxAttributeNumber10
      ,Cn_Tp_Transactions_All.Attribute_Number11    As TrxAttributeNumber11
      ,Cn_Tp_Transactions_All.Attribute_Number12    As TrxAttributeNumber12--GST
      ,Cn_Tp_Transactions_All.Attribute_Number13    As TrxAttributeNumber13
      ,Cn_Tp_Transactions_All.Attribute_Number14    As TrxAttributeNumber14
      ,Cn_Tp_Transactions_All.Attribute_Number15    As TrxAttributeNumber15
      ,Cn_Tp_Transactions_All.Attribute_Number16    As TrxAttributeNumber16
      ,Cn_Tp_Transactions_All.Attribute_Number17    As TrxAttributeNumber17
      ,Cn_Tp_Transactions_All.Attribute_Number18    As TrxAttributeNumber18
      ,Cn_Tp_Transactions_All.Attribute_Number19    As TrxAttributeNumber19
      ,Cn_Tp_Transactions_All.Attribute_Number20    As TrxAttributeNumber20
      ,Cn_Tp_Transactions_All.Attribute_Number21    As TrxAttributeNumber21
      ,Cn_Tp_Transactions_All.Attribute_Number22    As TrxAttributeNumber22
      ,Cn_Tp_Transactions_All.Attribute_Number23    As TrxAttributeNumber23
      ,Cn_Tp_Transactions_All.Attribute_Number24    As TrxAttributeNumber24
      ,Cn_Tp_Transactions_All.Attribute_Number25    As TrxAttributeNumber25
      ,Cn_Plan_Components_All_B.Attribute1          As PlanAttribute1
      ,Cn_Plan_Components_All_B.Attribute2          As PlanAttribute2
      ,Cn_Plan_Components_All_B.Attribute3          As PlanAttribute3
      ,Cn_Plan_Components_All_B.Attribute4          As PlanAttribute4
      ,Cn_Plan_Components_All_B.Attribute5          As PlanAttribute5
      ,Cn_Plan_Components_All_B.Attribute6          As PlanAttribute6
      ,Cn_Plan_Components_All_B.Attribute7          As PlanAttribute7
      ,Cn_Plan_Components_All_B.Attribute8          As PlanAttribute8
      ,Cn_Plan_Components_All_B.Attribute9          As PlanAttribute9
      ,Cn_Plan_Components_All_B.Attribute10         As PlanAttribute10
      ,Cn_Plan_Components_All_B.Attribute11         As PlanAttribute11
      ,Cn_Plan_Components_All_B.Attribute12         As PlanAttribute12
      ,Cn_Plan_Components_All_B.Attribute13         As PlanAttribute13
      ,Cn_Plan_Components_All_B.Attribute14         As ComponentCategory
      ,Cn_Plan_Components_All_B.Attribute15         As ComponentType
      ,Cn_Formulas_All_B.Attribute1                 As PmAttribute1
      ,Cn_Formulas_All_B.Attribute2                 As PmAttribute2
      ,Cn_Formulas_All_B.Attribute3                 As PmAttribute3
      ,Cn_Formulas_All_B.Attribute4                 As PmAttribute4
      ,Cn_Formulas_All_B.Attribute5                 As PmAttribute5
      ,Cn_Formulas_All_B.Attribute6                 As PmAttribute6
      ,Cn_Formulas_All_B.Attribute7                 As PmAttribute7
      ,Cn_Formulas_All_B.Attribute8                 As PmAttribute8
      ,Cn_Formulas_All_B.Attribute9                 As PmAttribute9
      ,Cn_Formulas_All_B.Attribute10                As PmAttribute10
      ,Cn_Formulas_All_B.Attribute11                As PmAttribute11
      ,Cn_Formulas_All_B.Attribute12                As PmAttribute12
      ,Cn_Formulas_All_B.Attribute13                As PmAttribute13
      ,Cn_Formulas_All_B.Attribute14                As PmAttribute14
      ,Cn_Formulas_All_B.Attribute15                As MeasureType
From Cn_Tp_Earnings_All Cn_Tp_Earnings_All_V
    ,Cn_Tp_Measure_Results_All
    ,Cn_Formulas_All_B
    ,Cn_Tp_Transactions_All
    ,Cn_Eligible_Cats_All_B
    ,Cn_Eligible_Cats_All_Tl
    ,Cn_Plan_Components_All_B
    ,Cn_Plan_Components_All_Tl
    ,Cn_Srp_Participant_Hdr_Ro_V
    ,Cn_Repositories_All_B
    ,Cn_Periods_Tl
    ,Cn_Lookups Transaction_Type
Where Cn_Tp_Transactions_All.Source_Trx_Number   = Cn_Tp_Earnings_All_V.Source_Trx_Number
And Cn_Tp_Transactions_All.Transaction_Type      = Cn_Tp_Earnings_All_V.Transaction_Type
And Cn_Eligible_Cats_All_B.Eligible_Cat_Id       = Cn_Eligible_Cats_All_Tl.Eligible_Cat_Id
And Cn_Eligible_Cats_All_Tl.Language             = 'US'
And Cn_Tp_Earnings_All_V.Eligible_Cat_Id         = Cn_Eligible_Cats_All_B.Eligible_Cat_Id
And Cn_Tp_Measure_Results_All.Transaction_Id       = Cn_Tp_Earnings_All_V.Transaction_Id
And Cn_Tp_Measure_Results_All.Plan_Component_Id    = Cn_Tp_Earnings_All_V.Plan_Component_Id
AND Cn_Tp_Measure_Results_All.Participant_Id = Cn_Srp_Participant_Hdr_Ro_V.Participant_Id
And Cn_Formulas_All_B.Formula_Id                   = Cn_Tp_Measure_Results_All.Formula_Id
And Cn_Tp_Earnings_All_V.Plan_Component_Id       = Cn_Plan_Components_All_B.Plan_Component_Id
And Cn_Plan_Components_All_Tl.Plan_Component_Id  = Cn_Plan_Components_All_B.Plan_Component_Id
And Cn_Plan_Components_All_Tl.Language           = 'US'
And Cn_Tp_Earnings_All_V.Credited_Participant_Id = Cn_Srp_Participant_Hdr_Ro_V.Participant_Id
And Cn_Tp_Earnings_All_V.Org_Id                  = Cn_Repositories_All_B.Org_Id
And Cn_Repositories_All_B.Calendar_Id            = Cn_Periods_Tl.Calendar_Id
And Cn_Tp_Earnings_All_V.Source_Event_Period_Id  = Cn_Periods_Tl.Period_Id
And Cn_Periods_Tl.Language                       = 'US'
And (Transaction_Type.Lookup_Code                = Cn_Tp_Transactions_All.Transaction_Type
And Transaction_Type.Lookup_Type                 = 'CN_TP_TRANSACTION_TYPE')
And Cn_Tp_Earnings_All_V.Org_Id                  = Nvl(:P_Org_Id, Cn_Tp_Earnings_All_V.Org_Id)
And Cn_Periods_Tl.Period_Id                      = Nvl(:P_Period_Id, Cn_Periods_Tl.Period_Id)
And ((:P_Transaction_Category = 'Expected' And Nvl(Cn_Plan_Components_All_B.Attribute15 || ' ' || Cn_Plan_Components_All_B.Attribute14, -99) In ('Expected Revenue', 'Expected Expense'))
 Or (:P_Transaction_Category = 'Held Payment' And Cn_Formulas_All_B.Attribute12 = 'Y' And Nvl(Cn_Plan_Components_All_B.Attribute15 || ' ' || Cn_Plan_Components_All_B.Attribute14, -99) = 'Actual Expense' 
     And Not Exists (Select 1 From Cn_Tp_Participant_Pay_All Pay Where Pay.Earning_Id = Cn_Tp_Earnings_All_V.Earning_Id) And Cn_Srp_Participant_Hdr_Ro_V.Hold_Payment_Flag = 'Y')
 Or (:P_Transaction_Category Not In ('Expected', 'Held Payment') And :P_Transaction_Category = Nvl(Cn_Plan_Components_All_B.Attribute15 || ' ' || Cn_Plan_Components_All_B.Attribute14, -99))
)
And Cn_Formulas_All_B.Attribute14 = 'Y'
And Cn_Formulas_All_B.Attribute15 In ('Commission', 'GST')
And Cn_Tp_Earnings_All_V.Source_Event_Date       >= Nvl(:P_From_Date, Cn_Tp_Earnings_All_V.Source_Event_Date)
And Cn_Tp_Earnings_All_V.Source_Event_Date       <= Nvl(:P_To_Date, Cn_Tp_Earnings_All_V.Source_Event_Date)
And Not Exists(Select 1 From Gl_Import_References Gl_Ref Where Gl_Ref.Reference_6 = 'OIC' And To_Char(Gl_Ref.Reference_2) = To_Char(Cn_Tp_Earnings_All_V.Earning_Id))
--------------------------------------------------------------------General Ledger Journal and Balance Report Data Model----------------------------------------------------
--Q_REP_PARAMETER_INFO
select
TO_CHAR(:P_START_DATE,'YYYY-MM-DD')   CP_START_DATE,
TO_CHAR(:P_END_DATE,'YYYY-MM-DD')     CP_END_DATE
from dual
--Q_BAL_DATE
SELECT 
   GLBAL.CODE_COMBINATION_ID CODE_COMBINATION_ID  ,  
   GLBAL.BEGIN_BALANCE_DR + NVL((SELECT 
   NVL(SUM(&SELECT_DR),0) BEGIN_BAL_DATE_DR
FROM
    GL_JE_LINES GLL,
    GL_JE_HEADERS GLH,
    GL_JE_BATCHES GLBATCH
 WHERE  
GLBATCH.AVERAGE_JOURNAL_FLAG = 'N'
AND GLBATCH.STATUS = 'P'
AND GLBATCH.JE_BATCH_ID = GLH.JE_BATCH_ID
&BUDENC_WHERE_JRNL
&CURR_WHERE_JRNL
AND GLH.DEFAULT_EFFECTIVE_DATE < DECODE( :P_START_DATE, NULL, :FP_START_DATE,TRUNC(:P_START_DATE))
AND GLH.LEDGER_ID = :P_LEDGER_ID
AND GLH.ACTUAL_FLAG = :P_BALANCE_TYPE
AND GLH.JE_HEADER_ID = GLL.JE_HEADER_ID
AND GLL.PERIOD_NAME = :P_PERIOD_FROM
AND GLL.STATUS = 'P'
AND GLL.LEDGER_ID = :P_LEDGER_ID
AND GLL.CODE_COMBINATION_ID = :CCID
GROUP BY
GLL.CODE_COMBINATION_ID),0) BAL_DR, 
   GLBAL.BEGIN_BALANCE_CR + NVL((SELECT 
   NVL(SUM(&SELECT_CR),0) BEGIN_BAL_DATE_CR
FROM
    GL_JE_LINES GLL,
    GL_JE_HEADERS GLH,
    GL_JE_BATCHES GLBATCH
 WHERE  
GLBATCH.AVERAGE_JOURNAL_FLAG = 'N'
AND GLBATCH.STATUS = 'P'
AND GLBATCH.JE_BATCH_ID = GLH.JE_BATCH_ID
&BUDENC_WHERE_JRNL
&CURR_WHERE_JRNL
AND GLH.DEFAULT_EFFECTIVE_DATE < DECODE( :P_START_DATE, NULL, :FP_START_DATE,TRUNC(:P_START_DATE))
AND GLH.LEDGER_ID = :P_LEDGER_ID
AND GLH.ACTUAL_FLAG = :P_BALANCE_TYPE
AND GLH.JE_HEADER_ID = GLL.JE_HEADER_ID
AND GLL.PERIOD_NAME = :P_PERIOD_FROM
AND GLL.STATUS = 'P'
AND GLL.LEDGER_ID = :P_LEDGER_ID
AND GLL.CODE_COMBINATION_ID = :CCID
GROUP BY
GLL.CODE_COMBINATION_ID),0) BAL_CR
FROM
    GL_BALANCES GLBAL
WHERE 
GLBAL.CODE_COMBINATION_ID=:CCID
AND GLBAL.PERIOD_NAME=:P_PERIOD_FROM
AND GLBAL.LEDGER_ID = :P_LEDGER_ID
&CURR_WHERE_BAL
&BUDENC_WHERE_BAL
AND GLBAL.CURRENCY_CODE = :BAL_CURRENCY
AND GLBAL.ACTUAL_FLAG = :P_BALANCE_TYPE
AND GLBAL.TEMPLATE_ID IS NULL
--Q_BATCH
SELECT 
    GLBATCH.NAME BATCH_NAME,
    GLH.JE_HEADER_ID JRNL_HEADER_ID,
    GLH.NAME JRNL_NAME,
    GLH.PERIOD_NAME BATCH_PERIOD,
    GLH.CURRENCY_CODE JRNL_CURRENCY_CODE,
    TO_CHAR(GLH.DEFAULT_EFFECTIVE_DATE, 'YYYY-MM-DD') || 'T' || TO_CHAR(GLH.DEFAULT_EFFECTIVE_DATE, 'HH24:MI:SS') JRNL_EFFECTIVE_DATE,
    NVL(SRC.USER_JE_SOURCE_NAME, '**********') JRNL_SOURCE,
    NVL(CAT.USER_JE_CATEGORY_NAME, '**********') JRNL_CATEGORY,
    FSV.HEADER_NAME JRNL_ACCT_SEQ_NAME,
    FSV.VERSION_NAME JRNL_ACCT_SEQ_VERSION,
    GLH.CLOSE_ACCT_SEQ_VALUE JRNL_ACCT_SEQ_NUM,
    DOCSEQ.NAME JRNL_DOC_SEQ_NAME,
    GLH.DOC_SEQUENCE_VALUE JRNL_DOC_SEQ_NUM,
    GLL.JE_LINE_NUM JRNL_LINE_NUM,
    NVL(&SELECT_DR, 0) JRNL_LINE_DR,
    NVL(&SELECT_CR, 0) JRNL_LINE_CR,
    GLL.DESCRIPTION JRNL_LINE_DESC,
    GLL.SUBLEDGER_DOC_SEQUENCE_ID  REFERENCE1,
    GLL.CODE_COMBINATION_ID CODE_COMBIINATION_ID,
    GLH.POSTING_ACCT_SEQ_VALUE JRNL_GL_ACCT_SEQ_NUM,
    &SELECT_ACCT_SEG ACCT_VALUE_IN,
   DECODE(&SELECT_ACCT_SEG,NULL,&SELECT_ACCT_SEG,SUBSTR(&SELECT_ACCT_SEG,1,3)) ACCT_LEVEL_VALUE_IN,
   gjlr.jgzz_recon_ref                          JGZZ_RECON_REF,
   to_char(gjlr.jgzz_recon_date,'YYYY-MM-DD')   JGZZ_RECON_DATE,
   gjlr.jgzz_recon_id                           JGZZ_RECON_GROUP,
   gjlr.jgzz_recon_status                       JGZZ_RECON_STATUS, 	
   (SELECT meaning	
    FROM gl_lookups
    WHERE lookup_type = 'ORA_GL_LINE_RECON_STATUS'
    AND lookup_code   = Nvl(gjlr.jgzz_recon_status, 'U')) AS RECON_STATUS
FROM
    GL_JE_LINES GLL,
    GL_JE_HEADERS GLH,
    GL_JE_BATCHES GLBATCH,
    FUN_SEQ_VERSIONS FSV,
    FND_DOCUMENT_SEQUENCES DOCSEQ,
    GL_JE_LINES_RECON GJLR,  -- bug 25112757
    GL_JE_SOURCES SRC,
    GL_JE_CATEGORIES CAT,
    GL_CODE_COMBINATIONS CC
WHERE CAT.JE_CATEGORY_NAME = GLH.JE_CATEGORY
AND SRC.JE_SOURCE_NAME = GLH.JE_SOURCE
AND GLH.DOC_SEQUENCE_ID = DOCSEQ.DOC_SEQUENCE_ID (+)
AND GLH.CLOSE_ACCT_SEQ_VERSION_ID = FSV.SEQ_VERSION_ID (+)
AND GLBATCH.AVERAGE_JOURNAL_FLAG = 'N'
AND GLBATCH.STATUS = 'P'
AND GLBATCH.JE_BATCH_ID = GLH.JE_BATCH_ID
&BUDENC_WHERE_JRNL
&CURR_WHERE_JRNL
AND GLH.DEFAULT_EFFECTIVE_DATE BETWEEN :FP_START_DATE AND :TP_END_DATE
AND GLH.LEDGER_ID = :P_LEDGER_ID
AND GLH.ACTUAL_FLAG = :P_BALANCE_TYPE
AND GLH.JE_HEADER_ID = GLL.JE_HEADER_ID
AND GLL.STATUS = 'P'
AND GLL.LEDGER_ID = :P_LEDGER_ID
AND GLL.PERIOD_NAME = :PERIOD_NAME
AND GLL.CODE_COMBINATION_ID = :CCID
AND GLL.JE_HEADER_ID 	= GJLR.JE_HEADER_ID(+)
AND GLL.JE_LINE_NUM	= GJLR.JE_LINE_NUM(+)
AND CC.CODE_COMBINATION_ID = GLL.CODE_COMBINATION_ID
AND CC.CHART_OF_ACCOUNTS_ID = :P_COA_ID
--Q_BAL
SELECT 
    &ACCT ACCT,
	&ACCT_DESC ACCT_DESC,
    &SELECT_LE LEGAL_ENTITY_ID,
   decode(:g_acctg_code,'EXCLUSIVE', JGZZGLJRB.legal_entity_nameformula(:g_legal_entity_id),
                       'SHARED',     JGZZGLJRB.legal_entity_nameformula(&SELECT_LE), 
			'') LEGAL_ENTITY_NAME,
   decode(:g_acctg_code,'EXCLUSIVE', JGZZGLJRB.le_address_line_1formula(:g_legal_entity_id),
                       'SHARED',     JGZZGLJRB.le_address_line_1formula(&SELECT_LE), 
			'') LE_ADDRESS_LINE_1, 
   decode(:g_acctg_code,'EXCLUSIVE', JGZZGLJRB.le_address_line_2formula(:g_legal_entity_id),
                       'SHARED',     JGZZGLJRB.le_address_line_2formula(&SELECT_LE), 
			'') LE_ADDRESS_LINE_2, 
   decode(:g_acctg_code,'EXCLUSIVE', JGZZGLJRB.le_address_line_3formula(:g_legal_entity_id),
                       'SHARED',     JGZZGLJRB.le_address_line_3formula(&SELECT_LE), 
			'') LE_ADDRESS_LINE_3, 
   decode(:g_acctg_code,'EXCLUSIVE', JGZZGLJRB.le_cityformula(:g_legal_entity_id),
                       'SHARED',     JGZZGLJRB.le_cityformula(&SELECT_LE), 
			'') LE_CITY, 
   decode(:g_acctg_code,'EXCLUSIVE', JGZZGLJRB.le_postal_codeformula(:g_legal_entity_id),
                       'SHARED',     JGZZGLJRB.le_postal_codeformula(&SELECT_LE), 
			'') LE_POSTAL_CODE, 
   decode(:g_acctg_code,'EXCLUSIVE', JGZZGLJRB.le_registration_numberformula(:g_legal_entity_id),
                       'SHARED',     JGZZGLJRB.le_registration_numberformula(&SELECT_LE), 
			'') LE_REGISTRATION_NUMBER,
    &SELECT_ACCOUNT ACCOUNT,
    &SELECT_ACCT_SEG ACCOUNT_VALUE,
    &SELECT_BAL_SEG BALANCING_SEGMENT_VALUE,
    &SELECT_CC_SEG COST_CENTER_VALUE,
    &SELECT_IC_SEG INTERCOMPANY_SEGMENT_VALUE,
    &SELECT_MGT_SEG MANAGEMENT_SEGMENT_VALUE,
    &SELECT_ST_SEG SECONDARY_TRACK_SEGMENT_VALUE,
    &SELECT_BEGIN_BAL BEGIN_BALANCE,
    GLBAL.PERIOD_NAME PERIOD_NAME,
    GLBAL.PERIOD_NUM PERIOD_NUM,
    GLBAL.CODE_COMBINATION_ID CCID,
    GLP.EFFECTIVE_PERIOD_NUM
FROM
    GL_PERIOD_STATUSES GLP,
    GL_CODE_COMBINATIONS CC,
    &FROM_LNSV
    GL_BALANCES GLBAL
WHERE GLBAL.LEDGER_ID = :P_LEDGER_ID
&BUDENC_WHERE_BAL
&CURR_WHERE_BAL
AND GLBAL.CURRENCY_CODE = :BAL_CURRENCY
AND GLBAL.ACTUAL_FLAG = :P_BALANCE_TYPE
AND GLBAL.TEMPLATE_ID IS NULL
AND GLBAL.PERIOD_NAME = GLP.PERIOD_NAME
AND GLBAL.CODE_COMBINATION_ID = CC.CODE_COMBINATION_ID
&LE_WHERE
&PERIOD_WHERE
AND GLP.APPLICATION_ID = 101
AND GLP.LEDGER_ID = :P_LEDGER_ID
&DAS_WHERE
&SEG_SECURITY_WHERE
&ACCT_WHERE
AND CC.CHART_OF_ACCOUNTS_ID = :P_COA_ID
AND &LEX_FILTER_WHERE
AND     &FLEXDATA_SECURE = 'N'
ORDER BY 
          decode(:g_acctg_code,'EXCLUSIVE', JGZZGLJRB.legal_entity_nameformula(:g_legal_entity_id),
                       'SHARED',     JGZZGLJRB.legal_entity_nameformula(&SELECT_LE), 
			''),
         effective_period_num,
	 &SELECT_BAL_SEG,
         &SELECT_ACCT_SEG,
	 &SELECT_CC_SEG
--------------------------------------------------------------------General Ledger Journal Entry Report Data Model------------------------------------------------
SELECT  
    --&P_PERIOD_INX_HINT
    LGR.NAME LEDGER_NAME,
    LGR.LEDGER_ID LEDGER_ID,
    LGR.CURRENCY_CODE LGR_CURRENCY_CODE,
    glc.acctg_environment_code ENVIRONMENT_CODE,
    lgr.configuration_id CONFIGURATION_ID,
	&ACCT  ACCT,
	&ACCT_DESC ACCT_DESC,
    &SELECT_ACCOUNT ACCOUNT,
    &SELECT_ACCT_SEG ACCT_VALUE,
    &SELECT_BAL_SEG BALANCING_SEGMENT_VALUE,
    &SELECT_CC_SEG COST_CENTER_VALUE,
    &SELECT_IC_SEG INTERCOMPANY_SEG_VAL,
    &SELECT_MGT_SEG MANAGEMENT_SEGMENT_VALUE,
    &SELECT_ST_SEG SECONDARY_TRACK_SEG_VAL,
    GLBATCH.NAME BATCH_NAME,
    GLBATCH.DESCRIPTION BATCH_DESC,
    GLBATCH.ACTUAL_FLAG ACTUAL_FLAG,
    DECODE(GLBATCH.POSTED_DATE, NULL, NULL, TO_CHAR(GLBATCH.POSTED_DATE,  'YYYY-MM-DD') || 'T' ||  
    TO_CHAR(GLBATCH.POSTED_DATE,'HH24:MI:SS')) BATCH_POSTED_DATE,
    JGZZGLJRN.POSTING_STATUS_PARAM_p BATCH_STATUS,
    LOOK.MEANING BATCH_POSTED_STATUS,
    GLH.NAME JRNL_NAME,
    GLH.DESCRIPTION JRNL_DESC,
    GLH.PERIOD_NAME PERIOD_NAME,
    GLH.CURRENCY_CODE JRNL_CURRENCY_CODE,
    TO_CHAR(GLH.DEFAULT_EFFECTIVE_DATE, 'YYYY-MM-DD') || 'T' ||  
    TO_CHAR(GLH.DEFAULT_EFFECTIVE_DATE, 'HH24:MI:SS') JRNL_EFFECTIVE_DATE,
    NVL(SRC.USER_JE_SOURCE_NAME, '**********') JRNL_SOURCE,
    NVL(CAT.USER_JE_CATEGORY_NAME, '**********') JRNL_CATEGORY,
    FSV.HEADER_NAME JRNL_ACCT_SEQ_NAME,
    FSV.VERSION_NAME JRNL_ACCT_SEQ_VERSION,
    GLH.POSTING_ACCT_SEQ_VALUE JRNL_ACCT_SEQ_NUM,
    DOCSEQ.NAME JRNL_DOC_SEQ_NAME,
    GLH.DOC_SEQUENCE_VALUE JRNL_DOC_SEQ_NUM,
    GLL.JE_LINE_NUM JRNL_LINE_NUM,
    GLL.ENTERED_DR		ENTERED_DR,
    GLL.ENTERED_CR		ENTERED_CR,
    GLL.ACCOUNTED_DR	ACCOUNTED_DR,
    GLL.ACCOUNTED_CR	ACCOUNTED_CR,
    GLL.DESCRIPTION JRNL_LINE_DESC,
    GLL.SUBLEDGER_DOC_SEQUENCE_ID  REFERENCE1,
    GLL.CURRENCY_CODE              JRNL_LINE_CURRENCY_CODE,
    GLH.CLOSE_ACCT_SEQ_VALUE     JRNL_REP_SEQ_NUM,
    FSV2.VERSION_NAME              JRNL_REP_SEQ_VERSION,                                                                                
    FSV2.HEADER_NAME               JRNL_REP_SEQ_NAME,
    &SELECT_LE LEGAL_ENTITY_ID, 
    decode(:g_acctg_code,'EXCLUSIVE', JGZZGLJRN.legal_entity_nameformula(:g_legal_entity_id, :LEGAL_ENTITY_NAME),
    'SHARED', JGZZGLJRN.legal_entity_nameformula(&SELECT_LE, :LEGAL_ENTITY_NAME), '') LEGAL_ENTITY_NAME,
    decode(:g_acctg_code,'EXCLUSIVE', JGZZGLJRN.le_address_line_1formula(:g_legal_entity_id, :LE_ADDRESS_LINE_1), 
    'SHARED', JGZZGLJRN.le_address_line_1formula(&SELECT_LE, :LE_ADDRESS_LINE_1), '') LE_ADDRESS_LINE_1, 
    decode(:g_acctg_code,'EXCLUSIVE', JGZZGLJRN.le_address_line_2formula(:g_legal_entity_id, :LE_ADDRESS_LINE_2), 
    'SHARED',     JGZZGLJRN.le_address_line_2formula(&SELECT_LE, :LE_ADDRESS_LINE_2), '') LE_ADDRESS_LINE_2, 
    decode(:g_acctg_code,'EXCLUSIVE', JGZZGLJRN.le_address_line_3formula(:g_legal_entity_id, :LE_ADDRESS_LINE_3), 
    'SHARED', JGZZGLJRN.le_address_line_3formula(&SELECT_LE, :LE_ADDRESS_LINE_3), '') LE_ADDRESS_LINE_3, 
    decode(:g_acctg_code,'EXCLUSIVE', JGZZGLJRN.le_cityformula(:g_legal_entity_id, :LE_CITY), 
    'SHARED', JGZZGLJRN.le_cityformula(&SELECT_LE, :LE_CITY), '') LE_CITY, 
    decode(:g_acctg_code,'EXCLUSIVE', JGZZGLJRN.le_postal_codeformula(:g_legal_entity_id, :LE_POSTAL_CODE), 
    'SHARED', JGZZGLJRN.le_postal_codeformula(&SELECT_LE, :LE_POSTAL_CODE), '') LE_POSTAL_CODE, 
    decode(:g_acctg_code,'EXCLUSIVE', JGZZGLJRN.le_registration_numberformula(:g_legal_entity_id, :LE_REGISTRATION_NUMBER), 
    'SHARED', JGZZGLJRN.le_registration_numberformula(&SELECT_LE, :LE_REGISTRATION_NUMBER), '') LE_REGISTRATION_NUMBER,
    decode(:g_acctg_code,'EXCLUSIVE', JGZZGLJRN.le_activity_codeformula(:g_legal_entity_id, :LE_ACTIVITY_CODE), 
    'SHARED', JGZZGLJRN.le_activity_codeformula(&SELECT_LE, :LE_ACTIVITY_CODE), '') LE_ACTIVITY_CODE
FROM   
&FROM_LNSV
&P_FROM_CLAUSE
WHERE CAT.JE_CATEGORY_NAME = GLH.JE_CATEGORY
AND SRC.JE_SOURCE_NAME = GLH.JE_SOURCE
AND GLH.DOC_SEQUENCE_ID = DOCSEQ.DOC_SEQUENCE_ID (+)
AND GLH.POSTING_ACCT_SEQ_VERSION_ID = FSV.SEQ_VERSION_ID (+)
AND GLH.CLOSE_ACCT_SEQ_VERSION_ID = FSV2.SEQ_VERSION_ID(+) -- added for bug 1830686
AND GLBATCH.AVERAGE_JOURNAL_FLAG = 'N' 
AND GLBATCH.JE_BATCH_ID = GLH.JE_BATCH_ID
&P_POSTING_STATUS
&P_HEADER_POSTING_STATUS
&CURR_WHERE_JRNL
&P_DATE_WHERE
&P_LEDGER_WHERE
AND GLH.LEDGER_ID = LGR.LEDGER_ID
AND lgr.configuration_id = glc.configuration_id
&P_BALANCE_TYPE_WHERE
AND GLL.PERIOD_NAME = GLP.PERIOD_NAME
AND GLP.APPLICATION_ID = 101
AND GLP.LEDGER_ID = LGR.LEDGER_ID 
AND GLBATCH.STATUS= LOOK.LOOKUP_CODE
AND LOOK.LOOKUP_TYPE = 'MJE_BATCH_STATUS'
&PERIOD_WHERE
&DAS_WHERE
&SEG_SECURITY_WHERE
&ACCT_WHERE
AND CC.CHART_OF_ACCOUNTS_ID = :P_COA_ID
AND &LEX_FILTER_WHERE
&P_SOURCE_WHERE
&P_CATEGORY_WHERE
&P_BATCH_WHERE
&P_DOC_SEQ_WHERE
&P_ACCT_SEQ_WHERE
&P_REP_SEQ_WHERE
&LE_WHERE
AND     &FLEXDATA_SECURE = 'N'
order by JRNL_EFFECTIVE_DATE, BATCH_NAME, JRNL_NAME, JRNL_LINE_NUM

----------------------------------------------------------------------General Ledger Journal Entry Report Data Model for Germany--------------------------------------------
SELECT  
    LGR.NAME LEDGER_NAME,
    LGR.LEDGER_ID LEDGER_ID,
    glc.acctg_environment_code ENVIRONMENT_CODE,
    lgr.configuration_id CONFIGURATION_ID,
	cc.DESCRIPTION ACCT_DESC,
	&ACCT  ACCT,
	&ACCT_DESC ACCT_DESC,	
    &SELECT_ACCOUNT ACCOUNT,
    &SELECT_ACCT_SEG ACCT_VALUE,
    &SELECT_BAL_SEG BALANCING_SEGMENT_VALUE,
    &SELECT_CC_SEG COST_CENTER_VALUE,
    &SELECT_IC_SEG INTERCOMPANY_SEG_VAL,
    &SELECT_MGT_SEG MANAGEMENT_SEGMENT_VALUE,
    &SELECT_ST_SEG SECONDARY_TRACK_SEG_VAL,
    GLBATCH.NAME BATCH_NAME,
    GLBATCH.DESCRIPTION BATCH_DESC,
    GLBATCH.ACTUAL_FLAG ACTUAL_FLAG,
    DECODE(GLBATCH.POSTED_DATE, NULL, NULL, TO_CHAR(GLBATCH.POSTED_DATE,  'YYYY-MM-DD') || 'T' ||  
    TO_CHAR(GLBATCH.POSTED_DATE,'HH24:MI:SS')) BATCH_POSTED_DATE,
    JG_REP_DE_GL_JRN_PKG.POSTING_STATUS_PARAM_p BATCH_STATUS,
    LOOK.MEANING BATCH_POSTED_STATUS,
    GLH.NAME JRNL_NAME,
    GLH.DESCRIPTION JRNL_DESC,
    GLH.PERIOD_NAME PERIOD_NAME,
    GLH.CURRENCY_CODE JRNL_CURRENCY_CODE,
    TO_CHAR(GLH.DEFAULT_EFFECTIVE_DATE, 'YYYY-MM-DD') || 'T' ||  
    TO_CHAR(GLH.DEFAULT_EFFECTIVE_DATE, 'HH24:MI:SS') JRNL_EFFECTIVE_DATE,
    NVL(SRC.USER_JE_SOURCE_NAME, '**********') JRNL_SOURCE,
    NVL(CAT.USER_JE_CATEGORY_NAME, '**********') JRNL_CATEGORY,
    FSV.HEADER_NAME JRNL_ACCT_SEQ_NAME,
    FSV.VERSION_NAME JRNL_ACCT_SEQ_VERSION,
    GLH.POSTING_ACCT_SEQ_VALUE JRNL_ACCT_SEQ_NUM,
    DOCSEQ.NAME JRNL_DOC_SEQ_NAME,
    GLH.DOC_SEQUENCE_VALUE JRNL_DOC_SEQ_NUM,
    GLL.JE_LINE_NUM JRNL_LINE_NUM,
    GLL.ENTERED_DR		ENTERED_DR,
    GLL.ENTERED_CR		ENTERED_CR,
    GLL.ACCOUNTED_DR	ACCOUNTED_DR,
    GLL.ACCOUNTED_CR	ACCOUNTED_CR,
    GLL.DESCRIPTION JRNL_LINE_DESC,
    GLL.SUBLEDGER_DOC_SEQUENCE_ID  REFERENCE1,
    GLH.CLOSE_ACCT_SEQ_VALUE     JRNL_REP_SEQ_NUM,
    FSV2.VERSION_NAME              JRNL_REP_SEQ_VERSION,
    FSV2.HEADER_NAME               JRNL_REP_SEQ_NAME
FROM   &P_FROM_CLAUSE 
WHERE CAT.JE_CATEGORY_NAME = GLH.JE_CATEGORY
AND SRC.JE_SOURCE_NAME = GLH.JE_SOURCE
AND GLH.DOC_SEQUENCE_ID = DOCSEQ.DOC_SEQUENCE_ID (+)
AND GLH.POSTING_ACCT_SEQ_VERSION_ID = FSV.SEQ_VERSION_ID (+)
AND GLH.CLOSE_ACCT_SEQ_VERSION_ID = FSV2.SEQ_VERSION_ID(+) -- added for bug 1830686
AND GLBATCH.AVERAGE_JOURNAL_FLAG = 'N' 
AND GLBATCH.JE_BATCH_ID = GLH.JE_BATCH_ID
&P_POSTING_STATUS
&P_HEADER_POSTING_STATUS
&CURR_WHERE_JRNL
&P_DATE_WHERE
&P_LEDGER_WHERE
AND GLH.LEDGER_ID = LGR.LEDGER_ID
AND lgr.configuration_id = glc.configuration_id
&P_BALANCE_TYPE_WHERE
AND GLL.PERIOD_NAME = GLP.PERIOD_NAME
AND GLP.APPLICATION_ID = 101
AND GLP.LEDGER_ID = LGR.LEDGER_ID 
AND GLBATCH.STATUS= LOOK.LOOKUP_CODE
AND LOOK.LOOKUP_TYPE = 'MJE_BATCH_STATUS'
&PERIOD_WHERE
&DAS_WHERE
&SEG_SECURITY_WHERE
&ACCT_WHERE
AND CC.CHART_OF_ACCOUNTS_ID = :P_COA_ID
&P_SOURCE_WHERE
&P_CATEGORY_WHERE
&P_BATCH_WHERE
&P_DOC_SEQ_WHERE
&P_ACCT_SEQ_WHERE
&P_REP_SEQ_WHERE
AND &LEX_FILTER_WHERE
AND     &FLEXDATA_SECURE = 'N'
order by JRNL_EFFECTIVE_DATE

-------------------------------------------------------------------------Journals Batch Summary Data Model---------------------------------------------------------
select  &BALANCING_SEG_ORDERBY          Bal_Seg,
        PS.start_date                   Period_Date,
	PS.period_name                  Period,
	JEB.name                        Name,
	JEB.posted_date                 Posted_date,
	JEB.creation_date               Created_date,
        JEB.created_by                  BATCH_CREATED_BY,
        JEB.last_updated_by             BATCH_LAST_UPDATED_BY,
        JEB.last_update_date            BATCH_LAST_UPDATE_DATE,
        JEB.last_update_login           BATCH_LAST_UPDATE_LOGIN,
	min(gl_journals_batch_rpt_pkg.batch_type(JEB.actual_flag)) Batch_Type,
	SRC.user_je_source_name         Source,
	JEH.doc_sequence_value          Seq_Value,
	min(decode(JEH.actual_flag, 'A', null, 'E', gl_journals_batch_rpt_pkg.enc_type(JEH.encumbrance_type_id))) Encumbrance_Type,
	CAT.user_je_category_name       Category,
	L.name                          LedgerName,
	L.CURRENCY_CODE                 LedgerCurrency,
	--&DEB_SELECT                     Debit,
	--&CRE_SELECT                     Credit,
	SUM(nvl(JEL.entered_dr,0))      Debit,
	SUM(nvl(JEL.entered_cr,0))      Credit,
	&FOR_BAL_SEG                    For_Bal_Seg,
	&FOR_COMP_NAME                  For_Comp_Name
from	GL_PERIOD_STATUSES   PS,
	GL_JE_HEADERS        JEH,
	GL_JE_LINES          JEL,
	GL_CODE_COMBINATIONS CC,
	GL_JE_BATCHES        JEB,
	GL_JE_CATEGORIES     CAT,
	GL_JE_SOURCES        SRC,
	GL_LEDGERS           L,
	&LEDGER_FROM
	gl_daily_conversion_types gdct
where
	PS.APPLICATION_ID = 101 
and     PS.LEDGER_ID = JEH.LEDGER_ID 
and     ( :C_START_DATE between PS.start_date and PS.end_date  or  
          :C_END_DATE between PS.start_date and PS.end_date    or   
	  (  PS.start_date >= :C_START_DATE and  PS.end_date <= :C_END_DATE )              
	)
and           JEH.period_name      =  PS.period_name
and			  JEH.status           = 'P'
--and           JEH.actual_flag      = 'A'
and           JEH.ledger_id        = L.ledger_id
and      JEL.period_name           =  JEH.period_name
and      JEL.je_header_id          =  JEH.je_header_id
and      JEL.status                = 'P'
and      JEL.effective_date between :C_START_DATE and :C_END_DATE
and      CC.code_combination_id   =  JEL.code_combination_id
and      CC.summary_flag          =  'N'
and      CC.template_id is null
and      CC.chart_of_accounts_id  = :STRUCT_NUM
and      CC.detail_posting_allowed_flag = 'Y'
--and      JEB.je_batch_id = decode(CC.code_combination_id, NULL, JEH.je_batch_id, JEH.je_batch_id) -- rrajarap
and      JEB.je_batch_id = JEH.je_batch_id -- rrajarap
--and      CAT.je_category_name = decode(CC.code_combination_id, NULL, JEH.je_category, JEH.je_category)  -- rrajarap
and      CAT.je_category_name = JEH.je_category  -- rrajarap
--and      SRC.je_source_name = decode(CC.code_combination_id, NULL, JEH.je_source, JEH.je_source) -- rrajarap
and      SRC.je_source_name = JEH.je_source -- rrajarap 
/* Fusion initiative multi currency change starts */ 
and  gdct.conversion_type = JEL.currency_conversion_type
/*changed from JEH.currency_conversion_type to JEL.currency_conversion_type. bug 	9198433
/* Fusion initiative multi currency change ends */
AND 'Y' != &P_FISCAL_ADJ_FLAG
AND &C_WHERE_PERIOD
AND &ACCESS_WHERE
AND &LEDGER_WHERE
AND JEL.CURRENCY_CODE = :P_CURRENCY_CODE   -- rrajarap bug # 9195217
AND &BALANCING_SEG_WHERE
AND &BAL_SECURE = 'N'
GROUP BY  &BALANCING_SEG_ORDERBY, --&BALANCING_SEG modified to &BALANCING_SEG_ORDERBY fix for bug # 9195198
          &FOR_BAL_SEG,
          &FOR_COMP_NAME,
          --&BAL_SECURE, Bug 32172497
          PS.start_date,
          PS.period_name,
          CAT.user_je_category_name,
          JEB.name,
          JEB.actual_flag,
          SRC.user_je_source_name,
          JEH.doc_sequence_value,
          JEH.encumbrance_type_id,
          JEB.creation_date,
          JEB.posted_date,
          JEB.created_by,
          JEB.last_updated_by,
          JEB.last_update_date,
          JEB.last_update_login,
          L.name,
          L.currency_code
	  --,&BALANCING_SEG_ORDERBY
order by  L.name,
          &BALANCING_SEG_ORDERBY,
          PS.start_date,
          CAT.user_je_category_name,
          JEB.name
-------------------------------------------------------------Journals Data Model----------------------------------------------------------------------------
WITH action_user AS (SELECT MAX(action_date) action_date,
                                                   MAX(display_name) display_name,
                                                   action_code,
                                                   je_batch_id
                                              FROM gl_je_action_log l, 
                                                   per_users u, 
                                                   per_person_names_f_v n		
                                             WHERE LOWER(l.user_id) = LOWER(u.username)
                                               AND n.person_id = u.person_id
                                          GROUP BY je_batch_id,
                                                   action_code),
                             funds_desc AS  (SELECT meaning
                                                  ,lookup_code
                                              FROM fnd_lookup_values_vl
                                             WHERE lookup_type = 'XCC_BC_FUNDS_STATUSES')
                             &FLEX_SEG_WITH
        SELECT
        S.user_je_source_name                   Source,
        B.name                                  Batch_Name,
        to_char(B.default_effective_date, 'YYYY-MM-DD"T"HH24:MI:SS')  Batch_Eff_date,
        B.je_batch_id                           Batch_Id,
--        B.actual_flag                           Actual_Flag,        
        funds_status.meaning                    Funds_Status,
        B.average_journal_flag                  Average_Journal_Flag,
        NVL(au_created.display_name,B.created_by)                 BATCH_CREATED_BY_NAME, 
        NVL(au_created.action_date,B.creation_date)               BATCH_CREATED_DATE,
        DECODE(B.status, 'P', au_posted.display_name, null)     BATCH_POSTED_BY, 
        DECODE(B.status, 'P', NVL(au_posted.action_date,B.posted_date), null) Batch_Posted_Date,
		LK.meaning                              BATCH_APPROVAL_STATUS,
        DECODE(B.approval_status_code, 'A' ,au_approved.display_name, null)    BATCH_APPROVED_BY, 
        DECODE(B.approval_status_code, 'A' ,au_approved.action_date, null)      BATCH_APPROVED_DATE,        
        B.created_by                            BATCH_CREATED_BY,
        B.creation_date                         BATCH_CREATION_DATE,
        B.last_updated_by                       BATCH_LAST_UPDATED_BY,
        B.last_update_date                      BATCH_LAST_UPDATE_DATE,
        B.last_update_login                     BATCH_LAST_UPDATE_LOGIN,
        D.je_header_id                          Header_id,
        D.name                                  Header_Name,
        L.name                                  Ledger_Name,
        L.currency_code                         Ledger_Currency,
        C.user_je_category_name                 Category,
        D.currency_code                         Entered_currency,
        D.external_reference                    Header_Reference,
        to_char(D.currency_conversion_date, 'YYYY-MM-DD"T"HH24:MI:SS')  Conversion_Date,
        D.currency_conversion_type              Conversion_Type,
        ROUND(D.currency_conversion_rate, 6)    Conversion_Rate,
        DECODE(:P_ACTUAL_FLAG, 'A', null, 'E', NVL(:ENCUMBRANCE_TYPE_PARAM, gl_journals_rpt_pkg.enc_type(D.encumbrance_type_id))) Encumbrance_Type,
        J.currency_code                         Line_Currency,
        to_char(J.currency_conversion_date, 'YYYY-MM-DD"T"HH24:MI:SS') Line_Conversion_date,
        J.currency_conversion_type              Line_Conversion_Type,
        ROUND(J.currency_conversion_rate, 6)    Line_Conversion_Rate,
        J.je_line_num                           Je_Line_Num,
        j.entered_dr                            line_ent_dr,
        j.entered_cr                            line_ent_cr,
        j.accounted_dr                          line_acc_dr,
        j.accounted_cr                          line_acc_cr,
        J.description                           Line_Description,
        to_char(J.effective_date, 'YYYY-MM-DD"T"HH24:MI:SS') Line_Effective_Date,
        J.reference_1                           reference1_line_item,
        J.reference_2                           reference2,
        J.reference_3                           reference3,
        J.reference_4                           reference4_source_item,
        J.reference_5                           reference5,
        J.reference_6                           reference6,
        J.reference_7                           reference7,
        J.reference_8                           reference8,
        J.reference_9                           reference9,
        J.reference_10                          reference10,
        nvl(J.stat_amount,0)                    Line_Stat_Amount,
        &ACCOUNT_FLEX                           FLEXDATA_DSP
FROM
/*        gl_daily_conversion_types       GDCT,*/
        gl_je_sources                   S,
        gl_je_categories                C,
        gl_je_lines                     J,
        gl_code_combinations            CC,
        gl_je_headers                   D,
        gl_je_batches                   B,
        &LEDGER_FROM
        gl_ledgers                      L,
        gl_lookups                      LK,
        action_user                     au_created,
        action_user                     au_posted,
        action_user                     au_approved,
        funds_desc                      funds_status
        &FLEX_SEG_FROM
WHERE
        S.je_source_name        = D.je_source
/*AND     GDCT.conversion_type    = J.currency_conversion_type*/
AND     C.je_category_name      = D.je_category
AND     J.code_combination_id   = CC.code_combination_id
AND     J.je_header_id          = D.je_header_id
AND     (D.display_alc_journal_flag is null or D.display_alc_journal_flag = 'Y')
AND     D.je_batch_id           = B.je_batch_id
AND     L.ledger_id             = D.LEDGER_ID
AND     LK.lookup_type = 'JE_BATCH_APPROVAL_STATUS'
AND     LK.lookup_code = B.approval_status_code
AND     B.actual_flag           = :P_ACTUAL_FLAG   
AND     au_created.je_batch_id(+) = B.je_batch_id
AND     au_created.action_code(+) = 'CREATED'
AND     au_posted.je_batch_id(+) = B.je_batch_id
AND     au_posted.action_code(+) = 'POSTED'
AND     au_approved.je_batch_id(+) = B.je_batch_id
AND     au_approved.action_code(+) = 'APPROVED'
AND     funds_status.lookup_code(+) =B.funds_status_code     
        &JRNL_SOURCE_WHERE
	    &BATCH_NAME_WHERE
        &CURRENCY_WHERE /*bug 12327572*/ 
        &POSTING_STATUS_WHERE
        &PERIOD_WHERE
        &DAS_WHERE
        &LEDGER_WHERE
        &ENCUM_WHERE		
        &FLEX_SEG_WHERE
ORDER BY
          S.user_je_source_name,
          B.actual_flag,
          B.name,
          B.default_effective_date,
          L.name,
          D.name,
          J.je_line_num

-----------------------------------------------------Journals Extract Data Model----------------------------------------------------------------------------------------------
select  &BALANCING_SEG_ORDERBY          Bal_Seg,
        PS.start_date                   Period_Date,
	PS.period_name                  Period,
	JEB.name                        Name,
	JEB.posted_date                 Posted_date,
	JEB.creation_date               Created_date,
        JEB.created_by                  BATCH_CREATED_BY,
        JEB.last_updated_by             BATCH_LAST_UPDATED_BY,
        JEB.last_update_date            BATCH_LAST_UPDATE_DATE,
        JEB.last_update_login           BATCH_LAST_UPDATE_LOGIN,
	min(JG_JOURNALS_BATCH_RPT_EXT_PKG.batch_type(JEB.actual_flag)) Batch_Type,
	SRC.user_je_source_name         Source,
	JEH.doc_sequence_value          Seq_Value,
	min(decode(JEH.actual_flag, 'A', null, 'E', JG_JOURNALS_BATCH_RPT_EXT_PKG.enc_type(JEH.encumbrance_type_id))) Encumbrance_Type,
	CAT.user_je_category_name       Category,
	L.name                          LedgerName,
	L.CURRENCY_CODE                 LedgerCurrency,
	--&DEB_SELECT                     Debit,
	--&CRE_SELECT                     Credit,
	SUM(nvl(JEL.entered_dr,0))      Debit,
	SUM(nvl(JEL.entered_cr,0))      Credit,
	&FOR_BAL_SEG                    For_Bal_Seg,
	&FOR_COMP_NAME                  For_Comp_Name
from	GL_PERIOD_STATUSES   PS,
	GL_JE_HEADERS        JEH,
	GL_JE_LINES          JEL,
	GL_CODE_COMBINATIONS CC,
	GL_JE_BATCHES        JEB,
	GL_JE_CATEGORIES     CAT,
	GL_JE_SOURCES        SRC,
	GL_LEDGERS           L,
	&LEDGER_FROM
	gl_daily_conversion_types gdct
where
	PS.APPLICATION_ID = 101 
and     PS.LEDGER_ID = JEH.LEDGER_ID 
/*and     ( :C_START_DATE between PS.start_date+0 and PS.end_date+0  or  
          :C_END_DATE between PS.start_date+0 and PS.end_date+0    or   
	  (  PS.start_date+0 >= :C_START_DATE and  PS.end_date+0 <= :C_END_DATE )              
	)
*/
and           JEH.period_name      =  PS.period_name
and			  JEH.status           = 'P'
--and           JEH.actual_flag      = 'A'
and           JEH.ledger_id        = L.ledger_id
and      JEL.period_name           =  JEH.period_name
and      JEL.je_header_id          =  JEH.je_header_id
and      JEL.status                = 'P'
-- and      JEL.effective_date between :C_START_DATE and :C_END_DATE
and      CC.code_combination_id   =  JEL.code_combination_id
and      CC.summary_flag          =  'N'
and      CC.template_id is null
and      CC.chart_of_accounts_id  = :STRUCT_NUM
and      CC.detail_posting_allowed_flag = 'Y'
--and      JEB.je_batch_id = decode(CC.code_combination_id, NULL, JEH.je_batch_id, JEH.je_batch_id) -- rrajarap
and      JEB.je_batch_id = JEH.je_batch_id -- rrajarap
--and      CAT.je_category_name = decode(CC.code_combination_id, NULL, JEH.je_category, JEH.je_category)  -- rrajarap
and      CAT.je_category_name = JEH.je_category  -- rrajarap
--and      SRC.je_source_name = decode(CC.code_combination_id, NULL, JEH.je_source, JEH.je_source) -- rrajarap
and      SRC.je_source_name = JEH.je_source -- rrajarap 
/* Fusion initiative multi currency change starts */ 
and  gdct.conversion_type = JEL.currency_conversion_type
/*changed from JEH.currency_conversion_type to JEL.currency_conversion_type. bug 	9198433
/* Fusion initiative multi currency change ends */
/* AND 'Y' != DECODE(TO_NUMBER((SELECT GP1.PERIOD_YEAR
                               FROM GL_PERIODS GP1
                              WHERE GP1.PERIOD_SET_NAME = L.PERIOD_SET_NAME
                                AND GP1.PERIOD_TYPE = L.ACCOUNTED_PERIOD_TYPE
                                AND :P_END_DATE
                                BETWEEN GP1.start_date AND GP1.end_date
                                AND GP1.adjustment_period_flag like decode(:P_ADJUSTMENT_PERIODS,'N','N','%')
                                AND    rownum = 1)) -
                  TO_NUMBER((SELECT GP2.PERIOD_YEAR
                               FROM GL_PERIODS GP2
                              WHERE GP2.PERIOD_SET_NAME = L.PERIOD_SET_NAME
                                AND GP2.PERIOD_TYPE = L.ACCOUNTED_PERIOD_TYPE
                                AND :P_START_DATE
                                BETWEEN GP2.start_date and GP2.end_date
                                AND GP2.adjustment_period_flag like decode(:P_ADJUSTMENT_PERIODS,'N','N','%')
                                AND rownum = 1)), 0, 'N', DECODE(:P_ADJUSTMENT_PERIODS, 'N', 'Y', 'N')) */
AND &C_WHERE_PERIOD
AND &ACCESS_WHERE
AND &LEDGER_WHERE
AND JEL.CURRENCY_CODE = :P_CURRENCY_CODE   -- rrajarap bug # 9195217
AND &BALANCING_SEG_WHERE
AND &BAL_SECURE = 'N'
AND &LP_INCREMENTAL_EXPORT
GROUP BY  &BALANCING_SEG_ORDERBY, --&BALANCING_SEG modified to &BALANCING_SEG_ORDERBY fix for bug # 9195198
          &FOR_BAL_SEG,
          &FOR_COMP_NAME,
          &BAL_SECURE,
          PS.start_date,
          PS.period_name,
          CAT.user_je_category_name,
          JEB.name,
          JEB.actual_flag,
          SRC.user_je_source_name,
          JEH.doc_sequence_value,
          JEH.encumbrance_type_id,
          JEB.creation_date,
          JEB.posted_date,
          JEB.created_by,
          JEB.last_updated_by,
          JEB.last_update_date,
          JEB.last_update_login,
          L.name,
          L.currency_code
	  --,&BALANCING_SEG_ORDERBY
order by  L.name,
          &BALANCING_SEG_ORDERBY,
          PS.start_date,
          CAT.user_je_category_name,
          JEB.name
		  
--------------------------------------------------------------------MexicanJournalsDm-------------------------------------------------------------------------------------
--Q_JOURNALS
SELECT je_header_id,
  substr(gl_je_name,1,(50 - (length(to_char(je_header_id))+1))) || ' ' || to_char(je_header_id) gl_je_name,
  TO_CHAR(journal_date,'YYYY-MM-DD') journal_date,
  substr(header_description,1,300) header_description,
  entity_code,
  event_class_code,
  request_id,
  application_id,
  sla_header_id,
  mx_je_line_id,
  je_line_num,
  SUBSTR(line_description,1,200) line_description,
  NVL(accounted_cr,0) accounted_cr,
  NVL(ACCOUNTED_DR,0) ACCOUNTED_DR,
  SUBSTR(NATURAL_ACCOUNT||NVL2(SUB_ACCT,'-'||SUB_ACCT,NULL),1,100) ACCT,
  SUBSTR(natural_account_desc||nvl2(sub_acct_desc,'-'||sub_acct_desc,NULL),1,100) acct_desc
FROM jl_mx_je_lines_t
WHERE request_id = :FUSIONAPPS_REQUEST_ID
ORDER BY journal_date,
  gl_je_name,
  JE_HEADER_ID
--Q_PAYMENT
SELECT jld.payment_method_code,
  jld.payment_type_code,
  jld.processing_type,
  jld.payment_id,
  SUBSTR(jld.payment_number,1,20) payment_number,
  jld.payment_amount,
  TO_CHAR(jld.payment_date,'YYYY-MM-DD') payment_date,
  DECODE(jld.PAYMENT_CUR_CODE,'MXN',NULL,jld.PAYMENT_CUR_CODE) PAYMENT_CUR_CODE,
  nvl(DECODE(jld.PAYMENT_CUR_CODE,'MXN',NULL,jld.PAYMENT_EXCHANGE_RATE),1) PAYMENT_EXCHANGE_RATE,
  SUBSTR(jld.source_account_num,1,50) source_account_num,
  DECODE(jld.foreign_source_bank_flag,'Y','999',substr(ce.bank_number,1,3)) source_nat_bank,
  DECODE(jld.foreign_source_bank_flag,'Y',substr(jld.source_bank_name,1,150),'   ') source_frn_bank,
  SUBSTR(jld.dest_acct_num,1,50) dest_acct_num,
  DECODE(jld.foreign_dest_bank_flag,'Y','999',substr(iby.bank_number,1,3)) dest_nat_bank,
  DECODE(jld.foreign_dest_bank_flag,'Y',substr(jld.dest_bank_name,1,150),'   ') dest_frn_bank,
  jld.invoice_id invoice_id,
  jld.invoice_cfdi invoice_cfdi1,
  jld.invoice_cfd_cbb_series invoice_cfd_cbb_series1,
  jld.invoice_cfd_cbb_number invoice_cfd_cbb_number1,
  jld.foreign_invoice_number foreign_invoice_number1,
  jld.invoice_amount inv_amt,
  -- Bug 32393472: start - check gl_je_headers / xla_ae_lines when to display the currency_conversion_rate
  --DECODE(jld.INV_CUR_CODE,'MXN',NULL,jld.INV_CUR_CODE) INV_CUR_CODE1,
  --nvl(DECODE(jld.INV_CUR_CODE,'MXN',NULL,jld.INV_EXCHANGE_RATE),1) INV_EXCHANGE_RATE1,
  DECODE(jl.addit_info_1,NULL,NULL,jld.INV_CUR_CODE) INV_CUR_CODE1,
  nvl(DECODE(jl.addit_info_1,NULL,NULL,jld.INV_EXCHANGE_RATE),1) INV_EXCHANGE_RATE1,
  -- Bug 32393472: end
  jld.addit_info_1 MERCHANT_TP_ID,  -- merchant_taxpayer_id of an expense line
  SUBSTR(jld.third_party_name,1,300) third_party_name,
  jld.third_party_taxpayer_num third_party_taxpayer_id1 ,
  nvl(jld.addit_info_5,'99') payment_method,
  jld.addit_info_4 payment_cfdi,
  jl.entity_code entity_code
FROM JL_MX_JE_LINE_DETAILS_T jld, 
	 JL_MX_JE_LINES_T jl,
     ce_banks_v ce,
     iby_ext_bank_accounts_v iby
WHERE jld.request_id       = :REQUEST_ID
  AND jld.MX_JE_LINE_ID    = :MX_JE_LINE_ID
  AND jl.MX_JE_LINE_ID	   = jld.MX_JE_LINE_ID
  and jld.source_bank_id    = ce.bank_party_id (+)
  and jld.dest_acct_id 	   = iby.bank_account_id (+)
  and (jl.entity_code in ('AP_PAYMENTS','CE_CASHFLOWS') and jl.event_class_code in ('PAYMENTS','RECONCILED PAYMENTS','FUTURE DATED PAYMENTS','REFUNDS','BAT_CLASS'))
UNION ALL
SELECT jld.payment_method_code,
  jld.payment_type_code,
  jld.processing_type,
  jld.payment_id,
  SUBSTR(jld.addit_info_2,1,20) payment_number,
  jld.payment_amount,
  TO_CHAR(jld.payment_date,'YYYY-MM-DD') payment_date,
  DECODE(jld.PAYMENT_CUR_CODE,'MXN',NULL,jld.PAYMENT_CUR_CODE) PAYMENT_CUR_CODE,
  nvl(DECODE(jld.PAYMENT_CUR_CODE,'MXN',NULL,jld.PAYMENT_EXCHANGE_RATE),1) PAYMENT_EXCHANGE_RATE,
  SUBSTR(jld.source_account_num,1,50) source_account_num,
  DECODE(jld.foreign_source_bank_flag,'Y','999',substr(iby.bank_number,1,3)) source_nat_bank,
  DECODE(jld.foreign_source_bank_flag,'Y',substr(jld.source_bank_name,1,150),'   ') source_frn_bank,
  SUBSTR(jld.dest_acct_num,1,50) dest_acct_num,
  DECODE(jld.foreign_dest_bank_flag,'Y','999',substr(ce.bank_number,1,3)) dest_nat_bank,
  DECODE(jld.foreign_dest_bank_flag,'Y',substr(jld.dest_bank_name,1,150),'   ') dest_frn_bank,
  jld.invoice_id invoice_id,
  jld.invoice_cfdi invoice_cfdi1,
  jld.invoice_cfd_cbb_series invoice_cfd_cbb_series1,
  jld.invoice_cfd_cbb_number invoice_cfd_cbb_number1,
  jld.foreign_invoice_number foreign_invoice_number1,
  jld.invoice_amount inv_amt,
  -- Bug 32393472: start - check gl_je_headers / xla_ae_lines when to display the currency_conversion_rate
  --DECODE(jld.INV_CUR_CODE,'MXN',NULL,jld.INV_CUR_CODE) INV_CUR_CODE1,
  --nvl(DECODE(jld.INV_CUR_CODE,'MXN',NULL,jld.INV_EXCHANGE_RATE),1) INV_EXCHANGE_RATE1,
  DECODE(jl.addit_info_1,NULL,NULL,jld.INV_CUR_CODE) INV_CUR_CODE1, 
  nvl(DECODE(jl.addit_info_1,NULL,NULL,jld.INV_EXCHANGE_RATE),1) INV_EXCHANGE_RATE1,
  -- Bug 32393472: end
  jld.addit_info_1 MERCHANT_TP_ID,  -- merchant_taxpayer_id of an expense line
  SUBSTR(jld.third_party_name,1,300) third_party_name,
  jld.third_party_taxpayer_num third_party_taxpayer_id1,
  nvl(jld.addit_info_5,'99') payment_method,
  jld.addit_info_4 payment_cfdi,
  jl.entity_code entity_code
FROM JL_MX_JE_LINE_DETAILS_T jld, 
	 JL_MX_JE_LINES_T jl,
     ce_banks_v ce,
     iby_ext_bank_accounts_v iby
WHERE jld.request_id       = :REQUEST_ID
  AND jld.MX_JE_LINE_ID    = :MX_JE_LINE_ID
  AND jl.MX_JE_LINE_ID	   = jld.MX_JE_LINE_ID
  and jld.dest_bank_id    = ce.bank_party_id (+)
  and jld.source_account_id 	   = iby.bank_account_id (+)
  and (jl.entity_code ='RECEIPTS' and jl.event_class_code in ('RECEIPT','MISC_RECEIPT'))

--Q_INVOICE
SELECT jld.INVOICE_ID,
  jld.INVOICE_CFDI,
  jld.INVOICE_CFD_CBB_SERIES,
  jld.INVOICE_CFD_CBB_NUMBER,
  jld.FOREIGN_INVOICE_NUMBER,
  jld.INVOICE_AMOUNT,
  jld.THIRD_PARTY_ID,
  jld.THIRD_PARTY_TAXPAYER_NUM,
  -- Bug 32393472: start - check gl_je_headers / xla_ae_lines when to display the currency_conversion_rate
  --DECODE(jld.INV_CUR_CODE,'MXN',NULL,jld.INV_CUR_CODE) INV_CUR_CODE,
  --DECODE(jld.INV_CUR_CODE,'MXN',NULL,jld.INV_EXCHANGE_RATE) INV_EXCHANGE_RATE
  DECODE(jl.addit_info_1,NULL,NULL,jld.INV_CUR_CODE) INV_CUR_CODE,
  DECODE(jl.addit_info_1,NULL,NULL,jld.INV_EXCHANGE_RATE) INV_EXCHANGE_RATE
  -- Bug 32393472: end
FROM JL_MX_JE_LINE_DETAILS_T jld, JL_MX_JE_LINES_T jl
WHERE jld.REQUEST_ID       = :REQUEST_ID
AND jld.MX_JE_LINE_ID         = :MX_JE_LINE_ID
AND jl.MX_JE_LINE_ID		= jld.MX_JE_LINE_ID
and ((jl.entity_code = 'AP_INVOICES' and jl.event_class_code in ('INVOICES','CREDIT MEMOS','DEBIT MEMOS','INVOICE_BURDEN',
						'PREPAYMENTS','PREPAYMENT_BURDEN','PREPAYMENT APPLICATIONS','PREPAY_APPLICATION_BURDEN'))	
	or (jl.entity_code = 'TRANSACTIONS' and jl.event_class_code in ('INVOICE','GUARANTEE', 'DEPOSIT','DEBIT_MEMO', 'CREDIT_MEMO','CHARGEBACK'))
or (:application_id is null and :sla_header_id is null))

--Q_PERIOD
select
to_char(start_date,'MM') MONTH,
period_year YEAR
FROM Gl_Period_Statuses
WHERE Ledger_Id = :P_LEDGER_ID
AND APPLICATION_ID = 101
AND Period_Name = :P_PERIOD_FROM

--Q_LE_DETAILS
SELECT SUBSTR(reg.registration_number,1,13) rfc_number,
:p_legal_entity_id p_legal_entity_id,
:p_je_source p_je_source,
:p_coa_id p_coa_id,
:p_account_flexfield_from p_account_flexfield_from,
:p_account_flexfield_to p_account_flexfield_to,
:p_show_adj_periods_flag p_show_adj_periods_flag,
:p_include_zero_amount_flag p_include_zero_amount_flag,
:p_period_from p_period_from,
:p_request_type p_request_type,
:p_audit_req_num p_audit_req_num,
:p_audit_process_num p_audit_process_num,
nvl2(:p_rpt_version,'1.3',:p_rpt_version) p_rpt_version,
:p_seal p_seal,
:p_certificate_num p_certificate_num,
:p_certificate p_certificate,
:p_ledger_id p_ledger_id,
:p_period_to p_period_to,
:p_gl_date_from p_gl_date_from,
:p_gl_date_to p_gl_date_to,
:p_posting_status_code p_posting_status_code,
:p_include_expenses p_include_expenses
FROM xle_registrations reg,
  xle_jurisdictions_vl jur
WHERE reg.source_id          = :P_LEGAL_ENTITY_ID
AND reg.source_table         = 'XLE_ENTITY_PROFILES'
AND reg.jurisdiction_id      = jur.jurisdiction_id
AND jur.registration_code_le = 'RFC'
AND SYSDATE BETWEEN NVL(REG.EFFECTIVE_FROM,SYSDATE) AND NVL(REG.EFFECTIVE_TO,SYSDATE)
AND ROWNUM=1

------------------------------------------------------Reconciled Transactions Report---------------------------------------------------------------------------------
--GLJERECON
SELECT  r.jgzz_recon_id Recon_group, to_char(r.jgzz_recon_date,'YYYY-MM-DD') jgzz_recon_date, r.jgzz_recon_ref, b.name batch_name, h.name je_name,  
  js.user_je_source_name je_source_name, jc.user_je_category_name je_category, l.period_name, to_char(l.effective_date,'YYYY-MM-DD') effective_date, 
  l.je_line_num,  fnd_flex_ext.get_segs('GL','GL#',c.chart_of_accounts_id,c.code_combination_id,null) je_account, 
  gl_flexfields_pkg.get_concat_description(c.chart_of_accounts_id,c.code_combination_id) acct_desc,h.currency_code, 
  l.entered_dr, l.entered_cr, l.accounted_dr,  l.accounted_cr/*,grr.recon_rule_name Recon_Type,
  (SELECT  decode(count(distinct h1.currency_code),1,'Y','N') Show_Total
    FROM gl_je_headers h1
      ,gl_je_lines_recon r1
    WHERE h1.je_header_id        = r1.je_header_id
    and r1.recon_rule_id       = r.recon_rule_id
    and r1.jgzz_recon_id       = r.jgzz_recon_id
    ) show_Total*/
FROM gl_je_batches b
  ,gl_je_headers h
  ,gl_je_lines l
  ,gl_code_combinations c
  ,gl_je_lines_recon r
  ,gl_je_sources js
  ,gl_je_categories jc
  ,gl_period_statuses ps
  --,gl_reconciliation_rules grr
WHERE  b.je_batch_id         = h.je_batch_id
AND h.je_header_id        = l.je_header_id
AND l.code_combination_id = c.code_combination_id
AND l.je_header_id        = r.je_header_id
AND l.je_line_num         = r.je_line_num
AND h.je_source           = js.je_source_name
AND h.je_category         = jc.je_category_name
AND h.period_name         = ps.period_name
AND ps.ledger_id          = h.ledger_id
AND ps.application_id     = 101
AND l.status              = 'P'
AND c.jgzz_recon_flag     = 'Y'
AND h.actual_flag         = 'A'
AND r.jgzz_recon_status   = 'R'
--and r.recon_rule_id       = grr.recon_rule_id
and r.ledger_id           = :p_ledger_id
and r.recon_rule_id       = :p_recon_rule_id
and r.jgzz_recon_id       = nvl(:p_recon_id,r.jgzz_recon_id)
and ps.effective_period_num between :from_period_number and :to_period_number
and &FLEXDATA_SECURE = 'N'
and &LEX_FILTER_WHERE
&DAS_WHERE
&as_of_date_where_clause
order by r.jgzz_recon_id,r.jgzz_recon_date,r.jgzz_recon_ref,nvl2(l.entered_dr,-1,1)

------------------------------------------------------------------Unreconciled Transactions Report--------------------------------------------------------------------------
SELECT   GRR.recon_rule_name recon_type
         ,GCT.concat_segments je_account
         ,GCT.recon_reference
         ,&REC_STATUS_SELECT recon_status
         ,&REC_GROUP_SELECT recon_id
         ,&REC_DATE_SELECT recon_date
         ,GCT.batch_name
         ,GCT.journal_name je_name
         ,js.user_je_source_name je_source
         ,jc.user_je_category_name je_category
         ,h.description JE_DESCRIPTION
         ,GCT.period_name
         ,to_char(GCT.effective_date,'YYYY-MM-DD') effective_date
         ,GCT.je_line_num
         ,GCT.currency_code
         ,entered_dr
         ,entered_cr
         ,accounted_dr
         ,accounted_cr
         ,to_date(sysdate) - to_date(gct.effective_date) days_Outstanding
         ,NVL(accounted_dr,0) - NVL(accounted_cr,0) net_acct_balance
FROM gl_clearing_acct_recon_gt GCT,
     gl_reconciliation_rules GRR,
     gl_je_headers h,
     gl_code_combinations c,
     gl_je_batches gjb,
     gl_lookups l,
     gl_je_sources js,
     gl_je_categories jc
WHERE GCT.recon_rule_id     = GRR.recon_rule_id(+)
AND gct.je_header_id        = h.je_header_id
AND gct.code_combination_id = c.code_combination_id
and GCT.je_batch_id     = Gjb.je_batch_id
and GCT.recon_status    = l.lookup_code
and l.lookup_type       = 'ORA_GL_LINE_RECON_STATUS'
and js.je_source_name   = gjb.je_source
and jc.je_category_name = h.je_category
&DAS_WHERE
AND &FLEXDATA_SECURE = 'N'
ORDER BY  GRR.recon_rule_name
         ,GCT.concat_segments
         ,GCT.recon_reference
		 
---------------------------------------------------------------------Journals Day Book Report----------------------------------------------------------------------
SELECT   &P_HINT_CLAUSE
    	LGR.NAME		LEDGER_NAME,
	LGR.CURRENCY_CODE	LEDGER_CURRENCY,
	LGR.LEDGER_ID		LEDGER_ID,
	GLB.JE_BATCH_ID		BATCH_ID,
    	GLB.NAME		BATCH_NAME,
	GLB.DESCRIPTION		BATCH_DESC,
	GLB.STATUS		BATCH_STATUS_CODE,
     	GLB.POSTED_DATE		BATCH_POSTED_DATE,
     	GLB.DEFAULT_PERIOD_NAME	BATCH_PERIOD_NAME,
     	to_char(GLB.DEFAULT_EFFECTIVE_DATE, 'YYYY-MM-DD"T"HH24:MI:SS') BATCH_EFFECTIVE_DATE,
        GLB.ACTUAL_FLAG			ACTUAL_FLAG,
	GLB.AVERAGE_JOURNAL_FLAG	AVERAGE_JOURNAL_FLAG,
	GLB.APPROVAL_STATUS_CODE	APPROVAL_STATUS_CODE,
	/*GLB.BUDGETARY_CONTROL_STATUS	BUD_CONTROL_STATUS,*//*commented by rchandan for fusion*/
	GLB.RUNNING_TOTAL_DR	BATCH_TOT_DR,
	GLB.RUNNING_TOTAL_CR	BATCH_TOT_CR,
	GLB.RUNNING_TOTAL_ACCOUNTED_DR	BATCH_TOT_ACC_DR,
	GLB.RUNNING_TOTAL_ACCOUNTED_CR	BATCH_TOT_ACC_CR,
	GLB.DATE_CREATED	BATCH_DATE_CREATED,
        GLB.CREATED_BY          BATCH_CREATED_BY,
        GLB.CREATION_DATE       BATCH_CREATION_DATE,
        GLB.LAST_UPDATED_BY     BATCH_LAST_UPDATED_BY,
        GLB.LAST_UPDATE_DATE    BATCH_LAST_UPDATE_DATE,
        GLB.LAST_UPDATE_LOGIN   BATCH_LAST_UPDATE_LOGIN,
        NVL(gl_journals_rpt_pkg.get_action_user(GLB.je_batch_id, 'CREATED'), GLB.created_by)	BATCH_CREATED_BY_NAME,
        DECODE(GLB.status, 'P', gl_journals_rpt_pkg.get_action_user(GLB.je_batch_id, 'POSTED'), null)	BATCH_POSTED_BY,
        DECODE(GLB.approval_status_code, 'A', gl_journals_rpt_pkg.get_action_user(GLB.je_batch_id, 'APPROVED'), null)	BATCH_APPROVED_BY,
	GLH.JE_HEADER_ID	HDR_ID,
	GLH.NAME		HDR_NAME,
	GLH.DESCRIPTION		HDR_DESC,
	GLH.TAX_STATUS_CODE	TAX_STATUS_CODE,
	GLH.RUNNING_TOTAL_DR	HDR_TOT_DR,
	GLH.RUNNING_TOTAL_CR	HDR_TOT_CR,
	GLH.RUNNING_TOTAL_ACCOUNTED_DR	HDR_TOT_ACC_DR,
	GLH.RUNNING_TOTAL_ACCOUNTED_CR	HDR_TOT_ACC_CR,
	GLH.CURRENCY_CODE 	HDR_CURR_CODE, 
	to_char(GLH.CURRENCY_CONVERSION_DATE, 'YYYY-MM-DD"T"HH24:MI:SS') HDR_CONVERSION_DATE, /*rchandan*/
	ROUND(GLH.CURRENCY_CONVERSION_RATE, 6)	HDR_CONVERSION_RATE, /*rchandan*/
	DECODE(GLH.CURRENCY_CONVERSION_TYPE, NULL, NULL, (SELECT d.user_conversion_type FROM GL_DAILY_CONVERSION_TYPES d WHERE d.conversion_type = GLH.currency_conversion_type))	HDR_CONVERSION_TYPE,
	/*GLH.BUDGET_VERSION_ID	BUDGET_VERSION_ID,*//*commented by rchandan for fusion*/
	/*GLH.ENCUMBRANCE_TYPE_ID	ENCUMBRANCE_TYPE_ID,*//*commented by rchandan for fusion*/
	GLH.EXTERNAL_REFERENCE	HDR_EXTREFERENCE,
	GLH.LAST_UPDATE_DATE	HDR_LAST_UPDATE_DATE,
	to_char(GLH.DEFAULT_EFFECTIVE_DATE, 'YYYY-MM-DD"T"HH24:MI:SS') HDR_EFF_DATE,
--        GLH.DOC_SEQUENCE_ID          DOC_SEQ_ID,
--	DOCSEQ.NAME		DOC_SEQ_NAME,
--	GLH.DOC_SEQUENCE_VALUE	DOC_SEQ_VALUE,
	GLH.LAST_UPDATED_BY		HDR_LAST_UPDATED_BY, /*rallamse bug 11729375 : replaced PPN.FULL_NAME*/
	FSV1.HEADER_NAME	ACCOUNTING_SEQ_NAME,
	FSV1.VERSION_NAME	ACCOUNTING_SEQ_VERSION,
	GLH.POSTING_ACCT_SEQ_VALUE	ACCOUNTING_SEQ_NUMBER,
	FSV2.HEADER_NAME	REPORTING_SEQ_NAME,
	FSV2.VERSION_NAME	REPORTING_SEQ_VERSION,
	GLH.CLOSE_ACCT_SEQ_VALUE	REPORTING_SEQ_NUMBER,
	to_char(GLH.REFERENCE_DATE, 'YYYY-MM-DD"T"HH24:MI:SS') REFERENCE_DATE,
	GJS.USER_JE_SOURCE_NAME	HDR_SOURCE,
	GJC.USER_JE_CATEGORY_NAME	HDR_CATEGORY,
        LE.NAME	LEGAL_ENTITY_NAME,
	GLL.JE_LINE_NUM		JE_LINE_NUM,
	GLL.CURRENCY_CODE 	LINE_CURR_CODE, /*rchandan*/
	to_char(GLL.CURRENCY_CONVERSION_DATE, 'YYYY-MM-DD"T"HH24:MI:SS') LINE_CONVERSION_DATE, /*rchandan*/
	ROUND(GLL.CURRENCY_CONVERSION_RATE, 6)	LINE_CONVERSION_RATE, /*rchandan*/
	DCT.USER_CONVERSION_TYPE	LINE_CONVERSION_TYPE,
	GLL.TAX_CODE_ID		TAX_CODE_ID,
	GLL.TAX_TYPE_CODE	TAX_TYPE_CODE,
	GLL.DESCRIPTION		LINE_DESC,
	GLL.ENTERED_DR		ENTERED_DR,
	GLL.ENTERED_CR		ENTERED_CR,
	GLL.ACCOUNTED_DR	ACCOUNTED_DR,
	GLL.ACCOUNTED_CR	ACCOUNTED_CR,
        (NVL(ACCOUNTED_DR,0)-NVL(ACCOUNTED_CR,0)) ACCOUNTED_NET,
	GLL.STAT_AMOUNT		STAT_AMOUNT,
	to_char(GLL.EFFECTIVE_DATE, 'YYYY-MM-DD"T"HH24:MI:SS') EFFECTIVE_DATE,
	GLL.REFERENCE_1		REFERENCE1,
	GLL.REFERENCE_2		REFERENCE2,
	GLL.REFERENCE_3		REFERENCE3,
	GLL.REFERENCE_4		REFERENCE4,
	GLL.REFERENCE_5		REFERENCE5,
	GLL.REFERENCE_6		REFERENCE6,
	GLL.REFERENCE_7		REFERENCE7,
	GLL.REFERENCE_8		REFERENCE8,
	GLL.REFERENCE_9		REFERENCE9,
	GLL.REFERENCE_10	REFERENCE10,
	SUBDOCSEQ.NAME		SUB_DOC_SEQ_NAME,
        GLL.SUBLEDGER_DOC_SEQUENCE_ID SUB_DOC_SEQ_ID,
	GLL.SUBLEDGER_DOC_SEQUENCE_VALUE	SUB_DOC_SEQ_VAL,
	RECON.JGZZ_RECON_REF	RECON_REF,
	GL_JOURNALS_EXP_RPT_PKG.get_lookup_value('M', RECON.JGZZ_RECON_STATUS, 'ORA_GL_LINE_RECON_STATUS') RECON_STATUS,
	RECON.JGZZ_RECON_ID	RECON_ID,
	to_char(RECON.JGZZ_RECON_DATE, 'YYYY-MM-DD"T"HH24:MI:SS') RECON_DATE,
	GL_JOURNALS_EXP_RPT_PKG.get_lookup_value('M', GLB.ACTUAL_FLAG, 'BATCH_TYPE') BATCH_TYPE,
	DECODE(GLB.STATUS,
		'P', GL_JOURNALS_EXP_RPT_PKG.get_lookup_value('M', GLB.STATUS, 'MJE_BATCH_STATUS'),
		'I', GL_JOURNALS_EXP_RPT_PKG.get_lookup_value('M', GLB.STATUS, 'MJE_BATCH_STATUS'),
		'S', GL_JOURNALS_EXP_RPT_PKG.get_lookup_value('M', GLB.STATUS, 'MJE_BATCH_STATUS'),
		'U', GL_JOURNALS_EXP_RPT_PKG.get_lookup_value('M', GLB.STATUS, 'MJE_BATCH_STATUS'),
		'u', GL_JOURNALS_EXP_RPT_PKG.get_lookup_value('M', GLB.STATUS, 'MJE_BATCH_STATUS'),
		NVL(ERROR_MESSAGE, GL_JOURNALS_EXP_RPT_PKG.get_lookup_value('M', GLB.STATUS, 'MJE_BATCH_STATUS'))) BATCH_STATUS,
	GL_JOURNALS_EXP_RPT_PKG.get_lookup_value('M', GLB.APPROVAL_STATUS_CODE, 'JE_BATCH_APPROVAL_STATUS') APPROVAL_STATUS,
	GL_JOURNALS_EXP_RPT_PKG.get_lookup_value('M', GLB.AVERAGE_JOURNAL_FLAG, 'AB_JOURNAL_TYPE') JRNL_TYPE,
        GL_JOURNALS_EXP_RPT_PKG.funds_status(GLB.funds_status_code) FUNDS_STATUS,
	GL_JOURNALS_EXP_RPT_PKG.get_lookup_value('M', GLH.TAX_STATUS_CODE, 'TAX_STATUS') TAX_STATUS,
	GL_JOURNALS_EXP_RPT_PKG.get_lookup_value('M', GLL.TAX_TYPE_CODE, 'TAX_TYPE') TAX_TYPE,
	GL_JOURNALS_EXP_RPT_PKG.tax_code(GLL.TAX_CODE_ID, GLL.TAX_TYPE_CODE) TAX_CODE,
	DECODE(:P_ACTUAL_FLAG, 'A', NULL, 'E', NVL(:PARAM_ENCUMBRANCE_TYPE, GL_JOURNALS_EXP_RPT_PKG.enc_type(GLH.ENCUMBRANCE_TYPE_ID))) ENCUMBRANCE_TYPE,
	&ACCOUNT ACCOUNT,
	&ACCOUNT_DESC ACCOUNT_DESC,
	&BALANCING_SEGMENT_VALUE	BALANCING_SEGMENT_VALUE,
	&BALANCING_SEGMENT_DESC		BALANCING_SEGMENT_DESC,
	&NATURAL_ACCT_SEGMENT_VAL	NATURAL_ACCT_SEGMENT_VAL,
	&NATURAL_ACCT_SEGMENT_DESC	NATURAL_ACCT_SEGMENT_DESC,
	&COST_CENTER_SEGMENT_VALUE	COST_CENTER_SEGMENT_VALUE,
	&COST_CENTER_SEGMENT_DESC	COST_CENTER_SEGMENT_DESC,
	DECODE(:P_SEC_SEG_NUM, null, null, &ADDITIONAL_SEGMENT_VALUE)	ADDITIONAL_SEGMENT_VALUE,
	DECODE(:P_SEC_SEG_NUM, null, null, &ADDITIONAL_SEGMENT_DESC)	ADDITIONAL_SEGMENT_DESC,
	GL_JOURNALS_EXP_RPT_PKG.contra_acct_value(GLH.JE_HEADER_ID, GLL.SUBLEDGER_DOC_SEQUENCE_ID, GLL.SUBLEDGER_DOC_SEQUENCE_VALUE, GLL.ACCOUNTED_DR, GLL.ACCOUNTED_CR) CONTRA_ACCT_VALUE,
	GL_JOURNALS_EXP_RPT_PKG.contra_acct_desc(GLH.JE_HEADER_ID, GLL.SUBLEDGER_DOC_SEQUENCE_ID, GLL.SUBLEDGER_DOC_SEQUENCE_VALUE, GLL.ACCOUNTED_DR, GLL.ACCOUNTED_CR) CONTRA_ACCT_DESC,
        GL_JOURNALS_EXP_RPT_PKG.begin_balance(&BALANCING_SEGMENT_VALUE,&NATURAL_ACCT_SEGMENT_VAL,DECODE(:P_SEC_SEG_NUM, null, null, &ADDITIONAL_SEGMENT_VALUE), LGR.LEDGER_ID, GLB.STATUS, GLH.ENCUMBRANCE_TYPE_ID) BEGIN_BALANCE
FROM
  &P_PERF_FROM
  &P_JOURNAL_FROM_CLAUSE
  &P_LEDGER_FROM
WHERE 
    fsv1.seq_version_id(+) = glh.posting_acct_seq_version_id
AND fsv2.seq_version_id(+) = glh.close_acct_seq_version_id
AND le.legal_entity_id (+) = glh.legal_entity_id
AND recon.je_header_id (+) = gll.je_header_id
AND recon.je_line_num (+) = gll.je_line_num
AND GLH.LEDGER_ID = LGR.LEDGER_ID
&P_LEDGER_WHERE
AND GLH.JE_SOURCE = GJS.JE_SOURCE_NAME
AND GLH.JE_CATEGORY  =  GJC.JE_CATEGORY_NAME
--  AND  GLH.LAST_UPDATED_BY = PP.USERNAME /*rallamse bug 11729375*/
--  AND ppn.person_id = pp.person_id       /*rallamse bug 11729375*/
AND GLB.JE_BATCH_ID = GLH.JE_BATCH_ID
--AND GLH.DOC_SEQUENCE_ID = DOCSEQ.DOC_SEQUENCE_ID(+)
AND GLL.SUBLEDGER_DOC_SEQUENCE_ID = SUBDOCSEQ.DOC_SEQUENCE_ID(+)
AND DCT.CONVERSION_TYPE  = GLL.CURRENCY_CONVERSION_TYPE /*rchandan*/ 
&P_POSTING_STATUS
&P_HEADER_POSTING_STATUS
&P_DAS_WHERE
&P_CURRENCY_WHERE
&P_ACTUAL_TYPE_WHERE
&P_BATCH_WHERE
&P_SOURCE_WHERE
&P_CATEGORY_WHERE
and &P_BAL_WHERE
--&P_DOC_ID_WHERE
--&P_DOC_VAL_WHERE
&P_SUB_DOC_ID_WHERE
&P_SUB_DOC_VAL_WHERE
&P_NOT_ZERO_LINE_WHERE
&P_PERIOD_WHERE
&P_CONTRA_ACCOUNT_WHERE
&P_JOURNAL_DATE_WHERE
&P_JOURNAL_UPD_DATE_WHERE
&P_JOURNAL_LAST_UPD_WHERE
AND &P_AFF_WHERE
AND &FLEXDATA_SECURE = 'N'
&P_AMOUNT_WHERE
&P_JOURNAL_WHERE_CLAUSE
&P_LE_WHERE_CLAUSE
&ACCT_ANAL_ORDERBY
-----------------------------------------------------------------------------------Journals Extract----------------------------------------------------------------
select  &BALANCING_SEG_ORDERBY          Bal_Seg,
        PS.start_date                   Period_Date,
	PS.period_name                  Period,
	JEB.name                        Name,
	JEB.posted_date                 Posted_date,
	JEB.creation_date               Created_date,
        JEB.created_by                  BATCH_CREATED_BY,
        JEB.last_updated_by             BATCH_LAST_UPDATED_BY,
        JEB.last_update_date            BATCH_LAST_UPDATE_DATE,
        JEB.last_update_login           BATCH_LAST_UPDATE_LOGIN,
	min(JG_JOURNALS_BATCH_RPT_EXT_PKG.batch_type(JEB.actual_flag)) Batch_Type,
	SRC.user_je_source_name         Source,
	JEH.doc_sequence_value          Seq_Value,
	min(decode(JEH.actual_flag, 'A', null, 'E', JG_JOURNALS_BATCH_RPT_EXT_PKG.enc_type(JEH.encumbrance_type_id))) Encumbrance_Type,
	CAT.user_je_category_name       Category,
	L.name                          LedgerName,
	L.CURRENCY_CODE                 LedgerCurrency,
	--&DEB_SELECT                     Debit,
	--&CRE_SELECT                     Credit,
	SUM(nvl(JEL.entered_dr,0))      Debit,
	SUM(nvl(JEL.entered_cr,0))      Credit,
	&FOR_BAL_SEG                    For_Bal_Seg,
	&FOR_COMP_NAME                  For_Comp_Name
from	GL_PERIOD_STATUSES   PS,
	GL_JE_HEADERS        JEH,
	GL_JE_LINES          JEL,
	GL_CODE_COMBINATIONS CC,
	GL_JE_BATCHES        JEB,
	GL_JE_CATEGORIES     CAT,
	GL_JE_SOURCES        SRC,
	GL_LEDGERS           L,
	&LEDGER_FROM
	gl_daily_conversion_types gdct
where
	PS.APPLICATION_ID = 101 
and     PS.LEDGER_ID = JEH.LEDGER_ID 
/*and     ( :C_START_DATE between PS.start_date+0 and PS.end_date+0  or  
          :C_END_DATE between PS.start_date+0 and PS.end_date+0    or   
	  (  PS.start_date+0 >= :C_START_DATE and  PS.end_date+0 <= :C_END_DATE )              
	)
*/
and           JEH.period_name      =  PS.period_name
and			  JEH.status           = 'P'
--and           JEH.actual_flag      = 'A'
and           JEH.ledger_id        = L.ledger_id
and      JEL.period_name           =  JEH.period_name
and      JEL.je_header_id          =  JEH.je_header_id
and      JEL.status                = 'P'
-- and      JEL.effective_date between :C_START_DATE and :C_END_DATE
and      CC.code_combination_id   =  JEL.code_combination_id
and      CC.summary_flag          =  'N'
and      CC.template_id is null
and      CC.chart_of_accounts_id  = :STRUCT_NUM
and      CC.detail_posting_allowed_flag = 'Y'
--and      JEB.je_batch_id = decode(CC.code_combination_id, NULL, JEH.je_batch_id, JEH.je_batch_id) -- rrajarap
and      JEB.je_batch_id = JEH.je_batch_id -- rrajarap
--and      CAT.je_category_name = decode(CC.code_combination_id, NULL, JEH.je_category, JEH.je_category)  -- rrajarap
and      CAT.je_category_name = JEH.je_category  -- rrajarap
--and      SRC.je_source_name = decode(CC.code_combination_id, NULL, JEH.je_source, JEH.je_source) -- rrajarap
and      SRC.je_source_name = JEH.je_source -- rrajarap 
/* Fusion initiative multi currency change starts */ 
and  gdct.conversion_type = JEL.currency_conversion_type
/*changed from JEH.currency_conversion_type to JEL.currency_conversion_type. bug 	9198433
/* Fusion initiative multi currency change ends */
/* AND 'Y' != DECODE(TO_NUMBER((SELECT GP1.PERIOD_YEAR
                               FROM GL_PERIODS GP1
                              WHERE GP1.PERIOD_SET_NAME = L.PERIOD_SET_NAME
                                AND GP1.PERIOD_TYPE = L.ACCOUNTED_PERIOD_TYPE
                                AND :P_END_DATE
                                BETWEEN GP1.start_date AND GP1.end_date
                                AND GP1.adjustment_period_flag like decode(:P_ADJUSTMENT_PERIODS,'N','N','%')
                                AND    rownum = 1)) -
                  TO_NUMBER((SELECT GP2.PERIOD_YEAR
                               FROM GL_PERIODS GP2
                              WHERE GP2.PERIOD_SET_NAME = L.PERIOD_SET_NAME
                                AND GP2.PERIOD_TYPE = L.ACCOUNTED_PERIOD_TYPE
                                AND :P_START_DATE
                                BETWEEN GP2.start_date and GP2.end_date
                                AND GP2.adjustment_period_flag like decode(:P_ADJUSTMENT_PERIODS,'N','N','%')
                                AND rownum = 1)), 0, 'N', DECODE(:P_ADJUSTMENT_PERIODS, 'N', 'Y', 'N')) */
AND &C_WHERE_PERIOD
AND &ACCESS_WHERE
AND &LEDGER_WHERE
AND JEL.CURRENCY_CODE = :P_CURRENCY_CODE   -- rrajarap bug # 9195217
AND &BALANCING_SEG_WHERE
AND &BAL_SECURE = 'N'
AND &LP_INCREMENTAL_EXPORT
GROUP BY  &BALANCING_SEG_ORDERBY, --&BALANCING_SEG modified to &BALANCING_SEG_ORDERBY fix for bug # 9195198
          &FOR_BAL_SEG,
          &FOR_COMP_NAME,
          &BAL_SECURE,
          PS.start_date,
          PS.period_name,
          CAT.user_je_category_name,
          JEB.name,
          JEB.actual_flag,
          SRC.user_je_source_name,
          JEH.doc_sequence_value,
          JEH.encumbrance_type_id,
          JEB.creation_date,
          JEB.posted_date,
          JEB.created_by,
          JEB.last_updated_by,
          JEB.last_update_date,
          JEB.last_update_login,
          L.name,
          L.currency_code
	  --,&BALANCING_SEG_ORDERBY
order by  L.name,
          &BALANCING_SEG_ORDERBY,
          PS.start_date,
          CAT.user_je_category_name,
          JEB.name
------------------------------------------------------------Balancing Segment Value Assignment Data Model-----------------------------------------------
&QUERY    order by 5,7,9,11,10
------------------------------------------------Chart of Accounts Mapping Rules Data Model---------------------------------------------------------------------
--Q_DETAIL_VALUES2
SELECT DISTINCT PK1_VALUE DETAIL_VALUE
FROM GL_SEG_VAL_HIER_RF
WHERE TREE_STRUCTURE_CODE = 'GL_ACCT_FLEX'
AND TREE_CODE = :TREE_CODE2
AND TREE_VERSION_ID = :TREE_VERSION_ID2
AND ANCESTOR_PK1_VALUE = :PARENT_SEGMENT_VALUE2
AND DATA_SOURCE_ID = :DETAIL_DS_ID
AND PK1_VALUE <> ANCESTOR_PK1_VALUE
ORDER BY PK1_VALUE

--Q_ROLLUP_RULES
SELECT RR.to_flex_value   TARGET_ROLLUP_SEGMENT_VALUE,
       GL_FLEXFIELDS_PKG.get_description_sql(:to_coa_id, :segment_num, RR.to_flex_value) TARGET_ROLLUP_VALUE_DESC,
--       GL_COA_MAPPING_RPT_PKG.get_segment_description(:TARGET_VALUE_SET_ID,RR.to_FLEX_VALUE) TARGET_ROLLUP_VALUE_DESC,
       GL_COA_MAPPING_RPT_PKG.get_operator(from_flex_value_low, from_flex_value_high, rr.tree_code) ACCT_FILTER_CONDITION,
       decode(rr.tree_code, null, decode(from_flex_value_low, ' ', null, from_flex_value_low)) SOURCE_SEGMENT_VALUE_FROM,
       decode(rr.tree_code, null, decode(from_flex_value_high, ' ', null, from_flex_value_high)) SOURCE_SEGMENT_VALUE_TO,
       tree_name   TREE_NAME,
       t.tree_code TREE_CODE2,
       tree_version_name TREE_VERSION_NAME,
       tv.tree_version_id TREE_VERSION_ID2,
       decode(rr.tree_code, null, null, from_flex_value_low) PARENT_SEGMENT_VALUE2
FROM GL_COA_MAP_ROLLUP_RULES RR,
     FND_TREE_VL T,
     FND_TREE_VERSION_VL TV
WHERE RR.segment_rule_id = :SEG_RULE_ID
AND   T.tree_structure_code (+) = 'GL_ACCT_FLEX'
AND   T.tree_code (+) = RR.tree_code
AND   TV.tree_structure_code (+) = 'GL_ACCT_FLEX'
AND   TV.tree_code (+) = RR.tree_code
AND   TV.status (+) = 'ACTIVE'
AND   :P_TREE_VERSION_AS_OF_DATE BETWEEN TV.effective_start_date(+) AND TV.effective_end_date(+)
ORDER BY RR.to_flex_value

--Q_SEGMENT_RULES
SELECT TS.sequence_number  SEGMENT_NUM,
       TS.segment_code     TARGET_SEGMENT_NAME,
       SR.segment_map_type SEGMENT_MAP_TYPE, 
       decode(SR.segment_map_type,'C',SS.segment_code,'R',SS.segment_code,'')    SOURCE_SEGMENT_NAME,
       decode(SR.segment_map_type, 'S', SR.single_value) TARGET_SEGMENT_VALUE,                 
       SR.segment_rule_id SEG_RULE_ID,
       GL_FLEXFIELDS_PKG.get_description_sql(MAP.to_coa_id, TS.sequence_number, SR.single_value) TARGET_VALUE_DESCRIPTION,
       SR.to_value_set_id TARGET_VALUE_SET_ID,
       MAP.to_coa_id TO_COA_ID
FROM GL_COA_MAPPINGS MAP,
     FND_KF_STR_INSTANCES_VL TSI,  -- target structure instance
     FND_KF_STR_INSTANCES_VL SSI,  -- source structure instance
     GL_COA_MAP_SEGMENT_RULES SR,
     FND_KF_SEGMENTS_B TS,  -- target segment
     FND_KF_SEGMENTS_B SS   -- source segment
WHERE MAP.coa_mapping_id = :P_COA_MAPPING_ID
AND   TSI.application_id = 101
AND   TSI.key_flexfield_code = 'GL#'
ANd   TSI.structure_instance_number = MAP.to_coa_id
AND   SSI.application_id = 101
AND   SSI.key_flexfield_code = 'GL#'
AND   SSI.structure_instance_number = MAP.from_coa_id
AND   SR.coa_mapping_id = MAP.coa_mapping_id
AND   TS.structure_id = TSI.structure_id
AND   TS.column_name = SR.to_seg_column_name
AND   SS.structure_id = decode(SR.segment_map_type, 'S', TSI.structure_id, SSI.structure_id)
AND   SS.column_name = nvl(SR.from_seg_column_name, SR.to_seg_column_name)
ORDER BY TS.sequence_number

--Q_MS_ROLLUP_RULES
SELECT MSRR.to_segment_value   TARGET_ROLLUP_SEGMENT_VALUE1,
       GL_FLEXFIELDS_PKG.get_description_sql(:to_coa_id1, :segment_num1, MSRR.to_segment_value) TARGET_ROLLUP_VALUE_DESC1,
       MSRR.from_segment1_value_low   SOURCE_SEGMENT1_VALUE_FROM,
       MSRR.from_segment2_value_low   SOURCE_SEGMENT2_VALUE_FROM
FROM GL_COA_MAP_MS_ROLLUP_RULES MSRR
WHERE MSRR.multi_segment_rule_id = :MULTI_SEG_RULE_ID
ORDER BY MSRR.to_segment_value

--Q_MULTI_SEGMENT_RULES
SELECT TS.sequence_number  SEGMENT_NUM1,
       TS.segment_code     TARGET_SEGMENT_NAME1,
       SS1.segment_code    SOURCE_SEGMENT1_NAME,
       SS2.segment_code    SOURCE_SEGMENT2_NAME,
       MSR.multi_segment_rule_id MULTI_SEG_RULE_ID,
       MAP.to_coa_id TO_COA_ID1
FROM GL_COA_MAPPINGS MAP,
     FND_KF_STR_INSTANCES_VL TSI,  -- target structure instance
     FND_KF_STR_INSTANCES_VL SSI,  -- source structure instance
     GL_COA_MAP_MULTI_SEG_RULES MSR,
     FND_KF_SEGMENTS_B TS,   -- target segment
     FND_KF_SEGMENTS_B SS1,  -- source segment1
     FND_KF_SEGMENTS_B SS2   -- source segment2
WHERE MAP.coa_mapping_id = :P_COA_MAPPING_ID
AND   TSI.application_id = 101
AND   TSI.key_flexfield_code = 'GL#'
ANd   TSI.structure_instance_number = MAP.to_coa_id
AND   SSI.application_id = 101
AND   SSI.key_flexfield_code = 'GL#'
AND   SSI.structure_instance_number = MAP.from_coa_id
AND   MSR.coa_mapping_id = MAP.coa_mapping_id
AND   TS.structure_id = TSI.structure_id
AND   TS.column_name = MSR.to_segment_column_name
AND   SS1.structure_id = SSI.structure_id
AND   SS1.column_name = MSR.from_segment1_column_name
AND   SS2.structure_id = SSI.structure_id
AND   SS2.column_name = MSR.from_segment2_column_name
ORDER BY TS.sequence_number

--Q_DETAIL_VALUES1
SELECT DISTINCT PK1_VALUE DETAIL_VALUE
FROM GL_SEG_VAL_HIER_RF
WHERE TREE_STRUCTURE_CODE = 'GL_ACCT_FLEX'
AND TREE_CODE = :TREE_CODE1
AND TREE_VERSION_ID = :TREE_VERSION_ID1
AND ANCESTOR_PK1_VALUE = :PARENT_SEGMENT_VALUE1
AND DATA_SOURCE_ID = :DETAIL_DS_ID
AND PK1_VALUE <> ANCESTOR_PK1_VALUE
ORDER BY PK1_VALUE

--Q_SEGMENT_COLUMN_VALUES
SELECT GL_COA_MAPPING_RPT_PKG.get_seg_val_and_opt(:ACCT_RULE_ID, :column_name, 'OPERATOR') ACCOUNT_FILTER_CONDITION,
       GL_COA_MAPPING_RPT_PKG.get_seg_val_and_opt(:ACCT_RULE_ID, :column_name, 'LOW') SOURCE_SEGMENT_VALUE_FROM,
       GL_COA_MAPPING_RPT_PKG.get_seg_val_and_opt(:ACCT_RULE_ID, :column_name, 'HIGH') SOURCE_SEGMENT_VALUE_TO,
       GL_COA_MAPPING_RPT_PKG.get_seg_val_and_opt(:ACCT_RULE_ID, :column_name, 'TREE_CODE') TREE_CODE1,
       GL_COA_MAPPING_RPT_PKG.get_seg_val_and_opt(:ACCT_RULE_ID, :column_name, 'TREE_NAME') TREE_NAME,
       GL_COA_MAPPING_RPT_PKG.get_seg_val_and_opt(:ACCT_RULE_ID, :column_name, 'TREE_VER_ID') TREE_VERSION_ID1,
       GL_COA_MAPPING_RPT_PKG.get_seg_val_and_opt(:ACCT_RULE_ID, :column_name, 'TREE_VER_NAME') TREE_VERSION_NAME,
       GL_COA_MAPPING_RPT_PKG.get_seg_val_and_opt(:ACCT_RULE_ID, :column_name, 'TREE_NODE_VAL') PARENT_SEGMENT_VALUE1
FROM dual

--Q_SOURCE_SEGMENTS
SELECT column_name COLUMN_NAME,
       ss.segment_code SOURCE_SEGMENT_NAME 
FROM  FND_KF_STR_INSTANCES_VL SSI, FND_KF_SEGMENTS_B SS
WHERE SSI.application_id = 101
AND   SSI.key_flexfield_code = 'GL#'
AND   SSI.structure_instance_number = :FROM_CHART_OF_ACCOUNTS_ID
AND   SS.structure_id    = SSI.structure_id
ORDER BY sequence_number

--Q_ACCOUNT_RULES
SELECT acct.to_code_combination_id TARGET_ACCOUNT_ID,
       &TARGET_ACCT TARGET_ACCT,
       account_rule_id ACCT_RULE_ID
FROM   gl_coa_map_account_rules acct,
       gl_code_combinations cc
WHERE  acct.coa_mapping_id = :P_COA_MAPPING_ID
AND    acct.to_code_combination_id = cc.code_combination_id

---------------------------------------------------------------
=====================================================================================================================
SELECT   segment1, segment1_desc, segment2, segment2_desc, 
sum(closing_c)closing_c,
sum(opening_c)opening_c, sum(period_net_c)period_net_c,
currency_code,period_name,LED_NAME,EX_RATE,
sum(closing_c)* (EX_RATE ) closing_fun ,
sum(opening_c)* (EX_RATE) opening_fun, sum(period_net_c)*(EX_RATE ) period_net_fun,
segment3, segment3_desc,segment5, segment5_desc,curr,RAVAL_CAT
 FROM (
             SELECT   gcc.segment1,
                             SUBSTR (gl_flexfields_pkg.get_description_sql (gcc.chart_of_accounts_id, 1, gcc.segment1), 1, 300) segment1_desc,
                             gcc.segment2,
                             SUBSTR (gl_flexfields_pkg.get_description_sql (gcc.chart_of_accounts_id, 2, gcc.segment2), 1, 300) segment2_desc,
                             gcc.segment3,
                             SUBSTR (gl_flexfields_pkg.get_description_sql (gcc.chart_of_accounts_id, 3, gcc.segment3), 1, 300) segment3_desc,
                             gcc.segment5,
                             SUBSTR (gl_flexfields_pkg.get_description_sql (gcc.chart_of_accounts_id, 5, gcc.segment5), 1, 300) segment5_desc,
                             
                             gl.ledger_id, (SUM (NVL (gb.begin_balance_dr_beq, 0)) - SUM (NVL (gb.begin_balance_cr_beq, 0))) opening_c,
                             (SUM (NVL (gb.period_net_dr_beq, 0)) - SUM (NVL (gb.period_net_cr_beq, 0))) period_net_c,
                             (  (SUM (NVL (gb.begin_balance_dr_beq, 0)) - SUM (NVL (gb.begin_balance_cr_beq, 0)))
                              + (SUM (NVL (gb.period_net_dr_beq, 0)) - SUM (NVL (gb.period_net_cr_beq, 0)))
                             ) closing_c, gl.currency_code , gb.currency_code curr,gb.period_name, gl.NAME LED_NAME
 ,NVL ((SELECT conversion_rate
                                       FROM gl_daily_rates gdr, gl_periods gp
                                      WHERE from_currency = gb.currency_code
                                        AND to_currency = gl.CURRENCY_CODE
                                        AND gp.period_name = :p_period_name
                                        AND gp.period_set_name = :p_period_set---'APR to MAR'
                                        AND gdr.conversion_date BETWEEN gp.start_date AND gp.end_date
                                        AND conversion_type = '300000002067051'
                                        AND status_code = 'C'
                                        AND gdr.conversion_date =
                                               (SELECT MAX (gdr1.conversion_date)
                                                  FROM gl_daily_rates gdr1
                                                 WHERE 1 = 1
                                                   AND gdr1.from_currency = gdr.from_currency
                                                   AND gdr1.to_currency = gdr1.to_currency
                                                   AND gdr1.conversion_date BETWEEN gp.start_date AND gp.end_date
                                                   AND gdr1.conversion_type = gdr.conversion_type
                                                   AND gdr1.status_code = gdr.status_code)),
                                    1)  EX_RATE 
                        ,NVL((SELECT 'Y' FROM GL_REVAL_ACCOUNT_RANGES 
                           WHERE REVALUATION_ID=:P_REVAL
                         AND gcc.segment2
                          BETWEEN SEGMENT2_LOW AND SEGMENT2_HIGH AND ROWNUM=1),'N')RAVAL_CAT            
                       FROM gl_balances gb, gl_code_combinations gcc, gl_ledgers gl
                       WHERE gb.code_combination_id = gcc.code_combination_id
                         AND gb.period_name = :p_period_name
                         AND gcc.segment2 >= NVL (:p_f_seg, gcc.segment2)
                         AND gcc.segment2 <= NVL (:p_t_seg, gcc.segment2)
                         AND (gcc.segment1 IN (:p_f_ent) OR 'All' IN (:p_f_ent || 'All'))
                         AND (gcc.segment2 IN (:p_m_acc) OR 'All' IN (:p_m_acc || 'All'))
                         AND gb.actual_flag = 'A'
                         AND gl.ledger_category_code = 'PRIMARY'
                         AND UPPER (gl.description) NOT LIKE '%CONSOLIDATION%'
                         AND gl.ledger_id = gb.ledger_id
                    GROUP BY gcc.segment2,
                             gl.ledger_id,
                             SUBSTR (gl_flexfields_pkg.get_description_sql (gcc.chart_of_accounts_id, 2, gcc.segment2), 1, 300),
                             SUBSTR (gl_flexfields_pkg.get_description_sql (gcc.chart_of_accounts_id, 1, gcc.segment1), 1, 300),
                             gcc.segment1, gl.currency_code ,gb.CURRENCY_CODE,gb.period_name, gl.NAME,
                             gcc.segment3,
                             SUBSTR (gl_flexfields_pkg.get_description_sql (gcc.chart_of_accounts_id, 3, gcc.segment3), 1, 300),
                             gcc.segment5,
                             SUBSTR (gl_flexfields_pkg.get_description_sql (gcc.chart_of_accounts_id, 5, gcc.segment5), 1, 300)
                            )    
                            group by currency_code,period_name,LED_NAME ,EX_RATE, 
                             segment1, segment1_desc, segment2, segment2_desc ,segment3, segment3_desc ,segment5, segment5_desc ,curr,RAVAL_CAT
                             order by 1,3
========================================================================================================
select FAB.bu_name
	  ,(select XE.establishment_name
		  from xle_establishment_v XE, 
			   zx_registrations ZR, 
			   zx_party_tax_profile PTP
		 where ZR.party_tax_profile_id = PTP.party_tax_profile_id
		   and PTP.party_type_code = 'LEGAL_ESTABLISHMENT'
		   and PTP.party_id = XE.party_id
		   and ZR.registration_id = AIA.first_party_registration_id) location
	  ,(select ZR.registration_number
		  from zx_registrations ZR
		 where ZR.registration_id = AIA.first_party_registration_id) first_party_reg
	  ,DECODE((select count(1)
				 from zx_lines ZL
				where ZL.application_id = 200
				  and ZL.trx_id = AIA.invoice_id
				  and ZL.trx_line_id = AILA.line_number
				  and ZL.tax like '%IGST%'), 0, 'INTRA', 'INTER') supply_type
	  ,PS.vendor_name
	  ,AIA.doc_sequence_value
	  ,TO_CHAR(AIA.gl_date, 'DD-MON-YYYY') gl_date
	  ,TO_CHAR(AIDA.accounting_date, 'DD-MON-YYYY') accounting_date
	  ,AIA.invoice_num
	  ,TO_CHAR(AIA.invoice_date, 'DD-MON-YYYY') invoice_date
	  ,AIA.description
	  ,DECODE(NVL(AIDA.parent_reversal_id, -99), -99, 
			  (select SUM(AID1.amount)
				 from ap_invoice_distributions_all AID1
				where AID1.invoice_id = AIA.invoice_id
				  and AID1.line_type_lookup_code = 'ITEM'
				  and AID1.posted_flag = 'Y'
				  and AID1.parent_reversal_id IS NULL
				  and UPPER(AID1.period_name) = UPPER(:p_accounting_period)), 
			  0) invoice_amount
	  ,(NVL(AIA.exchange_rate, 1) * DECODE(NVL(AIDA.parent_reversal_id, -99), -99, 
											  (select SUM(AID1.amount)
												 from ap_invoice_distributions_all AID1
												where AID1.invoice_id = AIA.invoice_id
												  and AID1.line_type_lookup_code = 'ITEM'
												  and AID1.posted_flag = 'Y'
												  and AID1.parent_reversal_id IS NULL
												  and UPPER(AID1.period_name) = UPPER(:p_accounting_period)), 
											   0)
	    ) func_inv_amount
	 -- ,AIA.invoice_amount
	  ,AILA.line_number
	  ,DECODE(NVL(AIDA.parent_reversal_id, -99), -99, 
			  (select SUM(AID1.amount)
				 from ap_invoice_distributions_all AID1
				where AID1.invoice_id = AIA.invoice_id
				  and AID1.invoice_line_number = AILA.line_number
				  and AID1.line_type_lookup_code = 'ITEM'
				  and AID1.posted_flag = 'Y'
				  and AID1.parent_reversal_id IS NULL
				  and UPPER(AID1.period_name) = UPPER(:p_accounting_period)), 
			  0) amount	
	  ,(NVL(AIA.exchange_rate, 1) * DECODE(NVL(AIDA.parent_reversal_id, -99), -99, 
											  (select SUM(AID1.amount)
												 from ap_invoice_distributions_all AID1
												where AID1.invoice_id = AIA.invoice_id
												  and AID1.invoice_line_number = AILA.line_number
												  and AID1.line_type_lookup_code = 'ITEM'
												  and AID1.posted_flag = 'Y'
												  and AID1.parent_reversal_id IS NULL
												  and UPPER(AID1.period_name) = UPPER(:p_accounting_period)), 
										   0)
        ) func_line_amount	  
	 -- ,AILA.amount
	  ,AIDA.distribution_line_number
	  ,AIDA.total_dist_amount
	  ,(NVL(AIA.exchange_rate, 1) * AIDA.total_dist_amount) func_dist_amount
	  ,AIA.invoice_currency_code
	  ,ROUND(AIDA.total_dist_amount) taxable_amount
	  ,(NVL(AIA.exchange_rate, 1) * ROUND(AIDA.total_dist_amount)) func_taxable_amount
	  ,(select HPS.attribute1
	      from poz_supplier_sites_all_m PSS
			  ,hz_party_sites HPS
		 where PSS.vendor_site_id = AIA.vendor_site_id
		   and PSS.party_site_id = HPS.party_site_id
		   and HPS.attribute_category = 'Crisil Information') GST_Registration_num
	  ,AIA.attribute6 RCM_Invoice_Num
	  ,AIA.attribute_date5 RCM_Invoice_Date
          ,(select ABS(sum(tax_rate))
	      from zx_lines ZL
		 where ZL.application_id = 200
		   and ZL.trx_id = AIA.invoice_id
		   and ZL.trx_line_id = AILA.line_number
		   and ZL.tax_rate < 0) tax_rate
	  ,AIA.exchange_rate
	  ,((AIDA.total_dist_amount * (select ABS(sum(tax_rate))
									  from zx_lines ZL
									 where ZL.application_id = 200
									   and ZL.trx_id = AIA.invoice_id
									   and ZL.trx_line_id = AILA.line_number
									   and ZL.tax like '%IGST%'
									   and ZL.tax_rate < 0)
		)/100) Total_IGST_TAX
	  ,(NVL(AIA.exchange_rate, 1) * ((AIDA.total_dist_amount * (select ABS(sum(tax_rate))
									  from zx_lines ZL
									 where ZL.application_id = 200
									   and ZL.trx_id = AIA.invoice_id
									   and ZL.trx_line_id = AILA.line_number
									   and ZL.tax like '%IGST%'
									   and ZL.tax_rate < 0)
									  )/100)
		) func_IGST_TAX
	  ,((AIDA.total_dist_amount * (select ABS(sum(tax_rate))
									  from zx_lines ZL
									 where ZL.application_id = 200
									   and ZL.trx_id = AIA.invoice_id
									   and ZL.trx_line_id = AILA.line_number
									   and ZL.tax like '%CGST%'
									   and ZL.tax_rate < 0)
		)/100) Total_CGST_TAX
	  ,(NVL(AIA.exchange_rate, 1) * ((AIDA.total_dist_amount * (select ABS(sum(tax_rate))
									  from zx_lines ZL
									 where ZL.application_id = 200
									   and ZL.trx_id = AIA.invoice_id
									   and ZL.trx_line_id = AILA.line_number
									   and ZL.tax like '%CGST%'
									   and ZL.tax_rate < 0)
									  )/100)
		) func_CGST_TAX
	  ,((AIDA.total_dist_amount * (select ABS(sum(tax_rate))
									  from zx_lines ZL
									 where ZL.application_id = 200
									   and ZL.trx_id = AIA.invoice_id
									   and ZL.trx_line_id = AILA.line_number
									   and ZL.tax like '%SGST%'
									   and ZL.tax_rate < 0)
		)/100) Total_SGST_TAX
	  ,(NVL(AIA.exchange_rate, 1) * ((AIDA.total_dist_amount * (select ABS(sum(tax_rate))
									  from zx_lines ZL
									 where ZL.application_id = 200
									   and ZL.trx_id = AIA.invoice_id
									   and ZL.trx_line_id = AILA.line_number
									   and ZL.tax like '%SGST%'
									   and ZL.tax_rate < 0)
									 )/100)
	    ) func_SGST_TAX
	  ,AILA.tax_classification_code
  from ap_invoices_all AIA
	  ,ap_invoice_lines_all AILA
	  ,ap_invoice_distributions_all AIDA
	  ,fun_all_business_units_v FAB
	  ,poz_suppliers_v 				PS 
 where AIA.invoice_id = AILA.invoice_id
   and AIA.invoice_id = AIDA.invoice_id
   and AILA.line_number = AIDA.invoice_line_number
   and AIA.org_id = FAB.bu_id
   and AIA.vendor_id = PS.vendor_id
   and AIDA.posted_flag = 'Y'
   and AILA.line_type_lookup_code = 'ITEM'
   and AIDA.line_type_lookup_code = 'ITEM'
   and FAB.bu_name = NVL(:p_bu_name, FAB.bu_name)
   and UPPER(AIDA.period_name) = UPPER(:p_accounting_period)
   and exists (select '1' from zx_lines ZL
				where ZL.application_id = 200
				  and ZL.trx_id = AIA.invoice_id
			      and ZL.trx_line_id = AILA.line_number
				  and ZL.tax_rate < 0)
   and not exists (select '1'
					 from ap_invoice_distributions_all AIDA1,
						  ap_invoice_distributions_all AIDA2
					where AIDA1.invoice_id = AIA.invoice_id
					  and AIDA1.reversal_flag = 'Y'
					  and AIDA1.line_type_lookup_code = 'ITEM'
					  and AIDA1.parent_reversal_id = AIDA2.invoice_distribution_id
					  and AIDA1.period_name = AIDA2.period_name)
order by invoice_num, line_number, distribution_line_number
======================================================================================================
select (select substr(zr.registration_number, 1, 15)
          from zx_registrations         zr,
               zx_party_tax_profile     ptp,
               xle_establishment_v      xe,
               fun_all_business_units_v fab
         where zr.party_tax_profile_id = ptp.party_tax_profile_id
           and ptp.party_type_code = 'LEGAL_ESTABLISHMENT'
           and ptp.party_id = xe.party_id
              --  and xe.main_establishment_flag = 'N' --commented by Ankit on 12thDec2020
           and xe.legal_entity_id = fab.legal_entity_id
           and fab.bu_id = rct.org_id
           AND zr.registration_id = rct.first_pty_reg_id --Added by Ankit on 12thDec2020
        ) User_GSTIN,
       null Version,
       rct.attribute6 IRN,			-- NULL IRN (Logic changed on 01Mar by Pratul)
       substr(rbs.name, 1, 250) SourceSystem,
       case
         when (select count(1)
                 from zx_registrations         zr,
                      zx_party_tax_profile     ptp,
                      xle_establishment_v      xe,
                      fun_all_business_units_v fab
                where zr.party_tax_profile_id = ptp.party_tax_profile_id
                  and ptp.party_type_code = 'LEGAL_ESTABLISHMENT'
                  and zr.registration_status_code = 'SEZ'
                  and ptp.party_id = xe.party_id
                  and xe.legal_entity_id = fab.legal_entity_id
                  and fab.bu_id = rct.org_id
                  AND zr.registration_id = rct.first_pty_reg_id) > 0 then
          'N'
         when gst.registration_status_code = 'NOT REGISTERED' then
          'N'
		 when fab.bu_name in ('CRISIL Ratings Limited', 'PRAGMATIX SERVICES PRIVATE LIMITED') then
		  'N'
       --- when gst.registration_status_code IN ('EXPORT', 'SEZ', 'REGISTERED') then --Added REGISTERED by Ankit on 12thDec2020
         else
          'Y'
       end is_irn,
       'crisilar@crisil.com' email,
       'GST' TranDtls_TaxSch,
       'Outward' TranDtls_OutwardInward,
       case
         when gst.registration_status_code = 'EXPORT' then
          'Export'
       /* Commented on 21Dec by Pratul
                   when gst.registration_status_code IN
                            ('REGISTERED', 'NOT REGISTERED', 'SEZ') then
                        'Supply'*/
         else
          'Supply'
       end TranDtls_SubType,
       case
         when gst.registration_status_code = 'EXPORT' then
          'EXPWOP'
         when gst.registration_status_code = 'SEZ' then
          'SEZWOP'
         when gst.registration_status_code = 'NOT REGISTERED' then
          'B2C'
         when gst.registration_number is not null then
          'B2B'
         else
          null
       end TranDtls_SupTyp,
       'N' TranDtls_RegRev,
       'REG' TranDtls_Typ,
       /*case   Commented by Pratul on 30Dec
                       when gst.registration_status_code = 'SEZ' then
                        'Y'
                       else
                        'N'
                     end TranDtls_IgstOnIntra,*/
       'N' TranDtls_IgstOnIntra, -- Added by Pratul on 30Dec
       case
         when gst.registration_status_code = 'EXEMPT' then
          'Exempted'
         when gst.registration_status_code = 'SEZ' then
          'Supply to SEZ'
         when gst.registration_status_code = 'EXPORT' then
          'Export'
         when gst.registration_status_code = 'NIL RATED' then
          'NIL Rated'
		 when gst.registration_status_code = 'NOT REGISTERED' then					-- New Condition added on 1Mar by Pratul
          'Taxable'
         when gst.registration_number is not null then
          'Taxable'
         else
          null
       end TranDtls_Taxability,
       case
         when gst.registration_status_code = 'SEZ' then
          'INTER'
         when (select count(*)
                 from zx_lines
                where application_id = 222
                  and trx_id = rct.customer_trx_id
                  and trx_line_id = rctl.customer_trx_line_id
                  and tax like '%IGST%') > 0 then
          'INTER'
         when (select count(1)
                     from zx_lines
                    where application_id = 222
                      and trx_id = rct.customer_trx_id
                      and trx_line_id = rctl.customer_trx_line_id
                      and tax not like '%US_SALES_TAX%') = 0 then
			 case when ((select flv.tag
						  from xle_establishment_v xe, 
							   zx_registrations zr, 
							   zx_party_tax_profile ptp,
							   fnd_lookup_values flv
						 where zr.party_tax_profile_id = ptp.party_tax_profile_id
						   and ptp.party_type_code = 'LEGAL_ESTABLISHMENT'
						   and ptp.party_id = xe.party_id
						   and zr.registration_id = rct.first_pty_reg_id
						   and upper(xe.region_2) = upper(flv.meaning)
						   and flv.lookup_type = 'CRISIL_STATE_CODE'
						   and flv.enabled_flag = 'Y'
						   and flv.language = 'US') = (case when gst.registration_status_code = 'EXPORT' then '96'
															else
															  (select tag from fnd_lookup_values
																where lookup_type = 'CRISIL_STATE_CODE'
																  and enabled_flag = 'Y'
																  and language = 'US'
																  and upper(meaning) = upper(hl.state))
													   end)) then 'INTRA'
				  else 'INTER' end
		 else
          'INTRA'
       end TranDtls_InterIntra,
       DECODE(rctt.type, 'DM', 'DBN', 'CM', 'CRN', 'INV', 'INV', null) DocDtls_Typ,
       substr(rct.trx_number, 1, 16) DocDtls_No,
       to_char(rct.trx_date, 'DD/MM/YYYY') DocDtls_Dt,
       rct.attribute11 DocDtls_ReasonForCnDn, -- Added by Pratul on 16Dec
       (select substr(zr.registration_number, 1, 15)
          from zx_registrations         zr,
               zx_party_tax_profile     ptp,
               xle_establishment_v      xe,
               fun_all_business_units_v fab
         where zr.party_tax_profile_id = ptp.party_tax_profile_id
           and ptp.party_type_code = 'LEGAL_ESTABLISHMENT'
           and ptp.party_id = xe.party_id
              -- and xe.main_establishment_flag = 'N' --commented by Ankit on 12thDec2020
           and xe.legal_entity_id = fab.legal_entity_id
           and fab.bu_id = rct.org_id
           AND zr.registration_id = rct.first_pty_reg_id --Added by Ankit on 12thDec2020
        ) SellerDtls_Gstin,
      /* (select substr(xe.establishment_name, 1, 100)
          from xle_establishment_v xe
         where xe.main_establishment_flag = 'Y'
           and xe.legal_entity_id = rct.legal_entity_id) SellerDtls_LglNm, */ -- Commented by Pratul on 13Jan
	   (select substr(xep.name, 1, 100)
		  from xle_establishment_v xe, 
			   zx_registrations zr, 
			   zx_party_tax_profile ptp,
			   xle_entity_profiles xep
		 where zr.party_tax_profile_id = ptp.party_tax_profile_id
		   and ptp.party_type_code = 'LEGAL_ESTABLISHMENT'
		   and ptp.party_id = xe.party_id
		   and xe.legal_entity_id = xep.legal_entity_id
		   and zr.registration_id = rct.first_pty_reg_id) SellerDtls_LglNm,	-- Added by Pratul on 13Jan
	   (select substr(xep.name, 1, 100)
		  from xle_establishment_v xe, 
			   zx_registrations zr, 
			   zx_party_tax_profile ptp,
			   xle_entity_profiles xep
		 where zr.party_tax_profile_id = ptp.party_tax_profile_id
		   and ptp.party_type_code = 'LEGAL_ESTABLISHMENT'
		   and ptp.party_id = xe.party_id
		   and xe.legal_entity_id = xep.legal_entity_id
		   and zr.registration_id = rct.first_pty_reg_id) SellerDtls_TrdNm,
       (select substr(xe.address_line_1, 1, 100)
		  from xle_establishment_v xe, 
			   zx_registrations zr, 
			   zx_party_tax_profile ptp
		 where zr.party_tax_profile_id = ptp.party_tax_profile_id
		   and ptp.party_type_code = 'LEGAL_ESTABLISHMENT'
		   and ptp.party_id = xe.party_id
		   and zr.registration_id = rct.first_pty_reg_id) SellerDtls_Addr1,
       (select substr(xe.address_line_2, 1, 100)
		  from xle_establishment_v xe, 
			   zx_registrations zr, 
			   zx_party_tax_profile ptp
		 where zr.party_tax_profile_id = ptp.party_tax_profile_id
		   and ptp.party_type_code = 'LEGAL_ESTABLISHMENT'
		   and ptp.party_id = xe.party_id
		   and zr.registration_id = rct.first_pty_reg_id) SellerDtls_Addr2,
       (select substr(xe.town_or_city, 1, 50)
		  from xle_establishment_v xe, 
			   zx_registrations zr, 
			   zx_party_tax_profile ptp
		 where zr.party_tax_profile_id = ptp.party_tax_profile_id
		   and ptp.party_type_code = 'LEGAL_ESTABLISHMENT'
		   and ptp.party_id = xe.party_id
		   and zr.registration_id = rct.first_pty_reg_id) SellerDtls_Loc,
       (select xe.postal_code
		  from xle_establishment_v xe, 
			   zx_registrations zr, 
			   zx_party_tax_profile ptp
		 where zr.party_tax_profile_id = ptp.party_tax_profile_id
		   and ptp.party_type_code = 'LEGAL_ESTABLISHMENT'
		   and ptp.party_id = xe.party_id
		   and zr.registration_id = rct.first_pty_reg_id) SellerDtls_Pin,
   	   (select flv.tag
		  from xle_establishment_v xe, 
			   zx_registrations zr, 
			   zx_party_tax_profile ptp,
			   fnd_lookup_values flv
		 where zr.party_tax_profile_id = ptp.party_tax_profile_id
		   and ptp.party_type_code = 'LEGAL_ESTABLISHMENT'
		   and ptp.party_id = xe.party_id
		   and zr.registration_id = rct.first_pty_reg_id
		   and upper(xe.region_2) = upper(flv.meaning)
		   and flv.lookup_type = 'CRISIL_STATE_CODE'
           and flv.enabled_flag = 'Y'
           and flv.language = 'US') SellerDtls_Stcd,		-- Added by Pratul on 13Jan
       /*(select flv.tag
          from xle_establishment_v xe, fnd_lookup_values flv
         where xe.main_establishment_flag = 'Y'
           and xe.legal_entity_id = rct.legal_entity_id
           and upper(xe.region_2) = upper(flv.meaning)
           and flv.lookup_type = 'CRISIL_STATE_CODE'
           and flv.enabled_flag = 'Y'
           and flv.language = 'US') SellerDtls_Stcd,	Commented by Pratul on 13Jan*/
       null SellerDtls_Ph,
       null SellerDtls_Em,
       case
         when gst.registration_status_code IN ('EXPORT', 'NOT REGISTERED') then
          'URP'
         else
          substr(gst.registration_number, 1, 15)
       end BuyerDtls_Gstin,
       substr(hp.party_name, 1, 100) BuyerDtls_LglNm,
       substr(hp.party_name, 1, 100) BuyerDtls_TrdNm,
       substr(hl.address1, 1, 100) BuyerDtls_Addr1,
       substr(hl.address2, 1, 100) BuyerDtls_Addr2,
       substr(hl.city, 1, 100) BuyerDtls_Loc,
       case
         when gst.registration_status_code = 'EXPORT' then
          '999999'
         else
          hl.postal_code
       end BuyerDtls_Pin,
       case
         when gst.registration_status_code = 'EXPORT' then
          '96'
         else
          (select tag
             from fnd_lookup_values
            where lookup_type = 'CRISIL_STATE_CODE'
              and enabled_flag = 'Y'
              and language = 'US'
              and upper(meaning) = upper(hl.state))
       end BuyerDtls_Stcd,
       case
         when gst.registration_status_code = 'EXPORT' then
          '96'
         else
          (select flv.tag
             from hz_party_site_uses hpsu,
                  hz_party_sites     hps1,
                  hz_locations       hl1,
                  fnd_lookup_values  flv
            where hpsu.party_site_use_id = rct.ship_to_party_site_use_id
              and hpsu.party_site_id = hps1.party_site_id
              and hps1.location_id = hl1.location_id
              and upper(hl1.state) = upper(flv.meaning)
              and flv.lookup_type = 'CRISIL_STATE_CODE'
              and flv.enabled_flag = 'Y'
              and flv.language = 'US')
       end BuyerDtls_Pos,
       substr(hca.account_number, 1, 250) BuyerDtls_CustomerCode,
       substr(rctl.line_number, 1, 6) ItemsList_SlNo,
       substr(rctl.attribute1, 1, 8) ItemsList_HsnCd,
       case
         when rctl.attribute1 like '99%' then
          'Y'
         else
          'N'
       end ItemsList_IsServc,
       DECODE(rctt.type,
              'CM',
              ABS(nvl(rctl.quantity_invoiced, rctl.quantity_credited)),
              nvl(rctl.quantity_invoiced, rctl.quantity_credited)) ItemList_Unit, --Added by Meenal on 30Dec
       ((regexp_replace(rctl.attribute2, '[^0-9.]') * NVL(rct.exchange_rate, 1)) /
       nvl(rctl.quantity_invoiced, rctl.quantity_credited)) ItemList_UnitPrice,
       (DECODE(rctt.type, 'CM', 
						ABS(regexp_replace(rctl.attribute2, '[^0-9.]')), 
					    regexp_replace(rctl.attribute2, '[^0-9.]')
			 ) * NVL(rct.exchange_rate, 1)) itemslist_TotAmt, --Added by Meenal on 30Dec
       (DECODE(rctt.type, 'CM', 
						ABS(regexp_replace(rctl.attribute3, '[^0-9.]')), 
						regexp_replace(rctl.attribute3, '[^0-9.]')
			 ) * NVL(rct.exchange_rate, 1))  ItemList_Discount, --Added by Meenal on 30Dec
       null ItemsList_PreTaxVal,
       (DECODE(rctt.type,
              'CM',
              ABS(regexp_replace(rctl.attribute2, '[^0-9.]') - regexp_replace(rctl.attribute3, '[^0-9.]')),
              (regexp_replace(rctl.attribute2, '[^0-9.]') - regexp_replace(rctl.attribute3, '[^0-9.]'))
			 ) * NVL(rct.exchange_rate, 1)) ItemsList_AssAmt, --Added by Meenal on 30Dec
       (select sum(tax_rate)
          from zx_lines
         where application_id = 222
           and trx_id = rct.customer_trx_id
           and trx_line_id = rctl.customer_trx_line_id
           and tax not like '%US_SALES_TAX%') itemslist_GstRt,
       (select sum(tax_rate)
          from zx_lines
         where application_id = 222
           and trx_id = rct.customer_trx_id
           and trx_line_id = rctl.customer_trx_line_id
           and tax like '%CGST%') ItemsList_CgstRt,
       (select sum(tax_rate)
          from zx_lines
         where application_id = 222
           and trx_id = rct.customer_trx_id
           and trx_line_id = rctl.customer_trx_line_id
           and tax like '%SGST%') ItemsList_SgstRt,
       (select sum(tax_rate)
          from zx_lines
         where application_id = 222
           and trx_id = rct.customer_trx_id
           and trx_line_id = rctl.customer_trx_line_id
           and tax like '%IGST%') ItemsList_IgstRt,
       (select sum(tax_rate)
          from zx_lines
         where application_id = 222
           and trx_id = rct.customer_trx_id
           and trx_line_id = rctl.customer_trx_line_id
           and tax like '%CESS%') ItemsList_CesRt,
       (DECODE(rctt.type,
              'CM',
              ABS((select sum(tax_amt)
                    from zx_lines
                   where application_id = 222
                     and trx_id = rct.customer_trx_id
                     and trx_line_id = rctl.customer_trx_line_id
                     and tax like '%IGST%')),
              (select sum(tax_amt)
                 from zx_lines
                where application_id = 222
                  and trx_id = rct.customer_trx_id
                  and trx_line_id = rctl.customer_trx_line_id
                  and tax like '%IGST%')) * NVL(rct.exchange_rate, 1)) ItemsList_IgstAmt, --Added by Meenal on 30Dec
       (DECODE(rctt.type,
              'CM',
              ABS((select sum(tax_amt)
                    from zx_lines
                   where application_id = 222
                     and trx_id = rct.customer_trx_id
                     and trx_line_id = rctl.customer_trx_line_id
                     and tax like '%CGST%')),
              (select sum(tax_amt)
                 from zx_lines
                where application_id = 222
                  and trx_id = rct.customer_trx_id
                  and trx_line_id = rctl.customer_trx_line_id
                  and tax like '%CGST%')) * NVL(rct.exchange_rate, 1)) ItemsList_CgstAmt, --Added by Meenal on 30Dec
       (DECODE(rctt.type,
              'CM',
              ABS((select sum(tax_amt)
                    from zx_lines
                   where application_id = 222
                     and trx_id = rct.customer_trx_id
                     and trx_line_id = rctl.customer_trx_line_id
                     and tax like '%SGST%')),
              (select sum(tax_amt)
                 from zx_lines
                where application_id = 222
                  and trx_id = rct.customer_trx_id
                  and trx_line_id = rctl.customer_trx_line_id
                  and tax like '%CGST%')) * NVL(rct.exchange_rate, 1)) ItemsList_SgstAmt, --Added by Meenal on 30Dec
       (DECODE(rctt.type,
              'CM',
              ABS((select sum(tax_amt)
                    from zx_lines
                   where application_id = 222
                     and trx_id = rct.customer_trx_id
                     and trx_line_id = rctl.customer_trx_line_id
                     and tax like '%CESS%')),
              (select sum(tax_amt)
                 from zx_lines
                where application_id = 222
                  and trx_id = rct.customer_trx_id
                  and trx_line_id = rctl.customer_trx_line_id
                  and tax like '%CESS%')) * NVL(rct.exchange_rate, 1)) ItemsList_CesAmt,
       (DECODE(rctt.type,
              'CM',
              ABS((regexp_replace(rctl.attribute2, '[^0-9.]') - regexp_replace(rctl.attribute3, '[^0-9.]')) +
                  (select NVL(sum(tax_amt), 0)
                     from zx_lines
                    where application_id = 222
                      and trx_id = rct.customer_trx_id
                      and trx_line_id = rctl.customer_trx_line_id
                      and tax not like '%US_SALES_TAX%')),
              ((regexp_replace(rctl.attribute2, '[^0-9.]') - regexp_replace(rctl.attribute3, '[^0-9.]')) +
              (select NVL(sum(tax_amt), 0)
                  from zx_lines
                 where application_id = 222
                   and trx_id = rct.customer_trx_id
                   and trx_line_id = rctl.customer_trx_line_id
                   and tax not like '%US_SALES_TAX%'))) * NVL(rct.exchange_rate, 1)) ItemsList_TotItemVal, -- Added on 15Dec by Pratul  --Added by Meenal on 30Dec
       /*(select NVL(sum(extended_amount), 0)      -- Commented on 11Jan by Pratul
                      from ra_customer_trx_lines_all
                     where customer_trx_id = rct.customer_trx_id
                       and link_to_cust_trx_line_id = rctl.customer_trx_line_id
                       and line_type = 'TAX')*/
       /* rctl.extended_amount ItemsList_TotItemVal,       
                     (select sum(rctl.extended_amount)
                        from ra_customer_trx_lines_all
                       where customer_trx_id = rct.customer_trx_id) ItemsList_TotItemVal, -- Commented on 15Dec by Pratul*/
       'IN' ItemsList_OrgCntry,
       (Select substr(gcc.segment2, 1, 250)
          from ra_cust_trx_line_gl_dist_all rctlgd, gl_code_combinations gcc
         where rctlgd.account_class = 'REV'
           and rctlgd.code_combination_id = gcc.code_combination_id
           and rctlgd.customer_trx_line_id = rctl.customer_trx_line_id
           and rownum = 1) ItemList_GlCodeRevenueExpense,
       '212056' ItemList_GlCodeIgst,
       '212057' ItemList_GlCodeCgst,
       '212058' ItemList_GlCodeSgst,
       '212059' ItemList_GlCodeCess,
       (select substr(gcc.segment1, 1, 250)
          from ra_cust_trx_line_gl_dist_all rctlgd, gl_code_combinations gcc
         where rctlgd.account_class = 'REC'
           and rctlgd.code_combination_id = gcc.code_combination_id
           and rctlgd.customer_trx_id = rct.customer_trx_id
           and rownum = 1) ItemList_Mis1,
       (select substr(gcc.segment2, 1, 250)
          from ra_cust_trx_line_gl_dist_all rctlgd, gl_code_combinations gcc
         where rctlgd.account_class = 'REC'
           and rctlgd.code_combination_id = gcc.code_combination_id
           and rctlgd.customer_trx_id = rct.customer_trx_id
           and rownum = 1) ItemList_Mis_2,
       (select substr(gcc.segment3, 1, 250)
          from ra_cust_trx_line_gl_dist_all rctlgd, gl_code_combinations gcc
         where rctlgd.account_class = 'REC'
           and rctlgd.code_combination_id = gcc.code_combination_id
           and rctlgd.customer_trx_id = rct.customer_trx_id
           and rownum = 1) ItemList_Mis_3,
       (select substr(gcc.segment4, 1, 250)
          from ra_cust_trx_line_gl_dist_all rctlgd, gl_code_combinations gcc
         where rctlgd.account_class = 'REC'
           and rctlgd.code_combination_id = gcc.code_combination_id
           and rctlgd.customer_trx_id = rct.customer_trx_id
           and rownum = 1) ItemList_Mis_4,
       (select substr(gcc.segment5, 1, 250)
          from ra_cust_trx_line_gl_dist_all rctlgd, gl_code_combinations gcc
         where rctlgd.account_class = 'REC'
           and rctlgd.code_combination_id = gcc.code_combination_id
           and rctlgd.customer_trx_id = rct.customer_trx_id
           and rownum = 1) ItemList_Mis_5,
       (select substr(gcc.segment6, 1, 250)
          from ra_cust_trx_line_gl_dist_all rctlgd, gl_code_combinations gcc
         where rctlgd.account_class = 'REC'
           and rctlgd.code_combination_id = gcc.code_combination_id
           and rctlgd.customer_trx_id = rct.customer_trx_id
           and rownum = 1) ItemList_Mis_6,
       (select substr(gcc.segment7, 1, 250)
          from ra_cust_trx_line_gl_dist_all rctlgd, gl_code_combinations gcc
         where rctlgd.account_class = 'REC'
           and rctlgd.code_combination_id = gcc.code_combination_id
           and rctlgd.customer_trx_id = rct.customer_trx_id
           and rownum = 1) ItemList_Mis_7,
       (select substr(gcc.segment8, 1, 250)
          from ra_cust_trx_line_gl_dist_all rctlgd, gl_code_combinations gcc
         where rctlgd.account_class = 'REC'
           and rctlgd.code_combination_id = gcc.code_combination_id
           and rctlgd.customer_trx_id = rct.customer_trx_id
           and rownum = 1) ItemList_Mis_8,
       (select substr(gcc.segment9, 1, 250)
          from ra_cust_trx_line_gl_dist_all rctlgd, gl_code_combinations gcc
         where rctlgd.account_class = 'REC'
           and rctlgd.code_combination_id = gcc.code_combination_id
           and rctlgd.customer_trx_id = rct.customer_trx_id
           and rownum = 1) ItemList_Mis_9,
       (DECODE(rctt.type,
              'CM',
              ABS((select sum(regexp_replace(attribute2, '[^0-9.]') - regexp_replace(attribute3, '[^0-9.]'))
                    from ra_customer_trx_lines_all
                   where customer_trx_id = rct.customer_trx_id)),
              (select sum(regexp_replace(attribute2, '[^0-9.]') - regexp_replace(attribute3, '[^0-9.]'))
                 from ra_customer_trx_lines_all
                where customer_trx_id = rct.customer_trx_id)) * NVL(rct.exchange_rate, 1)) ValDtls_AssVal, -- Added by Pratul on 16Dec    --Added by Meenal on 30Dec
       /* (select sum(extended_amount)
                        from ra_customer_trx_lines_all
                       where customer_trx_id = rct.customer_trx_id) ValDtls_AssVal, Commented by Pratul Goel on 15Dec*/
       (DECODE(rctt.type,
              'CM',
              ABS((select sum(tax_amt)
                    from zx_lines
                   where application_id = 222
                     and trx_id = rct.customer_trx_id
                        --- and trx_line_id = rctl.customer_trx_line_id     Commented by Pratul Goel on 16Dec
                     and tax like '%CGST%')),
              (select sum(tax_amt)
                 from zx_lines
                where application_id = 222
                  and trx_id = rct.customer_trx_id
                     --- and trx_line_id = rctl.customer_trx_line_id     Commented by Pratul Goel on 16Dec
                  and tax like '%CGST%')) * NVL(rct.exchange_rate, 1)) ValDtls_CgstVal, --Added by Meenal on 30Dec
       (DECODE(rctt.type,
              'CM',
              ABS((select sum(tax_amt)
                    from zx_lines
                   where application_id = 222
                     and trx_id = rct.customer_trx_id
                        --- and trx_line_id = rctl.customer_trx_line_id   Commented by Pratul Goel on 16Dec
                     and tax like '%SGST%')),
              (select sum(tax_amt)
                 from zx_lines
                where application_id = 222
                  and trx_id = rct.customer_trx_id
                     --- and trx_line_id = rctl.customer_trx_line_id   Commented by Pratul Goel on 16Dec
                  and tax like '%SGST%')) * NVL(rct.exchange_rate, 1)) ValDtls_SgstVal, --Added by Meenal on 30Dec
       (DECODE(rctt.type,
              'CM',
              ABS((select sum(tax_amt)
                    from zx_lines
                   where application_id = 222
                     and trx_id = rct.customer_trx_id
                        --- and trx_line_id = rctl.customer_trx_line_id   Commented by Pratul Goel on 16Dec
                     and tax like '%IGST%')),
              (select sum(tax_amt)
                 from zx_lines
                where application_id = 222
                  and trx_id = rct.customer_trx_id
                     --- and trx_line_id = rctl.customer_trx_line_id   Commented by Pratul Goel on 16Dec
                  and tax like '%IGST%')) * NVL(rct.exchange_rate, 1)) ValDtls_IgstVal,
       (DECODE(rctt.type,
              'CM',
              ABS((select sum(tax_amt)
                    from zx_lines
                   where application_id = 222
                     and trx_id = rct.customer_trx_id
                        --- and trx_line_id = rctl.customer_trx_line_id   Commented by Pratul Goel on 15Dec
                     and tax like '%CESS%')),
              (select sum(tax_amt)
                 from zx_lines
                where application_id = 222
                  and trx_id = rct.customer_trx_id
                     --- and trx_line_id = rctl.customer_trx_line_id   Commented by Pratul Goel on 15Dec
                  and tax like '%CESS%')) * NVL(rct.exchange_rate, 1)) ValDtls_CesVal,
       0 ValDtls_Discount, -- Added by Pratul on 06Jan
       /* DECODE(rctt.type, 'CM', ABS((select sum(attribute3)
                      from ra_customer_trx_lines_all
                       where customer_trx_id = rct.customer_trx_id)), (select sum(attribute3)
                      from ra_customer_trx_lines_all
                       where customer_trx_id = rct.customer_trx_id)) ValDtls_Discount,    Commented by Pratul Goel on06Jan*/
       DECODE(rctt.type,
              'CM',
              ABS((select sum(rctlgd.acctd_amount)
                    from ra_cust_trx_line_gl_dist_all rctlgd
                   where rctlgd.account_class = 'ROUND'
                     and rctlgd.customer_trx_id = rct.customer_trx_id)),
              (select sum(rctlgd.acctd_amount)
                 from ra_cust_trx_line_gl_dist_all rctlgd
                where rctlgd.account_class = 'ROUND'
                  and rctlgd.customer_trx_id = rct.customer_trx_id)) ValDtls_RndOffAmt,
       (DECODE(rctt.type,
              'CM',
              ABS((select NVL(sum(regexp_replace(attribute2, '[^0-9.]') - regexp_replace(attribute3, '[^0-9.]')), 0)
                     from ra_customer_trx_lines_all
                    where customer_trx_id = rct.customer_trx_id
                      and line_type = 'LINE') +
                  (select nvl(sum(tax_amt), 0)
                     from zx_lines
                    where application_id = 222
                      and trx_id = rct.customer_trx_id
                      and tax not like '%US_SALES_TAX%')),
              ((select NVL(sum(regexp_replace(attribute2, '[^0-9.]') - regexp_replace(attribute3, '[^0-9.]')), 0)
                  from ra_customer_trx_lines_all
                 where customer_trx_id = rct.customer_trx_id
                   and line_type = 'LINE') +
              (select nvl(sum(tax_amt), 0)
                  from zx_lines
                 where application_id = 222
                   and trx_id = rct.customer_trx_id
                   and tax not like '%US_SALES_TAX%'))) * NVL(rct.exchange_rate, 1)) ValDtls_TotInvVal, -- Added on 15Dec by Pratul --Added by Meenal 30Dec
       /*rctl.extended_amount ValDtls_TotInvVal,     
                     (select sum(extended_amount)
                        from ra_customer_trx_lines_all
                       where customer_trx_id = rct.customer_trx_id) ValDtls_TotInvVal,  -- Commented on 15Dec by Pratul */
       substr(rct.trx_number, 1, 250) RefDtls_AccountingDocNo,
       (Select to_char(rctlgd.gl_date, 'DD/MM/YYYY')
          from ra_cust_trx_line_gl_dist_all rctlgd
         where 1=1 ---rctlgd.customer_trx_line_id = rctl.customer_trx_line_id
           and rctlgd.customer_trx_id = rct.customer_trx_id
		   and rctlgd.account_class = 'REC'
           and rownum = 1) RefDtls_AccountingDocDt,
       (Select to_char(rctlgd.gl_date, 'MON-YY')
          from ra_cust_trx_line_gl_dist_all rctlgd
         where 1=1 --rctlgd.customer_trx_line_id = rctl.customer_trx_line_id
           and rctlgd.customer_trx_id = rct.customer_trx_id
		   and rctlgd.account_class = 'REC'
           and rownum = 1) MisColumns_ReturnPeriod,
       rct.customer_trx_id,
       case
         when (rctt.attribute_category = 'CRISIL_Additional_Information' and
              UPPER(rctt.attribute1) = 'YES') then
          'Y'
         else
          'N'
       end einvoice_applicable,
       (select trx_number
          from ra_customer_trx_all rct1
         where rct1.customer_trx_id = rct.previous_customer_trx_id) orig_inv_num,
       (select to_char(trx_date, 'DD/MM/YYYY')
          from ra_customer_trx_all rct1
         where rct1.customer_trx_id = rct.previous_customer_trx_id) orig_inv_date,
       rctt.name trx_type
  from ra_customer_trx_all       rct,
       ra_customer_trx_lines_all rctl,
       ra_cust_trx_line_gl_dist_all RCTLGDA,  --Added by Ankit on 12thDec2020 for finding Accounting invoices
       ra_batch_sources_all rbs,
       ra_cust_trx_types_all rctt,
       hz_cust_accounts hca,
       hz_parties hp,
       hz_cust_site_uses_all hcsu,
       hz_cust_acct_sites_all hcas,
       hz_party_sites hps,
       hz_locations hl,
	   fun_all_business_units_v fab,
       (select DECODE(ZR.registration_number, 'ECC123456', NULL, 'UNR123456', NULL, ZR.registration_number) registration_number,
               ptp.party_id,
               zr.registration_status_code
          from zx_registrations zr, zx_party_tax_profile ptp
         where zr.party_tax_profile_id = ptp.party_tax_profile_id
           and ptp.party_type_code = 'THIRD_PARTY_SITE'
           and zr.tax_regime_code = 'IN_GST'
           and trunc(sysdate) between trunc(zr.effective_from) and
               nvl(trunc(zr.effective_to), trunc(sysdate))) gst
 where rct.batch_source_seq_id = rbs.batch_source_seq_id
   and rct.cust_trx_type_seq_id = rctt.cust_trx_type_seq_id
   and rct.customer_trx_id = rctl.customer_trx_id
   and rct.customer_trx_id = RCTLGDA.customer_trx_id --Added by Ankit on 12thDec2020 for finding Accounting invoices
   and RCTLGDA.gl_posted_date IS NOT NULL --Added by Ankit on 12thDec2020 for finding Accounting invoices
   and RCTLGDA.account_class =  'REC'  --Added by Ankit on 12thDec2020 for finding Accounting invoices
   and rctl.line_type = 'LINE'
   and rctt.type <> 'CM'
   and rct.bill_to_customer_id = hca.cust_account_id
   and hca.party_id = hp.party_id
   and rct.bill_to_site_use_id = hcsu.site_use_id
   and hcsu.cust_acct_site_id = hcas.cust_acct_site_id
   and hcas.party_site_id = hps.party_site_id
   and hps.location_id = hl.location_id
   and hps.party_site_id = gst.party_id(+)
   and rct.complete_flag = 'Y'
   and fab.bu_id = rct.org_id
   and fab.bu_name in ('CRISIL LIMITED', 'CRISIL Ratings Limited',
						'PRAGMATIX SERVICES PRIVATE LIMITED',
						'CRISIL Risk and Infrastructure Solutions Limited')	 
   and fab.bu_name = :p_bu_name
   and rct.trx_number = NVL(:p_trx_number, rct.trx_number)
   and TO_CHAR((SELECT gl_date
				  FROM ra_cust_trx_line_gl_dist_all
				 WHERE customer_trx_id = RCT.customer_trx_id
  				   AND account_class =  'REC'
				   AND rownum = 1), 'MM-YYYY') BETWEEN TO_CHAR(:p_from_period, 'MM-YYYY') 
												   AND TO_CHAR(:p_to_period, 'MM-YYYY')
 union
 select (select substr(zr.registration_number, 1, 15)
          from zx_registrations         zr,
               zx_party_tax_profile     ptp,
               xle_establishment_v      xe,
               fun_all_business_units_v fab
         where zr.party_tax_profile_id = ptp.party_tax_profile_id
           and ptp.party_type_code = 'LEGAL_ESTABLISHMENT'
           and ptp.party_id = xe.party_id
              --  and xe.main_establishment_flag = 'N' --commented by Ankit on 12thDec2020
           and xe.legal_entity_id = fab.legal_entity_id
           and fab.bu_id = rct.org_id
           AND zr.registration_id = rct.first_pty_reg_id --Added by Ankit on 12thDec2020
        ) User_GSTIN,
       null Version,
       rct.attribute6 IRN,							-- NULL IRN (Logic changed on 01Mar by Pratul)
       substr(rbs.name, 1, 250) SourceSystem,
       case
         when (select count(1)
                 from zx_registrations         zr,
                      zx_party_tax_profile     ptp,
                      xle_establishment_v      xe,
                      fun_all_business_units_v fab
                where zr.party_tax_profile_id = ptp.party_tax_profile_id
                  and ptp.party_type_code = 'LEGAL_ESTABLISHMENT'
                  and zr.registration_status_code = 'SEZ'
                  and ptp.party_id = xe.party_id
                  and xe.legal_entity_id = fab.legal_entity_id
                  and fab.bu_id = rct.org_id
                  AND zr.registration_id = rct.first_pty_reg_id) > 0 then
          'N'
         when gst.registration_status_code = 'NOT REGISTERED' then
          'N'
		 when fab.bu_name in ('CRISIL Ratings Limited', 'PRAGMATIX SERVICES PRIVATE LIMITED') then
		  'N'
       --- when gst.registration_status_code IN ('EXPORT', 'SEZ', 'REGISTERED') then --Added REGISTERED by Ankit on 12thDec2020
         else
          'Y'
       end is_irn,
       'crisilar@crisil.com' email,
       'GST' TranDtls_TaxSch,
       'Outward' TranDtls_OutwardInward,
       case
         when gst.registration_status_code = 'EXPORT' then
          'Export'
       /* Commented on 21Dec by Pratul
                   when gst.registration_status_code IN
                            ('REGISTERED', 'NOT REGISTERED', 'SEZ') then
                        'Supply'*/
         else
          'Supply'
       end TranDtls_SubType,
       case
         when gst.registration_status_code = 'EXPORT' then
          'EXPWOP'
         when gst.registration_status_code = 'SEZ' then
          'SEZWOP'
         when gst.registration_status_code = 'NOT REGISTERED' then
          'B2C'
         when gst.registration_number is not null then
          'B2B'
         else
          null
       end TranDtls_SupTyp,
       'N' TranDtls_RegRev,
       'REG' TranDtls_Typ,
       /*case   Commented by Pratul on 30Dec
                       when gst.registration_status_code = 'SEZ' then
                        'Y'
                       else
                        'N'
                     end TranDtls_IgstOnIntra,*/
       'N' TranDtls_IgstOnIntra, -- Added by Pratul on 30Dec
       case
         when gst.registration_status_code = 'EXEMPT' then
          'Exempted'
         when gst.registration_status_code = 'SEZ' then
          'Supply to SEZ'
         when gst.registration_status_code = 'EXPORT' then
          'Export'
         when gst.registration_status_code = 'NIL RATED' then
          'NIL Rated'
		 when gst.registration_status_code = 'NOT REGISTERED' then				-- New Condition added on 1Mar by Pratul
          'Taxable'		  
         when gst.registration_number is not null then
          'Taxable'
         else
          null
       end TranDtls_Taxability,
	   case
         when gst.registration_status_code = 'SEZ' then
          'INTER'
         when (select count(*)
                 from zx_lines
                where application_id = 222
                  and trx_id = rct.customer_trx_id
                  and trx_line_id = rctl.customer_trx_line_id
                  and tax like '%IGST%') > 0 then
          'INTER'
         when (select count(1)
                     from zx_lines
                    where application_id = 222
                      and trx_id = rct.customer_trx_id
                      and trx_line_id = rctl.customer_trx_line_id
                      and tax not like '%US_SALES_TAX%') = 0 then
			 case when ((select flv.tag
						  from xle_establishment_v xe, 
							   zx_registrations zr, 
							   zx_party_tax_profile ptp,
							   fnd_lookup_values flv
						 where zr.party_tax_profile_id = ptp.party_tax_profile_id
						   and ptp.party_type_code = 'LEGAL_ESTABLISHMENT'
						   and ptp.party_id = xe.party_id
						   and zr.registration_id = rct.first_pty_reg_id
						   and upper(xe.region_2) = upper(flv.meaning)
						   and flv.lookup_type = 'CRISIL_STATE_CODE'
						   and flv.enabled_flag = 'Y'
						   and flv.language = 'US') = (case when gst.registration_status_code = 'EXPORT' then '96'
															else
															  (select tag from fnd_lookup_values
																where lookup_type = 'CRISIL_STATE_CODE'
																  and enabled_flag = 'Y'
																  and language = 'US'
																  and upper(meaning) = upper(hl.state))
													   end)) then 'INTRA'
				  else 'INTER' end
		 else
          'INTRA'
       end TranDtls_InterIntra,
       DECODE(rctt.type, 'DM', 'DBN', 'CM', 'CRN', 'INV', 'INV', null) DocDtls_Typ,
       substr(rct.trx_number, 1, 16) DocDtls_No,
       to_char(rct.trx_date, 'DD/MM/YYYY') DocDtls_Dt,
       rct.attribute11 DocDtls_ReasonForCnDn, -- Added by Pratul on 16Dec
       (select substr(zr.registration_number, 1, 15)
          from zx_registrations         zr,
               zx_party_tax_profile     ptp,
               xle_establishment_v      xe,
               fun_all_business_units_v fab
         where zr.party_tax_profile_id = ptp.party_tax_profile_id
           and ptp.party_type_code = 'LEGAL_ESTABLISHMENT'
           and ptp.party_id = xe.party_id
              -- and xe.main_establishment_flag = 'N' --commented by Ankit on 12thDec2020
           and xe.legal_entity_id = fab.legal_entity_id
           and fab.bu_id = rct.org_id
           AND zr.registration_id = rct.first_pty_reg_id --Added by Ankit on 12thDec2020
        ) SellerDtls_Gstin,
      /* (select substr(xe.establishment_name, 1, 100)
          from xle_establishment_v xe
         where xe.main_establishment_flag = 'Y'
           and xe.legal_entity_id = rct.legal_entity_id) SellerDtls_LglNm, */ -- Commented by Pratul on 13Jan
	   (select substr(xep.name, 1, 100)
		  from xle_establishment_v xe, 
			   zx_registrations zr, 
			   zx_party_tax_profile ptp,
			   xle_entity_profiles xep
		 where zr.party_tax_profile_id = ptp.party_tax_profile_id
		   and ptp.party_type_code = 'LEGAL_ESTABLISHMENT'
		   and ptp.party_id = xe.party_id
		   and xe.legal_entity_id = xep.legal_entity_id
		   and zr.registration_id = rct.first_pty_reg_id) SellerDtls_LglNm,	-- Added by Pratul on 13Jan
	   (select substr(xep.name, 1, 100)
		  from xle_establishment_v xe, 
			   zx_registrations zr, 
			   zx_party_tax_profile ptp,
			   xle_entity_profiles xep
		 where zr.party_tax_profile_id = ptp.party_tax_profile_id
		   and ptp.party_type_code = 'LEGAL_ESTABLISHMENT'
		   and ptp.party_id = xe.party_id
		   and xe.legal_entity_id = xep.legal_entity_id
		   and zr.registration_id = rct.first_pty_reg_id) SellerDtls_TrdNm,
       (select substr(xe.address_line_1, 1, 100)
		  from xle_establishment_v xe, 
			   zx_registrations zr, 
			   zx_party_tax_profile ptp
		 where zr.party_tax_profile_id = ptp.party_tax_profile_id
		   and ptp.party_type_code = 'LEGAL_ESTABLISHMENT'
		   and ptp.party_id = xe.party_id
		   and zr.registration_id = rct.first_pty_reg_id) SellerDtls_Addr1,
       (select substr(xe.address_line_2, 1, 100)
		  from xle_establishment_v xe, 
			   zx_registrations zr, 
			   zx_party_tax_profile ptp
		 where zr.party_tax_profile_id = ptp.party_tax_profile_id
		   and ptp.party_type_code = 'LEGAL_ESTABLISHMENT'
		   and ptp.party_id = xe.party_id
		   and zr.registration_id = rct.first_pty_reg_id) SellerDtls_Addr2,
       (select substr(xe.town_or_city, 1, 50)
		  from xle_establishment_v xe, 
			   zx_registrations zr, 
			   zx_party_tax_profile ptp
		 where zr.party_tax_profile_id = ptp.party_tax_profile_id
		   and ptp.party_type_code = 'LEGAL_ESTABLISHMENT'
		   and ptp.party_id = xe.party_id
		   and zr.registration_id = rct.first_pty_reg_id) SellerDtls_Loc,
       (select xe.postal_code
		  from xle_establishment_v xe, 
			   zx_registrations zr, 
			   zx_party_tax_profile ptp
		 where zr.party_tax_profile_id = ptp.party_tax_profile_id
		   and ptp.party_type_code = 'LEGAL_ESTABLISHMENT'
		   and ptp.party_id = xe.party_id
		   and zr.registration_id = rct.first_pty_reg_id) SellerDtls_Pin,
   	   (select flv.tag
		  from xle_establishment_v xe, 
			   zx_registrations zr, 
			   zx_party_tax_profile ptp,
			   fnd_lookup_values flv
		 where zr.party_tax_profile_id = ptp.party_tax_profile_id
		   and ptp.party_type_code = 'LEGAL_ESTABLISHMENT'
		   and ptp.party_id = xe.party_id
		   and zr.registration_id = rct.first_pty_reg_id
		   and upper(xe.region_2) = upper(flv.meaning)
		   and flv.lookup_type = 'CRISIL_STATE_CODE'
           and flv.enabled_flag = 'Y'
           and flv.language = 'US') SellerDtls_Stcd,		-- Added by Pratul on 13Jan
       /*(select flv.tag
          from xle_establishment_v xe, fnd_lookup_values flv
         where xe.main_establishment_flag = 'Y'
           and xe.legal_entity_id = rct.legal_entity_id
           and upper(xe.region_2) = upper(flv.meaning)
           and flv.lookup_type = 'CRISIL_STATE_CODE'
           and flv.enabled_flag = 'Y'
           and flv.language = 'US') SellerDtls_Stcd,	Commented by Pratul on 13Jan*/
       null SellerDtls_Ph,
       null SellerDtls_Em,
       case
         when gst.registration_status_code IN ('EXPORT', 'NOT REGISTERED') then
          'URP'
         else
          substr(gst.registration_number, 1, 15)
       end BuyerDtls_Gstin,
       substr(hp.party_name, 1, 100) BuyerDtls_LglNm,
       substr(hp.party_name, 1, 100) BuyerDtls_TrdNm,
       substr(hl.address1, 1, 100) BuyerDtls_Addr1,
       substr(hl.address2, 1, 100) BuyerDtls_Addr2,
       substr(hl.city, 1, 100) BuyerDtls_Loc,
       case
         when gst.registration_status_code = 'EXPORT' then
          '999999'
         else
          hl.postal_code
       end BuyerDtls_Pin,
       case
         when gst.registration_status_code = 'EXPORT' then
          '96'
         else
          (select tag
             from fnd_lookup_values
            where lookup_type = 'CRISIL_STATE_CODE'
              and enabled_flag = 'Y'
              and language = 'US'
              and upper(meaning) = upper(hl.state))
       end BuyerDtls_Stcd,
       case
         when gst.registration_status_code = 'EXPORT' then
          '96'
         else
          (select flv.tag
             from hz_party_site_uses hpsu,
                  hz_party_sites     hps1,
                  hz_locations       hl1,
                  fnd_lookup_values  flv
            where hpsu.party_site_use_id = rct.ship_to_party_site_use_id
              and hpsu.party_site_id = hps1.party_site_id
              and hps1.location_id = hl1.location_id
              and upper(hl1.state) = upper(flv.meaning)
              and flv.lookup_type = 'CRISIL_STATE_CODE'
              and flv.enabled_flag = 'Y'
              and flv.language = 'US')
       end BuyerDtls_Pos,
       substr(hca.account_number, 1, 250) BuyerDtls_CustomerCode,
       substr(rctl.line_number, 1, 6) ItemsList_SlNo,
       substr(rctl.attribute1, 1, 8) ItemsList_HsnCd,
       case
         when rctl.attribute1 like '99%' then
          'Y'
         else
          'N'
       end ItemsList_IsServc,
       1 ItemList_Unit, --Added by Meenal on 30Dec
       ABS(regexp_replace(rctl.attribute2, '[^0-9.]') * NVL(rct.exchange_rate, 1)) ItemList_UnitPrice,
       ABS(regexp_replace(rctl.attribute2, '[^0-9.]') * NVL(rct.exchange_rate, 1)) itemslist_TotAmt, --Added by Meenal on 30Dec
       ABS(regexp_replace(rctl.attribute3, '[^0-9.]') * NVL(rct.exchange_rate, 1)) ItemList_Discount, --Added by Meenal on 30Dec
       null ItemsList_PreTaxVal,
       (ABS(regexp_replace(rctl.attribute2, '[^0-9.]') - regexp_replace(rctl.attribute3, '[^0-9.]')) * NVL(rct.exchange_rate, 1)) ItemsList_AssAmt, --Added by Meenal on 30Dec
       (select sum(tax_rate)
          from zx_lines
         where application_id = 222
           and trx_id = rct.customer_trx_id
           and trx_line_id = rctl.customer_trx_line_id
           and tax not like '%US_SALES_TAX%') itemslist_GstRt,
       (select sum(tax_rate)
          from zx_lines
         where application_id = 222
           and trx_id = rct.customer_trx_id
           and trx_line_id = rctl.customer_trx_line_id
           and tax like '%CGST%') ItemsList_CgstRt,
       (select sum(tax_rate)
          from zx_lines
         where application_id = 222
           and trx_id = rct.customer_trx_id
           and trx_line_id = rctl.customer_trx_line_id
           and tax like '%SGST%') ItemsList_SgstRt,
       (select sum(tax_rate)
          from zx_lines
         where application_id = 222
           and trx_id = rct.customer_trx_id
           and trx_line_id = rctl.customer_trx_line_id
           and tax like '%IGST%') ItemsList_IgstRt,
       (select sum(tax_rate)
          from zx_lines
         where application_id = 222
           and trx_id = rct.customer_trx_id
           and trx_line_id = rctl.customer_trx_line_id
           and tax like '%CESS%') ItemsList_CesRt,
       CASE WHEN (select COUNT(1)
                    from zx_lines
                   where application_id = 222
                     and trx_id = rct.customer_trx_id
                     and trx_line_id = rctl.customer_trx_line_id
                     and tax like '%IGST%') > 0 THEN
		ROUND(((ABS(regexp_replace(rctl.attribute2, '[^0-9.]') - regexp_replace(rctl.attribute3, '[^0-9.]')) * 
				   (select sum(tax_rate)
					  from zx_lines
					 where application_id = 222
					   and trx_id = rct.customer_trx_id
					   and trx_line_id = rctl.customer_trx_line_id
					   and tax like '%IGST%') * NVL(rct.exchange_rate, 1))/100), 5)
			ELSE null 
	   END ItemsList_IgstAmt,
       CASE WHEN (select COUNT(1)
                    from zx_lines
                   where application_id = 222
                     and trx_id = rct.customer_trx_id
                     and trx_line_id = rctl.customer_trx_line_id
                     and tax like '%CGST%') > 0 THEN
		ROUND(((ABS(regexp_replace(rctl.attribute2, '[^0-9.]') - regexp_replace(rctl.attribute3, '[^0-9.]')) * 
  				   (select sum(tax_rate)
					  from zx_lines
					 where application_id = 222
					   and trx_id = rct.customer_trx_id
					   and trx_line_id = rctl.customer_trx_line_id
					   and tax like '%CGST%') * NVL(rct.exchange_rate, 1))/100), 5)
			ELSE null 
	   END ItemsList_CgstAmt,	   
       CASE WHEN (select COUNT(1)
                    from zx_lines
                   where application_id = 222
                     and trx_id = rct.customer_trx_id
                     and trx_line_id = rctl.customer_trx_line_id
                     and tax like '%SGST%') > 0 THEN
		ROUND(((ABS(regexp_replace(rctl.attribute2, '[^0-9.]') - regexp_replace(rctl.attribute3, '[^0-9.]')) * 
				   (select sum(tax_rate)
					  from zx_lines
					 where application_id = 222
					   and trx_id = rct.customer_trx_id
					   and trx_line_id = rctl.customer_trx_line_id
					   and tax like '%SGST%') * NVL(rct.exchange_rate, 1))/100), 5)
			ELSE null 
	   END ItemsList_SgstAmt,
       CASE WHEN (select COUNT(1)
                    from zx_lines
                   where application_id = 222
                     and trx_id = rct.customer_trx_id
                     and trx_line_id = rctl.customer_trx_line_id
                     and tax like '%CESS%') > 0 THEN
		ROUND(((ABS(regexp_replace(rctl.attribute2, '[^0-9.]') - regexp_replace(rctl.attribute3, '[^0-9.]')) * 
				   (select sum(tax_rate)
					  from zx_lines
					 where application_id = 222
					   and trx_id = rct.customer_trx_id
					   and trx_line_id = rctl.customer_trx_line_id
					   and tax like '%CESS%') * NVL(rct.exchange_rate, 1))/100), 5)
			ELSE null 
	   END ItemsList_CesAmt,
       ROUND(((ABS(regexp_replace(rctl.attribute2, '[^0-9.]') - regexp_replace(rctl.attribute3, '[^0-9.]')) * NVL(rct.exchange_rate, 1)) + 
				 ((ABS(regexp_replace(rctl.attribute2, '[^0-9.]') - regexp_replace(rctl.attribute3, '[^0-9.]')) * 
					   (select NVL(sum(tax_rate), 0)
						  from zx_lines
						 where application_id = 222
						   and trx_id = rct.customer_trx_id
						   and trx_line_id = rctl.customer_trx_line_id
						   and tax not like '%US_SALES_TAX%') * NVL(rct.exchange_rate, 1))/100)), 5) ItemsList_TotItemVal,
       'IN' ItemsList_OrgCntry,
       (Select substr(gcc.segment2, 1, 250)
          from ra_cust_trx_line_gl_dist_all rctlgd, gl_code_combinations gcc
         where rctlgd.account_class = 'REV'
           and rctlgd.code_combination_id = gcc.code_combination_id
           and rctlgd.customer_trx_line_id = rctl.customer_trx_line_id
           and rownum = 1) ItemList_GlCodeRevenueExpense,
       '212056' ItemList_GlCodeIgst,
       '212057' ItemList_GlCodeCgst,
       '212058' ItemList_GlCodeSgst,
       '212059' ItemList_GlCodeCess,
       (select substr(gcc.segment1, 1, 250)
          from ra_cust_trx_line_gl_dist_all rctlgd, gl_code_combinations gcc
         where rctlgd.account_class = 'REC'
           and rctlgd.code_combination_id = gcc.code_combination_id
           and rctlgd.customer_trx_id = rct.customer_trx_id
           and rownum = 1) ItemList_Mis1,
       (select substr(gcc.segment2, 1, 250)
          from ra_cust_trx_line_gl_dist_all rctlgd, gl_code_combinations gcc
         where rctlgd.account_class = 'REC'
           and rctlgd.code_combination_id = gcc.code_combination_id
           and rctlgd.customer_trx_id = rct.customer_trx_id
           and rownum = 1) ItemList_Mis_2,
       (select substr(gcc.segment3, 1, 250)
          from ra_cust_trx_line_gl_dist_all rctlgd, gl_code_combinations gcc
         where rctlgd.account_class = 'REC'
           and rctlgd.code_combination_id = gcc.code_combination_id
           and rctlgd.customer_trx_id = rct.customer_trx_id
           and rownum = 1) ItemList_Mis_3,
       (select substr(gcc.segment4, 1, 250)
          from ra_cust_trx_line_gl_dist_all rctlgd, gl_code_combinations gcc
         where rctlgd.account_class = 'REC'
           and rctlgd.code_combination_id = gcc.code_combination_id
           and rctlgd.customer_trx_id = rct.customer_trx_id
           and rownum = 1) ItemList_Mis_4,
       (select substr(gcc.segment5, 1, 250)
          from ra_cust_trx_line_gl_dist_all rctlgd, gl_code_combinations gcc
         where rctlgd.account_class = 'REC'
           and rctlgd.code_combination_id = gcc.code_combination_id
           and rctlgd.customer_trx_id = rct.customer_trx_id
           and rownum = 1) ItemList_Mis_5,
       (select substr(gcc.segment6, 1, 250)
          from ra_cust_trx_line_gl_dist_all rctlgd, gl_code_combinations gcc
         where rctlgd.account_class = 'REC'
           and rctlgd.code_combination_id = gcc.code_combination_id
           and rctlgd.customer_trx_id = rct.customer_trx_id
           and rownum = 1) ItemList_Mis_6,
       (select substr(gcc.segment7, 1, 250)
          from ra_cust_trx_line_gl_dist_all rctlgd, gl_code_combinations gcc
         where rctlgd.account_class = 'REC'
           and rctlgd.code_combination_id = gcc.code_combination_id
           and rctlgd.customer_trx_id = rct.customer_trx_id
           and rownum = 1) ItemList_Mis_7,
       (select substr(gcc.segment8, 1, 250)
          from ra_cust_trx_line_gl_dist_all rctlgd, gl_code_combinations gcc
         where rctlgd.account_class = 'REC'
           and rctlgd.code_combination_id = gcc.code_combination_id
           and rctlgd.customer_trx_id = rct.customer_trx_id
           and rownum = 1) ItemList_Mis_8,
       (select substr(gcc.segment9, 1, 250)
          from ra_cust_trx_line_gl_dist_all rctlgd, gl_code_combinations gcc
         where rctlgd.account_class = 'REC'
           and rctlgd.code_combination_id = gcc.code_combination_id
           and rctlgd.customer_trx_id = rct.customer_trx_id
           and rownum = 1) ItemList_Mis_9,
       (select ABS(sum(regexp_replace(attribute2, '[^0-9.]') - regexp_replace(attribute3, '[^0-9.]')) * NVL(rct.exchange_rate, 1))
		  from ra_customer_trx_lines_all
	     where customer_trx_id = rct.customer_trx_id) ValDtls_AssVal,
  	   ROUND((((select ABS(sum(regexp_replace(attribute2, '[^0-9.]') - regexp_replace(attribute3, '[^0-9.]')))
				  from ra_customer_trx_lines_all
				 where customer_trx_id = rct.customer_trx_id) * 
			   (select sum(tax_rate)
  				 from zx_lines
			    where application_id = 222
			 	  and trx_id = rct.customer_trx_id
				  and trx_line_id = rctl.customer_trx_line_id
				  and tax like '%CGST%') * NVL(rct.exchange_rate, 1))/100), 5) ValDtls_CgstVal,
	   ROUND((((select ABS(sum(regexp_replace(attribute2, '[^0-9.]') - regexp_replace(attribute3, '[^0-9.]')))
				  from ra_customer_trx_lines_all
				 where customer_trx_id = rct.customer_trx_id) * 
			   (select sum(tax_rate)
  				 from zx_lines
			    where application_id = 222
			 	  and trx_id = rct.customer_trx_id
				  and trx_line_id = rctl.customer_trx_line_id
				  and tax like '%SGST%') * NVL(rct.exchange_rate, 1))/100), 5) ValDtls_SgstVal,
	   ROUND((((select ABS(sum(regexp_replace(attribute2, '[^0-9.]') - regexp_replace(attribute3, '[^0-9.]')))
				  from ra_customer_trx_lines_all
				 where customer_trx_id = rct.customer_trx_id) * 
			   (select sum(tax_rate)
  				 from zx_lines
			    where application_id = 222
			 	  and trx_id = rct.customer_trx_id
				  and trx_line_id = rctl.customer_trx_line_id
				  and tax like '%IGST%') * NVL(rct.exchange_rate, 1))/100), 5) ValDtls_IgstVal,	 				  
	   ROUND((((select ABS(sum(regexp_replace(attribute2, '[^0-9.]') - regexp_replace(attribute3, '[^0-9.]')))
				  from ra_customer_trx_lines_all
				 where customer_trx_id = rct.customer_trx_id) * 
			   (select sum(tax_rate)
  				 from zx_lines
			    where application_id = 222
			 	  and trx_id = rct.customer_trx_id
				  and trx_line_id = rctl.customer_trx_line_id
				  and tax like '%CESS%') * NVL(rct.exchange_rate, 1))/100), 5) ValDtls_CesVal,
      0 ValDtls_Discount, -- Added by Pratul on 06Jan
	  ABS((select sum(rctlgd.acctd_amount)
			from ra_cust_trx_line_gl_dist_all rctlgd
		   where rctlgd.account_class = 'ROUND'
			 and rctlgd.customer_trx_id = rct.customer_trx_id)) ValDtls_RndOffAmt,
	  ROUND(((select NVL(ABS(sum(regexp_replace(attribute2, '[^0-9.]') - regexp_replace(attribute3, '[^0-9.]')) * NVL(rct.exchange_rate, 1)), 0)
			 from ra_customer_trx_lines_all
			where customer_trx_id = rct.customer_trx_id
			  and line_type = 'LINE') + 	
		 (((select NVL(ABS(sum(regexp_replace(attribute2, '[^0-9.]') - regexp_replace(attribute3, '[^0-9.]'))), 0)
			 from ra_customer_trx_lines_all
			where customer_trx_id = rct.customer_trx_id
			  and line_type = 'LINE') * (select NVL(sum(tax_rate), 0)
									  from zx_lines
									 where application_id = 222
									   and trx_id = rct.customer_trx_id
									   and trx_line_id = rctl.customer_trx_line_id
									   and tax not like '%US_SALES_TAX%') * NVL(rct.exchange_rate, 1))/100)), 5) ValDtls_TotInvVal,
       substr(rct.trx_number, 1, 250) RefDtls_AccountingDocNo,
       (Select to_char(rctlgd.gl_date, 'DD/MM/YYYY')
          from ra_cust_trx_line_gl_dist_all rctlgd
         where 1=1 ---rctlgd.customer_trx_line_id = rctl.customer_trx_line_id
           and rctlgd.customer_trx_id = rct.customer_trx_id
		   and rctlgd.account_class = 'REC'
           and rownum = 1) RefDtls_AccountingDocDt,
       (Select to_char(rctlgd.gl_date, 'MON-YY')
          from ra_cust_trx_line_gl_dist_all rctlgd
         where 1=1 --rctlgd.customer_trx_line_id = rctl.customer_trx_line_id
           and rctlgd.customer_trx_id = rct.customer_trx_id
		   and rctlgd.account_class = 'REC'
           and rownum = 1) MisColumns_ReturnPeriod,
       rct.customer_trx_id,
       case
         when (rctt.attribute_category = 'CRISIL_Additional_Information' and
              UPPER(rctt.attribute1) = 'YES') then
          'Y'
         else
          'N'
       end einvoice_applicable,
       (select trx_number
          from ra_customer_trx_all rct1
         where rct1.customer_trx_id = rct.previous_customer_trx_id) orig_inv_num,
       (select to_char(trx_date, 'DD/MM/YYYY')
          from ra_customer_trx_all rct1
         where rct1.customer_trx_id = rct.previous_customer_trx_id) orig_inv_date,
       rctt.name trx_type
  from ra_customer_trx_all       rct,
       ra_customer_trx_lines_all rctl,
       ra_cust_trx_line_gl_dist_all RCTLGDA,  --Added by Ankit on 12thDec2020 for finding Accounting invoices
       ra_batch_sources_all rbs,
       ra_cust_trx_types_all rctt,
       hz_cust_accounts hca,
       hz_parties hp,
       hz_cust_site_uses_all hcsu,
       hz_cust_acct_sites_all hcas,
       hz_party_sites hps,
       hz_locations hl,
	   fun_all_business_units_v fab,
       (select zr.registration_number,
               ptp.party_id,
               zr.registration_status_code
          from zx_registrations zr, zx_party_tax_profile ptp
         where zr.party_tax_profile_id = ptp.party_tax_profile_id
           and ptp.party_type_code = 'THIRD_PARTY_SITE'
           and zr.tax_regime_code = 'IN_GST'
           and trunc(sysdate) between trunc(zr.effective_from) and
               nvl(trunc(zr.effective_to), trunc(sysdate))) gst
 where rct.batch_source_seq_id = rbs.batch_source_seq_id
   and rct.cust_trx_type_seq_id = rctt.cust_trx_type_seq_id
   and rct.customer_trx_id = rctl.customer_trx_id
   and rct.customer_trx_id = RCTLGDA.customer_trx_id --Added by Ankit on 12thDec2020 for finding Accounting invoices
   and RCTLGDA.gl_posted_date IS NOT NULL --Added by Ankit on 12thDec2020 for finding Accounting invoices
   and RCTLGDA.account_class =  'REC'  --Added by Ankit on 12thDec2020 for finding Accounting invoices
   and rctl.line_type = 'LINE'
   and rctt.type = 'CM'
   and rct.bill_to_customer_id = hca.cust_account_id
   and hca.party_id = hp.party_id
   and rct.bill_to_site_use_id = hcsu.site_use_id
   and hcsu.cust_acct_site_id = hcas.cust_acct_site_id
   and hcas.party_site_id = hps.party_site_id
   and hps.location_id = hl.location_id
   and hps.party_site_id = gst.party_id(+)
   and rct.complete_flag = 'Y'
   --and rctt.attribute_category = 'CRISIL_Additional_Information'
   --and UPPER(rctt.attribute1) = 'YES' --Added by Meenal on 30Dec for including only applicable invoices
   and rctl.attribute_category is not null
   and fab.bu_id = rct.org_id
   and fab.bu_name in ('CRISIL LIMITED', 'CRISIL Ratings Limited',
						'PRAGMATIX SERVICES PRIVATE LIMITED',
						'CRISIL Risk and Infrastructure Solutions Limited')
   and fab.bu_name = :p_bu_name
   and rct.trx_number = NVL(:p_trx_number, rct.trx_number)
   and TO_CHAR((SELECT gl_date
				  FROM ra_cust_trx_line_gl_dist_all
				 WHERE customer_trx_id = RCT.customer_trx_id
				   AND account_class =  'REC'
				   AND rownum = 1), 'MM-YYYY') BETWEEN TO_CHAR(:p_from_period, 'MM-YYYY') 
												   AND TO_CHAR(:p_to_period, 'MM-YYYY')
==============================================================================================
SELECT (select lookup_code
		  from fnd_lookup_values
		 where lookup_type = 'CRISIL_COMPANY_CODE'
		   and enabled_flag = 'Y'
		   and UPPER(meaning) = UPPER(GL.name)) company_code
	  ,GL.name company_name
	  ,(select XE.region_2
		  from zx_registrations 	ZR
			  ,zx_party_tax_profile PTP
			  ,xle_establishment_v 	XE
		 where ZR.registration_id = AIA.first_party_registration_id
		   and ZR.party_tax_profile_id = PTP.party_tax_profile_id
		   and PTP.party_type_code = 'LEGAL_ESTABLISHMENT'
		   and PTP.party_id = XE.party_id) crisil_state
	  ,(select ZR.registration_number
		  from zx_registrations 	ZR
		 where ZR.registration_id = AIA.first_party_registration_id) crisil_gstin
	  ,TO_CHAR(AIDA.accounting_date, 'YYYY') accounting_year                    -- AIA.gl_date
	  ,TO_CHAR(AIDA.accounting_date, 'MM') accounting_month     				-- AIA.gl_date
	  ,AIA.doc_sequence_value document_num
	  ,TO_CHAR(AIDA.accounting_date, 'YYYYMMDD') document_date
	  ,(select count(1)
		  from ap_invoice_lines_all AILA1
		 where AILA1.invoice_id = AIA.invoice_id
		   and AILA1.line_type_lookup_code = 'ITEM') transaction_count
	  ,AIA.invoice_currency_code invoice_currency
	  ,GCC.segment2 gl_account
	  ,CASE WHEN (AIA.invoice_type_lookup_code IN ('STANDARD', 'PREPAYMENT') 
				 AND (GL.currency_code = AIA.invoice_currency_code)
				 AND NVL(GST.registration_status_code, 'NOT REGISTERED') IN ('REGISTERED', 'NOT REGISTERED')
				 AND (COALESCE((select UPPER(PLT.line_type)
						from po_lines_all PLA
							,po_line_types PLT
					   where PLA.po_line_id = AILA.po_line_id
						 and PLA.line_type_id = PLT.line_type_id), UPPER(AILA.product_type), 'SERVICES') = 'SERVICES')) THEN
			'Invoice'
			WHEN (AIA.invoice_type_lookup_code IN ('STANDARD', 'PREPAYMENT') 
				 AND (GL.currency_code <> AIA.invoice_currency_code)
				 AND AIA.attribute8 is not null
				 AND (NVL((select UPPER(PLT.line_type)
						from po_lines_all PLA
							,po_line_types PLT
					   where PLA.po_line_id = AILA.po_line_id
						 and PLA.line_type_id = PLT.line_type_id), UPPER(AILA.product_type)) = 'GOODS')) THEN
			'Bill of Entry'
			WHEN AIA.invoice_type_lookup_code = 'CREDIT' THEN
			'Credit note'
			WHEN AIA.invoice_type_lookup_code = 'DEBIT' THEN
			'Debit note'
			ELSE null
	   END document_type
	  ,CASE WHEN (select UPPER(attribute2)
					from hz_party_sites
				   where party_site_id = PSS.party_site_id) = 'SEZ' THEN
				'Supply from SEZ'
			WHEN (GL.currency_code <> AIA.invoice_currency_code AND AIA.attribute8 is not null
				 AND NVL((select UPPER(PLT.line_type)
						from po_lines_all PLA
							,po_line_types PLT
					   where PLA.po_line_id = AILA.po_line_id
						 and PLA.line_type_id = PLT.line_type_id), UPPER(AILA.product_type)) = 'GOODS') THEN
				'Import of Goods'
			WHEN (GL.currency_code <> AIA.invoice_currency_code AND AIA.attribute8 is not null
				 AND NVL((select UPPER(PLT.line_type)
						from po_lines_all PLA
							,po_line_types PLT
					   where PLA.po_line_id = AILA.po_line_id
						 and PLA.line_type_id = PLT.line_type_id), UPPER(AILA.product_type)) = 'SERVICES') THEN
				'Import of Services'
			ELSE 'Taxable'
	   END taxibility
	  ,CASE WHEN (select UPPER(attribute2)
					from hz_party_sites
				   where party_site_id = PSS.party_site_id) = 'SEZ' THEN
				'Inter State'
			 WHEN ((select UPPER(XE.region_2)
					  from zx_registrations 	ZR
						  ,zx_party_tax_profile PTP
						  ,xle_establishment_v 	XE
					 where ZR.registration_id = AIA.first_party_registration_id
					   and ZR.party_tax_profile_id = PTP.party_tax_profile_id
					   and PTP.party_type_code = 'LEGAL_ESTABLISHMENT'
					   and PTP.party_id = XE.party_id) <> UPPER(HL.state)) THEN
				'Inter State'
			 WHEN ((select UPPER(XE.region_2)
					  from zx_registrations 	ZR
						  ,zx_party_tax_profile PTP
						  ,xle_establishment_v 	XE
					 where ZR.registration_id = AIA.first_party_registration_id
					   and ZR.party_tax_profile_id = PTP.party_tax_profile_id
					   and PTP.party_type_code = 'LEGAL_ESTABLISHMENT'
					   and PTP.party_id = XE.party_id) = UPPER(HL.state)) THEN
				'Intra State'
			 ELSE null
	   END supply_type 
	  ,PS.segment1 supplier_code 
	  ,DECODE(NVL((select attribute1
					 from hz_party_sites
					where party_site_id = PSS.party_site_id), 'X'), 'X', 'Un-registered', 'Registered') supplier_nature
	  ,(select attribute1
		  from hz_party_sites
		 where party_site_id = PSS.party_site_id) supplier_gstin
	 --- ,DECODE(NVL(GST.registration_number, 'X'), 'X', 'Un-registered', 'Registered') supplier_nature
	 --- ,GST.registration_number supplier_gstin
	  ,HL.state supplier_state
	  ,PS.vendor_name supplier_name
	  ,CASE WHEN (AIA.invoice_type_lookup_code IN ('STANDARD', 'PREPAYMENT') 
				 AND (GL.currency_code <> AIA.invoice_currency_code)
				 AND AIA.attribute8 is not null) THEN
				AIA.attribute8
			WHEN (select count(1)
					from zx_lines
				   where application_id = 200
					 and entity_code = 'AP_INVOICES'
					 and trx_id = AIA.invoice_id
					 and trx_line_number = AILA.line_number
					 and cancel_flag <> 'Y'
					 and tax like '%RCM%') > 0 THEN
				AIA.attribute6
			ELSE AIA.invoice_num
	   END invoice_rcm_num
	  ,CASE WHEN (AIA.invoice_type_lookup_code IN ('STANDARD', 'PREPAYMENT') 
				 AND (GL.currency_code <> AIA.invoice_currency_code)
				 AND AIA.attribute8 is not null) THEN
				TO_CHAR(AIA.invoice_date, 'YYYYMMDD')
			WHEN (select count(1)
					from zx_lines
				   where application_id = 200
					 and entity_code = 'AP_INVOICES'
					 and trx_id = AIA.invoice_id
					 and trx_line_number = AILA.line_number
					 and cancel_flag <> 'Y'
					 and tax like '%RCM%') > 0 THEN
				TO_CHAR(AIA.attribute_date5, 'YYYYMMDD')
			ELSE TO_CHAR(AIA.invoice_date, 'YYYYMMDD')
	   END invoice_rcm_date
	  ,CASE WHEN (AIA.invoice_type_lookup_code IN ('STANDARD', 'PREPAYMENT') 
				 AND (GL.currency_code <> AIA.invoice_currency_code)
				 AND AIA.attribute8 is not null) THEN
				(AIA.invoice_amount * NVL(AIA.exchange_rate, 1))
			WHEN (select count(1)
					from zx_lines
				   where application_id = 200
					 and entity_code = 'AP_INVOICES'
					 and trx_id = AIA.invoice_id
					 and trx_line_number = AILA.line_number
					 and cancel_flag <> 'Y'
					 and tax like '%RCM%') > 0 THEN
				(TO_NUMBER(AIA.attribute7) * NVL(AIA.exchange_rate, 1))
			ELSE (AIA.invoice_amount * NVL(AIA.exchange_rate, 1))
	   END invoice_rcm_value 
	  ,DECODE((select count(1)
				from zx_lines
			   where application_id = 200
				 and entity_code = 'AP_INVOICES'
				 and trx_id = AIA.invoice_id
				 and trx_line_number = AILA.line_number
				 and cancel_flag <> 'Y'
				 and tax like '%RCM%'), 0, 'N', 'Y') supply_reverse_charge
	  ,AIA.attribute10 POS
	  ,AIDA.distribution_line_number line_item
	  ,NULL item_code
	  ,NVL((select PLT.line_type
			  from po_lines_all PLA
				  ,po_line_types PLT
			 where PLA.po_line_id = AILA.po_line_id
			   and PLA.line_type_id = PLT.line_type_id), 
			AILA.product_type
		   ) category
	  ,AILA.attribute9 HSN_SAC
	  ,AILA.description product_description
	  ,NULL UOM					--- need discussion
	  ,AIDA.quantity_invoiced quantity			--- need discussion
	  ,NULL sales_price
	  ,NULL discount
	  ,NULL net_sale_price
	  ,NULL vat
	  ,NULL central_excise
	  ,NULL state_excise
	  ,(AIDA.amount * NVL(AIA.exchange_rate, 1)) taxable_value
	  ,(select sum(tax_rate)
		  from zx_lines
		 where application_id = 200
		   and entity_code = 'AP_INVOICES'
		   and trx_id = AIA.invoice_id
		   and trx_line_number = AILA.line_number
		   and cancel_flag <> 'Y'
		   and tax not like '%US_SALES_TAX%') gst_rate
	  ,(select sum(tax_rate)
		  from zx_lines
		 where application_id = 200
		   and entity_code = 'AP_INVOICES'
		   and trx_id = AIA.invoice_id
		   and trx_line_number = AILA.line_number
		   and cancel_flag <> 'Y'
		   and tax like '%IGST%') igst_rate
	  ,(select sum(tax_amt)
		  from zx_lines
		 where application_id = 200
		   and entity_code = 'AP_INVOICES'
		   and trx_id = AIA.invoice_id
		   and trx_line_number = AILA.line_number
		   and cancel_flag <> 'Y'
		   and tax like '%IGST%') igst_amount
	  ,(select sum(tax_rate)
		  from zx_lines
		 where application_id = 200
		   and entity_code = 'AP_INVOICES'
		   and trx_id = AIA.invoice_id
		   and trx_line_number = AILA.line_number
		   and cancel_flag <> 'Y'
		   and tax like '%CGST%') cgst_rate
	  ,(select sum(tax_amt)
		  from zx_lines
		 where application_id = 200
		   and entity_code = 'AP_INVOICES'
		   and trx_id = AIA.invoice_id
		   and trx_line_number = AILA.line_number
		   and cancel_flag <> 'Y'
		   and tax like '%CGST%') cgst_amount
	  ,(select sum(tax_rate)
		  from zx_lines
		 where application_id = 200
		   and entity_code = 'AP_INVOICES'
		   and trx_id = AIA.invoice_id
		   and trx_line_number = AILA.line_number
		   and cancel_flag <> 'Y'
		   and tax like '%SGST%') sgst_rate
	  ,(select sum(tax_amt)
		  from zx_lines
		 where application_id = 200
		   and entity_code = 'AP_INVOICES'
		   and trx_id = AIA.invoice_id
		   and trx_line_number = AILA.line_number
		   and cancel_flag <> 'Y'
		   and tax like '%SGST%') sgst_amount
	  ,(select sum(tax_rate)
		  from zx_lines
		 where application_id = 200
		   and entity_code = 'AP_INVOICES'
		   and trx_id = AIA.invoice_id
		   and trx_line_number = AILA.line_number
		   and cancel_flag <> 'Y'
		   and tax like '%CESS%') cess_rate
	  ,(select sum(tax_amt)
		  from zx_lines
		 where application_id = 200
		   and entity_code = 'AP_INVOICES'
		   and trx_id = AIA.invoice_id
		   and trx_line_number = AILA.line_number
		   and cancel_flag <> 'Y'
		   and tax like '%CESS%') cess_amount
	  ,CASE WHEN ((NVL((select UPPER(PLT.line_type)
						from po_lines_all PLA
							,po_line_types PLT
					   where PLA.po_line_id = AILA.po_line_id
						 and PLA.line_type_id = PLT.line_type_id), UPPER(AILA.product_type)) = 'SERVICES')
				  AND ((select count(1)
						 from zx_lines ZL, zx_rates_b ZR
						where ZL.application_id = 200
						  and ZL.entity_code = 'AP_INVOICES'
						  and ZL.trx_id = AIA.invoice_id
						  and ZL.trx_line_number = AILA.line_number
						  and ZL.cancel_flag <> 'Y'
						  and ZL.tax_rate_id = ZR.tax_rate_id
						  and ZR.default_rec_rate_code = 'IN_GST_RECO') > 0)) THEN
				'is'
			WHEN ((NVL((select UPPER(PLT.line_type)
						from po_lines_all PLA
							,po_line_types PLT
					   where PLA.po_line_id = AILA.po_line_id
						 and PLA.line_type_id = PLT.line_type_id), UPPER(AILA.product_type)) = 'GOODS') 
				  AND ((select count(1)
						 from zx_lines ZL, zx_rates_b ZR
						where ZL.application_id = 200
						  and ZL.entity_code = 'AP_INVOICES'
						  and ZL.trx_id = AIA.invoice_id
						  and ZL.trx_line_number = AILA.line_number
						  and ZL.cancel_flag <> 'Y'
						  and ZL.tax_rate_id = ZR.tax_rate_id
						  and ZR.default_rec_rate_code = 'IN_GST_RECO') > 0)
				  AND ((select count(1)
						 from fnd_lookup_values
						where lookup_type = 'CRISIL_ASSET_CLEARING_ACCTS'
						  and enabled_flag = 'Y'
						  and lookup_code = GCC.segment2) = 0)) THEN
				'ip'
			WHEN ((NVL((select UPPER(PLT.line_type)
						from po_lines_all PLA
							,po_line_types PLT
					   where PLA.po_line_id = AILA.po_line_id
						 and PLA.line_type_id = PLT.line_type_id), UPPER(AILA.product_type)) = 'GOODS') 
				  AND ((select count(1)
						 from zx_lines ZL, zx_rates_b ZR
						where ZL.application_id = 200
						  and ZL.entity_code = 'AP_INVOICES'
						  and ZL.trx_id = AIA.invoice_id
						  and ZL.trx_line_number = AILA.line_number
						  and ZL.cancel_flag <> 'Y'
						  and ZL.tax_rate_id = ZR.tax_rate_id
						  and ZR.default_rec_rate_code = 'IN_GST_RECO') > 0)
				  AND ((select count(1)
						 from fnd_lookup_values
						where lookup_type = 'CRISIL_ASSET_CLEARING_ACCTS'
						  and enabled_flag = 'Y'
						  and lookup_code = GCC.segment2) > 0)) THEN
				'cp'
			WHEN ((select count(1)
					 from zx_lines ZL, zx_rates_b ZR
					where ZL.application_id = 200
					  and ZL.entity_code = 'AP_INVOICES'
					  and ZL.trx_id = AIA.invoice_id
					  and ZL.trx_line_number = AILA.line_number
					  and ZL.cancel_flag <> 'Y'
					  and ZL.tax_rate_id = ZR.tax_rate_id
					  and ZR.default_rec_rate_code = 'IN_GST_RECO') = 0) THEN
				'no'
			ELSE null
	   END ITC_eligibility
	  ,CASE WHEN ((select count(1)
					 from zx_lines ZL, zx_rates_b ZR
					where ZL.application_id = 200
					  and ZL.entity_code = 'AP_INVOICES'
					  and ZL.trx_id = AIA.invoice_id
					  and ZL.trx_line_number = AILA.line_number
					  and ZL.cancel_flag <> 'Y'
					  and ZL.tax_rate_id = ZR.tax_rate_id
					  and ZR.default_rec_rate_code = 'IN_GST_RECO') > 0) THEN
			   (select sum(tax_amt)
				  from zx_lines
				 where application_id = 200
				   and entity_code = 'AP_INVOICES'
				   and trx_id = AIA.invoice_id
				   and trx_line_number = AILA.line_number
				   and cancel_flag <> 'Y'
				   and tax like '%IGST%')
			ELSE null
	   END itc_igst_amount
	  ,CASE WHEN ((select count(1)
					 from zx_lines ZL, zx_rates_b ZR
					where ZL.application_id = 200
					  and ZL.entity_code = 'AP_INVOICES'
					  and ZL.trx_id = AIA.invoice_id
					  and ZL.trx_line_number = AILA.line_number
					  and ZL.cancel_flag <> 'Y'
					  and ZL.tax_rate_id = ZR.tax_rate_id
					  and ZR.default_rec_rate_code = 'IN_GST_RECO') > 0) THEN
			   (select sum(tax_amt)
				  from zx_lines
				 where application_id = 200
				   and entity_code = 'AP_INVOICES'
				   and trx_id = AIA.invoice_id
				   and trx_line_number = AILA.line_number
				   and cancel_flag <> 'Y'
				   and tax like '%CGST%')
			ELSE null
	   END itc_cgst_amount
	  ,CASE WHEN ((select count(1)
					 from zx_lines ZL, zx_rates_b ZR
					where ZL.application_id = 200
					  and ZL.entity_code = 'AP_INVOICES'
					  and ZL.trx_id = AIA.invoice_id
					  and ZL.trx_line_number = AILA.line_number
					  and ZL.cancel_flag <> 'Y'
					  and ZL.tax_rate_id = ZR.tax_rate_id
					  and ZR.default_rec_rate_code = 'IN_GST_RECO') > 0) THEN
			   (select sum(tax_amt)
				  from zx_lines
				 where application_id = 200
				   and entity_code = 'AP_INVOICES'
				   and trx_id = AIA.invoice_id
				   and trx_line_number = AILA.line_number
				   and cancel_flag <> 'Y'
				   and tax like '%SGST%')
			ELSE null
	   END itc_sgst_amount
	  ,CASE WHEN ((select count(1)
					 from zx_lines ZL, zx_rates_b ZR
					where ZL.application_id = 200
					  and ZL.entity_code = 'AP_INVOICES'
					  and ZL.trx_id = AIA.invoice_id
					  and ZL.trx_line_number = AILA.line_number
					  and ZL.cancel_flag <> 'Y'
					  and ZL.tax_rate_id = ZR.tax_rate_id
					  and ZR.default_rec_rate_code = 'IN_GST_RECO') > 0) THEN
			   (select sum(tax_amt)
				  from zx_lines
				 where application_id = 200
				   and entity_code = 'AP_INVOICES'
				   and trx_id = AIA.invoice_id
				   and trx_line_number = AILA.line_number
				   and cancel_flag <> 'Y'
				   and tax like '%CESS%')
			ELSE null
	   END itc_cess_amount
	  ,NULL expense_nature
	  ,NULL ship_from
	  ,NULL ship_to
	  ,NULL way_bill_num
	  ,NULL transporter_name
	  ,NULL lorry_receipt_num
	  ,NULL lorry_receipt_dt
	  ,NULL cn_orig_inv_num
	  ,NULL cn_orig_inv_dt
	  ,NULL credit_note_reason
	  ,NULL assessable_value
	  ,NULL custom_duty
	  ,NULL port_code
	  ,CASE WHEN (select count(1)
					from zx_lines
				   where application_id = 200
					 and entity_code = 'AP_INVOICES'
					 and trx_id = AIA.invoice_id
					 and trx_line_number = AILA.line_number
					 and cancel_flag <> 'Y'
					 and tax like '%RCM%') > 0 THEN
				'N'
			WHEN (select count(1)
					from ap_prepay_applications_v APA
				   where APA.invoice_id = AIA.invoice_id) > 0 THEN
				'Y'
			WHEN (select count(1)
					from ap_prepay_applications_v APA
				   where APA.invoice_id = AIA.invoice_id) = 0 THEN
				'N'
			ELSE null
	   END is_advance_adjust
	  ,CASE WHEN (((select count(1)
					from zx_lines
				   where application_id = 200
					 and entity_code = 'AP_INVOICES'
					 and trx_id = AIA.invoice_id
					 and trx_line_number = AILA.line_number
					 and cancel_flag <> 'Y'
					 and tax like '%RCM%') = 0) AND
				  ((select count(1)
					  from ap_prepay_applications_v APA
					 where APA.invoice_id = AIA.invoice_id) > 0)) THEN
				(select AIA1.invoice_num
				   from ap_prepay_applications_v APA
					   ,ap_invoices_all AIA1
				  where APA.invoice_id = AIA.invoice_id
					and APA.prepay_invoice_id = AIA1.invoice_id
                                        and rownum = 1)
			ELSE null
	   END advance_num
	  ,CASE WHEN (((select count(1)
					from zx_lines
				   where application_id = 200
					 and entity_code = 'AP_INVOICES'
					 and trx_id = AIA.invoice_id
					 and trx_line_number = AILA.line_number
					 and cancel_flag <> 'Y'
					 and tax like '%RCM%') = 0) AND
				  ((select count(1)
					  from ap_prepay_applications_v APA
					 where APA.invoice_id = AIA.invoice_id) > 0)) THEN
				(select TO_CHAR(AIA1.invoice_date, 'YYYYMMDD')
				   from ap_prepay_applications_v APA
					   ,ap_invoices_all AIA1
				  where APA.invoice_id = AIA.invoice_id
					and APA.prepay_invoice_id = AIA1.invoice_id
                                        and rownum = 1)
			ELSE null
	   END advance_date
	  ,NULL is_amendment
	  ,NULL amendment_orig_year
	  ,NULL amendment_orig_month
	  ,NULL amendment_supp_gstin
	  ,NULL amendment_doc_num
	  ,NULL amendment_doc_date
	  ,NULL is_isd
	  ,NULL isd
	  ,GCC.segment1 MIS_1
	  ,GCC.segment2 MIS_2
	  ,GCC.segment3 MIS_3
	  ,GCC.segment4 MIS_4
	  ,GCC.segment5 MIS_5
	  ,GCC.segment6 MIS_6
	  ,GCC.segment7 MIS_7
	  ,GCC.segment8 MIS_8
	  ,GCC.segment9 MIS_9
	  ,DECODE(AIA.cancelled_date,NULL,NULL,AIA.gl_date) orig_acct_date -- Modified by Aditya on 7th April
  FROM ap_invoices_all 				AIA
	  ,ap_invoice_lines_all 		AILA
	  ,ap_invoice_distributions_all AIDA
	  ,poz_suppliers_v  			PS
	  ,poz_supplier_sites_all_m		PSS
	  ,hz_locations					HL
	  ,gl_ledgers					GL
	  ,gl_code_combinations			GCC
	  ,(select ZR.registration_number
			  ,PTP.party_id
			  ,ZR.registration_status_code
		  from zx_registrations 	ZR
			  ,zx_party_tax_profile PTP
		 where ZR.party_tax_profile_id = PTP.party_tax_profile_id
		   and PTP.party_type_code = 'THIRD_PARTY_SITE'
		   and ZR.tax_regime_code = 'IN_GST'
		   and PTP.supplier_flag = 'Y') GST
 WHERE AIA.invoice_id = AILA.invoice_id
   AND AILA.line_type_lookup_code = 'ITEM'
   AND AIDA.line_type_lookup_code = 'ITEM'
   AND AILA.invoice_id = AIDA.invoice_id
   AND AILA.line_number = AIDA.invoice_line_number
   AND AIDA.dist_code_combination_id = GCC.code_combination_id
   AND AILA.tax_classification_code IS NOT NULL
   AND AIDA.posted_flag = 'Y'
   AND AIA.vendor_id = PS.vendor_id
   AND AIA.vendor_site_id = PSS.vendor_site_id
   AND PSS.location_id = HL.location_id
   AND AIA.set_of_books_id = GL.ledger_id
   AND PSS.party_site_id = GST.party_id(+)
   AND GL.name = :p_company
   AND AIDA.accounting_date BETWEEN :p_gl_date_from AND :p_gl_date_to
   AND AIA.invoice_date BETWEEN NVL(:p_inv_date_from, AIA.invoice_date)
                                                  AND NVL(:p_inv_date_to, AIA.invoice_date)
   AND EXISTS (select '1' 
                              from fun_all_business_units_v FAB
                            where FAB.bu_id = AIA.org_id
                                and FAB.bu_name in ('CRISIL LIMITED', 'CRISIL Ratings Limited',
						'PRAGMATIX SERVICES PRIVATE LIMITED',
						'CRISIL Risk and Infrastructure Solutions Limited'))
   AND NOT EXISTS (select '1'
					 from ap_invoice_distributions_all AIDA1,
						  ap_invoice_distributions_all AIDA2
					where AIDA1.invoice_id = AIA.invoice_id
					  and AIDA1.reversal_flag = 'Y'
					  and AIDA1.line_type_lookup_code = 'ITEM'
					  and AIDA1.parent_reversal_id = AIDA2.invoice_distribution_id
					  and AIDA1.period_name = AIDA2.period_name)
=========================================================================================
SELECT	distinct 	(	SELECT 	distinct fdv.file_name 	
						FROM 	fnd_documents_vl		fdv,
								fnd_attached_documents	fad
						WHERE 	1=1
						AND		fdv.document_id 	=	fad.document_id
						AND		fad.entity_name 	= 	'EXM_EXPENSE_REPORTS' 
						AND 	fad.pk1_value 		=	to_char(eer.EXPENSE_REPORT_ID) 
					)													file_name,
					eer.audit_code										audit_type,
					eer.expense_report_num 								inv_num,
					ppnf.full_name 										emp_name,
					papf.Person_number 									emp_num,
					gcc.segment1 										org_id,
					(	SELECT 	ffvv.description 
						FROM	FND_FLEX_VALUES_VL				ffvv
						WHERE 	gcc.segment1				=	ffvv.flex_value	
						AND 	ffvv.value_category			=	'CRISIL_ENTITY'
					)													org_name,
					TO_CHAR(eer.report_submit_date,'DD-MM-YYYY')		report_submit_date,
					TO_CHAR(eer.expense_report_date,'DD-MM-YYYY')		creation_date,
					eer.expense_report_total							total,
					eer.reimbursement_currency_code						d_curr_code,
					CASE  WHEN	(	SELECT	eaq.auditor_id
									FROM	exm_audit_queues	eaq
									WHERE	eaq.expense_report_id	=	eer.expense_report_id
								)		IS NOT NULL
							THEN
								'Y'
							ELSE
								'N'
					END													auditor_assigned,
					(	SELECT	ppnf1.full_name --distinct ppnf1.full_name --auditor_id --
						FROM	per_all_people_f 		papf1,
								per_person_names_f 		ppnf1,
								exm_audit_queues		eaq
						WHERE	eaq.expense_report_id	=	eer.expense_report_id
						AND		eaq.auditor_id			= 	papf1.person_id
						AND 	papf1.person_id 		= 	ppnf1.person_id
						AND 	ppnf1.name_type			=	'GLOBAL'
						AND		TRUNC(SYSDATE) 			BETWEEN 	papf1.effective_start_date AND NVL(papf1.effective_end_date,TRUNC(SYSDATE))
						--AND		TRUNC(SYSDATE) 			BETWEEN 	ppnf1.effective_start_date AND NVL(ppnf1.effective_end_date,TRUNC(SYSDATE))
					)													last_audited_by,
					'N'													status_paid,
					eer.expense_status_code 							rep_status_code,
					eer.RECEIPTS_STATUS_CODE,
					(	SELECT eet1.name	
						FROM	exm_expenses 			ee1,
								exm_expense_templates	eet1
						WHERE	ee1.expense_report_id					=			eer.expense_report_id
						AND		ee1.EXPENSE_TEMPLATE_ID					=			eet1.EXPENSE_TEMPLATE_ID
						AND		rownum=1
					)	attribute_cat,
					eer.EXPENSE_STATUS_DATE,
					gcc.SEGMENT1||'-'||gcc.SEGMENT2||'-'||gcc.SEGMENT3||'-'||gcc.SEGMENT4||'-'||
					gcc.SEGMENT5||'-'||gcc.SEGMENT6||'-'||gcc.SEGMENT7||'-'||gcc.SEGMENT8||'-'||gcc.SEGMENT9 		code_comb,
					eed.EXPENSE_DIST_ID,
					eed.expense_id,
					gcc.account_type,
					ee.RECEIPT_CURRENCY_CODE							line_rcpt_curr,
					ee.RECEIPT_AMOUNT									line_rcpt_amt,
					ee.ORIG_REIMBURSABLE_AMOUNT							line_reb_amt,
					ee.REIMBURSEMENT_CURRENCY_CODE						line_reb_curr,
					eer.expense_report_total							epy_amt,
					eer.reimbursement_currency_code						epy_curr
					
		
FROM	exm_expenses 			ee,
        exm_expense_reports 	eer,
        exm_expense_dists 		eed,
        gl_code_combinations 	gcc,
        per_all_people_f 		papf,
        per_all_assignments_f 	paaf,
        per_person_names_f 		ppnf
		
WHERE 1=1
AND ee.expense_report_id					=			eer.expense_report_id
AND	ee.expense_id							=			eed.expense_id
AND eed.expense_report_id 					=			eer.expense_report_id
AND gcc.code_combination_id					=			eed.code_combination_id
AND eer.person_id  							= 			papf.person_id
AND papf.person_id 							= 			paaf.person_id
AND papf.person_id 							= 			ppnf.person_id
AND ppnf.name_type							=			'GLOBAL'
AND TRUNC(SYSDATE) 							BETWEEN 	papf.effective_start_date AND NVL(papf.effective_end_date,TRUNC(SYSDATE))
AND TRUNC(SYSDATE) 							BETWEEN 	paaf.effective_start_date AND NVL(paaf.effective_end_date,TRUNC(SYSDATE))
AND NVL(eer.expense_status_code,'NULL') 	!= 			'PAID'
AND 	((	SELECT 	ffvv.description 
			FROM	FND_FLEX_VALUES_VL				ffvv
			WHERE 	gcc.segment1				=	ffvv.flex_value	
			AND 	ffvv.value_category			=	'CRISIL_ENTITY'
		)								IN 			(:p_entity) OR 'All' IN (:p_entity || 'All'))
AND		eer.report_submit_date			BETWEEN		(:p_from_date)		AND		(:p_to_date)
AND		nvl(ee.ITEMIZATION_PARENT_EXPENSE_ID,0)		>=	0
--AND		eer.expense_report_num				=		'CRISIL-0006005345'
ORDER BY eer.expense_report_num
===========================================================================================================================
SELECT a.TRANSACTING_ENTITY_NAME
      ,a.ACCOUNT
      ,a.ACCOUNT_DESC
      ,a.INTERCOMPANY
	  ,a.IC_Desc
      --,a.CURRENCY
      ,a.ACCOUNT_TYPE
	  ,NVL(E01_BAL, 0) E01_BAL
	  ,NVL(E02_BAL, 0) E02_BAL
	  ,NVL(E03_BAL, 0) E03_BAL
	  ,NVL(E04_BAL, 0) E04_BAL
	  ,NVL(E05_BAL, 0) E05_BAL
	  ,NVL(E06_BAL, 0) E06_BAL
	  ,NVL(E07_BAL, 0) E07_BAL
	  ,NVL(E08_BAL, 0) E08_BAL
	  ,NVL(E09_BAL, 0) E09_BAL
	  ,NVL(E10_BAL, 0) E10_BAL
	  ,NVL(E11_BAL, 0) E11_BAL
	  ,NVL(E12_BAL, 0) E12_BAL
	  ,NVL(E13_BAL, 0) E13_BAL
	  ,NVL(E14_BAL, 0) E14_BAL
	  ,NVL(E15_BAL, 0) E15_BAL
	  ,NVL(E16_BAL, 0) E16_BAL
	  ,NVL(E17_BAL, 0) E17_BAL
	  ,NVL(E18_BAL, 0) E18_BAL
	  ,NVL(E19_BAL, 0) E19_BAL
      ,NVL(E01_BAL, 0) + NVL(E02_BAL, 0) + NVL(E03_BAL, 0) + NVL(E04_BAL, 0) + NVL(E05_BAL, 0) + NVL(E06_BAL, 0) + NVL(E07_BAL, 0) +
       NVL(E08_BAL, 0) + NVL(E09_BAL, 0) + NVL(E10_BAL, 0) + NVL(E11_BAL, 0) + NVL(E12_BAL, 0) + NVL(E13_BAL, 0) + NVL(E14_BAL, 0) +
       NVL(E15_BAL, 0) + NVL(E16_BAL, 0) + NVL(E17_BAL, 0) + NVL(E18_BAL, 0) + NVL(E19_BAL, 0) column_total
  FROM (SELECT UPPER(GL.name) Entity_Name
              ,F_VAL_2.description Transacting_Entity_Name
              ,GCC.segment2 Account
        	  ,gl_flexfields_pkg.get_description_sql (GCC.chart_of_accounts_id,2,GCC.segment2) ACCOUNT_DESC
              ,GCC.segment7 Intercompany
			  ,(select ffvv.description
 				  from fnd_flex_value_sets ffvs, fnd_flex_Values_vl ffvv
				 where ffvs.flex_value_set_id = ffvv.flex_value_set_id
				   and ffvs.flex_value_set_name = 'CRISIL_INTERCOMPANY'
				   and ffvv.flex_value = GCC.segment7
				   and ffvv.enabled_flag = 'Y' 
				   and ffvv.summary_flag = 'N') IC_Desc								-- Added by Pratul(04th May)
              --,GL_BAL.currency_code Currency
        	  ,DECODE(GCC.account_type, 'A', 'Asset', 'O', 'Owners equity', 'L', 'Liability', 'E', 'Expense', 'R', 'Revenue') account_type
        	  ,CASE WHEN GCC.account_type IN ('A','O', 'L')  --** YTD_BALANCE_INR
        	            THEN ((GL_BAL.begin_balance_dr - GL_BAL.begin_balance_cr) + (GL_BAL.period_net_dr - GL_BAL.period_net_cr))
        	                     * DECODE(GL_BAL.currency_code, 'INR', 1, (SELECT AVG(conversion_rate)
        							 FROM gl_daily_rates GDR
        							     ,gl_daily_conversion_types GDCT
        							WHERE GDR.conversion_type = GDCT.conversion_type
        							  AND GDCT.user_conversion_type = 'Corporate End Rate'
        							  AND GDR.to_currency = 'INR'
        							  AND GDR.from_currency =  GL_BAL.currency_code
        							  AND TRUNC(GDR.conversion_date) = TRUNC(GP.end_Date))) --YTD_BALANCE_INR
                    WHEN GCC.account_type IN ('E','R')  --** PTD_BALANCE_INR
        	            THEN (NVL(GL_BAL.period_net_dr, 0) - NVL (GL_BAL.period_net_cr, 0))
        						 * DECODE(GL_BAL.currency_code, 'INR', 1, (SELECT AVG(conversion_rate)
        							 FROM gl_daily_rates GDR
        							     ,gl_daily_conversion_types GDCT
        							WHERE GDR.conversion_type = GDCT.conversion_type
        							  AND GDCT.user_conversion_type = 'Corporate'
        							  AND GDR.to_currency = 'INR'
        							  AND GDR.from_currency =  GL_BAL.currency_code
        							  AND TRUNC(GDR.conversion_date) = TRUNC(GP.end_Date))) --PTD_BALANCE_INR
        		END BALANCE
          FROM gl_balances GL_BAL
              ,gl_code_combinations GCC              
              ,fnd_flex_values_vl F_VAL_2
              ,fnd_flex_value_sets F_SET_2
              ,gl_ledgers GL
        	  ,gl_periods GP
        WHERE GL_BAL.code_combination_id   = GCC.code_combination_id           
           AND GCC.segment7                = F_VAL_2.flex_value
           AND F_VAL_2.flex_value_set_id   = F_SET_2.flex_value_set_id
           AND GL_BAL.ledger_id            = GL.ledger_id		   
           AND GL_BAL.period_name          = GP.period_name
           AND GL_BAL.period_type          = GP.period_type
           AND GL_BAL.period_year          = GP.period_year   
           AND GL.period_set_name          = GP.period_set_name
           AND F_SET_2.flex_value_set_name = 'CRISIL_INTERCOMPANY'   
           AND GL_BAL.period_name          = :p_period_name --'Jan-21'        
           --and GCC.segment2 IN ('215008', '516227')  -- -2833740.152
           --AND GCC.segment7 = '131'
		   AND GL_BAL.currency_code        = GL.currency_code       -- Added to remove other than ledger currency data 31Mar2021
           AND GCC.segment2               IN (SELECT lookup_code
        							            FROM fnd_lookup_values
        							           WHERE lookup_type = 'CRISIL_IC_GL')
) PIVOT (SUM(NVL(BALANCE, 0)) AS BAL
          FOR Entity_Name IN ('CRISIL LIMITED' E01
                             ,'CRISIL IREV UK LTD SWISS BR' E02 --'CRISIL IREV UK LTD INCLUDING SWISS BR' E02 -- no data in UAT. check the value in prod for this --Anand 26MAR
			                 ,'CRISIL IREVNA ARGENTINA SA' E03
			                 ,'CRISIL IREVNA AUSTRALIA PTY' E04
			                 ,'CRISIL IREVNA INFO CHINA' E05
			                 ,'CRISIL IREVNA POLAND SP ZOO' E06
			                 ,'CRISIL IREVNA UK LIMITED' E07
			                 ,'CRISIL IREVNA US LLC' E08
			                 ,'CRISIL RATINGS LIMITED' E09
			                 ,'CRISIL RISK AND INF SOL LTD' E10
			                 ,'COALITION DEVELOPMENT LIMITED' E11
			                 ,'COALITION SINGAPORE PTE LTD' E12
			                 ,'GREENWICH ASSOC CANADA ULC' E13
			                 ,'GREENWICH ASSOC SING PTE LTD' E14
			                 ,'GREENWICH ASSOC UK LIMITED' E15
			                 ,'GREENWICH ASSOCIATES LLC' E16
			                 ,'GREENWICH ASSOCIATION JAPAN KK' E17 -- no data in UAT. check the value in prod for this --Anand 26MAR
			                 ,'PRAGMATIX SERVICES PVT LTD' E18
			                 ,'PRAGMATIX SERVICES PVT LTD UAE' E19			  					  					  
			                 )
   ) a
      --WHERE account = '215007'
        --AND a.INTERCOMPANY = '111'
ORDER BY a.ACCOUNT ASC
=============================================================================================================================
------Inventory Item Purchase History Data Model------------
SELECT   
    PH.segment1         Purchase_Order,
    TO_CHAR(PH.creation_date,'MM/DD/YYYY')     po_creation_date,
    PV.vendor_name        Supp_Name, 
    PV.segment1           Supp_Number,
    PVS.vendor_site_code  Supplier_site, 
    PL.line_num           po_line_number, 
     plt.line_type_code  line_type,
    esib.item_number, 
    pl.item_description, 
    ecv.category_name,     
    inv2.unit_of_measure  LINE_UOM,
    pl.QUANTITY QUANTITY_ORDERED,
    PL.unit_price Line_Item_Price , 
    PL.unit_price * PLL.quantity LINE_Amount,  
    NVL( PLL.QUANTITY_RECEIVED, 0)  LINE_RECEIVED,
    TO_CHAR(PLL.PROMISED_DATE,'MM/DD/YYYY') PROMISED_DATE , 
    TO_CHAR(RSH.creation_date,'MM/DD/YYYY') RECEIPT_DATE,
    TRUNC( RSH.creation_date )  - TRUNC(  ph.creation_date)   LEAD_TIME 
FROM  rcv_transactions RTXN, 
      rcv_shipment_headers RSH,
      hr_all_organization_units OOD,
      rcv_shipment_lines RSL,
      POZ_SUPPLIER_SITES_V PVS,
      POZ_SUPPLIERS_V PV, 
      po_headers_all PH,
      po_lines_all PL,       
      po_line_types_b plt,
      po_line_locations_all PLL,
      ap_invoice_lines_all AIL,
      ap_invoices_all AI ,
      inv_units_of_measure_vl inv1,
      inv_units_of_measure_vl inv2,
      inv_units_of_measure_vl inv3,
      egp_system_items_b esib,      
      egp_categories_vl ecv,
      ap_invoice_distributions_all aid 
WHERE 1 = 1 
  AND AI.org_id = NVL ( :P_BUSINESS_UNIT, AI.org_id  ) 
  AND AIL.org_id = NVL ( :P_BUSINESS_UNIT, AIL.org_id  ) 
  AND RTXN.vendor_id  = PV.vendor_id
  AND RTXN.vendor_site_id = PVS.vendor_site_id
  AND RSL.shipment_header_id = RSH.shipment_header_id
  AND rsh.ship_to_org_id = ood.organization_id (+)
  AND RTXN.shipment_line_id = RSL.shipment_line_id
  AND RTXN.transaction_type = 'RECEIVE'
  AND PLL.line_location_id(+) = RTXN.po_line_location_id
  AND PL.po_line_id = PLL.po_line_id(+)
  AND PH.po_header_id = PL.po_header_id 
  AND RTXN.transaction_id = AIL.rcv_transaction_id (+)
  AND AIL.invoice_id = AI.invoice_id (+) 
  AND inv2.uom_code (+) = PL.uom_code
  AND inv1.uom_code (+) = RSL.uom_code
  AND inv3.uom_code (+) = AIL.unit_meas_lookup_code  
  AND esib.inventory_item_id = PL.item_id  
  AND PLL.ship_to_organization_id = esib.organization_id
  AND ecv.category_id (+)= pl.category_id  
  AND pl.line_type_id  = plt.line_type_id (+)
  AND PH.segment1  =  NVL ( :P_PO_NUMBER , PH.segment1 ) 
  AND aid.invoice_line_number = ail.line_number
  and aid.invoice_id = ail.invoice_id 
  AND TRUNC(PH.creation_date )  >= NVL (  :P_PO_FROM_DATE, TRUNC (  PH.creation_date ) )  
  AND TRUNC(PH.creation_date )  <= NVL (  :P_PO_TO_DATE, TRUNC (  PH.creation_date ) ) 
  AND  esib.item_number  =  NVL ( :P_ITEM_NUMBER , esib.item_number  )
  AND esib.item_number IS NOT NULL 
UNION
SELECT  
    poh.segment1  ,
    TO_CHAR(poh.creation_date,'MM/DD/YYYY')     ,    
    psv.vendor_name ,
    psv.segment1  ,
    (select VENDOR_SITE_CODE from POZ_SUPPLIER_SITES_ALL_M pssam where VENDOR_SITE_ID =  poh.vendor_site_id  ) ,
    pol.line_num , 
    plt.line_type_code  ,
    esib.item_number, 
    pol.item_description,  
    ecv.category_name, 
    inv2.unit_of_measure  ,
    pol.QUANTITY ,
    pol.unit_price , 
    pol.unit_price * plla.quantity ,  
    NVL( plla.QUANTITY_RECEIVED, 0)  ,
    TO_CHAR(plla.PROMISED_DATE,'MM/DD/YYYY')  , 
    NULL ,
    0 
FROM  po_headers_all poh,
      po_lines_all pol,
      po_line_locations_all plla, 
      po_line_types_b plt,
      poz_suppliers_v psv,
      po_distributions_all pod,
      egp_system_items_b esib,
      egp_categories_vl ecv,
      GL_CODE_COMBINATIONS gcc ,
      inv_units_of_measure_vl inv2
WHERE   1 = 1   
AND pol.po_header_id = poh.po_header_id  
AND plla.po_header_id = poh.po_header_id 
AND plla.po_line_id = poL.po_line_id 
AND pol.line_type_id  = plt.line_type_id (+)
AND poh.vendor_id  = psv.vendor_id(+)
AND poh.po_header_id = pod.po_header_id (+)
AND pol.po_line_id = pod.po_line_id (+)
AND esib.inventory_item_id (+) = pol.item_id 
AND ecv.category_id (+)= pol.category_id
AND inv2.uom_code (+) = pol.uom_code
AND gcc.CODE_COMBINATION_ID  = pod.CODE_COMBINATION_ID 
AND plla.SCHEDULE_STATUS NOT IN ('CANCELED', 'CLOSED', 'FINALLY CLOSED' ) 
AND poh.segment1 = NVL(:P_PO_NUMBER,poh.segment1)  
AND esib.item_number IS NOT NULL 
 ORDER BY 1 desc, 6 ASC
 ======================================================================================================================
 -------------Inventory Valuation Last Used Data Mode-----------
--q1--
WITH
        iod AS
        (
                SELECT
                        p.organization_id             ,
                        p.legal_entity_id legal_entity,
                        hou.NAME          organization_name
                FROM
                        hr_all_organization_units_x hou ,
                        inv_org_parameters          p
                WHERE
                        p.organization_id = hou.organization_id
        )
        ,
        A AS
        (
                SELECT
                        cost_org_id ,
                        cost_book_id,
                        val_unit_id ,
                        --  inventory_org_id, changed for bug 21869978 , now Inv Org is derived from b
                        inventory_item_id                                                                    ,
                        SUM(onhand_value)                                                       onhand_value ,
                        DECODE(MAX(cost_method_code), 'STANDARD',SUM(unit_cost),MAX(unit_cost)) unit_cost    ,
                        MAX(uom_code)                                                           uom_code     ,
                        MAX(currency_code)                                                      currency_code,
                        MAX(cost_method_code)                                                   cost_method_code
                FROM
                        cst_costed_vu_costs_v --changed for bug 21869978, earlier we used cst_costed_attr_costs_v
                WHERE
                        NVL(:p_as_of_date, SYSDATE) BETWEEN snapshot_date AND     (
                                eff_to_date-1)
                AND     cost_org_id  = :p_cost_org_id
                AND     cost_book_id = :p_cost_book_id
                GROUP BY
                        cost_org_id ,
                        cost_book_id,
                        val_unit_id ,
                        inventory_item_id
        )
        ,
        b AS
        (
                SELECT
                        cost_org_id                 ,
                        cost_book_id                ,
                        val_unit_id                 ,
                        inventory_item_id           ,
                        inventory_org_id            ,
                        SUM(quantity)    total_quantity,
                        MAX(vu_quantity) vu_quantity
                FROM
                        cst_costed_attr_onhand_v
                WHERE
                        NVL(:p_as_of_date, SYSDATE) BETWEEN snapshot_date AND     (
                                eff_to_date-1)
                AND     cost_org_id  = :p_cost_org_id
                AND     cost_book_id = :p_cost_book_id
                GROUP BY
                        cost_org_id      ,
                        cost_book_id     ,
                        val_unit_id      ,
                        inventory_item_id,
                        inventory_org_id
        )
        ,
        --added for bug 25175168
        c AS
        (
                SELECT
                        cost_org_id      ,
                        cost_book_id     ,
                        val_unit_id      ,
                        inventory_item_id,
                        quantity vu_quantity
                FROM
                        fusion.cst_costed_vu_onhand_v
                WHERE
                        NVL(:p_as_of_date, SYSDATE) BETWEEN snapshot_date AND     (
                                eff_to_date-1)
                AND     cost_org_id  = :p_cost_org_id
                AND     cost_book_id = :p_cost_book_id
        )
        ,
        ec AS
        (
                SELECT
                        eic.inventory_item_id,
                        eic.category_id      ,
                        eic.organization_id  ,
                        ecv.category_name    ,
                        ecv.category_code
                FROM
                        egp_item_categories       eic,
                        egp_default_category_sets edc,
                        egp_categories_vl         ecv
                WHERE
                        eic.category_set_id    = edc.category_set_id
                AND     edc.functional_area_id = 5
                AND     eic.category_id        = ecv.category_id
        )
        ,
        Material AS
        (
                SELECT
                        DECODE(MAX(cost_method_code), 'STANDARD',SUM(unit_cost),MAX(unit_cost)) UC1,
                        A1.inventory_item_id                                                    inventory_item_id
                FROM
                        cst_costed_vu_costs_v       A1,
                        fusion.cst_cost_elements_vl ce1
                WHERE
                        ce1.cost_element_code = 'Material'
                AND     ce1.cost_element_type = 'MATERIAL'
                AND     A1.cost_element_id    = ce1.cost_element_id
                AND     A1.cost_org_id        = :p_cost_org_id
                AND     A1.cost_book_id       = :p_cost_book_id
                AND     NVL(:p_as_of_date, SYSDATE) BETWEEN snapshot_date AND     (
                                eff_to_date-1)
                GROUP BY
                        inventory_item_id
        )
        ,
        Overhead AS
        (
                SELECT
                        DECODE(MAX(cost_method_code), 'STANDARD',SUM(unit_cost),MAX(unit_cost)) UC2,
                        inventory_item_id
                FROM
                        cst_costed_vu_costs_v       A1,
                        fusion.cst_cost_elements_vl ce1
                WHERE
                        ce1.cost_element_code = 'Overhead'
                AND     ce1.cost_element_type = 'OVERHEAD'
                AND     A1.cost_element_id    = ce1.cost_element_id
                AND     A1.cost_org_id        = :p_cost_org_id
                AND     A1.cost_book_id       = :p_cost_book_id
                AND     NVL(:p_as_of_date, SYSDATE) BETWEEN snapshot_date AND     (
                                eff_to_date-1)
                GROUP BY
                        inventory_item_id
        )
        ,
        Direct_Labor AS
        (
                SELECT
                        DECODE(MAX(cost_method_code), 'STANDARD',SUM(unit_cost),MAX(unit_cost)) UC3,
                        inventory_item_id
                FROM
                        cst_costed_vu_costs_v       A1,
                        fusion.cst_cost_elements_vl ce1
                WHERE
                        ce1.cost_element_code = 'Direct Labor'
                AND     ce1.cost_element_type = 'RESOURCE'
                AND     A1.cost_element_id    = ce1.cost_element_id
                AND     A1.cost_org_id        = :p_cost_org_id
                AND     A1.cost_book_id       = :p_cost_book_id
                AND     NVL(:p_as_of_date, SYSDATE) BETWEEN snapshot_date AND     (
                                eff_to_date-1)
                GROUP BY
                        inventory_item_id
        )
        ,
        Direct_Equipment AS
        (
                SELECT
                        DECODE(MAX(cost_method_code), 'STANDARD',SUM(unit_cost),MAX(unit_cost)) UC4,
                        inventory_item_id
                FROM
                        cst_costed_vu_costs_v       A1,
                        fusion.cst_cost_elements_vl ce1
                WHERE
                        ce1.cost_element_code = 'Direct Equipment'
                AND     ce1.cost_element_type = 'RESOURCE'
                AND     A1.cost_element_id    = ce1.cost_element_id
                AND     A1.cost_org_id        = :p_cost_org_id
                AND     A1.cost_book_id       = :p_cost_book_id
                AND     NVL(:p_as_of_date, SYSDATE) BETWEEN snapshot_date AND     (
                                eff_to_date-1)
                GROUP BY
                        inventory_item_id
        )
SELECT
        A.cost_org_id                                                                                                                                                                       ,
        A.cost_book_id                                                                                                                                                                      ,
        A.val_unit_id                                                                                                                                                                       ,
        A.inventory_item_id                                                                                                                                                                 ,
        uom.unit_of_measure                                                                                                                                                                 ,
        DENSE_RANK() OVER (ORDER BY et.item_number,ec.category_name, val_unit_code)                                                                                                              AS rank     ,
        b.total_quantity                                                                                                                                                                            quantity ,
        NVL(DECODE (A.cost_method_code, 'ACTUAL', A.onhand_value / (DECODE(c.vu_quantity, 0, DECODE(b.total_quantity, 0, 1, b.total_quantity), c.vu_quantity)), A.unit_cost),0)                     unit_cost,
        NVL(DECODE (A.cost_method_code, 'ACTUAL', A.onhand_value / (DECODE(c.vu_quantity, 0, DECODE(b.total_quantity, 0, 1, b.total_quantity), c.vu_quantity)), A.unit_cost),0)*b.total_quantity    value    ,
        --A.cost_element_id,
        A.currency_code             AS functional_currency,
        NVL(:p_as_of_date, SYSDATE) AS as_of_date         ,
        b.inventory_org_id                                ,
        co.cost_org_name                                  ,
        cb.cost_book_code                                 ,
        vs.val_structure_code                             ,
        vu.val_unit_code                                  ,
        et.item_number AS item_code                       ,
        et.description AS item_description                ,
        ec.category_id                                    ,
        ec.category_code                                  ,
        ec.category_name                                  ,
        --ce.cost_element_code,
        --ce.cost_element_type,
        iod.organization_name AS inv_org_name,
        ccob.ledger_id                       ,
        gl.NAME AS ledger_name               ,
        iod.legal_entity                     ,
        fl.meaning                           ,
        (
                SELECT
                        MAX(tx1.transaction_date)
                FROM
                        inv_material_txns tx1
						,inv_transaction_types_tl trxtype
                WHERE
                        tx1.inventory_item_id = b.inventory_item_id
				AND
						tx1.transaction_type_id = trxtype.transaction_type_id
				AND
						trxtype.transaction_type_name in (	'Purchase Order Receipt'
															,'Account Alias Issue'
															,'Miscellaneous issue'
															,'Account Issue'
															,'Sales Order Issue'
															,'Work in Process Material Issue'
															,'Work in Process Product Completion'
														  )
				AND
						((tx1.transaction_type_id = 35 -- Work in Process Material Issue
							AND tx1.transaction_source_name != 'MTRANSFER' AND tx1.transaction_source_name != 'TRANSFERS2019' AND tx1.transaction_source_name != 'TRANSFERS2021')
						OR tx1.transaction_type_id != 35)	
		) last_used_date  ,
        Material.UC1                                                 MATERIAL        ,
        Overhead.UC2                                                 OVERHEAD        ,
        Direct_Labor.UC3                                             DIRECT_LABOR    ,
        Direct_Equipment.UC4                                         DIRECT_EQUIPMENT,
        (
                SELECT
                        subinventory_code
                FROM
                        inv_material_txns txns
                WHERE
                        txns.transaction_date =
                        (
                                SELECT
                                        MAX(tx1.transaction_date)
                                FROM
                                        inv_material_txns tx1
                                WHERE
                                        tx1.inventory_item_id = b.inventory_item_id)
                AND     txns.inventory_item_id = b.inventory_item_id
                AND     txns.organization_id   = iod.organization_id
                AND     rownum                 = 1) LAST_USED_SUBINV,
        (
                SELECT
                        itemloc.segment1
                                ||'.'
                                ||itemloc.segment2
                                ||'.'
                                ||itemloc.segment3
                FROM
                        inv_item_locations itemloc,
                        inv_material_txns  txns
                WHERE
                        itemloc.inventory_location_id = txns.locator_id
                AND     txns.transaction_date         =
                        (
                                SELECT
                                        MAX(tx1.transaction_date)
                                FROM
                                        INV_MATERIAL_TXNS tx1
                                WHERE
                                        tx1.inventory_item_id = b.inventory_item_id)
                AND     txns.inventory_item_id = b.inventory_item_id
                AND     txns.organization_id   = iod.organization_id
                AND     rownum                 = 1) LAST_USED_LOCATOR
FROM
        fusion.cst_val_units_b      vu,
        fusion.cst_val_structures_b vs,
        fusion.cst_cost_books_vl    cb,
        --fusion.cst_cost_elements_vl ce,
        fusion.cst_cost_orgs_v co     ,
        egp_system_items_vl    et     ,
        ec                            ,
        fusion.cst_cost_org_books ccob,
        gl_ledgers                gl  ,
        iod                           ,
        A                             ,
        b                             ,
        c                             ,
        inv_units_of_measure_vl uom   ,
        fnd_lookups             fl    ,
        Material                      ,
        Overhead                      ,
        Direct_Labor                  ,
        Direct_Equipment
WHERE
        A.cost_org_id       = b.cost_org_id
AND     A.cost_method_code  = fl.lookup_code
AND     fl.lookup_type      ='CST_COST_METHODS'
AND     A.cost_book_id      = b.cost_book_id
AND     A.val_unit_id       = b.val_unit_id
AND     A.inventory_item_id = b.inventory_item_id
AND     b.cost_org_id       = c.cost_org_id
AND     b.cost_book_id      = c.cost_book_id
AND     b.val_unit_id       = c.val_unit_id
AND     b.inventory_item_id = c.inventory_item_id
        --AND ( A.inventory_org_id = b.inventory_org_id or A.inventory_org_id = -1) --changed for bug 21869978, Inv Org derived from b so no need of join
AND     ((
                        :p_val_unit IS NULL
                OR      (
                                A.val_unit_id=:p_val_unit)))
AND     A.val_unit_id       = vu.val_unit_id
AND     vs.val_structure_id = vu.val_structure_id
AND     A.cost_book_id      = cb.cost_book_id
        --AND A.cost_element_id   = ce.cost_element_id
AND     et.item_number BETWEEN NVL(:p_item_from, et.item_number) AND     NVL(:p_item_to, et.item_number)
AND     ( (
                        :p_category_from IS NULL)
        OR      ec.category_name BETWEEN NVL(:p_category_from, ec.category_name) AND     NVL(:p_category_to, ec.category_name) )
AND     A.cost_org_id                                           = co.cost_org_id
AND     A.cost_org_id                                           = ccob.cost_org_id
AND     A.cost_book_id                                          = ccob.cost_book_id
AND     ccob.ledger_id                                          = gl.ledger_id(+)
AND     b.inventory_item_id                                     = et.inventory_item_id
AND     b.inventory_org_id                                      = et.organization_id
AND     b.inventory_item_id                                     = ec.inventory_item_id(+)
AND     b.inventory_org_id                                      = ec.organization_id(+)
AND     b.inventory_org_id                                      = iod.organization_id
AND     A.uom_code                                              = uom.uom_code(+)
AND     Material.inventory_item_id(+)                           = b.inventory_item_id
AND     Overhead.inventory_item_id(+)                           = b.inventory_item_id
AND     Direct_Labor.inventory_item_id(+)                       = b.inventory_item_id
AND     Direct_Equipment.inventory_item_id(+)                   = b.inventory_item_id
AND     DECODE(:p_txn_op, 'N', DECODE(SIGN(unit_cost),0,0,1), 1)=1
AND     vs.val_structure_type_code                              = DECODE(:p_valuation_type, 'EXPENSE', 'EXPENSE','ASSET','ASSET','CONSIGNED')
AND     ( (
                        NVL(:p_neg_value,'Y')='Y')
        OR      (
                        :p_neg_value    ='N'
                AND     b.total_quantity>0))
ORDER BY
        rank,
        val_unit_id
		
--q2--
select :xdo_user_name user_name,sysdate from dual
====================================================================================================================
------Inventory Valuation with Descriptions Data Model----------
--q1--
WITH iod
AS
  (SELECT p.organization_id,
    p.legal_entity_id legal_entity,
    hou.NAME organization_name
  FROM hr_all_organization_units_x hou ,
    inv_org_parameters p
  WHERE p.organization_id = hou.organization_id
  ) ,
A AS
  (SELECT cost_org_id,
    cost_book_id,
    val_unit_id,
--  inventory_org_id, changed for bug 21869978 , now Inv Org is derived from b
    inventory_item_id,
    sum(onhand_value) onhand_value,
    DECODE(MAX(cost_method_code), 'STANDARD',SUM(unit_cost),MAX(unit_cost)) unit_cost,
    max(uom_code) uom_code,
    max(currency_code) currency_code,
    max(cost_method_code) cost_method_code
  FROM cst_costed_vu_costs_v --changed for bug 21869978, earlier we used cst_costed_attr_costs_v
  WHERE nvl(:p_as_of_date, SYSDATE) BETWEEN snapshot_date AND (eff_to_date-1)
  AND cost_org_id  = :p_cost_org_id
  AND cost_book_id = :p_cost_book_id
  group by cost_org_id,cost_book_id,val_unit_id,inventory_item_id
),
b AS
  (SELECT cost_org_id,
    cost_book_id,
    val_unit_id,
    inventory_item_id,
    inventory_org_id,
    sum(quantity) total_quantity,
    max(vu_quantity) vu_quantity
  FROM cst_costed_attr_onhand_v
  WHERE nvl(:p_as_of_date, SYSDATE) BETWEEN snapshot_date AND (eff_to_date-1)
  AND cost_org_id    = :p_cost_org_id
  AND cost_book_id   = :p_cost_book_id
  group by cost_org_id,cost_book_id,val_unit_id,inventory_item_id,inventory_org_id
) ,
--added for bug 25175168
c AS
  (SELECT cost_org_id,
    cost_book_id,
    val_unit_id,
    inventory_item_id,
    quantity vu_quantity
  FROM fusion.cst_costed_vu_onhand_v
  WHERE 
    nvl(:p_as_of_date, SYSDATE) BETWEEN snapshot_date AND (eff_to_date-1)
  AND cost_org_id    = :p_cost_org_id
  AND cost_book_id   = :p_cost_book_id
  ),
ec AS
  (SELECT eic.inventory_item_id,
    eic.category_id,
    eic.organization_id,
    ecv.category_name,
    ecv.category_code
  FROM egp_item_categories eic,
    egp_default_category_sets edc,
    egp_categories_vl ecv
  WHERE eic.category_set_id  = edc.category_set_id
  AND edc.functional_area_id = 5
  AND eic.category_id= ecv.category_id
  ),
Material AS (select DECODE(MAX(cost_method_code), 'STANDARD',SUM(unit_cost),MAX(unit_cost)) UC1,
   A1.inventory_item_id inventory_item_id
   FROM
   cst_costed_vu_costs_v A1,
   fusion.cst_cost_elements_vl ce1
   WHERE 
   ce1.cost_element_code = 'Material'
   AND ce1.cost_element_type = 'MATERIAL'
   AND A1.cost_element_id = ce1.cost_element_id
   AND A1.cost_org_id  = :p_cost_org_id
   AND A1.cost_book_id = :p_cost_book_id
   AND nvl(:p_as_of_date, SYSDATE) BETWEEN snapshot_date AND (eff_to_date-1)
   group by inventory_item_id
   ),
Overhead AS (select DECODE(MAX(cost_method_code), 'STANDARD',SUM(unit_cost),MAX(unit_cost)) UC2,
   inventory_item_id
   FROM
   cst_costed_vu_costs_v A1,
   fusion.cst_cost_elements_vl ce1
   WHERE 
   ce1.cost_element_code = 'Overhead'
   AND ce1.cost_element_type = 'OVERHEAD'
   AND A1.cost_element_id = ce1.cost_element_id
   AND A1.cost_org_id  = :p_cost_org_id
   AND A1.cost_book_id = :p_cost_book_id
   AND nvl(:p_as_of_date, SYSDATE) BETWEEN snapshot_date AND (eff_to_date-1)
   group by inventory_item_id
   ),
Direct_Labor AS (select DECODE(MAX(cost_method_code), 'STANDARD',SUM(unit_cost),MAX(unit_cost)) UC3,
   inventory_item_id
   FROM
   cst_costed_vu_costs_v A1,
   fusion.cst_cost_elements_vl ce1
   WHERE 
   ce1.cost_element_code = 'Direct Labor'
   AND ce1.cost_element_type = 'RESOURCE'
   AND A1.cost_element_id = ce1.cost_element_id
   AND A1.cost_org_id  = :p_cost_org_id
   AND A1.cost_book_id = :p_cost_book_id
   AND nvl(:p_as_of_date, SYSDATE) BETWEEN snapshot_date AND (eff_to_date-1)
   group by inventory_item_id
   ) ,
Direct_Equipment AS (select DECODE(MAX(cost_method_code), 'STANDARD',SUM(unit_cost),MAX(unit_cost)) UC4,
   inventory_item_id
   FROM
   cst_costed_vu_costs_v A1,
   fusion.cst_cost_elements_vl ce1
   WHERE 
   ce1.cost_element_code = 'Direct Equipment'
   AND ce1.cost_element_type = 'RESOURCE'
   AND A1.cost_element_id = ce1.cost_element_id
   AND A1.cost_org_id  = :p_cost_org_id
   AND A1.cost_book_id = :p_cost_book_id
   AND nvl(:p_as_of_date, SYSDATE) BETWEEN snapshot_date AND (eff_to_date-1)
   group by inventory_item_id
   )   
SELECT A.cost_org_id,
  A.cost_book_id,
  A.val_unit_id,
  A.inventory_item_id,
  uom.unit_of_measure,
  DENSE_RANK() OVER (ORDER BY et.item_number,ec.category_name, val_unit_code) AS rank,
  b.total_quantity quantity,
  nvl(decode (A.cost_method_code, 'ACTUAL', A.onhand_value / (decode(c.vu_quantity, 0, decode(b.total_quantity, 0, 1, b.total_quantity), c.vu_quantity)), A.unit_cost),0) unit_cost,
  nvl(decode (A.cost_method_code, 'ACTUAL', A.onhand_value / (decode(c.vu_quantity, 0, decode(b.total_quantity, 0, 1, b.total_quantity), c.vu_quantity)), A.unit_cost),0)*b.total_quantity value,
  --A.cost_element_id,
  A.currency_code AS functional_currency,
  nvl(:p_as_of_date, SYSDATE) AS as_of_date,
  b.inventory_org_id,
  co.cost_org_name,
  cb.cost_book_code,
  vs.val_structure_code,
  vu.val_unit_code,
  et.item_number AS item_code,
  et.description AS item_description,
  ec.category_id,
  ec.category_code,
  ec.category_name,
  --ce.cost_element_code,
  --ce.cost_element_type,
  iod.organization_name AS inv_org_name,
  ccob.ledger_id,
  gl.NAME AS ledger_name,
  iod.legal_entity,
  fl.meaning,
  (select max(tx1.transaction_date) from inv_material_txns tx1 where tx1.inventory_item_id = b.inventory_item_id) last_used_date,
  Material.UC1 MATERIAL,
  Overhead.UC2 OVERHEAD,
  Direct_Labor.UC3 DIRECT_LABOR,
  Direct_Equipment.UC4 DIRECT_EQUIPMENT,
  (SELECT subinventory_code 
     FROM inv_material_txns txns
    WHERE txns.transaction_date  = (select max(tx1.transaction_date) from inv_material_txns tx1 where tx1.inventory_item_id = b.inventory_item_id)
      AND txns.inventory_item_id = b.inventory_item_id
	  AND txns.organization_id   = iod.organization_id
	  AND rownum = 1) LAST_USED_SUBINV,
  (SELECT itemloc.segment1||'.'||itemloc.segment2||'.'||itemloc.segment3
     FROM inv_item_locations itemloc,
          inv_material_txns txns
    WHERE itemloc.inventory_location_id = txns.locator_id
      AND txns.transaction_date = (select max(tx1.transaction_date) from INV_MATERIAL_TXNS tx1 WHERE tx1.inventory_item_id = b.inventory_item_id)
      AND txns.inventory_item_id = b.inventory_item_id
	  AND txns.organization_id        = iod.organization_id
	  AND rownum = 1) LAST_USED_LOCATOR
FROM fusion.cst_val_units_b vu,
  fusion.cst_val_structures_b vs,
  fusion.cst_cost_books_vl cb,
  --fusion.cst_cost_elements_vl ce,
  fusion.cst_cost_orgs_v co,
  egp_system_items_vl et,
  ec,
  fusion.cst_cost_org_books ccob,
  gl_ledgers gl,
  iod,
  A,
  b,
  c,
  inv_units_of_measure_vl uom,
  fnd_lookups fl,
  Material,
  Overhead,
  Direct_Labor,
  Direct_Equipment
WHERE A.cost_org_id     = b.cost_org_id
AND A.cost_method_code  = fl.lookup_code
AND fl.lookup_type      ='CST_COST_METHODS'
AND A.cost_book_id      = b.cost_book_id
AND A.val_unit_id       = b.val_unit_id
AND A.inventory_item_id = b.inventory_item_id
AND b.cost_org_id     = c.cost_org_id
AND b.cost_book_id      = c.cost_book_id
AND b.val_unit_id       = c.val_unit_id
AND b.inventory_item_id = c.inventory_item_id 
--AND ( A.inventory_org_id = b.inventory_org_id or A.inventory_org_id = -1) --changed for bug 21869978, Inv Org derived from b so no need of join
AND ((:p_val_unit IS NULL OR (A.val_unit_id=:p_val_unit)))
AND A.val_unit_id       = vu.val_unit_id
AND vs.val_structure_id = vu.val_structure_id
AND A.cost_book_id      = cb.cost_book_id
--AND A.cost_element_id   = ce.cost_element_id
AND et.item_number BETWEEN nvl(:p_item_from, et.item_number) AND nvl(:p_item_to, et.item_number) AND ( (:p_category_from IS NULL)
OR ec.category_name BETWEEN nvl(:p_category_from, ec.category_name) AND nvl(:p_category_to, ec.category_name) )
AND A.cost_org_id= co.cost_org_id
AND A.cost_org_id= ccob.cost_org_id
AND A.cost_book_id= ccob.cost_book_id
AND ccob.ledger_id= gl.ledger_id(+)
AND b.inventory_item_id= et.inventory_item_id
AND b.inventory_org_id= et.organization_id
AND b.inventory_item_id= ec.inventory_item_id(+)
AND b.inventory_org_id= ec.organization_id(+)
AND b.inventory_org_id= iod.organization_id
AND A.uom_code= uom.uom_code(+)
AND Material.inventory_item_id(+) = b.inventory_item_id
AND Overhead.inventory_item_id(+) = b.inventory_item_id
AND Direct_Labor.inventory_item_id(+) = b.inventory_item_id
AND Direct_Equipment.inventory_item_id(+) = b.inventory_item_id
AND decode(:p_txn_op, 'N', decode(sign(unit_cost),0,0,1), 1)=1
AND vs.val_structure_type_code= decode(:p_valuation_type, 'EXPENSE', 'EXPENSE','ASSET','ASSET','CONSIGNED')
AND ( (nvl(:p_neg_value,'Y')='Y')OR (:p_neg_value='N' AND b.total_quantity>0))
ORDER BY rank,  val_unit_id
--q2--
select :xdo_user_name user_name,sysdate from dual
======================================================================================================================
-----------------------------------------------------------IsraeliWithholdingAnnualCertificateToVendorsDm----------------------------------------------------
--Q_FIRST_PARTY_ADD
SELECT name payer_name
            , address_line_1||'  '||address_line_2||'  '||address_line_3||'  '||town_or_city||'  '||postal_code payer_address,
             country Country
FROM xle_firstparty_information_v  
WHERE legal_entity_id = :P_Legal_Entity_ID
--G_MAIN
select &p_vendor_type_col
from dual
--Q_PAYMENT
SELECT  ac.vendor_site_id Vendor_Site_ID2,        
	      SUM(ROUND(JE_IL_WHT_TAX_PKG.get_gross_amount(ai.invoice_id,aip.check_id,
                    :P_ACCOUNTING_START_DATE1,:P_ACCOUNTING_END_DATE, 
                    aip.reversal_inv_pmt_id),2)) gross_amount,
              SUM(ROUND(JE_IL_WHT_TAX_PKG.get_awt_amount,2)) Awt_Amount,
	      SUM(ROUND(JE_IL_WHT_TAX_PKG.get_awt_bank_amt(aip.Check_Id),2)) awt_bank_amt
FROM
            ap_invoices_all ai,
            ap_checks_all ac,
            ap_invoice_payments_all aip,
            iby_payment_methods_vl ibyp
WHERE ai.vendor_site_id = :Vendor_Site_ID1	  
     AND     ac.payment_method_code = ibyp.payment_method_code
     AND     ai.invoice_id = aip.invoice_id
     AND     ac.check_id = aip.check_id
     AND     ai.legal_entity_id = :P_Legal_Entity_ID
     AND    JE_IL_WHT_TAX_PKG.get_gross_amount (ai.invoice_id, aip.check_id, :P_ACCOUNTING_START_DATE1, :P_ACCOUNTING_END_DATE, aip.reversal_inv_pmt_id) <> 0
     AND     EXISTS ( SELECT 1 
                                FROM  ap_invoice_distributions_all aid 
                              WHERE aid.invoice_id = ai.invoice_id
                                   AND aid.line_type_lookup_code = 'AWT'
                                   AND aid.awt_flag ='A'  
  	                AND aid.awt_invoice_payment_id IS NOT NULL 
        UNION
        SELECT 1
        FROM AP_INVOICES_ALL ai1		
                  ,AP_INVOICE_PAYMENTS_ALL aip1
		  ,AP_CHECKS_ALL ac1
 		 ,poz_suppliers_v pvend1
 		,poz_supplier_sites_all_m pvs1
		 WHERE  ai1.invoice_id = ai.invoice_id
		 AND ai1.invoice_id= aip1.invoice_id
		AND   ai1.vendor_id = pvend1.vendor_id
		AND   ai1.vendor_site_id = pvs1.vendor_site_id
		AND   pvend1.vendor_id = pvs1.vendor_id
		AND   aip1.check_id = ac1.check_id
		  AND   ai1.legal_entity_id = :P_Legal_Entity_ID 
		 AND   ai1.set_of_books_id = aip1.set_of_books_id
		AND   aip1.set_of_books_id= &l_primary_ledger_id
               -- AND   ac1.global_attribute_category='JE_IL_PAYMENT_CHECKS'
		--AND   NVL(ac1.global_attribute_number1,0) > 0
		AND aip1.accounting_date >=:P_ACCOUNTING_START_DATE1 
		AND aip1.accounting_date <=:P_ACCOUNTING_END_DATE
                &l_currency_check
                &l_foreign_suppliers_check)
GROUP BY  ac.vendor_site_id
--Q_VENDOR_SITE
SELECT pvs.vendor_id Vendor_ID1,
             pvend.segment1 Vendor_Num1,
             &p_vendor_name_col
             &p_vendor_sitecode_col
             pvs.vendor_site_id Vendor_Site_ID1 ,
             &p_vat_reg_no
             JE_IL_WHT_TAX_PKG.IS_NUMBER(&p_tax_payerid_cond, pvend.segment1)  Taxpayer_Id ,
             trim(pvs.address_line1||' '||pvs.address_line2||' '||pvs.address_line3) Vendor_Address, 
             &p_business_sec_cond
             (SELECT B.description 
               FROM fnd_flex_value_sets A,fnd_flex_values_vl B
               WHERE A.flex_value_set_name = 'JEIL_TAX_OFFICER_NUMBER' 
                AND   A.flex_value_set_id=B.flex_value_set_id
                AND   B.FLEX_VALUE = &p_flex_value_cond
		AND   ROWNUM = 1) IRS_Tax_Officer,
             (SELECT b.description
	      FROM fnd_flex_value_sets a, fnd_flex_values_vl b
	      WHERE a.flex_value_set_name = 'JEIL_WHT_TAX_RPT_GROUP'
	        AND a.flex_value_set_id = b.flex_value_set_id
		AND b.flex_value = SUBSTR(&p_deduction_type_cond,1,2)) Deduction_Type
FROM   poz_suppliers_v pvend,
             poz_supplier_sites_v pvs,
             poz_site_assignments_all_m psa,
             zx_condition_groups_b zcg,
             poz_suppliers_pii pi,
             hz_parties hp,
             (select p.person_id, n.national_identifier_number ,n.legislation_code
              from PER_ALL_PEOPLE_F_V p, PER_NATIONAL_IDENTIFIERS_v n
              where p.primary_nid_id = n.national_identifier_id
              and n.legislation_code = :COUNTRY
              and nvl(n.expiration_date, to_date('31-DEC-4712','DD-MON-YYYY')) > 
                     to_date(:P_ACCOUNTING_END_DATE,'DD-MON-YYYY')
    	      and trunc(sysdate) BETWEEN p.effective_start_date AND p.effective_end_date) papf
WHERE pvend.vendor_id = pvs.vendor_id
AND      zcg.condition_group_id(+) = psa.awt_group_id
AND      psa.vendor_site_id =  pvs.vendor_site_id
AND      pvend.vendor_id = pi.vendor_id (+)
AND      pvend.party_id = hp.party_id 
AND      nvl(hp.user_guid,-99)  = papf.person_id (+) 

--&p_vendor_type_cond 
&p_supplier_num_from  
&p_supplier_num_to 		
ORDER BY pvs.vendor_id, pvs.vendor_site_id
--Q_FIRST_PARTY
SELECT DISTINCT 
	    JE_IL_WHT_TAX_PKG.IS_NUMBER(max(decode(person_last_name, 'TN',
             person_first_name)),'DFN') Deduction_File_Number,
	    JE_IL_WHT_TAX_PKG.IS_NUMBER(max(decode(person_last_name, 'TM', 
            person_first_name)),'CTPID') Tax_Payer_ID
FROM  hz_parties, 
          (SELECT subject_id
                       ,XLE_CONTACT_GRP.concat_contact_roles (subject_id,object_id) le_role
            FROM    hz_relationships 
	    WHERE object_id = (SELECT party_id 
					      FROM xle_firstparty_information_v
					      WHERE legal_entity_id = :P_Legal_Entity_ID)
	                                      AND      relationship_code = 'CONTACT_OF'                  
	                                      AND      directional_flag = 'F') q1
WHERE party_id = q1.subject_id
--Q_LOOKUP
SELECT 
min(decode(lookup_type, 'ORA_JEIL_VENDOR_TYPE', decode(lookup_code, :P_Vendor_Type, meaning, NULL)))  Vendor_Type,
min(decode(lookup_type, 'ORA_JEIL_RPT_METHODS', decode(lookup_code, :P_Method, meaning, 	NULL))) Report_Method,
min(decode(lookup_type, 'ORA_JEIL_ORDER_BY', decode(lookup_code, :P_Order_By, meaning, NULL))) Order_By,
 min(decode(lookup_type, 'ORA_JEIL_LEVEL', decode(lookup_code, :P_Information_Level, meaning, NULL))) Information_Level,
min(decode(lookup_type, 'ORA_JEIL_NAME_LEVEL', decode(lookup_code, :P_Name_Level, meaning, NULL))) Name_Level 
FROM fnd_lookups 
WHERE lookup_type IN ('ORA_JEIL_VENDOR_TYPE',
                       'ORA_JEIL_RPT_METHODS', 
                       'ORA_JEIL_ORDER_BY', 
                       'ORA_JEIL_LEVEL', 
                       'ORA_JEIL_NAME_LEVEL')
--G_END_DATE
SELECT  to_char(end_date,'DD-MON-YYYY') p_accounting_end_date
FROM    gl_periods
WHERE  UPPER(period_name) = UPPER(:P_To_Period)
AND      period_set_name= :P_Calendar
--Q_START_DATE
SELECT  to_char(start_date,'DD-MON-YYYY') p_accounting_start_date1
           , period_year Tax_Year
FROM    gl_periods
WHERE  UPPER(period_name) = UPPER(:P_From_Period)
AND       period_set_name= :P_Calendar
=====================================================================================================================
----------------------------------------------------IsraeliWithholdingTaxDm----------------------------------------------------
--G_PERIOD_TRL
 SELECT ROWNUM period_number 
FROM dual
CONNECT BY ROWNUM < 13
--G_TAX_TRL
SELECT COUNT(DISTINCT TAXPAYER_ID) VENDOR_COUNT,
	sum(GROSS_AMOUNT) GROSS_AMOUNT,
	sum( AWT_AMOUNT) AWT_AMOUNT,
	sum(AWT_BANK_AMT) AWT_BANK_AMT, 
	sum( VENDOR_BALANCE) VENDOR_BALANCE,
	sum(PERIOD_DIVIDEND_AMOUNT) PERIOD_DIVIDEND_AMOUNT,
	sum(PERIOD_DIVIDEND_AWT) PERIOD_DIVIDEND_AWT
FROM 
(SELECT
    MAX(jx.attribute3) TAXPAYER_ID,	
    dtl.billing_tp_address_id VENDOR_SITE_ID,
    MAX(jx.numeric5) PERIOD_NUMBER,
	sum(NVL(jx.numeric12,0)) GROSS_AMOUNT,
	sum(NVL(jx.numeric9,0)) AWT_AMOUNT,
	sum(NVL(jx.numeric11,0)) AWT_BANK_AMT, 
	sum(NVL(jx.numeric8,0)) VENDOR_BALANCE,
	sum(NVL(jx.numeric7,0)) PERIOD_DIVIDEND_AMOUNT,
	sum(NVL(jx.numeric6,0)) PERIOD_DIVIDEND_AWT
FROM
    zx_rep_context_t repc,
    zx_rep_trx_detail_t dtl,
    zx_rep_trx_jx_ext_t jx
WHERE repc.rep_context_id = dtl.rep_context_id
    AND dtl.request_id = :fusionapps_request_id
    AND dtl.detail_tax_line_id = jx.detail_tax_line_id(+)
    AND :g_wtrl_enabled = 'Y'
    AND :P_REPORT_NAME = 'JEILWHTT'
    AND jx.numeric5 = :period_number	
GROUP BY dtl.billing_tp_address_id)
WHERE GROSS_AMOUNT <> 0
AND AWT_AMOUNT <> 0
GROUP BY PERIOD_NUMBER
--G_DATES_TRL
SELECT 
:g_start_date start_date_trl, 
:g_end_date end_date_trl,
:p_year tax_year_trl
from dual
WHERE :g_wtrl_enabled = 'Y'
--G_VENDOR_TRL
SELECT
	CASE :p_order_by WHEN 'T' THEN MAX(jx.attribute3) ELSE dtl.billing_tp_number END order_by,
    dtl.billing_trading_partner_id vendor_id,
    dtl.billing_tp_address_id vendor_site_id,
    dtl.legal_entity_id,
    dtl.ledger_name,
    dtl.billing_tp_number VENDOR_NUM1,
    dtl.billing_tp_name VENDOR_NAME1,
    MAX(jx.attribute3) TAXPAYER_ID,	
    dtl.billing_tp_site_name VENDOR_SITE_CODE,
    dtl.trx_number CHECK_NUMBER,
    MAX(jx.attribute1) PAYMENT_TYPE,
	CASE cancel_flag WHEN 'Y' THEN TO_CHAR(TO_DATE(dtl.tax_line_user_attribute15,'RRRR-MM-DD'),'DD-MON-YYYY')
    ELSE TO_CHAR(dtl.trx_date,'DD-MON-YYYY')
    END CHECK_DATE,
	MAX(jx.attribute_date1) START_DATE1,  
	MAX(jx.attribute_date2) END_DATE1,  
	dtl.exempt_rate_modifier TAX_RATE,
	dtl.exempt_certificate_number TAX_NAME,
	MAX(jx.attribute2) COMMENTS,
    trim(dtl.BILLING_TP_ADDRESS1||' '||dtl.BILLING_TP_ADDRESS2||' '||dtl.BILLING_TP_ADDRESS3) VENDOR_ADDRESS,
	dtl.billing_tp_city CITY,
	NVL(dtl.billing_tp_site_tax_reg_num,dtl.billing_tp_tax_reg_num) VAT_REG_NO,
	MAX(jx.attribute7) BUSINESS_SECTOR,
	MAX(jx.attribute8) DEDUCTION_TYPE,
	MAX(jx.attribute6) IRS_TAX_OFFICER,
    MAX(jx.attribute4) SUPPLIER_TYPE,
    MAX(jx.attribute5) EXP_IRS,
	MAX(NVL(jx.attribute9,'0')) BANK_SUPPLIER,
	MAX(jx.attribute11) PHONE_NO,
	SUM(NVL(jx.numeric12,0)) GROSS_AMOUNT,
	SUM(NVL(jx.numeric9,0)) AWT_AMOUNT,
	SUM(NVL(jx.numeric11,0)) AWT_BANK_AMT,
	SUM(NVL(jx.numeric8,0)) VENDOR_BALANCE,
	SUM(NVL(jx.numeric10,0)) AWT_TAX_AMT
FROM
    zx_rep_context_t repc,
    zx_rep_trx_detail_t dtl,
    zx_rep_trx_jx_ext_t jx
WHERE repc.rep_context_id = dtl.rep_context_id
    AND dtl.request_id = :fusionapps_request_id
    AND dtl.detail_tax_line_id = jx.detail_tax_line_id(+)
    AND :g_wtrl_enabled = 'Y'
GROUP BY
    dtl.legal_entity_id,
    dtl.billing_trading_partner_id,
    dtl.billing_tp_address_id,    
    dtl.ledger_name,
    dtl.billing_tp_number ,
    dtl.billing_tp_name ,
    dtl.billing_tp_site_name ,
    dtl.trx_number ,
	dtl.trx_date,
    dtl.trx_id, 
	dtl.exempt_rate_modifier,
	dtl.exempt_certificate_number,
    dtl.billing_tp_address1,
    dtl.billing_tp_address2,
    dtl.billing_tp_address3,
	dtl.billing_tp_city,
	dtl.billing_tp_site_tax_reg_num,
	dtl.billing_tp_tax_reg_num,
    dtl.cancel_flag,
    dtl.tax_line_user_attribute15	
ORDER BY
    1,2,3,10,11
--Q_COUNT_VENDORS
SELECT count(distinct abc.vendor_id4) vendor_count
FROM  (SELECT  a.vendor_site_id3 vendor_site_id4
                       ,a.vendor_id3 vendor_id4
	    ,sum(a.gross_amount) gamount
	    ,sum(a.awt_amount)  gawt
	    ,a.period        
            FROM  (SELECT distinct  
	       ac.check_id Check_ID, 
	       ac.vendor_id vendor_id3,
	       ac.vendor_site_id Vendor_Site_ID3,
	       ac.check_number Check_Number,
	       ac.check_date Check_Date, 
	       JE_IL_WHT_TAX_PKG.get_gross_amount(ai.invoice_id, aip.check_id, 
                              :P_ACCOUNTING_START_DATE ,:P_ACCOUNTING_END_DATE, 
                              aip.reversal_inv_pmt_id) gross_amount,
	      JE_IL_WHT_TAX_PKG.get_awt_amt(Ai.Invoice_Id,Aip.Check_Id, 
                              :P_ACCOUNTING_START_DATE, :P_ACCOUNTING_END_DATE, 
                              aip.reversal_inv_pmt_id) Awt_Amount,				      ibyp.payment_method_name Payment_Type,
	      to_char(aip.accounting_date,'MM') period,
	      row_number( ) over 
                             (partition by aip.invoice_id,aip. check_id,aip.accounting_event_id 
                              order by aip.invoice_id, aip.check_id, aip.accounting_event_id
                      ) line
	FROM    ap_invoices_all ai, 
                               ap_checks_all ac,
                               ap_invoice_payments_all aip,					             iby_payment_methods_vl ibyp,
	             poz_suppliers pvend,
	             poz_supplier_sites_all_m pvs
	WHERE  ai.vendor_site_id = ac.vendor_site_id
	AND      ai.vendor_id = pvend.vendor_id
	AND      ai.vendor_site_id = pvs.vendor_site_id
	AND      pvend.vendor_id = pvs.vendor_id
	AND      ac.payment_method_code = ibyp.payment_method_code
	AND      ai.invoice_id = aip.invoice_id
	AND      ac.check_id = aip.check_id
	AND      ai.legal_entity_id =  :P_Legal_Entity_ID
	AND      (JE_IL_WHT_TAX_PKG.get_gross_amount(ai.invoice_id, aip.check_id, 
                                :P_ACCOUNTING_START_DATE , :P_ACCOUNTING_END_DATE, 
                                aip.reversal_inv_pmt_id) <> 0 
                                OR JE_IL_WHT_TAX_PKG.get_awt_amount <> 0 )
                   AND     EXISTS 
                              (SELECT 1 
                               FROM   ap_invoice_distributions_all aid 
                               WHERE aid.invoice_id = ai.invoice_id
               	             AND     aid.line_type_lookup_code = 'AWT'
 	             AND     aid.awt_flag ='A'  
	             AND     aid.awt_invoice_payment_id IS NOT NULL 
                               AND      aid.awt_invoice_payment_id = aip.invoice_payment_id
	            AND      aid.accounting_date >= :P_ACCOUNTING_START_DATE 
	            AND      aid.accounting_date <= :P_ACCOUNTING_END_DATE
	            UNION
	            SELECT 1
	            FROM   ap_invoices_all ai1					                      ,ap_invoice_payments_all aip1
		   ,ap_checks_all ac1
	   	   ,poz_suppliers pvend1
		   ,poz_supplier_sites_all_m pvs1
                              WHERE ai1.invoice_id = ai.invoice_id				           AND   ai1.invoice_id= aip1.invoice_id				           AND   ai1.vendor_id = pvend1.vendor_id			   
  	           AND   ai1.vendor_site_id = pvs1.vendor_site_id
	           AND   pvend1.vendor_id = pvs1.vendor_id	 
                              AND   aip1.check_id = ac1.check_id
	           AND   ai1.legal_entity_id = :P_Legal_Entity_ID 
	           AND   ai1.set_of_books_id = &l_primary_ledger_id
	           AND   aip1.set_of_books_id= &l_primary_ledger_id
	           AND   ac1.global_attribute_category='JE_IL_PAYMENT_CHECKS'
                              AND   NVL(ac1.global_attribute_number1,0) > 0	
                              AND aip1.accounting_date >=:P_ACCOUNTING_START_DATE 
                              AND aip1.accounting_date <=:P_ACCOUNTING_END_DATE  
                              &l_currency_check
                              &l_foreign_suppliers_check) 
           &p_vendor_type_cond
             ) a   
     where a.line=1
     and    ( :P_REPORT_NAME ='JEILWHTT' OR   
               (:P_REPORT_NAME ='JEILWHTD' AND :P_METHOD='S'))
     group by a.period,a.Vendor_ID3,a.Vendor_Site_ID3
     having sum(a.gross_amount) > 0 or sum(a.awt_amount) > 0) abc
--Q_COUNT_LINES
SELECT SUM(lines.countv) count_lines
FROM  
(SELECT DISTINCT ac.vendor_site_id vendor_site_id, 
              CASE
                  WHEN (SUM(nvl(nvl(aid.base_amount,    aid.amount) *-1,    0)) < 0 
	                 OR(SUM(nvl(aip.payment_base_amount,    aip.amount)) + 
	                 SUM(nvl(nvl(aid.base_amount,    aid.amount) *-1,    0))) < 0) 
                  THEN 0
                  ELSE 1
              END countv
 FROM ap_invoices_all ai,
          ap_invoice_distributions_all aid,
          ap_checks_all ac,
          ap_invoice_payments_all aip,
          poz_suppliers_v pvend,
          poz_supplier_sites_all_m pvs
 WHERE ai.invoice_id = aid.invoice_id
    AND ac.check_id = aip.check_id
    AND aip.invoice_id = ai.invoice_id 
    AND ai.set_of_books_id = aid.set_of_books_id
    AND aid.set_of_books_id = &l_primary_ledger_id
    AND ai.legal_entity_id = :p_legal_entity_id
    AND aid.line_type_lookup_code = 'AWT'
    AND aid.awt_flag = 'A'
    AND aid.awt_invoice_payment_id IS NOT NULL 
    AND aid.accounting_date >=:P_ACCOUNTING_START_DATE 
    AND aid.accounting_date <=:P_ACCOUNTING_END_DATE
    AND pvend.vendor_id = pvs.vendor_id
    AND pvs.vendor_id = ai.vendor_id
  GROUP BY ac.vendor_site_id
UNION
    SELECT distinct ac1.vendor_site_id vendor_site_id,
                CASE WHEN  SUM(NVL(aip1.payment_base_amount,aip1.amount)) < 0
	 THEN 0
                    ELSE 1
                END countv
    FROM  ap_invoice_payments_all aip1
             ,ap_checks_all ac1
             ,poz_suppliers_v pvend
             ,poz_supplier_sites_all_m pvs  
    WHERE aip1.check_id = ac1.check_id
    AND   aip1.set_of_books_id= &l_primary_ledger_id
    AND   aip1.accounting_date >=:P_ACCOUNTING_START_DATE 
    AND   aip1.accounting_date <=:P_ACCOUNTING_END_DATE
    AND   ac1.vendor_id= pvend.vendor_id
    AND   ac1.vendor_site_id = pvs.vendor_site_id
    AND   pvend.vendor_id = pvs.vendor_id
    AND   ac1.global_attribute_category= 'JE_IL_PAYMENT_CHECKS'
    AND   NVL(ac1.global_attribute_number1,0) > 0
    &l_currency_check
    &l_foreign_suppliers_check1
    GROUP BY ac1.vendor_site_id 
    ) lines
WHERE (:P_REPORT_NAME ='JEILWHTT' OR   (:P_REPORT_NAME ='JEILWHTD' AND :P_METHOD='S'))
--Q_VENDOR_BAL
SELECT  (SUM(NVL(accounted_cr,0)) - SUM(NVL(accounted_dr,0))) vendor_balance,
             vendor_id vendor_id3,
             vendor_site_id vendor_site_id3
FROM     ap_trial_balances
WHERE   ledger_id = :P_LEDGER_ID
AND       party_id = :PARTY_ID 
AND       vendor_id = :VENDOR_ID2
AND       vendor_site_id = :VENDOR_SITE_ID2
AND       accounting_date <= :P_ACCOUNTING_END_DATE
AND      ( :P_REPORT_NAME ='JEILWHTT' OR   (:P_REPORT_NAME ='JEILWHTD' AND :P_METHOD='S'))
GROUP BY vendor_site_id, vendor_id 
HAVING  &p_vendor_balance_query
--Q_AWT_TAX_RATE
SELECT cert.effective_from START_DATE1,
            cert.effective_to END_DATE1,
            cert.rate_modifier TAX_RATE,
            cert.exempt_certificate_number TAX_NAME,
            lkp.meaning COMMENTS
FROM    zx_exemptions cert, zx_party_tax_profile ptp, fnd_lookups lkp
WHERE  ptp.PARTY_ID  in (:PARTY_SITE_ID, :PARTY_ID)
AND      cert.exempt_reason_code = lkp.lookup_code
AND      lkp.lookup_type = 'ZX_EXEMPTION_REASON_CODE'
AND      cert.party_tax_profile_id = ptp.party_tax_profile_id
AND      cert.effective_from <= :P_ACCOUNTING_START_DATE
AND      nvl(cert.effective_to, :P_ACCOUNTING_END_DATE)  >= :P_ACCOUNTING_END_DATE
AND      :P_REPORT_NAME IN ('JEILWHTR', 'JEILAVCR')
ORDER BY cert.effective_from, cert.effective_to
--Q_END_DATE
SELECT  end_date p_accounting_end_date
FROM    gl_periods
WHERE  period_name = :P_To_Period
AND      period_set_name= :P_Calendar
AND :g_wtrl_enabled = 'N'
--Q_START_DATE
SELECT  start_date p_accounting_start_date
           , period_year Tax_Year
FROM    gl_periods
WHERE  period_name = :P_From_Period
AND       period_set_name= :P_Calendar
AND :g_wtrl_enabled = 'N'
--Q_BY_PERIODS
SELECT 
   glp.period_num
   --,count(distinct abc.vendor_id4) vendor_count
   ,count(distinct abc.taxpayer_id1) vendor_count							   
   ,NVL(sum(abc.gamount),0) gamount
   ,decode(sign(nvl(sum(abc.gawt),0)), -1, '-', '0') || substr(to_char(round(sum(abc.gawt)), '00000000000D00'), 2, 11) gawt
   ,decode(sign(nvl(sum(abc.gawt),0)- nvl(sum(abc.dawt),0)), -1, '-', '0') || nvl(substr(to_char(round(sum(abc.gawt) - sum(abc.dawt)), '00000000000D00'), 2, 11),'000000000000') gdawt
   ,NVL(sum(abc.damount),0) PERIOD_DIVIDEND_AMOUNT
   ,NVL(sum(abc.dawt),0) PERIOD_DIVIDEND_AWT
   ,round(NVL(sum(abc.gamount),0) - NVL(sum(abc.damount),0)) gamount3
FROM
  (SELECT  
      e.vendor_site_id3 vendor_site_id4
      ,e.vendor_id3 vendor_id4
      ,sum(e.gross_amount) gamount	
      ,sum(e.awt_amount)  gawt
      ,sum(e.div_amount) damount
      ,sum(e.div_awt) dawt
      ,e.period   
      ,e.taxpayer_id1 taxpayer_id1
   FROM   
     (SELECT  
         d.vendor_site_id3 vendor_site_id3
        ,d.vendor_id3 vendor_id3
        ,(CASE WHEN d.gamount_filter > 0 THEN d.gross_amount  ELSE 0 END) gross_amount
        ,(CASE WHEN d.gawt_filter > 0 THEN d.awt_amount ELSE 0 END)	awt_amount				
        ,d.div_amount div_amount
        ,d.div_awt div_awt
        ,d.period
        ,d.taxpayer_id1 taxpayer_id1
      FROM   						
        (SELECT  
            c.vendor_site_id3 vendor_site_id3
           ,c.vendor_id3 vendor_id3
           ,c.gross_amount gross_amount
           ,c.awt_amount  awt_amount
           ,Sum(c.gross_amount) over (Partition By c.Vendor_Site_ID3) gamount_filter
           ,Sum(c.awt_amount) over (Partition By c.Vendor_Site_ID3)   gawt_filter	
           ,c.div_amount div_amount
           ,c.div_awt div_awt
           ,c.period
           ,c.taxpayer_id1 taxpayer_id1
        FROM   (
           Select a.* 
           From (
              SELECT distinct  
                     ac.check_id Check_ID, 
                     ac.vendor_id vendor_id3,
                     ac.vendor_site_id Vendor_Site_ID3,
                     &p_tax_payerid_cond  taxpayer_id1,
                     ac.check_number Check_Number,
                     ac.check_date Check_Date, 
                     JE_IL_WHT_TAX_PKG.get_gross_amount(ai.invoice_id,aip.check_id,:P_ACCOUNTING_START_DATE,:P_ACCOUNTING_END_DATE,aip.reversal_inv_pmt_id) gross_amount,
                     JE_IL_WHT_TAX_PKG.get_awt_amt(Ai.Invoice_Id,Aip.Check_Id,:P_ACCOUNTING_START_DATE,:P_ACCOUNTING_END_DATE,aip.reversal_inv_pmt_id) Awt_Amount,
                     JE_IL_WHT_TAX_PKG.get_div_amt(Ai.Invoice_Id,Aip.Check_Id,:P_ACCOUNTING_START_DATE,:P_ACCOUNTING_END_DATE,aip.reversal_inv_pmt_id) Div_Amount,
                     JE_IL_WHT_TAX_PKG.get_div_awt(Ai.Invoice_Id,Aip.Check_Id,:P_ACCOUNTING_START_DATE,:P_ACCOUNTING_END_DATE,aip.reversal_inv_pmt_id) Div_Awt,
                     ibyp.payment_method_name Payment_Type,
                     to_char(aip.accounting_date,'MM') period,
                     row_number( ) over (partition by aip.invoice_id,aip.check_id,aip.accounting_event_id order by aip.invoice_id,aip.check_id,aip.accounting_event_id) SLNO
              FROM
                     ap_invoices_all ai,
                     ap_checks_all ac,
                     ap_invoice_payments_all aip,
                     iby_payment_methods_vl ibyp,
                     poz_suppliers_v pvend,
                     poz_supplier_sites_v pvs,
                    (select p.person_id, n.national_identifier_number
                     from   PER_ALL_PEOPLE_F_V p, PER_NATIONAL_IDENTIFIERS_v n
                     where  p.primary_nid_id = n.national_identifier_id
                     and    n.legislation_code = :Country) papf,
                     poz_suppliers_pii pi,
                     hz_parties hp
              WHERE  ai.vendor_site_id = ac.vendor_site_id
              AND    ai.vendor_id = pvend.vendor_id
              AND    ai.vendor_site_id = pvs.vendor_site_id
              AND    pvend.vendor_id = pvs.vendor_id
              AND    pvend.vendor_id = pi.vendor_id(+)
              AND    pvend.party_id = hp.party_id
              And    Nvl(hp.user_guid, -99) = Papf.Person_Id (+)
              AND    ac.payment_method_code = ibyp.payment_method_code
              AND    ai.invoice_id = aip.invoice_id
              AND    ac.check_id = aip.check_id
              AND    aip.reversal_inv_pmt_id IS NULL
              AND    ai.legal_entity_id =  :P_Legal_Entity_ID
              AND   (JE_IL_WHT_TAX_PKG.get_gross_amount(ai.invoice_id,aip.check_id,:P_ACCOUNTING_START_DATE ,:P_ACCOUNTING_END_DATE,aip.reversal_inv_pmt_id) <> 0 OR JE_IL_WHT_TAX_PKG.get_awt_amount <> 0 ) -- Bug 12612501
              AND    EXISTS 
                      (SELECT 1 
                       FROM   ap_invoice_distributions_all aid 
		       WHERE  aid.invoice_id = ai.invoice_id
		       AND    aid.line_type_lookup_code = 'AWT'
		       AND    aid.awt_flag ='A'  
		       AND    aid.awt_invoice_payment_id IS NOT NULL 
		       AND    aid.awt_invoice_payment_id = aip.invoice_payment_id
		       AND    aid.accounting_date >= :P_ACCOUNTING_START_DATE 
	               AND    aid.accounting_date <= :P_ACCOUNTING_END_DATE
		       UNION
	               SELECT  1
		       FROM    AP_INVOICES_ALL ai1
			      ,AP_INVOICE_PAYMENTS_ALL aip1
			      ,AP_CHECKS_ALL ac1
			      ,poz_suppliers_v pvend1
			      ,poz_supplier_sites_v pvs1
			WHERE  ai1.invoice_id = ai.invoice_id
			AND    ai1.invoice_id= aip1.invoice_id
			AND    ai1.vendor_id = pvend1.vendor_id
			AND    ai1.vendor_site_id = pvs1.vendor_site_id
			AND    pvend1.vendor_id = pvs1.vendor_id
			AND    aip1.check_id = ac1.check_id
			AND    ai1.legal_entity_id = :P_Legal_Entity_ID 
			AND    ai1.set_of_books_id = &l_primary_ledger_id
			AND    aip1.set_of_books_id= &l_primary_ledger_id
			AND    ac1.global_attribute_category='JE_IL_PAYMENT_CHECKS'
			AND    NVL(ac1.global_attribute_number1,0) > 0
			AND    aip1.accounting_date >=:P_ACCOUNTING_START_DATE 
			AND    aip1.accounting_date <=:P_ACCOUNTING_END_DATE
			&l_currency_check
			&l_foreign_suppliers_check) 
			&p_vendor_type_cond
		) a   
		where a.slno=1
                UNION ALL
		Select b.* 
                From (
		   SELECT distinct  
		          ac.check_id Check_ID, 
          		  ac.vendor_id vendor_id3,
	          	  ac.vendor_site_id Vendor_Site_ID3,
		          &p_tax_payerid_cond  taxpayer_id1,
          		  ac.check_number Check_Number,
	          	  ac.void_date Check_Date, 
		          JE_IL_WHT_TAX_PKG.get_gross_amount(ai.invoice_id,aip.check_id,:P_ACCOUNTING_START_DATE,:P_ACCOUNTING_END_DATE,aip.reversal_inv_pmt_id) gross_amount,
          		  JE_IL_WHT_TAX_PKG.get_awt_amt(Ai.Invoice_Id,Aip.Check_Id,:P_ACCOUNTING_START_DATE,:P_ACCOUNTING_END_DATE,aip.reversal_inv_pmt_id) Awt_Amount,
	          	  JE_IL_WHT_TAX_PKG.get_div_amt(Ai.Invoice_Id,Aip.Check_Id,:P_ACCOUNTING_START_DATE,:P_ACCOUNTING_END_DATE,aip.reversal_inv_pmt_id) Div_Amount,
                          JE_IL_WHT_TAX_PKG.get_div_awt(Ai.Invoice_Id,Aip.Check_Id,:P_ACCOUNTING_START_DATE,:P_ACCOUNTING_END_DATE,aip.reversal_inv_pmt_id) Div_Awt,
          		  ibyp.payment_method_name Payment_Type,
	          	  to_char(aip.accounting_date,'MM') period,
		          row_number( ) over (partition by aip.invoice_id,aip.check_id,aip.accounting_event_id order by aip.invoice_id,aip.check_id,aip.accounting_event_id) SLNO
	          FROM
			ap_invoices_all ai,
			ap_checks_all ac,
			ap_invoice_payments_all aip,
			iby_payment_methods_vl ibyp,
			poz_suppliers_v pvend,
			poz_supplier_sites_v pvs,
                        (select p.person_id, n.national_identifier_number
                         from   PER_ALL_PEOPLE_F_V p, PER_NATIONAL_IDENTIFIERS_v n
                         where  p.primary_nid_id = n.national_identifier_id
                         and    n.legislation_code = :Country) papf,
                        poz_suppliers_pii pi,
                        hz_parties hp
		  WHERE ai.vendor_site_id = ac.vendor_site_id
		  AND   ai.vendor_id = pvend.vendor_id
		  AND   ai.vendor_site_id = pvs.vendor_site_id
		  AND   pvend.vendor_id = pvs.vendor_id
                  AND   pvend.vendor_id = pi.vendor_id(+)
                  AND   pvend.party_id = hp.party_id
                  And   nvl(hp.user_guid, -99) = Papf.Person_Id (+)
		  AND   ac.payment_method_code = ibyp.payment_method_code
		  AND   ai.invoice_id = aip.invoice_id
		  AND   ac.check_id = aip.check_id
		  AND   aip.reversal_inv_pmt_id IS NOT NULL
		  AND   ai.legal_entity_id =  :P_Legal_Entity_ID
		  AND   (JE_IL_WHT_TAX_PKG.get_gross_amount(ai.invoice_id,aip.check_id,:P_ACCOUNTING_START_DATE ,:P_ACCOUNTING_END_DATE,aip.reversal_inv_pmt_id) <> 0 OR JE_IL_WHT_TAX_PKG.get_awt_amount <> 0 ) -- Bug 12612501
		  AND   EXISTS 
		       (SELECT 1
                        FROM   ap_invoice_distributions_all aid 
			WHERE  aid.invoice_id = ai.invoice_id
			AND    aid.line_type_lookup_code = 'AWT'
			AND    aid.awt_flag ='A'  
			AND    aid.awt_invoice_payment_id IS NOT NULL 
			AND    aid.awt_invoice_payment_id = aip.invoice_payment_id
			AND    aid.accounting_date >= :P_ACCOUNTING_START_DATE 
			AND    aid.accounting_date <= :P_ACCOUNTING_END_DATE
			UNION
			SELECT 1
			FROM   AP_INVOICES_ALL ai1
			      ,AP_INVOICE_PAYMENTS_ALL aip1
  			      ,AP_CHECKS_ALL ac1
			      ,poz_suppliers_v pvend1
			      ,poz_supplier_sites_v pvs1
			WHERE ai1.invoice_id = ai.invoice_id
			AND   ai1.invoice_id= aip1.invoice_id
			AND   ai1.vendor_id = pvend1.vendor_id
			AND   ai1.vendor_site_id = pvs1.vendor_site_id
			AND   pvend1.vendor_id = pvs1.vendor_id
			AND   aip1.check_id = ac1.check_id
			AND   ai1.legal_entity_id = :P_Legal_Entity_ID 
			AND   ai1.set_of_books_id = &l_primary_ledger_id
			AND   aip1.set_of_books_id= &l_primary_ledger_id
			AND   ac1.global_attribute_category='JE_IL_PAYMENT_CHECKS'
			AND   NVL(ac1.global_attribute_number1,0) > 0
			AND   aip1.accounting_date >=:P_ACCOUNTING_START_DATE 
			AND   aip1.accounting_date <=:P_ACCOUNTING_END_DATE
			&l_currency_check
			&l_foreign_suppliers_check) 
               &p_vendor_type_cond
               ) b   
            where b.slno=1	) c	
            ) d
         Where (d.gawt_filter > 0 OR d.gamount_filter > 0)
         ) e		
      group by e.period,e.Vendor_ID3,e.taxpayer_id1,e.Vendor_Site_ID3
      having sum(e.gross_amount) <> 0 or sum(e.awt_amount)<> 0
      ) abc
      ,(select rownum period_num from dual connect by rownum < 13) glp
WHERE glp.period_num = to_number(abc.period(+))
and :P_REPORT_NAME = 'JEILWHTT'
group by glp.period_num
order by glp.period_num
--G_MAIN
select &p_vendor_type_col
from dual
--Q_PAYMENT
SELECT distinct  
       Check_ID, 
       Vendor_Site_ID3,
       Check_Number,
	   MAX(supplier_registration) supplier_registration,
       MIN(TO_CHAR(check_date,'DD-MON-YYYY')) Check_Date, 
       sum(gross_amount) gross_amount,
       sum(Awt_Amount) Awt_Amount,
       sum(awt_tax_amt) awt_tax_amt,
       sum(awt_bank_amt) awt_bank_amt,
       Payment_Type,
       First_Payment 
FROM   (SELECT distinct  
	       ac.check_id Check_ID, 
	       ac.vendor_site_id Vendor_Site_ID3,
	       ac.check_number Check_Number,
               ac.check_date Check_Date,
			   JE_IL_WHT_TAX_PKG.get_supplier_registration(ai.invoice_id,:p_information_level) supplier_registration,			   
               JE_IL_WHT_TAX_PKG.get_gross_amount(ai.invoice_id,aip.check_id, :P_ACCOUNTING_START_DATE,:P_ACCOUNTING_END_DATE, aip.reversal_inv_pmt_id) gross_amount,
               JE_IL_WHT_TAX_PKG.get_awt_amount Awt_Amount,
               JE_IL_WHT_TAX_PKG.get_awt_amt(Ai.Invoice_Id,Aip.Check_Id, :P_ACCOUNTING_START_DATE, :P_ACCOUNTING_END_DATE, aip.reversal_inv_pmt_id) awt_tax_amt,	
               JE_IL_WHT_TAX_PKG.get_awt_bank_amt(aip.Check_Id) awt_bank_amt,
               ibyp.payment_method_name Payment_Type,
	       row_number( ) over (partition by aip.invoice_id,aip.check_id,aip.accounting_event_id order by aip.invoice_id,aip.check_id,aip.accounting_event_id) First_Payment 
        FROM
               ap_invoices_all ai,
               ap_checks_all ac,
               ap_invoice_payments_all aip,
               iby_payment_methods_vl ibyp
        WHERE  ai.vendor_site_id = :Vendor_Site_ID2
        AND   ai.vendor_site_id = ac.vendor_site_id
        AND   ac.payment_method_code = ibyp.payment_method_code
        AND   ai.invoice_id = aip.invoice_id
        AND   ac.check_id = aip.check_id
        AND   aip.reversal_inv_pmt_id IS NULL
        AND   ai.legal_entity_id = :P_Legal_Entity_ID
	AND   aip.posted_flag = 'Y' --Bug 32261025
        AND   (JE_IL_WHT_TAX_PKG.get_gross_amount(ai.invoice_id,aip.check_id,:P_ACCOUNTING_START_DATE, :P_ACCOUNTING_END_DATE, aip.reversal_inv_pmt_id) <> 0 OR JE_IL_WHT_TAX_PKG.get_awt_amount <> 0) --bug 12612501
        AND   EXISTS (SELECT 1 
                      FROM   ap_invoice_distributions_all aid 
                      WHERE  aid.invoice_id = ai.invoice_id
                      AND    aid.line_type_lookup_code = 'AWT'
                      AND    aid.awt_flag ='A'  
  	              --Bug 32261025 AND    aid.awt_invoice_payment_id IS NOT NULL 
  	              --Bug 32261025 AND    aid.awt_invoice_payment_id = aip.invoice_payment_id
    	              AND    aid.accounting_date >= :P_ACCOUNTING_START_DATE 
 	              AND    aid.accounting_date <= :P_ACCOUNTING_END_DATE
	              UNION
	              SELECT 1
	              FROM   ap_invoices_all ai1,
                             ap_checks_all ac1,
                             ap_invoice_payments_all aip1,
                             poz_suppliers_v pvend1,
                             poz_supplier_sites_all_m pvs1
                      WHERE  ai1.invoice_id = ai.invoice_id
                      AND ai1.invoice_id= aip1.invoice_id
                      AND   ai1.vendor_id = pvend1.vendor_id
                      AND   ai1.vendor_site_id = pvs1.vendor_site_id
                      AND   pvend1.vendor_id = pvs1.vendor_id
                      AND   aip1.check_id = ac1.check_id
                      AND   ai1.legal_entity_id = :P_Legal_Entity_ID 
                      AND   ai1.set_of_books_id = &l_primary_ledger_id
                      AND   aip1.set_of_books_id= &l_primary_ledger_id
                      AND   ac1.global_attribute_category='JE_IL_PAYMENT_CHECKS'
                      AND   NVL(ac1.global_attribute_number1,0) > 0
                      AND aip1.accounting_date >=:P_ACCOUNTING_START_DATE 
                      AND aip1.accounting_date <=:P_ACCOUNTING_END_DATE
                      -- AND :P_REPORT_NAME = 'JEILWHTT'
                      &l_currency_check
                      &l_foreign_suppliers_check)
         )
WHERE First_Payment = 1
GROUP BY  check_id,Vendor_Site_ID3,check_number,Payment_Type,First_Payment 
UNION ALL  
SELECT distinct  
       Check_ID, 
       Vendor_Site_ID3,
       Check_Number,
	   MAX(supplier_registration) supplier_registration,
       MIN(TO_CHAR(check_date,'DD-MON-YYYY')) Check_Date, 
       sum(gross_amount) gross_amount,
       sum(Awt_Amount) Awt_Amount,
       sum(awt_tax_amt) awt_tax_amt,
       sum(awt_bank_amt) awt_bank_amt,
       Payment_Type,
       First_Payment 
FROM   (SELECT distinct  
	       ac.check_id Check_ID, 
	       ac.vendor_site_id Vendor_Site_ID3,
	       ac.check_number Check_Number,		
	       ac.void_date Check_Date,
		   JE_IL_WHT_TAX_PKG.get_supplier_registration(ai.invoice_id,:p_information_level) supplier_registration,
               JE_IL_WHT_TAX_PKG.get_gross_amount(ai.invoice_id,aip.check_id, :P_ACCOUNTING_START_DATE,:P_ACCOUNTING_END_DATE, aip.reversal_inv_pmt_id) gross_amount,
               JE_IL_WHT_TAX_PKG.get_awt_amount Awt_Amount,
               JE_IL_WHT_TAX_PKG.get_awt_amt(Ai.Invoice_Id,Aip.Check_Id, :P_ACCOUNTING_START_DATE, :P_ACCOUNTING_END_DATE, aip.reversal_inv_pmt_id) awt_tax_amt,	
               JE_IL_WHT_TAX_PKG.get_awt_bank_amt(aip.Check_Id) awt_bank_amt,
               ibyp.payment_method_name Payment_Type,
	       row_number( ) over (partition by aip.invoice_id,aip.check_id,aip.accounting_event_id order by aip.invoice_id,aip.check_id,aip.accounting_event_id) First_Payment 
        FROM
               ap_invoices_all ai,
               ap_checks_all ac,
               ap_invoice_payments_all aip,
               iby_payment_methods_vl ibyp   
        WHERE  ai.vendor_site_id = :Vendor_Site_ID2
        AND   ai.vendor_site_id = ac.vendor_site_id
        AND   ac.payment_method_code = ibyp.payment_method_code
        AND   ai.invoice_id = aip.invoice_id
        AND   ac.check_id = aip.check_id
        AND   aip.reversal_inv_pmt_id IS NOT NULL
        AND   ai.legal_entity_id = :P_Legal_Entity_ID
        AND   aip.posted_flag = 'Y' --Bug 32261025
        AND   (JE_IL_WHT_TAX_PKG.get_gross_amount(ai.invoice_id,aip.check_id,:P_ACCOUNTING_START_DATE, :P_ACCOUNTING_END_DATE, aip.reversal_inv_pmt_id) <> 0 OR JE_IL_WHT_TAX_PKG.get_awt_amount <> 0) --bug 12612501
        AND   EXISTS (SELECT 1 
                      FROM   ap_invoice_distributions_all aid 
                      WHERE  aid.invoice_id = ai.invoice_id
                      AND    aid.line_type_lookup_code = 'AWT'
                      AND    aid.awt_flag ='A'  
  	              --Bug 32261025 AND    aid.awt_invoice_payment_id IS NOT NULL 
  	              --Bug 32261025 AND    aid.awt_invoice_payment_id = aip.invoice_payment_id
    	              AND    aid.accounting_date >= :P_ACCOUNTING_START_DATE 
 	              AND    aid.accounting_date <= :P_ACCOUNTING_END_DATE
	              UNION
	              SELECT 1
	              FROM   ap_invoices_all ai1,
                             ap_checks_all ac1,
                             ap_invoice_payments_all aip1,
                             poz_suppliers_v pvend1,
                             poz_supplier_sites_all_m pvs1
                      WHERE  ai1.invoice_id = ai.invoice_id
                      AND    ai1.invoice_id= aip1.invoice_id
                      AND    ai1.vendor_id = pvend1.vendor_id
                      AND    ai1.vendor_site_id = pvs1.vendor_site_id
                      AND    pvend1.vendor_id = pvs1.vendor_id
                      AND    aip1.check_id = ac1.check_id
                      AND    ai1.legal_entity_id = :P_Legal_Entity_ID 
                      AND    ai1.set_of_books_id = &l_primary_ledger_id
                      AND    aip1.set_of_books_id= &l_primary_ledger_id
                      AND    ac1.global_attribute_category='JE_IL_PAYMENT_CHECKS'
                      AND    NVL(ac1.global_attribute_number1,0) > 0
                      AND    aip1.accounting_date >=:P_ACCOUNTING_START_DATE 
                      AND    aip1.accounting_date <=:P_ACCOUNTING_END_DATE
                      -- AND :P_REPORT_NAME = 'JEILWHTT'
                      &l_currency_check
                      &l_foreign_suppliers_check)
          )
WHERE     First_Payment = 1
GROUP BY  check_id,Vendor_Site_ID3,check_number,Payment_Type,First_Payment 
ORDER BY  Check_Number,Payment_Type
--Q_VENDOR_SITE
SELECT  DISTINCT  
             pvs.vendor_id Vendor_ID2,
             pvend.segment1 Vendor_Num1,
             &p_vendor_name_col
             &p_vendor_sitecode_col
             pvs.vendor_site_id Vendor_Site_ID2 ,
			-- &p_vat_reg_no
             &p_exp_irs_cond ,
             &p_supplier_type,           
             &p_tax_payerid_cond Taxpayer_Id ,
             trim(pvs.address_line1||' '||pvs.address_line2||' '||pvs.address_line3) Vendor_Address, 
            &p_business_sec_cond
            (SELECT lk.meaning FROM fnd_lookups lk
             WHERE lk.lookup_code = &p_flex_value_cond
             AND     lk.lookup_type = 'ORA_JEIL_TAX_OFFICER') IRS_Tax_Officer,
            SUBSTR(&p_deduction_type_cond,1,2) Deduction_Type,
            pvs.party_site_id PARTY_SITE_ID,
            pvend.party_id PARTY_ID,
            :P_Include_WHT_0 Include_WHT,	     
            &p_bank_supplier,
            pvs.city City					 
FROM    poz_suppliers_v pvend,
             poz_supplier_sites_v pvs,
             poz_suppliers_pii pi,
             hz_parties hp,
             (select p.person_id, n.national_identifier_number ,n.legislation_code
              from PER_ALL_PEOPLE_F_V p, PER_NATIONAL_IDENTIFIERS_v n
              where p.primary_nid_id = n.national_identifier_id
              and n.legislation_code = :Country) papf
WHERE pvend.vendor_id = pvs.vendor_id
AND      pvend.vendor_id IN  :VENDOR_ID1
AND      pvs.vendor_site_id IN :VENDOR_SITE_ID1
AND      pvend.vendor_id = pi.vendor_id (+)
AND      pvend.party_id = hp.party_id 
AND      nvl(hp.user_guid,-99)  = papf.person_id (+) 
&p_vendor_type_cond 
&p_supplier_num_from  
&p_supplier_num_to 		
&p_vendor_name_cond
&p_vendor_site_cond
ORDER BY pvs.vendor_id,  pvs.vendor_site_id
--Q_VENDOR
SELECT  distinct pvend.vendor_id Vendor_ID1,
             pvs.vendor_site_id vendor_site_id1,
             &p_order_by_cond,
             pvend.segment1 Vendor_Num
FROM    poz_suppliers pvend,
              poz_supplier_sites_all_m pvs,
              poz_suppliers_pii pi,
              hz_parties hp,
             (select p.person_id, n.national_identifier_number ,n.legislation_code
              from PER_ALL_PEOPLE_F_V p, PER_NATIONAL_IDENTIFIERS_v n
              where p.primary_nid_id = n.national_identifier_id
              and n.legislation_code = :COUNTRY) papf
WHERE  pvend.vendor_id = pvs.vendor_id
AND      pvend.vendor_id = pi.vendor_id (+)
AND      pvend.party_id = hp.party_id 
AND      nvl(hp.user_guid,-99)  = papf.person_id (+) 
AND       pvs.vendor_site_id IN 
               (SELECT   ai.vendor_site_id 		
                FROM     ap_invoices_all ai
                            ,ap_invoice_distributions_all aid
                WHERE  ai.invoice_id = aid.invoice_id
                AND      ai.set_of_books_id =  &l_primary_ledger_id
                AND      aid.set_of_books_id = &l_primary_ledger_id
                AND      ai.legal_entity_id = :P_Legal_Entity_ID 
                AND      aid.line_type_lookup_code = 'AWT' 
                AND      aid.awt_flag ='A'  
                AND      aid.awt_invoice_payment_id IS NOT NULL
                AND      aid.accounting_date >=:P_ACCOUNTING_START_DATE
                AND      aid.accounting_date <=:P_ACCOUNTING_END_DATE
                UNION
                SELECT ac1.vendor_site_id
                  FROM  AP_INVOICE_PAYMENTS_ALL aip1
                           ,AP_CHECKS_ALL ac1
                           ,poz_suppliers pvend1
                           ,poz_supplier_sites_all_m pvs1
                WHERE   ac1.vendor_id = pvend1.vendor_id
                     AND   ac1.vendor_site_id = pvs1.vendor_site_id
                     AND   pvend1.vendor_id = pvs1.vendor_id
                     AND   aip1.check_id = ac1.check_id
                     AND   ac1.legal_entity_id = :P_Legal_Entity_ID
                     AND   aip1.set_of_books_id= &l_primary_ledger_id
                     AND   ac1.global_attribute_category= 'JE_IL_PAYMENT_CHECKS'
		     AND   NVL(ac1.global_attribute_number1,0) > 0
                     AND   aip1.accounting_date >=:P_ACCOUNTING_START_DATE
                     AND   aip1.accounting_date <=:P_ACCOUNTING_END_DATE
                     &l_currency_check						  
                     &l_foreign_suppliers_check
                     )
&p_vendor_type_cond
&p_vendor_name_cond
&p_vendor_site_cond
&p_supplier_num_from	
&p_supplier_num_to
ORDER BY 3,1,2
--Q_FIRST_PARTY
SELECT  JE_IL_WHT_TAX_PKG.IS_NUMBER(max(decode(person_last_name, 'TN', person_first_name)),'DFN') Deduction_File_Number,
        JE_IL_WHT_TAX_PKG.IS_NUMBER(max(decode(person_last_name, 'TM', person_first_name)),'CTPID') Tax_Payer_ID,
        max(decode(q1.le_role ,'Legal contact',email_address,null)) Electronic_Mail,
        '96' Type_Code,
        :P_Manual_Rpt_Exist P_Manual,
        :P_Comp_Rpt_Exist P_Complementary_Rpt,
        :P_Payer_Position P_Payer_Pos,
        max(decode(person_last_name, 'TN',substr(hp.primary_phone_area_code|| hp.primary_phone_number,1,10))) Phone_No
FROM hz_parties hp,
         (SELECT subject_id ,XLE_CONTACT_GRP.concat_contact_roles (subject_id,object_id) le_role
          FROM hz_relationships
          WHERE object_id = (
                    SELECT party_id
                    FROM xle_firstparty_information_v
                    WHERE legal_entity_id = :P_Legal_Entity_ID
                    )
    AND relationship_code = 'CONTACT_OF'
    AND directional_flag = 'F') q1
WHERE hp.party_id = q1.subject_id
--Q_VENDOR_SITE_NAME
SELECT pvs.vendor_site_code  Vendor_Site_P
FROM poz_supplier_sites_all_m pvs
WHERE pvs.vendor_site_id = :P_Vendor_Site
--Q_VENDOR_NAME
SELECT pvend.vendor_name  Vendor_Name_P
FROM poz_suppliers_v pvend 
WHERE pvend.vendor_id = :P_Vendor_Name
--Q_LOOKUP
SELECT 
min(decode(lookup_type, 'ORA_JEIL_VENDOR_TYPE', decode(lookup_code, :P_Vendor_Type, meaning, NULL)))  Vendor_Type,
min(decode(lookup_type, 'ORA_JEIL_RPT_METHODS', decode(lookup_code, :P_Method, meaning, 	NULL))) Report_Method,
min(decode(lookup_type, 'ORA_JEIL_ORDER_BY', decode(lookup_code, :P_Order_By, meaning, NULL))) Order_By,
 min(decode(lookup_type, 'ORA_JEIL_LEVEL', decode(lookup_code, :P_Information_Level, meaning, NULL))) Information_Level,
min(decode(lookup_type, 'ORA_JEIL_NAME_LEVEL', decode(lookup_code, :P_Name_Level, meaning, NULL))) Name_Level 
FROM fnd_lookups 
WHERE lookup_type IN ('ORA_JEIL_VENDOR_TYPE',
                       'ORA_JEIL_RPT_METHODS', 
                       'ORA_JEIL_ORDER_BY', 
                       'ORA_JEIL_LEVEL', 
                       'ORA_JEIL_NAME_LEVEL')
--Q_LE
SELECT legal_entity_id, 
             name Legal_Entity,
             Country, 
             address_line_1||'  '||address_line_2||'  '||address_line_3||'  '||town_or_city||'  '||postal_code payer_address
FROM   xle_firstparty_information_v
WHERE legal_entity_id = :P_Legal_Entity_ID
--G_LEDGER
SELECT name Ledger_Name, currency_code Currency_Code, :g_wtrl_enabled optin
FROM   gl_ledgers
WHERE ledger_id = :P_Ledger_ID
=========================================================================================================================
----------------------------------------------------IsraelShaamSupplierFileDm------------------------------------------------------------------------------
--G_LOOKUP
SELECT meaning AS YES_NO
  FROM fnd_lookups fl
 WHERE lookup_type = 'YES_NO' 
   AND lookup_code = :P_ALTERNATE_NAME
--G_TYPE_D
select  'D' AS RECORD_TYPE,
					        'S' AS VENDOR_TYPE,
        substr(lpad(ptp.party_tax_profile_id, 15, 0),1,3)||substr(lpad(ptp.party_tax_profile_id, 15, 0),6,15) AS SUPPLIER_NUMBER,
        NVL(papf.national_identifier_number, NVL(pi.income_tax_id, hp.jgzz_fiscal_code))  TAXPAYER_ID,
        decode(:P_ALTERNATE_NAME, 'Y', nvl(p.vendor_name_alt, p.vendor_name) 
                                , p.vendor_name) AS SUPPLIER_NAME,
        p.segment1,
        NVL((select vreg.registration_number 
         from   zx_registrations vreg,
                zx_regimes_b vr
         where  vreg.tax_regime_code = vr.tax_regime_code
         and    sysdate between vreg.effective_from and nvl(vreg.effective_to, sysdate+1)
         and    vreg.party_tax_profile_id = ptp.party_tax_profile_id
         and    vreg.tax_regime_code =  :P_VAT_REGIME
         and    rownum = 1),ptp.rep_registration_number) AS VAT_REG_NUM,
         null SUPPLIER_SITE_NAME
  from   poz_suppliers_v p,
	     poz_suppliers_pii pi,
         zx_party_tax_profile ptp ,
		 hz_parties hp,
		 (select p.person_id, n.national_identifier_number, n.legislation_code
                 from PER_ALL_PEOPLE_F_V p,
                      PER_NATIONAL_IDENTIFIERS_v n
                where p.primary_nid_id = n.national_identifier_id) papf,
         (select party_tax_profile_id, min(creation_date) first_wht_reg_date from zx_registrations 
           where tax_regime_code = :P_WHT_TAX_REGIME 
             AND TRUNC(effective_from) <> TRUNC(NVL(effective_to,SYSDATE+360))
        group by party_tax_profile_id) reg
  where  p.vendor_id = pi.vendor_id(+)
    and  p.party_id  = ptp.party_id
	and  ptp.party_type_code = 'THIRD_PARTY'
    and  p.end_date_active is not null
    and  p.end_date_active >  to_date(:P_FROM_DATE,'YYYY-MM-DD')
	and  p.party_id  = hp.party_id
	and  nvl(hp.user_guid, -99) = papf.person_id (+)	
    and  ptp.party_tax_profile_id = reg.party_tax_profile_id
    and  reg.first_wht_reg_date <  to_date(:P_FROM_DATE,'YYYY-MM-DD')
    and  exists (select  1 
                   from  poz_supplier_sites_all_m     poss,
                         poz_site_assignments_all_m   psa,
                         fun_all_business_units_v     fbu,
                         hz_locations loc 
                  WHERE  p.vendor_id = poss.vendor_id
                    AND  poss.prc_bu_id = fbu.bu_id
                    AND  psa.vendor_site_id = poss.vendor_site_id
                    AND  psa.bu_id = fbu.bu_id
                    AND  fbu.legal_entity_id = :p_legalentity_id
                    AND  poss.location_id = loc.location_id
                    AND  loc.country ='IL'
                    )
      AND :g_report_level in ('ORA_JE_SUPPLIER','JE_SUPPLIER')
      UNION
      select  'D' AS RECORD_TYPE,
	  		  'SS' AS VENDOR_TYPE,
        substr(lpad(ptp.party_tax_profile_id, 15, 0),1,3)||substr(lpad(ptp.party_tax_profile_id, 15, 0),6,15) AS SUPPLIER_NUMBER,
        NVL(papf.national_identifier_number, NVL(pi.income_tax_id, hp.jgzz_fiscal_code)) TAXPAYER_ID,
        decode(:P_ALTERNATE_NAME, 'Y', nvl(p.vendor_name_alt, p.vendor_name) 
                                , p.vendor_name) AS SUPPLIER_NAME,
		p.segment1,
        NVL((select vreg.registration_number 
         from   zx_registrations vreg,
                zx_regimes_b vr
         where  vreg.tax_regime_code = vr.tax_regime_code
         and    sysdate between vreg.effective_from and nvl(vreg.effective_to, sysdate+1)
         and    vreg.party_tax_profile_id = ptp.party_tax_profile_id
         and    vreg.tax_regime_code =  :P_VAT_REGIME
         and    rownum = 1),ptp.rep_registration_number) AS VAT_REG_NUM,
         decode(:P_ALTERNATE_NAME, 'Y', nvl(poss.vendor_site_code_alt, poss.vendor_site_code) 
                                , poss.vendor_site_code) AS SUPPLIER_SITE_NAME 
  from   poz_suppliers_v p,
	     poz_suppliers_pii pi,
         poz_supplier_sites_all_m     poss,
         poz_site_assignments_all_m   psa,
         fun_all_business_units_v     fbu,
         hz_locations loc, 
         zx_party_tax_profile ptp ,
		 hz_parties hp,
		 (select p.person_id, n.national_identifier_number, n.legislation_code
                 from PER_ALL_PEOPLE_F_V p,
                      PER_NATIONAL_IDENTIFIERS_v n
                where p.primary_nid_id = n.national_identifier_id) papf,
         (select party_tax_profile_id, min(creation_date) first_wht_reg_date from zx_registrations 
           where tax_regime_code = :P_WHT_TAX_REGIME 
             AND TRUNC(effective_from) <> TRUNC(NVL(effective_to,SYSDATE+360))
        group by party_tax_profile_id) reg
  where  p.vendor_id = pi.vendor_id(+)
    and  p.vendor_id = poss.vendor_id
    AND  poss.prc_bu_id = fbu.bu_id
    AND  psa.vendor_site_id = poss.vendor_site_id
    AND  psa.bu_id = fbu.bu_id
    AND  fbu.legal_entity_id = :p_legalentity_id
    AND  poss.location_id = loc.location_id
    AND  loc.country ='IL'
	and  p.party_id  = hp.party_id
	and  nvl(hp.user_guid, -99) = papf.person_id (+)	
	and  ptp.party_type_code = 'THIRD_PARTY_SITE'	
    and  poss.party_site_id  = ptp.party_id
    and  ptp.party_tax_profile_id = reg.party_tax_profile_id
    and  poss.inactive_date is not null
    and  poss.inactive_date >  to_date(:P_FROM_DATE,'YYYY-MM-DD')
    and  reg.first_wht_reg_date <  to_date(:P_FROM_DATE,'YYYY-MM-DD')
   AND  :g_report_level in ('ORA_JE_SUPPLIER_SITE','JE_SUPPLIER_SITE')
--G_TYPE_B
select  'B' AS RECORD_TYPE,
		          'S' AS VENDOR_TYPE,
        substr(lpad(ptp.party_tax_profile_id, 15, 0),1,3)||substr(lpad(ptp.party_tax_profile_id, 15, 0),6,15) AS SUPPLIER_NUMBER,
        NVL(papf.national_identifier_number, NVL(pi.income_tax_id, hp.jgzz_fiscal_code))  TAXPAYER_ID,
        decode(:P_ALTERNATE_NAME, 'Y', nvl(p.vendor_name_alt, p.vendor_name) 
                                , p.vendor_name) AS SUPPLIER_NAME,
        p.segment1,
        NVL((select vreg.registration_number 
         from   zx_registrations vreg,
                zx_regimes_b vr
         where  vreg.tax_regime_code = vr.tax_regime_code
         and    sysdate between vreg.effective_from and nvl(vreg.effective_to, sysdate+1)
         and    vreg.party_tax_profile_id = ptp.party_tax_profile_id
         and    vreg.tax_regime_code =  :P_VAT_REGIME
         and    rownum = 1),ptp.rep_registration_number) AS VAT_REG_NUM,
         null SUPPLIER_SITE_NAME
  from   poz_suppliers_v p,
	     poz_suppliers_pii pi,
         zx_party_tax_profile ptp ,
		 (select p.person_id, n.national_identifier_number, n.legislation_code
                 from PER_ALL_PEOPLE_F_V p,
                      PER_NATIONAL_IDENTIFIERS_v n
                where p.primary_nid_id = n.national_identifier_id) papf,
	     hz_parties hp,			
         (select party_tax_profile_id, min(creation_date) first_wht_reg_date from zx_registrations 
           where tax_regime_code = :P_WHT_TAX_REGIME 
             AND TRUNC(effective_from) <> TRUNC(NVL(effective_to,SYSDATE+360))
        group by party_tax_profile_id) reg
  where NVL(p.end_date_active,sysdate+1) > sysdate   -- pick only active suppliers. 
    and p.vendor_id = pi.vendor_id(+)
    and  p.party_id  = ptp.party_id
	and  ptp.party_type_code = 'THIRD_PARTY'
    and  ptp.party_tax_profile_id = reg.party_tax_profile_id
	and  p.party_id  = hp.party_id
	and  nvl(hp.user_guid, -99) = papf.person_id (+)
    and  reg.first_wht_reg_date > to_date(:P_FROM_DATE,'YYYY-MM-DD')
    and  exists (select  1 
                   from  poz_supplier_sites_all_m     poss,
                         poz_site_assignments_all_m   psa,
                         fun_all_business_units_v     fbu,
                         hz_locations loc 
                  WHERE  p.vendor_id = poss.vendor_id
                    AND  poss.prc_bu_id = fbu.bu_id
                    AND  psa.vendor_site_id = poss.vendor_site_id
                    AND  psa.bu_id = fbu.bu_id
                    AND  fbu.legal_entity_id = :p_legalentity_id
                    AND  poss.location_id = loc.location_id
                    AND  loc.country ='IL'
                    )
       AND :g_report_level in ('ORA_JE_SUPPLIER','JE_SUPPLIER')
    UNION
    select  'B' AS RECORD_TYPE,
        'SS' AS VENDOR_TYPE,
        substr(lpad(ptp.party_tax_profile_id, 15, 0),1,3)||substr(lpad(ptp.party_tax_profile_id, 15, 0),6,15) AS SUPPLIER_NUMBER,
        NVL(papf.national_identifier_number, NVL(pi.income_tax_id, hp.jgzz_fiscal_code)) TAXPAYER_ID,
        decode(:P_ALTERNATE_NAME, 'Y', nvl(p.vendor_name_alt, p.vendor_name) 
                                , p.vendor_name) AS SUPPLIER_NAME,
		p.segment1,
        NVL((select vreg.registration_number 
         from   zx_registrations vreg,
                zx_regimes_b vr
         where  vreg.tax_regime_code = vr.tax_regime_code
         and    sysdate between vreg.effective_from and nvl(vreg.effective_to, sysdate+1)
         and    vreg.party_tax_profile_id = ptp.party_tax_profile_id
         and    vreg.tax_regime_code =  :P_VAT_REGIME
         and    rownum = 1),ptp.rep_registration_number) AS VAT_REG_NUM,
         decode(:P_ALTERNATE_NAME, 'Y', nvl(poss.vendor_site_code_alt, poss.vendor_site_code) 
                                , poss.vendor_site_code) AS SUPPLIER_SITE_NAME 
  from   poz_suppliers_v p,
	     poz_suppliers_pii pi,
		 hz_parties hp,
         poz_supplier_sites_all_m     poss,
         poz_site_assignments_all_m   psa,
         fun_all_business_units_v     fbu,
         hz_locations loc, 
         zx_party_tax_profile ptp ,
		 (select p.person_id, n.national_identifier_number, n.legislation_code
                 from PER_ALL_PEOPLE_F_V p,
                      PER_NATIONAL_IDENTIFIERS_v n
                where p.primary_nid_id = n.national_identifier_id) papf,
         (select party_tax_profile_id, min(creation_date) first_wht_reg_date from zx_registrations 
           where tax_regime_code = :P_WHT_TAX_REGIME 
             AND TRUNC(effective_from) <> TRUNC(NVL(effective_to,SYSDATE+360))
        group by party_tax_profile_id) reg
  where  p.vendor_id = pi.vendor_id(+)
    and  p.vendor_id = poss.vendor_id
    AND  NVL(poss.inactive_date,sysdate+1) > sysdate   --pick only active supplier sites
    AND  poss.prc_bu_id = fbu.bu_id
    AND  psa.vendor_site_id = poss.vendor_site_id
    AND  psa.bu_id = fbu.bu_id
    AND  fbu.legal_entity_id = :p_legalentity_id
    AND  poss.location_id = loc.location_id
    AND  loc.country ='IL'
	and  p.party_id  = hp.party_id
	and  nvl(hp.user_guid, -99) = papf.person_id (+)	
	and  ptp.party_type_code = 'THIRD_PARTY_SITE'
    and  poss.party_site_id  = ptp.party_id
    and  ptp.party_tax_profile_id = reg.party_tax_profile_id
    and  reg.first_wht_reg_date >  to_date(:P_FROM_DATE,'YYYY-MM-DD')
  AND  :g_report_level in ('ORA_JE_SUPPLIER_SITE','JE_SUPPLIER_SITE')
--G_TYPE_A
SELECT 'A' AS RECORD_TYPE,
                            le.name LE_NAME,
                            reg.registration_number LE_TRN,
                            to_char(sysdate, 'YYYYMMDD') AS CREATION_DATE
                       FROM xle_entity_profiles le,
                            xle_registrations reg
                      WHERE le.legal_entity_id = :P_LEGALENTITY_ID
                        AND reg.source_id = le.legal_entity_id
                        AND reg.source_table = 'XLE_ENTITY_PROFILES'
                        AND reg.identifying_flag = 'Y'
                        AND SYSDATE BETWEEN NVL (reg.effective_from, SYSDATE) AND NVL (reg.effective_to, SYSDATE)
==========================================================================================================================
------------------------------------------------Italian Withholding Tax Letters Data Model-----------------------------------------------------------------
--G_SUPPLIER_SITE_QUERY
SELECT
    dtl.billing_tp_address_id wht_supplier_site_id,
    dtl.tax_rate_code_description wht_description,
    dtl.tax wht_taxname,
    dtl.trx_id inv_invid,
    dtl.trx_number inv_invnum,
    ROUND(SUM(nvl(jx.numeric1,0) ),je_it_wht_let.cp_precision_p)  inv_amt,
    ROUND(-1 * SUM(nvl(jx.numeric5,0) ),je_it_wht_let.cp_precision_p) wht_amt,
    ROUND(-1 * SUM(nvl(jx.numeric5,0) ),je_it_wht_let.cp_precision_p) cf_wht_total
FROM
    zx_rep_context_t con,
    zx_rep_trx_detail_t dtl,
    zx_rep_trx_jx_ext_t jx
WHERE
    con.rep_context_id = dtl.rep_context_id
    AND con.request_id = dtl.request_id
    AND dtl.request_id =:fusionapps_request_id
    AND dtl.detail_tax_line_id = jx.detail_tax_line_id (+)
    AND jx.attribute3 = 'N'
    AND dtl.billing_tp_address_id =:new_site_id
    AND je_it_wht_let.cp_optin_flag_p = 'Y'
GROUP BY
    dtl.billing_tp_address_id,
    dtl.tax_rate_code_description,
    dtl.tax,
    dtl.trx_id,
    dtl.trx_number
--G_SUPPLIER_QUERY
SELECT
    wht_v.supplier_name supplier_name,
    wht_v.taxpayer_id taxpayer_id,
    wht_v.supplier_number supplier_number,
    wht_v.site_code site_code,
    wht_v.new_site_id new_site_id,
    wht_v.vat_registration_number vat_registration_number,
    wht_v.supplier_addr1 supplier_addr1,
    wht_v.supplier_addr2 supplier_addr2,
    wht_v.supplier_addr3 supplier_addr3,
    wht_v.supplier_address supplier_address,
    wht_v.supplier_city supplier_city,
    wht_v.supplier_zip supplier_zip,
    wht_v.supplier_province supplier_province,
    wht_v.supplier_country supplier_country,
    wht_v.date_of_birth date_of_birth,
    wht_v.place_of_birth place_of_birth,
    wht_v.invoice_number invoice_number,
    wht_v.invoice_id invoice_id,
    round(SUM(wht_v.cf_wht_amount),je_it_wht_let.cp_precision_p) cf_wh_amount,
    round(SUM(nvl(ss_v.cf_wht_amount,0) ),je_it_wht_let.cp_precision_p) cf_ss_amount,
    round(SUM(wht_v.cf_gc_amount + nvl(ss_v.cf_gc_amount,0) ),je_it_wht_let.cp_precision_p) cf_gc_amount,
    round(SUM(wht_v.cf_ex_amount + nvl(ss_v.cf_ex_amount,0) ),je_it_wht_let.cp_precision_p) cf_ex_amount,
    round(SUM(wht_v.cf_taxable_amount + nvl(ss_v.cf_taxable_amount,0) ),je_it_wht_let.cp_precision_p) cf_taxable_amount,
    round(SUM(wht_v.cf_nt_amount + nvl(ss_v.cf_nt_amount,0) ),je_it_wht_let.cp_precision_p) cf_nt_amount,
    wht_v.wht_tax_rate wht_tax_rate,
    ss_v.wht_tax_rate wht_tax_rate2
FROM
    (
        SELECT
            substr(dtl.billing_tp_name,1,80) supplier_name,
            nvl(jx.attribute1,dtl.billing_tp_taxpayer_id) taxpayer_id,
            dtl.billing_tp_number supplier_number,
            dtl.billing_tp_site_name site_code,
            dtl.billing_tp_address_id new_site_id,
            nvl(dtl.billing_tp_site_tax_reg_num,dtl.billing_tp_tax_reg_num) vat_registration_number,
            substr(dtl.billing_tp_address1,1,35) supplier_addr1,
            substr(dtl.billing_tp_address2,1,35) supplier_addr2,
            substr(dtl.billing_tp_address3,1,35) supplier_addr3,
            dtl.billing_tp_address1
            || DECODE(dtl.billing_tp_address2,NULL,NULL,', ' || dtl.billing_tp_address2)
            || DECODE(dtl.billing_tp_address3,NULL,NULL,', ' || dtl.billing_tp_address3) supplier_address,
            dtl.billing_tp_city supplier_city,
            dtl.billing_tp_postal_code supplier_zip,
            dtl.billing_tp_province supplier_province,
            dtl.billing_tp_country supplier_country,
            jx.attribute_date1 date_of_birth,
            jx.attribute4 place_of_birth,
            dtl.trx_number invoice_number,
            dtl.trx_id invoice_id,
            nvl(-1 * jx.numeric5,0) cf_wht_amount,
            nvl(jx.numeric2,0) + nvl(-1 * jx.numeric5,0) cf_gc_amount,
            nvl(jx.numeric4,0) cf_ex_amount,
            nvl(jx.numeric3,0) cf_taxable_amount,
            nvl(jx.numeric2,0) cf_nt_amount,
            dtl.tax_rate wht_tax_rate,
            dtl.trx_line_id,
            nvl(dtl.tax_line_user_attribute3,'NULL') tax_line_user_attribute3,
            nvl(dtl.tax_line_user_attribute2,'NULL') tax_line_user_attribute2,
			nvl(dtl.tax_line_user_attribute4,'NULL') tax_line_user_attribute4
        FROM
            zx_rep_trx_detail_t dtl,
            zx_rep_trx_jx_ext_t jx
        WHERE 
			dtl.request_id =:fusionapps_request_id
            AND dtl.detail_tax_line_id = jx.detail_tax_line_id
            AND jx.attribute3 = 'N'
    ) wht_v,
    (
        SELECT
            dtl.trx_id invoice_id,
            nvl(-1 * jx.numeric5,0) cf_wht_amount,
            nvl(jx.numeric2,0) + nvl(-1 * jx.numeric5,0) cf_gc_amount,
            nvl(jx.numeric4,0) cf_ex_amount,
            nvl(jx.numeric3,0) cf_taxable_amount,
            nvl(jx.numeric2,0) cf_nt_amount,
            dtl.tax_rate wht_tax_rate,
            dtl.trx_line_id,
            nvl(dtl.tax_line_user_attribute3,'NULL') tax_line_user_attribute3,
            nvl(dtl.tax_line_user_attribute2,'NULL') tax_line_user_attribute2,
			nvl(dtl.tax_line_user_attribute4,'NULL') tax_line_user_attribute4
        FROM
            zx_rep_trx_detail_t dtl,
            zx_rep_trx_jx_ext_t jx
        WHERE 
			dtl.request_id =:fusionapps_request_id
            AND dtl.detail_tax_line_id = jx.detail_tax_line_id
            AND jx.attribute3 = 'Y'
    ) ss_v
WHERE
    wht_v.invoice_id = ss_v.invoice_id (+)
    AND wht_v.trx_line_id = ss_v.trx_line_id (+)
	AND wht_v.tax_line_user_attribute4 = ss_v.tax_line_user_attribute4 (+)
    AND wht_v.tax_line_user_attribute3 = ss_v.tax_line_user_attribute3 (+)
    AND wht_v.tax_line_user_attribute2 = ss_v.tax_line_user_attribute2 (+)
    AND je_it_wht_let.cp_optin_flag_p = 'Y'
    AND wht_v.supplier_name BETWEEN nvl(:p_supplier_name_from,wht_v.supplier_name) AND nvl(:p_supplier_name_to,wht_v.supplier_name)
GROUP BY
    wht_v.supplier_name,
    wht_v.taxpayer_id,
    wht_v.supplier_number,
    wht_v.site_code,
    wht_v.new_site_id,
    wht_v.vat_registration_number,
    wht_v.supplier_addr1,
    wht_v.supplier_addr2,
    wht_v.supplier_addr3,
    wht_v.supplier_address,
    wht_v.supplier_city,
    wht_v.supplier_zip,
    wht_v.supplier_province,
    wht_v.supplier_country,
    wht_v.date_of_birth,
    wht_v.place_of_birth,
    wht_v.invoice_number,
    wht_v.invoice_id,
    wht_v.wht_tax_rate,
    ss_v.wht_tax_rate
UNION ALL
SELECT
    substr(dtl.billing_tp_name,1,80) supplier_name,
    nvl(jx.attribute1,dtl.billing_tp_taxpayer_id) taxpayer_id,
    dtl.billing_tp_number supplier_number,
    dtl.billing_tp_site_name site_code,
    dtl.billing_tp_address_id new_site_id,
    nvl(dtl.billing_tp_site_tax_reg_num,dtl.billing_tp_tax_reg_num) vat_registration_number,
    substr(dtl.billing_tp_address1,1,35) supplier_addr1,
    substr(dtl.billing_tp_address2,1,35) supplier_addr2,
    substr(dtl.billing_tp_address3,1,35) supplier_addr3,
    dtl.billing_tp_address1
    || DECODE(dtl.billing_tp_address2,NULL,NULL,', ' || dtl.billing_tp_address2)
    || DECODE(dtl.billing_tp_address3,NULL,NULL,', ' || dtl.billing_tp_address3) supplier_address,
    dtl.billing_tp_city supplier_city,
    dtl.billing_tp_postal_code supplier_zip,
    dtl.billing_tp_province supplier_province,
    dtl.billing_tp_country supplier_country,
    jx.attribute_date1 date_of_birth,
    jx.attribute4 place_of_birth,
    dtl.trx_number invoice_number,
    dtl.trx_id invoice_id,
    0 cf_wht_amount,
    round(SUM(nvl(-1 * jx.numeric5,0) ),je_it_wht_let.cp_precision_p) cf_ss_amount,
    round(SUM(nvl(jx.numeric2,0) + nvl(-1 * jx.numeric5,0) ),je_it_wht_let.cp_precision_p) cf_gc_amount,
    round(SUM(nvl(jx.numeric4,0) ),je_it_wht_let.cp_precision_p) cf_ex_amount,
    round(SUM(nvl(jx.numeric3,0) ),je_it_wht_let.cp_precision_p) cf_taxable_amount,
    round(SUM(nvl(jx.numeric2,0) ),je_it_wht_let.cp_precision_p) cf_nt_amount,
    dtl.tax_rate wht_tax_rate,
    NULL wht_tax_rate2
FROM
    zx_rep_trx_detail_t dtl,
    zx_rep_trx_jx_ext_t jx
WHERE 
	dtl.request_id =:fusionapps_request_id
    AND dtl.detail_tax_line_id = jx.detail_tax_line_id
    AND je_it_wht_let.cp_optin_flag_p = 'Y'
    AND dtl.billing_tp_name BETWEEN nvl(:p_supplier_name_from,dtl.billing_tp_name) AND nvl(:p_supplier_name_to,dtl.billing_tp_name)	
    AND NOT EXISTS (
        SELECT
            1
        FROM
            zx_rep_trx_detail_t dtl1,
            zx_rep_trx_jx_ext_t jx1
        WHERE
            dtl1.request_id =:fusionapps_request_id
            AND dtl1.detail_tax_line_id = jx1.detail_tax_line_id
            AND jx1.attribute3 = 'N'
            AND dtl1.trx_id = dtl.trx_id
    )
GROUP BY
    dtl.billing_tp_name,
    nvl(jx.attribute1,dtl.billing_tp_taxpayer_id),
    dtl.billing_tp_number,
    dtl.billing_tp_site_name,
    dtl.billing_tp_address_id,
    nvl(dtl.billing_tp_site_tax_reg_num,dtl.billing_tp_tax_reg_num),
    dtl.billing_tp_address1,
    dtl.billing_tp_address2,
    dtl.billing_tp_address3,
    dtl.billing_tp_city,
    dtl.billing_tp_postal_code,
    dtl.billing_tp_province,
    dtl.billing_tp_country,
    jx.attribute_date1,
    jx.attribute4,
    dtl.trx_number,
    dtl.trx_id,
    dtl.tax_rate
ORDER BY
    supplier_name,
    invoice_number,
    invoice_id
--Q_SUM
select	povs.vendor_site_id				wht_supplier_site_id
, 	rates.description   				wht_description
, 	rates.tax           				wht_taxname
,	inv.invoice_id					inv_invid
,	inv.invoice_num					inv_invnum	
,	nvl(inv.base_amount, inv.invoice_amount)	inv_amt
,  	sum(nvl(dist.base_amount, dist.amount))  	wht_amt
, 	je_it_wht_let.cf_wht_totalformula(sum ( nvl ( dist.base_amount , dist.amount ) )) CF_wht_total
From	poz_supplier_sites_all_m	povs
,	poz_suppliers_v			pv
,	ap_invoices_all			inv
,	ap_invoice_lines_all		line
,	ap_invoice_distributions_all	dist
, 	zx_rates_b  			rates
, 	zx_taxes_b  			taxes

where  inv.set_of_books_id =:CP_SET_OF_BOOKS_ID
 and  line.invoice_id = inv.invoice_id 
 and  dist.invoice_id = line.invoice_id
 and  dist.invoice_line_number = line.line_number
 and  inv.legal_entity_id = nvl(:P_LEGAL_ENTITY_ID, inv.legal_entity_id)
  and  dist.line_type_lookup_code = 'AWT'
  and  nvl(dist.posted_flag,'N') in ('Y','P')
  and  inv.invoice_id in ( select  pay.invoice_id
                         from  	ap_invoice_payments_all      pay,
                        	ap_checks_all checks 
                        	where 	pay.posted_flag in ('Y','P') and 
                        	pay.check_id = checks.check_id and 
                        	checks.void_date is null and 
                 		pay.invoice_payment_id = decode(dist.line_type_lookup_code, 'AWT',
                         	dist.awt_invoice_payment_id, pay.invoice_payment_id) and  
                         	pay.accounting_date between nvl(rates.effective_from,pay.accounting_date) and nvl(rates.effective_to,pay.accounting_date) and
                 		pay.accounting_date between :CP_YEAR_START_DATE and :CP_YEAR_END_DATE
                       )
  and  inv.vendor_id = pv.vendor_id
  and  inv.vendor_site_id = povs.vendor_site_id
  and  inv.vendor_site_id = :site_id
  and  pv.vendor_name BETWEEN nvl(:P_SUPPLIER_NAME_FROM, pv.vendor_name) and nvl(:P_SUPPLIER_NAME_TO, pv.vendor_name)
  and  pv.vendor_id = povs.vendor_id
 and  dist.withholding_tax_code_id = nvl(rates.source_id, rates.tax_rate_id)
 and  rates.tax = taxes.tax  
 and not exists (SELECT 1
                         FROM zx_reporting_types_b rep_type,
                              zx_report_codes_assoc assoc
                         WHERE rep_type.reporting_type_code='ORA_IT SOCIAL SECURITY'
                           AND rep_type.reporting_type_id = assoc.reporting_type_id
                           AND assoc.entity_code = 'ZX_TAXES'
                           AND assoc.entity_id  = taxes.tax_id
                           AND NVL(assoc.reporting_code_char_value,'N') = 'Y'
                           AND dist.accounting_date BETWEEN assoc.effective_from AND nvl(assoc.effective_to, dist.accounting_date))
AND je_it_wht_let.cp_optin_flag_p = 'N'
group by povs.vendor_site_id, 
  	 rates.percentage_rate,
  	 rates.tax, 
  	 rates.description,
  	 inv.invoice_id, 
  	 inv.invoice_num, 
	 nvl(inv.base_amount, inv.invoice_amount)
--Q_WHT
select
 substr(pv.vendor_name,1,80)         supplier_name
,nvl(papf.national_identifier_number,pi.income_tax_id) taxpayer_id
,pv.segment1            supplier_number
,pvs.vendor_site_code            site_code
,pvs.vendor_site_id            site_id
,je_it_wht_let.CP_TP_VAT_REG_NUM( pvs.effective_start_date, pv.vendor_id, pvs.vendor_site_id,
                 'THIRD_PARTY_SITE', pv.party_id, pvs.party_site_id)        vat_registration_number
,substr(hzlp.address1,1,35)        supplier_addr1
,substr(hzlp.address2,1,35)        supplier_addr2
,substr(hzlp.address3,1,35)        supplier_addr3
,hzlp.address1||decode(hzlp.address2,null,null,', '||hzlp.address2)||decode(hzlp.address3,null,null,', '||hzlp.address3) supplier_address
,hzlp.city                supplier_city
,hzlp.postal_code        supplier_zip
,hzlp.province            supplier_province
,hzlp.country            supplier_country
,pv.global_attribute_date1    date_of_birth
,pv.global_attribute3        place_of_birth       
,inv.invoice_num            invoice_number
,inv.invoice_id            invoice_id
,nvl(inv.base_amount,inv.invoice_amount)    invoice_amount
--,nvl(aip.payment_base_amount,aip.amount)    amount_paid 
,NVL(je_it_wht_let.CF_AMOUNT_PAIDFORMULA(inv.invoice_id),0) amount_paid
,   sum(decode(dist.line_type_lookup_code,'AWT',0,nvl(dist.base_amount, dist.amount))) gross_compensations            
--,   je_it_wht_let.CF_EXEMPT_AMOUNT(inv.invoice_id)   exempt_amount  
, nvl(je_it_wht_let.CF_SS_AMOUNT(inv.invoice_id),0) ss_amount
, je_it_wht_let.CF_WHT_AMOUNT(inv.invoice_id) wht_amount
--,   sum(decode(dist.line_type_lookup_code,'AWT',decode(nvl(assoc.reporting_code_char_value,'N'),'N',nvl(dist.base_amount, dist.amount),0),0)) withheld_amount       
,   sum(nvl(dist.base_amount, dist.amount)) net_amount       
--,   sum(decode(dist.line_type_lookup_code,'AWT',decode(nvl(assoc.reporting_code_char_value,'N'),'Y',nvl(dist.base_amount, dist.amount),0),0)) social_security_amount   

,hzp.party_type

, je_it_wht_let.cf_letter_dateformula() CF_letter_date
--, je_it_wht_let.cf_prepay_inv_numberformula(inv.invoice_id, inv.invoice_num) CF_PREPAY_INV_NUMBER
, NVL(je_it_wht_let.cf_amount_paidformula(inv.invoice_id),0) CF_amount_paid
, NVL(je_it_wht_let.cf_ratio_paidformula(inv.invoice_id),1) CF_ratio_paid
, je_it_wht_let.cf_wht_row_flagformula(inv.invoice_id) CF_wht_row_flag
--, nvl((je_it_wht_let.CF_WHT_AMOUNT(inv.invoice_id)+ je_it_wht_let.CF_SS_AMOUNT(inv.invoice_id) + NVL (aip.payment_base_amount, aip.amount)),0)   CF_gc_amount
, nvl((je_it_wht_let.CF_WHT_AMOUNT(inv.invoice_id)+ je_it_wht_let.CF_SS_AMOUNT(inv.invoice_id) + NVL(je_it_wht_let.CF_AMOUNT_PAIDFORMULA(inv.invoice_id),0)),0)   CF_gc_amount
, je_it_wht_let.cf_ex_amountformula(inv.invoice_id, null) CF_ex_amount
, je_it_wht_let.CF_WHT_AMOUNT(inv.invoice_id) CF_wh_amount
--, NVL (aip.payment_base_amount, aip.amount) CF_nt_amount
,NVL(je_it_wht_let.CF_AMOUNT_PAIDFORMULA(inv.invoice_id),0) CF_nt_amount
, nvl(je_it_wht_let.CF_SS_AMOUNT(inv.invoice_id),0) CF_ss_amount
, je_it_wht_let.cf_taxable_amountformula(inv.invoice_id, null) CF_taxable_amount
, null group_id
, je_it_wht_let.GET_WHT_TAX(DIST.INVOICE_ID) wht_tax_name
, je_it_wht_let.GET_WHT_TAX_RATE(DIST.INVOICE_ID) wht_tax_rate
, je_it_wht_let.GET_SS_TAX(DIST.INVOICE_ID) wht_tax_name2
, je_it_wht_let.GET_SS_TAX_RATE(DIST.INVOICE_ID) wht_tax_rate2
from ap_invoices_all        inv
  , ap_invoice_lines_all    line
  , ap_invoice_payments_all     aip
  , ap_invoice_distributions_all     dist  
,  poz_supplier_sites_all_m pvs
,  poz_suppliers_v        pv
,  poz_suppliers_pii   pi
, (select p.person_id, n.national_identifier_number from PER_ALL_PEOPLE_F_V p,
PER_NATIONAL_IDENTIFIERS_v n
where p.primary_nid_id = n.national_identifier_id
and n.legislation_code = :CP_LE_Country_Code
and nvl(n.expiration_date, to_date('12-31-4712','MM-DD-YYYY')) > :CP_YEAR_END_DATE
) papf
,hz_parties                 hzp
,hz_location_profiles       hzlp
,hz_party_sites             hps

--,zx_rates_b	rates
--,zx_taxes_b taxes
--,zx_reporting_types_b rep_type
--,zx_reporting_codes_b rep_code
--,zx_report_codes_assoc assoc
Where inv.set_of_books_id =:CP_SET_OF_BOOKS_ID 
and inv.legal_entity_id = nvl(:P_LEGAL_ENTITY_ID, inv.legal_entity_id)
and hzp.party_id =pv.party_id
and inv.invoice_id = line.invoice_id
and aip.invoice_id = inv.invoice_id
and nvl(hzp.user_guid, -99) = papf.person_id (+)
and aip.posted_flag in ('Y','P')
and aip.set_of_books_id =:cp_set_of_books_id
and aip.accounting_date between :CP_YEAR_START_DATE and :CP_YEAR_END_DATE
and aip.invoice_payment_id = (SELECT MAX(aip_sub.invoice_payment_id)
FROM ap_invoice_payments_all aip_sub
WHERE aip_sub.invoice_id = aip.invoice_id
AND  aip_sub.accounting_date BETWEEN :cp_year_start_date AND :cp_year_end_date
AND  nvl(aip_sub.reversal_flag,'N') <> 'Y'
GROUP BY aip_sub.invoice_id)
and dist.invoice_id = line.invoice_id
and dist.invoice_line_number = line.line_number
and nvl(dist.posted_flag,'N') in ('Y','P')
and inv.vendor_id = pv.vendor_id
and pv.vendor_id = pi.vendor_id(+)
and inv.vendor_site_id = pvs.vendor_site_id
and pv.vendor_id = pvs.vendor_id
and pv.vendor_name BETWEEN nvl(:P_SUPPLIER_NAME_FROM, pv.vendor_name) and nvl(:P_SUPPLIER_NAME_TO, pv.vendor_name)
and pvs.party_site_id = hps.party_site_id
and hps.location_id = hzlp.location_id
and SYSDATE between hzlp.effective_start_date and hzlp.effective_end_date
AND je_it_wht_let.cp_optin_flag_p = 'N'

--and dist.withholding_tax_code_id = nvl(rates.source_id, rates.tax_rate_id)
and dist.line_type_lookup_code = 'AWT'
--and rates.tax = taxes.tax
--and assoc.entity_code(+) = 'ZX_TAXES'
--and assoc.entity_id(+) = taxes.tax_id
--and rep_type.reporting_type_code(+)='ORA_IT SOCIAL SECURITY'
--and rep_type.reporting_type_id(+) = assoc.reporting_type_id
GROUP BY  inv.invoice_num
, nvl(papf.national_identifier_number,pi.income_tax_id)        
, inv.invoice_id
, nvl(inv.base_amount,inv.invoice_amount)
--, nvl(aip.payment_base_amount,aip.amount)
, NVL(je_it_wht_let.CF_AMOUNT_PAIDFORMULA(inv.invoice_id),0)
, aip.org_id                                  
, pv.vendor_name
, pv.segment1
, pvs.vendor_site_code
, pvs.vendor_site_id
, je_it_wht_let.CP_TP_VAT_REG_NUM( pvs.effective_start_date, pv.vendor_id, pvs.vendor_site_id,'THIRD_PARTY_SITE', pv.party_id, pvs.party_site_id)
, hzlp.address1
, hzlp.address2
, hzlp.address3
, hzlp.city
, hzlp.postal_code
, hzlp.province
, hzlp.country
, hzp.party_type
, pv.global_attribute_date1
, pv.global_attribute3
,dist.invoice_id
order by substr(pv.vendor_name,1,80)
, inv.invoice_num
, inv.invoice_id
=====================================================================================================================
SELECT 
ECST.CATEGORY_SET_NAME
,ECST.DESCRIPTION
,CASE WHEN  ECST.CATEGORY_SET_NAME='Purchasing Category'
 THEN 'AS_PO_CATEGORIES'
 END   STRUCTURE_NAME
,(SELECT FLV.MEANING
	FROM FND_LOOKUP_VALUES FLV
   WHERE FLV.LOOKUP_TYPE = 'EGP_CATALOG_CONTROL_LEVEL'
     AND LANGUAGE = 'US' AND ENABLED_FLAG = 'Y'
	 AND FLV.LOOKUP_CODE = ECS.CONTROL_LEVEL) CONTROL_LEVEL
,REGEXP_SUBSTR(ECT.CATEGORY_NAME,'[^.]+')          CATALOG_HIERARCHY_1
,REGEXP_SUBSTR(ECT.CATEGORY_NAME,'[^.]+',1,2)      CATALOG_HIERARCHY_2
,REGEXP_SUBSTR(ECT.CATEGORY_NAME,'[^.]+',1,3)      CATALOG_HIERARCHY_3
,ECB.Enabled_Flag 
,ECS.End_Date          Disable_date
 FROM
 EGP_CATEGORY_SETS_TL ECST
,EGP_CATEGORY_SETS_B ECS
,egp_category_set_valid_cats ecsvc
,EGP_CATEGORIES_TL ECT
,EGP_CATEGORIES_B ECB
 WHERE

ECST.CATEGORY_SET_ID=ecsvc.CATEGORY_SET_ID
 AND ECST.CATEGORY_SET_ID = ECS.CATEGORY_SET_ID
AND ECST.LANGUAGE=USERENV('LANG')
AND ECT.CATEGORY_ID=ECB.CATEGORY_ID
AND ECT.LANGUAGE=USERENV('LANG')
AND ecsvc.CATEGORY_ID=ECB.CATEGORY_ID
=========================================================================================================================
SELECT 
ESIB.ITEM_NUMBER iTEM_CODE,
IOP.ORGANIZATION_CODE                   Organization 
,HOUFT.NAME                              Organization_Name
,ESIT.DESCRIPTION   
,ESIT.LONG_DESCRIPTION                   Long_Description                                              	 
,(select DISTINCT IUT.UNIT_OF_MEASURE from 
               INV_UNITS_OF_MEASURE_TL IUT ,
               INV_UNITS_OF_MEASURE_b IUB 
   WHERE  IUT.language=userenv('LANG') 
   AND IUT.UNIT_OF_MEASURE_ID=IUB.UNIT_OF_MEASURE_ID
   AND IUB.UOM_CODE=ESIB.PRIMARY_UOM_CODE
   ) Primary_unit_of_Measure    
,(SELECT DISTINCT FLV.MEANING
	FROM FND_LOOKUP_VALUES FLV
   WHERE FLV.LOOKUP_TYPE = 'EGP_ITEM_TYPE'
     AND LANGUAGE = 'US'
	 AND FLV.LOOKUP_CODE = ESIB.Item_Type) ITEM_Type
,ESIB.INVENTORY_ITEM_STATUS_CODE         Item_Status
,ECST.CATEGORY_SET_NAME                            Category_Set   
,REGEXP_SUBSTR(ECT.CATEGORY_NAME,'[^.]+')         CATALOG_HIERARCHY_1
,REGEXP_SUBSTR(ECT.CATEGORY_NAME,'[^.]+',1,2)     CATALOG_HIERARCHY_2
,REGEXP_SUBSTR(ECT.CATEGORY_NAME,'[^.]+',1,3)     CATALOG_HIERARCHY_3
,ESIB.SECONDARY_UOM_CODE                 Secondary_unit_of_measure   
,ESIB.PURCHASING_ITEM_FLAG               Purchasing
,ESIB.INVENTORY_ITEM_FLAG                "Inventory Item"
,ESIB.PURCHASING_ENABLED_FLAG            Purchasable
,ESIB.TAXABLE_FLAG                       Taxable
,ESIB.ALLOW_ITEM_DESC_UPDATE_FLAG        Allow_Purchasing_Document_Description_Update
,CASE WHEN IOP.ORGANIZATION_CODE='1100' THEN 
'RA1-0000-8900006-000000-000-0000-000-0000-00000'
WHEN IOP.ORGANIZATION_CODE='2200' THEN 
'RE1-0000-8900006-000000-000-0000-000-0000-00000'
when IOP.ORGANIZATION_CODE='IO_KUWAIT' THEN
'RA1-0000-8900006-000000-000-0000-000-0000-00000'
when IOP.ORGANIZATION_CODE='IO_MAL' THEN
'RA6-0000-8900006-000000-000-0000-000-0000-00000'
when IOP.ORGANIZATION_CODE='IO_TAL' THEN
'RA3-0000-8900006-000000-000-0000-000-0000-00000'
when IOP.ORGANIZATION_CODE='IO_KSA2' THEN
'RB2-0000-8900006-000000-000-0000-000-0000-00000'
END  Cost_of_Goods_Sold_Account 
, CASE WHEN IOP.ORGANIZATION_CODE='1100' THEN 
'RA1-0000-8900005-000000-000-0000-000-0000-00000'
WHEN IOP.ORGANIZATION_CODE='2200' THEN 
'RE1-0000-8900005-000000-000-0000-000-0000-00000'
when IOP.ORGANIZATION_CODE='IO_KUWAIT' THEN
'RA1-0000-8900005-000000-000-0000-000-0000-00000'
when IOP.ORGANIZATION_CODE='IO_MAL' THEN
'RA6-0000-8900003-000000-000-0000-000-0000-00000'
when IOP.ORGANIZATION_CODE='IO_TAL' THEN
'RA3-0000-8900003-000000-000-0000-000-0000-00000'
when IOP.ORGANIZATION_CODE='IO_KSA2' THEN
'RB2-0000-8900005-000000-000-0000-000-0000-00000'
END SALES_ACCOUNT    
FROM 
 INV_ORG_PARAMETERS IOP
,HR_ORGANIZATION_UNITS_F_TL HOUFT
,EGP_SYSTEM_ITEMS_B ESIB
,EGP_SYSTEM_ITEMS_TL ESIT
,EGP_CATEGORIES_B ECB
,EGP_CATEGORIES_TL ECT
,EGP_ITEM_CATEGORIES EIC
,EGP_CATEGORY_SETS_TL ECST
,egp_category_set_valid_cats  ECSVC
,egp_category_sets_b ECSB



WHERE 1=1
			AND IOP.ORGANIZATION_ID=HOUFT.ORGANIZATION_ID
			AND HOUFT.LANGUAGE=USERENV('LANG') 
			AND IOP.ORGANIZATION_ID=ESIB.ORGANIZATION_ID
			AND ESIB.ORGANIZATION_ID=ESIT.ORGANIZATION_ID
			AND ESIB.INVENTORY_ITEM_ID=ESIT.INVENTORY_ITEM_ID
			AND ESIT.LANGUAGE=USERENV('LANG')
			AND ECB.CATEGORY_ID=EIC.CATEGORY_ID
			AND EIC.INVENTORY_ITEM_ID=ESIB.INVENTORY_ITEM_ID
			AND EIC.ORGANIZATION_ID=ESIB.ORGANIZATION_ID
			AND ECST.CATEGORY_SET_ID=ECSB.CATEGORY_SET_ID
			AND ECST.LANGUAGE=USERENV('LANG')
			AND ECSVC.CATEGORY_SET_ID=ECSB.CATEGORY_SET_ID
			AND ECSVC.CATEGORY_ID=ECB.CATEGORY_ID
			AND ECT.CATEGORY_ID=ECB.CATEGORY_ID
			AND ECT.LANGUAGE=USERENV('LANG')
			--AND ESIB.ITEM_NUMBER='KATUN TONER'
			--AND IOP.ORGANIZATION_CODE='1100'
			--and HOUFT.NAME ='IO_KUWAIT'
============================================================================================================================
--------------------------------------JAQ_Customer_Statement_Report_DM---------------------------------

--Customer
SELECT 
       (SELECT hou.NAME
                 FROM hr_operating_units hou
                WHERE organization_id = RCTA.org_id)   OU_NAME,
 (SELECT  (        hla.address_line_1
                || ' '
                || hla.address_line_2
                || ' '
                || hla.address_line_3
                || ' '
                || hla.address_line_4
                || ' '
                || hla.town_or_city
                || ' '
                || hla.region_1
                || ' '
                || hla.region_2 
               ) addd 
            FROM hr_locations_all hla, hr_all_organization_units hrou
           WHERE     1 = 1
                 AND hrou.organization_id = RCTA.org_id
                 AND hla.location_id = hrou.location_id)
          || ' '||(SELECT ft.territory_short_name
            FROM fnd_territories_vl ft,
                 hr_locations_all hrl,
                 hr_all_organization_units hrou
           WHERE     1 = 1
                 AND hrl.country = ft.territory_code
                 AND hrou.organization_id = RCTA.org_id
                 AND hrl.location_id = hrou.location_id)
         || ' '||(SELECT postal_code
            FROM hr_locations_all hrl, hr_all_organization_units hrou
           WHERE     1 = 1
                 AND hrou.organization_id = RCTA.org_id
                 AND hrl.location_id = hrou.location_id) OU_ADDR,
       rcta.trx_number,
       to_char(rcta.trx_date,'DD/MM/YYYY') trx_date,
       rcta.INVOICE_CURRENCY_CODE CURRENCY_CODE,
       NVL(rcta.EXCHANGE_RATE,1) EXCHANGE_RATE,
       hca.account_number customer_number,
       hp.party_name customer_name,
       trx_amount.extended_amount INVOICE_AMOUNT,
       araa.AMOUNT_APPLIED RECEIPT_AMT,
	   (trx_amount.extended_amount-araa.AMOUNT_APPLIED ) Short_Excess,
	   araa.receipt_date,
       rctt.TYPE,
	   to_char(apsa.due_date,'DD/MM/YYYY') due_date,
	   null extra_day --multiple recepts dates ?
	   
FROM 

     hz_parties hp,
     hz_cust_accounts hca,
     ra_customer_trx_all rcta,
	 RA_CUST_TRX_TYPES_ALL rctt,
     ar_payment_schedules_all apsa,
	 (select  araa.applied_customer_trx_id,sum(araa.amount_applied) amount_applied,
       LISTAGG(distinct to_char(araa.APPLY_DATE,'DD/MM/YYYY'), ' / ') WITHIN GROUP (ORDER BY to_char(araa.APPLY_DATE,'DD/MM/YYYY')) receipt_date
	  from 
      ar_cash_receipts_all acra,
      ar_receivable_applications_all araa
	  where 1=1 
	  --and araa.applied_customer_trx_id = rcta.customer_trx_id
      AND acra.cash_receipt_id = araa.cash_receipt_id
	  --and araa.applied_customer_trx_id=81066
	  group by araa.applied_customer_trx_id
	   ) araa,
	   (SELECT rctla.customer_trx_id ,SUM (rctla.extended_amount) extended_amount
        FROM ra_customer_trx_lines_all rctla
		group by rctla.customer_trx_id 
		) trx_amount
		
WHERE 1 = 1

      AND hp.party_id = hca.party_id
      AND rcta.bill_to_customer_id = hca.cust_account_id
      AND rcta.customer_trx_id = apsa.customer_trx_id
      AND araa.applied_customer_trx_id = rcta.customer_trx_id
      --AND rcta.trx_number = '2122705200000279'
	  AND rctt.cust_trx_type_seq_id = RCTa.cust_trx_type_seq_id
	  AND (rcta.org_id IN ( :p_org_name) OR 'All' IN ( :p_org_name || 'All')) 
      AND apsa.gl_date <= :p_end_date
	  AND (hp.party_id in (:P_PARTY_NAME) or 'All' in (:P_PARTY_NAME || 'All'))
      AND (RCTa.INVOICE_CURRENCY_CODE IN (:P_CURR) OR 'All' IN (:P_CURR || 'All'))
	  and trx_amount.customer_trx_id=rcta.customer_trx_id
	  
UNION 	  
	 
	 
select 
 (SELECT hou.NAME
                 FROM hr_operating_units hou
                WHERE organization_id = acra.org_id)   OU_NAME,
 (SELECT  (   hla.address_line_1
                || ' '
                || hla.address_line_2
                || ' '
                || hla.address_line_3
                || ' '
                || hla.address_line_4
                || ' '
                ||hla.town_or_city
                || ' '
                || hla.region_1
                || ' '
                || hla.region_2 
               ) addd 
            FROM hr_locations_all hla, hr_all_organization_units hrou
           WHERE     1 = 1
                 AND hrou.organization_id = acra.org_id
                 AND hla.location_id = hrou.location_id)
          || ' '||(SELECT ft.territory_short_name
            FROM fnd_territories_vl ft,
                 hr_locations_all hrl,
                 hr_all_organization_units hrou
           WHERE     1 = 1
                 AND hrl.country = ft.territory_code
                 AND hrou.organization_id = acra.org_id
                 AND hrl.location_id = hrou.location_id)
         || ' '||(SELECT postal_code
            FROM hr_locations_all hrl, hr_all_organization_units hrou
           WHERE     1 = 1
                 AND hrou.organization_id = acra.org_id
                 AND hrl.location_id = hrou.location_id) OU_ADDR,
				 null trx_number,--acra.RECEIPT_NUMBER trx_number,
				 null trx_date,--to_char(acra.receipt_date,'DD/MM/YYYY') trx_date,
				 acra.CURRENCY_CODE,
				 NVL(acra.EXCHANGE_RATE,1) EXCHANGE_RATE,
				 HCA.account_number customer_number,
				 hp.party_name customer_name,
				 0 INVOICE_AMOUNT,
				 acra.amount RECEIPT_AMT,
				 (0-acra.amount) Short_Excess,
				 to_char(acra.receipt_date,'DD/MM/YYYY') receipt_date,
				 acra.TYPE,
				to_char(apsa.due_date,'DD/MM/YYYY') due_date,
				null extra_day
				 
FROM 

 ar_cash_receipts_all acra,
 ar_receivable_applications_all arra, 
 ar_payment_schedules_all apsa,
 HZ_CUST_ACCOUNTS HCA,
 HZ_PARTIES HP
 
WHERE acra.status  in ('APP', 'UNAPP')
AND acra.cash_receipt_id=arra.cash_receipt_id
AND acra.cash_receipt_id=apsa.cash_receipt_id
  	  AND (acra.org_id IN ( :p_org_name) OR 'All' IN ( :p_org_name || 'All')) 
      AND apsa.gl_date <= :p_end_date
AND (acra.CURRENCY_CODE IN (:P_CURR) OR 'All' IN (:P_CURR || 'All'))	  
--AND (hp.party_id in (:P_PARTY_NAME) or 'All' in (:P_PARTY_NAME || 'All'))
AND ACRA.PAY_FROM_CUSTOMER = HCA.CUST_ACCOUNT_ID
AND HCA.PARTY_ID = HP.PARTY_ID
 AND (hp.party_id in (:P_PARTY_NAME) or 'All' in (:P_PARTY_NAME || 'All'))
 ====================================================================================================================
 ------------------------------------JAQ_PROFORMA_INVOICE_DM--------------------
--Q1
select  dha.header_id,
       aa.ou_name bu_name,
       case when (select count(*)
          from doo_fulfill_lines_all dfla2,
               inv_org_parameters iop2
         where dfla2.fulfill_org_id=iop2.organization_id
           and dfla2.header_id = dha.header_id
           and iop2.attribute4 is not null) >= 1 then
       'IEC NO. '||(select rtrim(xmlagg(xmlelement(e,(aa.attribute4)||',')).
               extract ('//text()'),',') from
       (select distinct iop2.attribute4
          from doo_fulfill_lines_all dfla2,
               inv_org_parameters iop2
         where dfla2.fulfill_org_id=iop2.organization_id      
           and iop2.business_unit_id=nvl(:p_org,iop2.business_unit_id)
           and dfla2.header_id = dha.header_id
           and iop2.attribute4 is not null)aa)
       end exporter_reff,
       aa.address,
       (  aa.address_line_1
        || ' '
        || aa.address_line_2)exporter_add1,
       aa.town_or_city exp_city,
       aa.region_2 exp_state,
       aa.country exp_country,
       sc.party_name consignee_name,
       (   sc.address1
        || ' '
        || sc.address2
        || ' '
        || sc.address3|| ',')sc_add_1, 
       sc.city || ',' ship_city, 
       sc.state ship_state,
       sc.country ship_country,
       bc.party_name bill_to_name,
       (   bc.address1
        || ' '
        || bc.address2
        || ' '
        || bc.address3|| ',')bc_add_1, 
       bc.city || ',' bill_city, 
       bc.state bill_state,
       bc.country bill_country, 
       bank.bank_name,
       case when bank.acc_no is not null then
       bank.acc_no||' '||dha.transactional_currency_code end acc_no,
       bank.bank_address,  
       dha.order_number,
       to_char(dha.ordered_date,'DD-MM-YYYY HH:MI AM') order_date, 
       nvl(DHA.CUSTOMER_PO_NUMBER,
        (select max(ATTRIBUTE_CHAR1||' Dt.: '||to_char(ATTRIBUTE_DATE1,'dd/mm/yyyy')) from doo_headers_eff_b
          where CONTEXT_CODE = 'Purchase Order Details' and header_id = dha.header_id )) cust_ord_no_dt,
       dfla.fulfill_line_id,
       esi.item_number item_code,
       esi.description description,
       case when upper(esi.weight_uom_code) like '%KG%' then
             (esi.unit_weight)*dfla.ordered_qty 
             when upper(esi.weight_uom_code) like '%GM%' then
             (esi.unit_weight*1000)*dfla.ordered_qty
       end gross_weight,
       /*case when upper(esi.dimension_uom_code) like '%CUM%' then
             (((esi.unit_length)*
             (esi.unit_width)*
             (esi.unit_height))*dfla.ordered_qty) 
       end cbm,*/
       dfla.ordered_qty qty,
       dla.unit_list_price,
--       dla.unit_selling_price rate,
       (DLA.UNIT_SELLING_PRICE - nvl((SELECT round(sum(HEADER_CURRENCY_UNIT_PRICE),5)
                                     FROM DOO_ORDER_PRICING_DETAILS_V
                                    WHERE FULFILL_LINE_ID = dfla.FULFILL_LINE_ID
                                    AND PRICE_ELEMENT_USAGE_CODE = 'PRICE_ADJUSTMENT'
									AND NVL(PRICING_SOURCE_TYPE_CODE,'-') != 'ROUNDING_ADJUSTMENT'
                                    AND HEADER_CURRENCY_EXT_AMOUNT > 0),0) ) RATE,
--       (dfla.ordered_qty * dla.unit_selling_price)/*dfla.extended_amount*/ amount,
       (DFLA.ORDERED_QTY * (DLA.UNIT_SELLING_PRICE - nvl((SELECT round(sum(HEADER_CURRENCY_UNIT_PRICE),5)
                                                         FROM DOO_ORDER_PRICING_DETAILS_V
                                                        WHERE FULFILL_LINE_ID = dfla.FULFILL_LINE_ID
                                                        AND PRICE_ELEMENT_USAGE_CODE = 'PRICE_ADJUSTMENT'
														AND NVL(PRICING_SOURCE_TYPE_CODE,'-') != 'ROUNDING_ADJUSTMENT'
                                                        AND HEADER_CURRENCY_EXT_AMOUNT > 0),0) ) ) amount,
       dha.transactional_currency_code,
       case when dha.status_code = 'DOO_DRAFT' then 'Draft' else null end draft_status_print,
       (select meaning from fnd_lookup_values 
         where lookup_type = 'ORA_DOO_ORDER_TYPES' 
           and language = 'US'
           and lookup_code = dha.order_type_code) order_type,
       hdff.pre_carriage_by,
       /*(select max(modeoftransportpeo.lookup_code)
          from fusion.wsh_org_carrier_services warehousecarrierservicepeo,
               fusion.rcs_lookups modeoftransportpeo              ,
               fusion.wsh_carriers carrierpeo,
               fusion.msc_xref_mapping mxm,
               doo_fulfill_lines_all dfl
         where 1=1
           and warehousecarrierservicepeo.mode_of_transport = modeoftransportpeo.lookup_code
           and modeoftransportpeo.lookup_type = 'WSH_MODE_OF_TRANSPORT'
           and carrierpeo.carrier_id = warehousecarrierservicepeo.carrier_id
           and carrierpeo.carrier_id = mxm.source_value
           and entity_name = 'CARRIERS'
           and attribute_name = 'CARRIER_ID'
           and sr_instance_id in (select a.instance_id
                                    from fusion.msc_apps_instances a,
                                         fusion.hz_orig_systems_vl b
                                   where a.instance_id = b.orig_system_id
                                     and a.order_orch_type = 2
                                     and b.status = 'A')
           and mxm.target_value = dfl.carrier_id
           and dfla.header_id = dha.header_id)*/ 
       (select max(rl.lookup_code)
          from msc_xref_mapping mxm,
               wsh_carriers wc,
               wsh_org_carrier_services wocs,
               rcs_lookups rl
         where mxm.attribute_name='CARRIER_ID'
           and mxm.entity_name='CARRIERS'
           and wc.carrier_id = mxm.source_value
           and wc.carrier_id = wocs.carrier_id
           and wocs.organization_id is not null
           and rl.lookup_type = 'WSH_MODE_OF_TRANSPORT'
           and wocs.mode_of_transport = rl.lookup_code
           and mxm.target_value=nvl(dha.carrier_id,dfla.carrier_id))shipment_mode,
       hdff.port_of_loading,
       hdff.country_of_origin,
       sc.country final_destination,
       hdff.port_of_discharge,
       hdff.header_remarks,
       ldff.line_remarks,
       nvl(n.description, n.name) payment_term,
       nvl((select attribute_number4
          from doo_headers_eff_b
         where context_code='Export Discount'
           and header_id=dha.header_id),0) freight_amt,
       nvl((select attribute_number6
          from doo_headers_eff_b
         where context_code='Export Discount'
           and header_id=dha.header_id),0) documentation_amt,
       nvl((select attribute_number7
          from doo_headers_eff_b
         where context_code='Export Discount'
           and header_id=dha.header_id),0) insurance_amt,
       dha.change_version_number,
       to_char(dfla.schedule_ship_date,'DD-MM-YYYY')schedule_ship_date,
       (select max(fob_point_code) 
          from doo_headers_all_v 
         where header_id = dha.header_id) fob,
	   (select aa.ATTRIBUTE_CHAR5
          from doo_headers_eff_b aa 
         where aa.header_id = dha.header_id
		 and aa.ATTRIBUTE_CHAR5 is not null
		 AND aa.context_code = 'Export Details') fob_amount,
     (select substr(ecv.category_name,instr(ecv.category_name, '-', 1,1)+1) 
          from egp_categories_vl ecv 
         where ecv.category_id =
         (select distinct category_id 
            from egp_item_cat_assignments 
           where inventory_item_id=esi.inventory_item_id
             and organization_id = (select organization_id from inv_org_parameters where organization_code = 'IMO')
             and category_set_id = 
             (select category_set_id 
                from egp_category_sets_vl 
               where validate_flag='Y' 
                 and upper(description)='JAQ GST CATEGORY'))) hsn_code,
    /*CASE WHEN round((((nvl(esi.unit_length,0) / 1000) * (nvl(esi.unit_width,0) / 1000) * (nvl(esi.unit_height,0) / 1000)) * dfla.ordered_qty),3)=0 
    THEN NULL
    ELSE round((((nvl(esi.unit_length,0) / 1000) * (nvl(esi.unit_width,0) / 1000) * (nvl(esi.unit_height,0) / 1000)) * dfla.ordered_qty),3) END cbm,*/
    case when (select round((((nvl(egp.unit_length,0) / 1000) * (nvl(egp.unit_width,0) / 1000) * (nvl(egp.unit_height,0) / 1000)) * dfla.ordered_qty),3)
                 from egp_system_items_b egp 
                where egp.organization_id = (select organization_id from inv_org_parameters where organization_code = 'IMO')
                  and egp.inventory_item_id=esi.inventory_item_id)=0
    THEN NULL
    ELSE (select round((((nvl(egp.unit_length,0) / 1000) * (nvl(egp.unit_width,0) / 1000) * (nvl(egp.unit_height,0) / 1000)) * dfla.ordered_qty),3)
                 from egp_system_items_b egp 
                where egp.organization_id = (select organization_id from inv_org_parameters where organization_code = 'IMO')
                  and egp.inventory_item_id=esi.inventory_item_id) END cbm,
    nvl((select max(case  when (attribute_value_1 = 'DISCOUNT_PERCENT' or attribute_value_1 = 'MARKUP_PERCENT') then attribute_value_2
                     when (attribute_value_2 = 'DISCOUNT_PERCENT' or attribute_value_2 = 'MARKUP_PERCENT') then attribute_value_3
                     when (attribute_value_3 = 'DISCOUNT_PERCENT' or attribute_value_3 = 'MARKUP_PERCENT') then attribute_value_4
                     when (attribute_value_4 = 'DISCOUNT_PERCENT' or attribute_value_4 = 'MARKUP_PERCENT') then attribute_value_5
                     when (attribute_value_5 = 'DISCOUNT_PERCENT' or attribute_value_5 = 'MARKUP_PERCENT') then attribute_value_6
                     when (attribute_value_6 = 'DISCOUNT_PERCENT' or attribute_value_6 = 'MARKUP_PERCENT') then attribute_value_7
                     when (attribute_value_7 = 'DISCOUNT_PERCENT' or attribute_value_7 = 'MARKUP_PERCENT') then attribute_value_8
                     when (attribute_value_8 = 'DISCOUNT_PERCENT' or attribute_value_8 = 'MARKUP_PERCENT') then attribute_value_9
                     when (attribute_value_9 = 'DISCOUNT_PERCENT' or attribute_value_9 = 'MARKUP_PERCENT') then attribute_value_10 else '0' end)
        from doo_order_pricing_details_v dpd,
             qp_matrix_rules_vl qmr
        where 1 = 1
        and upper(dpd.explanation) like 'ADD%DISC%'
        and dpd.price_element_usage_code = 'PRICE_ADJUSTMENT'
        and dpd.fulfill_line_id = dfla.fulfill_line_id
        and qmr.dynamic_matrix_rule_id = dpd.pricing_source_id),0) add_disc_pct,
    (select nvl(sum(abs(header_currency_ext_amount)),0)
        from doo_order_pricing_details_v
        where 1 = 1
        and upper(explanation) like 'ADD%DISC%'
        and price_element_usage_code = 'PRICE_ADJUSTMENT'
        and fulfill_line_id = dfla.fulfill_line_id) add_disc,
    (select nvl(sum(abs(header_currency_ext_amount)),0)
        from doo_order_pricing_details_v
        where 1 = 1
        and upper(explanation) like 'CONTAIN%LOAD%'
        and price_element_usage_code = 'PRICE_ADJUSTMENT'
        and fulfill_line_id = dfla.fulfill_line_id) container_disc,
    (select nvl(sum(abs(header_currency_ext_amount)),0)
        from doo_order_pricing_details_v
        where 1 = 1
        and upper(explanation) like 'TRADE%DISC%'
        and price_element_usage_code = 'PRICE_ADJUSTMENT'
        and fulfill_line_id = dfla.fulfill_line_id) trade_disc,
    (select nvl(sum(abs(header_currency_ext_amount)),0)
        from doo_order_pricing_details_v
        where 1 = 1
        and upper(explanation) like 'SPECIAL%DISC%'
        and price_element_usage_code = 'PRICE_ADJUSTMENT'
        and fulfill_line_id = dfla.fulfill_line_id) special_disc,
    (select nvl(sum(abs(header_currency_ext_amount)),0)
        from doo_order_pricing_details_v
        where 1 = 1
        and upper(explanation) like 'CASH%DISC%'
        and price_element_usage_code = 'PRICE_ADJUSTMENT'
        and fulfill_line_id = dfla.fulfill_line_id) cash_disc,
    (select nvl(sum(abs(header_currency_ext_amount)),0)
       from doo_order_pricing_details_v
      where 1 = 1
        and (upper(explanation) like '%JW%DISPLAY%DISC%' or 
            upper(explanation) like 'DISPLAY%DISC%')
        and price_element_usage_code = 'PRICE_ADJUSTMENT'
        and fulfill_line_id = dfla.fulfill_line_id) jw_disp_disc,
     (select rtrim(xmlagg(xmlelement(e, aa.division || ',')).extract('//text()'),',')
          from
     (select distinct
       case when instr(ecv.description, '//') > 0 then 
                  substr(ecv.description,instr(ecv.description,'//',1,1)+2,instr(ecv.description,'//',1,2)-instr(ecv.description,'//',1,1)-2)
              when instr(ecv.description, '-') > 0 then regexp_substr(ecv.description,'[^-]+',1, 2)
              when instr(ecv.description, '.') > 0 then regexp_substr(ecv.description,'[^.]+',1,2) end division            
        from egp_categories_vl ecv, egp_item_categories eic, egp_category_sets_vl ecsv
        where ecv.category_id = eic.category_id and eic.category_set_id = ecsv.category_set_id
        and eic.organization_id = (select organization_id from inv_org_parameters where organization_code = 'IMO')
        and ecsv.description = 'Inventory Item Categories'
        and eic.inventory_item_id = esi.inventory_item_id
        group by case when instr(ecv.description, '//') > 0 then 
                  substr(ecv.description,instr(ecv.description,'//',1,1)+2,instr(ecv.description,'//',1,2)-instr(ecv.description,'//',1,1)-2)
              when instr(ecv.description, '-') > 0 then regexp_substr(ecv.description,'[^-]+',1, 2)
              when instr(ecv.description, '.') > 0 then regexp_substr(ecv.description,'[^.]+',1,2) end)aa) brand_grp,
         (    SELECT     conversion_rate
            FROM     gl_daily_rates gdr, gl_periods gp
            WHERE     from_currency         =             'PLN'
            AND     to_currency         =             dha.transactional_currency_code
            AND     conversion_type     =             'Corporate'
            AND     status_code         =             'C'
            AND     gdr.conversion_date =            dha.ordered_date
         )    conv_rate,
	

		 (case :v_lang when  'en_US' THEN (case when upper(dhA.order_type_code) like '%NFEI%' THEN 'SAMPLE PROFORMA INVOICE' ELSE 'PROFORMA INVOICE' END)
              when 'it_IT' THEN (case when upper(dhA.order_type_code) like '%NFEI%' THEN 'ESEMPIO DI FATTURA PROFORMA' ELSE 'FATTURA PROFORMA' END)
			  when 'pl-PL' THEN (case when upper(dhA.order_type_code) like '%NFEI%' THEN 'PRZYKŁADOWA FAKTURA PROFORMA' ELSE 'FAKTURA PROFORMA' END)
				ELSE (case when upper(dhA.order_type_code) like '%NFEI%' THEN 'SAMPLE PROFORMA INVOICE' ELSE 'PROFORMA INVOICE' END) 
				end
			) HDR_NAME,
			
	
       (case when upper(dhA.order_type_code) like '%NFEI%' THEN
       'FREE SAMPLE ITEMS NOT FOR SALE, HAVING NO COMMERCIAL VALUE. VALUE DECLARED FOR CUSTOM PURPOSE ONLY. NO FOREIGN EXCHANGE TRANSACTION INVOLVED'
        ELSE NULL END) NEFI_COND,
        REPLACE(IBY_AMOUNT_IN_WORDS.Get_Amount_In_Words(HDR_AMT.HDR_AMT,dha.transactional_currency_code,NULL,NULL),'*','') AMTTOWORDS,
    CASE WHEN (select count(party_id)
                 from HZ_ORGANIZATION_PROFILES
                where party_id = DHA.SOLD_TO_PARTY_ID
                  and EXTN_ATTRIBUTE_CHAR076 is not null) > 0
          and (select max(EXTN_ATTRIBUTE_CHAR076)
                 from HZ_ORGANIZATION_PROFILES
                where party_id = DHA.SOLD_TO_PARTY_ID) IN ('PRTL', 'APRVD') THEN
    (SELECT 'Email ID: '||MAX(hcp.EMAIL_ADDRESS)
       FROM HZ_CONTACT_POINTS HCP,
            HZ_PARTIES HP
      WHERE HP.PARTY_ID = DHA.SOLD_TO_PARTY_ID
        AND HCP.OWNER_TABLE_ID = HP.PREFERRED_CONTACT_PERSON_ID
        AND HCP.CONTACT_POINT_TYPE = 'EMAIL'
        AND HCP.PRIMARY_FLAG = 'Y')
         WHEN (select count(party_id)
                 from HZ_ORGANIZATION_PROFILES
                where party_id = DHA.SOLD_TO_PARTY_ID
                  and EXTN_ATTRIBUTE_CHAR076 is not null) = 0 then (SELECT 'Email ID: '||MAX(hcp.EMAIL_ADDRESS)
                                                                      FROM HZ_CONTACT_POINTS HCP,
                                                                           HZ_PARTIES HP
                                                                     WHERE HP.PARTY_ID = DHA.SOLD_TO_PARTY_ID
                                                                       AND HCP.OWNER_TABLE_ID = HP.PREFERRED_CONTACT_PERSON_ID
                                                                       AND HCP.CONTACT_POINT_TYPE = 'EMAIL'
                                                                       AND HCP.PRIMARY_FLAG = 'Y') else ' ' END GDPR_EMAIL,
    CASE WHEN (select count(party_id)
                 from HZ_ORGANIZATION_PROFILES
                where party_id = DHA.SOLD_TO_PARTY_ID
                  and EXTN_ATTRIBUTE_CHAR076 is not null) > 0
          and (select max(EXTN_ATTRIBUTE_CHAR076)
                 from HZ_ORGANIZATION_PROFILES
                where party_id = DHA.SOLD_TO_PARTY_ID) IN ('PRTL', 'APRVD') THEN
    (SELECT 'Phone No.: '||MAX(hcp.RAW_PHONE_NUMBER)
       FROM HZ_CONTACT_POINTS HCP,
            HZ_PARTIES HP
      WHERE HP.PARTY_ID = DHA.SOLD_TO_PARTY_ID
        AND HCP.OWNER_TABLE_ID = HP.PREFERRED_CONTACT_PERSON_ID
        AND HCP.CONTACT_POINT_TYPE = 'PHONE'
        AND HCP.PRIMARY_FLAG = 'Y')
         WHEN (select count(party_id)
                 from HZ_ORGANIZATION_PROFILES
                where party_id = DHA.SOLD_TO_PARTY_ID
                  and EXTN_ATTRIBUTE_CHAR076 is not null) = 0 then (SELECT 'Phone No.: '||MAX(hcp.RAW_PHONE_NUMBER)
                                                                       FROM HZ_CONTACT_POINTS HCP,
                                                                            HZ_PARTIES HP
                                                                      WHERE HP.PARTY_ID = DHA.SOLD_TO_PARTY_ID
                                                                        AND HCP.OWNER_TABLE_ID = HP.PREFERRED_CONTACT_PERSON_ID
                                                                        AND HCP.CONTACT_POINT_TYPE = 'PHONE'
                                                                        AND HCP.PRIMARY_FLAG = 'Y') else ' ' END GDPR_PHONE,
        (CASE WHEN (select count(party_id)
                 from HZ_ORGANIZATION_PROFILES
                where party_id = DHA.SOLD_TO_PARTY_ID
                  and EXTN_ATTRIBUTE_CHAR076 is not null) > 0
          and (select max(EXTN_ATTRIBUTE_CHAR076)
                 from HZ_ORGANIZATION_PROFILES
                where party_id = DHA.SOLD_TO_PARTY_ID) IN ('PRTL', 'APRVD') THEN
    (SELECT Z4.REGISTRATION_NUMBER
       FROM HZ_PARTIES Z1,
            HZ_PARTY_SITES Z2,
            ZX_PARTY_TAX_PROFILE Z3,
            ZX_REGISTRATIONS Z4
      WHERE 1 = 1
        AND Z1.PARTY_ID = Z2.PARTY_ID
        AND Z4.REGISTRATION_NUMBER IS NOT NULL
        AND Z2.PARTY_SITE_ID = Z3.PARTY_ID
        AND Z3.PARTY_TAX_PROFILE_ID = Z4.PARTY_TAX_PROFILE_ID
        AND Z1.PARTY_ID = SC.SC_PARTY_ID
        AND Z2.PARTY_SITE_ID = SC.SC_PARTY_SITE_ID
        AND Z4.TAX_REGIME_CODE NOT LIKE '%TDS%'
        AND Z4.TAX_REGIME_CODE = 'GST_REGIME_JAQ'
        AND TRUNC(SYSDATE) BETWEEN TRUNC(Z4.EFFECTIVE_FROM) AND TRUNC(NVL(Z4.EFFECTIVE_TO,SYSDATE))
        AND ROWNUM = 1)
         WHEN (select count(party_id)
                 from HZ_ORGANIZATION_PROFILES
                where party_id = DHA.SOLD_TO_PARTY_ID
                  and EXTN_ATTRIBUTE_CHAR076 is not null) = 0 THEN
    (SELECT Z4.REGISTRATION_NUMBER
       FROM HZ_PARTIES Z1,
            HZ_PARTY_SITES Z2,
            ZX_PARTY_TAX_PROFILE Z3,
            ZX_REGISTRATIONS Z4
      WHERE 1 = 1
        AND Z1.PARTY_ID = Z2.PARTY_ID
        AND Z4.REGISTRATION_NUMBER IS NOT NULL
        AND Z2.PARTY_SITE_ID = Z3.PARTY_ID
        AND Z3.PARTY_TAX_PROFILE_ID = Z4.PARTY_TAX_PROFILE_ID
        AND Z1.PARTY_ID = SC.SC_PARTY_ID
        AND Z2.PARTY_SITE_ID = SC.SC_PARTY_SITE_ID
        AND Z4.TAX_REGIME_CODE NOT LIKE '%TDS%'
        AND Z4.TAX_REGIME_CODE = 'GST_REGIME_JAQ'
        AND TRUNC(SYSDATE) BETWEEN TRUNC(Z4.EFFECTIVE_FROM) AND TRUNC(NVL(Z4.EFFECTIVE_TO,SYSDATE))
        AND ROWNUM = 1) ELSE ' ' END) SC_GSTIN,
    (CASE WHEN (select count(party_id)
                 from HZ_ORGANIZATION_PROFILES
                where party_id = DHA.SOLD_TO_PARTY_ID
                  and EXTN_ATTRIBUTE_CHAR076 is not null) > 0
          and (select max(EXTN_ATTRIBUTE_CHAR076)
                 from HZ_ORGANIZATION_PROFILES
                where party_id = DHA.SOLD_TO_PARTY_ID) IN ('PRTL', 'APRVD') THEN
    (SELECT Z4.REGISTRATION_NUMBER
       FROM HZ_PARTIES Z1,
            HZ_PARTY_SITES Z2,
            ZX_PARTY_TAX_PROFILE Z3,
            ZX_REGISTRATIONS Z4
      WHERE 1 = 1
        AND Z1.PARTY_ID = Z2.PARTY_ID
        AND Z4.REGISTRATION_NUMBER IS NOT NULL
        AND Z2.PARTY_SITE_ID = Z3.PARTY_ID
        AND Z3.PARTY_TAX_PROFILE_ID = Z4.PARTY_TAX_PROFILE_ID
        AND Z1.PARTY_ID = BC.BC_PARTY_ID
        AND Z2.PARTY_SITE_ID = BC.BC_PARTY_SITE_ID
        AND Z4.TAX_REGIME_CODE NOT LIKE '%TDS%'
        AND Z4.TAX_REGIME_CODE = 'GST_REGIME_JAQ'
        AND TRUNC(SYSDATE) BETWEEN TRUNC(Z4.EFFECTIVE_FROM) AND TRUNC(NVL(Z4.EFFECTIVE_TO,SYSDATE))
        AND ROWNUM = 1)
          WHEN (select count(party_id)
                 from HZ_ORGANIZATION_PROFILES
                where party_id = DHA.SOLD_TO_PARTY_ID
                  and EXTN_ATTRIBUTE_CHAR076 is not null) = 0 THEN
    (SELECT Z4.REGISTRATION_NUMBER
       FROM HZ_PARTIES Z1,
            HZ_PARTY_SITES Z2,
            ZX_PARTY_TAX_PROFILE Z3,
            ZX_REGISTRATIONS Z4
      WHERE 1 = 1
        AND Z1.PARTY_ID = Z2.PARTY_ID
        AND Z4.REGISTRATION_NUMBER IS NOT NULL
        AND Z2.PARTY_SITE_ID = Z3.PARTY_ID
        AND Z3.PARTY_TAX_PROFILE_ID = Z4.PARTY_TAX_PROFILE_ID
        AND Z1.PARTY_ID = BC.BC_PARTY_ID
        AND Z2.PARTY_SITE_ID = BC.BC_PARTY_SITE_ID
        AND Z4.TAX_REGIME_CODE NOT LIKE '%TDS%'
        AND Z4.TAX_REGIME_CODE = 'GST_REGIME_JAQ'
        AND TRUNC(SYSDATE) BETWEEN TRUNC(Z4.EFFECTIVE_FROM) AND TRUNC(NVL(Z4.EFFECTIVE_TO,SYSDATE))
        AND ROWNUM = 1) ELSE ' ' END) BC_GSTIN,
        SC.SHIP_ADDRESS,
        BC.BILL_ADDRESS
  from doo_headers_all dha
       ,doo_lines_all dla
       ,doo_fulfill_lines_all dfla
       ,egp_system_items_v esi
       ,hr_operating_units hou
       ,ra_terms n
       ,hz_cust_accounts hca
       ,(select distinct hle.hle_name ou_name,
                ou.organization_id, 
                lo.address_line_1,
                lo.address_line_2,
                lo.town_or_city,
                lo.region_2,
                ft.territory_short_name country,
               (lo.address_line_1||', '||lo.address_line_2||', '
               ||lo.town_or_city||', '||lo.region_2||', '||ft.territory_short_name) address
          from hr_operating_units ou,
               hr_locations lo,
               fnd_territories_vl ft,
               hr_all_organization_units haou,
               (select max(hle.name) hle_name,hle.legal_entity_id
                  from hr_legal_entities hle
                 group by hle.legal_entity_id) hle
         where 1 = 1
           and ou.organization_id = haou.organization_id
           and hle.legal_entity_id = ou.default_legal_context_id
           and haou.location_id = lo.location_id
           and ou.organization_id = haou.organization_id
           and lo.country = ft.territory_code)aa
       ,(select hp.party_name,
                hp.category_code,
                hca.account_number,
                hp.party_id SC_PARTY_ID,
                null site_use_id,
                hps.party_site_id SC_PARTY_SITE_ID,
                hcas.cust_account_id,
                hcas.cust_acct_site_id,
                null site_use_code,
                hl.location_id,
                hl.address1,
                hl.address2,
                hl.address3,
                hl.address4,
                hl.city,
                hl.state,
                hl.postal_code,
                ft.territory_short_name country,
                hp.jgzz_fiscal_code,
                dha.source_order_number,
                dha.header_id,
            ( decode(hl.address1,'','',hl.address1||', ')||
              decode(hl.address2,'','',hl.address2||', ')||
              decode(hl.address3,'','',hl.address3||', ')||
              decode(hl.address4,'','',hl.address4||', ')||chr(10)||
              decode(hl.city,'','',hl.city)||decode(hl.postal_code,'','',' - '||hl.postal_code||', ')||
              decode(hl.state,'','',hl.state||', ')||ft.territory_short_name ) SHIP_address
          from hz_parties hp,
               hz_parties hp_ship,
               doo_headers_all dha,
               doo_order_addresses doa,
               hz_cust_accounts hca,
               hz_cust_acct_sites_all hcas,
               hz_party_sites hps,
               hz_locations hl,
               fnd_territories_vl ft
         where hp.party_id = dha.sold_to_party_id
           and dha.header_id = doa.header_id(+)
           and (doa.address_use_type = 'SHIP_TO'
                or doa.address_use_type is null)
           and doa.party_site_id = hps.party_site_id(+)
           and hcas.party_site_id(+) = hps.party_site_id
           and hps.party_id = hp_ship.party_id(+)
           and hcas.cust_account_id = hca.cust_account_id(+)
           and hps.location_id = hl.location_id(+)
           --and dha.status_code NOT IN ('DOO_REFERENCE','CANCELED','DOO_DRAFT')
           and dha.request_cancel_date is null
           and dha.order_type_code not in ('Sales_Return')
           and hl.country = ft.territory_code) sc
      ,(select hp.party_name,
               hp.category_code,
               hca.account_number,
               hp.party_id BC_PARTY_ID,
               hcs.site_use_id,
               hps.party_site_id BC_PARTY_SITE_ID,
               hcas.cust_account_id,
               hcas.cust_acct_site_id,
               hcs.site_use_code,
               hl.location_id,
               hl.address1,
               hl.address2,
               hl.address3,
               hl.address4,
               hl.city,
               hl.state,
               hl.postal_code,
               ft.territory_short_name country,
               hp.jgzz_fiscal_code,
            ( decode(hl.address1,'','',hl.address1||', ')||
              decode(hl.address2,'','',hl.address2||', ')||
              decode(hl.address3,'','',hl.address3||', ')||
              decode(hl.address4,'','',hl.address4||', ')||chr(10)||
              decode(hl.city,'','',hl.city)||decode(hl.postal_code,'','',' - '||hl.postal_code||', ')||
              decode(hl.state,'','',hl.state||', ')||ft.territory_short_name ) bill_address
          from hz_parties hp,
               hz_party_sites hps,
               hz_cust_accounts hca,
               hz_cust_acct_sites_all hcas,
               hz_cust_site_uses_all hcs,
               hz_locations hl,
               fnd_territories_vl ft
         where     1 = 1
               and hp.party_id = hca.party_id
               and hp.party_id = hps.party_id
               and hps.party_site_id = hcas.party_site_id
               and hca.cust_account_id = hcas.cust_account_id
               and hcas.cust_acct_site_id =
                      hcs.cust_acct_site_id
               and hps.location_id = hl.location_id
               and hl.country = ft.territory_code) bc,
         (select cba.bank_account_name bank_name,
                ', EEFC ACCOUNT NO. '||cba.bank_account_num||
                ' FOR' acc_no,
               (case when cabv.site_address_line1 is null then '' else cabv.site_address_line1||', ' end ||
                case when cabv.site_address_line2 is null then '' else cabv.site_address_line2||', ' end ||
                case when cabv.site_address_line3 is null then '' else cabv.site_address_line3||', ' end ||
                case when cabv.site_address_line4 is null then '' else cabv.site_address_line4||', ' end ||
                case when cabv.site_city is null then '' else cabv.site_city||', ' end ||
                case when cabv.site_state is null then '' else cabv.site_state||', ' end ||
                case when cabv.site_zip is null then '' else cabv.site_zip||', ' end ||
                case when ft.territory_short_name is null then '' else ft.territory_short_name end )
                bank_address,
                cba.account_owner_org_id,
                cbu.org_id
           from ce_bank_accounts cba,
                ce_bank_acct_uses_all cbu,
                ce_all_banks_v cabv,
                fnd_territories_vl ft   
          where cbu.bank_account_id=cba.bank_account_id
            and cba.bank_id=cabv.pk_id
            and cba.bank_id=cabv.bank_party_id
            and site_country= ft.territory_code
            and cba.description='EEFC ACCOUNT'
                ) bank,
        (select aa.header_id,
                nvl((select fl.description
                   from fnd_lookups fl
                  where fl.lookup_type = 'WSH_MODE_OF_TRANSPORT'
                    and fl.enabled_flag='Y'
                    and fl.meaning=aa.attribute_char4),aa.attribute_char4) pre_carriage_by,
                (select ft.territory_short_name
                   from fnd_territories_vl ft
                  where ft.territory_code=aa.attribute_char1) country_of_origin,
                NVL((select fl.description
                       from fnd_lookups fl
                      where fl.lookup_type= 'XXFILIX_PORT_OF_LOADING'
                        and fl.enabled_flag='Y'
                        and fl.lookup_code=aa.attribute_char2),aa.attribute_char2) port_of_loading,
                (select fl.description
                   from fnd_lookups fl
                  where fl.lookup_type= 'XXFILIX_PORT_OF_LOADING'
                    and fl.enabled_flag='Y'
                    and fl.lookup_code=aa.attribute_char3) port_of_discharge,
                aa.attribute_char7 header_remarks
           from doo_headers_eff_b aa
          where context_code = 'Export Details') hdff,
        (select header_id,
                line_id,
                attribute_char1 line_remarks
           from doo_lines_eff_b) ldff,
      (SELECT SUM(HEADER_CURRENCY_EXT_AMOUNT) HDR_AMT,
            HEADER_ID
        FROM DOO_ORDER_PRICING_DETAILS_V
        WHERE PRICE_ELEMENT_USAGE_CODE in ('LIST_PRICE', 'PRICE_ADJUSTMENT', 'EXCLUSIVE_TAX', 'INCLUSIVE_TAX')
        GROUP BY HEADER_ID ) HDR_AMT                  
 where dha.header_id = dla.header_id
   and dha.header_id = dfla.header_id
   and dla.line_id = dfla.line_id
   and dha.org_id = hou.organization_id
   --and dha.open_flag = 'Y'
   and dha.change_version_number = (select max(dha1.change_version_number)
                                      from doo_headers_all dha1
                                     where dha1.header_id=dha.header_id)
   and dha.status_code NOT IN ('DOO_REFERENCE','CANCELED')  --,'DOO_DRAFT')
   and dha.request_cancel_date is null
   and dha.order_type_code not in ('Sales_Return')
   and hou.organization_id = aa.organization_id
   and dla.inventory_organization_id = esi.organization_id
   and dla.inventory_item_id = esi.inventory_item_id
   and dha.sold_to_party_id = sc.SC_party_id(+)
   and dfla.ship_to_party_site_id = sc.SC_party_site_id(+)
   and dha.header_id = sc.header_id(+)
   and dfla.bill_to_site_use_id = bc.site_use_id(+)
   and dha.legal_entity_id = bank.account_owner_org_id(+)
   and dha.org_id=bank.org_id(+)
   and dha.header_id = hdff.header_id(+)
   and dfla.header_id = ldff.header_id(+)
   and dfla.line_id = ldff.line_id(+)
   and dha.sold_to_party_id = hca.party_id
   and doo_cross_reference.getfulfillmentvalue('TERM_ID','PAYMENT_TERMS',dha.payment_term_id)=n.term_id(+)
   and (nvl(sc.country,'A') in (:p_country) or 'All' in (:p_country || 'All'))
   and (nvl(upper(sc.state),'A') in (:p_state) or 'All' in (:p_state || 'All'))
   and (nvl(sc.city,'A') in (:p_city) or 'All' in (:p_city || 'All'))
   and (sc.party_name in (:p_cust) or 'All' in (:p_cust || 'All'))
   and trunc(dha.ordered_date) >= nvl(:p_from_date, trunc(dha.ordered_date))
   and trunc(dha.ordered_date) <= nvl(:p_to_date, trunc(dha.ordered_date))
   and (hou.organization_id in (:p_org) or 'All' in (:p_org || 'All'))
   and (dfla.status_code in (:p_status) or 'All' in (:p_status || 'All'))
   and (dha.order_type_code in (:p_order_type) or 'All' in (:p_order_type || 'All'))
   and dha.order_number = nvl(:p_pi_no,dha.order_number)
   and (nvl(hca.attribute6,'No') in (:p_jw_cust) or 'All' in (:p_jw_cust || 'All'))
   and (dha.header_id in ( SELECT d.header_id
                            FROM doo_sales_credits d,
                                 ra_salesreps rs
                           WHERE d.salesperson_id = rs.party_id
                             and rs.NAME IN (:p_salesperson) ) or :p_salesperson is null)
   AND DHA.HEADER_ID = HDR_AMT.HEADER_ID          
 order by to_number(dha.order_number) desc
 
 --Q2_DISC
 select header_currency_ext_amount disc_amt,
       fulfill_line_id,
       (select max(qpt.name)
          from qp_pricing_terms_b qpb,
               qp_pricing_terms_tl qpt,
               qp_matrix_rules_vl qmr
         where qpb.pricing_term_id = qpt.pricing_term_id
           and qpt.language = 'US'
           and qpb.attribute_pricing_matrix_id = qmr.dynamic_matrix_id
           and dynamic_matrix_rule_id = pricing_source_id) disc_name
  from doo_order_pricing_details_v
 where 1 = 2
   and price_element_usage_code = 'PRICE_ADJUSTMENT'
 order by fulfill_line_id, order_charge_id, pricing_source_id
 
 --TAX
 SELECT HEADER_ID, Z_TAX ||' '||PERCENTAGE_RATE||'%' IGST_RATE, SUM(IGST_VALUE) IGST_VALUE
  FROM(
  SELECT  DHA.HEADER_ID,
	  (case :v_lang when 'it_IT' then (case when upper(ZR.TAX) = 'VAT_ITALY' then 'IVA_ITALIA' else ZR.TAX end)	
	  when 'pl-PL' then (case when upper(ZR.TAX) = 'VAT_POL' then 'VAT_POL' else ZR.TAX end)
	  else (ZR.TAX)
	  end) Z_TAX, ZR.PERCENTAGE_RATE,
--	  ||' '||ZR.PERCENTAGE_RATE||'%' IGST_RATE,
        (DFL.ORDERED_QTY * DOTD.HDR_CURR_TAX_UNIT_AMT) IGST_VALUE
   FROM DOO_FULFILL_LINES_ALL DFL,
        DOO_ORDER_CHARGES DOO,
        DOO_ORDER_CHARGE_COMPONENTS DOCC,
        DOO_ORDER_TAX_DETAILS DOTD,
        ZX_RATES_B ZR,
        DOO_HEADERS_ALL DHA
  WHERE DFL.FULFILL_LINE_ID = DOO.PARENT_ENTITY_ID
    AND DOO.ORDER_CHARGE_ID = DOCC.ORDER_CHARGE_ID
    AND DOCC.ORDER_CHARGE_COMPONENT_ID = DOTD.ORDER_CHARGE_COMPONENT_ID
    AND DOTD.TAX_RATE_ID = ZR.TAX_RATE_ID
   and dha.change_version_number = (select max(dha1.change_version_number)
                                      from doo_headers_all dha1
                                     where dha1.header_id=dha.header_id)
   and dha.status_code NOT IN ('DOO_REFERENCE','CANCELED'/*,'DOO_DRAFT'*/)
   and dha.request_cancel_date is null
   and dha.order_type_code not in ('Sales_Return')
    AND DHA.HEADER_ID = DFL.HEADER_ID
--    and nvl(:SHIP_COUNTRY,'A') = NVL(:EXP_COUNTRY,'A')
) DT
    GROUP BY HEADER_ID, Z_TAX ||' '||PERCENTAGE_RATE||'%'

--CHARGES
select header_id, 
(case :v_lang 
when 'it_IT' then 'Spese di trasporto'
when 'pl-PL' then 'Koszty transportu' 
else 'Freight charges' 
end) tax_rate,
       to_number(attribute_number4) freight_charges
  from doo_headers_eff_b
 where context_code='ExportsChargesDiscount'
-- and nvl(:SHIPTO_COUNTRY,'A') = NVL(:CONSIGNEE_COUNTRY,'A')
AND NVL(attribute_number4,0) > 0
union all
select header_id, 
(case :v_lang 
when 'it_IT' then 'Spese di documentazione' 
when 'pl-PL' then 'Opłaty za dokumentację' 
else 'Documentation charges' 
end) tax_rate,
       to_number(attribute_number6) document_charges
  from doo_headers_eff_b
 where context_code='ExportsChargesDiscount'
-- and nvl(:SHIPTO_COUNTRY,'A') = NVL(:CONSIGNEE_COUNTRY,'A')
AND NVL(attribute_number6,0) > 0
union all
select header_id, 
(case :v_lang 
when 'it_IT' then 'Spese assicurative'
when 'pl-PL' then 'Opłaty ubezpieczeniowe' 
else 'Insurance charges' 
end) tax_rate,
       to_number(attribute_number5) insurance_charges
  from doo_headers_eff_b
 where context_code='ExportsChargesDiscount'
-- and nvl(:SHIPTO_COUNTRY,'A') = NVL(:CONSIGNEE_COUNTRY,'A')
AND NVL(attribute_number5,0) > 0
union all
select header_id, 
(case :v_lang 
when 'it_IT' then 'Spese di ispezione' 
when 'pl-PL' then 'Opłaty inspekcyjne' 
else 'Inspection charges' 
end) tax_rate,
       to_number(attribute_number7) inspection_charges
  from doo_headers_eff_b
 where context_code='ExportsChargesDiscount'
-- and nvl(:SHIPTO_COUNTRY,'A') = NVL(:CONSIGNEE_COUNTRY,'A')
AND NVL(attribute_number7,0) > 0
union all
select header_id, 
(case :v_lang 
when 'it_IT' then 'Spese di installazione' 
when 'pl-PL' then 'Opłaty instalacyjne' 
else 'Installation charges' 
end) tax_rate,
       to_number(attribute_number8) inspection_charges
  from doo_headers_eff_b
 where context_code='ExportsChargesDiscount'
-- and nvl(:SHIPTO_COUNTRY,'A') = NVL(:CONSIGNEE_COUNTRY,'A')
AND NVL(attribute_number8,0) > 0
==========================================================================================================================
-------------------------------------------------------------------------Journals Batch Summary Data Model---------------------------------------------------------
select  &BALANCING_SEG_ORDERBY          Bal_Seg,
        PS.start_date                   Period_Date,
	PS.period_name                  Period,
	JEB.name                        Name,
	JEB.posted_date                 Posted_date,
	JEB.creation_date               Created_date,
        JEB.created_by                  BATCH_CREATED_BY,
        JEB.last_updated_by             BATCH_LAST_UPDATED_BY,
        JEB.last_update_date            BATCH_LAST_UPDATE_DATE,
        JEB.last_update_login           BATCH_LAST_UPDATE_LOGIN,
	min(gl_journals_batch_rpt_pkg.batch_type(JEB.actual_flag)) Batch_Type,
	SRC.user_je_source_name         Source,
	JEH.doc_sequence_value          Seq_Value,
	min(decode(JEH.actual_flag, 'A', null, 'E', gl_journals_batch_rpt_pkg.enc_type(JEH.encumbrance_type_id))) Encumbrance_Type,
	CAT.user_je_category_name       Category,
	L.name                          LedgerName,
	L.CURRENCY_CODE                 LedgerCurrency,
	--&DEB_SELECT                     Debit,
	--&CRE_SELECT                     Credit,
	SUM(nvl(JEL.entered_dr,0))      Debit,
	SUM(nvl(JEL.entered_cr,0))      Credit,
	&FOR_BAL_SEG                    For_Bal_Seg,
	&FOR_COMP_NAME                  For_Comp_Name
from	GL_PERIOD_STATUSES   PS,
	GL_JE_HEADERS        JEH,
	GL_JE_LINES          JEL,
	GL_CODE_COMBINATIONS CC,
	GL_JE_BATCHES        JEB,
	GL_JE_CATEGORIES     CAT,
	GL_JE_SOURCES        SRC,
	GL_LEDGERS           L,
	&LEDGER_FROM
	gl_daily_conversion_types gdct
where
	PS.APPLICATION_ID = 101 
and     PS.LEDGER_ID = JEH.LEDGER_ID 
and     ( :C_START_DATE between PS.start_date and PS.end_date  or  
          :C_END_DATE between PS.start_date and PS.end_date    or   
	  (  PS.start_date >= :C_START_DATE and  PS.end_date <= :C_END_DATE )              
	)
and           JEH.period_name      =  PS.period_name
and			  JEH.status           = 'P'
--and           JEH.actual_flag      = 'A'
and           JEH.ledger_id        = L.ledger_id
and      JEL.period_name           =  JEH.period_name
and      JEL.je_header_id          =  JEH.je_header_id
and      JEL.status                = 'P'
and      JEL.effective_date between :C_START_DATE and :C_END_DATE
and      CC.code_combination_id   =  JEL.code_combination_id
and      CC.summary_flag          =  'N'
and      CC.template_id is null
and      CC.chart_of_accounts_id  = :STRUCT_NUM
and      CC.detail_posting_allowed_flag = 'Y'
--and      JEB.je_batch_id = decode(CC.code_combination_id, NULL, JEH.je_batch_id, JEH.je_batch_id) -- rrajarap
and      JEB.je_batch_id = JEH.je_batch_id -- rrajarap
--and      CAT.je_category_name = decode(CC.code_combination_id, NULL, JEH.je_category, JEH.je_category)  -- rrajarap
and      CAT.je_category_name = JEH.je_category  -- rrajarap
--and      SRC.je_source_name = decode(CC.code_combination_id, NULL, JEH.je_source, JEH.je_source) -- rrajarap
and      SRC.je_source_name = JEH.je_source -- rrajarap 
/* Fusion initiative multi currency change starts */ 
and  gdct.conversion_type = JEL.currency_conversion_type
/*changed from JEH.currency_conversion_type to JEL.currency_conversion_type. bug 	9198433
/* Fusion initiative multi currency change ends */
AND 'Y' != &P_FISCAL_ADJ_FLAG
AND &C_WHERE_PERIOD
AND &ACCESS_WHERE
AND &LEDGER_WHERE
AND JEL.CURRENCY_CODE = :P_CURRENCY_CODE   -- rrajarap bug # 9195217
AND &BALANCING_SEG_WHERE
AND &BAL_SECURE = 'N'
GROUP BY  &BALANCING_SEG_ORDERBY, --&BALANCING_SEG modified to &BALANCING_SEG_ORDERBY fix for bug # 9195198
          &FOR_BAL_SEG,
          &FOR_COMP_NAME,
          --&BAL_SECURE, Bug 32172497
          PS.start_date,
          PS.period_name,
          CAT.user_je_category_name,
          JEB.name,
          JEB.actual_flag,
          SRC.user_je_source_name,
          JEH.doc_sequence_value,
          JEH.encumbrance_type_id,
          JEB.creation_date,
          JEB.posted_date,
          JEB.created_by,
          JEB.last_updated_by,
          JEB.last_update_date,
          JEB.last_update_login,
          L.name,
          L.currency_code
	  --,&BALANCING_SEG_ORDERBY
order by  L.name,
          &BALANCING_SEG_ORDERBY,
          PS.start_date,
          CAT.user_je_category_name,
          JEB.name
==========================================================================================================================
-------------------------------------------------------------Journals Data Model----------------------------------------------------------------------------
WITH action_user AS (SELECT MAX(action_date) action_date,
                                                   MAX(display_name) display_name,
                                                   action_code,
                                                   je_batch_id
                                              FROM gl_je_action_log l, 
                                                   per_users u, 
                                                   per_person_names_f_v n		
                                             WHERE LOWER(l.user_id) = LOWER(u.username)
                                               AND n.person_id = u.person_id
                                          GROUP BY je_batch_id,
                                                   action_code),
                             funds_desc AS  (SELECT meaning
                                                  ,lookup_code
                                              FROM fnd_lookup_values_vl
                                             WHERE lookup_type = 'XCC_BC_FUNDS_STATUSES')
                             &FLEX_SEG_WITH
        SELECT
        S.user_je_source_name                   Source,
        B.name                                  Batch_Name,
        to_char(B.default_effective_date, 'YYYY-MM-DD"T"HH24:MI:SS')  Batch_Eff_date,
        B.je_batch_id                           Batch_Id,
--        B.actual_flag                           Actual_Flag,        
        funds_status.meaning                    Funds_Status,
        B.average_journal_flag                  Average_Journal_Flag,
        NVL(au_created.display_name,B.created_by)                 BATCH_CREATED_BY_NAME, 
        NVL(au_created.action_date,B.creation_date)               BATCH_CREATED_DATE,
        DECODE(B.status, 'P', au_posted.display_name, null)     BATCH_POSTED_BY, 
        DECODE(B.status, 'P', NVL(au_posted.action_date,B.posted_date), null) Batch_Posted_Date,
		LK.meaning                              BATCH_APPROVAL_STATUS,
        DECODE(B.approval_status_code, 'A' ,au_approved.display_name, null)    BATCH_APPROVED_BY, 
        DECODE(B.approval_status_code, 'A' ,au_approved.action_date, null)      BATCH_APPROVED_DATE,        
        B.created_by                            BATCH_CREATED_BY,
        B.creation_date                         BATCH_CREATION_DATE,
        B.last_updated_by                       BATCH_LAST_UPDATED_BY,
        B.last_update_date                      BATCH_LAST_UPDATE_DATE,
        B.last_update_login                     BATCH_LAST_UPDATE_LOGIN,
        D.je_header_id                          Header_id,
        D.name                                  Header_Name,
        L.name                                  Ledger_Name,
        L.currency_code                         Ledger_Currency,
        C.user_je_category_name                 Category,
        D.currency_code                         Entered_currency,
        D.external_reference                    Header_Reference,
        to_char(D.currency_conversion_date, 'YYYY-MM-DD"T"HH24:MI:SS')  Conversion_Date,
        D.currency_conversion_type              Conversion_Type,
        ROUND(D.currency_conversion_rate, 6)    Conversion_Rate,
        DECODE(:P_ACTUAL_FLAG, 'A', null, 'E', NVL(:ENCUMBRANCE_TYPE_PARAM, gl_journals_rpt_pkg.enc_type(D.encumbrance_type_id))) Encumbrance_Type,
        J.currency_code                         Line_Currency,
        to_char(J.currency_conversion_date, 'YYYY-MM-DD"T"HH24:MI:SS') Line_Conversion_date,
        J.currency_conversion_type              Line_Conversion_Type,
        ROUND(J.currency_conversion_rate, 6)    Line_Conversion_Rate,
        J.je_line_num                           Je_Line_Num,
        j.entered_dr                            line_ent_dr,
        j.entered_cr                            line_ent_cr,
        j.accounted_dr                          line_acc_dr,
        j.accounted_cr                          line_acc_cr,
        J.description                           Line_Description,
        to_char(J.effective_date, 'YYYY-MM-DD"T"HH24:MI:SS') Line_Effective_Date,
        J.reference_1                           reference1_line_item,
        J.reference_2                           reference2,
        J.reference_3                           reference3,
        J.reference_4                           reference4_source_item,
        J.reference_5                           reference5,
        J.reference_6                           reference6,
        J.reference_7                           reference7,
        J.reference_8                           reference8,
        J.reference_9                           reference9,
        J.reference_10                          reference10,
        nvl(J.stat_amount,0)                    Line_Stat_Amount,
        &ACCOUNT_FLEX                           FLEXDATA_DSP
FROM
/*        gl_daily_conversion_types       GDCT,*/
        gl_je_sources                   S,
        gl_je_categories                C,
        gl_je_lines                     J,
        gl_code_combinations            CC,
        gl_je_headers                   D,
        gl_je_batches                   B,
        &LEDGER_FROM
        gl_ledgers                      L,
        gl_lookups                      LK,
        action_user                     au_created,
        action_user                     au_posted,
        action_user                     au_approved,
        funds_desc                      funds_status
        &FLEX_SEG_FROM
WHERE
        S.je_source_name        = D.je_source
/*AND     GDCT.conversion_type    = J.currency_conversion_type*/
AND     C.je_category_name      = D.je_category
AND     J.code_combination_id   = CC.code_combination_id
AND     J.je_header_id          = D.je_header_id
AND     (D.display_alc_journal_flag is null or D.display_alc_journal_flag = 'Y')
AND     D.je_batch_id           = B.je_batch_id
AND     L.ledger_id             = D.LEDGER_ID
AND     LK.lookup_type = 'JE_BATCH_APPROVAL_STATUS'
AND     LK.lookup_code = B.approval_status_code
AND     B.actual_flag           = :P_ACTUAL_FLAG   
AND     au_created.je_batch_id(+) = B.je_batch_id
AND     au_created.action_code(+) = 'CREATED'
AND     au_posted.je_batch_id(+) = B.je_batch_id
AND     au_posted.action_code(+) = 'POSTED'
AND     au_approved.je_batch_id(+) = B.je_batch_id
AND     au_approved.action_code(+) = 'APPROVED'
AND     funds_status.lookup_code(+) =B.funds_status_code     
        &JRNL_SOURCE_WHERE
	    &BATCH_NAME_WHERE
        &CURRENCY_WHERE /*bug 12327572*/ 
        &POSTING_STATUS_WHERE
        &PERIOD_WHERE
        &DAS_WHERE
        &LEDGER_WHERE
        &ENCUM_WHERE		
        &FLEX_SEG_WHERE
ORDER BY
          S.user_je_source_name,
          B.actual_flag,
          B.name,
          B.default_effective_date,
          L.name,
          D.name,
          J.je_line_num
============================================================================================================================
---------------------------------------------------------------------Journals Day Book Report----------------------------------------------------------------------
SELECT   &P_HINT_CLAUSE
    	LGR.NAME		LEDGER_NAME,
	LGR.CURRENCY_CODE	LEDGER_CURRENCY,
	LGR.LEDGER_ID		LEDGER_ID,
	GLB.JE_BATCH_ID		BATCH_ID,
    	GLB.NAME		BATCH_NAME,
	GLB.DESCRIPTION		BATCH_DESC,
	GLB.STATUS		BATCH_STATUS_CODE,
     	GLB.POSTED_DATE		BATCH_POSTED_DATE,
     	GLB.DEFAULT_PERIOD_NAME	BATCH_PERIOD_NAME,
     	to_char(GLB.DEFAULT_EFFECTIVE_DATE, 'YYYY-MM-DD"T"HH24:MI:SS') BATCH_EFFECTIVE_DATE,
        GLB.ACTUAL_FLAG			ACTUAL_FLAG,
	GLB.AVERAGE_JOURNAL_FLAG	AVERAGE_JOURNAL_FLAG,
	GLB.APPROVAL_STATUS_CODE	APPROVAL_STATUS_CODE,
	/*GLB.BUDGETARY_CONTROL_STATUS	BUD_CONTROL_STATUS,*//*commented by rchandan for fusion*/
	GLB.RUNNING_TOTAL_DR	BATCH_TOT_DR,
	GLB.RUNNING_TOTAL_CR	BATCH_TOT_CR,
	GLB.RUNNING_TOTAL_ACCOUNTED_DR	BATCH_TOT_ACC_DR,
	GLB.RUNNING_TOTAL_ACCOUNTED_CR	BATCH_TOT_ACC_CR,
	GLB.DATE_CREATED	BATCH_DATE_CREATED,
        GLB.CREATED_BY          BATCH_CREATED_BY,
        GLB.CREATION_DATE       BATCH_CREATION_DATE,
        GLB.LAST_UPDATED_BY     BATCH_LAST_UPDATED_BY,
        GLB.LAST_UPDATE_DATE    BATCH_LAST_UPDATE_DATE,
        GLB.LAST_UPDATE_LOGIN   BATCH_LAST_UPDATE_LOGIN,
        NVL(gl_journals_rpt_pkg.get_action_user(GLB.je_batch_id, 'CREATED'), GLB.created_by)	BATCH_CREATED_BY_NAME,
        DECODE(GLB.status, 'P', gl_journals_rpt_pkg.get_action_user(GLB.je_batch_id, 'POSTED'), null)	BATCH_POSTED_BY,
        DECODE(GLB.approval_status_code, 'A', gl_journals_rpt_pkg.get_action_user(GLB.je_batch_id, 'APPROVED'), null)	BATCH_APPROVED_BY,
	GLH.JE_HEADER_ID	HDR_ID,
	GLH.NAME		HDR_NAME,
	GLH.DESCRIPTION		HDR_DESC,
	GLH.TAX_STATUS_CODE	TAX_STATUS_CODE,
	GLH.RUNNING_TOTAL_DR	HDR_TOT_DR,
	GLH.RUNNING_TOTAL_CR	HDR_TOT_CR,
	GLH.RUNNING_TOTAL_ACCOUNTED_DR	HDR_TOT_ACC_DR,
	GLH.RUNNING_TOTAL_ACCOUNTED_CR	HDR_TOT_ACC_CR,
	GLH.CURRENCY_CODE 	HDR_CURR_CODE, 
	to_char(GLH.CURRENCY_CONVERSION_DATE, 'YYYY-MM-DD"T"HH24:MI:SS') HDR_CONVERSION_DATE, /*rchandan*/
	ROUND(GLH.CURRENCY_CONVERSION_RATE, 6)	HDR_CONVERSION_RATE, /*rchandan*/
	DECODE(GLH.CURRENCY_CONVERSION_TYPE, NULL, NULL, (SELECT d.user_conversion_type FROM GL_DAILY_CONVERSION_TYPES d WHERE d.conversion_type = GLH.currency_conversion_type))	HDR_CONVERSION_TYPE,
	/*GLH.BUDGET_VERSION_ID	BUDGET_VERSION_ID,*//*commented by rchandan for fusion*/
	/*GLH.ENCUMBRANCE_TYPE_ID	ENCUMBRANCE_TYPE_ID,*//*commented by rchandan for fusion*/
	GLH.EXTERNAL_REFERENCE	HDR_EXTREFERENCE,
	GLH.LAST_UPDATE_DATE	HDR_LAST_UPDATE_DATE,
	to_char(GLH.DEFAULT_EFFECTIVE_DATE, 'YYYY-MM-DD"T"HH24:MI:SS') HDR_EFF_DATE,
--        GLH.DOC_SEQUENCE_ID          DOC_SEQ_ID,
--	DOCSEQ.NAME		DOC_SEQ_NAME,
--	GLH.DOC_SEQUENCE_VALUE	DOC_SEQ_VALUE,
	GLH.LAST_UPDATED_BY		HDR_LAST_UPDATED_BY, /*rallamse bug 11729375 : replaced PPN.FULL_NAME*/
	FSV1.HEADER_NAME	ACCOUNTING_SEQ_NAME,
	FSV1.VERSION_NAME	ACCOUNTING_SEQ_VERSION,
	GLH.POSTING_ACCT_SEQ_VALUE	ACCOUNTING_SEQ_NUMBER,
	FSV2.HEADER_NAME	REPORTING_SEQ_NAME,
	FSV2.VERSION_NAME	REPORTING_SEQ_VERSION,
	GLH.CLOSE_ACCT_SEQ_VALUE	REPORTING_SEQ_NUMBER,
	to_char(GLH.REFERENCE_DATE, 'YYYY-MM-DD"T"HH24:MI:SS') REFERENCE_DATE,
	GJS.USER_JE_SOURCE_NAME	HDR_SOURCE,
	GJC.USER_JE_CATEGORY_NAME	HDR_CATEGORY,
        LE.NAME	LEGAL_ENTITY_NAME,
	GLL.JE_LINE_NUM		JE_LINE_NUM,
	GLL.CURRENCY_CODE 	LINE_CURR_CODE, /*rchandan*/
	to_char(GLL.CURRENCY_CONVERSION_DATE, 'YYYY-MM-DD"T"HH24:MI:SS') LINE_CONVERSION_DATE, /*rchandan*/
	ROUND(GLL.CURRENCY_CONVERSION_RATE, 6)	LINE_CONVERSION_RATE, /*rchandan*/
	DCT.USER_CONVERSION_TYPE	LINE_CONVERSION_TYPE,
	GLL.TAX_CODE_ID		TAX_CODE_ID,
	GLL.TAX_TYPE_CODE	TAX_TYPE_CODE,
	GLL.DESCRIPTION		LINE_DESC,
	GLL.ENTERED_DR		ENTERED_DR,
	GLL.ENTERED_CR		ENTERED_CR,
	GLL.ACCOUNTED_DR	ACCOUNTED_DR,
	GLL.ACCOUNTED_CR	ACCOUNTED_CR,
        (NVL(ACCOUNTED_DR,0)-NVL(ACCOUNTED_CR,0)) ACCOUNTED_NET,
	GLL.STAT_AMOUNT		STAT_AMOUNT,
	to_char(GLL.EFFECTIVE_DATE, 'YYYY-MM-DD"T"HH24:MI:SS') EFFECTIVE_DATE,
	GLL.REFERENCE_1		REFERENCE1,
	GLL.REFERENCE_2		REFERENCE2,
	GLL.REFERENCE_3		REFERENCE3,
	GLL.REFERENCE_4		REFERENCE4,
	GLL.REFERENCE_5		REFERENCE5,
	GLL.REFERENCE_6		REFERENCE6,
	GLL.REFERENCE_7		REFERENCE7,
	GLL.REFERENCE_8		REFERENCE8,
	GLL.REFERENCE_9		REFERENCE9,
	GLL.REFERENCE_10	REFERENCE10,
	SUBDOCSEQ.NAME		SUB_DOC_SEQ_NAME,
        GLL.SUBLEDGER_DOC_SEQUENCE_ID SUB_DOC_SEQ_ID,
	GLL.SUBLEDGER_DOC_SEQUENCE_VALUE	SUB_DOC_SEQ_VAL,
	RECON.JGZZ_RECON_REF	RECON_REF,
	GL_JOURNALS_EXP_RPT_PKG.get_lookup_value('M', RECON.JGZZ_RECON_STATUS, 'ORA_GL_LINE_RECON_STATUS') RECON_STATUS,
	RECON.JGZZ_RECON_ID	RECON_ID,
	to_char(RECON.JGZZ_RECON_DATE, 'YYYY-MM-DD"T"HH24:MI:SS') RECON_DATE,
	GL_JOURNALS_EXP_RPT_PKG.get_lookup_value('M', GLB.ACTUAL_FLAG, 'BATCH_TYPE') BATCH_TYPE,
	DECODE(GLB.STATUS,
		'P', GL_JOURNALS_EXP_RPT_PKG.get_lookup_value('M', GLB.STATUS, 'MJE_BATCH_STATUS'),
		'I', GL_JOURNALS_EXP_RPT_PKG.get_lookup_value('M', GLB.STATUS, 'MJE_BATCH_STATUS'),
		'S', GL_JOURNALS_EXP_RPT_PKG.get_lookup_value('M', GLB.STATUS, 'MJE_BATCH_STATUS'),
		'U', GL_JOURNALS_EXP_RPT_PKG.get_lookup_value('M', GLB.STATUS, 'MJE_BATCH_STATUS'),
		'u', GL_JOURNALS_EXP_RPT_PKG.get_lookup_value('M', GLB.STATUS, 'MJE_BATCH_STATUS'),
		NVL(ERROR_MESSAGE, GL_JOURNALS_EXP_RPT_PKG.get_lookup_value('M', GLB.STATUS, 'MJE_BATCH_STATUS'))) BATCH_STATUS,
	GL_JOURNALS_EXP_RPT_PKG.get_lookup_value('M', GLB.APPROVAL_STATUS_CODE, 'JE_BATCH_APPROVAL_STATUS') APPROVAL_STATUS,
	GL_JOURNALS_EXP_RPT_PKG.get_lookup_value('M', GLB.AVERAGE_JOURNAL_FLAG, 'AB_JOURNAL_TYPE') JRNL_TYPE,
        GL_JOURNALS_EXP_RPT_PKG.funds_status(GLB.funds_status_code) FUNDS_STATUS,
	GL_JOURNALS_EXP_RPT_PKG.get_lookup_value('M', GLH.TAX_STATUS_CODE, 'TAX_STATUS') TAX_STATUS,
	GL_JOURNALS_EXP_RPT_PKG.get_lookup_value('M', GLL.TAX_TYPE_CODE, 'TAX_TYPE') TAX_TYPE,
	GL_JOURNALS_EXP_RPT_PKG.tax_code(GLL.TAX_CODE_ID, GLL.TAX_TYPE_CODE) TAX_CODE,
	DECODE(:P_ACTUAL_FLAG, 'A', NULL, 'E', NVL(:PARAM_ENCUMBRANCE_TYPE, GL_JOURNALS_EXP_RPT_PKG.enc_type(GLH.ENCUMBRANCE_TYPE_ID))) ENCUMBRANCE_TYPE,
	&ACCOUNT ACCOUNT,
	&ACCOUNT_DESC ACCOUNT_DESC,
	&BALANCING_SEGMENT_VALUE	BALANCING_SEGMENT_VALUE,
	&BALANCING_SEGMENT_DESC		BALANCING_SEGMENT_DESC,
	&NATURAL_ACCT_SEGMENT_VAL	NATURAL_ACCT_SEGMENT_VAL,
	&NATURAL_ACCT_SEGMENT_DESC	NATURAL_ACCT_SEGMENT_DESC,
	&COST_CENTER_SEGMENT_VALUE	COST_CENTER_SEGMENT_VALUE,
	&COST_CENTER_SEGMENT_DESC	COST_CENTER_SEGMENT_DESC,
	DECODE(:P_SEC_SEG_NUM, null, null, &ADDITIONAL_SEGMENT_VALUE)	ADDITIONAL_SEGMENT_VALUE,
	DECODE(:P_SEC_SEG_NUM, null, null, &ADDITIONAL_SEGMENT_DESC)	ADDITIONAL_SEGMENT_DESC,
	GL_JOURNALS_EXP_RPT_PKG.contra_acct_value(GLH.JE_HEADER_ID, GLL.SUBLEDGER_DOC_SEQUENCE_ID, GLL.SUBLEDGER_DOC_SEQUENCE_VALUE, GLL.ACCOUNTED_DR, GLL.ACCOUNTED_CR) CONTRA_ACCT_VALUE,
	GL_JOURNALS_EXP_RPT_PKG.contra_acct_desc(GLH.JE_HEADER_ID, GLL.SUBLEDGER_DOC_SEQUENCE_ID, GLL.SUBLEDGER_DOC_SEQUENCE_VALUE, GLL.ACCOUNTED_DR, GLL.ACCOUNTED_CR) CONTRA_ACCT_DESC,
        GL_JOURNALS_EXP_RPT_PKG.begin_balance(&BALANCING_SEGMENT_VALUE,&NATURAL_ACCT_SEGMENT_VAL,DECODE(:P_SEC_SEG_NUM, null, null, &ADDITIONAL_SEGMENT_VALUE), LGR.LEDGER_ID, GLB.STATUS, GLH.ENCUMBRANCE_TYPE_ID) BEGIN_BALANCE
FROM
  &P_PERF_FROM
  &P_JOURNAL_FROM_CLAUSE
  &P_LEDGER_FROM
WHERE 
    fsv1.seq_version_id(+) = glh.posting_acct_seq_version_id
AND fsv2.seq_version_id(+) = glh.close_acct_seq_version_id
AND le.legal_entity_id (+) = glh.legal_entity_id
AND recon.je_header_id (+) = gll.je_header_id
AND recon.je_line_num (+) = gll.je_line_num
AND GLH.LEDGER_ID = LGR.LEDGER_ID
&P_LEDGER_WHERE
AND GLH.JE_SOURCE = GJS.JE_SOURCE_NAME
AND GLH.JE_CATEGORY  =  GJC.JE_CATEGORY_NAME
--  AND  GLH.LAST_UPDATED_BY = PP.USERNAME /*rallamse bug 11729375*/
--  AND ppn.person_id = pp.person_id       /*rallamse bug 11729375*/
AND GLB.JE_BATCH_ID = GLH.JE_BATCH_ID
--AND GLH.DOC_SEQUENCE_ID = DOCSEQ.DOC_SEQUENCE_ID(+)
AND GLL.SUBLEDGER_DOC_SEQUENCE_ID = SUBDOCSEQ.DOC_SEQUENCE_ID(+)
AND DCT.CONVERSION_TYPE  = GLL.CURRENCY_CONVERSION_TYPE /*rchandan*/ 
&P_POSTING_STATUS
&P_HEADER_POSTING_STATUS
&P_DAS_WHERE
&P_CURRENCY_WHERE
&P_ACTUAL_TYPE_WHERE
&P_BATCH_WHERE
&P_SOURCE_WHERE
&P_CATEGORY_WHERE
and &P_BAL_WHERE
--&P_DOC_ID_WHERE
--&P_DOC_VAL_WHERE
&P_SUB_DOC_ID_WHERE
&P_SUB_DOC_VAL_WHERE
&P_NOT_ZERO_LINE_WHERE
&P_PERIOD_WHERE
&P_CONTRA_ACCOUNT_WHERE
&P_JOURNAL_DATE_WHERE
&P_JOURNAL_UPD_DATE_WHERE
&P_JOURNAL_LAST_UPD_WHERE
AND &P_AFF_WHERE
AND &FLEXDATA_SECURE = 'N'
&P_AMOUNT_WHERE
&P_JOURNAL_WHERE_CLAUSE
&P_LE_WHERE_CLAUSE
&ACCT_ANAL_ORDERBY
=============================================================================================================================
-----------------------------------------------------Journals Extract Data Model----------------------------------------------------------------------------------------------
select  &BALANCING_SEG_ORDERBY          Bal_Seg,
        PS.start_date                   Period_Date,
	PS.period_name                  Period,
	JEB.name                        Name,
	JEB.posted_date                 Posted_date,
	JEB.creation_date               Created_date,
        JEB.created_by                  BATCH_CREATED_BY,
        JEB.last_updated_by             BATCH_LAST_UPDATED_BY,
        JEB.last_update_date            BATCH_LAST_UPDATE_DATE,
        JEB.last_update_login           BATCH_LAST_UPDATE_LOGIN,
	min(JG_JOURNALS_BATCH_RPT_EXT_PKG.batch_type(JEB.actual_flag)) Batch_Type,
	SRC.user_je_source_name         Source,
	JEH.doc_sequence_value          Seq_Value,
	min(decode(JEH.actual_flag, 'A', null, 'E', JG_JOURNALS_BATCH_RPT_EXT_PKG.enc_type(JEH.encumbrance_type_id))) Encumbrance_Type,
	CAT.user_je_category_name       Category,
	L.name                          LedgerName,
	L.CURRENCY_CODE                 LedgerCurrency,
	--&DEB_SELECT                     Debit,
	--&CRE_SELECT                     Credit,
	SUM(nvl(JEL.entered_dr,0))      Debit,
	SUM(nvl(JEL.entered_cr,0))      Credit,
	&FOR_BAL_SEG                    For_Bal_Seg,
	&FOR_COMP_NAME                  For_Comp_Name
from	GL_PERIOD_STATUSES   PS,
	GL_JE_HEADERS        JEH,
	GL_JE_LINES          JEL,
	GL_CODE_COMBINATIONS CC,
	GL_JE_BATCHES        JEB,
	GL_JE_CATEGORIES     CAT,
	GL_JE_SOURCES        SRC,
	GL_LEDGERS           L,
	&LEDGER_FROM
	gl_daily_conversion_types gdct
where
	PS.APPLICATION_ID = 101 
and     PS.LEDGER_ID = JEH.LEDGER_ID 
/*and     ( :C_START_DATE between PS.start_date+0 and PS.end_date+0  or  
          :C_END_DATE between PS.start_date+0 and PS.end_date+0    or   
	  (  PS.start_date+0 >= :C_START_DATE and  PS.end_date+0 <= :C_END_DATE )              
	)
*/
and           JEH.period_name      =  PS.period_name
and			  JEH.status           = 'P'
--and           JEH.actual_flag      = 'A'
and           JEH.ledger_id        = L.ledger_id
and      JEL.period_name           =  JEH.period_name
and      JEL.je_header_id          =  JEH.je_header_id
and      JEL.status                = 'P'
-- and      JEL.effective_date between :C_START_DATE and :C_END_DATE
and      CC.code_combination_id   =  JEL.code_combination_id
and      CC.summary_flag          =  'N'
and      CC.template_id is null
and      CC.chart_of_accounts_id  = :STRUCT_NUM
and      CC.detail_posting_allowed_flag = 'Y'
--and      JEB.je_batch_id = decode(CC.code_combination_id, NULL, JEH.je_batch_id, JEH.je_batch_id) -- rrajarap
and      JEB.je_batch_id = JEH.je_batch_id -- rrajarap
--and      CAT.je_category_name = decode(CC.code_combination_id, NULL, JEH.je_category, JEH.je_category)  -- rrajarap
and      CAT.je_category_name = JEH.je_category  -- rrajarap
--and      SRC.je_source_name = decode(CC.code_combination_id, NULL, JEH.je_source, JEH.je_source) -- rrajarap
and      SRC.je_source_name = JEH.je_source -- rrajarap 
/* Fusion initiative multi currency change starts */ 
and  gdct.conversion_type = JEL.currency_conversion_type
/*changed from JEH.currency_conversion_type to JEL.currency_conversion_type. bug 	9198433
/* Fusion initiative multi currency change ends */
/* AND 'Y' != DECODE(TO_NUMBER((SELECT GP1.PERIOD_YEAR
                               FROM GL_PERIODS GP1
                              WHERE GP1.PERIOD_SET_NAME = L.PERIOD_SET_NAME
                                AND GP1.PERIOD_TYPE = L.ACCOUNTED_PERIOD_TYPE
                                AND :P_END_DATE
                                BETWEEN GP1.start_date AND GP1.end_date
                                AND GP1.adjustment_period_flag like decode(:P_ADJUSTMENT_PERIODS,'N','N','%')
                                AND    rownum = 1)) -
                  TO_NUMBER((SELECT GP2.PERIOD_YEAR
                               FROM GL_PERIODS GP2
                              WHERE GP2.PERIOD_SET_NAME = L.PERIOD_SET_NAME
                                AND GP2.PERIOD_TYPE = L.ACCOUNTED_PERIOD_TYPE
                                AND :P_START_DATE
                                BETWEEN GP2.start_date and GP2.end_date
                                AND GP2.adjustment_period_flag like decode(:P_ADJUSTMENT_PERIODS,'N','N','%')
                                AND rownum = 1)), 0, 'N', DECODE(:P_ADJUSTMENT_PERIODS, 'N', 'Y', 'N')) */
AND &C_WHERE_PERIOD
AND &ACCESS_WHERE
AND &LEDGER_WHERE
AND JEL.CURRENCY_CODE = :P_CURRENCY_CODE   -- rrajarap bug # 9195217
AND &BALANCING_SEG_WHERE
AND &BAL_SECURE = 'N'
AND &LP_INCREMENTAL_EXPORT
GROUP BY  &BALANCING_SEG_ORDERBY, --&BALANCING_SEG modified to &BALANCING_SEG_ORDERBY fix for bug # 9195198
          &FOR_BAL_SEG,
          &FOR_COMP_NAME,
          &BAL_SECURE,
          PS.start_date,
          PS.period_name,
          CAT.user_je_category_name,
          JEB.name,
          JEB.actual_flag,
          SRC.user_je_source_name,
          JEH.doc_sequence_value,
          JEH.encumbrance_type_id,
          JEB.creation_date,
          JEB.posted_date,
          JEB.created_by,
          JEB.last_updated_by,
          JEB.last_update_date,
          JEB.last_update_login,
          L.name,
          L.currency_code
	  --,&BALANCING_SEG_ORDERBY
order by  L.name,
          &BALANCING_SEG_ORDERBY,
          PS.start_date,
          CAT.user_je_category_name,
          JEB.name
==================================================================================================================================
-------------------------------Journals Extract-----------------------------------
select  &BALANCING_SEG_ORDERBY          Bal_Seg,
        PS.start_date                   Period_Date,
	PS.period_name                  Period,
	JEB.name                        Name,
	JEB.posted_date                 Posted_date,
	JEB.creation_date               Created_date,
        JEB.created_by                  BATCH_CREATED_BY,
        JEB.last_updated_by             BATCH_LAST_UPDATED_BY,
        JEB.last_update_date            BATCH_LAST_UPDATE_DATE,
        JEB.last_update_login           BATCH_LAST_UPDATE_LOGIN,
	min(JG_JOURNALS_BATCH_RPT_EXT_PKG.batch_type(JEB.actual_flag)) Batch_Type,
	SRC.user_je_source_name         Source,
	JEH.doc_sequence_value          Seq_Value,
	min(decode(JEH.actual_flag, 'A', null, 'E', JG_JOURNALS_BATCH_RPT_EXT_PKG.enc_type(JEH.encumbrance_type_id))) Encumbrance_Type,
	CAT.user_je_category_name       Category,
	L.name                          LedgerName,
	L.CURRENCY_CODE                 LedgerCurrency,
	--&DEB_SELECT                     Debit,
	--&CRE_SELECT                     Credit,
	SUM(nvl(JEL.entered_dr,0))      Debit,
	SUM(nvl(JEL.entered_cr,0))      Credit,
	&FOR_BAL_SEG                    For_Bal_Seg,
	&FOR_COMP_NAME                  For_Comp_Name
from	GL_PERIOD_STATUSES   PS,
	GL_JE_HEADERS        JEH,
	GL_JE_LINES          JEL,
	GL_CODE_COMBINATIONS CC,
	GL_JE_BATCHES        JEB,
	GL_JE_CATEGORIES     CAT,
	GL_JE_SOURCES        SRC,
	GL_LEDGERS           L,
	&LEDGER_FROM
	gl_daily_conversion_types gdct
where
	PS.APPLICATION_ID = 101 
and     PS.LEDGER_ID = JEH.LEDGER_ID 
/*and     ( :C_START_DATE between PS.start_date+0 and PS.end_date+0  or  
          :C_END_DATE between PS.start_date+0 and PS.end_date+0    or   
	  (  PS.start_date+0 >= :C_START_DATE and  PS.end_date+0 <= :C_END_DATE )              
	)
*/
and           JEH.period_name      =  PS.period_name
and			  JEH.status           = 'P'
--and           JEH.actual_flag      = 'A'
and           JEH.ledger_id        = L.ledger_id
and      JEL.period_name           =  JEH.period_name
and      JEL.je_header_id          =  JEH.je_header_id
and      JEL.status                = 'P'
-- and      JEL.effective_date between :C_START_DATE and :C_END_DATE
and      CC.code_combination_id   =  JEL.code_combination_id
and      CC.summary_flag          =  'N'
and      CC.template_id is null
and      CC.chart_of_accounts_id  = :STRUCT_NUM
and      CC.detail_posting_allowed_flag = 'Y'
--and      JEB.je_batch_id = decode(CC.code_combination_id, NULL, JEH.je_batch_id, JEH.je_batch_id) -- rrajarap
and      JEB.je_batch_id = JEH.je_batch_id -- rrajarap
--and      CAT.je_category_name = decode(CC.code_combination_id, NULL, JEH.je_category, JEH.je_category)  -- rrajarap
and      CAT.je_category_name = JEH.je_category  -- rrajarap
--and      SRC.je_source_name = decode(CC.code_combination_id, NULL, JEH.je_source, JEH.je_source) -- rrajarap
and      SRC.je_source_name = JEH.je_source -- rrajarap 
/* Fusion initiative multi currency change starts */ 
and  gdct.conversion_type = JEL.currency_conversion_type
/*changed from JEH.currency_conversion_type to JEL.currency_conversion_type. bug 	9198433
/* Fusion initiative multi currency change ends */
/* AND 'Y' != DECODE(TO_NUMBER((SELECT GP1.PERIOD_YEAR
                               FROM GL_PERIODS GP1
                              WHERE GP1.PERIOD_SET_NAME = L.PERIOD_SET_NAME
                                AND GP1.PERIOD_TYPE = L.ACCOUNTED_PERIOD_TYPE
                                AND :P_END_DATE
                                BETWEEN GP1.start_date AND GP1.end_date
                                AND GP1.adjustment_period_flag like decode(:P_ADJUSTMENT_PERIODS,'N','N','%')
                                AND    rownum = 1)) -
                  TO_NUMBER((SELECT GP2.PERIOD_YEAR
                               FROM GL_PERIODS GP2
                              WHERE GP2.PERIOD_SET_NAME = L.PERIOD_SET_NAME
                                AND GP2.PERIOD_TYPE = L.ACCOUNTED_PERIOD_TYPE
                                AND :P_START_DATE
                                BETWEEN GP2.start_date and GP2.end_date
                                AND GP2.adjustment_period_flag like decode(:P_ADJUSTMENT_PERIODS,'N','N','%')
                                AND rownum = 1)), 0, 'N', DECODE(:P_ADJUSTMENT_PERIODS, 'N', 'Y', 'N')) */
AND &C_WHERE_PERIOD
AND &ACCESS_WHERE
AND &LEDGER_WHERE
AND JEL.CURRENCY_CODE = :P_CURRENCY_CODE   -- rrajarap bug # 9195217
AND &BALANCING_SEG_WHERE
AND &BAL_SECURE = 'N'
AND &LP_INCREMENTAL_EXPORT
GROUP BY  &BALANCING_SEG_ORDERBY, --&BALANCING_SEG modified to &BALANCING_SEG_ORDERBY fix for bug # 9195198
          &FOR_BAL_SEG,
          &FOR_COMP_NAME,
          &BAL_SECURE,
          PS.start_date,
          PS.period_name,
          CAT.user_je_category_name,
          JEB.name,
          JEB.actual_flag,
          SRC.user_je_source_name,
          JEH.doc_sequence_value,
          JEH.encumbrance_type_id,
          JEB.creation_date,
          JEB.posted_date,
          JEB.created_by,
          JEB.last_updated_by,
          JEB.last_update_date,
          JEB.last_update_login,
          L.name,
          L.currency_code
	  --,&BALANCING_SEG_ORDERBY
order by  L.name,
          &BALANCING_SEG_ORDERBY,
          PS.start_date,
          CAT.user_je_category_name,
          JEB.name
==================================================================================================================================
---------Material Issue Data Model---------
--FII_Material Overissue Report--
SELECT
  (SELECT SUM(TRANSACTION_QUANTITY)
  FROM INV_ONHAND_QUANTITIES_DETAIL IOQ
  WHERE ESI.INVENTORY_ITEM_ID = IOQ.INVENTORY_ITEM_ID
  AND ESI.ORGANIZATION_ID     = IOQ.ORGANIZATION_ID
  AND IOQ.SUBINVENTORY_CODE IN ('FIN GOODS','RAW MAT')
  ) AS Quantity_On_Hand,
  (SELECT SUM(NVL(pda.quantity_ordered-pda.quantity_delivered-pda.quantity_cancelled,0))
  FROM po_headers_all pha,
    po_lines_all pla     ,
    po_distributions_all pda,
    po_line_locations_all plla
  WHERE pha.po_header_id = pla.po_header_id
  AND pla.item_id        = ESI.INVENTORY_ITEM_ID
  AND pla.po_line_id = pda.po_line_id
  AND plla.line_location_id = pda.line_location_id
  --AND pla.line_status    = 'OPEN'
  AND pla.po_line_id     =plla.po_line_id
  AND PHA.DOCUMENT_STATUS in('OPEN','CLOSED FOR RECEIVING')
  ) Quantity_On_Order    ,
 ( select sum((nvl(wom.issued_quantity,0) - nvl(wom.quantity,0)) * -1) 
FROM WIE_WO_OPERATION_MATERIALS_V WOM,
WIE_WORK_ORDERS_B WOB,
wie_wo_statuses_b WWSB
WHERE WOM.work_order_id                  = wob.work_order_id
AND esi.organization_id = wom.organization_id
and esi.inventory_item_id = wom.inventory_item_id
AND WOB.WORK_ORDER_STATUS_ID =WWSB.wo_status_id
AND WWSB.WO_SYSTEM_STATUS_CODE NOT IN ('CLOSED','CANCELED')
AND WOM.material_type        = 'COMPONENT'
and (nvl(wom.issued_quantity,0) - nvl(wom.quantity,0) ) <0) sum_unissued_Quantity,
(select sum((nvl(wom.quantity,0) -nvl(wom.issued_quantity,0)) * -1) 
FROM WIE_WO_OPERATION_MATERIALS_V WOM,
WIE_WORK_ORDERS_B WOB,
wie_wo_statuses_b WWSB
WHERE WOM.work_order_id                  = wob.work_order_id
AND WOB.WORK_ORDER_STATUS_ID =WWSB.wo_status_id
AND WWSB.WO_SYSTEM_STATUS_CODE NOT IN ('CLOSED','CANCELED')
AND WOM.material_type        = 'COMPONENT'
AND esi.organization_id = wom.organization_id
and esi.inventory_item_id = wom.inventory_item_id
and (nvl(wom.quantity,0) -nvl(wom.issued_quantity,0) ) <0) sum_overissued_Quantity,
  flvl.MEANING item_type,
  esi.item_number        ,
  esi.INVENTORY_ITEM_ID  ,
  esi.organization_id    ,
  esi.description        ,
  esi.primary_uom_code   ,
  IIUM.DESCRIPTION AS UOM,
  IAO.ORGANIZATION_NAME
FROM EGP_SYSTEM_ITEMS ESI     ,
  INV_UNITS_OF_MEASURE_B IUOM ,
  INV_UNITS_OF_MEASURE_TL IIUM,
  INV_ACCESSIBLE_ORGANIZATIONS_V IAO,
  FND_LOOKUP_VALUES_TL flvl,
  INV_ORGANIZATION_DEFINITIONS_V iod
WHERE 1=1
--and esi.ITEM_NUMBER       =:P_ITEM_number
AND IUOM.UOM_CODE           =esi.primary_uom_code
AND IUOM.UNIT_OF_MEASURE_ID =IIUM.UNIT_OF_MEASURE_ID
AND ESI.ORGANIZATION_ID     =IAO.ORGANIZATION_ID
AND flvl.LOOKUP_TYPE = 'EGP_ITEM_TYPE'
AND esi.item_type = flvl.LOOKUP_CODE
AND ESI.organization_id         =iod.organization_id
--and iod.ORGANIZATION_CODE='FII_MAIN'

--G_2--
select   
WOM.INVENTORY_ITEM_ID ,
  WOM.ORGANIZATION_ID,
wob.work_order_number,
WWSB.WO_SYSTEM_STATUS_CODE,
nvl(wom.issued_quantity,0) Quantity_Issued,
 nvl( wom.quantity,0)   Quantity_Required ,
(nvl(wom.quantity,0) -nvl(wom.issued_quantity,0)) * -1 overissued_Quantity,
0 unissued_Quantity
FROM WIE_WO_OPERATION_MATERIALS_V WOM,
WIE_WORK_ORDERS_B WOB,
wie_wo_statuses_b WWSB
WHERE WOM.work_order_id                  = wob.work_order_id
AND WOM.material_type                    = 'COMPONENT'
AND WOB.WORK_ORDER_STATUS_ID =WWSB.wo_status_id
AND WWSB.WO_SYSTEM_STATUS_CODE NOT IN ('CLOSED','CANCELED')
and (nvl(wom.quantity,0) -nvl(wom.issued_quantity,0) ) <0     
UNION
select   
WOM.INVENTORY_ITEM_ID ,
WOM.ORGANIZATION_ID,
wob.work_order_number,
WWSB.WO_SYSTEM_STATUS_CODE,
nvl(wom.issued_quantity,0) Quantity_Issued,
 nvl( wom.quantity,0)   Quantity_Required ,
0 overissued_Quantity,
(nvl(wom.issued_quantity,0) - nvl(wom.quantity,0)) * -1 unissued_Quantity
FROM WIE_WO_OPERATION_MATERIALS_V WOM,
WIE_WORK_ORDERS_B WOB,
wie_wo_statuses_b WWSB
WHERE WOM.work_order_id                  = wob.work_order_id
AND WOM.material_type                    = 'COMPONENT'
AND WOB.WORK_ORDER_STATUS_ID =WWSB.wo_status_id
AND WWSB.WO_SYSTEM_STATUS_CODE NOT IN ('CLOSED','CANCELED')
and (nvl(wom.issued_quantity,0) - nvl(wom.quantity,0) ) <0
union
select   
WOM.INVENTORY_ITEM_ID ,
WOM.ORGANIZATION_ID,
wob.work_order_number,
WWSB.WO_SYSTEM_STATUS_CODE,
nvl(wom.issued_quantity,0) Quantity_Issued,
 nvl( wom.quantity,0)   Quantity_Required ,
0 overissued_Quantity,
0 unissued_Quantity
FROM WIE_WO_OPERATION_MATERIALS_V WOM,
WIE_WORK_ORDERS_B WOB,
wie_wo_statuses_b WWSB
WHERE WOM.work_order_id                  = wob.work_order_id
AND WOM.material_type                    = 'COMPONENT'
AND WOB.WORK_ORDER_STATUS_ID =WWSB.wo_status_id
AND WWSB.WO_SYSTEM_STATUS_CODE NOT IN ('CLOSED','CANCELED')
and (nvl(wom.issued_quantity,0) - nvl(wom.quantity,0) ) =0
==================================================================================================================================
---------------------------MexicanChartOfAccountsDm----------------------------------------
--Ctas
SELECT REP_CONTEXT_ENTITY_ADDRESS1 to_value,
REP_CONTEXT_ENTITY_ADDRESS2 from_value,
JOB_DEFINITION_PACKAGE from_VALUE_DESCRIPTION,
REP_CONTEXT_ENTITY_ADDRESS3 parent_value,
REP_CONTEXT_LVL_CODE lev,
REP_CONTEXT_LVL_MNG acct_type
FROM ZX_REP_CONTEXT_T
WHERE REQUEST_ID = :FUSIONAPPS_REQUEST_ID

--Catalogo
SELECT 
  :p_version Version,
  reg.registration_number RFC,
  TO_CHAR(sysdate,'MM') Mes,
  TO_CHAR(sysdate,'RRRR') Anio,
  :p_seal Sello,
  :p_certificate_num noCertificado,
  :p_certificate Certificado
FROM xle_registrations reg,
  xle_jurisdictions_vl jur
WHERE reg.source_id          = :p_legal_entity_id
AND reg.source_table         = 'XLE_ENTITY_PROFILES'
AND reg.jurisdiction_id      = jur.jurisdiction_id
AND jur.registration_code_le = 'RFC'
AND sysdate BETWEEN NVL(reg.effective_from,sysdate) AND NVL(reg.effective_to,sysdate)
AND rownum=1
============================================================================================================================================
--------------------------------------------------------------------MexicanJournalsDm-------------------------------------------------------------------------------------
--Q_JOURNALS
SELECT je_header_id,
  substr(gl_je_name,1,(50 - (length(to_char(je_header_id))+1))) || ' ' || to_char(je_header_id) gl_je_name,
  TO_CHAR(journal_date,'YYYY-MM-DD') journal_date,
  substr(header_description,1,300) header_description,
  entity_code,
  event_class_code,
  request_id,
  application_id,
  sla_header_id,
  mx_je_line_id,
  je_line_num,
  SUBSTR(line_description,1,200) line_description,
  NVL(accounted_cr,0) accounted_cr,
  NVL(ACCOUNTED_DR,0) ACCOUNTED_DR,
  SUBSTR(NATURAL_ACCOUNT||NVL2(SUB_ACCT,'-'||SUB_ACCT,NULL),1,100) ACCT,
  SUBSTR(natural_account_desc||nvl2(sub_acct_desc,'-'||sub_acct_desc,NULL),1,100) acct_desc
FROM jl_mx_je_lines_t
WHERE request_id = :FUSIONAPPS_REQUEST_ID
ORDER BY journal_date,
  gl_je_name,
  JE_HEADER_ID
--Q_PAYMENT
SELECT jld.payment_method_code,
  jld.payment_type_code,
  jld.processing_type,
  jld.payment_id,
  SUBSTR(jld.payment_number,1,20) payment_number,
  jld.payment_amount,
  TO_CHAR(jld.payment_date,'YYYY-MM-DD') payment_date,
  DECODE(jld.PAYMENT_CUR_CODE,'MXN',NULL,jld.PAYMENT_CUR_CODE) PAYMENT_CUR_CODE,
  nvl(DECODE(jld.PAYMENT_CUR_CODE,'MXN',NULL,jld.PAYMENT_EXCHANGE_RATE),1) PAYMENT_EXCHANGE_RATE,
  SUBSTR(jld.source_account_num,1,50) source_account_num,
  DECODE(jld.foreign_source_bank_flag,'Y','999',substr(ce.bank_number,1,3)) source_nat_bank,
  DECODE(jld.foreign_source_bank_flag,'Y',substr(jld.source_bank_name,1,150),'   ') source_frn_bank,
  SUBSTR(jld.dest_acct_num,1,50) dest_acct_num,
  DECODE(jld.foreign_dest_bank_flag,'Y','999',substr(iby.bank_number,1,3)) dest_nat_bank,
  DECODE(jld.foreign_dest_bank_flag,'Y',substr(jld.dest_bank_name,1,150),'   ') dest_frn_bank,
  jld.invoice_id invoice_id,
  jld.invoice_cfdi invoice_cfdi1,
  jld.invoice_cfd_cbb_series invoice_cfd_cbb_series1,
  jld.invoice_cfd_cbb_number invoice_cfd_cbb_number1,
  jld.foreign_invoice_number foreign_invoice_number1,
  jld.invoice_amount inv_amt,
  -- Bug 32393472: start - check gl_je_headers / xla_ae_lines when to display the currency_conversion_rate
  --DECODE(jld.INV_CUR_CODE,'MXN',NULL,jld.INV_CUR_CODE) INV_CUR_CODE1,
  --nvl(DECODE(jld.INV_CUR_CODE,'MXN',NULL,jld.INV_EXCHANGE_RATE),1) INV_EXCHANGE_RATE1,
  DECODE(jl.addit_info_1,NULL,NULL,jld.INV_CUR_CODE) INV_CUR_CODE1,
  nvl(DECODE(jl.addit_info_1,NULL,NULL,jld.INV_EXCHANGE_RATE),1) INV_EXCHANGE_RATE1,
  -- Bug 32393472: end
  jld.addit_info_1 MERCHANT_TP_ID,  -- merchant_taxpayer_id of an expense line
  SUBSTR(jld.third_party_name,1,300) third_party_name,
  jld.third_party_taxpayer_num third_party_taxpayer_id1 ,
  nvl(jld.addit_info_5,'99') payment_method,
  jld.addit_info_4 payment_cfdi,
  jl.entity_code entity_code
FROM JL_MX_JE_LINE_DETAILS_T jld, 
	 JL_MX_JE_LINES_T jl,
     ce_banks_v ce,
     iby_ext_bank_accounts_v iby
WHERE jld.request_id       = :REQUEST_ID
  AND jld.MX_JE_LINE_ID    = :MX_JE_LINE_ID
  AND jl.MX_JE_LINE_ID	   = jld.MX_JE_LINE_ID
  and jld.source_bank_id    = ce.bank_party_id (+)
  and jld.dest_acct_id 	   = iby.bank_account_id (+)
  and (jl.entity_code in ('AP_PAYMENTS','CE_CASHFLOWS') and jl.event_class_code in ('PAYMENTS','RECONCILED PAYMENTS','FUTURE DATED PAYMENTS','REFUNDS','BAT_CLASS'))
UNION ALL
SELECT jld.payment_method_code,
  jld.payment_type_code,
  jld.processing_type,
  jld.payment_id,
  SUBSTR(jld.addit_info_2,1,20) payment_number,
  jld.payment_amount,
  TO_CHAR(jld.payment_date,'YYYY-MM-DD') payment_date,
  DECODE(jld.PAYMENT_CUR_CODE,'MXN',NULL,jld.PAYMENT_CUR_CODE) PAYMENT_CUR_CODE,
  nvl(DECODE(jld.PAYMENT_CUR_CODE,'MXN',NULL,jld.PAYMENT_EXCHANGE_RATE),1) PAYMENT_EXCHANGE_RATE,
  SUBSTR(jld.source_account_num,1,50) source_account_num,
  DECODE(jld.foreign_source_bank_flag,'Y','999',substr(iby.bank_number,1,3)) source_nat_bank,
  DECODE(jld.foreign_source_bank_flag,'Y',substr(jld.source_bank_name,1,150),'   ') source_frn_bank,
  SUBSTR(jld.dest_acct_num,1,50) dest_acct_num,
  DECODE(jld.foreign_dest_bank_flag,'Y','999',substr(ce.bank_number,1,3)) dest_nat_bank,
  DECODE(jld.foreign_dest_bank_flag,'Y',substr(jld.dest_bank_name,1,150),'   ') dest_frn_bank,
  jld.invoice_id invoice_id,
  jld.invoice_cfdi invoice_cfdi1,
  jld.invoice_cfd_cbb_series invoice_cfd_cbb_series1,
  jld.invoice_cfd_cbb_number invoice_cfd_cbb_number1,
  jld.foreign_invoice_number foreign_invoice_number1,
  jld.invoice_amount inv_amt,
  -- Bug 32393472: start - check gl_je_headers / xla_ae_lines when to display the currency_conversion_rate
  --DECODE(jld.INV_CUR_CODE,'MXN',NULL,jld.INV_CUR_CODE) INV_CUR_CODE1,
  --nvl(DECODE(jld.INV_CUR_CODE,'MXN',NULL,jld.INV_EXCHANGE_RATE),1) INV_EXCHANGE_RATE1,
  DECODE(jl.addit_info_1,NULL,NULL,jld.INV_CUR_CODE) INV_CUR_CODE1, 
  nvl(DECODE(jl.addit_info_1,NULL,NULL,jld.INV_EXCHANGE_RATE),1) INV_EXCHANGE_RATE1,
  -- Bug 32393472: end
  jld.addit_info_1 MERCHANT_TP_ID,  -- merchant_taxpayer_id of an expense line
  SUBSTR(jld.third_party_name,1,300) third_party_name,
  jld.third_party_taxpayer_num third_party_taxpayer_id1,
  nvl(jld.addit_info_5,'99') payment_method,
  jld.addit_info_4 payment_cfdi,
  jl.entity_code entity_code
FROM JL_MX_JE_LINE_DETAILS_T jld, 
	 JL_MX_JE_LINES_T jl,
     ce_banks_v ce,
     iby_ext_bank_accounts_v iby
WHERE jld.request_id       = :REQUEST_ID
  AND jld.MX_JE_LINE_ID    = :MX_JE_LINE_ID
  AND jl.MX_JE_LINE_ID	   = jld.MX_JE_LINE_ID
  and jld.dest_bank_id    = ce.bank_party_id (+)
  and jld.source_account_id 	   = iby.bank_account_id (+)
  and (jl.entity_code ='RECEIPTS' and jl.event_class_code in ('RECEIPT','MISC_RECEIPT'))

--Q_INVOICE
SELECT jld.INVOICE_ID,
  jld.INVOICE_CFDI,
  jld.INVOICE_CFD_CBB_SERIES,
  jld.INVOICE_CFD_CBB_NUMBER,
  jld.FOREIGN_INVOICE_NUMBER,
  jld.INVOICE_AMOUNT,
  jld.THIRD_PARTY_ID,
  jld.THIRD_PARTY_TAXPAYER_NUM,
  -- Bug 32393472: start - check gl_je_headers / xla_ae_lines when to display the currency_conversion_rate
  --DECODE(jld.INV_CUR_CODE,'MXN',NULL,jld.INV_CUR_CODE) INV_CUR_CODE,
  --DECODE(jld.INV_CUR_CODE,'MXN',NULL,jld.INV_EXCHANGE_RATE) INV_EXCHANGE_RATE
  DECODE(jl.addit_info_1,NULL,NULL,jld.INV_CUR_CODE) INV_CUR_CODE,
  DECODE(jl.addit_info_1,NULL,NULL,jld.INV_EXCHANGE_RATE) INV_EXCHANGE_RATE
  -- Bug 32393472: end
FROM JL_MX_JE_LINE_DETAILS_T jld, JL_MX_JE_LINES_T jl
WHERE jld.REQUEST_ID       = :REQUEST_ID
AND jld.MX_JE_LINE_ID         = :MX_JE_LINE_ID
AND jl.MX_JE_LINE_ID		= jld.MX_JE_LINE_ID
and ((jl.entity_code = 'AP_INVOICES' and jl.event_class_code in ('INVOICES','CREDIT MEMOS','DEBIT MEMOS','INVOICE_BURDEN',
						'PREPAYMENTS','PREPAYMENT_BURDEN','PREPAYMENT APPLICATIONS','PREPAY_APPLICATION_BURDEN'))	
	or (jl.entity_code = 'TRANSACTIONS' and jl.event_class_code in ('INVOICE','GUARANTEE', 'DEPOSIT','DEBIT_MEMO', 'CREDIT_MEMO','CHARGEBACK'))
or (:application_id is null and :sla_header_id is null))

--Q_PERIOD
select
to_char(start_date,'MM') MONTH,
period_year YEAR
FROM Gl_Period_Statuses
WHERE Ledger_Id = :P_LEDGER_ID
AND APPLICATION_ID = 101
AND Period_Name = :P_PERIOD_FROM

--Q_LE_DETAILS
SELECT SUBSTR(reg.registration_number,1,13) rfc_number,
:p_legal_entity_id p_legal_entity_id,
:p_je_source p_je_source,
:p_coa_id p_coa_id,
:p_account_flexfield_from p_account_flexfield_from,
:p_account_flexfield_to p_account_flexfield_to,
:p_show_adj_periods_flag p_show_adj_periods_flag,
:p_include_zero_amount_flag p_include_zero_amount_flag,
:p_period_from p_period_from,
:p_request_type p_request_type,
:p_audit_req_num p_audit_req_num,
:p_audit_process_num p_audit_process_num,
nvl2(:p_rpt_version,'1.3',:p_rpt_version) p_rpt_version,
:p_seal p_seal,
:p_certificate_num p_certificate_num,
:p_certificate p_certificate,
:p_ledger_id p_ledger_id,
:p_period_to p_period_to,
:p_gl_date_from p_gl_date_from,
:p_gl_date_to p_gl_date_to,
:p_posting_status_code p_posting_status_code,
:p_include_expenses p_include_expenses
FROM xle_registrations reg,
  xle_jurisdictions_vl jur
WHERE reg.source_id          = :P_LEGAL_ENTITY_ID
AND reg.source_table         = 'XLE_ENTITY_PROFILES'
AND reg.jurisdiction_id      = jur.jurisdiction_id
AND jur.registration_code_le = 'RFC'
AND SYSDATE BETWEEN NVL(REG.EFFECTIVE_FROM,SYSDATE) AND NVL(REG.EFFECTIVE_TO,SYSDATE)
AND ROWNUM=1
=====================================================================================================================
 --------MF Account Transaction Analysis Data Model v2MF ------------------------	
--Q_PARAMS--
SELECT :p_ledger_name ledger_name_dsp,
       :p_legal_entity_name legal_entity_name_dsp,
       amt.meaning include_zero_amt_lines,
       trx.meaning include_user_trx_id,
       stat.meaning include_stat_amt_lines,
       act.meaning include_acct_with_no_act,
       enc.meaning balance_type_dsp
FROM   fnd_languages lang,
       fnd_lookup_values_tl amt, 
       fnd_lookup_values_tl trx,
       fnd_lookup_values_tl stat,
       fnd_lookup_values_tl act,
       fnd_lookup_values_tl enc
WHERE lang.language_code = userenv('LANG')
AND   amt.view_application_id(+) = 602
AND   amt.set_id(+) = 0
AND   amt.lookup_type(+) = 'XLA_YES_NO'
AND   amt.lookup_code(+) = :P_INCLUDE_ZERO_AMOUNT_LINES
AND   amt.language(+) = lang.language_code
AND   trx.view_application_id(+) = 602
AND   trx.set_id(+) = 0
AND   trx.lookup_type(+) = 'XLA_YES_NO'
AND   trx.lookup_code(+) = :P_INCLUDE_USER_TRX_ID_FLAG
AND   trx.language(+) = lang.language_code
AND   stat.view_application_id(+) = 602
AND   stat.set_id(+) = 0
AND   stat.lookup_type(+) = 'XLA_YES_NO'
AND   stat.lookup_code(+) = :P_INCLUDE_STAT_AMOUNT_LINES
AND   stat.language(+) = lang.language_code
AND   act.view_application_id(+) = 602
AND   act.set_id(+) = 0
AND   act.lookup_type(+) = 'XLA_YES_NO'
AND   act.lookup_code(+) = :P_INCLUDE_ACCT_WITH_NO_ACT
AND   act.language(+) = lang.language_code
AND   enc.view_application_id(+) = 602
AND   enc.set_id(+) = 0
AND   enc.lookup_type(+) = 'XLA_BALANCE_TYPE'
AND   enc.lookup_code(+) = :P_BALANCE_TYPE_CODE
AND   enc.language(+) = lang.language_code

--Q_VAT_REGISTRATION--
&p_vat_registration_query
--Q_COMMERCIAL--
&p_commercial_query
--Q_TAX--
&p_tax_query
--Q_JELINES--
/*
Customized based off the seeded Account Analysis Report *XLAARPT
Reference Seeded Data Model: /Shared Folders/Financials/Fusion Accounting Hub/Data Models/Account Analysis Data Model
Last Update: 21B Update
Last Update By: KT
*/
WITH xla_report_balances AS (SELECT DISTINCT /*+ materialize */ TABLE1.LEDGER_ID
      ,TABLE1.LEDGER_SHORT_NAME
      ,TABLE1.LEDGER_DESCRIPTION
      ,TABLE1.LEDGER_NAME
      ,TABLE1.LEDGER_CURRENCY
      ,TABLE1.PERIOD_YEAR
      ,TABLE1.PERIOD_NUMBER
      ,TABLE1.PERIOD_NAME
      ,TABLE1.PERIOD_START_DATE
      ,TABLE1.PERIOD_END_DATE
      ,TABLE1.BALANCE_TYPE_CODE
      ,TABLE1.BALANCE_TYPE
      ,TABLE1.BUDGET_VERSION_ID
      ,TABLE1.BUDGET_NAME
      ,TABLE1.ENCUMBRANCE_TYPE_ID
      ,TABLE1.ENCUMBRANCE_TYPE
      ,TABLE1.BEGIN_BALANCE_DR
      ,TABLE1.BEGIN_BALANCE_CR
      ,TABLE1.PERIOD_NET_DR
      ,TABLE1.PERIOD_NET_CR
      ,TABLE1.CODE_COMBINATION_ID
      ,TABLE1.ACCOUNTING_CODE_COMBINATION
      ,TABLE1.CONTROL_ACCOUNT_FLAG
      ,TABLE1.CONTROL_ACCOUNT
      ,TABLE1.BALANCING_SEGMENT
      ,TABLE1.NATURAL_ACCOUNT_SEGMENT
      ,TABLE1.COST_CENTER_SEGMENT
      ,TABLE1.MANAGEMENT_SEGMENT
      ,TABLE1.INTERCOMPANY_SEGMENT
      ,TABLE1.SEGMENT1
      ,TABLE1.SEGMENT2
      ,TABLE1.SEGMENT3
      ,TABLE1.SEGMENT4
      ,TABLE1.SEGMENT5
      ,TABLE1.SEGMENT6
      ,TABLE1.SEGMENT7
      ,TABLE1.SEGMENT8
      ,TABLE1.SEGMENT9
      ,TABLE1.SEGMENT10
      ,TABLE1.SEGMENT11
      ,TABLE1.SEGMENT12
      ,TABLE1.SEGMENT13
      ,TABLE1.SEGMENT14
      ,TABLE1.SEGMENT15
      ,TABLE1.SEGMENT16
      ,TABLE1.SEGMENT17
      ,TABLE1.SEGMENT18
      ,TABLE1.SEGMENT19
      ,TABLE1.SEGMENT20
      ,TABLE1.SEGMENT21
      ,TABLE1.SEGMENT22
      ,TABLE1.SEGMENT23
      ,TABLE1.SEGMENT24
      ,TABLE1.SEGMENT25
      ,TABLE1.SEGMENT26
      ,TABLE1.SEGMENT27
      ,TABLE1.SEGMENT28
      ,TABLE1.SEGMENT29
      ,TABLE1.SEGMENT30
	  ,TABLE1.begin_running_total_cr
      ,TABLE1.begin_running_total_dr
      ,TABLE1.end_running_total_cr
      ,TABLE1.end_running_total_dr
	   ,NULL         LEGAL_ENTITY_ID
     ,NULL         LEGAL_ENTITY_NAME
     ,NULL         LE_ADDRESS_LINE_1
     ,NULL         LE_ADDRESS_LINE_2
     ,NULL         LE_ADDRESS_LINE_3
     ,NULL         LE_CITY
     ,NULL         LE_REGION_1
     ,NULL         LE_REGION_2
     ,NULL         LE_REGION_3
     ,NULL         LE_POSTAL_CODE
     ,NULL         LE_COUNTRY
     ,NULL         LE_REGISTRATION_NUMBER
     ,NULL         LE_REGISTRATION_EFFECTIVE_FROM
     ,NULL         LE_BR_DAILY_INSCRIPTION_NUMBER
     ,NULL         LE_BR_DAILY_INSCRIPTION_DATE
     ,NULL         LE_BR_DAILY_ENTITY
     ,NULL         LE_BR_DAILY_LOCATION
     ,NULL         LE_BR_DIRECTOR_NUMBER
     ,NULL         LE_BR_ACCOUNTANT_NUMBER
     ,NULL         LE_BR_ACCOUNTANT_NAME FROM
    (SELECT DISTINCT
            gl1.ledger_id                 LEDGER_ID
           ,gl1.short_name                LEDGER_SHORT_NAME
           ,gl1.description               LEDGER_DESCRIPTION
           ,gl1.NAME                      LEDGER_NAME
           ,glb.currency_code             LEDGER_CURRENCY
           ,glb.period_year               PERIOD_YEAR
           ,glb.period_num                PERIOD_NUMBER
           ,glb.period_name               PERIOD_NAME
           ,gl1.START_DATE                PERIOD_START_DATE
           ,gl1.end_date                  PERIOD_END_DATE
           ,glb.actual_flag               BALANCE_TYPE_CODE
           ,xlk.meaning                   BALANCE_TYPE
           ,NULL                          BUDGET_VERSION_ID             ,NULL                          BUDGET_NAME                   ,glb.encumbrance_type_id       ENCUMBRANCE_TYPE_ID
           ,get.encumbrance_type          ENCUMBRANCE_TYPE
           ,NVL(glb.begin_balance_dr,0)   BEGIN_BALANCE_DR
           ,NVL(glb.begin_balance_cr,0)   BEGIN_BALANCE_CR
           ,NVL(glb.period_net_dr,0)      PERIOD_NET_DR
           ,NVL(glb.period_net_cr,0)      PERIOD_NET_CR
           ,glb.code_combination_id       CODE_COMBINATION_ID
           ,gcck.SEGMENT1||'.'||gcck.SEGMENT2||'.'||gcck.SEGMENT3||'.'||gcck.SEGMENT4||'.'||gcck.SEGMENT5||'.'||gcck.SEGMENT6||'.'||gcck.SEGMENT7              ACCOUNTING_CODE_COMBINATION
           ,gcck.reference3               CONTROL_ACCOUNT_FLAG
           ,NULL                          CONTROL_ACCOUNT
                    ,gcck.SEGMENT1      BALANCING_SEGMENT
          ,gcck.SEGMENT3        NATURAL_ACCOUNT_SEGMENT
          ,gcck.SEGMENT2     COST_CENTER_SEGMENT
          ,NULL     MANAGEMENT_SEGMENT
          ,gcck.SEGMENT6   INTERCOMPANY_SEGMENT
           ,gcck.segment1                 SEGMENT1
           ,gcck.segment2                 SEGMENT2
           ,gcck.segment3                 SEGMENT3
           ,gcck.segment4                 SEGMENT4
           ,gcck.segment5                 SEGMENT5
           ,gcck.segment6                 SEGMENT6
           ,gcck.segment7                 SEGMENT7
           ,gcck.segment8                 SEGMENT8
           ,gcck.segment9                 SEGMENT9
           ,gcck.segment10                SEGMENT10
           ,gcck.segment11                SEGMENT11
           ,gcck.segment12                SEGMENT12
           ,gcck.segment13                SEGMENT13
           ,gcck.segment14                SEGMENT14
           ,gcck.segment15                SEGMENT15
           ,gcck.segment16                SEGMENT16
           ,gcck.segment17                SEGMENT17
           ,gcck.segment18                SEGMENT18
           ,gcck.segment19                SEGMENT19
           ,gcck.segment20                SEGMENT20
           ,gcck.segment21                SEGMENT21
           ,gcck.segment22                SEGMENT22
           ,gcck.segment23                SEGMENT23
           ,gcck.segment24                SEGMENT24
           ,gcck.segment25                SEGMENT25
           ,gcck.segment26                SEGMENT26
           ,gcck.segment27                SEGMENT27
           ,gcck.segment28                SEGMENT28
           ,gcck.segment29                SEGMENT29
           ,gcck.segment30                SEGMENT30
		   ,NULL                          BEGIN_RUNNING_TOTAL_CR
           ,NULL                          BEGIN_RUNNING_TOTAL_DR
           ,NULL                          END_RUNNING_TOTAL_CR
           ,NULL                          END_RUNNING_TOTAL_DR
       FROM (SELECT DISTINCT/*+ no_merge */
                    gll.ledger_id
                   ,gll.short_name
                   ,gll.description
                   ,gll.name
                   ,gll.currency_code
                   ,gll.chart_of_accounts_id
                   ,gls.period_name
                   ,gls.start_date
                   ,gls.end_date
               FROM gl_ledgers                        gll
                   ,gl_period_statuses                gls
              WHERE gls.ledger_id              = gll.ledger_id
                --AND gls.application_id         = 101 --KT:21B
                AND gls.period_name        IN(:P_PERIOD_TO, :P_PERIOD_FROM) --KT:21B
                AND gll.ledger_id              IN (:P_LEDGER_ID)
            )                                 gl1
           ,gl_balances                       glb
           ,gl_code_combinations              gcck
           ,xla_lookups                       xlk
                     ,gl_encumbrance_types_vl           get
      WHERE glb.ledger_id              = gl1.ledger_id
        AND glb.currency_code           = gl1.currency_code 
        AND glb.period_name            = gl1.period_name
        AND glb.template_id            IS null
        AND gcck.code_combination_id   = glb.code_combination_id
    AND gcck.chart_of_accounts_id  = gl1.chart_of_accounts_id         AND xlk.lookup_type            = 'XLA_BALANCE_TYPE'
        AND xlk.lookup_code            = glb.actual_flag
        AND 1=1
             AND get.encumbrance_type_id(+) = glb.encumbrance_type_id
             AND (((NVL(glb.begin_balance_cr,0)-NVL(glb.begin_balance_dr,0)) <> 0) OR (NVL(glb.period_net_cr,0) <> 0) OR (NVL(glb.period_net_dr,0) <> 0))
            )  TABLE1
        
 WHERE 1 = 1
        
       ) --KT:21B: add with clause
SELECT DISTINCT/*+ OPT_PARAM('_optimizer_join_factorization' 'false') */
        TABLE1.GL_DATE                                 GL_DATE
       ,TABLE1.CREATED_BY                              CREATED_BY
       ,TABLE1.CREATION_DATE                           CREATION_DATE
       ,TABLE1.LAST_UPDATE_DATE                        LAST_UPDATE_DATE
       ,TABLE1.GL_TRANSFER_DATE                        GL_TRANSFER_DATE
       ,TABLE1.REFERENCE_DATE                          REFERENCE_DATE
       ,TABLE1.COMPLETED_DATE                          COMPLETED_DATE
       ,TABLE1.TRANSACTION_NUMBER                      TRANSACTION_NUMBER
       ,TABLE1.TRANSACTION_DATE                        TRANSACTION_DATE
       ,TABLE1.ACCOUNTING_SEQUENCE_NAME                ACCOUNTING_SEQUENCE_NAME
       ,TABLE1.ACCOUNTING_SEQUENCE_VERSION             ACCOUNTING_SEQUENCE_VERSION
       ,TABLE1.ACCOUNTING_SEQUENCE_NUMBER              ACCOUNTING_SEQUENCE_NUMBER
       ,TABLE1.REPORTING_SEQUENCE_NAME                 REPORTING_SEQUENCE_NAME
       ,TABLE1.REPORTING_SEQUENCE_VERSION              REPORTING_SEQUENCE_VERSION
       ,TABLE1.REPORTING_SEQUENCE_NUMBER               REPORTING_SEQUENCE_NUMBER
       ,TABLE1.DOCUMENT_CATEGORY                       DOCUMENT_CATEGORY
       ,TABLE1.DOCUMENT_SEQUENCE_NAME                  DOCUMENT_SEQUENCE_NAME
       ,TABLE1.DOCUMENT_SEQUENCE_NUMBER                DOCUMENT_SEQUENCE_NUMBER
       ,TABLE1.GL_DOCUMENT_SEQUENCE_NAME               GL_DOCUMENT_SEQUENCE_NAME     -- added bug 10038642                                                                                   
       ,TABLE1.GL_DOCUMENT_SEQUENCE_NUMBER             GL_DOCUMENT_SEQUENCE_NUMBER   -- added bug 10038642
       ,TABLE1.APPLICATION_ID                          APPLICATION_ID
       ,TABLE1.APPLICATION_NAME                        APPLICATION_NAME
       ,TABLE1.HEADER_ID                               HEADER_ID
       ,TABLE1.HEADER_DESCRIPTION                      HEADER_DESCRIPTION
       ,TABLE1.FUND_STATUS                             FUND_STATUS
       ,TABLE1.JE_CATEGORY_NAME                        JE_CATEGORY_NAME
       ,TABLE1.JE_SOURCE_NAME                          JE_SOURCE_NAME
       ,TABLE1.EVENT_ID                                EVENT_ID
       ,TABLE1.EVENT_DATE                              EVENT_DATE
       ,TABLE1.EVENT_NUMBER                            EVENT_NUMBER
       ,TABLE1.EVENT_CLASS_CODE                        EVENT_CLASS_CODE
       ,TABLE1.EVENT_CLASS_NAME                        EVENT_CLASS_NAME
       ,TABLE1.EVENT_TYPE_CODE                         EVENT_TYPE_CODE
       ,TABLE1.EVENT_TYPE_NAME                         EVENT_TYPE_NAME
       ,TABLE1.GL_BATCH_NAME                           GL_BATCH_NAME
       ,TABLE1.POSTED_DATE                             POSTED_DATE
       ,TABLE1.GL_JE_NAME                              GL_JE_NAME
       ,TABLE1.GL_LINE_NUMBER                          GL_LINE_NUMBER
       ,TABLE1.LINE_NUMBER                             LINE_NUMBER
	   ,TABLE1.ORIG_LINE_NUMBER                        ORIG_LINE_NUMBER
       ,TABLE1.ACCOUNTING_CLASS_CODE                   ACCOUNTING_CLASS_CODE
       ,TABLE1.ACCOUNTING_CLASS_NAME                   ACCOUNTING_CLASS_NAME
       ,TABLE1.LINE_DESCRIPTION                        LINE_DESCRIPTION
       ,TABLE1.ENTERED_CURRENCY                        ENTERED_CURRENCY
       ,TABLE1.CONVERSION_RATE                         CONVERSION_RATE
       ,TABLE1.CONVERSION_RATE_DATE                    CONVERSION_RATE_DATE
       ,TABLE1.CONVERSION_RATE_TYPE_CODE               CONVERSION_RATE_TYPE_CODE
       ,TABLE1.CONVERSION_RATE_TYPE                    CONVERSION_RATE_TYPE
       ,TABLE1.ENTERED_DR                              ENTERED_DR
       ,TABLE1.ENTERED_CR                              ENTERED_CR
       ,TABLE1.UNROUNDED_ACCOUNTED_DR                  UNROUNDED_ACCOUNTED_DR
       ,TABLE1.UNROUNDED_ACCOUNTED_CR                  UNROUNDED_ACCOUNTED_CR
       ,TABLE1.ACCOUNTED_DR                            ACCOUNTED_DR
       ,TABLE1.ACCOUNTED_CR                            ACCOUNTED_CR
       ,TABLE1.STATISTICAL_AMOUNT                      STATISTICAL_AMOUNT
       ,TABLE1.RECONCILIATION_REFERENCE                RECONCILIATION_REFERENCE
       ,TABLE1.JGZZ_RECON_REF                          JGZZ_RECON_REF
       ,TABLE1.JGZZ_RECON_DATE                         JGZZ_RECON_DATE
       ,TABLE1.JGZZ_RECON_ID                           JGZZ_RECON_ID
       ,TABLE1.JGZZ_RECON_STATUS                       JGZZ_RECON_STATUS
       ,TABLE1.RECON_STATUS                            RECON_STATUS
       ,TABLE1.ATTRIBUTE_CATEGORY                      ATTRIBUTE_CATEGORY
       ,TABLE1.ATTRIBUTE1                              ATTRIBUTE1
       ,TABLE1.ATTRIBUTE2                              ATTRIBUTE2
       ,TABLE1.ATTRIBUTE3                              ATTRIBUTE3
       ,TABLE1.ATTRIBUTE4                              ATTRIBUTE4
       ,TABLE1.ATTRIBUTE5                              ATTRIBUTE5
       ,TABLE1.ATTRIBUTE6                              ATTRIBUTE6
       ,TABLE1.ATTRIBUTE7                              ATTRIBUTE7
       ,TABLE1.ATTRIBUTE8                              ATTRIBUTE8
       ,TABLE1.ATTRIBUTE9                              ATTRIBUTE9
       ,TABLE1.ATTRIBUTE10                             ATTRIBUTE10
       ,TABLE1.PARTY_TYPE_CODE                         PARTY_TYPE_CODE
       ,TABLE1.PARTY_TYPE                              PARTY_TYPE
       ,substr(PARTY_INFO,1,instr(PARTY_INFO,'|',1,1)-1 )                                                       PARTY_NUMBER
       ,nvl(substr(PARTY_INFO,instr(PARTY_INFO,'|',1,1)+1,(instr(PARTY_INFO,'|',1,2)-1-instr(PARTY_INFO,'|',1,1))), table2.supplier)  PARTY_NAME --RECEIPT ACCT
       ,substr(PARTY_INFO,instr(PARTY_INFO,'|',1,2)+1,(instr(PARTY_INFO,'|',1,3)-1-instr(PARTY_INFO,'|',1,2)))  PARTY_TYPE_TAXPAYER_ID
       ,substr(PARTY_INFO,instr(PARTY_INFO,'|',1,3)+1,(instr(PARTY_INFO,'|',1,4)-1-instr(PARTY_INFO,'|',1,3)))  PARTY_TAX_REGISTRATION_NUMBER
       ,substr(PARTY_INFO,instr(PARTY_INFO,'|',1,4)+1,(instr(PARTY_INFO,'|',1,5)-1-instr(PARTY_INFO,'|',1,4)))  PARTY_SITE_NUMBER
       ,substr(PARTY_INFO,instr(PARTY_INFO,'|',1,5)+1,(instr(PARTY_INFO,'|',1,6)-1-instr(PARTY_INFO,'|',1,5)))  PARTY_SITE_NAME
       ,substr(PARTY_INFO,instr(PARTY_INFO,'|',1,6)+1,(length(PARTY_INFO)- instr(PARTY_INFO,'|',1,6)))          PARTY_SITE_TAX_RGSTN_NUMBER
       ,substr(USERIDS,1,instr(USERIDS,'|',1,1)-1)                                                    USER_TRX_IDENTIFIER_NAME_1
       ,substr(USERIDS,instr(USERIDS,'|',1,1)+1,(instr(USERIDS,'|',1,2)-1-instr(USERIDS,'|',1,1)))    USER_TRX_IDENTIFIER_VALUE_1
       ,substr(USERIDS,instr(USERIDS,'|',1,2)+1,(instr(USERIDS,'|',1,3)-1-instr(USERIDS,'|',1,2)))    USER_TRX_IDENTIFIER_NAME_2
       ,substr(USERIDS,instr(USERIDS,'|',1,3)+1,(instr(USERIDS,'|',1,4)-1-instr(USERIDS,'|',1,3)))    USER_TRX_IDENTIFIER_VALUE_2
       ,substr(USERIDS,instr(USERIDS,'|',1,4)+1,(instr(USERIDS,'|',1,5)-1-instr(USERIDS,'|',1,4)))    USER_TRX_IDENTIFIER_NAME_3
       ,substr(USERIDS,instr(USERIDS,'|',1,5)+1,(instr(USERIDS,'|',1,6)-1-instr(USERIDS,'|',1,5)))    USER_TRX_IDENTIFIER_VALUE_3
       ,substr(USERIDS,instr(USERIDS,'|',1,6)+1,(instr(USERIDS,'|',1,7)-1-instr(USERIDS,'|',1,6)))    USER_TRX_IDENTIFIER_NAME_4
       ,substr(USERIDS,instr(USERIDS,'|',1,7)+1,(instr(USERIDS,'|',1,8)-1-instr(USERIDS,'|',1,7)))    USER_TRX_IDENTIFIER_VALUE_4
       ,substr(USERIDS,instr(USERIDS,'|',1,8)+1,(instr(USERIDS,'|',1,9)-1-instr(USERIDS,'|',1,8)))    USER_TRX_IDENTIFIER_NAME_5
       ,substr(USERIDS,instr(USERIDS,'|',1,9)+1,(instr(USERIDS,'|',1,10)-1-instr(USERIDS,'|',1,9)))   USER_TRX_IDENTIFIER_VALUE_5
       ,substr(USERIDS,instr(USERIDS,'|',1,10)+1,(instr(USERIDS,'|',1,11)-1-instr(USERIDS,'|',1,10))) USER_TRX_IDENTIFIER_NAME_6
       ,substr(USERIDS,instr(USERIDS,'|',1,11)+1,(instr(USERIDS,'|',1,12)-1-instr(USERIDS,'|',1,11))) USER_TRX_IDENTIFIER_VALUE_6
       ,substr(USERIDS,instr(USERIDS,'|',1,12)+1,(instr(USERIDS,'|',1,13)-1-instr(USERIDS,'|',1,12))) USER_TRX_IDENTIFIER_NAME_7
       ,substr(USERIDS,instr(USERIDS,'|',1,13)+1,(instr(USERIDS,'|',1,14)-1-instr(USERIDS,'|',1,13))) USER_TRX_IDENTIFIER_VALUE_7
       ,substr(USERIDS,instr(USERIDS,'|',1,14)+1,(instr(USERIDS,'|',1,15)-1-instr(USERIDS,'|',1,14))) USER_TRX_IDENTIFIER_NAME_8
       ,substr(USERIDS,instr(USERIDS,'|',1,15)+1,(instr(USERIDS,'|',1,16)-1-instr(USERIDS,'|',1,15))) USER_TRX_IDENTIFIER_VALUE_8
       ,substr(USERIDS,instr(USERIDS,'|',1,16)+1,(instr(USERIDS,'|',1,17)-1-instr(USERIDS,'|',1,16))) USER_TRX_IDENTIFIER_NAME_9
       ,substr(USERIDS,instr(USERIDS,'|',1,17)+1,(instr(USERIDS,'|',1,18)-1-instr(USERIDS,'|',1,17))) USER_TRX_IDENTIFIER_VALUE_9
       ,substr(USERIDS,instr(USERIDS,'|',1,18)+1,(instr(USERIDS,'|',1,19)-1-instr(USERIDS,'|',1,18))) USER_TRX_IDENTIFIER_NAME_10
       ,substr(USERIDS,instr(USERIDS,'|',1,19)+1,(length(USERIDS)-instr(USERIDS,'|',1,19)))           USER_TRX_IDENTIFIER_VALUE_10
       ,TABLE1.LEDGER_ID                               LEDGER_ID
       ,TABLE1.LEDGER_SHORT_NAME                       LEDGER_SHORT_NAME
       ,TABLE1.LEDGER_DESCRIPTION                      LEDGER_DESCRIPTION
       ,TABLE1.LEDGER_NAME                             LEDGER_NAME
       ,TABLE1.LEDGER_CURRENCY                         LEDGER_CURRENCY
       ,TABLE1.PERIOD_YEAR                             PERIOD_YEAR
       ,TABLE1.PERIOD_NUMBER                           PERIOD_NUMBER
       ,TABLE1.PERIOD_NAME                             PERIOD_NAME
       ,TABLE1.PERIOD_START_DATE                       PERIOD_START_DATE
       ,TABLE1.PERIOD_END_DATE                         PERIOD_END_DATE
       ,TABLE1.BALANCE_TYPE_CODE                       BALANCE_TYPE_CODE
       ,TABLE1.BALANCE_TYPE                            BALANCE_TYPE
       ,TABLE1.BUDGET_NAME                             BUDGET_NAME
       ,TABLE1.ENCUMBRANCE_TYPE                        ENCUMBRANCE_TYPE
       ,TABLE1.BEGIN_BALANCE_DR                        BEGIN_BALANCE_DR
       ,TABLE1.BEGIN_BALANCE_CR                        BEGIN_BALANCE_CR
       ,TABLE1.PERIOD_NET_DR                           PERIOD_NET_DR
       ,TABLE1.PERIOD_NET_CR                           PERIOD_NET_CR
       ,TABLE1.CODE_COMBINATION_ID                     CODE_COMBINATION_ID
       ,TABLE1.ACCOUNTING_CODE_COMBINATION             ACCOUNTING_CODE_COMBINATION
       ,&FLEX_DESCR_ALL                                CODE_COMBINATION_DESCRIPTION
       ,TABLE1.CONTROL_ACCOUNT_FLAG                    CONTROL_ACCOUNT_FLAG
       ,TABLE1.CONTROL_ACCOUNT                         CONTROL_ACCOUNT
       ,TABLE1.BALANCING_SEGMENT                       BALANCING_SEGMENT
       ,TABLE1.NATURAL_ACCOUNT_SEGMENT                 NATURAL_ACCOUNT_SEGMENT
       ,TABLE1.COST_CENTER_SEGMENT                     COST_CENTER_SEGMENT
       ,TABLE1.MANAGEMENT_SEGMENT                      MANAGEMENT_SEGMENT
       ,TABLE1.INTERCOMPANY_SEGMENT                    INTERCOMPANY_SEGMENT
       ,&FLEX_GL_BALANCING_DESC                          BALANCING_SEGMENT_DESC
       ,&FLEX_GL_ACCOUNT_DESC                            NATURAL_ACCOUNT_DESC
       ,&FLEX_FA_COST_CTR_DESC                           COST_CENTER_DESC
       ,&FLEX_GL_MANAGEMENT_DESC                         MANAGEMENT_SEGMENT_DESC
       ,&FLEX_GL_INTERCOMPANY_DESC                       INTERCOMPANY_SEGMENT_DESC

       ,TABLE1.SEGMENT1                                SEGMENT1
       ,TABLE1.SEGMENT2                                SEGMENT2
       ,TABLE1.SEGMENT3                                SEGMENT3
       ,TABLE1.SEGMENT4                                SEGMENT4
       ,TABLE1.SEGMENT5                                SEGMENT5
       ,TABLE1.SEGMENT6                                SEGMENT6
       ,TABLE1.SEGMENT7                                SEGMENT7
       ,TABLE1.SEGMENT8                                SEGMENT8
       ,TABLE1.SEGMENT9                                SEGMENT9
       ,TABLE1.SEGMENT10                               SEGMENT10
       ,TABLE1.SEGMENT11                               SEGMENT11
       ,TABLE1.SEGMENT12                               SEGMENT12
       ,TABLE1.SEGMENT13                               SEGMENT13
       ,TABLE1.SEGMENT14                               SEGMENT14
       ,TABLE1.SEGMENT15                               SEGMENT15
       ,TABLE1.SEGMENT16                               SEGMENT16
       ,TABLE1.SEGMENT17                               SEGMENT17
       ,TABLE1.SEGMENT18                               SEGMENT18
       ,TABLE1.SEGMENT19                               SEGMENT19
       ,TABLE1.SEGMENT20                               SEGMENT20
       ,TABLE1.SEGMENT21                               SEGMENT21
       ,TABLE1.SEGMENT22                               SEGMENT22
       ,TABLE1.SEGMENT23                               SEGMENT23
       ,TABLE1.SEGMENT24                               SEGMENT24
       ,TABLE1.SEGMENT25                               SEGMENT25
       ,TABLE1.SEGMENT26                               SEGMENT26
       ,TABLE1.SEGMENT27                               SEGMENT27
       ,TABLE1.SEGMENT28                               SEGMENT28
       ,TABLE1.SEGMENT29                               SEGMENT29
       ,TABLE1.SEGMENT30                               SEGMENT30
       ,TABLE1.BEGIN_RUNNING_TOTAL_CR                  BEGIN_RUNNING_TOTAL_CR
       ,TABLE1.BEGIN_RUNNING_TOTAL_DR                  BEGIN_RUNNING_TOTAL_DR
       ,TABLE1.END_RUNNING_TOTAL_CR                    END_RUNNING_TOTAL_CR
       ,TABLE1.END_RUNNING_TOTAL_DR                    END_RUNNING_TOTAL_DR
       ,TABLE1.LEGAL_ENTITY_ID                         LEGAL_ENTITY_ID
       ,TABLE1.LEGAL_ENTITY_NAME                       LEGAL_ENTITY_NAME
       ,TABLE1.LE_ADDRESS_LINE_1                       LE_ADDRESS_LINE_1
       ,TABLE1.LE_ADDRESS_LINE_2                       LE_ADDRESS_LINE_2
       ,TABLE1.LE_ADDRESS_LINE_3                       LE_ADDRESS_LINE_3
       ,TABLE1.LE_CITY                                 LE_CITY
       ,TABLE1.LE_REGION_1                             LE_REGION_1
       ,TABLE1.LE_REGION_2                             LE_REGION_2
       ,TABLE1.LE_REGION_3                             LE_REGION_3
       ,TABLE1.LE_POSTAL_CODE                          LE_POSTAL_CODE
       ,TABLE1.LE_COUNTRY                              LE_COUNTRY
       ,TABLE1.LE_REGISTRATION_NUMBER                  LE_REGISTRATION_NUMBER
       ,TABLE1.LE_REGISTRATION_EFFECTIVE_FROM          LE_REGISTRATION_EFFECTIVE_FROM
       ,TABLE1.LE_BR_DAILY_INSCRIPTION_NUMBER          LE_BR_DAILY_INSCRIPTION_NUMBER
       ,TABLE1.LE_BR_DAILY_INSCRIPTION_DATE            LE_BR_DAILY_INSCRIPTION_DATE
       ,TABLE1.LE_BR_DAILY_ENTITY                      LE_BR_DAILY_ENTITY
       ,TABLE1.LE_BR_DAILY_LOCATION                    LE_BR_DAILY_LOCATION
       ,TABLE1.LE_BR_DIRECTOR_NUMBER                   LE_BR_DIRECTOR_NUMBER
       ,TABLE1.LE_BR_ACCOUNTANT_NUMBER                 LE_BR_ACCOUNTANT_NUMBER
       ,TABLE1.LE_BR_ACCOUNTANT_NAME                   LE_BR_ACCOUNTANT_NAME
       &p_je_source_period  
       ,TABLE1.SR31                                    SR31
       ,TABLE1.SR32                                    SR32
       ,TABLE1.SR33                                    SR33
       ,TABLE1.SR34                                    SR34
       ,TABLE1.SR35                                    SR35
       ,TABLE1.SR36                                    SR36
       ,TABLE1.SR37                                    SR37
       ,TABLE1.SR38                                    SR38
       ,TABLE1.SR39                                    SR39
       ,TABLE1.SR40                                    SR40
       ,TABLE1.SR41                                    SR41
       ,TABLE1.SR42                                    SR42
       ,TABLE1.SR43                                    SR43
       ,TABLE1.SR44                                    SR44
       ,TABLE1.SR45                                    SR45
       ,TABLE1.SR46                                    SR46
       ,TABLE1.SR47                                    SR47
       ,TABLE1.SR48                                    SR48
       ,TABLE1.SR49                                    SR49
       ,TABLE1.SR50                                    SR50
       ,TABLE1.SR51                                    SR51
       ,TABLE1.SR52                                    SR52
       ,TABLE1.SR53                                    SR53
       ,TABLE1.SR54                                    SR54
       ,TABLE1.SR55                                    SR55
       ,TABLE1.SR56                                    SR56
       ,TABLE1.SR57                                    SR57
       ,TABLE1.SR58                                    SR58
       ,TABLE1.SR59                                    SR59
       ,TABLE1.SR60                                    SR60
	   ,TABLE2.RECEIPT_NUM
	,(
			SELECT LISTAGG(po_number, ';') WITHIN
			GROUP (
					ORDER BY po_number
					)
			FROM (
				(
					SELECT DISTINCT
			poh.segment1 po_number
		FROM rcv_transactions rtx
			,PO_HEADERS_ALL poh
			,RCV_SHIPMENT_HEADERS rcpt
		WHERE 1 = 1
			AND rtx.SHIPMENT_HEADER_ID = rcpt.SHIPMENT_HEADER_ID(+)
			AND rtx.po_header_id = poh.po_header_id(+)
			AND rtx.TRANSACTION_TYPE = 'RECEIVE'
			AND rcpt.RECEIPT_NUM = TABLE2.RECEIPT_NUM
					)
				)
			)PO_NUMBER
	--,TABLE2.INVOICE_NUMBER
	,(
			SELECT LISTAGG(invoice_num, ';') WITHIN
			GROUP (
					ORDER BY invoice_num
					)
			FROM (
				(
					SELECT DISTINCT
			inv.invoice_num
		--,inv.INVOICE_DATE
		FROM rcv_transactions rtx
			,AP_INVOICE_LINES_ALL invl
			,ap_invoices_all inv
			,RCV_SHIPMENT_HEADERS rcpt
		WHERE 1 = 1
			AND rtx.TRANSACTION_ID = invl.RCV_TRANSACTION_ID(+)
			AND invl.invoice_id = inv.invoice_id(+)
			AND rtx.SHIPMENT_HEADER_ID = rcpt.SHIPMENT_HEADER_ID(+)
			AND rtx.TRANSACTION_TYPE = 'RECEIVE'
			AND rcpt.RECEIPT_NUM = TABLE2.RECEIPT_NUM
					)
				)
			) invoice_number
	--,table2.supplier
	--,table2.INVOICE_DATE
	,(
			SELECT LISTAGG(INVOICE_DATE, ';') WITHIN
			GROUP (
					ORDER BY INVOICE_DATE
					)
			FROM (
				(
					SELECT DISTINCT
			--inv.invoice_num
		inv.INVOICE_DATE
		FROM rcv_transactions rtx
			,AP_INVOICE_LINES_ALL invl
			,ap_invoices_all inv
			,RCV_SHIPMENT_HEADERS rcpt
		WHERE 1 = 1
			AND rtx.TRANSACTION_ID = invl.RCV_TRANSACTION_ID(+)
			AND invl.invoice_id = inv.invoice_id(+)
			AND rtx.SHIPMENT_HEADER_ID = rcpt.SHIPMENT_HEADER_ID(+)
			AND rtx.TRANSACTION_TYPE = 'RECEIVE'
			AND rcpt.RECEIPT_NUM = TABLE2.RECEIPT_NUM
					)
				)
			) invoice_date
	,(
			SELECT LISTAGG(pjc_expenditure_item_date, ';') WITHIN
			GROUP (
					ORDER BY pjc_expenditure_item_date
					)
			FROM (
				(
					SELECT DISTINCT
			pod.pjc_expenditure_item_date
		FROM rcv_transactions rtx
			,PO_DISTRIBUTIONS_ALL pod
			,RCV_SHIPMENT_HEADERS rcpt
		,PJF_PROJ_ELEMENTS_TL tasktl
		,PJF_PROJ_ELEMENTS_B taskb
		,PJF_PROJECTS_ALL_TL prjtl
		,PJF_PROJECTS_ALL_B prjb
		WHERE 1 = 1
			AND rtx.SHIPMENT_HEADER_ID = rcpt.SHIPMENT_HEADER_ID(+)
			AND rtx.TRANSACTION_TYPE = 'RECEIVE'
			and rtx.po_distribution_id = pod.po_distribution_id (+)
			and pod.pjc_task_id = tasktl.proj_element_id (+)
			and pod.pjc_task_id = taskb.proj_element_id (+)
			and pod.pjc_project_id = prjtl.project_id (+)
			and pod.pjc_project_id = prjb.project_id (+)
			AND rcpt.RECEIPT_NUM = TABLE2.RECEIPT_NUM
					)
				)
			) EXPENDITURE_DATE --RCPT
	,(
			SELECT LISTAGG(project, ';') WITHIN
			GROUP (
					ORDER BY project
					)
			FROM (
				(
					SELECT DISTINCT
			decode ((prjb.segment1 || ':' || prjtl.name), ':', NULL, (prjb.segment1 || ':' || prjtl.name)) as project
		FROM rcv_transactions rtx
			,PO_DISTRIBUTIONS_ALL pod
			,RCV_SHIPMENT_HEADERS rcpt
		,PJF_PROJ_ELEMENTS_TL tasktl
		,PJF_PROJ_ELEMENTS_B taskb
		,PJF_PROJECTS_ALL_TL prjtl
		,PJF_PROJECTS_ALL_B prjb
		WHERE 1 = 1
			AND rtx.SHIPMENT_HEADER_ID = rcpt.SHIPMENT_HEADER_ID(+)
			AND rtx.TRANSACTION_TYPE = 'RECEIVE'
			and rtx.po_distribution_id = pod.po_distribution_id (+)
			and pod.pjc_task_id = tasktl.proj_element_id (+)
			and pod.pjc_task_id = taskb.proj_element_id (+)
			and pod.pjc_project_id = prjtl.project_id (+)
			and pod.pjc_project_id = prjb.project_id (+)
			AND rcpt.RECEIPT_NUM = TABLE2.RECEIPT_NUM
					)
				)
			) PROJECT --RCPT
	,(
			SELECT LISTAGG(task, ';') WITHIN
			GROUP (
					ORDER BY task
					)
			FROM (
				(
					SELECT DISTINCT
			decode ((taskb.element_number || ':' || tasktl.name), ':', NULL, (taskb.element_number || ':' || tasktl.name)) as task
		FROM rcv_transactions rtx
			,PO_DISTRIBUTIONS_ALL pod
			,RCV_SHIPMENT_HEADERS rcpt
		,PJF_PROJ_ELEMENTS_TL tasktl
		,PJF_PROJ_ELEMENTS_B taskb
		,PJF_PROJECTS_ALL_TL prjtl
		,PJF_PROJECTS_ALL_B prjb
		WHERE 1 = 1
			AND rtx.SHIPMENT_HEADER_ID = rcpt.SHIPMENT_HEADER_ID(+)
			AND rtx.TRANSACTION_TYPE = 'RECEIVE'
			and rtx.po_distribution_id = pod.po_distribution_id (+)
			and pod.pjc_task_id = tasktl.proj_element_id (+)
			and pod.pjc_task_id = taskb.proj_element_id (+)
			and pod.pjc_project_id = prjtl.project_id (+)
			and pod.pjc_project_id = prjb.project_id (+)
			AND rcpt.RECEIPT_NUM = TABLE2.RECEIPT_NUM
					)
				)
			) TASK -- RCPT
FROM
     (SELECT   /*+ leading (glbgt gjl gjh gir ael aeh) */ 
	      to_char(aeh.accounting_date
                 ,'YYYY-MM-DD')                        GL_DATE
         ,aeh.created_by                                CREATED_BY
         ,to_char(aeh.creation_date
                 ,'YYYY-MM-DD"T"hh:mi:ss')             CREATION_DATE
         ,to_char(aeh.last_update_date
                 ,'YYYY-MM-DD')                        LAST_UPDATE_DATE
         ,to_char(aeh.gl_transfer_date
                 ,'YYYY-MM-DD"T"hh:mi:ss')             GL_TRANSFER_DATE
         ,to_char(aeh.reference_date
                 ,'YYYY-MM-DD')                        REFERENCE_DATE
         ,to_char(aeh.completed_date
                 ,'YYYY-MM-DD"T"hh:mi:ss')             COMPLETED_DATE
         ,ent.transaction_number                       TRANSACTION_NUMBER
         ,to_char(xle.transaction_date
                 ,'YYYY-MM-DD"T"hh:mi:ss')             TRANSACTION_DATE
         ,fsv1.header_name                             ACCOUNTING_SEQUENCE_NAME
         ,fsv1.version_name                            ACCOUNTING_SEQUENCE_VERSION
         ,aeh.completion_acct_seq_value                ACCOUNTING_SEQUENCE_NUMBER
         ,fsv2.header_name                             REPORTING_SEQUENCE_NAME
         ,fsv2.version_name                            REPORTING_SEQUENCE_VERSION
         ,aeh.close_acct_seq_value                     REPORTING_SEQUENCE_NUMBER
         ,NULL                                         DOCUMENT_CATEGORY
         ,fns.name                                     DOCUMENT_SEQUENCE_NAME
         ,aeh.doc_sequence_value                       DOCUMENT_SEQUENCE_NUMBER
         ,fns1.name                                    GL_DOCUMENT_SEQUENCE_NAME   -- added bug 10038642
         ,gjh.doc_sequence_value                       GL_DOCUMENT_SEQUENCE_NUMBER -- added bug 10038642 
         ,aeh.application_id                           APPLICATION_ID
         ,xsl.application_name                         APPLICATION_NAME
         ,aeh.ae_header_id                             HEADER_ID
         ,aeh.description                              HEADER_DESCRIPTION
         ,flk1.meaning                                 FUND_STATUS
         ,gjct.user_je_category_name                   JE_CATEGORY_NAME
         ,gjst.user_je_source_name                     JE_SOURCE_NAME
         ,xle.event_id                                 EVENT_ID
         ,to_char(xle.event_date
                 ,'YYYY-MM-DD')                        EVENT_DATE
         ,xle.event_number                             EVENT_NUMBER
         ,xet.event_class_code                         EVENT_CLASS_CODE
         ,xect.NAME                                    EVENT_CLASS_NAME
         ,aeh.event_type_code                          EVENT_TYPE_CODE
         ,xet.NAME                                     EVENT_TYPE_NAME
         ,gjb.NAME                                     GL_BATCH_NAME
         ,to_char(gjb.posted_date
                 ,'YYYY-MM-DD')                        POSTED_DATE
         ,gjh.NAME                                     GL_JE_NAME
         ,gjh.external_reference                       EXTERNAL_REFERENCE
         ,gjl.je_line_num                              GL_LINE_NUMBER
         ,ael.displayed_line_number                    LINE_NUMBER
		 ,ael.ae_line_num							   ORIG_LINE_NUMBER
         ,ael.accounting_class_code                    ACCOUNTING_CLASS_CODE
         ,xlk2.meaning                                 ACCOUNTING_CLASS_NAME
         ,ael.description                              LINE_DESCRIPTION
         ,ael.currency_code                            ENTERED_CURRENCY
         ,ael.currency_conversion_rate                 CONVERSION_RATE
         ,to_char(ael.currency_conversion_date
                 ,'YYYY-MM-DD')                        CONVERSION_RATE_DATE
         ,ael.currency_conversion_type                 CONVERSION_RATE_TYPE_CODE
         ,gdct.user_conversion_type                    CONVERSION_RATE_TYPE
         ,ael.entered_dr                               ENTERED_DR
         ,ael.entered_cr                               ENTERED_CR
         ,ael.unrounded_accounted_dr                   UNROUNDED_ACCOUNTED_DR
         ,ael.unrounded_accounted_cr                   UNROUNDED_ACCOUNTED_CR
         ,ael.accounted_dr                             ACCOUNTED_DR
         ,ael.accounted_cr                             ACCOUNTED_CR
         ,ael.statistical_amount                       STATISTICAL_AMOUNT
         ,ael.jgzz_recon_ref                           RECONCILIATION_REFERENCE
 	 ,gjlr.jgzz_recon_ref			       JGZZ_RECON_REF
         ,to_char(gjlr.jgzz_recon_date
                 ,'YYYY-MM-DD') 	               JGZZ_RECON_DATE
 	 ,gjlr.jgzz_recon_id                           JGZZ_RECON_ID
	 ,gjlr.jgzz_recon_status                       JGZZ_RECON_STATUS
 	 ,(SELECT meaning
		FROM gl_lookups
		WHERE lookup_type = 'ORA_GL_LINE_RECON_STATUS'
		AND lookup_code   = Nvl(gjlr.jgzz_recon_status, 'U')) AS RECON_STATUS
         ,ael.attribute_category                       ATTRIBUTE_CATEGORY
         ,ael.attribute1                               ATTRIBUTE1
         ,ael.attribute2                               ATTRIBUTE2
         ,ael.attribute3                               ATTRIBUTE3
         ,ael.attribute4                               ATTRIBUTE4
         ,ael.attribute5                               ATTRIBUTE5
         ,ael.attribute6                               ATTRIBUTE6
         ,ael.attribute7                               ATTRIBUTE7
         ,ael.attribute8                               ATTRIBUTE8
         ,ael.attribute9                               ATTRIBUTE9
         ,ael.attribute10                              ATTRIBUTE10
         ,ael.party_type_code                          PARTY_TYPE_CODE
         ,NULL                                         PARTY_TYPE
         &p_party_columns                              PARTY_INFO
         &p_trx_identifiers                            USERIDS
         ,glbgt.ledger_id                              LEDGER_ID
         ,glbgt.ledger_short_name                      LEDGER_SHORT_NAME
         ,glbgt.ledger_description                     LEDGER_DESCRIPTION
         ,glbgt.ledger_name                            LEDGER_NAME
         ,glbgt.ledger_currency                        LEDGER_CURRENCY
         ,glbgt.period_year                            PERIOD_YEAR
         ,glbgt.period_number                          PERIOD_NUMBER
         ,glbgt.period_name                            PERIOD_NAME
         ,to_char(glbgt.period_start_date
                                 ,'YYYY-MM-DD')        PERIOD_START_DATE
         ,to_char(glbgt.period_end_date
                                 ,'YYYY-MM-DD')        PERIOD_END_DATE
         ,glbgt.balance_type_code                      BALANCE_TYPE_CODE
         ,glbgt.balance_type                           BALANCE_TYPE
         ,glbgt.budget_name                            BUDGET_NAME
         ,glbgt.encumbrance_type                       ENCUMBRANCE_TYPE
         ,glbgt.begin_balance_dr                       BEGIN_BALANCE_DR
         ,glbgt.begin_balance_cr                       BEGIN_BALANCE_CR
         ,glbgt.period_net_dr                          PERIOD_NET_DR
         ,glbgt.period_net_cr                          PERIOD_NET_CR
         ,glbgt.code_combination_id                    CODE_COMBINATION_ID
         ,glbgt.accounting_code_combination            ACCOUNTING_CODE_COMBINATION
         --,glbgt.code_combination_description           CODE_COMBINATION_DESCRIPTION
         ,glbgt.control_account_flag                   CONTROL_ACCOUNT_FLAG
         ,glbgt.control_account                        CONTROL_ACCOUNT
         ,glbgt.balancing_segment                      BALANCING_SEGMENT
         ,glbgt.natural_account_segment                NATURAL_ACCOUNT_SEGMENT
         ,glbgt.cost_center_segment                    COST_CENTER_SEGMENT
         ,glbgt.management_segment                     MANAGEMENT_SEGMENT
         ,glbgt.intercompany_segment                   INTERCOMPANY_SEGMENT
        -- ,glbgt.balancing_segment_desc                 BALANCING_SEGMENT_DESC
        -- ,glbgt.natural_account_desc                   NATURAL_ACCOUNT_DESC
        --,glbgt.cost_center_desc                       COST_CENTER_DESC
        --,glbgt.management_segment_desc                MANAGEMENT_SEGMENT_DESC
        -- ,glbgt.intercompany_segment_desc              INTERCOMPANY_SEGMENT_DESC
         ,glbgt.segment1                               SEGMENT1
         ,glbgt.segment2                               SEGMENT2
         ,glbgt.segment3                               SEGMENT3
         ,glbgt.segment4                               SEGMENT4
         ,glbgt.segment5                               SEGMENT5
         ,glbgt.segment6                               SEGMENT6
         ,glbgt.segment7                               SEGMENT7
         ,glbgt.segment8                               SEGMENT8
         ,glbgt.segment9                               SEGMENT9
         ,glbgt.segment10                              SEGMENT10
         ,glbgt.segment11                              SEGMENT11
         ,glbgt.segment12                              SEGMENT12
         ,glbgt.segment13                              SEGMENT13
         ,glbgt.segment14                              SEGMENT14
         ,glbgt.segment15                              SEGMENT15
         ,glbgt.segment16                              SEGMENT16
         ,glbgt.segment17                              SEGMENT17
         ,glbgt.segment18                              SEGMENT18
         ,glbgt.segment19                              SEGMENT19
         ,glbgt.segment20                              SEGMENT20
         ,glbgt.segment21                              SEGMENT21
         ,glbgt.segment22                              SEGMENT22
         ,glbgt.segment23                              SEGMENT23
         ,glbgt.segment24                              SEGMENT24
         ,glbgt.segment25                              SEGMENT25
         ,glbgt.segment26                              SEGMENT26
         ,glbgt.segment27                              SEGMENT27
         ,glbgt.segment28                              SEGMENT28
         ,glbgt.segment29                              SEGMENT29
         ,glbgt.segment30                              SEGMENT30
         ,glbgt.begin_running_total_cr                 BEGIN_RUNNING_TOTAL_CR
         ,glbgt.begin_running_total_dr                 BEGIN_RUNNING_TOTAL_DR
         ,glbgt.end_running_total_cr                   END_RUNNING_TOTAL_CR
         ,glbgt.end_running_total_dr                   END_RUNNING_TOTAL_DR
         ,glbgt.legal_entity_id                        LEGAL_ENTITY_ID
         ,glbgt.legal_entity_name                      LEGAL_ENTITY_NAME
         ,glbgt.le_address_line_1                      LE_ADDRESS_LINE_1
         ,glbgt.le_address_line_2                      LE_ADDRESS_LINE_2
         ,glbgt.le_address_line_3                      LE_ADDRESS_LINE_3
         ,glbgt.le_city                                LE_CITY
         ,glbgt.le_region_1                            LE_REGION_1
         ,glbgt.le_region_2                            LE_REGION_2
         ,glbgt.le_region_3                            LE_REGION_3
         ,glbgt.le_postal_code                         LE_POSTAL_CODE
         ,glbgt.le_country                             LE_COUNTRY
         ,glbgt.le_registration_number                 LE_REGISTRATION_NUMBER
         ,glbgt.le_registration_effective_from         LE_REGISTRATION_EFFECTIVE_FROM
         ,glbgt.le_br_daily_inscription_number         LE_BR_DAILY_INSCRIPTION_NUMBER
         ,to_char(glbgt.le_br_daily_inscription_date
                                ,'YYYY-MM-DD')                                             LE_BR_DAILY_INSCRIPTION_DATE
         ,glbgt.le_br_daily_entity                     LE_BR_DAILY_ENTITY
         ,glbgt.le_br_daily_location                   LE_BR_DAILY_LOCATION
         ,glbgt.le_br_director_number                  LE_BR_DIRECTOR_NUMBER
         ,glbgt.le_br_accountant_number                LE_BR_ACCOUNTANT_NUMBER
         ,glbgt.le_br_accountant_name                  LE_BR_ACCOUNTANT_NAME
         ,:P_COA_ID                                    CHART_OF_ACCOUNTS_ID
         ,ael.SR31                                    SR31
         ,ael.SR32                                    SR32
         ,ael.SR33                                    SR33
         ,ael.SR34                                    SR34
         ,ael.SR35                                    SR35
         ,ael.SR36                                    SR36
         ,ael.SR37                                    SR37
         ,ael.SR38                                    SR38
         ,ael.SR39                                    SR39
         ,ael.SR40                                    SR40
         ,ael.SR41                                    SR41
         ,ael.SR42                                    SR42
         ,ael.SR43                                    SR43
         ,ael.SR44                                    SR44
         ,ael.SR45                                    SR45
         ,ael.SR46                                    SR46
         ,ael.SR47                                    SR47
         ,ael.SR48                                    SR48
         ,ael.SR49                                    SR49
         ,ael.SR50                                    SR50
         ,ael.SR51                                    SR51
         ,ael.SR52                                    SR52
         ,ael.SR53                                    SR53
         ,ael.SR54                                    SR54
         ,ael.SR55                                    SR55
         ,ael.SR56                                    SR56
         ,ael.SR57                                    SR57
         ,ael.SR58                                    SR58
         ,ael.SR59                                    SR59
         ,ael.SR60                                    SR60 

FROM     xla_ae_headers                   aeh
        ,xla_ae_lines                     ael
        ,fnd_lookup_values_tl             flk1
        ,xla_lookups                      xlk2
        ,xla_events                       xle
        ,xla_event_classes_tl             xect
        ,xla_event_types_tl               xet
       -- ,fnd_user                         fdu
        ,xla_transaction_entities         ent
        --,fnd_application_tl               fap
        ,xla_subledgers_tl                xsl
        ,fun_seq_versions                 fsv1
        ,fun_seq_versions                 fsv2
        ,fnd_document_sequences           fns
        ,fnd_document_sequences           fns1
        ,gl_je_categories_tl              gjct
        ,gl_je_sources_tl                 gjst
        ,gl_daily_conversion_types        gdct
        ,gl_import_references             gir
        ,gl_je_lines                      gjl
        ,gl_je_headers                    gjh
        ,gl_je_batches                    gjb
	,gl_je_lines_recon                gjlr
        ,xla_report_balances           glbgt --KT:21B

WHERE    &p_ledger_filters 
  AND    gjl.ledger_id                    = glbgt.ledger_id
  AND    gjl.code_combination_id          = glbgt.code_combination_id
  AND    gjl.effective_date               BETWEEN glbgt.period_start_date AND glbgt.period_end_date
  &p_period_date_join1 
  AND    gjl.period_name                  = glbgt.period_name
  AND    gjl.je_header_id                   = gjh.je_header_id
  AND    gjl.period_name                    = gjh.period_name
  AND    gjl.je_header_id                   = gir.je_header_id
  AND    gjl.je_line_num                    = gir.je_line_num
  AND    gjl.je_header_id                   = gjlr.je_header_id(+)
  AND    gjl.je_line_num                    = gjlr.je_line_num(+)
  AND    gjh.je_header_id                   = gir.je_header_id
  AND    gjh.status                         = 'P'
  AND    fns1.application_id(+)              = 101                             -- added bug 10038642
  AND    fns1.doc_sequence_id(+)             = gjh.doc_sequence_id             -- added bug 10038642
  AND    NVL(gjh.je_from_sla_flag,'N')      IN('Y','U')
  AND    gjb.je_batch_id                    = gir.je_batch_id
  AND    gjb.status                         = 'P'
  AND    gir.gl_sl_link_id                  = ael.gl_sl_link_id
  AND    gir.gl_sl_link_table               = ael.gl_sl_link_table
--AND  gjl.currency_code                    = glbgt.ledger_currency --added bug 6722505
  AND    gjct.je_category_name              = aeh.je_category_name
  AND    gjct.LANGUAGE                      = USERENV('LANG')
  AND    gjst.je_source_name                = gjh.je_source
  AND    gjst.LANGUAGE                      = USERENV('LANG')
  AND    aeh.accounting_entry_status_code   = 'F'
  AND    aeh.gl_transfer_status_code        = 'Y'
  AND    aeh.balance_type_code              = glbgt.balance_type_code
  AND    NVL(aeh.budget_version_id,-19999)  = NVL(glbgt.budget_version_id,-19999)
  AND    ael.application_id                 = aeh.application_id
  AND    ael.ae_header_id                   = aeh.ae_header_id
  AND    NVL(ael.encumbrance_type_id,-19999)= NVL(glbgt.encumbrance_type_id,-19999)  -- 4458381
  AND    flk1.lookup_type(+)                = 'XCC_BC_FUNDS_STATUSES'
  AND    flk1.lookup_code(+)                = aeh.funds_status_code
  AND    flk1.language(+)                   = USERENV('LANG')
  AND    flk1.view_application_id(+)        = 0
  AND    xlk2.lookup_type                   = 'XLA_ACCOUNTING_CLASS'
  AND    xlk2.lookup_code                   = ael.accounting_class_code
  AND    xle.application_id                 = aeh.application_id
  AND    xle.event_id                       = aeh.event_id
  AND    xet.application_id                 = aeh.application_id
  AND    xet.event_type_code                = aeh.event_type_code
  AND    xet.LANGUAGE                       = USERENV('LANG')
  AND    xect.application_id                = xet.application_id
  AND    xect.entity_code                   = xet.entity_code
  AND    xect.event_class_code              = xet.event_class_code
  AND    xect.LANGUAGE                      = USERENV('LANG')
  AND    ent.application_id                 = aeh.application_id
  AND    ent.entity_id                      = aeh.entity_id
  --AND    ent.ledger_id                      = aeh.ledger_id -- bug 8347816
  --AND    fdu.user_id                        = ent.created_by
  AND    xsl.application_id                 = aeh.application_id
  AND    xsl.LANGUAGE                       = USERENV('LANG')
  AND    fsv1.seq_version_id(+)             = aeh.completion_acct_seq_version_id
  AND    fsv2.seq_version_id(+)             = aeh.close_acct_seq_version_id
  AND    fns.application_id(+)              = aeh.application_id
  AND    fns.doc_sequence_id(+)             = aeh.doc_sequence_id
  AND    gdct.conversion_type(+)            = ael.currency_conversion_type
    &p_sla_other_filter
 --removed as part of 6719948
 --AND    ael.code_combination_id            = glbgt.code_combination_id
 --AND    aeh.ledger_id                      = glbgt.ledger_id
 --AND    aeh.accounting_date                BETWEEN glbgt.period_start_date AND glbgt.period_end_date
 --AND    aeh.accounting_date                BETWEEN :P_GL_DATE_FROM AND :P_GL_DATE_TO
 --AND    aeh.period_name                    = glbgt.period_name
 --AND    gjh.ledger_id                      = aeh.ledger_id

   UNION ALL

   SELECT /*+ leading (glbgt gjl gjh gjb) */
           to_char(gjh.default_effective_date
                     ,'YYYY-MM-DD')                        GL_DATE
             ,gjh.created_by                                CREATED_BY
             ,to_char(gjh.creation_date
                     ,'YYYY-MM-DD"T"hh:mi:ss')             CREATION_DATE
             ,to_char(gjh.last_update_date
                     ,'YYYY-MM-DD')                        LAST_UPDATE_DATE
             ,NULL                                         GL_TRANSFER_DATE
             ,to_char(gjh.reference_date
                     ,'YYYY-MM-DD')                        REFERENCE_DATE
             ,NULL                                         COMPLETED_DATE
             ,NULL                                         TRANSACTION_NUMBER
             ,NULL                                         TRANSACTION_DATE
             ,fsv1.header_name                             ACCOUNTING_SEQUENCE_NAME
             ,fsv1.version_name                            ACCOUNTING_SEQUENCE_VERSION
             ,gjh.posting_acct_seq_value                   ACCOUNTING_SEQUENCE_NUMBER
             ,fsv2.header_name                             REPORTING_SEQUENCE_NAME
             ,fsv2.version_name                            REPORTING_SEQUENCE_VERSION
             ,gjh.close_acct_seq_value                     REPORTING_SEQUENCE_NUMBER
             ,NULL                                         DOCUMENT_CATEGORY
             ,NULL                                         DOCUMENT_SEQUENCE_NAME
             ,NULL                                         DOCUMENT_SEQUENCE_NUMBER
             ,fns.name                                     GL_DOCUMENT_SEQUENCE_NAME   -- added bug 10038642
             ,gjh.doc_sequence_value                       GL_DOCUMENT_SEQUENCE_NUMBER -- added bug 10038642 
             ,NULL                                         APPLICATION_ID
             ,NULL                                         APPLICATION_NAME
             ,gjh.je_header_id                             HEADER_ID
             ,gjh.description                              HEADER_DESCRIPTION
             ,NULL                                         FUND_STATUS
             ,gjct.user_je_category_name                   JE_CATEGORY_NAME
             ,gjst.user_je_source_name                     JE_SOURCE_NAME
             ,NULL                                         EVENT_ID
             ,NULL                                         EVENT_DATE
             ,NULL                                         EVENT_NUMBER
             ,NULL                                         EVENT_CLASS_CODE
             ,NULL                                         EVENT_CLASS_NAME
             ,NULL                                         EVENT_TYPE_CODE
             ,NULL                                         EVENT_TYPE_NAME
             ,gjb.NAME                                     GL_BATCH_NAME
             ,to_char(gjb.posted_date
                     ,'YYYY-MM-DD')                        POSTED_DATE
             ,gjh.NAME                                     GL_JE_NAME
             ,gjh.external_reference                       EXTERNAL_REFERENCE
             ,gjl.je_line_num                              GL_LINE_NUMBER
             ,gjl.je_line_num                              LINE_NUMBER
			 ,gjl.je_line_num                              ORIG_LINE_NUMBER
             ,NULL                                         ACCOUNTING_CLASS_CODE
             ,NULL                                         ACCOUNTING_CLASS_NAME

             ,gjl.description                              LINE_DESCRIPTION
             ,gjl.currency_code                            ENTERED_CURRENCY
             ,gjl.currency_conversion_rate                 CONVERSION_RATE
             ,to_char(gjl.currency_conversion_date
                     ,'YYYY-MM-DD')                        CONVERSION_RATE_DATE
             ,gjl.currency_conversion_type                 CONVERSION_RATE_TYPE_CODE
             ,gdct.user_conversion_type                    CONVERSION_RATE_TYPE
             ,gjl.entered_dr                               ENTERED_DR
             ,gjl.entered_cr                               ENTERED_CR
             ,NULL                                         UNROUNDED_ACCOUNTED_DR
             ,NULL                                         UNROUNDED_ACCOUNTED_CR
             ,gjl.accounted_dr                             ACCOUNTED_DR
             ,gjl.accounted_cr                             ACCOUNTED_CR
             ,gjl.stat_amount                              STATISTICAL_AMOUNT
             ,gjl.jgzz_recon_ref                           RECONCILIATION_REFERENCE
 	     ,gjlr.jgzz_recon_ref			   JGZZ_RECON_REF	
             ,to_char(gjlr.jgzz_recon_date
                 ,'YYYY-MM-DD') 	                   JGZZ_RECON_DATE
 	     ,gjlr.jgzz_recon_id                           JGZZ_RECON_ID
	     ,gjlr.jgzz_recon_status                       JGZZ_RECON_STATUS
 	     ,(SELECT meaning
		FROM gl_lookups
		WHERE lookup_type = 'ORA_GL_LINE_RECON_STATUS'
		AND lookup_code   = Nvl(gjlr.jgzz_recon_status, 'U')) AS RECON_STATUS
             ,gjl.attribute_category                       ATTRIBUTE_CATEGORY
             ,gjl.attribute1                               ATTRIBUTE1
             ,gjl.attribute2                               ATTRIBUTE2
             ,gjl.attribute3                               ATTRIBUTE3
             ,gjl.attribute4                               ATTRIBUTE4
             ,gjl.attribute5                               ATTRIBUTE5
             ,gjl.attribute6                               ATTRIBUTE6
             ,gjl.attribute7                               ATTRIBUTE7
             ,gjl.attribute8                               ATTRIBUTE8
             ,gjl.attribute9                               ATTRIBUTE9
             ,gjl.attribute10                              ATTRIBUTE10
             ,NULL                                         PARTY_TYPE_CODE
             ,NULL                                         PARTY_TYPE
             ,NULL                                         PARTY_INFO
             ,NULL                                         USERIDS
             ,glbgt.ledger_id                              LEDGER_ID
             ,glbgt.ledger_short_name                      LEDGER_SHORT_NAME
             ,glbgt.ledger_description                     LEDGER_DESCRIPTION
             ,glbgt.ledger_name                            LEDGER_NAME
             ,glbgt.ledger_currency                        LEDGER_CURRENCY
             ,glbgt.period_year                            PERIOD_YEAR
             ,glbgt.period_number                          PERIOD_NUMBER
             ,glbgt.period_name                            PERIOD_NAME
             ,to_char(glbgt.period_start_date
                                        ,'YYYY-MM-DD')     PERIOD_START_DATE
             ,to_char(glbgt.period_end_date
                                        ,'YYYY-MM-DD')     PERIOD_END_DATE
             ,glbgt.balance_type_code                      BALANCE_TYPE_CODE
             ,glbgt.balance_type                           BALANCE_TYPE
             ,glbgt.budget_name                            BUDGET_NAME
             ,glbgt.encumbrance_type                       ENCUMBRANCE_TYPE
             ,glbgt.begin_balance_dr                       BEGIN_BALANCE_DR
             ,glbgt.begin_balance_cr                       BEGIN_BALANCE_CR
             ,glbgt.period_net_dr                          PERIOD_NET_DR
             ,glbgt.period_net_cr                          PERIOD_NET_CR
             ,glbgt.code_combination_id                    CODE_COMBINATION_ID
             ,glbgt.accounting_code_combination            ACCOUNTING_CODE_COMBINATION
            -- ,glbgt.code_combination_description           CODE_COMBINATION_DESCRIPTION
             ,glbgt.control_account_flag                   CONTROL_ACCOUNT_FLAG
             ,glbgt.control_account                        CONTROL_ACCOUNT
             ,glbgt.balancing_segment                      BALANCING_SEGMENT
             ,glbgt.natural_account_segment                NATURAL_ACCOUNT_SEGMENT
             ,glbgt.cost_center_segment                    COST_CENTER_SEGMENT
             ,glbgt.management_segment                     MANAGEMENT_SEGMENT
             ,glbgt.intercompany_segment                   INTERCOMPANY_SEGMENT
             --,glbgt.balancing_segment_desc                 BALANCING_SEGMENT_DESC
             --,glbgt.natural_account_desc                   NATURAL_ACCOUNT_DESC
             --,glbgt.cost_center_desc                       COST_CENTER_DESC
             --,glbgt.management_segment_desc                MANAGEMENT_SEGMENT_DESC
             --,glbgt.intercompany_segment_desc              INTERCOMPANY_SEGMENT_DESC
             ,glbgt.segment1                               SEGMENT1
             ,glbgt.segment2                               SEGMENT2
             ,glbgt.segment3                               SEGMENT3
             ,glbgt.segment4                               SEGMENT4
             ,glbgt.segment5                               SEGMENT5
             ,glbgt.segment6                               SEGMENT6
             ,glbgt.segment7                               SEGMENT7
             ,glbgt.segment8                               SEGMENT8
             ,glbgt.segment9                               SEGMENT9
             ,glbgt.segment10                              SEGMENT10
             ,glbgt.segment11                              SEGMENT11
             ,glbgt.segment12                              SEGMENT12
             ,glbgt.segment13                              SEGMENT13
             ,glbgt.segment14                              SEGMENT14
             ,glbgt.segment15                              SEGMENT15
             ,glbgt.segment16                              SEGMENT16
             ,glbgt.segment17                              SEGMENT17
             ,glbgt.segment18                              SEGMENT18
             ,glbgt.segment19                              SEGMENT19
             ,glbgt.segment20                              SEGMENT20
             ,glbgt.segment21                              SEGMENT21
             ,glbgt.segment22                              SEGMENT22
             ,glbgt.segment23                              SEGMENT23
             ,glbgt.segment24                              SEGMENT24
             ,glbgt.segment25                              SEGMENT25
             ,glbgt.segment26                              SEGMENT26
             ,glbgt.segment27                              SEGMENT27
             ,glbgt.segment28                              SEGMENT28
             ,glbgt.segment29                              SEGMENT29
             ,glbgt.segment30                              SEGMENT30
             ,glbgt.begin_running_total_cr                 BEGIN_RUNNING_TOTAL_CR
             ,glbgt.begin_running_total_dr                 BEGIN_RUNNING_TOTAL_DR
             ,glbgt.end_running_total_cr                   END_RUNNING_TOTAL_CR
             ,glbgt.end_running_total_dr                   END_RUNNING_TOTAL_DR
             ,glbgt.legal_entity_id                        LEGAL_ENTITY_ID
             ,glbgt.legal_entity_name                      LEGAL_ENTITY_NAME
             ,glbgt.le_address_line_1                      LE_ADDRESS_LINE_1
             ,glbgt.le_address_line_2                      LE_ADDRESS_LINE_2
             ,glbgt.le_address_line_3                      LE_ADDRESS_LINE_3
             ,glbgt.le_city                                LE_CITY
             ,glbgt.le_region_1                            LE_REGION_1
             ,glbgt.le_region_2                            LE_REGION_2
             ,glbgt.le_region_3                            LE_REGION_3
             ,glbgt.le_postal_code                         LE_POSTAL_CODE
             ,glbgt.le_country                             LE_COUNTRY
             ,glbgt.le_registration_number                 LE_REGISTRATION_NUMBER
             ,glbgt.le_registration_effective_from         LE_REGISTRATION_EFFECTIVE_FROM
             ,glbgt.le_br_daily_inscription_number         LE_BR_DAILY_INSCRIPTION_NUMBER
             ,to_char(glbgt.le_br_daily_inscription_date
                                        ,'YYYY-MM-DD')     LE_BR_DAILY_INSCRIPTION_DATE
             ,glbgt.le_br_daily_entity                     LE_BR_DAILY_ENTITY
             ,glbgt.le_br_daily_location                   LE_BR_DAILY_LOCATION
             ,glbgt.le_br_director_number                  LE_BR_DIRECTOR_NUMBER
             ,glbgt.le_br_accountant_number                LE_BR_ACCOUNTANT_NUMBER
             ,glbgt.le_br_accountant_name                  LE_BR_ACCOUNTANT_NAME
             ,:P_COA_ID                                    CHART_OF_ACCOUNTS_ID
             ,NULL                                    SR31
             ,NULL                                    SR32
             ,NULL                                    SR33
             ,NULL                                    SR34
             ,NULL                                    SR35
             ,NULL                                    SR36
             ,NULL                                    SR37
             ,NULL                                    SR38
             ,NULL                                    SR39
             ,NULL                                    SR40
             ,NULL                                    SR41
             ,NULL                                    SR42
             ,NULL                                    SR43
             ,NULL                                    SR44
             ,NULL                                    SR45
             ,NULL                                    SR46
             ,NULL                                    SR47
             ,NULL                                    SR48
             ,NULL                                    SR49
             ,NULL                                    SR50
             ,NULL                                    SR51
             ,NULL                                    SR52
             ,NULL                                    SR53
             ,NULL                                    SR54
             ,NULL                                    SR55
             ,NULL                                    SR56
             ,NULL                                    SR57
             ,NULL                                    SR58
             ,NULL                                    SR59
             ,NULL                                    SR60  
     FROM  --  fnd_user                         fdu
             fun_seq_versions                 fsv1
            ,fun_seq_versions                 fsv2
            ,fnd_document_sequences           fns
            ,gl_je_categories_tl              gjct
            ,gl_je_sources_tl                 gjst
            ,gl_daily_conversion_types        gdct
            ,gl_je_lines                      gjl
            ,gl_je_headers                    gjh
            ,gl_je_batches                    gjb
            ,gl_je_lines_recon                gjlr
            ,xla_report_balances           glbgt --KT:21B
     WHERE   gjl.ledger_id                    = glbgt.ledger_id
       AND   gjl.code_combination_id          = glbgt.code_combination_id
       AND   gjl.effective_date               BETWEEN glbgt.period_start_date AND glbgt.period_end_date
       &p_period_date_join2  
       AND   gjl.period_name                  = glbgt.period_name
       AND   gjl.je_header_id                 = gjlr.je_header_id(+)
       AND   gjl.je_line_num                  = gjlr.je_line_num(+)
       AND   gjh.je_header_id                 = gjl.je_header_id
       AND   gjh.actual_flag                  = glbgt.balance_type_code
       AND   decode(gjl.currency_code,'STAT',gjl.currency_code,glbgt.ledger_currency) = glbgt.ledger_currency --added bug 6686541
       AND   NVL(gjh.je_from_sla_flag,'N')    = 'N'
       AND   NVL(gjh.budget_version_id,-19999)= NVL(glbgt.budget_version_id,-19999)
       AND   NVL(gjh.encumbrance_type_id,-19999)= NVL(glbgt.encumbrance_type_id,-19999)
       AND   gjb.je_batch_id                  = gjh.je_batch_id
       AND   gjb.status                       = 'P'
       AND   fns.application_id(+)              = 101                      -- added bug 10038642
       AND   fns.doc_sequence_id(+)             = gjh.doc_sequence_id      -- added bug 10038642
     --  AND   fdu.user_id                      = gjb.created_by
       AND   fsv1.seq_version_id(+)           = gjh.posting_acct_seq_version_id
       AND   fsv2.seq_version_id(+)           = gjh.close_acct_seq_version_id
       AND   gjct.je_category_name            = gjh.je_category
       AND   gjct.LANGUAGE                    = USERENV('LANG')
       AND   gjst.je_source_name              = gjh.je_source
       AND   gjst.language                    = USERENV('LANG')
       AND   gdct.conversion_type(+)          = gjl.currency_conversion_type
       &p_gl_other_filter

   UNION ALL

   SELECT  /*+ leading (glbgt gjl gjh gjb) */
           to_char(gjh.default_effective_date
                     ,'YYYY-MM-DD')                        GL_DATE
             ,gjh.created_by                                CREATED_BY
             ,to_char(gjh.creation_date
                     ,'YYYY-MM-DD"T"hh:mi:ss')             CREATION_DATE
             ,to_char(gjh.last_update_date
                     ,'YYYY-MM-DD')                        LAST_UPDATE_DATE
             ,NULL                                         GL_TRANSFER_DATE
             ,to_char(gjh.reference_date
                     ,'YYYY-MM-DD')                        REFERENCE_DATE
             ,NULL                                         COMPLETED_DATE
             ,NULL                                         TRANSACTION_NUMBER
             ,NULL                                         TRANSACTION_DATE
             ,fsv1.header_name                             ACCOUNTING_SEQUENCE_NAME
             ,fsv1.version_name                            ACCOUNTING_SEQUENCE_VERSION
             ,gjh.posting_acct_seq_value                   ACCOUNTING_SEQUENCE_NUMBER
             ,fsv2.header_name                             REPORTING_SEQUENCE_NAME
             ,fsv2.version_name                            REPORTING_SEQUENCE_VERSION
             ,gjh.close_acct_seq_value                     REPORTING_SEQUENCE_NUMBER
             ,NULL                                         DOCUMENT_CATEGORY
             ,NULL                                         DOCUMENT_SEQUENCE_NAME
             ,NULL                                         DOCUMENT_SEQUENCE_NUMBER
             ,fns.name                                     GL_DOCUMENT_SEQUENCE_NAME   -- added bug 10038642
             ,gjh.doc_sequence_value                       GL_DOCUMENT_SEQUENCE_NUMBER -- added bug 10038642 
             ,NULL                                         APPLICATION_ID
             ,NULL                                         APPLICATION_NAME
             ,gjh.je_header_id                             HEADER_ID
             ,gjh.description                              HEADER_DESCRIPTION
             ,NULL                                         FUND_STATUS
             ,gjct.user_je_category_name                   JE_CATEGORY_NAME
             ,gjst.user_je_source_name                     JE_SOURCE_NAME
             ,NULL                                         EVENT_ID
             ,NULL                                         EVENT_DATE
             ,NULL                                         EVENT_NUMBER
             ,NULL                                         EVENT_CLASS_CODE
             ,NULL                                         EVENT_CLASS_NAME
             ,NULL                                         EVENT_TYPE_CODE
             ,NULL                                         EVENT_TYPE_NAME
             ,gjb.NAME                                     GL_BATCH_NAME
             ,to_char(gjb.posted_date
                     ,'YYYY-MM-DD')                        POSTED_DATE
             ,gjh.NAME                                     GL_JE_NAME
             ,gjh.external_reference                       EXTERNAL_REFERENCE
             ,gjl.je_line_num                              GL_LINE_NUMBER
             ,gjl.je_line_num                              LINE_NUMBER
             ,gjl.je_line_num                              ORIG_LINE_NUMBER
             ,NULL                                         ACCOUNTING_CLASS_CODE
             ,NULL                                         ACCOUNTING_CLASS_NAME
             ,gjl.description                              LINE_DESCRIPTION
             ,gjl.currency_code                            ENTERED_CURRENCY
             ,gjl.currency_conversion_rate                 CONVERSION_RATE
             ,to_char(gjl.currency_conversion_date
                     ,'YYYY-MM-DD')                        CONVERSION_RATE_DATE
             ,gjl.currency_conversion_type                 CONVERSION_RATE_TYPE_CODE
             ,gdct.user_conversion_type                    CONVERSION_RATE_TYPE
             ,gjl.entered_dr                               ENTERED_DR
             ,gjl.entered_cr                               ENTERED_CR
             ,NULL                                         UNROUNDED_ACCOUNTED_DR
             ,NULL                                         UNROUNDED_ACCOUNTED_CR
             ,gjl.accounted_dr                             ACCOUNTED_DR
             ,gjl.accounted_cr                             ACCOUNTED_CR
             ,gjl.stat_amount                              STATISTICAL_AMOUNT
             ,gjl.jgzz_recon_ref                           RECONCILIATION_REFERENCE
 	     ,gjlr.jgzz_recon_ref			   JGZZ_RECON_REF	
             ,to_char(gjlr.jgzz_recon_date
                 ,'YYYY-MM-DD') 	                   JGZZ_RECON_DATE
 	     ,gjlr.jgzz_recon_id                           JGZZ_RECON_ID
	     ,gjlr.jgzz_recon_status                       JGZZ_RECON_STATUS
 	     ,(SELECT meaning
		FROM gl_lookups
		WHERE lookup_type = 'ORA_GL_LINE_RECON_STATUS'
		AND lookup_code   = Nvl(gjlr.jgzz_recon_status, 'U')) AS RECON_STATUS
             ,gjl.attribute_category                       ATTRIBUTE_CATEGORY
             ,gjl.attribute1                               ATTRIBUTE1
             ,gjl.attribute2                               ATTRIBUTE2
             ,gjl.attribute3                               ATTRIBUTE3
             ,gjl.attribute4                               ATTRIBUTE4
             ,gjl.attribute5                               ATTRIBUTE5
             ,gjl.attribute6                               ATTRIBUTE6
             ,gjl.attribute7                               ATTRIBUTE7
             ,gjl.attribute8                               ATTRIBUTE8
             ,gjl.attribute9                               ATTRIBUTE9
             ,gjl.attribute10                              ATTRIBUTE10
             ,NULL                                         PARTY_TYPE_CODE
             ,NULL                                         PARTY_TYPE
             ,NULL                                         PARTY_INFO
             ,NULL                                         USERIDS
             ,glbgt.ledger_id                              LEDGER_ID
             ,glbgt.ledger_short_name                      LEDGER_SHORT_NAME
             ,glbgt.ledger_description                     LEDGER_DESCRIPTION
             ,glbgt.ledger_name                            LEDGER_NAME
             ,glbgt.ledger_currency                        LEDGER_CURRENCY
             ,glbgt.period_year                            PERIOD_YEAR
             ,glbgt.period_number                          PERIOD_NUMBER
             ,glbgt.period_name                            PERIOD_NAME
             ,to_char(glbgt.period_start_date
                                        ,'YYYY-MM-DD')     PERIOD_START_DATE
             ,to_char(glbgt.period_end_date
                                        ,'YYYY-MM-DD')     PERIOD_END_DATE
             ,glbgt.balance_type_code                      BALANCE_TYPE_CODE
             ,glbgt.balance_type                           BALANCE_TYPE
             ,glbgt.budget_name                            BUDGET_NAME
             ,glbgt.encumbrance_type                       ENCUMBRANCE_TYPE
             ,glbgt.begin_balance_dr                       BEGIN_BALANCE_DR
             ,glbgt.begin_balance_cr                       BEGIN_BALANCE_CR
             ,glbgt.period_net_dr                          PERIOD_NET_DR
             ,glbgt.period_net_cr                          PERIOD_NET_CR
             ,glbgt.code_combination_id                    CODE_COMBINATION_ID
             ,glbgt.accounting_code_combination            ACCOUNTING_CODE_COMBINATION
             --,glbgt.code_combination_description           CODE_COMBINATION_DESCRIPTION
             ,glbgt.control_account_flag                   CONTROL_ACCOUNT_FLAG
             ,glbgt.control_account                        CONTROL_ACCOUNT
             ,glbgt.balancing_segment                      BALANCING_SEGMENT
             ,glbgt.natural_account_segment                NATURAL_ACCOUNT_SEGMENT
             ,glbgt.cost_center_segment                    COST_CENTER_SEGMENT
             ,glbgt.management_segment                     MANAGEMENT_SEGMENT
             ,glbgt.intercompany_segment                   INTERCOMPANY_SEGMENT
            -- ,glbgt.balancing_segment_desc                 BALANCING_SEGMENT_DESC
            -- ,glbgt.natural_account_desc                   NATURAL_ACCOUNT_DESC
            -- ,glbgt.cost_center_desc                       COST_CENTER_DESC
            -- ,glbgt.management_segment_desc                MANAGEMENT_SEGMENT_DESC
            -- ,glbgt.intercompany_segment_desc              INTERCOMPANY_SEGMENT_DESC
             ,glbgt.segment1                               SEGMENT1
             ,glbgt.segment2                               SEGMENT2
             ,glbgt.segment3                               SEGMENT3
             ,glbgt.segment4                               SEGMENT4
             ,glbgt.segment5                               SEGMENT5
             ,glbgt.segment6                               SEGMENT6
             ,glbgt.segment7                               SEGMENT7
             ,glbgt.segment8                               SEGMENT8
             ,glbgt.segment9                               SEGMENT9
             ,glbgt.segment10                              SEGMENT10
             ,glbgt.segment11                              SEGMENT11
             ,glbgt.segment12                              SEGMENT12
             ,glbgt.segment13                              SEGMENT13
             ,glbgt.segment14                              SEGMENT14
             ,glbgt.segment15                              SEGMENT15
             ,glbgt.segment16                              SEGMENT16
             ,glbgt.segment17                              SEGMENT17
             ,glbgt.segment18                              SEGMENT18
             ,glbgt.segment19                              SEGMENT19
             ,glbgt.segment20                              SEGMENT20
             ,glbgt.segment21                              SEGMENT21
             ,glbgt.segment22                              SEGMENT22
             ,glbgt.segment23                              SEGMENT23
             ,glbgt.segment24                              SEGMENT24
             ,glbgt.segment25                              SEGMENT25
             ,glbgt.segment26                              SEGMENT26
             ,glbgt.segment27                              SEGMENT27
             ,glbgt.segment28                              SEGMENT28
             ,glbgt.segment29                              SEGMENT29
             ,glbgt.segment30                              SEGMENT30
             ,glbgt.begin_running_total_cr                 BEGIN_RUNNING_TOTAL_CR
             ,glbgt.begin_running_total_dr                 BEGIN_RUNNING_TOTAL_DR
             ,glbgt.end_running_total_cr                   END_RUNNING_TOTAL_CR
             ,glbgt.end_running_total_dr                   END_RUNNING_TOTAL_DR
             ,glbgt.legal_entity_id                        LEGAL_ENTITY_ID
             ,glbgt.legal_entity_name                      LEGAL_ENTITY_NAME
             ,glbgt.le_address_line_1                      LE_ADDRESS_LINE_1
             ,glbgt.le_address_line_2                      LE_ADDRESS_LINE_2
             ,glbgt.le_address_line_3                      LE_ADDRESS_LINE_3
             ,glbgt.le_city                                LE_CITY
             ,glbgt.le_region_1                            LE_REGION_1
             ,glbgt.le_region_2                            LE_REGION_2
             ,glbgt.le_region_3                            LE_REGION_3
             ,glbgt.le_postal_code                         LE_POSTAL_CODE
             ,glbgt.le_country                             LE_COUNTRY
             ,glbgt.le_registration_number                 LE_REGISTRATION_NUMBER
             ,glbgt.le_registration_effective_from         LE_REGISTRATION_EFFECTIVE_FROM
             ,glbgt.le_br_daily_inscription_number         LE_BR_DAILY_INSCRIPTION_NUMBER
             ,to_char(glbgt.le_br_daily_inscription_date
                                        ,'YYYY-MM-DD')     LE_BR_DAILY_INSCRIPTION_DATE
             ,glbgt.le_br_daily_entity                     LE_BR_DAILY_ENTITY
             ,glbgt.le_br_daily_location                   LE_BR_DAILY_LOCATION
             ,glbgt.le_br_director_number                  LE_BR_DIRECTOR_NUMBER
             ,glbgt.le_br_accountant_number                LE_BR_ACCOUNTANT_NUMBER
             ,glbgt.le_br_accountant_name                  LE_BR_ACCOUNTANT_NAME
             ,:P_COA_ID                                    CHART_OF_ACCOUNTS_ID	
             ,NULL                                    SR31
             ,NULL                                    SR32
             ,NULL                                    SR33
             ,NULL                                    SR34
             ,NULL                                    SR35
             ,NULL                                    SR36
             ,NULL                                    SR37
             ,NULL                                    SR38
             ,NULL                                    SR39
             ,NULL                                    SR40
             ,NULL                                    SR41
             ,NULL                                    SR42
             ,NULL                                    SR43
             ,NULL                                    SR44
             ,NULL                                    SR45
             ,NULL                                    SR46
             ,NULL                                    SR47
             ,NULL                                    SR48
             ,NULL                                    SR49
             ,NULL                                    SR50
             ,NULL                                    SR51
             ,NULL                                    SR52
             ,NULL                                    SR53
             ,NULL                                    SR54
             ,NULL                                    SR55
             ,NULL                                    SR56
             ,NULL                                    SR57
             ,NULL                                    SR58
             ,NULL                                    SR59
             ,NULL                                    SR60  
     FROM   -- fnd_user                         fdu
             fnd_new_messages                 fnm
            ,fun_seq_versions                 fsv1
            ,fun_seq_versions                 fsv2
            ,fnd_document_sequences           fns
            ,gl_je_categories_tl              gjct
            ,gl_je_sources_tl                 gjst
            ,gl_daily_conversion_types        gdct
            ,gl_je_lines                      gjl
            ,gl_je_headers                    gjh
            ,gl_je_batches                    gjb
	    ,gl_je_lines_recon                gjlr
            ,xla_report_balances           glbgt --KT:21B
     WHERE   gjl.ledger_id                    = glbgt.ledger_id
       AND   gjl.code_combination_id          = glbgt.code_combination_id
       AND   gjl.effective_date               BETWEEN glbgt.period_start_date AND glbgt.period_end_date
       &p_period_date_join3 
       AND   gjl.period_name                  = glbgt.period_name
       AND   gjl.je_header_id                 = gjlr.je_header_id(+)
       AND   gjl.je_line_num                  = gjlr.je_line_num(+)
       AND   gjh.je_header_id                 = gjl.je_header_id
       AND   gjh.actual_flag                  = glbgt.balance_type_code
       AND   decode(gjl.currency_code,'STAT',gjl.currency_code,glbgt.ledger_currency) = glbgt.ledger_currency --added bug 6686541
       AND   NVL(gjh.je_from_sla_flag,'N')    = 'U'
       AND   fnm.application_id = 101 
       AND   fnm.language_code = USERENV('LANG')
       AND   fnm.message_name in ('PPOS0220', 'PPOS0221', 'PPOS0222', 'PPOS0243', 'PPOS0222_G','PPOSO275')   --bug 8357031
       AND   gjl.description= fnm.message_text
       AND   NVL(gjh.budget_version_id,-19999) = NVL(glbgt.budget_version_id,-19999)
       AND   NVL(gjh.encumbrance_type_id,-19999) = NVL(glbgt.encumbrance_type_id,-19999)
       AND   gjb.je_batch_id                  = gjh.je_batch_id
       AND   gjb.status                       = 'P'
       AND   fns.application_id(+)              = 101                     -- added bug 10038642
       AND   fns.doc_sequence_id(+)             = gjh.doc_sequence_id     -- added bug 10038642
   --    AND   fdu.user_id                      = gjb.created_by
       AND   fsv1.seq_version_id(+)           = gjh.posting_acct_seq_version_id
       AND   fsv2.seq_version_id(+)           = gjh.close_acct_seq_version_id
       AND   gjct.je_category_name            = gjh.je_category
       AND   gjct.LANGUAGE                    = USERENV('LANG')
       AND   gjst.je_source_name              = gjh.je_source
       AND   gjst.language                    = USERENV('LANG')
       AND   gdct.conversion_type(+)          = gjl.currency_conversion_type
       AND  not exists    (select 'x'  from gl_import_references gir  where
                gir.je_header_id=gjl.je_header_id
                and gir.je_line_num=gjl.je_line_num)
       &p_gl_other_filter
       &p_begin_balance_union_all
  )TABLE1
  ,(
		SELECT DISTINCT
			rcpt.RECEIPT_NUM
			,poh.segment1 po_number
		,hzp.party_name as supplier
		FROM rcv_transactions rtx
			,PO_HEADERS_ALL poh
			,RCV_SHIPMENT_HEADERS rcpt
		,POZ_SUPPLIERS sup
		,hz_parties hzp
		WHERE 1 = 1
			AND rtx.SHIPMENT_HEADER_ID = rcpt.SHIPMENT_HEADER_ID(+)
			AND rtx.po_header_id = poh.po_header_id(+)
			and rtx.vendor_id = sup.vendor_id(+)
			and sup.party_id = hzp.party_id(+)
			AND rtx.TRANSACTION_TYPE = 'RECEIVE'
		) TABLE2 --RECEIPT ACCT
    WHERE &ACCT_SECURE = 'N'
	AND (nvl(TABLE1.TRANSACTION_NUMBER, '1') = TABLE2.RECEIPT_NUM(+) and table1.JE_SOURCE_NAME = 'Receipt Accounting') --RECEIPT ACCT

UNION ALL
SELECT DISTINCT/*+ OPT_PARAM('_optimizer_join_factorization' 'false') */
        TABLE1.GL_DATE                                 GL_DATE
       ,TABLE1.CREATED_BY                              CREATED_BY
       ,TABLE1.CREATION_DATE                           CREATION_DATE
       ,TABLE1.LAST_UPDATE_DATE                        LAST_UPDATE_DATE
       ,TABLE1.GL_TRANSFER_DATE                        GL_TRANSFER_DATE
       ,TABLE1.REFERENCE_DATE                          REFERENCE_DATE
       ,TABLE1.COMPLETED_DATE                          COMPLETED_DATE
       ,TABLE1.TRANSACTION_NUMBER                      TRANSACTION_NUMBER
       ,TABLE1.TRANSACTION_DATE                        TRANSACTION_DATE
       ,TABLE1.ACCOUNTING_SEQUENCE_NAME                ACCOUNTING_SEQUENCE_NAME
       ,TABLE1.ACCOUNTING_SEQUENCE_VERSION             ACCOUNTING_SEQUENCE_VERSION
       ,TABLE1.ACCOUNTING_SEQUENCE_NUMBER              ACCOUNTING_SEQUENCE_NUMBER
       ,TABLE1.REPORTING_SEQUENCE_NAME                 REPORTING_SEQUENCE_NAME
       ,TABLE1.REPORTING_SEQUENCE_VERSION              REPORTING_SEQUENCE_VERSION
       ,TABLE1.REPORTING_SEQUENCE_NUMBER               REPORTING_SEQUENCE_NUMBER
       ,TABLE1.DOCUMENT_CATEGORY                       DOCUMENT_CATEGORY
       ,TABLE1.DOCUMENT_SEQUENCE_NAME                  DOCUMENT_SEQUENCE_NAME
       ,TABLE1.DOCUMENT_SEQUENCE_NUMBER                DOCUMENT_SEQUENCE_NUMBER
       ,TABLE1.GL_DOCUMENT_SEQUENCE_NAME               GL_DOCUMENT_SEQUENCE_NAME     -- added bug 10038642                                                                                   
       ,TABLE1.GL_DOCUMENT_SEQUENCE_NUMBER             GL_DOCUMENT_SEQUENCE_NUMBER   -- added bug 10038642
       ,TABLE1.APPLICATION_ID                          APPLICATION_ID
       ,TABLE1.APPLICATION_NAME                        APPLICATION_NAME
       ,TABLE1.HEADER_ID                               HEADER_ID
       ,TABLE1.HEADER_DESCRIPTION                      HEADER_DESCRIPTION
       ,TABLE1.FUND_STATUS                             FUND_STATUS
       ,TABLE1.JE_CATEGORY_NAME                        JE_CATEGORY_NAME
       ,TABLE1.JE_SOURCE_NAME                          JE_SOURCE_NAME
       ,TABLE1.EVENT_ID                                EVENT_ID
       ,TABLE1.EVENT_DATE                              EVENT_DATE
       ,TABLE1.EVENT_NUMBER                            EVENT_NUMBER
       ,TABLE1.EVENT_CLASS_CODE                        EVENT_CLASS_CODE
       ,TABLE1.EVENT_CLASS_NAME                        EVENT_CLASS_NAME
       ,TABLE1.EVENT_TYPE_CODE                         EVENT_TYPE_CODE
       ,TABLE1.EVENT_TYPE_NAME                         EVENT_TYPE_NAME
       ,TABLE1.GL_BATCH_NAME                           GL_BATCH_NAME
       ,TABLE1.POSTED_DATE                             POSTED_DATE
       ,TABLE1.GL_JE_NAME                              GL_JE_NAME
       ,TABLE1.GL_LINE_NUMBER                          GL_LINE_NUMBER
       ,TABLE1.LINE_NUMBER                             LINE_NUMBER
	   ,TABLE1.ORIG_LINE_NUMBER                        ORIG_LINE_NUMBER
       ,TABLE1.ACCOUNTING_CLASS_CODE                   ACCOUNTING_CLASS_CODE
       ,TABLE1.ACCOUNTING_CLASS_NAME                   ACCOUNTING_CLASS_NAME
       ,TABLE1.LINE_DESCRIPTION                        LINE_DESCRIPTION
       ,TABLE1.ENTERED_CURRENCY                        ENTERED_CURRENCY
       ,TABLE1.CONVERSION_RATE                         CONVERSION_RATE
       ,TABLE1.CONVERSION_RATE_DATE                    CONVERSION_RATE_DATE
       ,TABLE1.CONVERSION_RATE_TYPE_CODE               CONVERSION_RATE_TYPE_CODE
       ,TABLE1.CONVERSION_RATE_TYPE                    CONVERSION_RATE_TYPE
       ,TABLE1.ENTERED_DR                              ENTERED_DR
       ,TABLE1.ENTERED_CR                              ENTERED_CR
       ,TABLE1.UNROUNDED_ACCOUNTED_DR                  UNROUNDED_ACCOUNTED_DR
       ,TABLE1.UNROUNDED_ACCOUNTED_CR                  UNROUNDED_ACCOUNTED_CR
       ,TABLE1.ACCOUNTED_DR                            ACCOUNTED_DR
       ,TABLE1.ACCOUNTED_CR                            ACCOUNTED_CR
       ,TABLE1.STATISTICAL_AMOUNT                      STATISTICAL_AMOUNT
       ,TABLE1.RECONCILIATION_REFERENCE                RECONCILIATION_REFERENCE
       ,TABLE1.JGZZ_RECON_REF                          JGZZ_RECON_REF
       ,TABLE1.JGZZ_RECON_DATE                         JGZZ_RECON_DATE
       ,TABLE1.JGZZ_RECON_ID                           JGZZ_RECON_ID
       ,TABLE1.JGZZ_RECON_STATUS                       JGZZ_RECON_STATUS
       ,TABLE1.RECON_STATUS                            RECON_STATUS
       ,TABLE1.ATTRIBUTE_CATEGORY                      ATTRIBUTE_CATEGORY
       ,TABLE1.ATTRIBUTE1                              ATTRIBUTE1
       ,TABLE1.ATTRIBUTE2                              ATTRIBUTE2
       ,TABLE1.ATTRIBUTE3                              ATTRIBUTE3
       ,TABLE1.ATTRIBUTE4                              ATTRIBUTE4
       ,TABLE1.ATTRIBUTE5                              ATTRIBUTE5
       ,TABLE1.ATTRIBUTE6                              ATTRIBUTE6
       ,TABLE1.ATTRIBUTE7                              ATTRIBUTE7
       ,TABLE1.ATTRIBUTE8                              ATTRIBUTE8
       ,TABLE1.ATTRIBUTE9                              ATTRIBUTE9
       ,TABLE1.ATTRIBUTE10                             ATTRIBUTE10
       ,TABLE1.PARTY_TYPE_CODE                         PARTY_TYPE_CODE
       ,TABLE1.PARTY_TYPE                              PARTY_TYPE
       ,substr(PARTY_INFO,1,instr(PARTY_INFO,'|',1,1)-1 )                                                       PARTY_NUMBER
       ,substr(PARTY_INFO,instr(PARTY_INFO,'|',1,1)+1,(instr(PARTY_INFO,'|',1,2)-1-instr(PARTY_INFO,'|',1,1)))  PARTY_NAME
       ,substr(PARTY_INFO,instr(PARTY_INFO,'|',1,2)+1,(instr(PARTY_INFO,'|',1,3)-1-instr(PARTY_INFO,'|',1,2)))  PARTY_TYPE_TAXPAYER_ID
       ,substr(PARTY_INFO,instr(PARTY_INFO,'|',1,3)+1,(instr(PARTY_INFO,'|',1,4)-1-instr(PARTY_INFO,'|',1,3)))  PARTY_TAX_REGISTRATION_NUMBER
       ,substr(PARTY_INFO,instr(PARTY_INFO,'|',1,4)+1,(instr(PARTY_INFO,'|',1,5)-1-instr(PARTY_INFO,'|',1,4)))  PARTY_SITE_NUMBER
       ,substr(PARTY_INFO,instr(PARTY_INFO,'|',1,5)+1,(instr(PARTY_INFO,'|',1,6)-1-instr(PARTY_INFO,'|',1,5)))  PARTY_SITE_NAME
       ,substr(PARTY_INFO,instr(PARTY_INFO,'|',1,6)+1,(length(PARTY_INFO)- instr(PARTY_INFO,'|',1,6)))          PARTY_SITE_TAX_RGSTN_NUMBER
       ,substr(USERIDS,1,instr(USERIDS,'|',1,1)-1)                                                    USER_TRX_IDENTIFIER_NAME_1
       ,substr(USERIDS,instr(USERIDS,'|',1,1)+1,(instr(USERIDS,'|',1,2)-1-instr(USERIDS,'|',1,1)))    USER_TRX_IDENTIFIER_VALUE_1
       ,substr(USERIDS,instr(USERIDS,'|',1,2)+1,(instr(USERIDS,'|',1,3)-1-instr(USERIDS,'|',1,2)))    USER_TRX_IDENTIFIER_NAME_2
       ,substr(USERIDS,instr(USERIDS,'|',1,3)+1,(instr(USERIDS,'|',1,4)-1-instr(USERIDS,'|',1,3)))    USER_TRX_IDENTIFIER_VALUE_2
       ,substr(USERIDS,instr(USERIDS,'|',1,4)+1,(instr(USERIDS,'|',1,5)-1-instr(USERIDS,'|',1,4)))    USER_TRX_IDENTIFIER_NAME_3
       ,substr(USERIDS,instr(USERIDS,'|',1,5)+1,(instr(USERIDS,'|',1,6)-1-instr(USERIDS,'|',1,5)))    USER_TRX_IDENTIFIER_VALUE_3
       ,substr(USERIDS,instr(USERIDS,'|',1,6)+1,(instr(USERIDS,'|',1,7)-1-instr(USERIDS,'|',1,6)))    USER_TRX_IDENTIFIER_NAME_4
       ,substr(USERIDS,instr(USERIDS,'|',1,7)+1,(instr(USERIDS,'|',1,8)-1-instr(USERIDS,'|',1,7)))    USER_TRX_IDENTIFIER_VALUE_4
       ,substr(USERIDS,instr(USERIDS,'|',1,8)+1,(instr(USERIDS,'|',1,9)-1-instr(USERIDS,'|',1,8)))    USER_TRX_IDENTIFIER_NAME_5
       ,substr(USERIDS,instr(USERIDS,'|',1,9)+1,(instr(USERIDS,'|',1,10)-1-instr(USERIDS,'|',1,9)))   USER_TRX_IDENTIFIER_VALUE_5
       ,substr(USERIDS,instr(USERIDS,'|',1,10)+1,(instr(USERIDS,'|',1,11)-1-instr(USERIDS,'|',1,10))) USER_TRX_IDENTIFIER_NAME_6
       ,substr(USERIDS,instr(USERIDS,'|',1,11)+1,(instr(USERIDS,'|',1,12)-1-instr(USERIDS,'|',1,11))) USER_TRX_IDENTIFIER_VALUE_6
       ,substr(USERIDS,instr(USERIDS,'|',1,12)+1,(instr(USERIDS,'|',1,13)-1-instr(USERIDS,'|',1,12))) USER_TRX_IDENTIFIER_NAME_7
       ,substr(USERIDS,instr(USERIDS,'|',1,13)+1,(instr(USERIDS,'|',1,14)-1-instr(USERIDS,'|',1,13))) USER_TRX_IDENTIFIER_VALUE_7
       ,substr(USERIDS,instr(USERIDS,'|',1,14)+1,(instr(USERIDS,'|',1,15)-1-instr(USERIDS,'|',1,14))) USER_TRX_IDENTIFIER_NAME_8
       ,substr(USERIDS,instr(USERIDS,'|',1,15)+1,(instr(USERIDS,'|',1,16)-1-instr(USERIDS,'|',1,15))) USER_TRX_IDENTIFIER_VALUE_8
       ,substr(USERIDS,instr(USERIDS,'|',1,16)+1,(instr(USERIDS,'|',1,17)-1-instr(USERIDS,'|',1,16))) USER_TRX_IDENTIFIER_NAME_9
       ,substr(USERIDS,instr(USERIDS,'|',1,17)+1,(instr(USERIDS,'|',1,18)-1-instr(USERIDS,'|',1,17))) USER_TRX_IDENTIFIER_VALUE_9
       ,substr(USERIDS,instr(USERIDS,'|',1,18)+1,(instr(USERIDS,'|',1,19)-1-instr(USERIDS,'|',1,18))) USER_TRX_IDENTIFIER_NAME_10
       ,substr(USERIDS,instr(USERIDS,'|',1,19)+1,(length(USERIDS)-instr(USERIDS,'|',1,19)))           USER_TRX_IDENTIFIER_VALUE_10
       ,TABLE1.LEDGER_ID                               LEDGER_ID
       ,TABLE1.LEDGER_SHORT_NAME                       LEDGER_SHORT_NAME
       ,TABLE1.LEDGER_DESCRIPTION                      LEDGER_DESCRIPTION
       ,TABLE1.LEDGER_NAME                             LEDGER_NAME
       ,TABLE1.LEDGER_CURRENCY                         LEDGER_CURRENCY
       ,TABLE1.PERIOD_YEAR                             PERIOD_YEAR
       ,TABLE1.PERIOD_NUMBER                           PERIOD_NUMBER
       ,TABLE1.PERIOD_NAME                             PERIOD_NAME
       ,TABLE1.PERIOD_START_DATE                       PERIOD_START_DATE
       ,TABLE1.PERIOD_END_DATE                         PERIOD_END_DATE
       ,TABLE1.BALANCE_TYPE_CODE                       BALANCE_TYPE_CODE
       ,TABLE1.BALANCE_TYPE                            BALANCE_TYPE
       ,TABLE1.BUDGET_NAME                             BUDGET_NAME
       ,TABLE1.ENCUMBRANCE_TYPE                        ENCUMBRANCE_TYPE
       ,TABLE1.BEGIN_BALANCE_DR                        BEGIN_BALANCE_DR
       ,TABLE1.BEGIN_BALANCE_CR                        BEGIN_BALANCE_CR
       ,TABLE1.PERIOD_NET_DR                           PERIOD_NET_DR
       ,TABLE1.PERIOD_NET_CR                           PERIOD_NET_CR
       ,TABLE1.CODE_COMBINATION_ID                     CODE_COMBINATION_ID
       ,TABLE1.ACCOUNTING_CODE_COMBINATION             ACCOUNTING_CODE_COMBINATION
       ,&FLEX_DESCR_ALL                                CODE_COMBINATION_DESCRIPTION
       ,TABLE1.CONTROL_ACCOUNT_FLAG                    CONTROL_ACCOUNT_FLAG
       ,TABLE1.CONTROL_ACCOUNT                         CONTROL_ACCOUNT
       ,TABLE1.BALANCING_SEGMENT                       BALANCING_SEGMENT
       ,TABLE1.NATURAL_ACCOUNT_SEGMENT                 NATURAL_ACCOUNT_SEGMENT
       ,TABLE1.COST_CENTER_SEGMENT                     COST_CENTER_SEGMENT
       ,TABLE1.MANAGEMENT_SEGMENT                      MANAGEMENT_SEGMENT
       ,TABLE1.INTERCOMPANY_SEGMENT                    INTERCOMPANY_SEGMENT
       ,&FLEX_GL_BALANCING_DESC                          BALANCING_SEGMENT_DESC
       ,&FLEX_GL_ACCOUNT_DESC                            NATURAL_ACCOUNT_DESC
       ,&FLEX_FA_COST_CTR_DESC                           COST_CENTER_DESC
       ,&FLEX_GL_MANAGEMENT_DESC                         MANAGEMENT_SEGMENT_DESC
       ,&FLEX_GL_INTERCOMPANY_DESC                       INTERCOMPANY_SEGMENT_DESC

       ,TABLE1.SEGMENT1                                SEGMENT1
       ,TABLE1.SEGMENT2                                SEGMENT2
       ,TABLE1.SEGMENT3                                SEGMENT3
       ,TABLE1.SEGMENT4                                SEGMENT4
       ,TABLE1.SEGMENT5                                SEGMENT5
       ,TABLE1.SEGMENT6                                SEGMENT6
       ,TABLE1.SEGMENT7                                SEGMENT7
       ,TABLE1.SEGMENT8                                SEGMENT8
       ,TABLE1.SEGMENT9                                SEGMENT9
       ,TABLE1.SEGMENT10                               SEGMENT10
       ,TABLE1.SEGMENT11                               SEGMENT11
       ,TABLE1.SEGMENT12                               SEGMENT12
       ,TABLE1.SEGMENT13                               SEGMENT13
       ,TABLE1.SEGMENT14                               SEGMENT14
       ,TABLE1.SEGMENT15                               SEGMENT15
       ,TABLE1.SEGMENT16                               SEGMENT16
       ,TABLE1.SEGMENT17                               SEGMENT17
       ,TABLE1.SEGMENT18                               SEGMENT18
       ,TABLE1.SEGMENT19                               SEGMENT19
       ,TABLE1.SEGMENT20                               SEGMENT20
       ,TABLE1.SEGMENT21                               SEGMENT21
       ,TABLE1.SEGMENT22                               SEGMENT22
       ,TABLE1.SEGMENT23                               SEGMENT23
       ,TABLE1.SEGMENT24                               SEGMENT24
       ,TABLE1.SEGMENT25                               SEGMENT25
       ,TABLE1.SEGMENT26                               SEGMENT26
       ,TABLE1.SEGMENT27                               SEGMENT27
       ,TABLE1.SEGMENT28                               SEGMENT28
       ,TABLE1.SEGMENT29                               SEGMENT29
       ,TABLE1.SEGMENT30                               SEGMENT30
       ,TABLE1.BEGIN_RUNNING_TOTAL_CR                  BEGIN_RUNNING_TOTAL_CR
       ,TABLE1.BEGIN_RUNNING_TOTAL_DR                  BEGIN_RUNNING_TOTAL_DR
       ,TABLE1.END_RUNNING_TOTAL_CR                    END_RUNNING_TOTAL_CR
       ,TABLE1.END_RUNNING_TOTAL_DR                    END_RUNNING_TOTAL_DR
       ,TABLE1.LEGAL_ENTITY_ID                         LEGAL_ENTITY_ID
       ,TABLE1.LEGAL_ENTITY_NAME                       LEGAL_ENTITY_NAME
       ,TABLE1.LE_ADDRESS_LINE_1                       LE_ADDRESS_LINE_1
       ,TABLE1.LE_ADDRESS_LINE_2                       LE_ADDRESS_LINE_2
       ,TABLE1.LE_ADDRESS_LINE_3                       LE_ADDRESS_LINE_3
       ,TABLE1.LE_CITY                                 LE_CITY
       ,TABLE1.LE_REGION_1                             LE_REGION_1
       ,TABLE1.LE_REGION_2                             LE_REGION_2
       ,TABLE1.LE_REGION_3                             LE_REGION_3
       ,TABLE1.LE_POSTAL_CODE                          LE_POSTAL_CODE
       ,TABLE1.LE_COUNTRY                              LE_COUNTRY
       ,TABLE1.LE_REGISTRATION_NUMBER                  LE_REGISTRATION_NUMBER
       ,TABLE1.LE_REGISTRATION_EFFECTIVE_FROM          LE_REGISTRATION_EFFECTIVE_FROM
       ,TABLE1.LE_BR_DAILY_INSCRIPTION_NUMBER          LE_BR_DAILY_INSCRIPTION_NUMBER
       ,TABLE1.LE_BR_DAILY_INSCRIPTION_DATE            LE_BR_DAILY_INSCRIPTION_DATE
       ,TABLE1.LE_BR_DAILY_ENTITY                      LE_BR_DAILY_ENTITY
       ,TABLE1.LE_BR_DAILY_LOCATION                    LE_BR_DAILY_LOCATION
       ,TABLE1.LE_BR_DIRECTOR_NUMBER                   LE_BR_DIRECTOR_NUMBER
       ,TABLE1.LE_BR_ACCOUNTANT_NUMBER                 LE_BR_ACCOUNTANT_NUMBER
       ,TABLE1.LE_BR_ACCOUNTANT_NAME                   LE_BR_ACCOUNTANT_NAME
       &p_je_source_period  
       ,TABLE1.SR31                                    SR31
       ,TABLE1.SR32                                    SR32
       ,TABLE1.SR33                                    SR33
       ,TABLE1.SR34                                    SR34
       ,TABLE1.SR35                                    SR35
       ,TABLE1.SR36                                    SR36
       ,TABLE1.SR37                                    SR37
       ,TABLE1.SR38                                    SR38
       ,TABLE1.SR39                                    SR39
       ,TABLE1.SR40                                    SR40
       ,TABLE1.SR41                                    SR41
       ,TABLE1.SR42                                    SR42
       ,TABLE1.SR43                                    SR43
       ,TABLE1.SR44                                    SR44
       ,TABLE1.SR45                                    SR45
       ,TABLE1.SR46                                    SR46
       ,TABLE1.SR47                                    SR47
       ,TABLE1.SR48                                    SR48
       ,TABLE1.SR49                                    SR49
       ,TABLE1.SR50                                    SR50
       ,TABLE1.SR51                                    SR51
       ,TABLE1.SR52                                    SR52
       ,TABLE1.SR53                                    SR53
       ,TABLE1.SR54                                    SR54
       ,TABLE1.SR55                                    SR55
       ,TABLE1.SR56                                    SR56
       ,TABLE1.SR57                                    SR57
       ,TABLE1.SR58                                    SR58
       ,TABLE1.SR59                                    SR59
       ,TABLE1.SR60                                    SR60
	   ,NULL RECEIPT_NUM
	,NULL PO_NUMBER
	,to_char(TABLE2.INVOICE_NUMBER)
	--,table2.supplier
	,to_char(table2.INVOICE_DATE)
	,(
			SELECT LISTAGG(pjc_expenditure_item_date, ';') WITHIN
			GROUP (
					ORDER BY pjc_expenditure_item_date
					)
			FROM (
				(
					SELECT DISTINCT
			invdist.pjc_expenditure_item_date
		from
	ap_invoices_all inv
	,POZ_SUPPLIERS sup
	,hz_parties hzp
	,AP_INVOICE_DISTRIBUTIONS_ALL invdist
	,PJF_PROJ_ELEMENTS_TL tasktl
		,PJF_PROJ_ELEMENTS_B taskb
		,PJF_PROJECTS_ALL_TL prjtl
		,PJF_PROJECTS_ALL_B prjb
where 1=1
and inv.vendor_id = sup.vendor_id(+)
and sup.party_id = hzp.party_id(+)
and inv.invoice_id = invdist.invoice_id (+)
and invdist.pjc_task_id = tasktl.proj_element_id (+)
and invdist.pjc_task_id = taskb.proj_element_id (+)
and invdist.pjc_project_id = prjtl.project_id (+)
and invdist.pjc_project_id = prjb.project_id (+)
			AND inv.invoice_id = TABLE2.invoice_id
					)
				)
			) EXPENDITURE_DATE --INV
	,(
			SELECT LISTAGG(project, ';') WITHIN
			GROUP (
					ORDER BY project
					)
			FROM (
				(
					SELECT DISTINCT
			decode ((prjb.segment1 || ':' || prjtl.name), ':', NULL, (prjb.segment1 || ':' || prjtl.name)) as project
		from
	ap_invoices_all inv
	,POZ_SUPPLIERS sup
	,hz_parties hzp
	,AP_INVOICE_DISTRIBUTIONS_ALL invdist
	,PJF_PROJ_ELEMENTS_TL tasktl
		,PJF_PROJ_ELEMENTS_B taskb
		,PJF_PROJECTS_ALL_TL prjtl
		,PJF_PROJECTS_ALL_B prjb
where 1=1
and inv.vendor_id = sup.vendor_id(+)
and sup.party_id = hzp.party_id(+)
and inv.invoice_id = invdist.invoice_id (+)
and invdist.pjc_task_id = tasktl.proj_element_id (+)
and invdist.pjc_task_id = taskb.proj_element_id (+)
and invdist.pjc_project_id = prjtl.project_id (+)
and invdist.pjc_project_id = prjb.project_id (+)
			AND inv.invoice_id = TABLE2.invoice_id
					)
				)
			) PROJECT --INV
	,(
			SELECT LISTAGG(task, ';') WITHIN
			GROUP (
					ORDER BY task
					)
			FROM (
				(
					SELECT DISTINCT
			decode ((taskb.element_number || ':' || tasktl.name), ':', NULL, (taskb.element_number || ':' || tasktl.name)) as task
		from
	ap_invoices_all inv
	,POZ_SUPPLIERS sup
	,hz_parties hzp
	,AP_INVOICE_DISTRIBUTIONS_ALL invdist
	,PJF_PROJ_ELEMENTS_TL tasktl
		,PJF_PROJ_ELEMENTS_B taskb
		,PJF_PROJECTS_ALL_TL prjtl
		,PJF_PROJECTS_ALL_B prjb
where 1=1
and inv.vendor_id = sup.vendor_id(+)
and sup.party_id = hzp.party_id(+)
and inv.invoice_id = invdist.invoice_id (+)
and invdist.pjc_task_id = tasktl.proj_element_id (+)
and invdist.pjc_task_id = taskb.proj_element_id (+)
and invdist.pjc_project_id = prjtl.project_id (+)
and invdist.pjc_project_id = prjb.project_id (+)
			AND inv.invoice_id = TABLE2.invoice_id
					)
				)
			) TASK -- INV
FROM
     (SELECT   /*+ leading (glbgt gjl gjh gir ael aeh) */ 
	      to_char(aeh.accounting_date
                 ,'YYYY-MM-DD')                        GL_DATE
         ,aeh.created_by                                CREATED_BY
         ,to_char(aeh.creation_date
                 ,'YYYY-MM-DD"T"hh:mi:ss')             CREATION_DATE
         ,to_char(aeh.last_update_date
                 ,'YYYY-MM-DD')                        LAST_UPDATE_DATE
         ,to_char(aeh.gl_transfer_date
                 ,'YYYY-MM-DD"T"hh:mi:ss')             GL_TRANSFER_DATE
         ,to_char(aeh.reference_date
                 ,'YYYY-MM-DD')                        REFERENCE_DATE
         ,to_char(aeh.completed_date
                 ,'YYYY-MM-DD"T"hh:mi:ss')             COMPLETED_DATE
         ,ent.transaction_number                       TRANSACTION_NUMBER
         ,to_char(xle.transaction_date
                 ,'YYYY-MM-DD"T"hh:mi:ss')             TRANSACTION_DATE
         ,fsv1.header_name                             ACCOUNTING_SEQUENCE_NAME
         ,fsv1.version_name                            ACCOUNTING_SEQUENCE_VERSION
         ,aeh.completion_acct_seq_value                ACCOUNTING_SEQUENCE_NUMBER
         ,fsv2.header_name                             REPORTING_SEQUENCE_NAME
         ,fsv2.version_name                            REPORTING_SEQUENCE_VERSION
         ,aeh.close_acct_seq_value                     REPORTING_SEQUENCE_NUMBER
         ,NULL                                         DOCUMENT_CATEGORY
         ,fns.name                                     DOCUMENT_SEQUENCE_NAME
         ,aeh.doc_sequence_value                       DOCUMENT_SEQUENCE_NUMBER
         ,fns1.name                                    GL_DOCUMENT_SEQUENCE_NAME   -- added bug 10038642
         ,gjh.doc_sequence_value                       GL_DOCUMENT_SEQUENCE_NUMBER -- added bug 10038642 
         ,aeh.application_id                           APPLICATION_ID
         ,xsl.application_name                         APPLICATION_NAME
         ,aeh.ae_header_id                             HEADER_ID
         ,aeh.description                              HEADER_DESCRIPTION
         ,flk1.meaning                                 FUND_STATUS
         ,gjct.user_je_category_name                   JE_CATEGORY_NAME
         ,gjst.user_je_source_name                     JE_SOURCE_NAME
         ,xle.event_id                                 EVENT_ID
         ,to_char(xle.event_date
                 ,'YYYY-MM-DD')                        EVENT_DATE
         ,xle.event_number                             EVENT_NUMBER
         ,xet.event_class_code                         EVENT_CLASS_CODE
         ,xect.NAME                                    EVENT_CLASS_NAME
         ,aeh.event_type_code                          EVENT_TYPE_CODE
         ,xet.NAME                                     EVENT_TYPE_NAME
         ,gjb.NAME                                     GL_BATCH_NAME
         ,to_char(gjb.posted_date
                 ,'YYYY-MM-DD')                        POSTED_DATE
         ,gjh.NAME                                     GL_JE_NAME
         ,gjh.external_reference                       EXTERNAL_REFERENCE
         ,gjl.je_line_num                              GL_LINE_NUMBER
         ,ael.displayed_line_number                    LINE_NUMBER
		 ,ael.ae_line_num							   ORIG_LINE_NUMBER
         ,ael.accounting_class_code                    ACCOUNTING_CLASS_CODE
         ,xlk2.meaning                                 ACCOUNTING_CLASS_NAME
         ,ael.description                              LINE_DESCRIPTION
         ,ael.currency_code                            ENTERED_CURRENCY
         ,ael.currency_conversion_rate                 CONVERSION_RATE
         ,to_char(ael.currency_conversion_date
                 ,'YYYY-MM-DD')                        CONVERSION_RATE_DATE
         ,ael.currency_conversion_type                 CONVERSION_RATE_TYPE_CODE
         ,gdct.user_conversion_type                    CONVERSION_RATE_TYPE
         ,ael.entered_dr                               ENTERED_DR
         ,ael.entered_cr                               ENTERED_CR
         ,ael.unrounded_accounted_dr                   UNROUNDED_ACCOUNTED_DR
         ,ael.unrounded_accounted_cr                   UNROUNDED_ACCOUNTED_CR
         ,ael.accounted_dr                             ACCOUNTED_DR
         ,ael.accounted_cr                             ACCOUNTED_CR
         ,ael.statistical_amount                       STATISTICAL_AMOUNT
         ,ael.jgzz_recon_ref                           RECONCILIATION_REFERENCE
 	 ,gjlr.jgzz_recon_ref			       JGZZ_RECON_REF
         ,to_char(gjlr.jgzz_recon_date
                 ,'YYYY-MM-DD') 	               JGZZ_RECON_DATE
 	 ,gjlr.jgzz_recon_id                           JGZZ_RECON_ID
	 ,gjlr.jgzz_recon_status                       JGZZ_RECON_STATUS
 	 ,(SELECT meaning
		FROM gl_lookups
		WHERE lookup_type = 'ORA_GL_LINE_RECON_STATUS'
		AND lookup_code   = Nvl(gjlr.jgzz_recon_status, 'U')) AS RECON_STATUS
         ,ael.attribute_category                       ATTRIBUTE_CATEGORY
         ,ael.attribute1                               ATTRIBUTE1
         ,ael.attribute2                               ATTRIBUTE2
         ,ael.attribute3                               ATTRIBUTE3
         ,ael.attribute4                               ATTRIBUTE4
         ,ael.attribute5                               ATTRIBUTE5
         ,ael.attribute6                               ATTRIBUTE6
         ,ael.attribute7                               ATTRIBUTE7
         ,ael.attribute8                               ATTRIBUTE8
         ,ael.attribute9                               ATTRIBUTE9
         ,ael.attribute10                              ATTRIBUTE10
         ,ael.party_type_code                          PARTY_TYPE_CODE
         ,NULL                                         PARTY_TYPE
         &p_party_columns                              PARTY_INFO
         &p_trx_identifiers                            USERIDS
         ,glbgt.ledger_id                              LEDGER_ID
         ,glbgt.ledger_short_name                      LEDGER_SHORT_NAME
         ,glbgt.ledger_description                     LEDGER_DESCRIPTION
         ,glbgt.ledger_name                            LEDGER_NAME
         ,glbgt.ledger_currency                        LEDGER_CURRENCY
         ,glbgt.period_year                            PERIOD_YEAR
         ,glbgt.period_number                          PERIOD_NUMBER
         ,glbgt.period_name                            PERIOD_NAME
         ,to_char(glbgt.period_start_date
                                 ,'YYYY-MM-DD')        PERIOD_START_DATE
         ,to_char(glbgt.period_end_date
                                 ,'YYYY-MM-DD')        PERIOD_END_DATE
         ,glbgt.balance_type_code                      BALANCE_TYPE_CODE
         ,glbgt.balance_type                           BALANCE_TYPE
         ,glbgt.budget_name                            BUDGET_NAME
         ,glbgt.encumbrance_type                       ENCUMBRANCE_TYPE
         ,glbgt.begin_balance_dr                       BEGIN_BALANCE_DR
         ,glbgt.begin_balance_cr                       BEGIN_BALANCE_CR
         ,glbgt.period_net_dr                          PERIOD_NET_DR
         ,glbgt.period_net_cr                          PERIOD_NET_CR
         ,glbgt.code_combination_id                    CODE_COMBINATION_ID
         ,glbgt.accounting_code_combination            ACCOUNTING_CODE_COMBINATION
         --,glbgt.code_combination_description           CODE_COMBINATION_DESCRIPTION
         ,glbgt.control_account_flag                   CONTROL_ACCOUNT_FLAG
         ,glbgt.control_account                        CONTROL_ACCOUNT
         ,glbgt.balancing_segment                      BALANCING_SEGMENT
         ,glbgt.natural_account_segment                NATURAL_ACCOUNT_SEGMENT
         ,glbgt.cost_center_segment                    COST_CENTER_SEGMENT
         ,glbgt.management_segment                     MANAGEMENT_SEGMENT
         ,glbgt.intercompany_segment                   INTERCOMPANY_SEGMENT
        -- ,glbgt.balancing_segment_desc                 BALANCING_SEGMENT_DESC
        -- ,glbgt.natural_account_desc                   NATURAL_ACCOUNT_DESC
        --,glbgt.cost_center_desc                       COST_CENTER_DESC
        --,glbgt.management_segment_desc                MANAGEMENT_SEGMENT_DESC
        -- ,glbgt.intercompany_segment_desc              INTERCOMPANY_SEGMENT_DESC
         ,glbgt.segment1                               SEGMENT1
         ,glbgt.segment2                               SEGMENT2
         ,glbgt.segment3                               SEGMENT3
         ,glbgt.segment4                               SEGMENT4
         ,glbgt.segment5                               SEGMENT5
         ,glbgt.segment6                               SEGMENT6
         ,glbgt.segment7                               SEGMENT7
         ,glbgt.segment8                               SEGMENT8
         ,glbgt.segment9                               SEGMENT9
         ,glbgt.segment10                              SEGMENT10
         ,glbgt.segment11                              SEGMENT11
         ,glbgt.segment12                              SEGMENT12
         ,glbgt.segment13                              SEGMENT13
         ,glbgt.segment14                              SEGMENT14
         ,glbgt.segment15                              SEGMENT15
         ,glbgt.segment16                              SEGMENT16
         ,glbgt.segment17                              SEGMENT17
         ,glbgt.segment18                              SEGMENT18
         ,glbgt.segment19                              SEGMENT19
         ,glbgt.segment20                              SEGMENT20
         ,glbgt.segment21                              SEGMENT21
         ,glbgt.segment22                              SEGMENT22
         ,glbgt.segment23                              SEGMENT23
         ,glbgt.segment24                              SEGMENT24
         ,glbgt.segment25                              SEGMENT25
         ,glbgt.segment26                              SEGMENT26
         ,glbgt.segment27                              SEGMENT27
         ,glbgt.segment28                              SEGMENT28
         ,glbgt.segment29                              SEGMENT29
         ,glbgt.segment30                              SEGMENT30
         ,glbgt.begin_running_total_cr                 BEGIN_RUNNING_TOTAL_CR
         ,glbgt.begin_running_total_dr                 BEGIN_RUNNING_TOTAL_DR
         ,glbgt.end_running_total_cr                   END_RUNNING_TOTAL_CR
         ,glbgt.end_running_total_dr                   END_RUNNING_TOTAL_DR
         ,glbgt.legal_entity_id                        LEGAL_ENTITY_ID
         ,glbgt.legal_entity_name                      LEGAL_ENTITY_NAME
         ,glbgt.le_address_line_1                      LE_ADDRESS_LINE_1
         ,glbgt.le_address_line_2                      LE_ADDRESS_LINE_2
         ,glbgt.le_address_line_3                      LE_ADDRESS_LINE_3
         ,glbgt.le_city                                LE_CITY
         ,glbgt.le_region_1                            LE_REGION_1
         ,glbgt.le_region_2                            LE_REGION_2
         ,glbgt.le_region_3                            LE_REGION_3
         ,glbgt.le_postal_code                         LE_POSTAL_CODE
         ,glbgt.le_country                             LE_COUNTRY
         ,glbgt.le_registration_number                 LE_REGISTRATION_NUMBER
         ,glbgt.le_registration_effective_from         LE_REGISTRATION_EFFECTIVE_FROM
         ,glbgt.le_br_daily_inscription_number         LE_BR_DAILY_INSCRIPTION_NUMBER
         ,to_char(glbgt.le_br_daily_inscription_date
                                ,'YYYY-MM-DD')                                             LE_BR_DAILY_INSCRIPTION_DATE
         ,glbgt.le_br_daily_entity                     LE_BR_DAILY_ENTITY
         ,glbgt.le_br_daily_location                   LE_BR_DAILY_LOCATION
         ,glbgt.le_br_director_number                  LE_BR_DIRECTOR_NUMBER
         ,glbgt.le_br_accountant_number                LE_BR_ACCOUNTANT_NUMBER
         ,glbgt.le_br_accountant_name                  LE_BR_ACCOUNTANT_NAME
         ,:P_COA_ID                                    CHART_OF_ACCOUNTS_ID
         ,ael.SR31                                    SR31
         ,ael.SR32                                    SR32
         ,ael.SR33                                    SR33
         ,ael.SR34                                    SR34
         ,ael.SR35                                    SR35
         ,ael.SR36                                    SR36
         ,ael.SR37                                    SR37
         ,ael.SR38                                    SR38
         ,ael.SR39                                    SR39
         ,ael.SR40                                    SR40
         ,ael.SR41                                    SR41
         ,ael.SR42                                    SR42
         ,ael.SR43                                    SR43
         ,ael.SR44                                    SR44
         ,ael.SR45                                    SR45
         ,ael.SR46                                    SR46
         ,ael.SR47                                    SR47
         ,ael.SR48                                    SR48
         ,ael.SR49                                    SR49
         ,ael.SR50                                    SR50
         ,ael.SR51                                    SR51
         ,ael.SR52                                    SR52
         ,ael.SR53                                    SR53
         ,ael.SR54                                    SR54
         ,ael.SR55                                    SR55
         ,ael.SR56                                    SR56
         ,ael.SR57                                    SR57
         ,ael.SR58                                    SR58
         ,ael.SR59                                    SR59
         ,ael.SR60                                    SR60 

FROM     xla_ae_headers                   aeh
        ,xla_ae_lines                     ael
        ,fnd_lookup_values_tl             flk1
        ,xla_lookups                      xlk2
        ,xla_events                       xle
        ,xla_event_classes_tl             xect
        ,xla_event_types_tl               xet
       -- ,fnd_user                         fdu
        ,xla_transaction_entities         ent
        --,fnd_application_tl               fap
        ,xla_subledgers_tl                xsl
        ,fun_seq_versions                 fsv1
        ,fun_seq_versions                 fsv2
        ,fnd_document_sequences           fns
        ,fnd_document_sequences           fns1
        ,gl_je_categories_tl              gjct
        ,gl_je_sources_tl                 gjst
        ,gl_daily_conversion_types        gdct
        ,gl_import_references             gir
        ,gl_je_lines                      gjl
        ,gl_je_headers                    gjh
        ,gl_je_batches                    gjb
	,gl_je_lines_recon                gjlr
        ,xla_report_balances           glbgt      --KT:21B

WHERE    &p_ledger_filters 
  AND    gjl.ledger_id                    = glbgt.ledger_id
  AND    gjl.code_combination_id          = glbgt.code_combination_id
  AND    gjl.effective_date               BETWEEN glbgt.period_start_date AND glbgt.period_end_date
  &p_period_date_join1 
  AND    gjl.period_name                  = glbgt.period_name
  AND    gjl.je_header_id                   = gjh.je_header_id
  AND    gjl.period_name                    = gjh.period_name
  AND    gjl.je_header_id                   = gir.je_header_id
  AND    gjl.je_line_num                    = gir.je_line_num
  AND    gjl.je_header_id                   = gjlr.je_header_id(+)
  AND    gjl.je_line_num                    = gjlr.je_line_num(+)
  AND    gjh.je_header_id                   = gir.je_header_id
  AND    gjh.status                         = 'P'
  AND    fns1.application_id(+)              = 101                             -- added bug 10038642
  AND    fns1.doc_sequence_id(+)             = gjh.doc_sequence_id             -- added bug 10038642
  AND    NVL(gjh.je_from_sla_flag,'N')      IN('Y','U')
  AND    gjb.je_batch_id                    = gir.je_batch_id
  AND    gjb.status                         = 'P'
  AND    gir.gl_sl_link_id                  = ael.gl_sl_link_id
  AND    gir.gl_sl_link_table               = ael.gl_sl_link_table
--AND  gjl.currency_code                    = glbgt.ledger_currency --added bug 6722505
  AND    decode(gjl.currency_code,'STAT',gjl.currency_code,glbgt.ledger_currency) = glbgt.ledger_currency --Added for bug#29213970 --KT:21B
  AND    gjct.je_category_name              = aeh.je_category_name
  AND    gjct.LANGUAGE                      = USERENV('LANG')
  AND    gjst.je_source_name                = gjh.je_source
  AND    gjst.LANGUAGE                      = USERENV('LANG')
  AND    aeh.accounting_entry_status_code   = 'F'
  AND    aeh.gl_transfer_status_code        = 'Y'
  AND    aeh.balance_type_code              = glbgt.balance_type_code
  AND    NVL(aeh.budget_version_id,-19999)  = NVL(glbgt.budget_version_id,-19999)
  AND    ael.application_id                 = aeh.application_id
  AND    ael.ae_header_id                   = aeh.ae_header_id
  AND    NVL(ael.encumbrance_type_id,-19999)= NVL(glbgt.encumbrance_type_id,-19999)  -- 4458381
  AND    flk1.lookup_type(+)                = 'XCC_BC_FUNDS_STATUSES'
  AND    flk1.lookup_code(+)                = aeh.funds_status_code
  AND    flk1.language(+)                   = USERENV('LANG')
  AND    flk1.view_application_id(+)        = 0
  AND    xlk2.lookup_type                   = 'XLA_ACCOUNTING_CLASS'
  AND    xlk2.lookup_code                   = ael.accounting_class_code
  AND    xle.application_id                 = aeh.application_id
  AND    xle.event_id                       = aeh.event_id
  AND    xet.application_id                 = aeh.application_id
  AND    xet.event_type_code                = aeh.event_type_code
  AND    xet.LANGUAGE                       = USERENV('LANG')
  AND    xect.application_id                = xet.application_id
  AND    xect.entity_code                   = xet.entity_code
  AND    xect.event_class_code              = xet.event_class_code
  AND    xect.LANGUAGE                      = USERENV('LANG')
  AND    ent.application_id                 = aeh.application_id
  AND    ent.entity_id                      = aeh.entity_id
  --AND    ent.ledger_id                      = aeh.ledger_id -- bug 8347816
  --AND    fdu.user_id                        = ent.created_by
  AND    xsl.application_id                 = aeh.application_id
  AND    xsl.LANGUAGE                       = USERENV('LANG')
  AND    fsv1.seq_version_id(+)             = aeh.completion_acct_seq_version_id
  AND    fsv2.seq_version_id(+)             = aeh.close_acct_seq_version_id
  AND    fns.application_id(+)              = aeh.application_id
  AND    fns.doc_sequence_id(+)             = aeh.doc_sequence_id
  AND    gdct.conversion_type(+)            = ael.currency_conversion_type
    &p_sla_other_filter
 --removed as part of 6719948
 --AND    ael.code_combination_id            = glbgt.code_combination_id
 --AND    aeh.ledger_id                      = glbgt.ledger_id
 --AND    aeh.accounting_date                BETWEEN glbgt.period_start_date AND glbgt.period_end_date
 --AND    aeh.accounting_date                BETWEEN :P_GL_DATE_FROM AND :P_GL_DATE_TO
 --AND    aeh.period_name                    = glbgt.period_name
 --AND    gjh.ledger_id                      = aeh.ledger_id

   UNION ALL

   SELECT /*+ leading (glbgt gjl gjh gjb) */
           to_char(gjh.default_effective_date
                     ,'YYYY-MM-DD')                        GL_DATE
             ,gjh.created_by                                CREATED_BY
             ,to_char(gjh.creation_date
                     ,'YYYY-MM-DD"T"hh:mi:ss')             CREATION_DATE
             ,to_char(gjh.last_update_date
                     ,'YYYY-MM-DD')                        LAST_UPDATE_DATE
             ,NULL                                         GL_TRANSFER_DATE
             ,to_char(gjh.reference_date
                     ,'YYYY-MM-DD')                        REFERENCE_DATE
             ,NULL                                         COMPLETED_DATE
             ,NULL                                         TRANSACTION_NUMBER
             ,NULL                                         TRANSACTION_DATE
             ,fsv1.header_name                             ACCOUNTING_SEQUENCE_NAME
             ,fsv1.version_name                            ACCOUNTING_SEQUENCE_VERSION
             ,gjh.posting_acct_seq_value                   ACCOUNTING_SEQUENCE_NUMBER
             ,fsv2.header_name                             REPORTING_SEQUENCE_NAME
             ,fsv2.version_name                            REPORTING_SEQUENCE_VERSION
             ,gjh.close_acct_seq_value                     REPORTING_SEQUENCE_NUMBER
             ,NULL                                         DOCUMENT_CATEGORY
             ,NULL                                         DOCUMENT_SEQUENCE_NAME
             ,NULL                                         DOCUMENT_SEQUENCE_NUMBER
             ,fns.name                                     GL_DOCUMENT_SEQUENCE_NAME   -- added bug 10038642
             ,gjh.doc_sequence_value                       GL_DOCUMENT_SEQUENCE_NUMBER -- added bug 10038642 
             ,NULL                                         APPLICATION_ID
             ,NULL                                         APPLICATION_NAME
             ,gjh.je_header_id                             HEADER_ID
             ,gjh.description                              HEADER_DESCRIPTION
             ,NULL                                         FUND_STATUS
             ,gjct.user_je_category_name                   JE_CATEGORY_NAME
             ,gjst.user_je_source_name                     JE_SOURCE_NAME
             ,NULL                                         EVENT_ID
             ,NULL                                         EVENT_DATE
             ,NULL                                         EVENT_NUMBER
             ,NULL                                         EVENT_CLASS_CODE
             ,NULL                                         EVENT_CLASS_NAME
             ,NULL                                         EVENT_TYPE_CODE
             ,NULL                                         EVENT_TYPE_NAME
             ,gjb.NAME                                     GL_BATCH_NAME
             ,to_char(gjb.posted_date
                     ,'YYYY-MM-DD')                        POSTED_DATE
             ,gjh.NAME                                     GL_JE_NAME
             ,gjh.external_reference                       EXTERNAL_REFERENCE
             ,gjl.je_line_num                              GL_LINE_NUMBER
             ,gjl.je_line_num                              LINE_NUMBER
			 ,gjl.je_line_num                              ORIG_LINE_NUMBER
             ,NULL                                         ACCOUNTING_CLASS_CODE
             ,NULL                                         ACCOUNTING_CLASS_NAME

             ,gjl.description                              LINE_DESCRIPTION
             ,gjl.currency_code                            ENTERED_CURRENCY
             ,gjl.currency_conversion_rate                 CONVERSION_RATE
             ,to_char(gjl.currency_conversion_date
                     ,'YYYY-MM-DD')                        CONVERSION_RATE_DATE
             ,gjl.currency_conversion_type                 CONVERSION_RATE_TYPE_CODE
             ,gdct.user_conversion_type                    CONVERSION_RATE_TYPE
             ,gjl.entered_dr                               ENTERED_DR
             ,gjl.entered_cr                               ENTERED_CR
             ,NULL                                         UNROUNDED_ACCOUNTED_DR
             ,NULL                                         UNROUNDED_ACCOUNTED_CR
             ,gjl.accounted_dr                             ACCOUNTED_DR
             ,gjl.accounted_cr                             ACCOUNTED_CR
             ,gjl.stat_amount                              STATISTICAL_AMOUNT
             ,gjl.jgzz_recon_ref                           RECONCILIATION_REFERENCE
 	     ,gjlr.jgzz_recon_ref			   JGZZ_RECON_REF	
             ,to_char(gjlr.jgzz_recon_date
                 ,'YYYY-MM-DD') 	                   JGZZ_RECON_DATE
 	     ,gjlr.jgzz_recon_id                           JGZZ_RECON_ID
	     ,gjlr.jgzz_recon_status                       JGZZ_RECON_STATUS
 	     ,(SELECT meaning
		FROM gl_lookups
		WHERE lookup_type = 'ORA_GL_LINE_RECON_STATUS'
		AND lookup_code   = Nvl(gjlr.jgzz_recon_status, 'U')) AS RECON_STATUS
             ,gjl.attribute_category                       ATTRIBUTE_CATEGORY
             ,gjl.attribute1                               ATTRIBUTE1
             ,gjl.attribute2                               ATTRIBUTE2
             ,gjl.attribute3                               ATTRIBUTE3
             ,gjl.attribute4                               ATTRIBUTE4
             ,gjl.attribute5                               ATTRIBUTE5
             ,gjl.attribute6                               ATTRIBUTE6
             ,gjl.attribute7                               ATTRIBUTE7
             ,gjl.attribute8                               ATTRIBUTE8
             ,gjl.attribute9                               ATTRIBUTE9
             ,gjl.attribute10                              ATTRIBUTE10
             ,NULL                                         PARTY_TYPE_CODE
             ,NULL                                         PARTY_TYPE
             ,NULL                                         PARTY_INFO
             ,NULL                                         USERIDS
             ,glbgt.ledger_id                              LEDGER_ID
             ,glbgt.ledger_short_name                      LEDGER_SHORT_NAME
             ,glbgt.ledger_description                     LEDGER_DESCRIPTION
             ,glbgt.ledger_name                            LEDGER_NAME
             ,glbgt.ledger_currency                        LEDGER_CURRENCY
             ,glbgt.period_year                            PERIOD_YEAR
             ,glbgt.period_number                          PERIOD_NUMBER
             ,glbgt.period_name                            PERIOD_NAME
             ,to_char(glbgt.period_start_date
                                        ,'YYYY-MM-DD')     PERIOD_START_DATE
             ,to_char(glbgt.period_end_date
                                        ,'YYYY-MM-DD')     PERIOD_END_DATE
             ,glbgt.balance_type_code                      BALANCE_TYPE_CODE
             ,glbgt.balance_type                           BALANCE_TYPE
             ,glbgt.budget_name                            BUDGET_NAME
             ,glbgt.encumbrance_type                       ENCUMBRANCE_TYPE
             ,glbgt.begin_balance_dr                       BEGIN_BALANCE_DR
             ,glbgt.begin_balance_cr                       BEGIN_BALANCE_CR
             ,glbgt.period_net_dr                          PERIOD_NET_DR
             ,glbgt.period_net_cr                          PERIOD_NET_CR
             ,glbgt.code_combination_id                    CODE_COMBINATION_ID
             ,glbgt.accounting_code_combination            ACCOUNTING_CODE_COMBINATION
            -- ,glbgt.code_combination_description           CODE_COMBINATION_DESCRIPTION
             ,glbgt.control_account_flag                   CONTROL_ACCOUNT_FLAG
             ,glbgt.control_account                        CONTROL_ACCOUNT
             ,glbgt.balancing_segment                      BALANCING_SEGMENT
             ,glbgt.natural_account_segment                NATURAL_ACCOUNT_SEGMENT
             ,glbgt.cost_center_segment                    COST_CENTER_SEGMENT
             ,glbgt.management_segment                     MANAGEMENT_SEGMENT
             ,glbgt.intercompany_segment                   INTERCOMPANY_SEGMENT
             --,glbgt.balancing_segment_desc                 BALANCING_SEGMENT_DESC
             --,glbgt.natural_account_desc                   NATURAL_ACCOUNT_DESC
             --,glbgt.cost_center_desc                       COST_CENTER_DESC
             --,glbgt.management_segment_desc                MANAGEMENT_SEGMENT_DESC
             --,glbgt.intercompany_segment_desc              INTERCOMPANY_SEGMENT_DESC
             ,glbgt.segment1                               SEGMENT1
             ,glbgt.segment2                               SEGMENT2
             ,glbgt.segment3                               SEGMENT3
             ,glbgt.segment4                               SEGMENT4
             ,glbgt.segment5                               SEGMENT5
             ,glbgt.segment6                               SEGMENT6
             ,glbgt.segment7                               SEGMENT7
             ,glbgt.segment8                               SEGMENT8
             ,glbgt.segment9                               SEGMENT9
             ,glbgt.segment10                              SEGMENT10
             ,glbgt.segment11                              SEGMENT11
             ,glbgt.segment12                              SEGMENT12
             ,glbgt.segment13                              SEGMENT13
             ,glbgt.segment14                              SEGMENT14
             ,glbgt.segment15                              SEGMENT15
             ,glbgt.segment16                              SEGMENT16
             ,glbgt.segment17                              SEGMENT17
             ,glbgt.segment18                              SEGMENT18
             ,glbgt.segment19                              SEGMENT19
             ,glbgt.segment20                              SEGMENT20
             ,glbgt.segment21                              SEGMENT21
             ,glbgt.segment22                              SEGMENT22
             ,glbgt.segment23                              SEGMENT23
             ,glbgt.segment24                              SEGMENT24
             ,glbgt.segment25                              SEGMENT25
             ,glbgt.segment26                              SEGMENT26
             ,glbgt.segment27                              SEGMENT27
             ,glbgt.segment28                              SEGMENT28
             ,glbgt.segment29                              SEGMENT29
             ,glbgt.segment30                              SEGMENT30
             ,glbgt.begin_running_total_cr                 BEGIN_RUNNING_TOTAL_CR
             ,glbgt.begin_running_total_dr                 BEGIN_RUNNING_TOTAL_DR
             ,glbgt.end_running_total_cr                   END_RUNNING_TOTAL_CR
             ,glbgt.end_running_total_dr                   END_RUNNING_TOTAL_DR
             ,glbgt.legal_entity_id                        LEGAL_ENTITY_ID
             ,glbgt.legal_entity_name                      LEGAL_ENTITY_NAME
             ,glbgt.le_address_line_1                      LE_ADDRESS_LINE_1
             ,glbgt.le_address_line_2                      LE_ADDRESS_LINE_2
             ,glbgt.le_address_line_3                      LE_ADDRESS_LINE_3
             ,glbgt.le_city                                LE_CITY
             ,glbgt.le_region_1                            LE_REGION_1
             ,glbgt.le_region_2                            LE_REGION_2
             ,glbgt.le_region_3                            LE_REGION_3
             ,glbgt.le_postal_code                         LE_POSTAL_CODE
             ,glbgt.le_country                             LE_COUNTRY
             ,glbgt.le_registration_number                 LE_REGISTRATION_NUMBER
             ,glbgt.le_registration_effective_from         LE_REGISTRATION_EFFECTIVE_FROM
             ,glbgt.le_br_daily_inscription_number         LE_BR_DAILY_INSCRIPTION_NUMBER
             ,to_char(glbgt.le_br_daily_inscription_date
                                        ,'YYYY-MM-DD')     LE_BR_DAILY_INSCRIPTION_DATE
             ,glbgt.le_br_daily_entity                     LE_BR_DAILY_ENTITY
             ,glbgt.le_br_daily_location                   LE_BR_DAILY_LOCATION
             ,glbgt.le_br_director_number                  LE_BR_DIRECTOR_NUMBER
             ,glbgt.le_br_accountant_number                LE_BR_ACCOUNTANT_NUMBER
             ,glbgt.le_br_accountant_name                  LE_BR_ACCOUNTANT_NAME
             ,:P_COA_ID                                    CHART_OF_ACCOUNTS_ID
             ,NULL                                    SR31
             ,NULL                                    SR32
             ,NULL                                    SR33
             ,NULL                                    SR34
             ,NULL                                    SR35
             ,NULL                                    SR36
             ,NULL                                    SR37
             ,NULL                                    SR38
             ,NULL                                    SR39
             ,NULL                                    SR40
             ,NULL                                    SR41
             ,NULL                                    SR42
             ,NULL                                    SR43
             ,NULL                                    SR44
             ,NULL                                    SR45
             ,NULL                                    SR46
             ,NULL                                    SR47
             ,NULL                                    SR48
             ,NULL                                    SR49
             ,NULL                                    SR50
             ,NULL                                    SR51
             ,NULL                                    SR52
             ,NULL                                    SR53
             ,NULL                                    SR54
             ,NULL                                    SR55
             ,NULL                                    SR56
             ,NULL                                    SR57
             ,NULL                                    SR58
             ,NULL                                    SR59
             ,NULL                                    SR60  
     FROM  --  fnd_user                         fdu
             fun_seq_versions                 fsv1
            ,fun_seq_versions                 fsv2
            ,fnd_document_sequences           fns
            ,gl_je_categories_tl              gjct
            ,gl_je_sources_tl                 gjst
            ,gl_daily_conversion_types        gdct
            ,gl_je_lines                      gjl
            ,gl_je_headers                    gjh
            ,gl_je_batches                    gjb
            ,gl_je_lines_recon                gjlr
            ,xla_report_balances           glbgt       --KT:21B
     WHERE   gjl.ledger_id                    = glbgt.ledger_id
       AND   gjl.code_combination_id          = glbgt.code_combination_id
       AND   gjl.effective_date               BETWEEN glbgt.period_start_date AND glbgt.period_end_date
       &p_period_date_join2  
       AND   gjl.period_name                  = glbgt.period_name
       AND   gjl.je_header_id                 = gjlr.je_header_id(+)
       AND   gjl.je_line_num                  = gjlr.je_line_num(+)
       AND   gjh.je_header_id                 = gjl.je_header_id
       AND   gjh.actual_flag                  = glbgt.balance_type_code
       AND   decode(gjl.currency_code,'STAT',gjl.currency_code,glbgt.ledger_currency) = glbgt.ledger_currency --added bug 6686541
       AND   NVL(gjh.je_from_sla_flag,'N')    = 'N'
       AND   NVL(gjh.budget_version_id,-19999)= NVL(glbgt.budget_version_id,-19999)
       AND   NVL(gjh.encumbrance_type_id,-19999)= NVL(glbgt.encumbrance_type_id,-19999)
       AND   gjb.je_batch_id                  = gjh.je_batch_id
       AND   gjb.status                       = 'P'
       AND   fns.application_id(+)              = 101                      -- added bug 10038642
       AND   fns.doc_sequence_id(+)             = gjh.doc_sequence_id      -- added bug 10038642
     --  AND   fdu.user_id                      = gjb.created_by
       AND   fsv1.seq_version_id(+)           = gjh.posting_acct_seq_version_id
       AND   fsv2.seq_version_id(+)           = gjh.close_acct_seq_version_id
       AND   gjct.je_category_name            = gjh.je_category
       AND   gjct.LANGUAGE                    = USERENV('LANG')
       AND   gjst.je_source_name              = gjh.je_source
       AND   gjst.language                    = USERENV('LANG')
       AND   gdct.conversion_type(+)          = gjl.currency_conversion_type
       &p_gl_other_filter
	   &p_check_mig_stat_query
   UNION ALL

   SELECT  /*+ leading (glbgt gjl gjh gjb) */
           to_char(gjh.default_effective_date
                     ,'YYYY-MM-DD')                        GL_DATE
             ,gjh.created_by                                CREATED_BY
             ,to_char(gjh.creation_date
                     ,'YYYY-MM-DD"T"hh:mi:ss')             CREATION_DATE
             ,to_char(gjh.last_update_date
                     ,'YYYY-MM-DD')                        LAST_UPDATE_DATE
             ,NULL                                         GL_TRANSFER_DATE
             ,to_char(gjh.reference_date
                     ,'YYYY-MM-DD')                        REFERENCE_DATE
             ,NULL                                         COMPLETED_DATE
             ,NULL                                         TRANSACTION_NUMBER
             ,NULL                                         TRANSACTION_DATE
             ,fsv1.header_name                             ACCOUNTING_SEQUENCE_NAME
             ,fsv1.version_name                            ACCOUNTING_SEQUENCE_VERSION
             ,gjh.posting_acct_seq_value                   ACCOUNTING_SEQUENCE_NUMBER
             ,fsv2.header_name                             REPORTING_SEQUENCE_NAME
             ,fsv2.version_name                            REPORTING_SEQUENCE_VERSION
             ,gjh.close_acct_seq_value                     REPORTING_SEQUENCE_NUMBER
             ,NULL                                         DOCUMENT_CATEGORY
             ,NULL                                         DOCUMENT_SEQUENCE_NAME
             ,NULL                                         DOCUMENT_SEQUENCE_NUMBER
             ,fns.name                                     GL_DOCUMENT_SEQUENCE_NAME   -- added bug 10038642
             ,gjh.doc_sequence_value                       GL_DOCUMENT_SEQUENCE_NUMBER -- added bug 10038642 
             ,NULL                                         APPLICATION_ID
             ,NULL                                         APPLICATION_NAME
             ,gjh.je_header_id                             HEADER_ID
             ,gjh.description                              HEADER_DESCRIPTION
             ,NULL                                         FUND_STATUS
             ,gjct.user_je_category_name                   JE_CATEGORY_NAME
             ,gjst.user_je_source_name                     JE_SOURCE_NAME
             ,NULL                                         EVENT_ID
             ,NULL                                         EVENT_DATE
             ,NULL                                         EVENT_NUMBER
             ,NULL                                         EVENT_CLASS_CODE
             ,NULL                                         EVENT_CLASS_NAME
             ,NULL                                         EVENT_TYPE_CODE
             ,NULL                                         EVENT_TYPE_NAME
             ,gjb.NAME                                     GL_BATCH_NAME
             ,to_char(gjb.posted_date
                     ,'YYYY-MM-DD')                        POSTED_DATE
             ,gjh.NAME                                     GL_JE_NAME
             ,gjh.external_reference                       EXTERNAL_REFERENCE
             ,gjl.je_line_num                              GL_LINE_NUMBER
             ,gjl.je_line_num                              LINE_NUMBER
             ,gjl.je_line_num                              ORIG_LINE_NUMBER
             ,NULL                                         ACCOUNTING_CLASS_CODE
             ,NULL                                         ACCOUNTING_CLASS_NAME
             ,gjl.description                              LINE_DESCRIPTION
             ,gjl.currency_code                            ENTERED_CURRENCY
             ,gjl.currency_conversion_rate                 CONVERSION_RATE
             ,to_char(gjl.currency_conversion_date
                     ,'YYYY-MM-DD')                        CONVERSION_RATE_DATE
             ,gjl.currency_conversion_type                 CONVERSION_RATE_TYPE_CODE
             ,gdct.user_conversion_type                    CONVERSION_RATE_TYPE
             ,gjl.entered_dr                               ENTERED_DR
             ,gjl.entered_cr                               ENTERED_CR
             ,NULL                                         UNROUNDED_ACCOUNTED_DR
             ,NULL                                         UNROUNDED_ACCOUNTED_CR
             ,gjl.accounted_dr                             ACCOUNTED_DR
             ,gjl.accounted_cr                             ACCOUNTED_CR
             ,gjl.stat_amount                              STATISTICAL_AMOUNT
             ,gjl.jgzz_recon_ref                           RECONCILIATION_REFERENCE
 	     ,gjlr.jgzz_recon_ref			   JGZZ_RECON_REF	
             ,to_char(gjlr.jgzz_recon_date
                 ,'YYYY-MM-DD') 	                   JGZZ_RECON_DATE
 	     ,gjlr.jgzz_recon_id                           JGZZ_RECON_ID
	     ,gjlr.jgzz_recon_status                       JGZZ_RECON_STATUS
 	     ,(SELECT meaning
		FROM gl_lookups
		WHERE lookup_type = 'ORA_GL_LINE_RECON_STATUS'
		AND lookup_code   = Nvl(gjlr.jgzz_recon_status, 'U')) AS RECON_STATUS
             ,gjl.attribute_category                       ATTRIBUTE_CATEGORY
             ,gjl.attribute1                               ATTRIBUTE1
             ,gjl.attribute2                               ATTRIBUTE2
             ,gjl.attribute3                               ATTRIBUTE3
             ,gjl.attribute4                               ATTRIBUTE4
             ,gjl.attribute5                               ATTRIBUTE5
             ,gjl.attribute6                               ATTRIBUTE6
             ,gjl.attribute7                               ATTRIBUTE7
             ,gjl.attribute8                               ATTRIBUTE8
             ,gjl.attribute9                               ATTRIBUTE9
             ,gjl.attribute10                              ATTRIBUTE10
             ,NULL                                         PARTY_TYPE_CODE
             ,NULL                                         PARTY_TYPE
             ,NULL                                         PARTY_INFO
             ,NULL                                         USERIDS
             ,glbgt.ledger_id                              LEDGER_ID
             ,glbgt.ledger_short_name                      LEDGER_SHORT_NAME
             ,glbgt.ledger_description                     LEDGER_DESCRIPTION
             ,glbgt.ledger_name                            LEDGER_NAME
             ,glbgt.ledger_currency                        LEDGER_CURRENCY
             ,glbgt.period_year                            PERIOD_YEAR
             ,glbgt.period_number                          PERIOD_NUMBER
             ,glbgt.period_name                            PERIOD_NAME
             ,to_char(glbgt.period_start_date
                                        ,'YYYY-MM-DD')     PERIOD_START_DATE
             ,to_char(glbgt.period_end_date
                                        ,'YYYY-MM-DD')     PERIOD_END_DATE
             ,glbgt.balance_type_code                      BALANCE_TYPE_CODE
             ,glbgt.balance_type                           BALANCE_TYPE
             ,glbgt.budget_name                            BUDGET_NAME
             ,glbgt.encumbrance_type                       ENCUMBRANCE_TYPE
             ,glbgt.begin_balance_dr                       BEGIN_BALANCE_DR
             ,glbgt.begin_balance_cr                       BEGIN_BALANCE_CR
             ,glbgt.period_net_dr                          PERIOD_NET_DR
             ,glbgt.period_net_cr                          PERIOD_NET_CR
             ,glbgt.code_combination_id                    CODE_COMBINATION_ID
             ,glbgt.accounting_code_combination            ACCOUNTING_CODE_COMBINATION
             --,glbgt.code_combination_description           CODE_COMBINATION_DESCRIPTION
             ,glbgt.control_account_flag                   CONTROL_ACCOUNT_FLAG
             ,glbgt.control_account                        CONTROL_ACCOUNT
             ,glbgt.balancing_segment                      BALANCING_SEGMENT
             ,glbgt.natural_account_segment                NATURAL_ACCOUNT_SEGMENT
             ,glbgt.cost_center_segment                    COST_CENTER_SEGMENT
             ,glbgt.management_segment                     MANAGEMENT_SEGMENT
             ,glbgt.intercompany_segment                   INTERCOMPANY_SEGMENT
            -- ,glbgt.balancing_segment_desc                 BALANCING_SEGMENT_DESC
            -- ,glbgt.natural_account_desc                   NATURAL_ACCOUNT_DESC
            -- ,glbgt.cost_center_desc                       COST_CENTER_DESC
            -- ,glbgt.management_segment_desc                MANAGEMENT_SEGMENT_DESC
            -- ,glbgt.intercompany_segment_desc              INTERCOMPANY_SEGMENT_DESC
             ,glbgt.segment1                               SEGMENT1
             ,glbgt.segment2                               SEGMENT2
             ,glbgt.segment3                               SEGMENT3
             ,glbgt.segment4                               SEGMENT4
             ,glbgt.segment5                               SEGMENT5
             ,glbgt.segment6                               SEGMENT6
             ,glbgt.segment7                               SEGMENT7
             ,glbgt.segment8                               SEGMENT8
             ,glbgt.segment9                               SEGMENT9
             ,glbgt.segment10                              SEGMENT10
             ,glbgt.segment11                              SEGMENT11
             ,glbgt.segment12                              SEGMENT12
             ,glbgt.segment13                              SEGMENT13
             ,glbgt.segment14                              SEGMENT14
             ,glbgt.segment15                              SEGMENT15
             ,glbgt.segment16                              SEGMENT16
             ,glbgt.segment17                              SEGMENT17
             ,glbgt.segment18                              SEGMENT18
             ,glbgt.segment19                              SEGMENT19
             ,glbgt.segment20                              SEGMENT20
             ,glbgt.segment21                              SEGMENT21
             ,glbgt.segment22                              SEGMENT22
             ,glbgt.segment23                              SEGMENT23
             ,glbgt.segment24                              SEGMENT24
             ,glbgt.segment25                              SEGMENT25
             ,glbgt.segment26                              SEGMENT26
             ,glbgt.segment27                              SEGMENT27
             ,glbgt.segment28                              SEGMENT28
             ,glbgt.segment29                              SEGMENT29
             ,glbgt.segment30                              SEGMENT30
             ,glbgt.begin_running_total_cr                 BEGIN_RUNNING_TOTAL_CR
             ,glbgt.begin_running_total_dr                 BEGIN_RUNNING_TOTAL_DR
             ,glbgt.end_running_total_cr                   END_RUNNING_TOTAL_CR
             ,glbgt.end_running_total_dr                   END_RUNNING_TOTAL_DR
             ,glbgt.legal_entity_id                        LEGAL_ENTITY_ID
             ,glbgt.legal_entity_name                      LEGAL_ENTITY_NAME
             ,glbgt.le_address_line_1                      LE_ADDRESS_LINE_1
             ,glbgt.le_address_line_2                      LE_ADDRESS_LINE_2
             ,glbgt.le_address_line_3                      LE_ADDRESS_LINE_3
             ,glbgt.le_city                                LE_CITY
             ,glbgt.le_region_1                            LE_REGION_1
             ,glbgt.le_region_2                            LE_REGION_2
             ,glbgt.le_region_3                            LE_REGION_3
             ,glbgt.le_postal_code                         LE_POSTAL_CODE
             ,glbgt.le_country                             LE_COUNTRY
             ,glbgt.le_registration_number                 LE_REGISTRATION_NUMBER
             ,glbgt.le_registration_effective_from         LE_REGISTRATION_EFFECTIVE_FROM
             ,glbgt.le_br_daily_inscription_number         LE_BR_DAILY_INSCRIPTION_NUMBER
             ,to_char(glbgt.le_br_daily_inscription_date
                                        ,'YYYY-MM-DD')     LE_BR_DAILY_INSCRIPTION_DATE
             ,glbgt.le_br_daily_entity                     LE_BR_DAILY_ENTITY
             ,glbgt.le_br_daily_location                   LE_BR_DAILY_LOCATION
             ,glbgt.le_br_director_number                  LE_BR_DIRECTOR_NUMBER
             ,glbgt.le_br_accountant_number                LE_BR_ACCOUNTANT_NUMBER
             ,glbgt.le_br_accountant_name                  LE_BR_ACCOUNTANT_NAME
             ,:P_COA_ID                                    CHART_OF_ACCOUNTS_ID	
             ,NULL                                    SR31
             ,NULL                                    SR32
             ,NULL                                    SR33
             ,NULL                                    SR34
             ,NULL                                    SR35
             ,NULL                                    SR36
             ,NULL                                    SR37
             ,NULL                                    SR38
             ,NULL                                    SR39
             ,NULL                                    SR40
             ,NULL                                    SR41
             ,NULL                                    SR42
             ,NULL                                    SR43
             ,NULL                                    SR44
             ,NULL                                    SR45
             ,NULL                                    SR46
             ,NULL                                    SR47
             ,NULL                                    SR48
             ,NULL                                    SR49
             ,NULL                                    SR50
             ,NULL                                    SR51
             ,NULL                                    SR52
             ,NULL                                    SR53
             ,NULL                                    SR54
             ,NULL                                    SR55
             ,NULL                                    SR56
             ,NULL                                    SR57
             ,NULL                                    SR58
             ,NULL                                    SR59
             ,NULL                                    SR60  
     FROM   -- fnd_user                         fdu
             fnd_new_messages                 fnm
            ,fun_seq_versions                 fsv1
            ,fun_seq_versions                 fsv2
            ,fnd_document_sequences           fns
            ,gl_je_categories_tl              gjct
            ,gl_je_sources_tl                 gjst
            ,gl_daily_conversion_types        gdct
            ,gl_je_lines                      gjl
            ,gl_je_headers                    gjh
            ,gl_je_batches                    gjb
	    ,gl_je_lines_recon                gjlr
            ,xla_report_balances           glbgt --KT:21B
     WHERE   gjl.ledger_id                    = glbgt.ledger_id
       AND   gjl.code_combination_id          = glbgt.code_combination_id
       AND   gjl.effective_date               BETWEEN glbgt.period_start_date AND glbgt.period_end_date
       &p_period_date_join3 
       AND   gjl.period_name                  = glbgt.period_name
       AND   gjl.je_header_id                 = gjlr.je_header_id(+)
       AND   gjl.je_line_num                  = gjlr.je_line_num(+)
       AND   gjh.je_header_id                 = gjl.je_header_id
       AND   gjh.actual_flag                  = glbgt.balance_type_code
       AND   decode(gjl.currency_code,'STAT',gjl.currency_code,glbgt.ledger_currency) = glbgt.ledger_currency --added bug 6686541
       AND   NVL(gjh.je_from_sla_flag,'N')    = 'U'
       AND   fnm.application_id = 101 
       AND   fnm.language_code = USERENV('LANG')
       AND   fnm.message_name in ('PPOS0220', 'PPOS0221', 'PPOS0222', 'PPOS0243', 'PPOS0222_G','PPOSO275')   --bug 8357031
       AND   gjl.description= fnm.message_text
       AND   NVL(gjh.budget_version_id,-19999) = NVL(glbgt.budget_version_id,-19999)
       AND   NVL(gjh.encumbrance_type_id,-19999) = NVL(glbgt.encumbrance_type_id,-19999)
       AND   gjb.je_batch_id                  = gjh.je_batch_id
       AND   gjb.status                       = 'P'
       AND   fns.application_id(+)              = 101                     -- added bug 10038642
       AND   fns.doc_sequence_id(+)             = gjh.doc_sequence_id     -- added bug 10038642
   --    AND   fdu.user_id                      = gjb.created_by
       AND   fsv1.seq_version_id(+)           = gjh.posting_acct_seq_version_id
       AND   fsv2.seq_version_id(+)           = gjh.close_acct_seq_version_id
       AND   gjct.je_category_name            = gjh.je_category
       AND   gjct.LANGUAGE                    = USERENV('LANG')
       AND   gjst.je_source_name              = gjh.je_source
       AND   gjst.language                    = USERENV('LANG')
       AND   gdct.conversion_type(+)          = gjl.currency_conversion_type
       AND  not exists    (select 'x'  from gl_import_references gir  where
                gir.je_header_id=gjl.je_header_id
                and gir.je_line_num=gjl.je_line_num)
       &p_gl_other_filter
       &p_begin_balance_union_all
  )TABLE1
  ,(
		select distinct
	inv.invoice_num invoice_number
	,hzp.party_name as supplier
	,inv.INVOICE_DATE
	,INV.INVOICE_ID
from
	ap_invoices_all inv
	,POZ_SUPPLIERS sup
	,hz_parties hzp
where 1=1
and inv.vendor_id = sup.vendor_id(+)
and sup.party_id = hzp.party_id(+)
		) TABLE2 --PAYABLES
    WHERE &ACCT_SECURE = 'N'
	AND (nvl(TABLE1.TRANSACTION_NUMBER, '1') = TABLE2.invoice_number(+) and nvl(upper(table2.supplier), 'NONE') = nvl(upper(substr(PARTY_INFO,instr(PARTY_INFO,'|',1,1)+1,(instr(PARTY_INFO,'|',1,2)-1-instr(PARTY_INFO,'|',1,1)))), 'NONE') and table1.JE_SOURCE_NAME = 'Payables' AND JE_CATEGORY_NAME = 'Purchase Invoices') --PAYABLES
	
UNION ALL
SELECT DISTINCT/*+ OPT_PARAM('_optimizer_join_factorization' 'false') */
        TABLE1.GL_DATE                                 GL_DATE
       ,TABLE1.CREATED_BY                              CREATED_BY
       ,TABLE1.CREATION_DATE                           CREATION_DATE
       ,TABLE1.LAST_UPDATE_DATE                        LAST_UPDATE_DATE
       ,TABLE1.GL_TRANSFER_DATE                        GL_TRANSFER_DATE
       ,TABLE1.REFERENCE_DATE                          REFERENCE_DATE
       ,TABLE1.COMPLETED_DATE                          COMPLETED_DATE
       ,TABLE1.TRANSACTION_NUMBER                      TRANSACTION_NUMBER
       ,TABLE1.TRANSACTION_DATE                        TRANSACTION_DATE
       ,TABLE1.ACCOUNTING_SEQUENCE_NAME                ACCOUNTING_SEQUENCE_NAME
       ,TABLE1.ACCOUNTING_SEQUENCE_VERSION             ACCOUNTING_SEQUENCE_VERSION
       ,TABLE1.ACCOUNTING_SEQUENCE_NUMBER              ACCOUNTING_SEQUENCE_NUMBER
       ,TABLE1.REPORTING_SEQUENCE_NAME                 REPORTING_SEQUENCE_NAME
       ,TABLE1.REPORTING_SEQUENCE_VERSION              REPORTING_SEQUENCE_VERSION
       ,TABLE1.REPORTING_SEQUENCE_NUMBER               REPORTING_SEQUENCE_NUMBER
       ,TABLE1.DOCUMENT_CATEGORY                       DOCUMENT_CATEGORY
       ,TABLE1.DOCUMENT_SEQUENCE_NAME                  DOCUMENT_SEQUENCE_NAME
       ,TABLE1.DOCUMENT_SEQUENCE_NUMBER                DOCUMENT_SEQUENCE_NUMBER
       ,TABLE1.GL_DOCUMENT_SEQUENCE_NAME               GL_DOCUMENT_SEQUENCE_NAME     -- added bug 10038642                                                                                   
       ,TABLE1.GL_DOCUMENT_SEQUENCE_NUMBER             GL_DOCUMENT_SEQUENCE_NUMBER   -- added bug 10038642
       ,TABLE1.APPLICATION_ID                          APPLICATION_ID
       ,TABLE1.APPLICATION_NAME                        APPLICATION_NAME
       ,TABLE1.HEADER_ID                               HEADER_ID
       ,TABLE1.HEADER_DESCRIPTION                      HEADER_DESCRIPTION
       ,TABLE1.FUND_STATUS                             FUND_STATUS
       ,TABLE1.JE_CATEGORY_NAME                        JE_CATEGORY_NAME
       ,TABLE1.JE_SOURCE_NAME                          JE_SOURCE_NAME
       ,TABLE1.EVENT_ID                                EVENT_ID
       ,TABLE1.EVENT_DATE                              EVENT_DATE
       ,TABLE1.EVENT_NUMBER                            EVENT_NUMBER
       ,TABLE1.EVENT_CLASS_CODE                        EVENT_CLASS_CODE
       ,TABLE1.EVENT_CLASS_NAME                        EVENT_CLASS_NAME
       ,TABLE1.EVENT_TYPE_CODE                         EVENT_TYPE_CODE
       ,TABLE1.EVENT_TYPE_NAME                         EVENT_TYPE_NAME
       ,TABLE1.GL_BATCH_NAME                           GL_BATCH_NAME
       ,TABLE1.POSTED_DATE                             POSTED_DATE
       ,TABLE1.GL_JE_NAME                              GL_JE_NAME
       ,TABLE1.GL_LINE_NUMBER                          GL_LINE_NUMBER
       ,TABLE1.LINE_NUMBER                             LINE_NUMBER
	   ,TABLE1.ORIG_LINE_NUMBER                        ORIG_LINE_NUMBER
       ,TABLE1.ACCOUNTING_CLASS_CODE                   ACCOUNTING_CLASS_CODE
       ,TABLE1.ACCOUNTING_CLASS_NAME                   ACCOUNTING_CLASS_NAME
       ,TABLE1.LINE_DESCRIPTION                        LINE_DESCRIPTION
       ,TABLE1.ENTERED_CURRENCY                        ENTERED_CURRENCY
       ,TABLE1.CONVERSION_RATE                         CONVERSION_RATE
       ,TABLE1.CONVERSION_RATE_DATE                    CONVERSION_RATE_DATE
       ,TABLE1.CONVERSION_RATE_TYPE_CODE               CONVERSION_RATE_TYPE_CODE
       ,TABLE1.CONVERSION_RATE_TYPE                    CONVERSION_RATE_TYPE
       ,TABLE1.ENTERED_DR                              ENTERED_DR
       ,TABLE1.ENTERED_CR                              ENTERED_CR
       ,TABLE1.UNROUNDED_ACCOUNTED_DR                  UNROUNDED_ACCOUNTED_DR
       ,TABLE1.UNROUNDED_ACCOUNTED_CR                  UNROUNDED_ACCOUNTED_CR
       ,TABLE1.ACCOUNTED_DR                            ACCOUNTED_DR
       ,TABLE1.ACCOUNTED_CR                            ACCOUNTED_CR
       ,TABLE1.STATISTICAL_AMOUNT                      STATISTICAL_AMOUNT
       ,TABLE1.RECONCILIATION_REFERENCE                RECONCILIATION_REFERENCE
       ,TABLE1.JGZZ_RECON_REF                          JGZZ_RECON_REF
       ,TABLE1.JGZZ_RECON_DATE                         JGZZ_RECON_DATE
       ,TABLE1.JGZZ_RECON_ID                           JGZZ_RECON_ID
       ,TABLE1.JGZZ_RECON_STATUS                       JGZZ_RECON_STATUS
       ,TABLE1.RECON_STATUS                            RECON_STATUS
       ,TABLE1.ATTRIBUTE_CATEGORY                      ATTRIBUTE_CATEGORY
       ,TABLE1.ATTRIBUTE1                              ATTRIBUTE1
       ,TABLE1.ATTRIBUTE2                              ATTRIBUTE2
       ,TABLE1.ATTRIBUTE3                              ATTRIBUTE3
       ,TABLE1.ATTRIBUTE4                              ATTRIBUTE4
       ,TABLE1.ATTRIBUTE5                              ATTRIBUTE5
       ,TABLE1.ATTRIBUTE6                              ATTRIBUTE6
       ,TABLE1.ATTRIBUTE7                              ATTRIBUTE7
       ,TABLE1.ATTRIBUTE8                              ATTRIBUTE8
       ,TABLE1.ATTRIBUTE9                              ATTRIBUTE9
       ,TABLE1.ATTRIBUTE10                             ATTRIBUTE10
       ,TABLE1.PARTY_TYPE_CODE                         PARTY_TYPE_CODE
       ,TABLE1.PARTY_TYPE                              PARTY_TYPE
       ,substr(PARTY_INFO,1,instr(PARTY_INFO,'|',1,1)-1 )                                                       PARTY_NUMBER
       ,substr(PARTY_INFO,instr(PARTY_INFO,'|',1,1)+1,(instr(PARTY_INFO,'|',1,2)-1-instr(PARTY_INFO,'|',1,1)))  PARTY_NAME
       ,substr(PARTY_INFO,instr(PARTY_INFO,'|',1,2)+1,(instr(PARTY_INFO,'|',1,3)-1-instr(PARTY_INFO,'|',1,2)))  PARTY_TYPE_TAXPAYER_ID
       ,substr(PARTY_INFO,instr(PARTY_INFO,'|',1,3)+1,(instr(PARTY_INFO,'|',1,4)-1-instr(PARTY_INFO,'|',1,3)))  PARTY_TAX_REGISTRATION_NUMBER
       ,substr(PARTY_INFO,instr(PARTY_INFO,'|',1,4)+1,(instr(PARTY_INFO,'|',1,5)-1-instr(PARTY_INFO,'|',1,4)))  PARTY_SITE_NUMBER
       ,substr(PARTY_INFO,instr(PARTY_INFO,'|',1,5)+1,(instr(PARTY_INFO,'|',1,6)-1-instr(PARTY_INFO,'|',1,5)))  PARTY_SITE_NAME
       ,substr(PARTY_INFO,instr(PARTY_INFO,'|',1,6)+1,(length(PARTY_INFO)- instr(PARTY_INFO,'|',1,6)))          PARTY_SITE_TAX_RGSTN_NUMBER
       ,substr(USERIDS,1,instr(USERIDS,'|',1,1)-1)                                                    USER_TRX_IDENTIFIER_NAME_1
       ,substr(USERIDS,instr(USERIDS,'|',1,1)+1,(instr(USERIDS,'|',1,2)-1-instr(USERIDS,'|',1,1)))    USER_TRX_IDENTIFIER_VALUE_1
       ,substr(USERIDS,instr(USERIDS,'|',1,2)+1,(instr(USERIDS,'|',1,3)-1-instr(USERIDS,'|',1,2)))    USER_TRX_IDENTIFIER_NAME_2
       ,substr(USERIDS,instr(USERIDS,'|',1,3)+1,(instr(USERIDS,'|',1,4)-1-instr(USERIDS,'|',1,3)))    USER_TRX_IDENTIFIER_VALUE_2
       ,substr(USERIDS,instr(USERIDS,'|',1,4)+1,(instr(USERIDS,'|',1,5)-1-instr(USERIDS,'|',1,4)))    USER_TRX_IDENTIFIER_NAME_3
       ,substr(USERIDS,instr(USERIDS,'|',1,5)+1,(instr(USERIDS,'|',1,6)-1-instr(USERIDS,'|',1,5)))    USER_TRX_IDENTIFIER_VALUE_3
       ,substr(USERIDS,instr(USERIDS,'|',1,6)+1,(instr(USERIDS,'|',1,7)-1-instr(USERIDS,'|',1,6)))    USER_TRX_IDENTIFIER_NAME_4
       ,substr(USERIDS,instr(USERIDS,'|',1,7)+1,(instr(USERIDS,'|',1,8)-1-instr(USERIDS,'|',1,7)))    USER_TRX_IDENTIFIER_VALUE_4
       ,substr(USERIDS,instr(USERIDS,'|',1,8)+1,(instr(USERIDS,'|',1,9)-1-instr(USERIDS,'|',1,8)))    USER_TRX_IDENTIFIER_NAME_5
       ,substr(USERIDS,instr(USERIDS,'|',1,9)+1,(instr(USERIDS,'|',1,10)-1-instr(USERIDS,'|',1,9)))   USER_TRX_IDENTIFIER_VALUE_5
       ,substr(USERIDS,instr(USERIDS,'|',1,10)+1,(instr(USERIDS,'|',1,11)-1-instr(USERIDS,'|',1,10))) USER_TRX_IDENTIFIER_NAME_6
       ,substr(USERIDS,instr(USERIDS,'|',1,11)+1,(instr(USERIDS,'|',1,12)-1-instr(USERIDS,'|',1,11))) USER_TRX_IDENTIFIER_VALUE_6
       ,substr(USERIDS,instr(USERIDS,'|',1,12)+1,(instr(USERIDS,'|',1,13)-1-instr(USERIDS,'|',1,12))) USER_TRX_IDENTIFIER_NAME_7
       ,substr(USERIDS,instr(USERIDS,'|',1,13)+1,(instr(USERIDS,'|',1,14)-1-instr(USERIDS,'|',1,13))) USER_TRX_IDENTIFIER_VALUE_7
       ,substr(USERIDS,instr(USERIDS,'|',1,14)+1,(instr(USERIDS,'|',1,15)-1-instr(USERIDS,'|',1,14))) USER_TRX_IDENTIFIER_NAME_8
       ,substr(USERIDS,instr(USERIDS,'|',1,15)+1,(instr(USERIDS,'|',1,16)-1-instr(USERIDS,'|',1,15))) USER_TRX_IDENTIFIER_VALUE_8
       ,substr(USERIDS,instr(USERIDS,'|',1,16)+1,(instr(USERIDS,'|',1,17)-1-instr(USERIDS,'|',1,16))) USER_TRX_IDENTIFIER_NAME_9
       ,substr(USERIDS,instr(USERIDS,'|',1,17)+1,(instr(USERIDS,'|',1,18)-1-instr(USERIDS,'|',1,17))) USER_TRX_IDENTIFIER_VALUE_9
       ,substr(USERIDS,instr(USERIDS,'|',1,18)+1,(instr(USERIDS,'|',1,19)-1-instr(USERIDS,'|',1,18))) USER_TRX_IDENTIFIER_NAME_10
       ,substr(USERIDS,instr(USERIDS,'|',1,19)+1,(length(USERIDS)-instr(USERIDS,'|',1,19)))           USER_TRX_IDENTIFIER_VALUE_10
       ,TABLE1.LEDGER_ID                               LEDGER_ID
       ,TABLE1.LEDGER_SHORT_NAME                       LEDGER_SHORT_NAME
       ,TABLE1.LEDGER_DESCRIPTION                      LEDGER_DESCRIPTION
       ,TABLE1.LEDGER_NAME                             LEDGER_NAME
       ,TABLE1.LEDGER_CURRENCY                         LEDGER_CURRENCY
       ,TABLE1.PERIOD_YEAR                             PERIOD_YEAR
       ,TABLE1.PERIOD_NUMBER                           PERIOD_NUMBER
       ,TABLE1.PERIOD_NAME                             PERIOD_NAME
       ,TABLE1.PERIOD_START_DATE                       PERIOD_START_DATE
       ,TABLE1.PERIOD_END_DATE                         PERIOD_END_DATE
       ,TABLE1.BALANCE_TYPE_CODE                       BALANCE_TYPE_CODE
       ,TABLE1.BALANCE_TYPE                            BALANCE_TYPE
       ,TABLE1.BUDGET_NAME                             BUDGET_NAME
       ,TABLE1.ENCUMBRANCE_TYPE                        ENCUMBRANCE_TYPE
       ,TABLE1.BEGIN_BALANCE_DR                        BEGIN_BALANCE_DR
       ,TABLE1.BEGIN_BALANCE_CR                        BEGIN_BALANCE_CR
       ,TABLE1.PERIOD_NET_DR                           PERIOD_NET_DR
       ,TABLE1.PERIOD_NET_CR                           PERIOD_NET_CR
       ,TABLE1.CODE_COMBINATION_ID                     CODE_COMBINATION_ID
       ,TABLE1.ACCOUNTING_CODE_COMBINATION             ACCOUNTING_CODE_COMBINATION
       ,&FLEX_DESCR_ALL                                CODE_COMBINATION_DESCRIPTION
       ,TABLE1.CONTROL_ACCOUNT_FLAG                    CONTROL_ACCOUNT_FLAG
       ,TABLE1.CONTROL_ACCOUNT                         CONTROL_ACCOUNT
       ,TABLE1.BALANCING_SEGMENT                       BALANCING_SEGMENT
       ,TABLE1.NATURAL_ACCOUNT_SEGMENT                 NATURAL_ACCOUNT_SEGMENT
       ,TABLE1.COST_CENTER_SEGMENT                     COST_CENTER_SEGMENT
       ,TABLE1.MANAGEMENT_SEGMENT                      MANAGEMENT_SEGMENT
       ,TABLE1.INTERCOMPANY_SEGMENT                    INTERCOMPANY_SEGMENT
       ,&FLEX_GL_BALANCING_DESC                          BALANCING_SEGMENT_DESC
       ,&FLEX_GL_ACCOUNT_DESC                            NATURAL_ACCOUNT_DESC
       ,&FLEX_FA_COST_CTR_DESC                           COST_CENTER_DESC
       ,&FLEX_GL_MANAGEMENT_DESC                         MANAGEMENT_SEGMENT_DESC
       ,&FLEX_GL_INTERCOMPANY_DESC                       INTERCOMPANY_SEGMENT_DESC

       ,TABLE1.SEGMENT1                                SEGMENT1
       ,TABLE1.SEGMENT2                                SEGMENT2
       ,TABLE1.SEGMENT3                                SEGMENT3
       ,TABLE1.SEGMENT4                                SEGMENT4
       ,TABLE1.SEGMENT5                                SEGMENT5
       ,TABLE1.SEGMENT6                                SEGMENT6
       ,TABLE1.SEGMENT7                                SEGMENT7
       ,TABLE1.SEGMENT8                                SEGMENT8
       ,TABLE1.SEGMENT9                                SEGMENT9
       ,TABLE1.SEGMENT10                               SEGMENT10
       ,TABLE1.SEGMENT11                               SEGMENT11
       ,TABLE1.SEGMENT12                               SEGMENT12
       ,TABLE1.SEGMENT13                               SEGMENT13
       ,TABLE1.SEGMENT14                               SEGMENT14
       ,TABLE1.SEGMENT15                               SEGMENT15
       ,TABLE1.SEGMENT16                               SEGMENT16
       ,TABLE1.SEGMENT17                               SEGMENT17
       ,TABLE1.SEGMENT18                               SEGMENT18
       ,TABLE1.SEGMENT19                               SEGMENT19
       ,TABLE1.SEGMENT20                               SEGMENT20
       ,TABLE1.SEGMENT21                               SEGMENT21
       ,TABLE1.SEGMENT22                               SEGMENT22
       ,TABLE1.SEGMENT23                               SEGMENT23
       ,TABLE1.SEGMENT24                               SEGMENT24
       ,TABLE1.SEGMENT25                               SEGMENT25
       ,TABLE1.SEGMENT26                               SEGMENT26
       ,TABLE1.SEGMENT27                               SEGMENT27
       ,TABLE1.SEGMENT28                               SEGMENT28
       ,TABLE1.SEGMENT29                               SEGMENT29
       ,TABLE1.SEGMENT30                               SEGMENT30
       ,TABLE1.BEGIN_RUNNING_TOTAL_CR                  BEGIN_RUNNING_TOTAL_CR
       ,TABLE1.BEGIN_RUNNING_TOTAL_DR                  BEGIN_RUNNING_TOTAL_DR
       ,TABLE1.END_RUNNING_TOTAL_CR                    END_RUNNING_TOTAL_CR
       ,TABLE1.END_RUNNING_TOTAL_DR                    END_RUNNING_TOTAL_DR
       ,TABLE1.LEGAL_ENTITY_ID                         LEGAL_ENTITY_ID
       ,TABLE1.LEGAL_ENTITY_NAME                       LEGAL_ENTITY_NAME
       ,TABLE1.LE_ADDRESS_LINE_1                       LE_ADDRESS_LINE_1
       ,TABLE1.LE_ADDRESS_LINE_2                       LE_ADDRESS_LINE_2
       ,TABLE1.LE_ADDRESS_LINE_3                       LE_ADDRESS_LINE_3
       ,TABLE1.LE_CITY                                 LE_CITY
       ,TABLE1.LE_REGION_1                             LE_REGION_1
       ,TABLE1.LE_REGION_2                             LE_REGION_2
       ,TABLE1.LE_REGION_3                             LE_REGION_3
       ,TABLE1.LE_POSTAL_CODE                          LE_POSTAL_CODE
       ,TABLE1.LE_COUNTRY                              LE_COUNTRY
       ,TABLE1.LE_REGISTRATION_NUMBER                  LE_REGISTRATION_NUMBER
       ,TABLE1.LE_REGISTRATION_EFFECTIVE_FROM          LE_REGISTRATION_EFFECTIVE_FROM
       ,TABLE1.LE_BR_DAILY_INSCRIPTION_NUMBER          LE_BR_DAILY_INSCRIPTION_NUMBER
       ,TABLE1.LE_BR_DAILY_INSCRIPTION_DATE            LE_BR_DAILY_INSCRIPTION_DATE
       ,TABLE1.LE_BR_DAILY_ENTITY                      LE_BR_DAILY_ENTITY
       ,TABLE1.LE_BR_DAILY_LOCATION                    LE_BR_DAILY_LOCATION
       ,TABLE1.LE_BR_DIRECTOR_NUMBER                   LE_BR_DIRECTOR_NUMBER
       ,TABLE1.LE_BR_ACCOUNTANT_NUMBER                 LE_BR_ACCOUNTANT_NUMBER
       ,TABLE1.LE_BR_ACCOUNTANT_NAME                   LE_BR_ACCOUNTANT_NAME
       &p_je_source_period  
       ,TABLE1.SR31                                    SR31
       ,TABLE1.SR32                                    SR32
       ,TABLE1.SR33                                    SR33
       ,TABLE1.SR34                                    SR34
       ,TABLE1.SR35                                    SR35
       ,TABLE1.SR36                                    SR36
       ,TABLE1.SR37                                    SR37
       ,TABLE1.SR38                                    SR38
       ,TABLE1.SR39                                    SR39
       ,TABLE1.SR40                                    SR40
       ,TABLE1.SR41                                    SR41
       ,TABLE1.SR42                                    SR42
       ,TABLE1.SR43                                    SR43
       ,TABLE1.SR44                                    SR44
       ,TABLE1.SR45                                    SR45
       ,TABLE1.SR46                                    SR46
       ,TABLE1.SR47                                    SR47
       ,TABLE1.SR48                                    SR48
       ,TABLE1.SR49                                    SR49
       ,TABLE1.SR50                                    SR50
       ,TABLE1.SR51                                    SR51
       ,TABLE1.SR52                                    SR52
       ,TABLE1.SR53                                    SR53
       ,TABLE1.SR54                                    SR54
       ,TABLE1.SR55                                    SR55
       ,TABLE1.SR56                                    SR56
       ,TABLE1.SR57                                    SR57
       ,TABLE1.SR58                                    SR58
       ,TABLE1.SR59                                    SR59
       ,TABLE1.SR60                                    SR60
	   ,NULL RECEIPT_NUM
	,NULL PO_NUMBER
	,NULL INVOICE_NUMBER
	,NULL INVOICE_DATE
	,NULL EXPENDITURE_DATE 
	,NULL PROJECT 
	,NULL TASK 
FROM
     (SELECT   /*+ leading (glbgt gjl gjh gir ael aeh) */ 
	      to_char(aeh.accounting_date
                 ,'YYYY-MM-DD')                        GL_DATE
         ,aeh.created_by                                CREATED_BY
         ,to_char(aeh.creation_date
                 ,'YYYY-MM-DD"T"hh:mi:ss')             CREATION_DATE
         ,to_char(aeh.last_update_date
                 ,'YYYY-MM-DD')                        LAST_UPDATE_DATE
         ,to_char(aeh.gl_transfer_date
                 ,'YYYY-MM-DD"T"hh:mi:ss')             GL_TRANSFER_DATE
         ,to_char(aeh.reference_date
                 ,'YYYY-MM-DD')                        REFERENCE_DATE
         ,to_char(aeh.completed_date
                 ,'YYYY-MM-DD"T"hh:mi:ss')             COMPLETED_DATE
         ,ent.transaction_number                       TRANSACTION_NUMBER
         ,to_char(xle.transaction_date
                 ,'YYYY-MM-DD"T"hh:mi:ss')             TRANSACTION_DATE
         ,fsv1.header_name                             ACCOUNTING_SEQUENCE_NAME
         ,fsv1.version_name                            ACCOUNTING_SEQUENCE_VERSION
         ,aeh.completion_acct_seq_value                ACCOUNTING_SEQUENCE_NUMBER
         ,fsv2.header_name                             REPORTING_SEQUENCE_NAME
         ,fsv2.version_name                            REPORTING_SEQUENCE_VERSION
         ,aeh.close_acct_seq_value                     REPORTING_SEQUENCE_NUMBER
         ,NULL                                         DOCUMENT_CATEGORY
         ,fns.name                                     DOCUMENT_SEQUENCE_NAME
         ,aeh.doc_sequence_value                       DOCUMENT_SEQUENCE_NUMBER
         ,fns1.name                                    GL_DOCUMENT_SEQUENCE_NAME   -- added bug 10038642
         ,gjh.doc_sequence_value                       GL_DOCUMENT_SEQUENCE_NUMBER -- added bug 10038642 
         ,aeh.application_id                           APPLICATION_ID
         ,xsl.application_name                         APPLICATION_NAME
         ,aeh.ae_header_id                             HEADER_ID
         ,aeh.description                              HEADER_DESCRIPTION
         ,flk1.meaning                                 FUND_STATUS
         ,gjct.user_je_category_name                   JE_CATEGORY_NAME
         ,gjst.user_je_source_name                     JE_SOURCE_NAME
         ,xle.event_id                                 EVENT_ID
         ,to_char(xle.event_date
                 ,'YYYY-MM-DD')                        EVENT_DATE
         ,xle.event_number                             EVENT_NUMBER
         ,xet.event_class_code                         EVENT_CLASS_CODE
         ,xect.NAME                                    EVENT_CLASS_NAME
         ,aeh.event_type_code                          EVENT_TYPE_CODE
         ,xet.NAME                                     EVENT_TYPE_NAME
         ,gjb.NAME                                     GL_BATCH_NAME
         ,to_char(gjb.posted_date
                 ,'YYYY-MM-DD')                        POSTED_DATE
         ,gjh.NAME                                     GL_JE_NAME
         ,gjh.external_reference                       EXTERNAL_REFERENCE
         ,gjl.je_line_num                              GL_LINE_NUMBER
         ,ael.displayed_line_number                    LINE_NUMBER
		 ,ael.ae_line_num							   ORIG_LINE_NUMBER
         ,ael.accounting_class_code                    ACCOUNTING_CLASS_CODE
         ,xlk2.meaning                                 ACCOUNTING_CLASS_NAME
         ,ael.description                              LINE_DESCRIPTION
         ,ael.currency_code                            ENTERED_CURRENCY
         ,ael.currency_conversion_rate                 CONVERSION_RATE
         ,to_char(ael.currency_conversion_date
                 ,'YYYY-MM-DD')                        CONVERSION_RATE_DATE
         ,ael.currency_conversion_type                 CONVERSION_RATE_TYPE_CODE
         ,gdct.user_conversion_type                    CONVERSION_RATE_TYPE
         ,ael.entered_dr                               ENTERED_DR
         ,ael.entered_cr                               ENTERED_CR
         ,ael.unrounded_accounted_dr                   UNROUNDED_ACCOUNTED_DR
         ,ael.unrounded_accounted_cr                   UNROUNDED_ACCOUNTED_CR
         ,ael.accounted_dr                             ACCOUNTED_DR
         ,ael.accounted_cr                             ACCOUNTED_CR
         ,ael.statistical_amount                       STATISTICAL_AMOUNT
         ,ael.jgzz_recon_ref                           RECONCILIATION_REFERENCE
 	 ,gjlr.jgzz_recon_ref			       JGZZ_RECON_REF
         ,to_char(gjlr.jgzz_recon_date
                 ,'YYYY-MM-DD') 	               JGZZ_RECON_DATE
 	 ,gjlr.jgzz_recon_id                           JGZZ_RECON_ID
	 ,gjlr.jgzz_recon_status                       JGZZ_RECON_STATUS
 	 ,(SELECT meaning
		FROM gl_lookups
		WHERE lookup_type = 'ORA_GL_LINE_RECON_STATUS'
		AND lookup_code   = Nvl(gjlr.jgzz_recon_status, 'U')) AS RECON_STATUS
         ,ael.attribute_category                       ATTRIBUTE_CATEGORY
         ,ael.attribute1                               ATTRIBUTE1
         ,ael.attribute2                               ATTRIBUTE2
         ,ael.attribute3                               ATTRIBUTE3
         ,ael.attribute4                               ATTRIBUTE4
         ,ael.attribute5                               ATTRIBUTE5
         ,ael.attribute6                               ATTRIBUTE6
         ,ael.attribute7                               ATTRIBUTE7
         ,ael.attribute8                               ATTRIBUTE8
         ,ael.attribute9                               ATTRIBUTE9
         ,ael.attribute10                              ATTRIBUTE10
         ,ael.party_type_code                          PARTY_TYPE_CODE
         ,NULL                                         PARTY_TYPE
         &p_party_columns                              PARTY_INFO
         &p_trx_identifiers                            USERIDS
         ,glbgt.ledger_id                              LEDGER_ID
         ,glbgt.ledger_short_name                      LEDGER_SHORT_NAME
         ,glbgt.ledger_description                     LEDGER_DESCRIPTION
         ,glbgt.ledger_name                            LEDGER_NAME
         ,glbgt.ledger_currency                        LEDGER_CURRENCY
         ,glbgt.period_year                            PERIOD_YEAR
         ,glbgt.period_number                          PERIOD_NUMBER
         ,glbgt.period_name                            PERIOD_NAME
         ,to_char(glbgt.period_start_date
                                 ,'YYYY-MM-DD')        PERIOD_START_DATE
         ,to_char(glbgt.period_end_date
                                 ,'YYYY-MM-DD')        PERIOD_END_DATE
         ,glbgt.balance_type_code                      BALANCE_TYPE_CODE
         ,glbgt.balance_type                           BALANCE_TYPE
         ,glbgt.budget_name                            BUDGET_NAME
         ,glbgt.encumbrance_type                       ENCUMBRANCE_TYPE
         ,glbgt.begin_balance_dr                       BEGIN_BALANCE_DR
         ,glbgt.begin_balance_cr                       BEGIN_BALANCE_CR
         ,glbgt.period_net_dr                          PERIOD_NET_DR
         ,glbgt.period_net_cr                          PERIOD_NET_CR
         ,glbgt.code_combination_id                    CODE_COMBINATION_ID
         ,glbgt.accounting_code_combination            ACCOUNTING_CODE_COMBINATION
         --,glbgt.code_combination_description           CODE_COMBINATION_DESCRIPTION
         ,glbgt.control_account_flag                   CONTROL_ACCOUNT_FLAG
         ,glbgt.control_account                        CONTROL_ACCOUNT
         ,glbgt.balancing_segment                      BALANCING_SEGMENT
         ,glbgt.natural_account_segment                NATURAL_ACCOUNT_SEGMENT
         ,glbgt.cost_center_segment                    COST_CENTER_SEGMENT
         ,glbgt.management_segment                     MANAGEMENT_SEGMENT
         ,glbgt.intercompany_segment                   INTERCOMPANY_SEGMENT
        -- ,glbgt.balancing_segment_desc                 BALANCING_SEGMENT_DESC
        -- ,glbgt.natural_account_desc                   NATURAL_ACCOUNT_DESC
        --,glbgt.cost_center_desc                       COST_CENTER_DESC
        --,glbgt.management_segment_desc                MANAGEMENT_SEGMENT_DESC
        -- ,glbgt.intercompany_segment_desc              INTERCOMPANY_SEGMENT_DESC
         ,glbgt.segment1                               SEGMENT1
         ,glbgt.segment2                               SEGMENT2
         ,glbgt.segment3                               SEGMENT3
         ,glbgt.segment4                               SEGMENT4
         ,glbgt.segment5                               SEGMENT5
         ,glbgt.segment6                               SEGMENT6
         ,glbgt.segment7                               SEGMENT7
         ,glbgt.segment8                               SEGMENT8
         ,glbgt.segment9                               SEGMENT9
         ,glbgt.segment10                              SEGMENT10
         ,glbgt.segment11                              SEGMENT11
         ,glbgt.segment12                              SEGMENT12
         ,glbgt.segment13                              SEGMENT13
         ,glbgt.segment14                              SEGMENT14
         ,glbgt.segment15                              SEGMENT15
         ,glbgt.segment16                              SEGMENT16
         ,glbgt.segment17                              SEGMENT17
         ,glbgt.segment18                              SEGMENT18
         ,glbgt.segment19                              SEGMENT19
         ,glbgt.segment20                              SEGMENT20
         ,glbgt.segment21                              SEGMENT21
         ,glbgt.segment22                              SEGMENT22
         ,glbgt.segment23                              SEGMENT23
         ,glbgt.segment24                              SEGMENT24
         ,glbgt.segment25                              SEGMENT25
         ,glbgt.segment26                              SEGMENT26
         ,glbgt.segment27                              SEGMENT27
         ,glbgt.segment28                              SEGMENT28
         ,glbgt.segment29                              SEGMENT29
         ,glbgt.segment30                              SEGMENT30
         ,glbgt.begin_running_total_cr                 BEGIN_RUNNING_TOTAL_CR
         ,glbgt.begin_running_total_dr                 BEGIN_RUNNING_TOTAL_DR
         ,glbgt.end_running_total_cr                   END_RUNNING_TOTAL_CR
         ,glbgt.end_running_total_dr                   END_RUNNING_TOTAL_DR
         ,glbgt.legal_entity_id                        LEGAL_ENTITY_ID
         ,glbgt.legal_entity_name                      LEGAL_ENTITY_NAME
         ,glbgt.le_address_line_1                      LE_ADDRESS_LINE_1
         ,glbgt.le_address_line_2                      LE_ADDRESS_LINE_2
         ,glbgt.le_address_line_3                      LE_ADDRESS_LINE_3
         ,glbgt.le_city                                LE_CITY
         ,glbgt.le_region_1                            LE_REGION_1
         ,glbgt.le_region_2                            LE_REGION_2
         ,glbgt.le_region_3                            LE_REGION_3
         ,glbgt.le_postal_code                         LE_POSTAL_CODE
         ,glbgt.le_country                             LE_COUNTRY
         ,glbgt.le_registration_number                 LE_REGISTRATION_NUMBER
         ,glbgt.le_registration_effective_from         LE_REGISTRATION_EFFECTIVE_FROM
         ,glbgt.le_br_daily_inscription_number         LE_BR_DAILY_INSCRIPTION_NUMBER
         ,to_char(glbgt.le_br_daily_inscription_date
                                ,'YYYY-MM-DD')                                             LE_BR_DAILY_INSCRIPTION_DATE
         ,glbgt.le_br_daily_entity                     LE_BR_DAILY_ENTITY
         ,glbgt.le_br_daily_location                   LE_BR_DAILY_LOCATION
         ,glbgt.le_br_director_number                  LE_BR_DIRECTOR_NUMBER
         ,glbgt.le_br_accountant_number                LE_BR_ACCOUNTANT_NUMBER
         ,glbgt.le_br_accountant_name                  LE_BR_ACCOUNTANT_NAME
         ,:P_COA_ID                                    CHART_OF_ACCOUNTS_ID
         ,ael.SR31                                    SR31
         ,ael.SR32                                    SR32
         ,ael.SR33                                    SR33
         ,ael.SR34                                    SR34
         ,ael.SR35                                    SR35
         ,ael.SR36                                    SR36
         ,ael.SR37                                    SR37
         ,ael.SR38                                    SR38
         ,ael.SR39                                    SR39
         ,ael.SR40                                    SR40
         ,ael.SR41                                    SR41
         ,ael.SR42                                    SR42
         ,ael.SR43                                    SR43
         ,ael.SR44                                    SR44
         ,ael.SR45                                    SR45
         ,ael.SR46                                    SR46
         ,ael.SR47                                    SR47
         ,ael.SR48                                    SR48
         ,ael.SR49                                    SR49
         ,ael.SR50                                    SR50
         ,ael.SR51                                    SR51
         ,ael.SR52                                    SR52
         ,ael.SR53                                    SR53
         ,ael.SR54                                    SR54
         ,ael.SR55                                    SR55
         ,ael.SR56                                    SR56
         ,ael.SR57                                    SR57
         ,ael.SR58                                    SR58
         ,ael.SR59                                    SR59
         ,ael.SR60                                    SR60 

FROM     xla_ae_headers                   aeh
        ,xla_ae_lines                     ael
        ,fnd_lookup_values_tl             flk1
        ,xla_lookups                      xlk2
        ,xla_events                       xle
        ,xla_event_classes_tl             xect
        ,xla_event_types_tl               xet
       -- ,fnd_user                         fdu
        ,xla_transaction_entities         ent
        --,fnd_application_tl               fap
        ,xla_subledgers_tl                xsl
        ,fun_seq_versions                 fsv1
        ,fun_seq_versions                 fsv2
        ,fnd_document_sequences           fns
        ,fnd_document_sequences           fns1
        ,gl_je_categories_tl              gjct
        ,gl_je_sources_tl                 gjst
        ,gl_daily_conversion_types        gdct
        ,gl_import_references             gir
        ,gl_je_lines                      gjl
        ,gl_je_headers                    gjh
        ,gl_je_batches                    gjb
	,gl_je_lines_recon                gjlr
        ,xla_report_balances           glbgt --KT:21B

WHERE    &p_ledger_filters 
  AND    gjl.ledger_id                    = glbgt.ledger_id
  AND    gjl.code_combination_id          = glbgt.code_combination_id
  AND    gjl.effective_date               BETWEEN glbgt.period_start_date AND glbgt.period_end_date
  &p_period_date_join1 
  AND    gjl.period_name                  = glbgt.period_name
  AND    gjl.je_header_id                   = gjh.je_header_id
  AND    gjl.period_name                    = gjh.period_name
  AND    gjl.je_header_id                   = gir.je_header_id
  AND    gjl.je_line_num                    = gir.je_line_num
  AND    gjl.je_header_id                   = gjlr.je_header_id(+)
  AND    gjl.je_line_num                    = gjlr.je_line_num(+)
  AND    gjh.je_header_id                   = gir.je_header_id
  AND    gjh.status                         = 'P'
  AND    fns1.application_id(+)              = 101                             -- added bug 10038642
  AND    fns1.doc_sequence_id(+)             = gjh.doc_sequence_id             -- added bug 10038642
  AND    NVL(gjh.je_from_sla_flag,'N')      IN('Y','U')
  AND    gjb.je_batch_id                    = gir.je_batch_id
  AND    gjb.status                         = 'P'
  AND    gir.gl_sl_link_id                  = ael.gl_sl_link_id
  AND    gir.gl_sl_link_table               = ael.gl_sl_link_table
--AND  gjl.currency_code                    = glbgt.ledger_currency --added bug 6722505
  AND    gjct.je_category_name              = aeh.je_category_name
  AND    gjct.LANGUAGE                      = USERENV('LANG')
  AND    gjst.je_source_name                = gjh.je_source
  AND    gjst.LANGUAGE                      = USERENV('LANG')
  AND    aeh.accounting_entry_status_code   = 'F'
  AND    aeh.gl_transfer_status_code        = 'Y'
  AND    aeh.balance_type_code              = glbgt.balance_type_code
  AND    NVL(aeh.budget_version_id,-19999)  = NVL(glbgt.budget_version_id,-19999)
  AND    ael.application_id                 = aeh.application_id
  AND    ael.ae_header_id                   = aeh.ae_header_id
  AND    NVL(ael.encumbrance_type_id,-19999)= NVL(glbgt.encumbrance_type_id,-19999)  -- 4458381
  AND    flk1.lookup_type(+)                = 'XCC_BC_FUNDS_STATUSES'
  AND    flk1.lookup_code(+)                = aeh.funds_status_code
  AND    flk1.language(+)                   = USERENV('LANG')
  AND    flk1.view_application_id(+)        = 0
  AND    xlk2.lookup_type                   = 'XLA_ACCOUNTING_CLASS'
  AND    xlk2.lookup_code                   = ael.accounting_class_code
  AND    xle.application_id                 = aeh.application_id
  AND    xle.event_id                       = aeh.event_id
  AND    xet.application_id                 = aeh.application_id
  AND    xet.event_type_code                = aeh.event_type_code
  AND    xet.LANGUAGE                       = USERENV('LANG')
  AND    xect.application_id                = xet.application_id
  AND    xect.entity_code                   = xet.entity_code
  AND    xect.event_class_code              = xet.event_class_code
  AND    xect.LANGUAGE                      = USERENV('LANG')
  AND    ent.application_id                 = aeh.application_id
  AND    ent.entity_id                      = aeh.entity_id
  --AND    ent.ledger_id                      = aeh.ledger_id -- bug 8347816
  --AND    fdu.user_id                        = ent.created_by
  AND    xsl.application_id                 = aeh.application_id
  AND    xsl.LANGUAGE                       = USERENV('LANG')
  AND    fsv1.seq_version_id(+)             = aeh.completion_acct_seq_version_id
  AND    fsv2.seq_version_id(+)             = aeh.close_acct_seq_version_id
  AND    fns.application_id(+)              = aeh.application_id
  AND    fns.doc_sequence_id(+)             = aeh.doc_sequence_id
  AND    gdct.conversion_type(+)            = ael.currency_conversion_type
    &p_sla_other_filter
 --removed as part of 6719948
 --AND    ael.code_combination_id            = glbgt.code_combination_id
 --AND    aeh.ledger_id                      = glbgt.ledger_id
 --AND    aeh.accounting_date                BETWEEN glbgt.period_start_date AND glbgt.period_end_date
 --AND    aeh.accounting_date                BETWEEN :P_GL_DATE_FROM AND :P_GL_DATE_TO
 --AND    aeh.period_name                    = glbgt.period_name
 --AND    gjh.ledger_id                      = aeh.ledger_id

   UNION ALL

   SELECT /*+ leading (glbgt gjl gjh gjb) */
           to_char(gjh.default_effective_date
                     ,'YYYY-MM-DD')                        GL_DATE
             ,gjh.created_by                                CREATED_BY
             ,to_char(gjh.creation_date
                     ,'YYYY-MM-DD"T"hh:mi:ss')             CREATION_DATE
             ,to_char(gjh.last_update_date
                     ,'YYYY-MM-DD')                        LAST_UPDATE_DATE
             ,NULL                                         GL_TRANSFER_DATE
             ,to_char(gjh.reference_date
                     ,'YYYY-MM-DD')                        REFERENCE_DATE
             ,NULL                                         COMPLETED_DATE
             ,NULL                                         TRANSACTION_NUMBER
             ,NULL                                         TRANSACTION_DATE
             ,fsv1.header_name                             ACCOUNTING_SEQUENCE_NAME
             ,fsv1.version_name                            ACCOUNTING_SEQUENCE_VERSION
             ,gjh.posting_acct_seq_value                   ACCOUNTING_SEQUENCE_NUMBER
             ,fsv2.header_name                             REPORTING_SEQUENCE_NAME
             ,fsv2.version_name                            REPORTING_SEQUENCE_VERSION
             ,gjh.close_acct_seq_value                     REPORTING_SEQUENCE_NUMBER
             ,NULL                                         DOCUMENT_CATEGORY
             ,NULL                                         DOCUMENT_SEQUENCE_NAME
             ,NULL                                         DOCUMENT_SEQUENCE_NUMBER
             ,fns.name                                     GL_DOCUMENT_SEQUENCE_NAME   -- added bug 10038642
             ,gjh.doc_sequence_value                       GL_DOCUMENT_SEQUENCE_NUMBER -- added bug 10038642 
             ,NULL                                         APPLICATION_ID
             ,NULL                                         APPLICATION_NAME
             ,gjh.je_header_id                             HEADER_ID
             ,gjh.description                              HEADER_DESCRIPTION
             ,NULL                                         FUND_STATUS
             ,gjct.user_je_category_name                   JE_CATEGORY_NAME
             ,gjst.user_je_source_name                     JE_SOURCE_NAME
             ,NULL                                         EVENT_ID
             ,NULL                                         EVENT_DATE
             ,NULL                                         EVENT_NUMBER
             ,NULL                                         EVENT_CLASS_CODE
             ,NULL                                         EVENT_CLASS_NAME
             ,NULL                                         EVENT_TYPE_CODE
             ,NULL                                         EVENT_TYPE_NAME
             ,gjb.NAME                                     GL_BATCH_NAME
             ,to_char(gjb.posted_date
                     ,'YYYY-MM-DD')                        POSTED_DATE
             ,gjh.NAME                                     GL_JE_NAME
             ,gjh.external_reference                       EXTERNAL_REFERENCE
             ,gjl.je_line_num                              GL_LINE_NUMBER
             ,gjl.je_line_num                              LINE_NUMBER
			 ,gjl.je_line_num                              ORIG_LINE_NUMBER
             ,NULL                                         ACCOUNTING_CLASS_CODE
             ,NULL                                         ACCOUNTING_CLASS_NAME

             ,gjl.description                              LINE_DESCRIPTION
             ,gjl.currency_code                            ENTERED_CURRENCY
             ,gjl.currency_conversion_rate                 CONVERSION_RATE
             ,to_char(gjl.currency_conversion_date
                     ,'YYYY-MM-DD')                        CONVERSION_RATE_DATE
             ,gjl.currency_conversion_type                 CONVERSION_RATE_TYPE_CODE
             ,gdct.user_conversion_type                    CONVERSION_RATE_TYPE
             ,gjl.entered_dr                               ENTERED_DR
             ,gjl.entered_cr                               ENTERED_CR
             ,NULL                                         UNROUNDED_ACCOUNTED_DR
             ,NULL                                         UNROUNDED_ACCOUNTED_CR
             ,gjl.accounted_dr                             ACCOUNTED_DR
             ,gjl.accounted_cr                             ACCOUNTED_CR
             ,gjl.stat_amount                              STATISTICAL_AMOUNT
             ,gjl.jgzz_recon_ref                           RECONCILIATION_REFERENCE
 	     ,gjlr.jgzz_recon_ref			   JGZZ_RECON_REF	
             ,to_char(gjlr.jgzz_recon_date
                 ,'YYYY-MM-DD') 	                   JGZZ_RECON_DATE
 	     ,gjlr.jgzz_recon_id                           JGZZ_RECON_ID
	     ,gjlr.jgzz_recon_status                       JGZZ_RECON_STATUS
 	     ,(SELECT meaning
		FROM gl_lookups
		WHERE lookup_type = 'ORA_GL_LINE_RECON_STATUS'
		AND lookup_code   = Nvl(gjlr.jgzz_recon_status, 'U')) AS RECON_STATUS
             ,gjl.attribute_category                       ATTRIBUTE_CATEGORY
             ,gjl.attribute1                               ATTRIBUTE1
             ,gjl.attribute2                               ATTRIBUTE2
             ,gjl.attribute3                               ATTRIBUTE3
             ,gjl.attribute4                               ATTRIBUTE4
             ,gjl.attribute5                               ATTRIBUTE5
             ,gjl.attribute6                               ATTRIBUTE6
             ,gjl.attribute7                               ATTRIBUTE7
             ,gjl.attribute8                               ATTRIBUTE8
             ,gjl.attribute9                               ATTRIBUTE9
             ,gjl.attribute10                              ATTRIBUTE10
             ,NULL                                         PARTY_TYPE_CODE
             ,NULL                                         PARTY_TYPE
             ,NULL                                         PARTY_INFO
             ,NULL                                         USERIDS
             ,glbgt.ledger_id                              LEDGER_ID
             ,glbgt.ledger_short_name                      LEDGER_SHORT_NAME
             ,glbgt.ledger_description                     LEDGER_DESCRIPTION
             ,glbgt.ledger_name                            LEDGER_NAME
             ,glbgt.ledger_currency                        LEDGER_CURRENCY
             ,glbgt.period_year                            PERIOD_YEAR
             ,glbgt.period_number                          PERIOD_NUMBER
             ,glbgt.period_name                            PERIOD_NAME
             ,to_char(glbgt.period_start_date
                                        ,'YYYY-MM-DD')     PERIOD_START_DATE
             ,to_char(glbgt.period_end_date
                                        ,'YYYY-MM-DD')     PERIOD_END_DATE
             ,glbgt.balance_type_code                      BALANCE_TYPE_CODE
             ,glbgt.balance_type                           BALANCE_TYPE
             ,glbgt.budget_name                            BUDGET_NAME
             ,glbgt.encumbrance_type                       ENCUMBRANCE_TYPE
             ,glbgt.begin_balance_dr                       BEGIN_BALANCE_DR
             ,glbgt.begin_balance_cr                       BEGIN_BALANCE_CR
             ,glbgt.period_net_dr                          PERIOD_NET_DR
             ,glbgt.period_net_cr                          PERIOD_NET_CR
             ,glbgt.code_combination_id                    CODE_COMBINATION_ID
             ,glbgt.accounting_code_combination            ACCOUNTING_CODE_COMBINATION
            -- ,glbgt.code_combination_description           CODE_COMBINATION_DESCRIPTION
             ,glbgt.control_account_flag                   CONTROL_ACCOUNT_FLAG
             ,glbgt.control_account                        CONTROL_ACCOUNT
             ,glbgt.balancing_segment                      BALANCING_SEGMENT
             ,glbgt.natural_account_segment                NATURAL_ACCOUNT_SEGMENT
             ,glbgt.cost_center_segment                    COST_CENTER_SEGMENT
             ,glbgt.management_segment                     MANAGEMENT_SEGMENT
             ,glbgt.intercompany_segment                   INTERCOMPANY_SEGMENT
             --,glbgt.balancing_segment_desc                 BALANCING_SEGMENT_DESC
             --,glbgt.natural_account_desc                   NATURAL_ACCOUNT_DESC
             --,glbgt.cost_center_desc                       COST_CENTER_DESC
             --,glbgt.management_segment_desc                MANAGEMENT_SEGMENT_DESC
             --,glbgt.intercompany_segment_desc              INTERCOMPANY_SEGMENT_DESC
             ,glbgt.segment1                               SEGMENT1
             ,glbgt.segment2                               SEGMENT2
             ,glbgt.segment3                               SEGMENT3
             ,glbgt.segment4                               SEGMENT4
             ,glbgt.segment5                               SEGMENT5
             ,glbgt.segment6                               SEGMENT6
             ,glbgt.segment7                               SEGMENT7
             ,glbgt.segment8                               SEGMENT8
             ,glbgt.segment9                               SEGMENT9
             ,glbgt.segment10                              SEGMENT10
             ,glbgt.segment11                              SEGMENT11
             ,glbgt.segment12                              SEGMENT12
             ,glbgt.segment13                              SEGMENT13
             ,glbgt.segment14                              SEGMENT14
             ,glbgt.segment15                              SEGMENT15
             ,glbgt.segment16                              SEGMENT16
             ,glbgt.segment17                              SEGMENT17
             ,glbgt.segment18                              SEGMENT18
             ,glbgt.segment19                              SEGMENT19
             ,glbgt.segment20                              SEGMENT20
             ,glbgt.segment21                              SEGMENT21
             ,glbgt.segment22                              SEGMENT22
             ,glbgt.segment23                              SEGMENT23
             ,glbgt.segment24                              SEGMENT24
             ,glbgt.segment25                              SEGMENT25
             ,glbgt.segment26                              SEGMENT26
             ,glbgt.segment27                              SEGMENT27
             ,glbgt.segment28                              SEGMENT28
             ,glbgt.segment29                              SEGMENT29
             ,glbgt.segment30                              SEGMENT30
             ,glbgt.begin_running_total_cr                 BEGIN_RUNNING_TOTAL_CR
             ,glbgt.begin_running_total_dr                 BEGIN_RUNNING_TOTAL_DR
             ,glbgt.end_running_total_cr                   END_RUNNING_TOTAL_CR
             ,glbgt.end_running_total_dr                   END_RUNNING_TOTAL_DR
             ,glbgt.legal_entity_id                        LEGAL_ENTITY_ID
             ,glbgt.legal_entity_name                      LEGAL_ENTITY_NAME
             ,glbgt.le_address_line_1                      LE_ADDRESS_LINE_1
             ,glbgt.le_address_line_2                      LE_ADDRESS_LINE_2
             ,glbgt.le_address_line_3                      LE_ADDRESS_LINE_3
             ,glbgt.le_city                                LE_CITY
             ,glbgt.le_region_1                            LE_REGION_1
             ,glbgt.le_region_2                            LE_REGION_2
             ,glbgt.le_region_3                            LE_REGION_3
             ,glbgt.le_postal_code                         LE_POSTAL_CODE
             ,glbgt.le_country                             LE_COUNTRY
             ,glbgt.le_registration_number                 LE_REGISTRATION_NUMBER
             ,glbgt.le_registration_effective_from         LE_REGISTRATION_EFFECTIVE_FROM
             ,glbgt.le_br_daily_inscription_number         LE_BR_DAILY_INSCRIPTION_NUMBER
             ,to_char(glbgt.le_br_daily_inscription_date
                                        ,'YYYY-MM-DD')     LE_BR_DAILY_INSCRIPTION_DATE
             ,glbgt.le_br_daily_entity                     LE_BR_DAILY_ENTITY
             ,glbgt.le_br_daily_location                   LE_BR_DAILY_LOCATION
             ,glbgt.le_br_director_number                  LE_BR_DIRECTOR_NUMBER
             ,glbgt.le_br_accountant_number                LE_BR_ACCOUNTANT_NUMBER
             ,glbgt.le_br_accountant_name                  LE_BR_ACCOUNTANT_NAME
             ,:P_COA_ID                                    CHART_OF_ACCOUNTS_ID
             ,NULL                                    SR31
             ,NULL                                    SR32
             ,NULL                                    SR33
             ,NULL                                    SR34
             ,NULL                                    SR35
             ,NULL                                    SR36
             ,NULL                                    SR37
             ,NULL                                    SR38
             ,NULL                                    SR39
             ,NULL                                    SR40
             ,NULL                                    SR41
             ,NULL                                    SR42
             ,NULL                                    SR43
             ,NULL                                    SR44
             ,NULL                                    SR45
             ,NULL                                    SR46
             ,NULL                                    SR47
             ,NULL                                    SR48
             ,NULL                                    SR49
             ,NULL                                    SR50
             ,NULL                                    SR51
             ,NULL                                    SR52
             ,NULL                                    SR53
             ,NULL                                    SR54
             ,NULL                                    SR55
             ,NULL                                    SR56
             ,NULL                                    SR57
             ,NULL                                    SR58
             ,NULL                                    SR59
             ,NULL                                    SR60  
     FROM  --  fnd_user                         fdu
             fun_seq_versions                 fsv1
            ,fun_seq_versions                 fsv2
            ,fnd_document_sequences           fns
            ,gl_je_categories_tl              gjct
            ,gl_je_sources_tl                 gjst
            ,gl_daily_conversion_types        gdct
            ,gl_je_lines                      gjl
            ,gl_je_headers                    gjh
            ,gl_je_batches                    gjb
            ,gl_je_lines_recon                gjlr
            ,xla_report_balances           glbgt --KT:21B
     WHERE   gjl.ledger_id                    = glbgt.ledger_id
       AND   gjl.code_combination_id          = glbgt.code_combination_id
       AND   gjl.effective_date               BETWEEN glbgt.period_start_date AND glbgt.period_end_date
       &p_period_date_join2  
       AND   gjl.period_name                  = glbgt.period_name
       AND   gjl.je_header_id                 = gjlr.je_header_id(+)
       AND   gjl.je_line_num                  = gjlr.je_line_num(+)
       AND   gjh.je_header_id                 = gjl.je_header_id
       AND   gjh.actual_flag                  = glbgt.balance_type_code
       AND   decode(gjl.currency_code,'STAT',gjl.currency_code,glbgt.ledger_currency) = glbgt.ledger_currency --added bug 6686541
       AND   NVL(gjh.je_from_sla_flag,'N')    = 'N'
       AND   NVL(gjh.budget_version_id,-19999)= NVL(glbgt.budget_version_id,-19999)
       AND   NVL(gjh.encumbrance_type_id,-19999)= NVL(glbgt.encumbrance_type_id,-19999)
       AND   gjb.je_batch_id                  = gjh.je_batch_id
       AND   gjb.status                       = 'P'
       AND   fns.application_id(+)              = 101                      -- added bug 10038642
       AND   fns.doc_sequence_id(+)             = gjh.doc_sequence_id      -- added bug 10038642
     --  AND   fdu.user_id                      = gjb.created_by
       AND   fsv1.seq_version_id(+)           = gjh.posting_acct_seq_version_id
       AND   fsv2.seq_version_id(+)           = gjh.close_acct_seq_version_id
       AND   gjct.je_category_name            = gjh.je_category
       AND   gjct.LANGUAGE                    = USERENV('LANG')
       AND   gjst.je_source_name              = gjh.je_source
       AND   gjst.language                    = USERENV('LANG')
       AND   gdct.conversion_type(+)          = gjl.currency_conversion_type
       &p_gl_other_filter

   UNION ALL

   SELECT  /*+ leading (glbgt gjl gjh gjb) */
           to_char(gjh.default_effective_date
                     ,'YYYY-MM-DD')                        GL_DATE
             ,gjh.created_by                                CREATED_BY
             ,to_char(gjh.creation_date
                     ,'YYYY-MM-DD"T"hh:mi:ss')             CREATION_DATE
             ,to_char(gjh.last_update_date
                     ,'YYYY-MM-DD')                        LAST_UPDATE_DATE
             ,NULL                                         GL_TRANSFER_DATE
             ,to_char(gjh.reference_date
                     ,'YYYY-MM-DD')                        REFERENCE_DATE
             ,NULL                                         COMPLETED_DATE
             ,NULL                                         TRANSACTION_NUMBER
             ,NULL                                         TRANSACTION_DATE
             ,fsv1.header_name                             ACCOUNTING_SEQUENCE_NAME
             ,fsv1.version_name                            ACCOUNTING_SEQUENCE_VERSION
             ,gjh.posting_acct_seq_value                   ACCOUNTING_SEQUENCE_NUMBER
             ,fsv2.header_name                             REPORTING_SEQUENCE_NAME
             ,fsv2.version_name                            REPORTING_SEQUENCE_VERSION
             ,gjh.close_acct_seq_value                     REPORTING_SEQUENCE_NUMBER
             ,NULL                                         DOCUMENT_CATEGORY
             ,NULL                                         DOCUMENT_SEQUENCE_NAME
             ,NULL                                         DOCUMENT_SEQUENCE_NUMBER
             ,fns.name                                     GL_DOCUMENT_SEQUENCE_NAME   -- added bug 10038642
             ,gjh.doc_sequence_value                       GL_DOCUMENT_SEQUENCE_NUMBER -- added bug 10038642 
             ,NULL                                         APPLICATION_ID
             ,NULL                                         APPLICATION_NAME
             ,gjh.je_header_id                             HEADER_ID
             ,gjh.description                              HEADER_DESCRIPTION
             ,NULL                                         FUND_STATUS
             ,gjct.user_je_category_name                   JE_CATEGORY_NAME
             ,gjst.user_je_source_name                     JE_SOURCE_NAME
             ,NULL                                         EVENT_ID
             ,NULL                                         EVENT_DATE
             ,NULL                                         EVENT_NUMBER
             ,NULL                                         EVENT_CLASS_CODE
             ,NULL                                         EVENT_CLASS_NAME
             ,NULL                                         EVENT_TYPE_CODE
             ,NULL                                         EVENT_TYPE_NAME
             ,gjb.NAME                                     GL_BATCH_NAME
             ,to_char(gjb.posted_date
                     ,'YYYY-MM-DD')                        POSTED_DATE
             ,gjh.NAME                                     GL_JE_NAME
             ,gjh.external_reference                       EXTERNAL_REFERENCE
             ,gjl.je_line_num                              GL_LINE_NUMBER
             ,gjl.je_line_num                              LINE_NUMBER
             ,gjl.je_line_num                              ORIG_LINE_NUMBER
             ,NULL                                         ACCOUNTING_CLASS_CODE
             ,NULL                                         ACCOUNTING_CLASS_NAME
             ,gjl.description                              LINE_DESCRIPTION
             ,gjl.currency_code                            ENTERED_CURRENCY
             ,gjl.currency_conversion_rate                 CONVERSION_RATE
             ,to_char(gjl.currency_conversion_date
                     ,'YYYY-MM-DD')                        CONVERSION_RATE_DATE
             ,gjl.currency_conversion_type                 CONVERSION_RATE_TYPE_CODE
             ,gdct.user_conversion_type                    CONVERSION_RATE_TYPE
             ,gjl.entered_dr                               ENTERED_DR
             ,gjl.entered_cr                               ENTERED_CR
             ,NULL                                         UNROUNDED_ACCOUNTED_DR
             ,NULL                                         UNROUNDED_ACCOUNTED_CR
             ,gjl.accounted_dr                             ACCOUNTED_DR
             ,gjl.accounted_cr                             ACCOUNTED_CR
             ,gjl.stat_amount                              STATISTICAL_AMOUNT
             ,gjl.jgzz_recon_ref                           RECONCILIATION_REFERENCE
 	     ,gjlr.jgzz_recon_ref			   JGZZ_RECON_REF	
             ,to_char(gjlr.jgzz_recon_date
                 ,'YYYY-MM-DD') 	                   JGZZ_RECON_DATE
 	     ,gjlr.jgzz_recon_id                           JGZZ_RECON_ID
	     ,gjlr.jgzz_recon_status                       JGZZ_RECON_STATUS
 	     ,(SELECT meaning
		FROM gl_lookups
		WHERE lookup_type = 'ORA_GL_LINE_RECON_STATUS'
		AND lookup_code   = Nvl(gjlr.jgzz_recon_status, 'U')) AS RECON_STATUS
             ,gjl.attribute_category                       ATTRIBUTE_CATEGORY
             ,gjl.attribute1                               ATTRIBUTE1
             ,gjl.attribute2                               ATTRIBUTE2
             ,gjl.attribute3                               ATTRIBUTE3
             ,gjl.attribute4                               ATTRIBUTE4
             ,gjl.attribute5                               ATTRIBUTE5
             ,gjl.attribute6                               ATTRIBUTE6
             ,gjl.attribute7                               ATTRIBUTE7
             ,gjl.attribute8                               ATTRIBUTE8
             ,gjl.attribute9                               ATTRIBUTE9
             ,gjl.attribute10                              ATTRIBUTE10
             ,NULL                                         PARTY_TYPE_CODE
             ,NULL                                         PARTY_TYPE
             ,NULL                                         PARTY_INFO
             ,NULL                                         USERIDS
             ,glbgt.ledger_id                              LEDGER_ID
             ,glbgt.ledger_short_name                      LEDGER_SHORT_NAME
             ,glbgt.ledger_description                     LEDGER_DESCRIPTION
             ,glbgt.ledger_name                            LEDGER_NAME
             ,glbgt.ledger_currency                        LEDGER_CURRENCY
             ,glbgt.period_year                            PERIOD_YEAR
             ,glbgt.period_number                          PERIOD_NUMBER
             ,glbgt.period_name                            PERIOD_NAME
             ,to_char(glbgt.period_start_date
                                        ,'YYYY-MM-DD')     PERIOD_START_DATE
             ,to_char(glbgt.period_end_date
                                        ,'YYYY-MM-DD')     PERIOD_END_DATE
             ,glbgt.balance_type_code                      BALANCE_TYPE_CODE
             ,glbgt.balance_type                           BALANCE_TYPE
             ,glbgt.budget_name                            BUDGET_NAME
             ,glbgt.encumbrance_type                       ENCUMBRANCE_TYPE
             ,glbgt.begin_balance_dr                       BEGIN_BALANCE_DR
             ,glbgt.begin_balance_cr                       BEGIN_BALANCE_CR
             ,glbgt.period_net_dr                          PERIOD_NET_DR
             ,glbgt.period_net_cr                          PERIOD_NET_CR
             ,glbgt.code_combination_id                    CODE_COMBINATION_ID
             ,glbgt.accounting_code_combination            ACCOUNTING_CODE_COMBINATION
             --,glbgt.code_combination_description           CODE_COMBINATION_DESCRIPTION
             ,glbgt.control_account_flag                   CONTROL_ACCOUNT_FLAG
             ,glbgt.control_account                        CONTROL_ACCOUNT
             ,glbgt.balancing_segment                      BALANCING_SEGMENT
             ,glbgt.natural_account_segment                NATURAL_ACCOUNT_SEGMENT
             ,glbgt.cost_center_segment                    COST_CENTER_SEGMENT
             ,glbgt.management_segment                     MANAGEMENT_SEGMENT
             ,glbgt.intercompany_segment                   INTERCOMPANY_SEGMENT
            -- ,glbgt.balancing_segment_desc                 BALANCING_SEGMENT_DESC
            -- ,glbgt.natural_account_desc                   NATURAL_ACCOUNT_DESC
            -- ,glbgt.cost_center_desc                       COST_CENTER_DESC
            -- ,glbgt.management_segment_desc                MANAGEMENT_SEGMENT_DESC
            -- ,glbgt.intercompany_segment_desc              INTERCOMPANY_SEGMENT_DESC
             ,glbgt.segment1                               SEGMENT1
             ,glbgt.segment2                               SEGMENT2
             ,glbgt.segment3                               SEGMENT3
             ,glbgt.segment4                               SEGMENT4
             ,glbgt.segment5                               SEGMENT5
             ,glbgt.segment6                               SEGMENT6
             ,glbgt.segment7                               SEGMENT7
             ,glbgt.segment8                               SEGMENT8
             ,glbgt.segment9                               SEGMENT9
             ,glbgt.segment10                              SEGMENT10
             ,glbgt.segment11                              SEGMENT11
             ,glbgt.segment12                              SEGMENT12
             ,glbgt.segment13                              SEGMENT13
             ,glbgt.segment14                              SEGMENT14
             ,glbgt.segment15                              SEGMENT15
             ,glbgt.segment16                              SEGMENT16
             ,glbgt.segment17                              SEGMENT17
             ,glbgt.segment18                              SEGMENT18
             ,glbgt.segment19                              SEGMENT19
             ,glbgt.segment20                              SEGMENT20
             ,glbgt.segment21                              SEGMENT21
             ,glbgt.segment22                              SEGMENT22
             ,glbgt.segment23                              SEGMENT23
             ,glbgt.segment24                              SEGMENT24
             ,glbgt.segment25                              SEGMENT25
             ,glbgt.segment26                              SEGMENT26
             ,glbgt.segment27                              SEGMENT27
             ,glbgt.segment28                              SEGMENT28
             ,glbgt.segment29                              SEGMENT29
             ,glbgt.segment30                              SEGMENT30
             ,glbgt.begin_running_total_cr                 BEGIN_RUNNING_TOTAL_CR
             ,glbgt.begin_running_total_dr                 BEGIN_RUNNING_TOTAL_DR
             ,glbgt.end_running_total_cr                   END_RUNNING_TOTAL_CR
             ,glbgt.end_running_total_dr                   END_RUNNING_TOTAL_DR
             ,glbgt.legal_entity_id                        LEGAL_ENTITY_ID
             ,glbgt.legal_entity_name                      LEGAL_ENTITY_NAME
             ,glbgt.le_address_line_1                      LE_ADDRESS_LINE_1
             ,glbgt.le_address_line_2                      LE_ADDRESS_LINE_2
             ,glbgt.le_address_line_3                      LE_ADDRESS_LINE_3
             ,glbgt.le_city                                LE_CITY
             ,glbgt.le_region_1                            LE_REGION_1
             ,glbgt.le_region_2                            LE_REGION_2
             ,glbgt.le_region_3                            LE_REGION_3
             ,glbgt.le_postal_code                         LE_POSTAL_CODE
             ,glbgt.le_country                             LE_COUNTRY
             ,glbgt.le_registration_number                 LE_REGISTRATION_NUMBER
             ,glbgt.le_registration_effective_from         LE_REGISTRATION_EFFECTIVE_FROM
             ,glbgt.le_br_daily_inscription_number         LE_BR_DAILY_INSCRIPTION_NUMBER
             ,to_char(glbgt.le_br_daily_inscription_date
                                        ,'YYYY-MM-DD')     LE_BR_DAILY_INSCRIPTION_DATE
             ,glbgt.le_br_daily_entity                     LE_BR_DAILY_ENTITY
             ,glbgt.le_br_daily_location                   LE_BR_DAILY_LOCATION
             ,glbgt.le_br_director_number                  LE_BR_DIRECTOR_NUMBER
             ,glbgt.le_br_accountant_number                LE_BR_ACCOUNTANT_NUMBER
             ,glbgt.le_br_accountant_name                  LE_BR_ACCOUNTANT_NAME
             ,:P_COA_ID                                    CHART_OF_ACCOUNTS_ID	
             ,NULL                                    SR31
             ,NULL                                    SR32
             ,NULL                                    SR33
             ,NULL                                    SR34
             ,NULL                                    SR35
             ,NULL                                    SR36
             ,NULL                                    SR37
             ,NULL                                    SR38
             ,NULL                                    SR39
             ,NULL                                    SR40
             ,NULL                                    SR41
             ,NULL                                    SR42
             ,NULL                                    SR43
             ,NULL                                    SR44
             ,NULL                                    SR45
             ,NULL                                    SR46
             ,NULL                                    SR47
             ,NULL                                    SR48
             ,NULL                                    SR49
             ,NULL                                    SR50
             ,NULL                                    SR51
             ,NULL                                    SR52
             ,NULL                                    SR53
             ,NULL                                    SR54
             ,NULL                                    SR55
             ,NULL                                    SR56
             ,NULL                                    SR57
             ,NULL                                    SR58
             ,NULL                                    SR59
             ,NULL                                    SR60  
     FROM   -- fnd_user                         fdu
             fnd_new_messages                 fnm
            ,fun_seq_versions                 fsv1
            ,fun_seq_versions                 fsv2
            ,fnd_document_sequences           fns
            ,gl_je_categories_tl              gjct
            ,gl_je_sources_tl                 gjst
            ,gl_daily_conversion_types        gdct
            ,gl_je_lines                      gjl
            ,gl_je_headers                    gjh
            ,gl_je_batches                    gjb
	    ,gl_je_lines_recon                gjlr
            ,xla_report_balances           glbgt --KT:21B
     WHERE   gjl.ledger_id                    = glbgt.ledger_id
       AND   gjl.code_combination_id          = glbgt.code_combination_id
       AND   gjl.effective_date               BETWEEN glbgt.period_start_date AND glbgt.period_end_date
       &p_period_date_join3 
       AND   gjl.period_name                  = glbgt.period_name
       AND   gjl.je_header_id                 = gjlr.je_header_id(+)
       AND   gjl.je_line_num                  = gjlr.je_line_num(+)
       AND   gjh.je_header_id                 = gjl.je_header_id
       AND   gjh.actual_flag                  = glbgt.balance_type_code
       AND   decode(gjl.currency_code,'STAT',gjl.currency_code,glbgt.ledger_currency) = glbgt.ledger_currency --added bug 6686541
       AND   NVL(gjh.je_from_sla_flag,'N')    = 'U'
       AND   fnm.application_id = 101 
       AND   fnm.language_code = USERENV('LANG')
       AND   fnm.message_name in ('PPOS0220', 'PPOS0221', 'PPOS0222', 'PPOS0243', 'PPOS0222_G','PPOSO275')   --bug 8357031
       AND   gjl.description= fnm.message_text
       AND   NVL(gjh.budget_version_id,-19999) = NVL(glbgt.budget_version_id,-19999)
       AND   NVL(gjh.encumbrance_type_id,-19999) = NVL(glbgt.encumbrance_type_id,-19999)
       AND   gjb.je_batch_id                  = gjh.je_batch_id
       AND   gjb.status                       = 'P'
       AND   fns.application_id(+)              = 101                     -- added bug 10038642
       AND   fns.doc_sequence_id(+)             = gjh.doc_sequence_id     -- added bug 10038642
   --    AND   fdu.user_id                      = gjb.created_by
       AND   fsv1.seq_version_id(+)           = gjh.posting_acct_seq_version_id
       AND   fsv2.seq_version_id(+)           = gjh.close_acct_seq_version_id
       AND   gjct.je_category_name            = gjh.je_category
       AND   gjct.LANGUAGE                    = USERENV('LANG')
       AND   gjst.je_source_name              = gjh.je_source
       AND   gjst.language                    = USERENV('LANG')
       AND   gdct.conversion_type(+)          = gjl.currency_conversion_type
       AND  not exists    (select 'x'  from gl_import_references gir  where
                gir.je_header_id=gjl.je_header_id
                and gir.je_line_num=gjl.je_line_num)
       &p_gl_other_filter
       &p_begin_balance_union_all
  )TABLE1
    WHERE &ACCT_SECURE = 'N'
	AND table1.JE_CATEGORY_NAME != 'Purchase Invoices' 
	AND table1.JE_SOURCE_NAME != 'Receipt Accounting'
==========================================================================================================================
----------------------------------------------------------------------------
SELECT RESPONSE, APPROVER_ID, CREATION_DATE	FROM AP_INV_APRVL_HIST_ALL WHERE INVOICE_ID IN (SELECT INVOICE_ID FROM AP_INVOICES_ALL WHERE INVOICE_NUM = :p_inv_num) ORDER BY CREATION_DATE ASC
============================================================================================================================
--------------------------------MF Procure to Pay Data Model-------------------------
--P2PInvoiceDetails
select pha.segment1 po_number,to_char(pha.creation_date,'MM/DD/YYYY') po_creation_date,
       (select sum(nvl(pol.unit_price*pol.quantity,pol.amount))
          from po_lines_all pol
         where pol.po_header_id = pha.po_header_id
       )  po_total,
       pha.document_status po_status,
       atv.name payment_terms,
       hzp.party_name supplier,
       ppnf.display_name buyer,
       (select sum(nvl((pla.quantity_received-pla.quantity_rejected)*pol.unit_price,pol.amount))
          from po_lines_all pol,
               po_line_locations_all pla
         where pol.po_header_id = pha.po_header_id
           and pol.po_line_id   = pla.po_line_id
       ) total_amt_received,
       (select sum(pla.amount_billed)
          from po_lines_all pol,
               po_line_locations_all pla
         where pol.po_header_id = pha.po_header_id
           and pol.po_line_id   = pla.po_line_id
       ) total_amt_invoiced,
       (select sum(aip.amount)
          from ap_invoice_payments_all aip,
               ap_invoices_all aia
         where aip.invoice_id = aia.invoice_id
           and aia.po_header_id = pha.po_header_id
       ) total_amt_paid,
       (select count(1)
          from ap_invoices_all aia
         where aia.po_header_id = pha.po_header_id
       ) total_invoices,
       aia.invoice_num,
       to_char(aia.invoice_date,'MM/DD/YYYY') invoice_date,
       aia.invoice_amount,
       (select sum(aip.amount)
          from ap_invoice_payments_all aip
         where aip.invoice_id = aia.invoice_id
           and aia.po_header_id = pha.po_header_id
       ) inv_amt_paid,
(DECODE(AP_INVOICES_PKG.GET_APPROVAL_STATUS(aia.invoice_id, aia.invoice_amount,aia.payment_status_flag,aia.invoice_type_lookup_code),
               'NEVER APPROVED', 'Not Validated',
               'NEEDS REAPPROVAL', 'Needs Revalidation',
               'CANCELLED', 'Cancelled', 
               'Validated')) inv_validation_status,
	    		decode(aia.wfapproval_status,
'REQUIRED','Required',
'REJECTED','Rejected',
'NEEDS WFREAPPROVAL','Needs Wfreapproval',
'NOT REQUIRED','Not Required',
'STOPPED','Stopped',
'WFAPPROVED','Workflow approved',
'INITIATED','Initiated',
'Manually Approved') inv_approval_status 
  from po_headers_all pha,
       ap_terms_vl    atv,
       hz_parties     hzp,
       poz_suppliers  pos,
       per_person_names_f  ppnf,
       ap_invoices_all aia                     
 where 1=1 
   and pha.segment1   = nvl(:PO_NUMBER,pha.segment1)
   and atv.term_id(+) = pha.terms_id
   and pos.vendor_id  = pha.vendor_id
   and pos.party_id   = hzp.party_id
   and ppnf.person_id = pha.agent_id
   and ppnf.name_type = 'GLOBAL'
   and aia.po_header_id(+) = pha.po_header_id
   --and aia.invoice_num =nvl(:P_INVOICE_NUM,aia.invoice_num)
   and decode(:P_INVOICE_NUM,null,1,aia.invoice_num) = nvl(:P_INVOICE_NUM,1)  
   and (sysdate between nvl(ppnf.effective_start_date,sysdate) and nvl(ppnf.effective_end_date,sysdate))
   and (pha.creation_date between nvl(:P_FROM_DATE,pha.creation_date)    and nvl(:P_TO_DATE,pha.creation_date))
   and decode(:P_DEPT,null,1,pha.po_header_id) =  decode(:P_DEPT,null,1,(select unique pha.po_header_id
                                                                        from per_all_assignments_m paam,
																		     per_departments ped,
																			 per_person_names_f ppf,
																			 por_requisition_lines_all prla,
																			 por_req_distributions_all prda,
																			 po_distributions_all pda
																	   where ped.organization_id = paam.organization_id
																	     and paam.person_id = ppf.person_id
																		 and pda.req_distribution_id = prda.distribution_id
																		 and pda.po_header_id = pha.po_header_id
																		 and ped.name = :P_DEPT
																		 and prda.requisition_line_id = prla.requisition_line_id
																		 and ppf.person_id = prla.requester_id
                                                                         AND NVL(ppf.name_type,'GLOBAL') = 'GLOBAL'
																		 and (sysdate between nvl(paam.effective_start_date,sysdate) and nvl(paam.effective_end_date,sysdate))
																		 ))   
and decode(:P_PROJECT_NUMBER,null,1,pha.po_header_id) = decode(:P_PROJECT_NUMBER,null,1,(select unique pda.po_header_id 
                       from pjf_projects_all_b pjab,
                               po_distributions_all pda
		   where pjab.project_id = pda.pjc_project_id  
          and pha.po_header_id = pda.po_header_id		   
		  and pjab.segment1 = :P_PROJECT_NUMBER
			   ))
and decode(:P_ITEM_NUM,null,'1',pha.po_header_id) = decode(:P_ITEM_NUM,null,'1',(select unique pha.po_header_id
																					   from po_lines_all pla,
																						    egp_system_items_b esib
																					  where pla.po_header_id = pha.po_header_id
																						and esib.inventory_item_id=pla.item_id(+)
																						and esib.item_number=:P_ITEM_NUM))
and decode(:P_RECEIPT_NUM,null,1,pha.po_header_id) = decode(:P_RECEIPT_NUM,null,1,(select unique rsl.po_header_id 
                       from rcv_shipment_headers rsh,
                               rcv_shipment_lines rsl
		   where rsl.po_header_id = pha.po_header_id
                  and rsh.shipment_header_id = rsl.shipment_header_id
		  and rsh.receipt_num = :P_RECEIPT_NUM
			   ))
order by pha.segment1

--P2PDetails
select pha.segment1 det_po_number,to_char(pha.creation_date,'MM/DD/YYYY') detpo_creation_date,
       (select sum(nvl(pol.unit_price*pol.quantity,pol.amount))
          from po_lines_all pol
         where pol.po_header_id = pha.po_header_id
       )  det_po_total,
       pha.document_status det_po_status,
       atv.name det_payment_terms,
       hzp.party_name det_supplier,
       ppnf.display_name det_buyer,
       pla.line_num po_line,
       esib.item_number item,
       pla.item_description,
       pla.quantity,
       (SELECT UNIT_OF_MEASURE
           FROM INV_UNITS_OF_MEASURE_vL
           WHERE uom_code = pla.uom_code
       ) uom,
       nvl(pla.unit_price,pla.amount) unit_price,
       nvl(pla.unit_price*pla.quantity,pla.amount) line_total,
       pla.line_status po_line_status,
       ppf.display_name requestor,
       prha.requisition_number ,
       ecb.segment1||'.'||ecb.segment2 requis_linecategory,
       pla.note_to_vendor note_to_supplier,
       TO_CHAR(pll.need_by_date,'MM/DD/YYYY') REQUESTED_DEL_DATE,
       TO_CHAR(pll.promised_date,'MM/DD/YYYY') PROMISED_DEL_DATE,
       pll.destination_type_code,
       (select gcc.segment1||'.'||
               gcc.segment2||'.'||
               gcc.segment3||'.'||
               gcc.segment4||'.'||
               gcc.segment5||'.'||
               gcc.segment6||'.'||
               gcc.segment7
          from gl_code_combinations gcc
         where gcc.code_combination_id = pda.code_combination_id
       ) po_charge_account,
       ppab.segment1 PROJECT_NUMBER,
       ppeb.element_number PROJECT_TASK,
       (select TO_CHAR(max(aid.pjc_expenditure_item_date), 'MM/DD/YYYY')
         from  ap_invoice_distributions_all aid
        where   aid.po_distribution_id=pda.po_distribution_id
        )      expenditure_item_date,
        (select max(pet.EXPENDITURE_TYPE_NAME)
           from ap_invoice_distributions_all aid,
                PJF_EXP_TYPES_tl pet
          where aid.po_distribution_id=pda.po_distribution_id
            and aid.PJC_EXPENDITURE_TYPE_ID = pet.EXPENDITURE_TYPE_ID
            and pet.LANGUAGE = USERENV ('LANG')
        ) EXPENDITURE_TYPE,
        (select max(exp_org.name)
           from ap_invoice_distributions_all aid,
                HR_ORGANIZATION_UNITS_F_TL exp_org
          where aid.po_distribution_id=pda.po_distribution_id
            and aid.PJC_ORGANIZATION_ID = exp_org.organization_id
            and exp_org.LANGUAGE = USERENV ('LANG')
        ) EXPENDITURE_ORG,
        ecb1.segment1||'.'||ecb1.segment2 category_name,
        (select sum(rsl.quantity_received)
           from rcv_shipment_lines rsl
          where rsl.po_header_id = pha.po_header_id
            and rsl.po_line_id   = pla.po_line_id
            and rsl.po_line_location_id = pll.line_location_id 
        ) total_linelvl_rec_qty
  from po_lines_all pla,
       po_line_locations_all pll,
       po_distributions_all pda,
       por_requisition_headers_all prha,
       por_requisition_lines_all prla,
       por_req_distributions_all prda,
       per_person_names_f ppf,
       egp_categories_b ecb,
       pjf_projects_all_b ppab,
       pjf_proj_elements_b ppeb,
       po_headers_all pha,
       ap_terms_vl    atv,
       hz_parties     hzp,
       poz_suppliers  pos,
       per_person_names_f  ppnf,
       egp_categories_b ecb1,
	   (select unique item_number,
	           inventory_item_id
	      from egp_system_items_b
       )  esib
 where pla.po_header_id = pha.po_header_id 
   and pha.segment1   = nvl(:PO_NUMBER,pha.segment1)
   and prla.requisition_header_id = prha.requisition_header_id(+)
   and prda.requisition_line_id = prla.requisition_line_id(+)
   and pda.req_distribution_id = prda.distribution_id(+)
   AND pll.po_line_id = pda.po_line_id (+)
   AND pll.line_location_id = pda.line_location_id (+)
   AND pla.po_line_id = pll.po_line_id (+)
   and ppf.person_id(+) = prla.requester_id
   AND NVL(ppf.name_type,'GLOBAL') = 'GLOBAL'
   AND ecb.category_id(+) = prla.category_id 
   AND ppab.project_id(+) = pda.pjc_project_id
   AND ppeb.proj_element_id(+) = pda.pjc_task_id   
   and atv.term_id(+) = pha.terms_id
   and pos.vendor_id  = pha.vendor_id
   and pos.party_id   = hzp.party_id
   and ppnf.person_id = pha.agent_id
   and ecb1.category_id =   pla.category_id
   and ppnf.name_type = 'GLOBAL' 
   and esib.inventory_item_id(+)=pla.item_id
   --and esib.organization_id(+)=pla.ship_from_org_id   --added on 17th
   and decode(:P_ITEM_NUM,null,'1',esib.ITEM_NUMBER)=nvl(:P_ITEM_NUM,'1') -- added
   and decode(:P_DEPT,null,1,ppf.person_id) =  decode(:P_DEPT,null,1,(select unique ppf.person_id
                                                                        from per_all_assignments_m paam,
																		     per_departments ped
																	   where ped.organization_id = paam.organization_id
																	     and paam.person_id = ppf.person_id
																		 and ped.name = :P_DEPT
																		 and (sysdate between nvl(paam.effective_start_date,sysdate) and nvl(paam.effective_end_date,sysdate))
																		 ))    
   and decode(:P_PROJECT_NUMBER,null,'1',ppab.segment1) = nvl(:P_PROJECT_NUMBER,1)  
   and decode(:P_INVOICE_NUM,null,1,pha.po_header_id)=decode(:P_INVOICE_NUM,null,1,(select po_header_id from ap_invoices_all where invoice_num=:P_INVOICE_NUM))
   and (sysdate between nvl(ppf.effective_start_date,sysdate) and nvl(ppf.effective_end_date,sysdate))
   and (sysdate between nvl(ppnf.effective_start_date,sysdate) and nvl(ppnf.effective_end_date,sysdate))
   and (pha.creation_date between nvl(:P_FROM_DATE,pha.creation_date)    and nvl(:P_TO_DATE,pha.creation_date))
   and decode(:P_RECEIPT_NUM,null,1,pll.line_location_id) = decode(:P_RECEIPT_NUM,null,1,(select unique pll.line_location_id 
																						   from rcv_shipment_headers rsh,
																								   rcv_shipment_lines rsl
																			   where rsl.po_header_id = pha.po_header_id
																					  and rsl.po_line_id   = pla.po_line_id
																					  and rsl.po_line_location_id = pll.line_location_id
																					  and rsh.shipment_header_id = rsl.shipment_header_id
																			  and rsh.receipt_num = :P_RECEIPT_NUM
																				   ))
order by pha.segment1,pla.line_num

--P2PReceiptDetails
select pha.segment1 rpo_number,to_char(pha.creation_date,'MM/DD/YYYY') rpo_creation_date,
       (select sum(nvl(pol.unit_price*pol.quantity,pol.amount))
          from po_lines_all pol
         where pol.po_header_id = pha.po_header_id
       )  rpo_total,
       pha.document_status rpo_status,
       atv.name rpayment_terms,
       hzp.party_name rsupplier,
       ppnf.display_name rbuyer,
       pla.line_num rpo_line,
       (select unique item_number
          from egp_system_items_b
         where inventory_item_id = pla.item_id
        ) ritem,
       pla.item_description rdescription,
       pla.quantity rquantity,
       (SELECT UNIT_OF_MEASURE
           FROM INV_UNITS_OF_MEASURE_vL
           WHERE uom_code = pla.uom_code
       ) ruom,
       nvl(pla.unit_price,pla.amount) runit_price,
       nvl(pla.unit_price*pla.quantity,pla.amount) rline_total,
       pla.line_status rpo_line_status,
       ppf.display_name rrequestor,
       prha.requisition_number rrequisition_num,
       ecb.segment1||'.'||ecb.segment2 rrequis_linecategory,
       pla.note_to_vendor rnote_to_supplier,
       TO_CHAR(pll.need_by_date,'MM/DD/YYYY') rREQUESTED_DEL_DATE,
       TO_CHAR(pll.promised_date,'MM/DD/YYYY') rPROMISED_DEL_DATE,
       pll.destination_type_code rdestination_type_code,
       (select gcc.segment1||'.'||
               gcc.segment2||'.'||
               gcc.segment3||'.'||
               gcc.segment4||'.'||
               gcc.segment5||'.'||
               gcc.segment6||'.'||
               gcc.segment7
          from gl_code_combinations gcc
         where gcc.code_combination_id = pda.code_combination_id
       ) rpo_charge_account,
       ppab.segment1 rPROJECT_NUMBER,
       ppeb.element_number rPROJECT_TASK,
       (select TO_CHAR(max(aid.pjc_expenditure_item_date), 'MM/DD/YYYY')
         from  ap_invoice_distributions_all aid
        where   aid.po_distribution_id=pda.po_distribution_id
        )      rexpenditure_item_date,
        (select max(pet.EXPENDITURE_TYPE_NAME)
           from ap_invoice_distributions_all aid,
                PJF_EXP_TYPES_tl pet
          where aid.po_distribution_id=pda.po_distribution_id
            and aid.PJC_EXPENDITURE_TYPE_ID = pet.EXPENDITURE_TYPE_ID
            and pet.LANGUAGE = USERENV ('LANG')
        ) rEXPENDITURE_TYPE,
        (select max(exp_org.name)
           from ap_invoice_distributions_all aid,
                HR_ORGANIZATION_UNITS_F_TL exp_org
          where aid.po_distribution_id=pda.po_distribution_id
            and aid.PJC_ORGANIZATION_ID = exp_org.organization_id
            and exp_org.LANGUAGE = USERENV ('LANG')
        ) rEXPENDITURE_ORG,
        ecb1.segment1||'.'||ecb1.segment2 rcategory_name,
        rsh.receipt_num,                
        (select TO_CHAR(max(transaction_date), 'MM/DD/YYYY') 
           from rcv_transactions 
          where shipment_header_id=rsl.shipment_header_id
            and shipment_line_id=rsl.shipment_line_id
            and transaction_type = 'DELIVER'
        ) receipt_date,
        rsl.quantity_received,
        (select max(rcv.created_by)
           from rcv_transactions  rcv
          where shipment_header_id=rsl.shipment_header_id
            and shipment_line_id=rsl.shipment_line_id
            and transaction_type = 'RECEIVE') receivedby
  from po_lines_all pla,
       po_line_locations_all pll,
       po_distributions_all pda,
       por_requisition_headers_all prha,
       por_requisition_lines_all prla,
       por_req_distributions_all prda,
       per_person_names_f ppf,
       egp_categories_b ecb,
       pjf_projects_all_b ppab,
       pjf_proj_elements_b ppeb,
       po_headers_all pha,
       ap_terms_vl    atv,
       hz_parties     hzp,
       poz_suppliers  pos,
       per_person_names_f  ppnf,
       egp_categories_b ecb1,
       rcv_shipment_headers rsh,
       rcv_shipment_lines rsl,
	   (select unique item_number,
	           inventory_item_id
	      from egp_system_items_b
       )  esib
 where pla.po_header_id = pha.po_header_id 
   and pha.segment1   =  nvl(:PO_NUMBER,pha.segment1)
   and prla.requisition_header_id = prha.requisition_header_id(+)
   and prda.requisition_line_id = prla.requisition_line_id(+)
   and pda.req_distribution_id = prda.distribution_id(+)
   AND pll.po_line_id = pda.po_line_id (+)
   AND pll.line_location_id = pda.line_location_id (+)
   AND pla.po_line_id = pll.po_line_id (+)
   and ppf.person_id(+) = prla.requester_id
   AND NVL(ppf.name_type,'GLOBAL') = 'GLOBAL'
   AND ecb.category_id(+) = prla.category_id 
   AND ppab.project_id(+) = pda.pjc_project_id
   AND ppeb.proj_element_id(+) = pda.pjc_task_id   
   and atv.term_id(+) = pha.terms_id
   and pos.vendor_id  = pha.vendor_id
   and pos.party_id   = hzp.party_id
   and ppnf.person_id = pha.agent_id
   and ecb1.category_id =   pla.category_id
   and rsl.po_header_id(+) = pha.po_header_id
   and rsl.po_line_id(+)   = pla.po_line_id
   and rsl.po_line_location_id(+) = pll.line_location_id
   and rsh.shipment_header_id(+) = rsl.shipment_header_id
   and ppnf.name_type = 'GLOBAL'
    and esib.inventory_item_id(+)=pla.item_id 
   and decode(:P_ITEM_NUM,null,'1',esib.ITEM_NUMBER)=nvl(:P_ITEM_NUM,'1')
   and decode(:P_DEPT,null,1,ppf.person_id) =  decode(:P_DEPT,null,1,(select unique ppf.person_id
                                                                        from per_all_assignments_m paam,
																		     per_departments ped
																	   where ped.organization_id = paam.organization_id
																	     and paam.person_id = ppf.person_id
																		 and ped.name = :P_DEPT
																		 and (sysdate between nvl(paam.effective_start_date,sysdate) and nvl(paam.effective_end_date,sysdate))
																		 )) 
   and decode(:P_PROJECT_NUMBER,null,'1',ppab.segment1) = nvl(:P_PROJECT_NUMBER,'1')
and decode(:P_INVOICE_NUM,null,1,pha.po_header_id)=decode(:P_INVOICE_NUM,null,1,(select po_header_id from ap_invoices_all where invoice_num=:P_INVOICE_NUM))
  and (sysdate between nvl(ppf.effective_start_date,sysdate) and nvl(ppf.effective_end_date,sysdate))
   and (sysdate between nvl(ppnf.effective_start_date,sysdate) and nvl(ppnf.effective_end_date,sysdate))
   and decode(:P_RECEIPT_NUM,null,'1',rsh.receipt_num)=nvl(:P_RECEIPT_NUM,'1')
   and (pha.creation_date between nvl(:P_FROM_DATE,pha.creation_date) and nvl(:P_TO_DATE,pha.creation_date))
   --and nvl(rsh.receipt_num,'1') = nvl(:P_RECEIPT_NUM,nvl(rsh.receipt_num,'1'))
order by pha.segment1,pla.line_num

--P2PSummeryDetails
select distinct pha.segment1 pro_number,to_char(pha.creation_date,'MM/DD/YYYY') pro_creation_date,
       (select sum(nvl(pol.unit_price*pol.quantity,pol.amount))
          from po_lines_all pol
         where pol.po_header_id = pha.po_header_id
       )  pro_total,
       pha.document_status pro_status,
       atv.name pro_payment_terms,
       hzp.party_name pro_supplier,
       ppnf.display_name pro_buyer,
       (select sum(nvl((pla.quantity_received-pla.quantity_rejected)*pol.unit_price,pol.amount))
          from po_lines_all pol,
               po_line_locations_all pla
         where pol.po_header_id = pha.po_header_id
           and pol.po_line_id   = pla.po_line_id
       ) pro_total_amt_received,
	   (select sum(pla.amount_billed)
          from po_lines_all pol,
               po_line_locations_all pla
         where pol.po_header_id = pha.po_header_id
           and pol.po_line_id   = pla.po_line_id
       ) pro_total_amt_invoiced,
       (select sum(aip.amount)
          from ap_invoice_payments_all aip,
               ap_invoices_all aia
         where aip.invoice_id = aia.invoice_id
           and aia.po_header_id = pha.po_header_id
       ) pro_total_amt_paid,
       (select count(1)
          from ap_invoices_all aia
         where aia.po_header_id = pha.po_header_id
       ) pro_total_invoices
  from po_headers_all pha,
       ap_terms_vl    atv,
       hz_parties     hzp,
       poz_suppliers  pos,
       per_person_names_f  ppnf,
       ap_invoices_all aia                     
 where 1=1 
   and pha.segment1   = nvl(:PO_NUMBER,pha.segment1)
   and atv.term_id(+) = pha.terms_id
   and pos.vendor_id  = pha.vendor_id
   and pos.party_id   = hzp.party_id
   and ppnf.person_id = pha.agent_id
   and ppnf.name_type = 'GLOBAL'
   and aia.po_header_id(+) = pha.po_header_id
   --and aia.invoice_num =nvl(:P_INVOICE_NUM,aia.invoice_num)
   and decode(:P_INVOICE_NUM,null,1,aia.invoice_num) = nvl(:P_INVOICE_NUM,1)  
   and (sysdate between nvl(ppnf.effective_start_date,sysdate) and nvl(ppnf.effective_end_date,sysdate))
   and (pha.creation_date between nvl(:P_FROM_DATE,pha.creation_date)    and nvl(:P_TO_DATE,pha.creation_date))
   and decode(:P_DEPT,null,1,pha.po_header_id) =  decode(:P_DEPT,null,1,(select unique pha.po_header_id
                                                                        from per_all_assignments_m paam,
																		     per_departments ped,
																			 per_person_names_f ppf,
																			 por_requisition_lines_all prla,
																			 por_req_distributions_all prda,
																			 po_distributions_all pda
																	   where ped.organization_id = paam.organization_id
																	     and paam.person_id = ppf.person_id
																		 and pda.req_distribution_id = prda.distribution_id
																		 and pda.po_header_id = pha.po_header_id
																		 and ped.name = :P_DEPT
																		 and prda.requisition_line_id = prla.requisition_line_id
																		 and ppf.person_id = prla.requester_id
                                                                         AND NVL(ppf.name_type,'GLOBAL') = 'GLOBAL'
																		 and (sysdate between nvl(paam.effective_start_date,sysdate) and nvl(paam.effective_end_date,sysdate))
																		 ))   
and decode(:P_PROJECT_NUMBER,null,1,pha.po_header_id) = decode(:P_PROJECT_NUMBER,null,1,(select unique pda.po_header_id 
                       from pjf_projects_all_b pjab,
                               po_distributions_all pda
		   where pjab.project_id = pda.pjc_project_id  
          and pha.po_header_id = pda.po_header_id		   
		  and pjab.segment1 = :P_PROJECT_NUMBER
			   ))
and decode(:P_ITEM_NUM,null,'1',pha.po_header_id) = decode(:P_ITEM_NUM,null,'1',(select unique pha.po_header_id
																					   from po_lines_all pla,
																						    egp_system_items_b esib
																					  where pla.po_header_id = pha.po_header_id
																						and esib.inventory_item_id=pla.item_id(+)
																						and esib.item_number=:P_ITEM_NUM))
and decode(:P_RECEIPT_NUM,null,1,pha.po_header_id) = decode(:P_RECEIPT_NUM,null,1,(select unique rsl.po_header_id 
                       from rcv_shipment_headers rsh,
                               rcv_shipment_lines rsl
		   where rsl.po_header_id = pha.po_header_id
                  and rsh.shipment_header_id = rsl.shipment_header_id
		  and rsh.receipt_num = :P_RECEIPT_NUM
			   ))
order by pha.segment1
==========================================================================================================================================
SELECT  pha.segment1 as "PO NO",NULL "RELEASE NUM",
pha.revision_num "REVISION NUM",
pha.comments "DESCRIPTION",
pha.type_lookup_code "TYPE",
to_char(PHA.CREATION_DATE,'DD-MON-YYYY')CREATION_DATE,
PS.VENDOR_NAME "SUPPLIER NAME",
PVS.VENDOR_SITE_CODE "SUPPLIER SITE",
pha.currency_code"CURRENCY",
(select sum(pla.quantity * pla.UNIT_PRICE) from po_lines_all pla where  pla.po_header_id=pha.po_header_id)AMOUNT,
(SELECT SUM(AID.AMOUNT) FROM ap_invoice_distributions_all aid ,po_distributions_all pod,ap_invoices_all aia
where aid.invoice_id=aia.invoice_id 
and pod.PO_DISTRIBUTION_ID =aid.PO_DISTRIBUTION_ID 
AND POD.PO_HEADER_ID=PHA.PO_HEADER_ID
AND AID.LINE_TYPE_LOOKUP_CODE='ITEM')MATCHED_AMOUNT,
(select sum(pla.quantity * pla.UNIT_PRICE) from po_lines_all pla where  pla.po_header_id=pha.po_header_id) - (SELECT SUM(AID.AMOUNT) FROM ap_invoice_distributions_all aid ,po_distributions_all pod,ap_invoices_all aia
where aid.invoice_id=aia.invoice_id 
and pod.PO_DISTRIBUTION_ID =aid.PO_DISTRIBUTION_ID 
AND POD.PO_HEADER_ID=PHA.PO_HEADER_ID
AND AID.LINE_TYPE_LOOKUP_CODE='ITEM')BALANCED_AMOUNT,
ppx.full_name "BUYER",
pha.document_status "CLOSURE STATUS"
from 
po_headers_all pha 
,per_person_names_f ppx
,POZ_SUPPLIERS_V PS
,POZ_SUPPLIER_SITES_ALL_M pvs
where 
 PHA.TYPE_LOOKUP_CODE='STANDARD'
-- AND PHA.currency_code='INR'
 and pvs.vendor_site_id=pha.vendor_site_id
and pha.vendor_id=ps.vendor_id
and pvs.vendor_id=PS.VENDOR_ID
and ppx.person_id(+)=pha.agent_id
and ppx.name_type='GLOBAL'
AND PHA.CREATION_DATE BETWEEN NVL (TO_DATE (TO_CHAR (:FROM_DATE ,'DDMMYYYY') ,'DDMMYYYY') ,PHA.CREATION_DATE)		
AND NVL (TO_DATE (TO_CHAR (:TO_DATE ,'DDMMYYYY') ,'DDMMYYYY') ,PHA.CREATION_DATE)		
--AND BusinessUnitPEO.BU_NAME = NVL(:ORGANIZATION,BusinessUnitPEO.BU_NAME)
========================================================================================================================
SELECT DISTINCT
BusinessUnitPEO.BU_NAME "ENTITY"
,PRH2.REQUISITION_NUMBER "PRNUMBER"
,case when PRH2.REQUISITION_NUMBER  is not null
then 
 null 
else 
NULL
end BLANKET_NUMBER
,PRL2.LINE_NUMBER 
,prl2.PURCHASE_BASIS  "ITEM"
,PRL2.ITEM_DESCRIPTION
,prl2.CURRENCY_CODE "CURRENCY"
,prl2.UOM_CODE "UOM"
,(prl2.QUANTITY)QUANTITY
,(prl2.UNIT_PRICE)UNIT_PRICE
,(prl2.quantity*prl2.UNIT_PRICE) "AMOUNT"
,to_char(prl2.NEED_BY_DATE,'DD-MON-YYYY')NEED_BY_DATE
,ppx.full_name "REQUESTOR"
,PS.VENDOR_NAME "SUPPLIER"
,PVS.VENDOR_SITE_CODE "SITE"
,ppx1.full_name "BUYER_NAME"
,to_char(Prh2.CREATION_DATE,'DD-MON-YYYY')CREATION_DATE
FROM
POR_REQUISITION_LINES_ALL PRL2
,POR_REQUISITION_HEADERS_ALL PRH2
,per_person_names_f ppx
,per_person_names_f PPX1
,POZ_SUPPLIERS_V PS
,POZ_SUPPLIER_SITES_ALL_M pvs
,PER_PERSON_NAMES_F_V PERSONNAMEDPEO
,EGP_CATEGORIES_TL ECT
,EGP_CATEGORIES_VL ECV
,EGP_SYSTEM_ITEMS_B ESIB
,FUN_ALL_BUSINESS_UNITS_V BusinessUnitPEO
WHERE 1=1
AND PRL2.REQUISITION_HEADER_ID=PRH2.REQUISITION_HEADER_ID
AND ppx.person_id=prl2.REQUESTER_ID(+)
AND ppx1.person_id=prl2.ASSIGNED_BUYER_ID(+)
AND ps.vendor_id=prl2.vendor_id
and pvs.vendor_id=PS.VENDOR_ID
and pvs.VENDOR_SITE_ID=prl2.VENDOR_SITE_ID
and ECT.CATEGORY_ID(+)=prl2.CATEGORY_ID
AND ECV.CATEGORY_ID=ECT.CATEGORY_ID
AND ESIB.INVENTORY_ITEM_ID=PRL2.ITEM_ID
AND ESIB.inventory_item_id(+) = prl2.item_id
AND ESIB.organization_id(+) = prl2.destination_organization_id
AND BusinessUnitPEO.BU_ID = PRH2.REQ_BU_ID
AND prh2.DOCUMENT_STATUS='APPROVED' and ppx.name_type='GLOBAL' and ppx1.name_type='GLOBAL'
AND PRL2.VENDOR_SITE_ID IS NOT NULL
and not exists(select req_distribution_id from PO_DISTRIBUTIONS_ALL pda,POR_REQ_DISTRIBUTIONS_ALL prda,POR_REQUISITION_LINES_ALL PRL3
,POR_REQUISITION_HEADERS_ALL PRH3
where prda.REQUISITION_LINE_ID=PRL3.REQUISITION_LINE_ID and prda.distribution_id=pda.req_distribution_id 
 AND PRL3.REQUISITION_HEADER_ID=PRH3.REQUISITION_HEADER_ID
  AND PRH3.REQUISITION_HEADER_ID=PRH2.REQUISITION_HEADER_ID)
 --AND PRH2.REQUISITION_NUMBER ='CRL1100316'
GROUP BY 
PRH2.REQUISITION_NUMBER 
,PRL2.LINE_NUMBER 
,prl2.PURCHASE_BASIS  
,PRL2.ITEM_DESCRIPTION
,prl2.CURRENCY_CODE 
,prl2.UOM_CODE 
,prl2.NEED_BY_DATE 
,prl2.UNIT_PRICE
,prl2.QUANTITY
,PS.VENDOR_NAME
,PVS.VENDOR_SITE_CODE
,ppx.full_name 
,ppx1.full_name 
,ECV.CATEGORY_NAME 
,ECT.DESCRIPTION
,BusinessUnitPEO.BU_NAME
,PRH2.CREATION_DATE
union
SELECT DISTINCT
BusinessUnitPEO.BU_NAME "ENTITY"
,PRH2.REQUISITION_NUMBER "PRNUMBER"
,case when PRH2.REQUISITION_NUMBER  is not null
then 
 null 
else 
NULL
end BLANKET_NUMBER
,PRL2.LINE_NUMBER 
,prl2.PURCHASE_BASIS  "ITEM"
,PRL2.ITEM_DESCRIPTION
,prl2.CURRENCY_CODE "CURRENCY"
,prl2.UOM_CODE "UOM"
,(prl2.QUANTITY)QUANTITY
,(prl2.UNIT_PRICE)UNIT_PRICE
,(prl2.quantity*prl2.UNIT_PRICE) "AMOUNT"
,to_char(prl2.NEED_BY_DATE,'DD-MON-YYYY')NEED_BY_DATE
,ppx.full_name "REQUESTOR"
,PS.VENDOR_NAME "SUPPLIER"
,null "SITE"
,ppx1.full_name "BUYER_NAME"
,to_char(Prh2.CREATION_DATE,'DD-MON-YYYY')CREATION_DATE
FROM
POR_REQUISITION_LINES_ALL PRL2
,POR_REQUISITION_HEADERS_ALL PRH2
,per_person_names_f ppx
,per_person_names_f PPX1
,POZ_SUPPLIERS_V PS
--,POZ_SUPPLIER_SITES_ALL_M pvs
,PER_PERSON_NAMES_F_V PERSONNAMEDPEO
,EGP_CATEGORIES_TL ECT
,EGP_CATEGORIES_VL ECV
,EGP_SYSTEM_ITEMS_B ESIB
,FUN_ALL_BUSINESS_UNITS_V BusinessUnitPEO
WHERE 1=1
AND PRL2.REQUISITION_HEADER_ID=PRH2.REQUISITION_HEADER_ID
AND ppx.person_id=prl2.REQUESTER_ID(+)
AND ppx1.person_id=prl2.ASSIGNED_BUYER_ID(+)
AND ps.vendor_id=prl2.vendor_id
and ECT.CATEGORY_ID(+)=prl2.CATEGORY_ID
AND ECV.CATEGORY_ID=ECT.CATEGORY_ID
AND ESIB.INVENTORY_ITEM_ID=PRL2.ITEM_ID
AND ESIB.inventory_item_id(+) = prl2.item_id
AND ESIB.organization_id(+) = prl2.destination_organization_id
AND BusinessUnitPEO.BU_ID = PRH2.REQ_BU_ID
AND PRL2.VENDOR_SITE_ID IS NULL
AND prh2.DOCUMENT_STATUS='APPROVED' and ppx.name_type='GLOBAL' and ppx1.name_type='GLOBAL'
and not exists(select req_distribution_id from PO_DISTRIBUTIONS_ALL pda,POR_REQ_DISTRIBUTIONS_ALL prda,POR_REQUISITION_LINES_ALL PRL3
,POR_REQUISITION_HEADERS_ALL PRH3
where prda.REQUISITION_LINE_ID=PRL3.REQUISITION_LINE_ID and prda.distribution_id=pda.req_distribution_id 
AND PRL3.REQUISITION_HEADER_ID=PRH3.REQUISITION_HEADER_ID
 AND PRH3.REQUISITION_HEADER_ID=PRH2.REQUISITION_HEADER_ID)
-- and  PRH2.REQUISITION_NUMBER ='CRL1100316'
GROUP BY 
PRH2.REQUISITION_NUMBER 
,PRL2.LINE_NUMBER 
,prl2.PURCHASE_BASIS  
,PRL2.ITEM_DESCRIPTION
,prl2.CURRENCY_CODE 
,prl2.UOM_CODE 
,prl2.NEED_BY_DATE 
,prl2.UNIT_PRICE
,prl2.QUANTITY
,PS.VENDOR_NAME
,ppx.full_name 
,ppx1.full_name 
,ECV.CATEGORY_NAME 
,ECT.DESCRIPTION
,BusinessUnitPEO.BU_NAME
,PRH2.CREATION_DATE
===============================================================================================================================
------------------------P2P Timing Data Model----------------------
--Person Name
select distinct person_id, effective_start_date,
Concat(Concat(Last_name , ', ') , first_name) name  from per_person_names_f

--Person ID
select distinct max(effective_start_date), person_id from per_person_names_f GROUP BY person_id

--reqPO
SELECT distinct
		prha.requisition_header_id 										req_header_id,
		prha.requisition_number 										req_number,
		prha.document_status 											req_status,
		to_char(prha.creation_date,'MM/DD/YYYY') 						req_created_date,
		to_char(prha.submission_date,'MM/DD/YYYY') 						req_submission_date,
		to_char(prha.approved_date,'MM/DD/YYYY') 						req_approved_date,
		TO_NUMBER(Extract(DAY FROM (prha.approved_date - prha.creation_date)))		Requisition_Approval_Time,
		PH.PO_header_id 												po_header_id,
		PH.segment1 													PO_Number,
		PH.document_status 												PO_status,
		to_char(PH.creation_Date,'MM/DD/YYYY') 							PO_Create_Date,
		to_char(PH.submit_date,'MM/DD/YYYY') 							PO_submission_date,
		to_char(PH.approved_date,'MM/DD/YYYY') 							PO_approved_date,
		TO_NUMBER(Extract(DAY FROM (PH.approved_date - PH.creation_Date)))			PO_Approval_Time,
		to_char(PH.closed_date,'MM/DD/YYYY') 							PO_Closed_date,
		PH.Cancel_flag 													PO_Cancelled,
		PV.vendor_name 													Supplier,
		RSH.receipt_num 												Receipt_Number,
		to_char(RSH.EXPECTED_RECEIPT_DATE,'MM/DD/YYYY') 	  			RECEIPT_DATE,
		RSH.EXPECTED_RECEIPT_DATE - PH.approved_date PO_Appr_to_Receipt,		
		AI.Invoice_Num 													Invoice_Number,
		AI.Invoice_ID 													Invoice_ID,
		to_char(AI.Invoice_Date,'MM/DD/YYYY') 							Invoice_Date,
		to_char(AI.GL_Date,'MM/DD/YYYY') 								Accounted_Date,
		to_char(AI.terms_date,'MM/DD/YYYY') 							Invoice_terms_date,
		to_char(AI.Creation_date,'MM/DD/YYYY') 							Invoice_Created_date,
		to_number(EXTRACT(DAY FROM ((AI.Creation_date - RSH.EXPECTED_RECEIPT_DATE)))) Receipt_To_Invoice,
		aphs.response 													Invoice_approval_response,
		to_char(aphs.creation_date,'MM/DD/YYYY') 						Invoice_approval_date,
		TO_NUMBER(Extract(DAY FROM (aphs.creation_date - AI.Creation_date)))		Invoice_Approval_Time,
		aca.check_number												check_number,
		aipa.invoice_payment_id 										payment_id,
		to_char(aipa.accounting_date,'MM/DD/YYYY') 						payment_acct_date,
		to_char(aipa.creation_date,'MM/DD/YYYY') 						payment_creation_date,
		TO_NUMBER(Extract(DAY FROM aipa.creation_date) - Extract(DAY FROM RSH.EXPECTED_RECEIPT_DATE)) Receipt_to_Payment,
		AI.INVOICE_AMOUNT	 											Amount,
		PH.agent_id														Agent_Id,
		HZP.Party_Name													Party_Name
		






FROM

		ap_invoices_all AI
            LEFT OUTER JOIN
                ap_invoice_lines_all AIL ON AIL.invoice_id = AI.invoice_id
			LEFT OUTER JOIN
                ap_invoice_distributions_all AIDA ON AIL.invoice_id = AIDA.invoice_id
			LEFT OUTER JOIN 
				POZ_SUPPLIERS pos	ON AI.Vendor_Id = pos.Vendor_Id
			LEFT OUTER JOIN 
				HZ_Parties HZP ON pos.party_id = hzp.party_id
			LEFT OUTER JOIN 
				ap_invoice_payments_all aipa ON AI.invoice_ID = aipa.invoice_ID 
            LEFT OUTER JOIN 
                rcv_transactions RTXN ON rtxn.transaction_id = AIL.rcv_transaction_id
            LEFT OUTER JOIN
                POZ_suppliers_v PV ON rtxn.vendor_id = PV.vendor_id
				
			LEFT OUTER JOIN 
				rcv_shipment_lines RSL ON RTXN.shipment_line_id = RSL.shipment_line_id
			LEFT OUTER JOIN 
				rcv_shipment_headers RSH ON RSL.shipment_header_id = RSH.shipment_header_id
			LEFT OUTER JOIN 
				po_distributions_all pda ON AIDA.po_distribution_id = pda.po_distribution_id
			LEFT OUTER JOIN 
				po_headers_all PH ON (pda.po_header_id = PH.po_header_id AND PH.segment1 =NVL ( :P_PO_NUMBER , PH.segment1 ) AND PH.PO_header_id = nvl(:P_PO_Header_ID,PH.PO_header_id))
			LEFT OUTER JOIN 
				po_lines_all PL ON PH.po_header_id = PL.po_header_id
			LEFT OUTER JOIN 
				po_line_locations_all PLL ON PL.po_line_id = PLL.po_line_id
			LEFT OUTER JOIN 
				por_req_distributions_all prda ON pda.req_distribution_id =  prda.distribution_id
			LEFT OUTER JOIN 
				por_requisition_lines_all prla ON prda.requisition_line_id =  prla.requisition_line_id
			LEFT OUTER JOIN 
				por_requisition_headers_all prha ON (prla.requisition_header_id =  prha.requisition_header_id AND prha.requisition_number = NVL ( :P_Req_Number, prha.requisition_number ) AND prha.requisition_header_id = nvl(:P_Req_ID,prha.requisition_header_id))
			LEFT OUTER JOIN 
				AP_INV_APRVL_HIST_ALL aphs ON (AI.Invoice_Id = aphs.Invoice_Id AND aphs.response IN('ORA_AUTO APPROVED','APPROVED','MANUALLY APPROVED'))
			LEFT OUTER JOIN 
				AP_CHECKS_ALL aca ON aipa.CHECK_ID = aca.CHECK_ID

				



WHERE 	AI.Invoice_Num = nvl(:P_Invoice_Num,AI.Invoice_num)
		AND AI.Invoice_ID = nvl(:P_Invoice_ID,AI.Invoice_ID)
		AND AI.Creation_date > To_Date( '31/12/2017','DD/MM/YYYY')
=================================================================================================================================
--------------------------P2P Timing---------------------------
--Person Name
select distinct person_id, effective_start_date,
Concat(Concat(Last_name , ', ') , first_name) name  from per_person_names_f

--Person ID
select distinct max(effective_start_date), person_id from per_person_names_f GROUP BY person_id

--reqPO
SELECT distinct
prha.requisition_header_id req_header_id,
prha.requisition_number req_number,
prha.document_status req_status,
to_char(prha.creation_date,'MM/DD/YYYY') req_created_date,
to_char(prha.submission_date,'MM/DD/YYYY') req_submission_date,
to_char(prha.approved_date,'MM/DD/YYYY') req_approved_date,
PH.PO_header_id po_header_id,
PH.segment1 PO_Number,
PH.document_status PO_status,
to_char(PH.creation_Date,'MM/DD/YYYY') PO_Create_Date,
to_char(PH.submit_date,'MM/DD/YYYY') PO_submission_date,
to_char(PH.approved_date,'MM/DD/YYYY') PO_approved_date,
to_char(PH.closed_date,'MM/DD/YYYY') PO_Closed_date,
PH.Cancel_flag PO_Cancelled,
PV.vendor_name Supplier,
RSH.receipt_num Receipt_Number,
to_char(RSH.EXPECTED_RECEIPT_DATE,'MM/DD/YYYY')    RECEIPT_DATE,
AI.Invoice_Num Invoice_Number,
AI.Invoice_ID Invoice_ID,
to_char(AI.Invoice_Date,'MM/DD/YYYY') Invoice_Date,
to_char(AI.terms_date,'MM/DD/YYYY') Invoice_terms_date,
to_char(AI.Creation_date,'MM/DD/YYYY') Invoice_Created_date,
aphs.response Invoice_approval_response,
to_char(aphs.creation_date,'MM/DD/YYYY') Invoice_approval_date,
aipa.check_id check_id,
aipa.invoice_payment_id payment_id,
to_char(aipa.accounting_date,'MM/DD/YYYY') payment_acct_date,
to_char(aipa.creation_date,'MM/DD/YYYY') payment_creation_date,
AI.INVOICE_AMOUNT	 Amount,
PH.agent_id,
HZP.Party_Name






FROM

ap_invoices_all AI
            LEFT OUTER JOIN
                ap_invoice_lines_all AIL ON AIL.invoice_id = AI.invoice_id
			LEFT OUTER JOIN
                ap_invoice_distributions_all AIDA ON AIL.invoice_id = AIDA.invoice_id
			LEFT OUTER JOIN 
				POZ_SUPPLIERS pos	ON AI.Vendor_Id = pos.Vendor_Id
			LEFT OUTER JOIN 
				HZ_Parties HZP ON pos.party_id = hzp.party_id
			LEFT OUTER JOIN 
				ap_invoice_payments_all aipa ON AI.invoice_ID = aipa.invoice_ID 
            LEFT OUTER JOIN 
                rcv_transactions RTXN ON rtxn.transaction_id = AIL.rcv_transaction_id
            LEFT OUTER JOIN
                POZ_suppliers_v PV ON rtxn.vendor_id = PV.vendor_id
				
			LEFT OUTER JOIN 
				rcv_shipment_lines RSL ON RTXN.shipment_line_id = RSL.shipment_line_id
			LEFT OUTER JOIN 
				rcv_shipment_headers RSH ON RSL.shipment_header_id = RSH.shipment_header_id
			LEFT OUTER JOIN 
				po_distributions_all pda ON AIDA.po_distribution_id = pda.po_distribution_id
			LEFT OUTER JOIN 
				po_headers_all PH ON (pda.po_header_id = PH.po_header_id AND PH.segment1 =NVL ( :P_PO_NUMBER , PH.segment1 ) AND PH.PO_header_id = nvl(:P_PO_Header_ID,PH.PO_header_id))
			LEFT OUTER JOIN 
				po_lines_all PL ON PH.po_header_id = PL.po_header_id
			LEFT OUTER JOIN 
				po_line_locations_all PLL ON PL.po_line_id = PLL.po_line_id
			LEFT OUTER JOIN 
				por_req_distributions_all prda ON pda.req_distribution_id =  prda.distribution_id
			LEFT OUTER JOIN 
				por_requisition_lines_all prla ON prda.requisition_line_id =  prla.requisition_line_id
			LEFT OUTER JOIN 
				por_requisition_headers_all prha ON (prla.requisition_header_id =  prha.requisition_header_id AND prha.requisition_number = NVL ( :P_Req_Number, prha.requisition_number ) AND prha.requisition_header_id = nvl(:P_Req_ID,prha.requisition_header_id))
			LEFT OUTER JOIN 
				AP_INV_APRVL_HIST_ALL aphs ON (AI.Invoice_Id = aphs.Invoice_Id AND aphs.response IN('ORA_AUTO APPROVED','APPROVED','MANUALLY APPROVED'))

				



WHERE  AI.Invoice_Num = nvl(:P_Invoice_Num,AI.Invoice_num)
  AND AI.Invoice_ID = nvl(:P_Invoice_ID,AI.Invoice_ID)
AND AI.Creation_date > To_Date( '31/12/2017','DD/MM/YYYY')
===================================================================================================================================================
SELECT  (	SELECT	houft.name
			FROM	hr_operating_units		houft
			WHERE	rct.ORG_ID		=		houft.organization_id
		)									bu,
		DECODE(rctta.type,'INV', 'Invoice', 'CM', 'Credit Note', 'DM', 'Debit Note',rctta.type)		 trx_type,
		rct.trx_number,
		TO_CHAR(rct.TRX_DATE,'DD-MM-YYYY')	trx_date	,
		rct.invoice_currency_code			curr,
		(	SELECT 	max(rctla.attribute5)
			FROM	ra_customer_trx_lines_all	rctla
			WHERE	rctla.attribute_category   IN  ('CRIS_LINE_ADDITIONAL_INFO','CRISIL_LINE_ADDITIONAL_INFO')
			AND		rctla.customer_trx_id	=	rct.customer_trx_id
		)									bcc,
		hp.party_name 						cust_name,
		hca.ACCOUNT_NUMBER					cust_code,
		(	SELECT 	max(ft.territory_short_name)
			FROM 	hz_parties hp,
					hz_party_sites hps,
					hz_cust_accounts hca,
					hz_cust_acct_sites_all hcas,
					hz_cust_site_uses_all hcs,
					hz_locations hl,
					--ra_customer_trx_all 		rcta,
					fnd_territories_vl ft
			WHERE 	hp.party_id 				= 	hca.party_id
			AND 	hp.party_id 				= 	hps.party_id
			AND 	hps.party_site_id 			= 	hcas.party_site_id
			AND 	hca.cust_account_id 		= 	hcas.cust_account_id
			AND 	hcas.cust_acct_site_id 		= 	hcs.cust_acct_site_id
			AND 	hps.location_id 			= 	hl.location_id
			AND 	hl.country 					= 	ft.territory_code
			AND		hcs.site_use_code			=	'BILL_TO'
			--AND		hp.party_name			=	'ICICI Securities Limited'
			AND		rct.bill_to_site_use_id 	= 	hcs.site_use_id		
		)									country,
		nvl((	SELECT 	sum(EXTENDED_AMOUNT) 
				FROM 	ra_customer_trx_lines_all l
				WHERE 	l.CUSTOMER_TRX_ID		=	rct.CUSTOMER_TRX_ID),0) inv_amt,
		'Receipt'   										evt_cls,
		NULL												adj_type,
		acr.receipt_number 									receipt_no,
		acr.currency_code									rcpr_curr,
		(	SELECT	max(cba.bank_account_num)
			FROM	ce_bank_acct_uses_all	cbaua,
					ce_bank_accounts		cba
			WHERE	1=1
			AND		acr.remit_bank_acct_use_id	=	cbaua.bank_acct_use_id
			AND		cba.bank_account_id			=	cbaua.bank_account_id
		)	bnk_acc,
		acr.exchange_rate,
		TO_CHAR(acr.exchange_date,'DD-MM-YYYY')				exchange_date,
		TO_CHAR(acr.receipt_date,'DD-MM-YYYY')				receipt_date,
		TO_CHAR(ara.apply_date,'DD-MM-YYYY')				apply_date,
		ara.AMOUNT_APPLIED									src_amt,
		ara.AMOUNT_APPLIED*nvl(acr.exchange_rate,1)			fun_amt,
		(	SELECT 		sum(dist_layer.gain_loss) gain_loss_amt
			FROM 		(	SELECT 	(NVL(d.from_acctd_amount_cr,0) -NVL(d.from_acctd_amount_dr,0)) - (NVL(d.acctd_amount_cr,0) -NVL(d.acctd_amount_dr,0)) gain_loss,
									d.line_id line_id
							FROM 	ar_distributions_all d
							WHERE 	d.source_table = 'RA'
							AND 	d.source_type IN ('EXCH_GAIN','EXCH_LOSS'	/*,'ACTIVITY', 'DEFERRED_TAX', 'TAX', 'REC','CURR_ROUND'*/)
						) 	dist_layer ,
							ar_xla_lines_extract line_ext ,
							ra_customer_trx_all ct
			WHERE			dist_layer.line_id = line_ext.line_id
			AND 			ct.customer_trx_id = line_ext.customer_trx_id	
			AND				ct.trx_number	   = rct.trx_number
		) 													exc_gnl,
		acr.COMMENTS					description
		
FROM    ar_receivable_applications_all 		ara,
        ar_cash_receipts_all           		acr,
        ra_customer_trx_all           	 	rct,
		ra_cust_trx_types_all 				rctta,
		hz_cust_accounts 					hca,
		hz_parties 							hp
WHERE   ara.status						=	'APP'
AND   	ara.cash_receipt_id(+)			=	acr.cash_receipt_id
AND  	ara.applied_customer_trx_id		=	rct.customer_trx_id(+)
AND		rctta.cust_trx_type_seq_id 		=	rct.cust_trx_type_seq_id
AND 	rct.bill_to_customer_id 		= 	hca.cust_account_id
AND 	hca.party_id 					= 	hp.party_id
AND		(	rct.org_id					IN	(:p_bu) 		OR 'All' 	IN (:p_bu 		|| 'All'))
AND		ara.apply_date					BETWEEN		(:p_f_date)		AND		(:p_t_date)	
UNION ALL
SELECT	(	SELECT	houft.name
			FROM	hr_operating_units		houft
			WHERE	rct.ORG_ID		=		houft.organization_id
		)									bu,
		DECODE(rctta.type,'INV', 'Invoice', 'CM', 'Credit Note', 'DM', 'Debit Note',rctta.type)		 trx_type,
		rct.trx_number,
		TO_CHAR(rct.TRX_DATE,'DD-MM-YYYY')	trx_date	,
		rct.invoice_currency_code			curr,
		(	SELECT 	max(rctla.attribute5)
			FROM	ra_customer_trx_lines_all	rctla
			WHERE	rctla.attribute_category   IN  ('CRIS_LINE_ADDITIONAL_INFO','CRISIL_LINE_ADDITIONAL_INFO')
			AND		rctla.customer_trx_id	=	rct.customer_trx_id
		)									bcc,
		hp.party_name 						cust_name,
		hca.ACCOUNT_NUMBER					cust_code,
		(	SELECT 	max(ft.territory_short_name)
			FROM 	hz_parties hp,
					hz_party_sites hps,
					hz_cust_accounts hca,
					hz_cust_acct_sites_all hcas,
					hz_cust_site_uses_all hcs,
					hz_locations hl,
					--ra_customer_trx_all 		rcta,
					fnd_territories_vl ft
			WHERE 	hp.party_id 				= 	hca.party_id
			AND 	hp.party_id 				= 	hps.party_id
			AND 	hps.party_site_id 			= 	hcas.party_site_id
			AND 	hca.cust_account_id 		= 	hcas.cust_account_id
			AND 	hcas.cust_acct_site_id 		= 	hcs.cust_acct_site_id
			AND 	hps.location_id 			= 	hl.location_id
			AND 	hl.country 					= 	ft.territory_code
			AND		hcs.site_use_code			=	'BILL_TO'
			--AND		hp.party_name			=	'ICICI Securities Limited'
			AND		rct.bill_to_site_use_id 	= 	hcs.site_use_id		
		)						country,
		nvl((	SELECT 	sum(EXTENDED_AMOUNT) 
				FROM 	ra_customer_trx_lines_all l
				WHERE 	l.CUSTOMER_TRX_ID		=	rct.CUSTOMER_TRX_ID),0) inv_amt,
		'Adjustments'   				evt_cls,
		INITCAP(aaa.TYPE)				adj_type,
		aaa.ADJUSTMENT_NUMBER			receipt_no,
		NULL							rcpr_curr,
		NULL							bnk_acc,
		NULL							exchange_rate,
		NULL							exchange_date,
		NULL							receipt_date,
		TO_CHAR(aaa.APPLY_DATE,'DD-MM-YYYY')				apply_date,
		abs(aaa.AMOUNT)						src_amt,
		abs(aaa.ACCTD_AMOUNT)				fun_amt,
		NULL							exc_gnl,
		aaa.COMMENTS					description
		
FROM	ar_adjustments_all					aaa,
		ra_customer_trx_all  				rct,
		ra_cust_trx_types_all 				rctta,
		hz_cust_accounts 					hca,
		hz_parties 							hp
WHERE	rct.CUSTOMER_TRX_ID	=	aaa.CUSTOMER_TRX_ID
AND		rctta.cust_trx_type_seq_id 		=	rct.cust_trx_type_seq_id
AND 	rct.bill_to_customer_id 		= 	hca.cust_account_id
AND 	hca.party_id 					= 	hp.party_id
AND		(	aaa.org_id						IN	(:p_bu) 		OR 'All' 	IN (:p_bu 		|| 'All'))
AND		aaa.apply_date					BETWEEN		(:p_f_date)		AND		(:p_t_date)
===================================================================================================================================================
------------------------------------------------Payables Variance Data Model----------------------------------------------------
--Dates
select to_char(START_DATE,'MM-DD-YYYY') as p_start_date,to_char(END_DATE,'MM-DD-YYYY') as p_end_date from ap_recon_summary_parameters where request_id=:p_request_id
--Main
select 
invoice_id,
sum(balance) from (
SELECT ai.invoice_id invoice_id,
             --NVl(SUM(aip.amount),0)       payment_currency,
             -1 * (NVL(SUM(NVL(aip.invoice_base_amount, NVL(aip.payment_base_amount,aip.amount)) +
             round(
                  nvl(ai.exchange_rate,1)* nvl(aip.discount_taken,0),
                   2)),0)) balance
          FROM AP_INVOICES_ALL ai,
               AP_INVOICE_PAYMENTS_ALL aip,
               AP_CHECKS_ALL ac,
               HZ_PARTIES hz,
   AP_PAYMENT_HISTORY_ALL  aph
          WHERE  ac.check_id = aph.check_id
and  aph.accounting_date BETWEEN  to_date(:p_start_date, 'MM-DD-YYYY') and to_date(:p_end_date, 'MM-DD-YYYY') 
                   and ( (    aph.transaction_type  in ('PAYMENT CREATED',  'PAYMENT CANCELLED') AND ac.future_pay_due_date is null and decode(aph.transaction_type,'PAYMENT CANCELLED', aph.check_id*-1, aph.check_id) = decode(aip.reversal_inv_pmt_id, null,aip.check_id, aip.check_id*-1 ))
                   OR
                       ( aph.transaction_type in ('PAYMENT MATURITY',  'PAYMENT MATURITY REVERSAL' ) AND ac.future_pay_due_date is not null and decode(aph.transaction_type,'PAYMENT MATURITY REVERSAL', aph.check_id*-1, aph.check_id) = decode(aip.reversal_inv_pmt_id, null,aip.check_id, aip.check_id*-1))
                    ) 
                                  --AND ai.org_id in '||p_param_records.bu_secured_data||'
          AND aip.invoice_id = ai.invoice_id
          AND hz.party_id = ai.party_id
          AND aip.check_id = ac.check_id
          AND aip.set_of_books_id = ai.set_of_books_id
          AND ai.set_of_books_id =  :p_ledger
          AND ai.invoice_type_lookup_code not in ('INTEREST')
AND nvl(ai.intercompany_flag,'N') = decode('I','E','N','O','Y',nvl(ai.intercompany_flag,'N'))
GROUP BY  ai.invoice_id
UNION ALL
SELECT ai.invoice_id invoice_id,
    NVL(SUM(NVL(aid.base_amount,aid.amount)),0) balance
  FROM AP_INVOICES_ALL ai,
    AP_INVOICE_DISTRIBUTIONS_ALL aid,
    HZ_PARTIES hz
  WHERE aid.accounting_date BETWEEN  to_date(:p_start_date, 'MM-DD-YYYY') and to_date(:p_end_date, 'MM-DD-YYYY')
  AND aid.org_id                       = ai.org_id
  AND aid.invoice_id                   = ai.invoice_id
  AND hz.party_id                      = ai.party_id
  AND aid.set_of_books_id              = ai.set_of_books_id
  AND aid.prepay_distribution_id      IS NULL
  AND ai.set_of_books_id               = :p_ledger
--and aid.org_id=300000001564818
  AND ai.invoice_type_lookup_code NOT IN ('INTEREST')
  AND NVL(ai.intercompany_flag,'N')    = DECODE('Y','E','N','O','Y',NVL(ai.intercompany_flag,'N'))
  GROUP BY ai.invoice_id
UNION ALL
SELECT  aid.invoice_id invoice_id,
        (1 * NVL(SUM(NVL(aid.base_amount,aid.amount)),0)) balance
FROM    ap_invoices_all ai              ,
        AP_INVOICE_DISTRIBUTIONS_ALL aid,
        HZ_PARTIES hz
WHERE   aid.accounting_date BETWEEN  to_date(:p_start_date, 'MM-DD-YYYY') and to_date(:p_end_date, 'MM-DD-YYYY')
        AND aid.org_id                  = ai.org_id
        AND aid.invoice_id              = ai.invoice_id
        AND hz.party_id                 = ai.party_id
        AND aid.prepay_distribution_id IS NOT NULL
        AND aid.set_of_books_id         = ai.set_of_books_id
        AND ai.set_of_books_id          = :p_ledger
                                --and aid.org_id = 300000001564818
GROUP BY aid.invoice_id
UNION ALL
select
    invoice_id,
    sum(-1 * invoice_balance_amt) balance
from
(
SELECT invoice_id
    ,invoice_num
,invoice_amount
,(nvl(invoice_amount,0) - nvl(amount_paid,0) + nvl(prepaid_amount,0) + nvl(awt_amount,0))  invoice_balance_amt
    ,invoice_date
,-1*prepaid_amount prepaid_amount
,-1 * awt_amount  AWT_amount
    ,amount_paid   payment_amount
    ,cancelled_date
    ,invoice_type_lookup_code
    ,ledger_id
    ,business_unit_id
FROM (
   SELECT
     invoice_id
    ,invoice_num
    ,invoice_date
    ,(SELECT sum(NVL(aid.base_amount,aid.amount))
      FROM   ap_invoice_distributions_all aid
      WHERE  aid.invoice_id = a.invoice_id
      AND   aid.line_type_lookup_code NOT IN ('AWT')
      AND   aid.prepay_distribution_id is null
                  -- Bug 12344429
      AND  decode(AID.match_status_flag,
           'A', 'APPROVED',
                                   'N', 'NEEDS REAPPROVAL',
           'T', decode(a.approval_status,
                    'APPROVED','APPROVED',
                                                                    'UNPAID','APPROVED',
                                                                    'CANCELLED','APPROVED',
                                                                    'NEEDS REAPPROVAL'),
            'NEVER APPROVED'
            ) = 'APPROVED'
      AND   aid.accounting_date
                    < to_date(:p_end_date, 'MM-DD-YYYY') +1) invoice_amount
    ,(SELECT sum(NVL(aid1.base_amount,aid1.amount))
      FROM   ap_invoice_distributions_all aid1
      WHERE  aid1.invoice_id = a.invoice_id
      AND    aid1.prepay_distribution_id is not null
      -- Bug 12344429
     AND  decode(AID1.match_status_flag,
           'A', 'APPROVED',
                                   'N', 'NEEDS REAPPROVAL',
           'T', decode(a.approval_status,
                    'APPROVED','APPROVED',
                                                                    'UNPAID','APPROVED',
                                                                    'CANCELLED','APPROVED',
                                                                    'NEEDS REAPPROVAL'),
            'NEVER APPROVED'
            ) = 'APPROVED'
      AND    aid1.accounting_date
                 < to_date(:p_end_date, 'MM-DD-YYYY') +1) prepaid_amount
    , (SELECT sum(NVL(aid.base_amount,aid.amount))
      FROM   ap_invoice_distributions_all aid
      WHERE  aid.invoice_id = a.invoice_id
      AND    aid.line_type_lookup_code = 'AWT'
      -- Bug 12344429
      AND  decode(AID.match_status_flag,
           'A', 'APPROVED',
                                   'N', 'NEEDS REAPPROVAL',
           'T', decode(a.approval_status,
                    'APPROVED','APPROVED',
                                                                    'UNPAID','APPROVED',
                                                                    'CANCELLED','APPROVED',
                                                                    'NEEDS REAPPROVAL'),
            'NEVER APPROVED'
            ) = 'APPROVED'
      AND    aid.accounting_date
                    < to_date(:p_end_date, 'MM-DD-YYYY') +1) AWT_amount
    ,(SELECT sum(NVL(aip.invoice_base_amount, NVL(aip.payment_base_amount,aip.amount)) +
             round(
                 nvl(a.exchange_rate,1)* nvl(aip.discount_taken,0),
                          2)
                )
      FROM   ap_invoice_payments_all aip, gl_ledgers gl, ap_checks_all ac, ap_payment_history_all aph
      WHERE  aip.invoice_id = a.invoice_id
      AND    ac.check_id = aip.check_id
      AND    gl.ledger_id = aip.set_of_books_id
      AND    gl.ledger_id = a.set_of_books_id
      AND ac.check_id = aph.check_id
      AND      aph.accounting_date  < to_date(:p_end_date, 'MM-DD-YYYY') +1
       AND ((  aph.transaction_type IN ('PAYMENT CREATED', 'PAYMENT CANCELLED' )
       AND ac.future_pay_due_date IS NULL
       AND DECODE(aph.transaction_type,'PAYMENT CANCELLED', aph.check_id *-1 ,aph.check_id)= DECODE(aip.reversal_inv_pmt_id, NULL,aip.check_id, aip.check_id*-1))
               OR (aph.transaction_type IN ('PAYMENT MATURITY', 'PAYMENT MATURITY REVERSAL' )
       AND ac.future_pay_due_date IS NOT NULL
       AND DECODE(aph.transaction_type,'PAYMENT MATURITY REVERSAL', aph.check_id*-1, aph.check_id) = DECODE(aip.reversal_inv_pmt_id, NULL,aip.check_id, aip.check_id*-1)) 
         )
      ) amount_paid
    ,cancelled_date
    ,invoice_type_lookup_code
    ,set_of_books_id ledger_id
    ,org_id business_unit_id
  FROM
  (
    -- other cases
     select
        DISTINCT
        invoice_num,
        invoice_date,
        a.invoice_id,
        cancelled_date,
        invoice_type_lookup_code,
        a.set_of_books_id,
        a.org_id,
        a.approval_status,
        a.exchange_rate,
                                a.invoice_amount,
        a.payment_status_flag
     FROM  ap_invoices_all a,
           --poz_suppliers s,
           hz_parties hz,
           (SELECT
                DISTINCT d.invoice_id
            FROM   ap_invoice_distributions_all d
            WHERE  d.accounting_date < to_date(:p_end_date, 'MM-DD-YYYY') +1
              AND   nvl(d.match_status_flag, 'N') <> 'N' -- Bug 12344429
                 ) d,
            ap_payment_schedules_all p,
            ap_invoice_payments_all ip,
            ap_checks_all ac
            ,(SELECT MAX(accounting_date) accounting_date,
              check_id
            FROM ap_payment_history_all aph
            WHERE aph.transaction_type = 'PAYMENT MATURITY'
            GROUP BY check_id
           )aph
    WHERE  a.invoice_id = d.invoice_id
    AND    p.invoice_id = a.invoice_id
    AND    p.org_id = a.org_id
    --AND    p.org_id = decode(:p_bu_id,0,p.org_id,:p_bu_id)
                --AND     p.org_id in '||p_bu_secured_data||' -- Bug 9337547. BU Data Security
    AND    p.invoice_id = ip.invoice_id (+)
    AND    p.payment_num = ip.payment_num (+)
    AND    ip.check_id = ac.check_id(+)
            AND    aph.check_id (+)                    = ac.check_id 
    AND   ( (nvl(p.payment_status_flag, 'N') NOT IN ('P', 'Y')) OR -- Bug 10357588. for payables variance
           (nvl(p.payment_status_flag, 'N') IN ('P','Y') AND
           (( nvl(ip.accounting_date,sysdate+1) >= to_date(:p_end_date, 'MM-DD-YYYY') +1 AND ac.future_pay_due_date is NULL )
           OR (ac.future_pay_due_date is not null AND NVL(aph.accounting_date , ac.future_pay_due_date)  >= to_date(:p_end_date, 'MM-DD-YYYY') +1 ) 
           ))
--           ) OR
--           (nvl(p.payment_status_flag, 'N') IN ('P') AND
--           ((  ac.future_pay_due_date is NULL )
--           OR (ac.future_pay_due_date is not null AND NVL(aph.accounting_date , ac.future_pay_due_date)  >= to_date(:p_end_date, 'MM-DD-YYYY') +1 ) 
--           )
--           )
          )
    --AND    a.vendor_id = s.vendor_id
    AND    a.party_id = hz.party_id
    AND    a.set_of_books_id = :p_ledger
                -- Bug 11838700. exlcude interest invoices
                AND    a.invoice_type_lookup_code not in ('INTEREST')
AND nvl(a.intercompany_flag,'N') = decode('I','E','N','O','Y',nvl(a.intercompany_flag,'N'))
    -- other two cases that payments gl date is greater than invoice gl date
Union
   select
        DISTINCT
        invoice_num,
        invoice_date,
        a.invoice_id,
        cancelled_date,
        invoice_type_lookup_code,
        a.set_of_books_id,
        a.org_id,
        a.approval_status,
        a.exchange_rate,
                                a.invoice_amount,
        a.payment_status_flag
FROM  ap_invoices_all a,
       --poz_suppliers s,
       hz_parties hz,
       (SELECT
               DISTINCT ip.invoice_id,
               ip.payment_num
        FROM   ap_invoice_payments_all ip, ap_checks_all ac
        ,(SELECT MAX(accounting_date) accounting_date,
              check_id
            FROM ap_payment_history_all aph
            WHERE aph.transaction_type = 'PAYMENT MATURITY'
            GROUP BY check_id
           )aph
        WHERE  ac.check_id = ip.check_id
        AND    aph.check_id (+)                    = ac.check_id 
          AND  ( ( ip.accounting_date < to_date(:p_end_date, 'MM-DD-YYYY') +1 AND ac.future_pay_due_date is NULL )
                 OR (ac.future_pay_due_date is not null AND NVL(aph.accounting_date , ac.future_pay_due_date)  >= to_date(:p_end_date, 'MM-DD-YYYY') +1 ) 
              )
        ) p,
        (SELECT max(accounting_date) accounting_date,
                invoice_id
         FROM   ap_invoice_distributions_all
         WHERE   nvl(match_status_flag, 'N') <> 'N' -- Bug 12344429
         GROUP  BY invoice_id) d,
        ap_payment_schedules_all ps
WHERE  a.invoice_id = d.invoice_id
AND    d.accounting_date >= to_date(:p_end_date, 'MM-DD-YYYY') +1
AND    p.invoice_id = a.invoice_id
AND    ps.invoice_id = a.invoice_id
AND    ps.payment_num = p.payment_num
AND    nvl(ps.payment_status_flag, 'N') IN ('P','Y')
AND    ps.org_id = a.org_id
--AND    ps.org_id = decode(:p_bu_id,0,ps.org_id,:p_bu_id)
--AND     ps.org_id in '||p_bu_secured_data||' -- Bug 9337547. BU Data security
--AND    a.vendor_id = s.vendor_id
AND    a.party_id = hz.party_id
AND    a.set_of_books_id = :p_ledger
-- Bug 11838700. exlcude interest invoices
AND    a.invoice_type_lookup_code not in ('INTEREST')
AND nvl(a.intercompany_flag,'N') = decode('I','E','N','O','Y',nvl(a.intercompany_flag,'N'))
) a
    ) Inv_ag
WHERE
     (nvl(invoice_amount,0) - nvl(amount_paid,0) + nvl(prepaid_amount,0) +nvl(awt_amount,0) <> 0)
     ) group by invoice_id
UNION ALL
select
    invoice_id,
    sum(invoice_balance_amt) balance
from
(
SELECT invoice_id
    ,invoice_num
,invoice_amount
,(nvl(invoice_amount,0) - nvl(amount_paid,0) + nvl(prepaid_amount,0) + nvl(awt_amount,0))  invoice_balance_amt
    ,invoice_date
,-1*prepaid_amount prepaid_amount
,-1 * awt_amount  AWT_amount
    ,amount_paid   payment_amount
    ,cancelled_date
    ,invoice_type_lookup_code
    ,ledger_id
    ,business_unit_id
FROM (
   SELECT
     invoice_id
    ,invoice_num
    ,invoice_date
    ,(SELECT sum(NVL(aid.base_amount,aid.amount))
      FROM   ap_invoice_distributions_all aid
      WHERE  aid.invoice_id = a.invoice_id
      AND   aid.line_type_lookup_code NOT IN ('AWT')
      AND   aid.prepay_distribution_id is null
                  -- Bug 12344429
      AND  decode(AID.match_status_flag,
           'A', 'APPROVED',
                                   'N', 'NEEDS REAPPROVAL',
           'T', decode(a.approval_status,
                    'APPROVED','APPROVED',
                                                                    'UNPAID','APPROVED',
                                                                    'CANCELLED','APPROVED',
                                                                    'NEEDS REAPPROVAL'),
            'NEVER APPROVED'
            ) = 'APPROVED'
      AND   aid.accounting_date
                    <  to_date(:p_start_date, 'MM-DD-YYYY')) invoice_amount
    ,(SELECT sum(NVL(aid1.base_amount,aid1.amount))
      FROM   ap_invoice_distributions_all aid1
      WHERE  aid1.invoice_id = a.invoice_id
      AND    aid1.prepay_distribution_id is not null
      -- Bug 12344429
     AND  decode(AID1.match_status_flag,
           'A', 'APPROVED',
                                   'N', 'NEEDS REAPPROVAL',
           'T', decode(a.approval_status,
                    'APPROVED','APPROVED',
                                                                    'UNPAID','APPROVED',
                                                                    'CANCELLED','APPROVED',
                                                                    'NEEDS REAPPROVAL'),
            'NEVER APPROVED'
            ) = 'APPROVED'
      AND    aid1.accounting_date
                 <  to_date(:p_start_date, 'MM-DD-YYYY')) prepaid_amount
    , (SELECT sum(NVL(aid.base_amount,aid.amount))
      FROM   ap_invoice_distributions_all aid
      WHERE  aid.invoice_id = a.invoice_id
      AND    aid.line_type_lookup_code = 'AWT'
      -- Bug 12344429
      AND  decode(AID.match_status_flag,
           'A', 'APPROVED',
                                   'N', 'NEEDS REAPPROVAL',
           'T', decode(a.approval_status,
                    'APPROVED','APPROVED',
                                                                    'UNPAID','APPROVED',
                                                                    'CANCELLED','APPROVED',
                                                                    'NEEDS REAPPROVAL'),
            'NEVER APPROVED'
            ) = 'APPROVED'
      AND    aid.accounting_date
                    < to_date(:p_start_date, 'MM-DD-YYYY') ) AWT_amount
    ,(SELECT sum(NVL(aip.invoice_base_amount, NVL(aip.payment_base_amount,aip.amount)) +
             round(
                 nvl(a.exchange_rate,1)* nvl(aip.discount_taken,0),
                          2)
                )
      FROM   ap_invoice_payments_all aip, gl_ledgers gl, ap_checks_all ac, ap_payment_history_all aph
      WHERE  aip.invoice_id = a.invoice_id
      AND    ac.check_id = aip.check_id
      AND    gl.ledger_id = aip.set_of_books_id
      AND    gl.ledger_id = a.set_of_books_id
      AND ac.check_id = aph.check_id
      AND      aph.accounting_date  <  to_date(:p_start_date, 'MM-DD-YYYY')
       AND ((  aph.transaction_type IN ('PAYMENT CREATED', 'PAYMENT CANCELLED' )
       AND ac.future_pay_due_date IS NULL
       AND DECODE(aph.transaction_type,'PAYMENT CANCELLED', aph.check_id *-1, aph.check_id)= DECODE(aip.reversal_inv_pmt_id, NULL,aip.check_id, aip.check_id*-1))
               OR (aph.transaction_type IN ('PAYMENT MATURITY', 'PAYMENT MATURITY REVERSAL' )
       AND ac.future_pay_due_date IS NOT NULL
       AND DECODE(aph.transaction_type,'PAYMENT MATURITY REVERSAL', aph.check_id*-1, aph.check_id) = DECODE(aip.reversal_inv_pmt_id, NULL,aip.check_id, aip.check_id*-1)) 
         )
      ) amount_paid
    ,cancelled_date
    ,invoice_type_lookup_code
    ,set_of_books_id ledger_id
    ,org_id business_unit_id
  FROM
  (
    -- other cases
    select
        DISTINCT
        invoice_num,
        invoice_date,
        a.invoice_id,
        cancelled_date,
        invoice_type_lookup_code,
        a.set_of_books_id,
        a.org_id,
        a.approval_status,
        a.exchange_rate,
                                a.invoice_amount,
        a.payment_status_flag
     FROM  ap_invoices_all a,
           --poz_suppliers s,
           hz_parties hz,
           (SELECT
                DISTINCT d.invoice_id
            FROM   ap_invoice_distributions_all d
            WHERE  d.accounting_date <  to_date(:p_start_date, 'MM-DD-YYYY')
              AND   nvl(d.match_status_flag, 'N') <> 'N' -- Bug 12344429
                 ) d,
            ap_payment_schedules_all p,
            ap_invoice_payments_all ip,
            ap_checks_all ac
            ,(SELECT MAX(accounting_date) accounting_date,
              check_id
            FROM ap_payment_history_all aph
            WHERE aph.transaction_type = 'PAYMENT MATURITY'
            GROUP BY check_id
           )aph
    WHERE  a.invoice_id = d.invoice_id
    AND    p.invoice_id = a.invoice_id
    AND    p.org_id = a.org_id
    --AND    p.org_id = decode(:p_bu_id,0,p.org_id,:p_bu_id)
                --AND     p.org_id in '||p_bu_secured_data||' -- Bug 9337547. BU Data Security
    AND    p.invoice_id = ip.invoice_id (+)
    AND    p.payment_num = ip.payment_num (+)
    AND    ip.check_id = ac.check_id(+)
            AND    aph.check_id (+)                    = ac.check_id 
    AND   ( (nvl(p.payment_status_flag, 'N') NOT IN ('P', 'Y')) OR -- Bug 10357588. for payables variance
           (nvl(p.payment_status_flag, 'N') IN ('P','Y') AND
           (( nvl(ip.accounting_date,sysdate+1) >=  to_date(:p_start_date, 'MM-DD-YYYY') AND ac.future_pay_due_date is NULL )
           OR (ac.future_pay_due_date is not null AND NVL(aph.accounting_date , ac.future_pay_due_date)  >=  to_date(:p_start_date, 'MM-DD-YYYY') ) 
           ))
--           ) OR
--           (nvl(p.payment_status_flag, 'N') IN ('P') AND
--           ((  ac.future_pay_due_date is NULL )
--           OR (ac.future_pay_due_date is not null AND NVL(aph.accounting_date , ac.future_pay_due_date)  >=  to_date(:p_start_date, 'MM-DD-YYYY') ) 
--           )
--           )
          )
    --AND    a.vendor_id = s.vendor_id
    AND    a.party_id = hz.party_id
    AND    a.set_of_books_id = :p_ledger
                -- Bug 11838700. exlcude interest invoices
                AND    a.invoice_type_lookup_code not in ('INTEREST')
AND nvl(a.intercompany_flag,'N') = decode('I','E','N','O','Y',nvl(a.intercompany_flag,'N'))
    -- other two cases that payments gl date is greater than invoice gl date
Union
   select
        DISTINCT
        invoice_num,
        invoice_date,
        a.invoice_id,
        cancelled_date,
        invoice_type_lookup_code,
        a.set_of_books_id,
        a.org_id,
        a.approval_status,
        a.exchange_rate,
                                a.invoice_amount,
        a.payment_status_flag
FROM  ap_invoices_all a,
       --poz_suppliers s,
       hz_parties hz,
       (SELECT
               DISTINCT ip.invoice_id,
               ip.payment_num
        FROM   ap_invoice_payments_all ip, ap_checks_all ac
        ,(SELECT MAX(accounting_date) accounting_date,
              check_id
            FROM ap_payment_history_all aph
            WHERE aph.transaction_type = 'PAYMENT MATURITY'
            GROUP BY check_id
           )aph
        WHERE  ac.check_id = ip.check_id
        AND    aph.check_id (+)                    = ac.check_id 
          AND  ( ( ip.accounting_date < to_date(:p_start_date, 'MM-DD-YYYY') AND ac.future_pay_due_date is NULL )
                 OR (ac.future_pay_due_date is not null AND NVL(aph.accounting_date , ac.future_pay_due_date)  >=  to_date(:p_start_date, 'MM-DD-YYYY') ) 
              )
        ) p,
        (SELECT max(accounting_date) accounting_date,
                invoice_id
         FROM   ap_invoice_distributions_all
         WHERE   nvl(match_status_flag, 'N') <> 'N' -- Bug 12344429
         GROUP  BY invoice_id) d,
        ap_payment_schedules_all ps
WHERE  a.invoice_id = d.invoice_id
AND    d.accounting_date >= to_date(:p_start_date, 'MM-DD-YYYY')
AND    p.invoice_id = a.invoice_id
AND    ps.invoice_id = a.invoice_id
AND    ps.payment_num = p.payment_num
AND    nvl(ps.payment_status_flag, 'N') IN ('P','Y')
AND    ps.org_id = a.org_id
--AND    ps.org_id = decode(:p_bu_id,0,ps.org_id,:p_bu_id)
--AND     ps.org_id in (204)
--AND    a.vendor_id = s.vendor_id
AND    a.party_id = hz.party_id
AND    a.set_of_books_id = :p_ledger
-- Bug 11838700. exlcude interest invoices
AND    a.invoice_type_lookup_code not in ('INTEREST')
AND nvl(a.intercompany_flag,'N') = decode('I','E','N','O','Y',nvl(a.intercompany_flag,'N'))
) a
    ) Inv_ag
WHERE
     (nvl(invoice_amount,0) - nvl(amount_paid,0) + nvl(prepaid_amount,0) +nvl(awt_amount,0) <> 0)
     ) group by invoice_id)
GROUP By Invoice_ID
HAVING SUM(balance) != 0
ORDER BY invoice_id

--Inv_Details
SELECT
    invoiceheader.invoice_id,
    payableslookup_aprvl.displayed_field approval_status,
    invoiceheader.gl_date,
    invoiceheader.invoice_num,
    invoiceheader.org_id,
    invoiceheader.vendor_id,
    invoiceheader.vendor_site_id,
    supplier.vendor_id AS vendor_id557,
    party.party_id AS party_id824,
    party.party_name AS supplier_name,
    suppliersite.vendor_site_code supplier_site,
    payableslookup_invtype.displayed_field invoice_type,
    payableslookup_ps.displayed_field payment_status,
    businessunit.bu_name
FROM
    ap_invoices_all invoiceheader,
    fusion.fun_bu_perf_v businessunit,
    poz_suppliers supplier,
    hz_parties party,
    poz_supplier_sites_all_m suppliersite,
    ap_lookup_codes payableslookup_invtype,
    ap_lookup_codes payableslookup_ps,
    ap_lookup_codes payableslookup_aprvl
WHERE
    invoiceheader.org_id = businessunit.bu_id
    AND supplier.party_id = party.party_id
    AND payableslookup_invtype.lookup_type = 'INVOICE TYPE'
    AND payableslookup_ps.lookup_type = 'INVOICE PAYMENT STATUS'
    AND invoiceheader.approval_status = payableslookup_aprvl.lookup_code
    AND payableslookup_aprvl.lookup_type = 'NLS TRANSLATION'
    AND invoiceheader.vendor_id = supplier.vendor_id
    AND invoiceheader.vendor_site_id = suppliersite.vendor_site_id
    AND invoiceheader.invoice_type_lookup_code = payableslookup_invtype.lookup_code
    AND invoiceheader.payment_status_flag = payableslookup_ps.lookup_code
=========================================================================================================================
-------------------------------------------------Payables Withholding Tax Letter Data Model-------------------------------------------------------------
--Q_WHT
SELECT SUPPLIER_NAME,
                SUPPLIER_ADDRESS_LINE1 || DECODE(SUPPLIER_ADDRESS_LINE2, NULL, NULL, ', ' || SUPPLIER_ADDRESS_LINE2)
                || DECODE(SUPPLIER_ADDRESS_LINE3, NULL, NULL, ', ' || SUPPLIER_ADDRESS_LINE3) SUPPLIER_ADDRESS_LINE,
                SUPPLIER_CITY || DECODE(SUPPLIER_STATE, NULL, DECODE(SUPPLIER_PROVINCE, NULL, 
                DECODE(SUPPLIER_ZIP, NULL, NULL, ', ' || SUPPLIER_ZIP), ', ' || SUPPLIER_PROVINCE 
                || ' ' || SUPPLIER_ZIP), ', ' || SUPPLIER_STATE || ' ' || SUPPLIER_ZIP)  SUPPLIER_CITY_AND_ZIP,
                SUPPLIER_COUNTRY,
                INVOICE_CURRENCY_CODE,
                INVOICE_CURRENCY_CODE   INV_CURRENCY,
                AWT_CODE,
                AWT_RATE,
                AMOUNT_SUBJECT_TO_TAX PAYABLE_AMOUNT,
		AWT_AMOUNT		  
    FROM (
	SELECT 
	  PV2.VENDOR_TYPE_LOOKUP_CODE						SUPPLIER_TYPE,
	  PV2.VENDOR_NAME                          				SUPPLIER_NAME,
	  PV2.SEGMENT1                           				SUPPLIER_NUMBER,
	  PVS.VENDOR_SITE_CODE              					SUPPLIER_SITE_CODE,
	  PVS.ADDRESS_LINE1							SUPPLIER_ADDRESS_LINE1,
	  PVS.ADDRESS_LINE2              					SUPPLIER_ADDRESS_LINE2,
	  PVS.ADDRESS_LINE3             					SUPPLIER_ADDRESS_LINE3,
	  PVS.CITY                               				SUPPLIER_CITY,
	  PVS.STATE                              				SUPPLIER_STATE,
	  PVS.ZIP                                 				SUPPLIER_ZIP,
	  PVS.PROVINCE                        					SUPPLIER_PROVINCE,
	  PVS.COUNTRY                          					SUPPLIER_COUNTRY,
	  INV.INVOICE_NUM                              			        INVOICE_NUM,
	  INV.INVOICE_AMOUNT                            		        INVOICE_AMOUNT,
	  INV.INVOICE_CURRENCY_CODE			                        INVOICE_CURRENCY_CODE,
	  INV.INVOICE_DATE    			                                INVOICE_DATE,
	  ZTV.TAX_FULL_NAME   			                                AWT_CODE,
	  WHT.TAX_RATE 								AWT_RATE,
	  NVL(AID.AMOUNT*-1,0)							AWT_AMOUNT,
	  WHT.LINE_AMT								AWT_BASE_AMOUNT,
	  NULL                                                  		AWT_GROUP_NAME,
	  AID.ACCOUNTING_DATE							AWT_GL_DATE,
   	(SELECT sum (INVOICE_AMOUNT)
		FROM
		  (SELECT INV.INVOICE_NUM		INVOICE_NUM,
			MIN (INV.INVOICE_AMOUNT)	INVOICE_AMOUNT
		  FROM POZ_SUPPLIERS_V PV2,
			POZ_SUPPLIER_SITES_V PVS,
			AP_INVOICES_ALL INV,
			ZX_WITHHOLDING_LINES WHT,
			AP_INVOICE_DISTRIBUTIONS_ALL AID,
			ZX_RATES_B ZRB,
			ZX_TAXES_VL ZTV
		  WHERE INV.ORG_ID                         = :P_ORG_ID
		  AND INV.VENDOR_ID                        = PV2.VENDOR_ID
		  AND INV.VENDOR_SITE_ID                   = PVS.VENDOR_SITE_ID
		  AND INV.INVOICE_ID                       = WHT.TRX_ID
		  AND INV.INVOICE_ID                       = AID.INVOICE_ID
		  AND WHT.TAX_TYPE_CODE                    = 'AWT'
		  AND AID.LINE_TYPE_LOOKUP_CODE            = 'AWT'											   
		  AND AID.SUMMARY_TAX_LINE_ID              = WHT.SUMMARY_TAX_LINE_ID
          	  AND AID.AWT_TAX_RATE_ID                  = WHT.TAX_RATE_ID
          	  AND AID.DETAIL_TAX_LINE_ID          = WHT.TAX_LINE_ID																
		  AND NVL(WHT.CANCEL_FLAG,'N')             = 'N'
		  AND (WHT.TAX_RATE_ID                     = ZRB.TAX_RATE_ID
		  OR (WHT.TAX_RATE_ID                      = ZRB.SOURCE_ID
		  AND ZRB.EFFECTIVE_FROM                  <= AID.ACCOUNTING_DATE
		  AND NVL(ZRB.EFFECTIVE_TO, AID.ACCOUNTING_DATE) >= AID.ACCOUNTING_DATE ) )
		  AND ZTV.TAX_REGIME_CODE                  = ZRB.TAX_REGIME_CODE 
		  AND ZTV.TAX                              = ZRB.TAX
		  AND ZTV.CONTENT_OWNER_ID                 = ZRB.CONTENT_OWNER_ID
           &LV_WHERE_CLAUSE
		  GROUP BY INVOICE_NUM
		  		) ) 	AMOUNT_SUBJECT_TO_TAX
	FROM POZ_SUPPLIERS_V PV2,
	     POZ_SUPPLIER_SITES_V PVS,
	     AP_INVOICES_ALL INV,
	     ZX_WITHHOLDING_LINES WHT,
      	     AP_INVOICE_DISTRIBUTIONS_ALL AID,
	     ZX_RATES_B ZRB,
	     ZX_TAXES_VL ZTV
	WHERE INV.ORG_ID                         = :P_ORG_ID
	AND INV.VENDOR_ID                        = PV2.VENDOR_ID
	AND INV.VENDOR_SITE_ID                   = PVS.VENDOR_SITE_ID
	AND WHT.TRX_ID                           = INV.INVOICE_ID
        AND INV.INVOICE_ID 			 = AID.INVOICE_ID
 	AND WHT.TAX_TYPE_CODE                    = 'AWT'
	AND AID.LINE_TYPE_LOOKUP_CODE            = 'AWT'
	AND AID.SUMMARY_TAX_LINE_ID              = WHT.SUMMARY_TAX_LINE_ID
        AND AID.AWT_TAX_RATE_ID                  = WHT.TAX_RATE_ID
        AND AID.DETAIL_TAX_LINE_ID               = WHT.TAX_LINE_ID	
	AND NVL(WHT.CANCEL_FLAG,'N')             = 'N' 								
	AND (WHT.TAX_RATE_ID                     = ZRB.TAX_RATE_ID -- for new tax rates or migrated schedule rates
	OR (WHT.TAX_RATE_ID                      = ZRB.SOURCE_ID   -- for migrated flat rates -- start
	AND ZRB.EFFECTIVE_FROM                  <= AID.ACCOUNTING_DATE
	AND NVL(ZRB.EFFECTIVE_TO, AID.ACCOUNTING_DATE) >= AID.ACCOUNTING_DATE -- for migrated flat rates -- end
	  ) )
	AND ZTV.TAX_REGIME_CODE  = ZRB.TAX_REGIME_CODE -- fetch tax_full_name
	AND ZTV.TAX              = ZRB.TAX
	AND ZTV.CONTENT_OWNER_ID = ZRB.CONTENT_OWNER_ID
     &LV_WHERE_CLAUSE
  ) order by 1,5,7,9
 ===========================================================================================================================
 select 	PHA.type_lookup_code																			document_type
	   ,'FUSION_GNFR'																					source
	   ,FAB.bu_name																						operating_unit
	   ,PHA.segment1																					document_num
	   ,PHA.currency_code																				currency_code
	   ,PHA.rate_type																					rate_type
	   ,TO_CHAR(PHA.rate_date, 'DD/MM/YYYY')															rate_date
	   ,PHA.rate																						rate
	   ,(select PPN.display_name
		   from per_person_names_f PPN
		  where PPN.name_type = 'GLOBAL'
		    and PPN.person_id = PHA.agent_id
			and trunc(sysdate) between PPN.effective_start_date
								   and PPN.effective_end_date)											buyer_name
	   ,PSV.vendor_name																					supplier_name
	   ,PSSV.vendor_site_code																			vendor_site_code
	   ,(select HLA.location_code
	       from hr_locations_all HLA
		  where HLA.location_id = PHA.bill_to_location_id)												bill_to_location
	   ,(select HLA.location_code
	       from hr_locations_all HLA
		  where HLA.location_id = PHA.ship_to_location_id)												ship_to_location
	   ,PHA.document_status																				approval_status
	   ,TO_CHAR(PHA.approved_date, 'DD/MM/YYYY')														approved_date
	   ,(select ATT.name 
		   from ap_terms_tl ATT
	      where ATT.language = 'US'
		    and ATT.term_id = PHA.terms_id)																payment_terms
	   ,((select HP.party_name
		   from hz_parties HP
		  where HP.party_id = PHA.carrier_id)||
		  DECODE(NVL(PHA.mode_of_transport, 'X'), 'X', '', '-')||PHA.mode_of_transport||
		  DECODE(NVL(PHA.service_level, 'X'), 'X', '', '-')||PHA.service_level)							shipping_method
	   ,PLA.line_num																					line_num
	   ,PLT.line_type 																					line_type
	   ,(select item_number
	       from egp_system_items_b ESI
		  where ESI.inventory_item_id = PLA.item_id
		    and rownum = 1)																				item_code
	   ,PLA.item_description																			item_description
	   ,PLA.uom_code																					uom_code
	   ,PLA.quantity																					quantity
	   ,PLA.unit_price																					unit_price
	   ,PLA.list_price																					list_price
	   ,(SELECT category_code
		   FROM egp_categories_b EC
		  WHERE EC.category_id = PLA.category_id)														category_code
	   ,PLA.note_to_vendor																				note_to_vendor
	   ,((NVL(PLA.quantity, 1) * NVL(PLA.unit_price, PLA.list_price)) + 
	    NVL((select sum(Zl.tax_amt)
			   from zx_lines ZL
			  where ZL.application_id = 201
				and ZL.entity_code = 'PURCHASE_ORDER'
				and ZL.trx_id = PHA.po_header_id
				and ZL.trx_line_id = PLLA.line_location_id
				and ZL.tax_line_id = (select max(ZL1.tax_line_id)
										from zx_lines ZL1
									   where ZL1.application_id = 201
									     and ZL1.entity_code = 'PURCHASE_ORDER'
										 and ZL1.trx_id = PHA.po_header_id
										 and ZL1.trx_line_id = PLLA.line_location_id)
			), 0))																						amount
	   ,(select DECODE(taxable_flag, 'Y', 'YES', 'N', 'NO', 'NO')
	       from egp_system_items_b ESI
		  where ESI.inventory_item_id = PLA.item_id
		    and rownum = 1)																				taxable_flag
	   ,(select Zl.tax
		   from zx_lines ZL
		  where ZL.application_id = 201
		    and ZL.entity_code = 'PURCHASE_ORDER'
			and ZL.trx_id = PHA.po_header_id
			and ZL.trx_line_id = PLLA.line_location_id
			and ZL.tax_line_id = (select max(ZL1.tax_line_id)
										from zx_lines ZL1
									   where ZL1.application_id = 201
									     and ZL1.entity_code = 'PURCHASE_ORDER'
										 and ZL1.trx_id = PHA.po_header_id
										 and ZL1.trx_line_id = PLLA.line_location_id))					tax_name
	   ,(select Zl.tax_rate_code
		   from zx_lines ZL
		  where ZL.application_id = 201
		    and ZL.entity_code = 'PURCHASE_ORDER'
			and ZL.trx_id = PHA.po_header_id
			and ZL.trx_line_id = PLLA.line_location_id
			and ZL.tax_line_id = (select max(ZL1.tax_line_id)
										from zx_lines ZL1
									   where ZL1.application_id = 201
									     and ZL1.entity_code = 'PURCHASE_ORDER'
										 and ZL1.trx_id = PHA.po_header_id
										 and ZL1.trx_line_id = PLLA.line_location_id))					tax_rate_code
	   ,PLLA.shipment_num																				shipment_num
	   ,PLLA.quantity																					shipment_quantity
	   ,(select IOP.organization_code 
		   from inv_org_parameters IOP
		  where IOP.organization_id = PLLA.ship_to_organization_id) 									ship_to_organization_code
	   ,(select HLA.location_code
	       from hr_locations_all HLA
		  where HLA.location_id = PLLA.ship_to_location_id)												ship_location_code
	   ,TO_CHAR(PLLA.promised_date, 'DD/MM/YYYY')														promised_date
	   ,TO_CHAR(PLLA.need_by_date, 'DD/MM/YYYY')														requested_delivery_date
	   ,PLLA.days_early_receipt_allowed																	early_receipt_tolerance_days
	   ,PLLA.days_late_receipt_allowed																	late_receipt_tolerance_days
	   ,PLLA.receive_close_tolerance																	receipt_close_tolerance_percent
	   ,PLLA.qty_rcv_tolerance 																			over_receipt_tolerance_percent
	   ,PLLA.qty_rcv_exception_code																		over_receipt_action
	   ,(select FLV.meaning from fnd_lookup_values FLV
		  where FLV.lookup_type = 'RCV_ROUTING_HEADERS'
		    and FLV.language = 'US' 
			and FLV.enabled_flag = 'Y'
			and FLV.lookup_code = PLLA.receiving_routing_id)											receipt_routing
	   ,(select FLV.meaning from fnd_lookup_values FLV
		  where FLV.lookup_type = 'PO INVOICE MATCH OPTION'
		    and FLV.language = 'US' 
			and FLV.enabled_flag = 'Y'
			and FLV.lookup_code = PLLA.match_option)													invoice_match_option
	   ,case when PLLA.receipt_required_flag = 'N' then 
					'2-Way'
			 when PLLA.receipt_required_flag = 'Y' 
				  and PLLA.inspection_required_flag = 'N' then 
					'3-Way'
			 else '2-Way' 
		 end 																							match_approval_level
	   ,PLLA.invoice_close_tolerance																	invoice_close_tolerance_percent
	   ,PLLA.accrue_on_receipt_flag																		accrue_at_receipt
	   ,PLLA.note_to_receiver																			note_to_receiver
	   ,PDA.distribution_num																			distribution_num
	   ,PDA.quantity_ordered																			quantity_ordered
	   ,PDA.quantity_delivered																			quantity_delivered
	   ,PDA.quantity_billed																				quantity_billed
	   ,PDA.quantity_cancelled																			quantity_cancelled
	   ,(select HLA.location_code
	       from hr_locations_all HLA
		  where HLA.location_id = PDA.deliver_to_location_id)											deliver_to_location
	   ,PDA.destination_type_code																		destination_type
	   ,PDA.attribute_category																			DFF_Context
	   ,PDA.attribute1
	   ,PDA.attribute2
	   ,PDA.attribute3
	   ,PDA.attribute4
	   ,PDA.attribute5
	   ,PDA.attribute6
	   ,PDA.attribute7
	   ,PDA.attribute8
	   ,PDA.attribute9
	   ,PDA.attribute10
	   ,PDA.attribute11
	   ,PDA.attribute12
	   ,PDA.attribute13
	   ,PDA.attribute14
	   ,PDA.attribute15
	   ,(select IOP.organization_code 
		   from inv_org_parameters IOP
		  where IOP.organization_id = PDA.destination_organization_id) 									destination_organization
	   ,(select segment1||'-'||segment2||'-'||segment3||'-'||segment4||'-'||segment5||'-'||segment6||'-'||segment7||'-'||segment8||'-'||segment9
	       from gl_code_combinations GCC
		  where GCC.code_combination_id = PDA.code_combination_id) 										charge_account
	   ,(select segment1||'-'||segment2||'-'||segment3||'-'||segment4||'-'||segment5||'-'||segment6||'-'||segment7||'-'||segment8||'-'||segment9
	       from gl_code_combinations GCC
		  where GCC.code_combination_id = PDA.accrual_account_id) 										accrual_account
	   ,(select segment1||'-'||segment2||'-'||segment3||'-'||segment4||'-'||segment5||'-'||segment6||'-'||segment7||'-'||segment8||'-'||segment9
	       from gl_code_combinations GCC
		  where GCC.code_combination_id = PDA.variance_account_id) 										variance_account
	   ,(select PPNF.full_name from per_person_names_f PPNF
	      where PPNF.name_type = 'GLOBAL'
		    and PPNF.person_id = PDA.deliver_to_person_id
		    and TRUNC(sysdate) between PPNF.effective_start_date 
								   and PPNF.effective_end_date) 										deliver_to_person
  from po_headers_all 				PHA
	  ,poz_suppliers_v 				PSV
	  ,poz_supplier_sites_v			PSSV
	  ,po_lines_all					PLA
	  ,po_line_types 				PLT
	  ,po_line_locations_all 		PLLA
	  ,po_distributions_all			PDA
	  ,fun_all_business_units_v		FAB
 where PHA.prc_bu_id = FAB.bu_id
   and PHA.vendor_id = PSV.vendor_id
   and PHA.vendor_site_id = PSSV.vendor_site_id
   and PHA.po_header_id = PLA.po_header_id
   and PLA.line_type_id = PLT.line_type_id
   and PLA.po_line_id = PLLA.po_line_id
   and PDA.line_location_id = PLLA.line_location_id
   and PDA.po_line_id = PLA.po_line_id
   and PHA.approved_flag = 'Y'
  --and PHA.segment1 in ('PO-100113', 'PO-100112')
 ======================================================================================================================
 SELECT   pha.po_header_id || '-' || pv.revision_num po_hdr_rev, pha.po_header_id, prha.requisition_header_id, hou.NAME ou_name,
         prha.requisition_number pr_number, 
         --TO_CHAR (prha.creation_date, 'DD/MM/RRRR') pr_date,
         TO_CHAR( FROM_TZ( CAST(prha.creation_date AS TIMESTAMP), 'UTC' ) AT TIME ZONE NVL(HRL.TIMEZONE_CODE,'Asia/Kolkata'),
        'DD/MM/RRRR HH:MI:SS AM', 'NLS_DATE_LANGUAGE=AMERICAN' ) pr_date,
         prha.description pr_desc,
         (NVL (SUM (prla.unit_price), 0) * NVL (SUM (prla.quantity), 0)) pr_total_amount,
         (SELECT MAX (display_name)
            FROM per_person_names_f
           WHERE person_id = prha.preparer_id AND name_type = 'IN') pr_rasied_by,
         (SELECT --MAX (TO_CHAR (action_date, 'dd/mm/yyyy hh24:mi')) req_apprv_dt
         MAX(TO_CHAR( FROM_TZ( CAST(action_date AS TIMESTAMP), 'UTC' ) AT TIME ZONE NVL(HRL.TIMEZONE_CODE,'Asia/Kolkata'),
        'DD/MM/RRRR HH:MI:SS AM', 'NLS_DATE_LANGUAGE=AMERICAN' )) req_apprv_dt
            FROM po_action_history
           WHERE object_type_code = 'REQ' AND action_code = 'APPROVE' AND object_id = prha.requisition_header_id) req_apprv_dt,
         pha.segment1 po_number, 
         --TO_CHAR (pha.creation_date, 'DD/MM/RRRR HH:MI:SS AM', 'NLS_DATE_LANGUAGE=AMERICAN') po_date,
         TO_CHAR( FROM_TZ( CAST(pha.creation_date AS TIMESTAMP), 'UTC' ) AT TIME ZONE NVL(HRL.TIMEZONE_CODE,'Asia/Kolkata'),
        'DD/MM/RRRR HH:MI:SS AM', 'NLS_DATE_LANGUAGE=AMERICAN' ) po_date,    
            PV.revision_num,
         TO_CHAR (pha.creation_date, 'RRRR', 'NLS_DATE_LANGUAGE=AMERICAN') po_years, pha.comments po_desc, pha.type_lookup_code po_type,
         (SELECT vendor_name
            FROM poz_suppliers_v
           WHERE vendor_id = pha.vendor_id) po_vendor_name, pha.currency_code po_currency,
         (SELECT display_name
            FROM per_person_names_f 
            WHERE person_id = PHA.AGENT_ID
            AND name_type = 'IN') po_created_by,
         CASE WHEN pv.revision_num = 0
         THEN
         (SELECT MAX (ppnf.display_name)
            FROM po_action_history pah, per_person_names_f ppnf
           WHERE pah.object_type_code = 'PO'
             AND pah.object_id = pha.po_header_id
             AND action_code = 'APPROVE'
             AND role_code = 'APPROVER'
             AND pah.performer_id = ppnf.person_id
             AND ppnf.name_type = 'GLOBAL'
             AND pah.sequence_num =
                    (SELECT MAX (sequence_num)
                       FROM po_action_history pah1
                      WHERE pah1.object_type_code = 'PO'
                        AND pah1.object_id = pah.object_id
                        AND pah1.action_code = pah.action_code
                        AND pah1.role_code = pah.role_code))
         ELSE 
          NULL
         END final_po_apprv,
         CASE WHEN pv.revision_num = 0
         THEN
         (SELECT TO_CHAR (MAX (action_date), 'dd/mm/yyyy hh24:mi')
            FROM po_action_history pah
           WHERE pah.object_type_code = 'PO'
             AND pah.object_id = pha.po_header_id
             AND action_code = 'APPROVE'
             AND role_code = 'APPROVER'
             AND pah.sequence_num =
                    (SELECT MAX (sequence_num)
                       FROM po_action_history pah1
                      WHERE pah1.object_type_code = 'PO'
                        AND pah1.object_id = pah.object_id
                        AND pah1.action_code = pah.action_code
                        AND pah1.role_code = pah.role_code)) 
        ELSE 
          NULL
         END final_po_apprv_dt,
         NVL (SUM (pla.unit_price * pla.quantity), 0) po_amount, NVL ((SELECT SUM (amount)
                                                                         FROM ap_invoice_lines_all aila
                                                                        WHERE 1 = 1 AND aila.po_header_id = pha.po_header_id), 0) paid_amount,
         (NVL (SUM (pla.unit_price * pla.quantity), 0) - NVL ((SELECT SUM (amount)
                                                                 FROM ap_invoice_lines_all aila
                                                                WHERE 1 = 1 AND aila.po_header_id = pha.po_header_id), 0)) bal_amount,
         pha.document_status closure_status, (SELECT change_order_desc
                                                FROM po_versions pv
                                               WHERE pv.po_header_id = pha.po_header_id AND pv.revision_num = pha.revision_num) reason_fr_amend,
         (SELECT display_name
            FROM per_users pu, po_versions pv, per_person_names_f ppf
           WHERE pu.username = pv.last_updated_by
             AND pu.person_id = ppf.person_id
             AND ppf.name_type = 'GLOBAL'
             AND pv.revision_num = pha.revision_num
             AND pv.po_header_id = pha.po_header_id) po_amended_raised_by,
         CASE WHEN pv.revision_num > 0
         THEN
         (SELECT MAX(ppnf.display_name)
            FROM po_action_history pah,
            po_versions pv,
            per_person_names_f ppnf            
            WHERE pah.object_id = pv.po_header_id
             AND pah.po_version_id = pv.version_id
             AND pah.performer_id = ppnf.person_id
             AND pah.object_id = pha.po_header_id
             AND pah.object_type_code = 'PO'
             AND action_code = 'APPROVE'
             AND role_code = 'APPROVER'
             AND ppnf.name_type = 'GLOBAL'
             AND pv.revision_num > 0
            AND pah.sequence_num IN (SELECT MAX(PAH1.sequence_num)
                                    FROM po_action_history PAH1,
                                    po_versions pv
                                   WHERE PAH1.object_id = pv.po_header_id
                                     AND PAH1.po_version_id = pv.version_id
                                     AND PAH1.object_id= pah.object_id 
                                     AND PAH1.object_type_code = 'PO'
                                     AND PAH1.action_code = PAH.action_code
                                     AND PAH1.role_code = PAH.role_code
                                     AND pv.revision_num > 0))
            else 
             null
            end Amd_final_po_apprv,
         CASE WHEN pv.revision_num > 0
         THEN
         (SELECT TO_CHAR (MAX (action_date), 'dd/mm/yyyy hh24:mi')
            FROM po_action_history pah, po_versions pv
           WHERE pah.object_id = pv.po_header_id
             AND pah.po_version_id = pv.version_id
             AND pah.object_id = 300000005537848--pha.po_header_id
             AND pah.object_type_code = 'PO'
             AND action_code = 'APPROVE'
             AND role_code = 'APPROVER'
             AND pv.revision_num <> 0
             AND pah.sequence_num = (SELECT MAX(PAH1.sequence_num)
                                    FROM po_action_history PAH1,
                                    po_versions pv
                                   WHERE PAH1.object_id = pv.po_header_id
                                     AND PAH1.po_version_id = pv.version_id
                                     AND PAH1.object_id= pah.object_id 
                                     AND PAH1.object_type_code = 'PO'
                                     AND PAH1.action_code = PAH.action_code
                                     AND PAH1.role_code = PAH.role_code
                                     AND pv.revision_num > 0))
        else 
        null
        end Amd_final_po_apprv_dt
    FROM por_requisition_headers_all prha,
         por_requisition_lines_all prla,
         por_req_distributions_all prda,
         po_headers_all pha,
         po_lines_all pla,
         po_distributions_all pda,
         hr_operating_units hou,
       HR_ALL_ORGANIZATION_UNITS HAOU,
       HR_LOCATIONS HRL,
       PO_VERSIONS PV
   WHERE 1 = 1
     AND prha.requisition_header_id = prla.requisition_header_id
     AND prha.req_bu_id = prla.req_bu_id
     AND prla.requisition_line_id = prda.requisition_line_id
     AND prda.distribution_id = pda.req_distribution_id
     AND pda.po_header_id = pha.po_header_id
     AND pda.po_line_id = pla.po_line_id
     AND hou.organization_id = prha.req_bu_id
     AND (hou.NAME IN (:p_ou_name) OR 'All' IN (:p_ou_name || 'All'))
     AND TRUNC (prha.creation_date) >= :p_from_date
     AND TRUNC (prha.creation_date) <= :p_to_date
     AND HOU.ORGANIZATION_ID = HAOU.ORGANIZATION_ID
     AND HAOU.LOCATION_ID = HRL.LOCATION_ID
     --AND PHA.SEGMENT1 = 'CRL1101531'
     AND PHA.PO_HEADER_ID = PV.PO_HEADER_ID
--       AND PHA.REVISION_NUM = PV.REVISION_NUM
     AND PHA.REVISION_NUM > 0
     AND PV.REVISION_NUM is not null
GROUP BY pha.po_header_id,
         pla.po_line_id,
         prha.requisition_header_id,
         hou.NAME,
         prha.requisition_number,
         prha.creation_date,
         prha.description,
         prha.preparer_id,
         prha.requisition_header_id,
         pha.segment1,
         pha.creation_date,
         pha.revision_num,
         pv.revision_num,
         pha.comments,
         pha.type_lookup_code,
         pha.vendor_id,
         pha.currency_code,    
         HRL.TIMEZONE_CODE,
         pha.agent_id,
         pha.document_status
order by pha.po_header_id,pv.revision_num




/*DM2*/
SELECT
A.PO_HEADER_ID || '-' || A.REVISION_NUM PO_HDR_REV,
A.PO_HEADER_ID,
A.PO_APPRV_DT,
A.PO_APPRV_NAME,
A.ROW_NUM 
FROM
(
SELECT OBJECT_ID PO_HEADER_ID,
		PAH.PO_VERSION_ID,
		(SELECT PV.REVISION_NUM FROM PO_VERSIONS PV
		WHERE PV.VERSION_ID = PAH.PO_VERSION_ID) REVISION_NUM,
       to_char(ACTION_DATE,'dd/mm/yyyy hh24:mi') PO_APPRV_DT,
       NVL((SELECT MAX(PPNF.DISPLAY_NAME)
       FROM PER_PERSON_NAMES_F PPNF
       WHERE PERSON_ID = PAH.PERFORMER_ID
       AND name_type = 'GLOBAL'),ROLE_CODE) PO_APPRV_NAME,
       ROW_NUMBER() OVER (PARTITION BY OBJECT_ID ORDER BY sequence_num) ROW_NUM
FROM PO_ACTION_HISTORY PAH
WHERE OBJECT_TYPE_CODE = 'PO'
AND ACTION_CODE = 'APPROVE'
AND ROLE_CODE = 'APPROVER'
--AND PAH.OBJECT_ID = 300000005537848
AND PAH.PO_VERSION_ID NOT IN (SELECT PV.VERSION_ID
								FROM PO_ACTION_HISTORY PAH,
								PO_VERSIONS PV
								WHERE 1=1
								AND PAH.OBJECT_ID = PV.PO_HEADER_ID
								AND PAH.PO_VERSION_ID = PV.VERSION_ID
								AND PAH.OBJECT_TYPE_CODE = 'PO'
								AND PAH.ACTION_CODE = 'APPROVE'
								AND PAH.ROLE_CODE = 'APPROVER'
								--AND PAH.OBJECT_ID = 300000005537848
								AND PV.REVISION_NUM > 0)				
)	A
WHERE A.ROW_NUM < 15

/*DM3*/

SELECT
A.PO_HEADER_ID || '-' || A.REVISION_NUM PO_HDR_REV,
A.PO_HEADER_ID,
A.PO_AMD_APPRV_DT,
A.PO_AMD_APPRV_NAME,
A.ROW_NUM 
FROM
(
SELECT OBJECT_ID PO_HEADER_ID,
PV.REVISION_NUM REVISION_NUM,
TO_CHAR(ACTION_DATE,'dd/mm/yyyy hh24:mi') PO_AMD_APPRV_DT,
       NVL((SELECT MAX(PPNF.DISPLAY_NAME)
       FROM PER_PERSON_NAMES_F PPNF
       WHERE PERSON_ID = PAH.PERFORMER_ID
       AND name_type = 'GLOBAL'),ROLE_CODE) PO_AMD_APPRV_NAME,
       ROW_NUMBER() OVER (PARTITION BY OBJECT_ID,PV.REVISION_NUM ORDER BY sequence_num) ROW_NUM
FROM PO_ACTION_HISTORY PAH,
PO_VERSIONS PV
WHERE 1=1
AND PAH.OBJECT_ID = PV.PO_HEADER_ID
AND PAH.PO_VERSION_ID = PV.VERSION_ID
AND PAH.OBJECT_TYPE_CODE = 'PO'
AND PAH.ACTION_CODE = 'APPROVE'
AND PAH.ROLE_CODE = 'APPROVER'
--AND PV.PO_HEADER_ID =  300000004221501
AND PV.REVISION_NUM <> 0
) A
WHERE A.ROW_NUM < 15
==========================================================================================================================================
select PLA.line_num
	  ,REQ.requisition_number
	  ,REQ.ref_requisition_number
	  ,PHA.segment1 purchase_order
	  ,FAB.bu_name procurement_bu
	  ,(select FAB.bu_name 
	      from fun_all_business_units_v FAB
		 where FAB.bu_id = PHA.req_bu_id) requisition_bu
	  ,PLA.line_status
	  ,(select PPN.display_name 
	      from per_person_names_f PPN
	     where PPN.person_id = PHA.agent_id
		   and PPN.name_type = 'GLOBAL'
		   and trunc(sysdate) between PPN.effective_start_date and PPN.effective_end_date) buyer
	  ,(select PPN.display_name 
	      from per_person_names_f PPN
	     where PPN.person_id = REQ.preparer_id
		   and PPN.name_type = 'GLOBAL'
		   and trunc(sysdate) between PPN.effective_start_date and PPN.effective_end_date) requester
	  ,(select ESI.item_number
	      from egp_system_items_b ESI
		 where ESI.inventory_item_id = PLA.item_id
		   and ESI.inventory_organization_id = PLLA.ship_to_organization_Id) item_code
	  ,PLA.item_description
	  ,(select EC.category_code
	      from egp_categories_b EC
		 where EC.category_id = PLA.category_id) category_code
	  ,PLA.quantity
      ,(select IUM.unit_of_measure 
	      from inv_units_of_measure_vl  IUM
		 where IUM.uom_code = PLA.uom_code) uom_code
	  ,PSV.vendor_name
	  ,PSSV.vendor_site_code
	  ,PHA.currency_code
	  ,(select SUM(ZL.tax_amt)
	      from zx_lines ZL
		 where ZL.application_id = 201
		   and ZL.entity_code = 'PURCHASE_ORDER'
		   and ZL.trx_id = PHA.po_header_id
		   and ZL.trx_line_id = PLLA.line_location_id) total_tax
	  ,(NVL(PLA.quantity, 1) * NVL(PLA.unit_price, PLA.list_price)) total
	  ,TO_CHAR(PHA.creation_date, 'DD-MON-YYYY') creation_date	  
  from po_headers_all PHA
	  ,po_lines_all PLA
	  ,po_line_locations_all PLLA
	  ,po_distributions_all PDA
	  ,poz_suppliers_v PSV
	  ,poz_supplier_sites_all_m		PSSV
	  ,fun_all_business_units_v	FAB
	  ,(select PRD.distribution_id
			  ,PRH.requisition_number
			  ,PRH.attribute2 ref_requisition_number
			  ,PRH.preparer_id
		  from por_requisition_headers_all PRH
			  ,por_requisition_lines_all PRL
			  ,por_req_distributions_all PRD
		 where PRH.requisition_header_id = PRL.requisition_header_id
		   and PRL.requisition_line_id = PRD.requisition_line_id) REQ
 where PHA.vendor_id = PSV.vendor_id
   and PHA.vendor_site_id = PSSV.vendor_site_id
   and PHA.prc_bu_id = FAB.bu_id
   and PHA.po_header_id = PLA.po_header_id
   and PLA.po_line_id = PLLA.po_line_id
   and PLLA.line_location_id = PDA.line_location_id
   and PLLA.po_line_id = PDA.po_line_id
   and PDA.req_distribution_id = REQ.distribution_id(+)
   and PHA.approved_flag = 'Y'
   and FAB.bu_name = NVL(:p_bu_name, FAB.bu_name)
   and trunc(PHA.approved_date) between :p_date_from and :p_date_to
order by PHA.segment1, PLA.line_num
===========================================================================================================================
select * from
(
Select 
hp.party_number "Party Number",
ho.EXTN_ATTRIBUTE_CHAR006 "Registry Party Id",
hp.party_name "Party Name",
'Additional_Party_Names' "Object",
hapn.party_name_type"Type",
'' "Purpose",
'' "Primary",
hapn.status_flag "Status Flag",
'' "From Date",
'' "To Date",
hapn.party_name "Additional Name",
'' "Address Line 1",
'' "Address Line 2",
'' "Address Line 3",
'' "City",
'' "State",
'' "County",
'' "Postal Code",
'' "Country Code",
'' "Party Site Number",
'' "Phone - Country Code",
'' "Phone - Area Code",
'' "Phone-Number",
'' "Phone - Extension",
'' "Email",
hp.party_id "Party ID",
HO.ORGANIZATION_PROFILE_ID "Organization Profile ID",
TO_CHAR(hapn.PARTY_NAME_ID) "Addnl Party Name ID",
''  "Party Location ID",
'' "Contact Point ID"
from 
hz_parties hp,
hz_addtnl_party_names hapn,
hz_organization_profiles ho
where
hp.party_id = hapn.party_id
and hp.party_id = ho.party_id
--and hp.party_name = 'POC - HERMANN OPTIKA--P10613476'
and ho.EXTN_ATTRIBUTE_CHAR004 = 'Y'
UNION
Select 
hp.party_number "Party Number",
ho.EXTN_ATTRIBUTE_CHAR006 "Registry Party Id",
hp.party_name "Party Name",
'Additional_Party_Address' "Object",
'ADDRESS' "Type",
'LEGAL' "Purpose",
hps.OVERALL_PRIMARY_FLAG "Primay",
hl.status_flag "Status Flag",
TO_CHAR(hps.START_DATE_ACTIVE,'mm/dd/yyyy') "From Date",
DECODE(TO_CHAR(hps.END_DATE_ACTIVE,'mm/dd/yyyy'),'12/31/4712','',TO_CHAR(hps.END_DATE_ACTIVE,'mm/dd/yyyy')) "To Date",
'' "Additional Name",
hl.address1 "Address Line 1",
hl.address2 "Address Line 2",
hl.address3 "Address Line 3",
hl.city "City",
hl.state "State",
hl.county "County",
hl.postal_code "Postal Code",
hl.country "Country Code",
hps.party_site_number "Party Site Number",
'' "Phone - Country Code",
'' "Phone - Area Code",
'' "Phone-Number",
'' "Phone - Extension",
'' "Email",
hp.party_id "Party ID",
HO.ORGANIZATION_PROFILE_ID "Organization Profile ID",
'' "Addnl Party Name ID",
TO_CHAR(HPS.LOCATION_ID)  "Party Location ID",
'' "Contact Point ID"
from 
hz_parties hp,
hz_party_sites hps,
hz_locations hl,
hz_organization_profiles ho
where
hp.party_id = hps.party_id
and hps.location_id = hl.location_id
and hp.party_id = ho.party_id
and ho.EXTN_ATTRIBUTE_CHAR004 = 'Y'
--and hp.party_name = 'POC - HERMANN OPTIKA--P10613476'
UNION
Select 
hp.party_number "Party Number",
ho.EXTN_ATTRIBUTE_CHAR006 "Registry Party Id",
hp.party_name "Party Name",
'Additional_Party_Phone' "Object",
DECODE(hcp.phone_type,'WORK','LAND','HOME','LAND',hcp.phone_type) "Type",
/* decode(hcp.contact_point_purpose,'PERSONAL','Home','BUSINESS','Work') "Purpose", Commented by Sudipta on 07-28-2022 */
(select description from fnd_lookup_values flv where flv.lookup_type = 'PARTY_PROFILE_PUBLISH_EMAIL' and flv.language = 'US' and flv.meaning = hcp.contact_point_purpose) "Purpose",
hcp.primary_flag "Primary",
hcp.status "Status Flag",
TO_CHAR(hcp.START_DATE,'mm/dd/yyyy') "  ",
DECODE(TO_CHAR(hcp.END_DATE,'mm/dd/yyyy'),'12/31/4712','',TO_CHAR(hcp.END_DATE,'mm/dd/yyyy')) "To Date",
'' "Additional Name",
'' "Address Line 1",
'' "Address Line 2",
'' "Address Line 3",
'' "City",
'' "State",
'' "County",
'' "Postal Code",
'' "Country Code",
'' "Party Site Number",
hcp.phone_country_code "Phone - Country Code",
hcp.PHONE_AREA_CODE "Phone - Area Code",
hcp.PHONE_NUMBER "Phone-Number",
hcp.phone_extension "Phone - Extension",
'' "Email",
hp.party_id "Party ID",
HO.ORGANIZATION_PROFILE_ID "Organization Profile ID",
'' "Addnl Party Name ID",
''  "Party Location ID",
TO_CHAR(hcp.CONTACT_POINT_ID) "Contact Point ID"
from
hz_parties hp,
hz_contact_points hcp,
hz_organization_profiles ho
where
hp.party_id = hcp.owner_table_id(+)
and hp.party_id = ho.party_id
and hcp.owner_table_name(+) = 'HZ_PARTIES'
and hcp.contact_point_type(+) = 'PHONE'
and ho.EXTN_ATTRIBUTE_CHAR004 = 'Y'
--and hp.party_name = 'POC - HERMANN OPTIKA--P10613476'
UNION
Select 
hp.party_number "Party Number",
ho.EXTN_ATTRIBUTE_CHAR006 "Registry Party Id",
hp.party_name "Party Name",
'Additional_Party_Email' "Object",
hcp.contact_point_type "Type",
/* decode(hcp.contact_point_purpose,'PERSONAL','Home','BUSINESS','Work') "Purpose",Commented by Sudipta on 07-28-2022 */
(select description from fnd_lookup_values flv where flv.lookup_type = 'PARTY_PROFILE_PUBLISH_EMAIL' and flv.language = 'US' and flv.meaning = hcp.contact_point_purpose) "Purpose",
hcp.primary_flag "Primary",
hcp.status "Status Flag",
TO_CHAR(hcp.START_DATE,'mm/dd/yyyy') "From Date",
DECODE(TO_CHAR(hcp.END_DATE,'mm/dd/yyyy'),'12/31/4712','',TO_CHAR(hcp.END_DATE,'mm/dd/yyyy')) "To Date",
'' "Additional Name",
'' "Address Line 1",
'' "Address Line 2",
'' "Address Line 3",
'' "City",
'' "State",
'' "County",
'' "Postal Code",
'' "Country Code",
'' "Party Site Number",
'' "Phone - Country Code",
'' "Phone - Area Code",
'' "Phone-Number",
'' "Phone - Extension",
hcp.email_address "Email",
hp.party_id "Party ID",
HO.ORGANIZATION_PROFILE_ID "Organization Profile ID",select HZ.PARTY_TYPE "Party Usage", 
HZ.PARTY_NUMBER "Party Number",
HO.EXTN_ATTRIBUTE_CHAR006 "Registry Party ID",
HZ.party_name "Party Name",
DECODE(HO.SALES_PROFILE_TYPE,'ZCA_CUSTOMER','Customer','ZCA_BUYING_SOURCE','Buying Source')  "Party Type",
--HZ.STATUS "Party Status",
(SELECT (SELECT MEANING FROM FND_LOOKUPS WHERE LOOKUP_TYPE='ZCA_SALES_ACCOUNT_STATUS'
AND LOOKUP_CODE=SALES_ACCOUNT_STATUS) 
FROM HZ_PARTIES HP, ZCA_SALES_ACCOUNTS ZCA
WHERE HP.PARTY_ID = ZCA.PARTY_ID
AND ZCA.PARTY_ID= HZ.PARTY_ID) "Party Status",
(SELECT HZ1.PARTY_NUMBER
FROM FND_TREE_NODE,HZ_PARTIES HZ1
	WHERE TREE_STRUCTURE_CODE = 'HZ_CUSTOMER_HIERARCHY' AND 
	TO_CHAR(HZ1.PARTY_ID)=PARENT_PK1_VALUE and
	PK1_START_VALUE=TO_CHAR(HZ.PARTY_ID)
	) "Parent Party Number",
(SELECT HO1.EXTN_ATTRIBUTE_CHAR006
FROM FND_TREE_NODE,HZ_PARTIES HZ1,HZ_ORGANIZATION_PROFILES HO1
	WHERE TREE_STRUCTURE_CODE = 'HZ_CUSTOMER_HIERARCHY' AND 
	TO_CHAR(HZ1.PARTY_ID)=PARENT_PK1_VALUE and
	PK1_START_VALUE=TO_CHAR(HZ.PARTY_ID)
	AND HO1.PARTY_ID=HZ1.PARTY_ID
	) "Parent Registry Party Id",
(SELECT HZ1.PARTY_NAME	
FROM FND_TREE_NODE,HZ_PARTIES HZ1
	WHERE TREE_STRUCTURE_CODE = 'HZ_CUSTOMER_HIERARCHY' AND 
	TO_CHAR(HZ1.PARTY_ID)=PARENT_PK1_VALUE and
	PK1_START_VALUE=TO_CHAR(HZ.PARTY_ID)
	) "Parent Party Name",
(SELECT HZ2.PARTY_NUMBER FROM FND_TREE_NODE_RF,
HZ_PARTIES HZ2
WHERE TREE_STRUCTURE_CODE='HZ_CUSTOMER_HIERARCHY'
AND PK1_VALUE = TO_CHAR(HZ.PARTY_ID)
AND ANCESTOR_PK1_VALUE = TO_CHAR(HZ2.PARTY_ID)
AND ANCESTOR_TREE_NODE_ID IS NOT NULL
--AND IS_LEAF = 'Y'
AND DISTANCE IN (SELECT MAX(DISTANCE) FROM FND_TREE_NODE_RF
WHERE TREE_STRUCTURE_CODE='HZ_CUSTOMER_HIERARCHY'
AND PK1_VALUE = TO_CHAR(HZ.PARTY_ID)
AND ANCESTOR_TREE_NODE_ID IS NOT NULL)) "Ultimate Party Number",
(SELECT HO1.EXTN_ATTRIBUTE_CHAR006 FROM FND_TREE_NODE_RF,HZ_ORGANIZATION_PROFILES HO1,
HZ_PARTIES HZ2
WHERE TREE_STRUCTURE_CODE='HZ_CUSTOMER_HIERARCHY'
AND PK1_VALUE = TO_CHAR(HZ.PARTY_ID)
AND ANCESTOR_PK1_VALUE = TO_CHAR(HZ2.PARTY_ID)
AND ANCESTOR_TREE_NODE_ID IS NOT NULL
--AND IS_LEAF = 'Y'
AND DISTANCE IN (SELECT MAX(DISTANCE) FROM FND_TREE_NODE_RF
WHERE TREE_STRUCTURE_CODE='HZ_CUSTOMER_HIERARCHY'
AND PK1_VALUE = TO_CHAR(HZ.PARTY_ID)
and HO1.PARTY_ID=HZ2.PARTY_ID
AND ANCESTOR_TREE_NODE_ID IS NOT NULL)) "Ultimate Registry Party Id",
(SELECT HZ2.PARTY_NAME FROM FND_TREE_NODE_RF,
HZ_PARTIES HZ2
WHERE TREE_STRUCTURE_CODE='HZ_CUSTOMER_HIERARCHY'
AND PK1_VALUE = TO_CHAR(HZ.PARTY_ID)
AND ANCESTOR_PK1_VALUE = TO_CHAR(HZ2.PARTY_ID)
AND ANCESTOR_TREE_NODE_ID IS NOT NULL
--AND IS_LEAF = 'Y'
AND DISTANCE IN (SELECT MAX(DISTANCE) FROM FND_TREE_NODE_RF
WHERE TREE_STRUCTURE_CODE='HZ_CUSTOMER_HIERARCHY'
AND PK1_VALUE = TO_CHAR(HZ.PARTY_ID)
AND ANCESTOR_TREE_NODE_ID IS NOT NULL)) "Ultimate Party Name",
HZ.JGZZ_FISCAL_CODE "Tax_Id_Number",
HZ.COMMENTS "Comments",
HZ.CREATED_BY "Created By",
HZ.CREATION_DATE "Creation Date",
HZ.LAST_UPDATED_BY "LAST Updated By",
HZ.LAST_UPDATE_DATE "Last Updated Date",
HO.EXTN_ATTRIBUTE_CHAR004 "Ready to Publish",
HU.SITE_USE_TYPE "Address Type",
HZ.COUNTRY "Country Code",
HZ.ADDRESS1 "Address Line1",
HZ.ADDRESS2 "Address Line2",
HZ.ADDRESS3 "Address Line3",
HZ.CITY "City",
HZ.COUNTY "County",
HZ.STATE "State",
HZ.POSTAL_CODE "Postal Code",
HO.PREFERRED_CONTACT_METHOD "Preferred Cont Meth",
HO.EXTN_ATTRIBUTE_CHAR007 "Party Attribute 01",
HO.EXTN_ATTRIBUTE_CHAR008 "Party Attribute 02",
HO.EXTN_ATTRIBUTE_CHAR009 "Party Attribute 03",
HO.EXTN_ATTRIBUTE_CHAR010 "Party Attribute 04",
HO.EXTN_ATTRIBUTE_NUMBER004 "Party Attribute 05",
TO_CHAR(HO.EXTN_ATTRIBUTE_TIMESTAMP002,'mm/dd/yyyy') "Party Attribute 06",
HOSR.ORIG_SYSTEM "Party Reference Name",
HOSR.ORIG_SYSTEM_REFERENCE "Party Reference Id",
TO_CHAR(HOSR.START_DATE_ACTIVE,'mm/dd/yyyy') "Party Ref Start Date",
TO_CHAR(HOSR.END_DATE_ACTIVE,'mm/dd/yyyy')  "Party Ref End Date",
HOSR.REASON_CODE "Party Ref Comments",
SVC.RECORD_NAME "Account_Number",
SVC.EXTN_ATTRIBUTE_CHAR007 "Registry Account Id",
SVC.EXTN_ATTRIBUTE_CHAR008 "Account Name",
SVC.EXTN_ATTRIBUTE_CHAR009 "Account English Name",
SVC.EXTN_ATTRIBUTE_CHAR010 "Account Class",
--DECODE(SVC.EXTN_ATTRIBUTE_CHAR011,'ACTIVE','A','INACTIVE','I','ERROR','E')  "Account Status",
SVC.EXTN_ATTRIBUTE_CHAR011 "Account Status",
SVC.EXTN_ATTRIBUTE_CHAR012 "Registration ID Type",
SVC.EXTN_ATTRIBUTE_CHAR013 "Registration ID Number",
--SVC.EXTN_ATTRIBUTE_CHAR014 "Operating Unit",
SVC.EXTN_ATTRIBUTE_CHAR063 "Operating Unit",
(select  distinct MEANING from 
 fnd_lookup_values,HZ_REF_ENTITIES SVC1,HZ_PARTIES HZ
where lookup_type='CVI_CHANNEL' 
AND LOOKUP_CODE=SVC.EXTN_ATTRIBUTE_CHAR020  
and SVC1.EXTN_ATTRIBUTE_NUMBER001=HZ.PARTY_ID) "Channel",
(select  distinct MEANING from 
 fnd_lookup_values,HZ_REF_ENTITIES SVC1,HZ_PARTIES HZ
where lookup_type='CVI_SUB_CHANNEL' 
AND LOOKUP_CODE=SVC.EXTN_ATTRIBUTE_CHAR021			 
and SVC1.EXTN_ATTRIBUTE_NUMBER001=HZ.PARTY_ID) "Sub Channel",
SVC.EXTN_ATTRIBUTE_CHAR022 "Legacy LOB Code",
SVC.EXTN_ATTRIBUTE_CHAR023 "Legacy LOB Description",
SVC.EXTN_ATTRIBUTE_CHAR024 "Self Bill To",
SVC.EXTN_ATTRIBUTE_CHAR025 "Self Ship To",
SVC.EXTN_ATTRIBUTE_CHAR038 "Account BP ID",
SVC.EXTN_ATTRIBUTE_CHAR039 "Account Store Number",
SVC.EXTN_ATTRIBUTE_CHAR041 "Account Fitting Location",
SVC.EXTN_ATTRIBUTE_CHAR042 "Account Preferred Language",
SVC.EXTN_ATTRIBUTE_CHAR040 "Account EDI Location",
SVC.EXTN_ATTRIBUTE_CHAR044 "Account Type",
SVC.EXTN_ATTRIBUTE_CHAR037 "Account Attribute 01",
SVC.EXTN_ATTRIBUTE_CHAR036 "Account Attribute 02",
SVC.EXTN_ATTRIBUTE_CHAR035 "Account Attribute 03",
SVC.EXTN_ATTRIBUTE_CHAR034 "Account Attribute 04",
SVC.EXTN_ATTRIBUTE_NUMBER006 "Account Attribute 05",
SVC.EXTN_ATTRIBUTE_TIMESTAMP001 "Account Attribute 06",
MKT.ID "Account reference ID",
MKT.EXTN_ATTRIBUTE_CHAR006 "Account Source System",
MKT.EXTN_ATTRIBUTE_CHAR007 "Account Source System Ref Value",
MKT.EXTN_ATTRIBUTE_TIMESTAMP001 "Account Ref Start Date",
MKT.EXTN_ATTRIBUTE_TIMESTAMP002 "Account Ref End Date",
HL.ADDR_ELEMENT_ATTRIBUTE1 "Party Site Name",
HL.ADDR_ELEMENT_ATTRIBUTE2 "Party Site ID",
SVC.EXTN_ATTRIBUTE_CHAR053 "Store",
SVC.EXTN_ATTRIBUTE_CHAR052 "EDI",
SVC.EXTN_ATTRIBUTE_CHAR051 "Account Summary Comments",
SVC.EXTN_ATTRIBUTE_CHAR055 "EDI Usage ID",
SVC.EXTN_ATTRIBUTE_CHAR057 "Store Usage ID",
SVC.EXTN_ATTRIBUTE_CHAR054 "Bill To Usage ID",
SVC.EXTN_ATTRIBUTE_CHAR056 "Ship To Usage ID",
HU.BEGIN_DATE "Address From Date",
HU.END_DATE "Address To Date",
HZ.URL "URL",
HZ.PRIMARY_EMAIL_CONTACT_PT_ID,
HZ.PRIMARY_URL_CONTACT_PT_ID,
HO.PRINCIPAL_TITLE "Principal Title", 
HO.PRINCIPAL_NAME "Principal Name",
HO.CEO_TITLE "Chief Executive Title", 
HO.CEO_NAME "Chief Executive Name", 
HO.ORGANIZATION_TYPE "Organization Type", 
HO.ORGANIZATION_SIZE "Organization Size", 
HO.CONTROL_YR "Organization Control Year", 
HO.ANALYSIS_FY "Analysis Year", 
HO.BUSINESS_SCOPE "Business Scope",
HO.LINE_OF_BUSINESS "Line Of Business", 
HO.SMALL_BUS_IND "Small Business Y/N", 
HO.PUBLIC_PRIVATE_OWNERSHIP_FLAG "Private Ownership", 
HO.WOMAN_OWNED_IND "Woman-Owned Y/N", 
HO.MINORITY_OWNED_IND "Minority-Owned Y/N", 
HO.MINORITY_OWNED_TYPE "Minority-Owned Type", 
HO.EMPLOYEES_TOTAL "Number Of Employees",
HO.TOTAL_EMPLOYEES_TEXT "Total No. Of Employees", 
HO.LEGAL_STATUS "Legal Status", 
HO.STOCK_SYMBOL "Stock Symbol", 
HO.MISSION_STATEMENT "Mission Statement", 
HO.YEAR_ESTABLISHED "Year Established", 
HO.INCORP_YEAR "Year Incorporated",
HO.DUNS_NUMBER_C "D-U-N-S Number", 
HO.PARENT_DUNS_NUM_C "Parent D-U-N-S Number", 
HO.DOMESTIC_ULTIMATE_DUNS_NUM_C "Domestic Ultimate D-U-N-S", 
HO.GLOBAL_ULTIMATE_DUNS_NUM_C "Global Ultimate D-U-N-S", 
HO.DATA_CONFIDENCE_SCORE "Data Confidence", 
HO.DB_RATING "DB Credit Rating", 
--HO.BUSINESS_REPORT "DB Business Report",
TRANSLATE(HO.BUSINESS_REPORT, chr(10)||chr(11)||chr(13), ' ') "DB Business Report",
HO.CURRENCY_CODE "Currency Code", 
HO.PREF_FUNCTIONAL_CURRENCY "Preferred Func Currency", 
HO.FISCAL_YEAREND_MONTH "Fiscal Year End Month", 
HO.CURR_FY_POTENTIAL_REVENUE "Current FY Potential Rev", 
HO.NEXT_FY_POTENTIAL_REVENUE "Next FY Potential Revenue",
HZ.EMAIL_ADDRESS "Email",
HZ.PRIMARY_PHONE_PURPOSE "Primary Phone Purpose",
HZ.PRIMARY_PHONE_LINE_TYPE "Primary Phone Line Type",
HZ.PRIMARY_PHONE_COUNTRY_CODE "Primary Phone Country Code",
HZ.PRIMARY_PHONE_AREA_CODE "Primary Phone Area Code",
HZ.PRIMARY_PHONE_NUMBER "Primary Phone Number",
HZ.PRIMARY_PHONE_EXTENSION "Primary Phone Extension",
HO.EXTN_ATTRIBUTE_CHAR017 "Party Name English", 
HL.ADDR_ELEMENT_ATTRIBUTE3 "Party Site Name English",
MKT.RECORD_NAME "Account reference Number",
HZ.PARTY_ID "Party ID",
HOSR.ORIG_SYSTEM_REF_ID "Orig System Reference ID",
SVC.ID "Account ID",
HO.ORGANIZATION_PROFILE_ID "Organization Profile ID",
HS.LOCATION_ID  "Party Location ID",
HS.PARTY_SITE_NUMBER "Party Site Number",
HU.PARTY_SITE_USE_ID "Party Site Use ID",
SVC.EXTN_ATTRIBUTE_CHAR064 "Primary Account Flag",
svc.record_number record_number
FROM
HZ_PARTIES HZ,
HZ_ORIG_SYS_REFERENCES HOSR,
HZ_REF_ENTITIES SVC,
MOO_REF_ENTITIES MKT,
HZ_ORGANIZATION_PROFILES HO,
HZ_PARTY_SITES HS,
hz_locations HL,
HZ_PARTY_SITE_USES HU 
WHERE
HZ.PARTY_ID = HOSR.OWNER_TABLE_ID(+)
AND SVC.EXTN_ATTRIBUTE_NUMBER001(+)=HZ.PARTY_ID
AND MKT.EXTN_ATTRIBUTE_NUMBER001(+)=SVC.ID
AND HO.PARTY_ID=HZ.PARTY_ID
AND HS.PARTY_ID=HZ.PARTY_ID
AND HL.LOCATION_ID=HS.LOCATION_ID
AND HU.PARTY_SITE_ID=HS.PARTY_SITE_ID
AND HOSR.OWNER_TABLE_NAME(+) = 'HZ_PARTIES'
AND HS.STATUS = 'A'
AND HS.OVERALL_PRIMARY_FLAG = 'Y'
--AND HZ.PARTY_NUMBER = '965059'
/*AND(HZ.LAST_UPDATE_DATE > sysdate - interval '5' minute
OR SVC.LAST_UPDATE_DATE > sysdate - interval '5' minute
OR MKT.LAST_UPDATE_DATE > sysdate - interval '5' minute
OR HO.LAST_UPDATE_DATE > sysdate - interval '5' minute)*/
--and hz.party_name = 'HUL Child'
--and HZ.CREATED_BY <> 'CDM.Admin'
--and HZ.LAST_UPDATED_BY <> 'CDM.Admin'
--and HZ.PARTY_TYPE = 'ORGANIZATION'
and HO.EXTN_ATTRIBUTE_CHAR004 = 'Y'
and nvl(hosr.STATUS, 'X') <> 'I'
'' "Addnl Party Name ID",
''  "Party Location ID",
TO_CHAR(hcp.CONTACT_POINT_ID) "Contact Point ID"
from
hz_parties hp,
hz_contact_points hcp,
hz_organization_profiles ho
where
hp.party_id = hcp.owner_table_id(+)
and hp.party_id = ho.party_id
and hcp.owner_table_name(+) = 'HZ_PARTIES'
and hcp.contact_point_type(+) = 'EMAIL'
and ho.EXTN_ATTRIBUTE_CHAR004 = 'Y'
--and hp.party_name = 'POC - HERMANN OPTIKA--P10613476'
)  hp
where 
--rownum = 1
1=1
==========================================================================================================================
SELECT X.* 
  FROM (SELECT GL.name ledger_name
			  ,GJH.period_name
			  ,GJB.name batch_name
			  ,GJB.description batch_description
			  ,GJH.je_source source_name
			  ,GJH.je_category category_code
			  ,GJH.name journal_name
			  ,GJH.description journal_description
			  ,TO_CHAR(GJH.date_created, 'DD/MM/YYYY') date_created
			  ,GJH.posting_acct_seq_value voucher_number
			  ,GJL.currency_code
			  ,TO_CHAR(COALESCE((select ACA.exchange_date
								   from ap_invoice_payments_all AIP
									   ,ap_checks_all 		   ACA
								  where AIP.check_id = ACA.check_id
									and AIP.invoice_id = AP.invoice_id
									and rownum = 1), PAY.exchange_date, CN.exchange_date, REC.exchange_date), 'DD/MM/YYYY') rate_date
			  ,COALESCE((select ACA.exchange_rate
						   from ap_invoice_payments_all AIP
							   ,ap_checks_all 		   ACA
						  where AIP.check_id = ACA.check_id
							and AIP.invoice_id = AP.invoice_id
							and rownum = 1), PAY.exchange_rate, CN.exchange_rate, REC.exchange_rate) rate
			  ,COALESCE((select ACA.exchange_rate_type
						   from ap_invoice_payments_all AIP
							   ,ap_checks_all 		   ACA
						  where AIP.check_id = ACA.check_id
							and AIP.invoice_id = AP.invoice_id
							and rownum = 1), PAY.exchange_rate_type, CN.exchange_rate_type, REC.exchange_rate_type) rate_type
			  ,DECODE(GJB.actual_flag, 'A', 'Actual', GJB.actual_flag) balance_type
			  ,DECODE(GJB.status, 'P', 'Posted', 'U', 'Unposted', GJB.status) status
			  ,GJL.je_line_num line_num
			  ,GJL.description line_description	  
			  ,(GCC.segment1||'-'||GCC.segment2||'-'||GCC.segment3||'-'||GCC.segment4||'-'||GCC.segment5||'-'||GCC.segment6||'-'||GCC.segment7||'-'||GCC.segment8||'-'||GCC.segment9) account_combination
			  ,GCC.segment2 account_code
			  ,TO_CHAR(GJL.effective_date, 'DD/MM/YYYY') accounting_date
			  ,XAL.entered_dr
			  ,XAL.entered_cr
			  ,XAL.accounted_dr
			  ,XAL.accounted_cr
			  ,COALESCE((select vendor_name
					  from poz_suppliers_v
					 where vendor_id = AP.vendor_id),
				   (select vendor_name
					  from poz_suppliers_v
					 where vendor_id = PAY.vendor_id),
				   (select HP.party_name
					  from hz_cust_accounts HCA
						  ,hz_parties 		HP
					 where HCA.party_id = HP.party_id
					   and HCA.cust_account_id = CN.bill_to_customer_id),
				   (select HP.party_name
					  from hz_cust_accounts HCA
						  ,hz_parties 		HP
					 where HCA.party_id = HP.party_id
					   and HCA.cust_account_id = REC.pay_from_customer)
				  ) party_name
			  ,COALESCE(AP.invoice_num, TO_CHAR(PAY.check_number), CN.trx_number, REC.receipt_number) trx_number
			  ,TO_CHAR(COALESCE(AP.invoice_date, PAY.check_date, CN.trx_date, REC.receipt_date), 'DD/MM/YYYY') invoice_date
			  ,COALESCE(AP.created_by, PAY.created_by, CN.created_by, REC.created_by) created_by
			  ,XAH.entity_id hdr_entity
			  ,COALESCE(AP.entity_id, PAY.entity_id, CN.entity_id, REC.entity_id) entity_id
		  FROM gl_je_headers 			GJH
			  ,gl_je_batches 			GJB
			  ,gl_je_lines 	 			GJL
			  ,gl_ledgers				GL
			  ,gl_code_combinations 	GCC
			  ,gl_import_references		GIR
			  ,xla_ae_lines				XAL
			  ,xla_ae_headers			XAH									-- Added by Pratul on 12th Apr 
			  ,(select DISTINCT XTE.entity_id								-- Added by Pratul on 20th Apr
					  ,AIA.invoice_num
					  ,AIA.invoice_date
					  ,AIA.vendor_id
					  ,AIA.created_by
					  ,AIA.invoice_id
				  from xla_transaction_entities XTE
					  ,ap_invoices_all			AIA
				 where XTE.entity_code = 'AP_INVOICES'
				   and XTE.application_id = 200
				   and XTE.source_id_int_1 = AIA.invoice_id) AP
			  ,(select DISTINCT XTE.entity_id								-- Added by Pratul on 20th Apr
					  ,ACA.check_number
					  ,ACA.check_date
					  ,ACA.vendor_id
					  ,ACA.created_by
					  ,ACA.exchange_rate
					  ,ACA.exchange_date
					  ,ACA.exchange_rate_type
				  from xla_transaction_entities XTE
					  ,ap_checks_all			ACA
				 where XTE.entity_code = 'AP_PAYMENTS'
				   and XTE.application_id = 200
				   and XTE.source_id_int_1 = ACA.check_id) PAY
			  ,(select DISTINCT XTE.entity_id
					  ,RCT.trx_number
					  ,RCT.trx_date
					  ,RCT.bill_to_customer_id
					  ,RCT.created_by
					  ,RCT.exchange_rate
					  ,RCT.exchange_date
					  ,RCT.exchange_rate_type
				  from xla_transaction_entities XTE
					  ,ra_customer_trx_all 		RCT
				 where XTE.source_id_int_1 = RCT.customer_trx_id
				   and XTE.entity_code = 'TRANSACTIONS'
				   and XTE.application_id = 222) CN				-- Added by Pratul on 12th Apr
			  ,(select DISTINCT XTE.entity_id
					  ,ACR.receipt_number
					  ,ACR.receipt_date
					  ,ACR.pay_from_customer
					  ,ACR.created_by
					  ,ACR.exchange_rate
					  ,ACR.exchange_date
					  ,ACR.exchange_rate_type
				  from xla_transaction_entities XTE
					  ,ar_cash_receipts_all ACR
				 where XTE.source_id_int_1 = ACR.cash_receipt_id
				   and XTE.entity_code = 'RECEIPTS'
				   and XTE.application_id = 222) REC			-- Added by Pratul on 12th Apr
			 /*(select DISTINCT XDL.ae_header_id				Commented by Pratul on 20th Apr 
					  ,XDL.ae_line_num
					  ,AIA.invoice_num
					  ,AIA.invoice_date
					  ,AIA.vendor_id
					  ,AIA.created_by
					  ,AIA.invoice_id
					  ,XDL.unrounded_entered_dr
					  ,XDL.unrounded_entered_cr
					  ,XDL.unrounded_accounted_dr
					  ,XDL.unrounded_accounted_cr
				  from xla_distribution_links	XDL
					  ,ap_invoices_all			AIA
				 where XDL.applied_to_entity_code = 'AP_INVOICES'
				   and XDL.applied_to_source_id_num_1 = AIA.invoice_id) AP 
			  ,(select DISTINCT XDL.ae_header_id				Commented by Pratul on 12th Apr
					  ,XDL.ae_line_num
					  ,RCT.trx_number
					  ,RCT.trx_date
					  ,RCT.bill_to_customer_id
					  ,RCT.created_by
					  ,RCT.exchange_rate
					  ,RCT.exchange_date
					  ,RCT.exchange_rate_type
				  from xla_distribution_links		  XDL
					  ,ar_distributions_all			  ADA
					  ,ar_receivable_applications_all ARA
					  ,ra_customer_trx_all 			  RCT
				 where XDL.source_distribution_type = 'AR_DISTRIBUTIONS_ALL'
				   and XDL.event_class_code = 'CREDIT_MEMO'
				   and XDL.source_distribution_id_num_1 = ADA.line_id
				   and ADA.source_table = 'RA'
				   and ADA.source_id = ARA.receivable_application_id
				   and DECODE(ARA.status, 'UNID', 'Y', ARA.display) = 'Y'
				   and ARA.customer_trx_id = RCT.customer_trx_id) CN
			  ,(select DISTINCT XDL.ae_header_id
					  ,XDL.ae_line_num
					  ,ACR.receipt_number
					  ,ACR.receipt_date
					  ,ACR.pay_from_customer
					  ,ACR.created_by
					  ,ACR.exchange_rate
					  ,ACR.exchange_date
					  ,ACR.exchange_rate_type
				  from xla_distribution_links		  XDL
					  ,ar_distributions_all			  ADA
					  ,ar_receivable_applications_all ARA
					  ,ar_cash_receipts_all			  ACR
				 where XDL.source_distribution_type = 'AR_DISTRIBUTIONS_ALL'
				   and XDL.event_class_code = 'RECEIPT'
				   and XDL.source_distribution_id_num_1 = ADA.line_id
				   and ADA.source_id = DECODE(ADA.source_table, 'RA', ARA.receivable_application_id, 'CRH', ARA.cash_receipt_history_id)
				   and DECODE(ARA.status, 'UNID', 'Y', ARA.display) = 'Y'
				   and ARA.cash_receipt_id = ACR.cash_receipt_id) REC*/
		 WHERE GJH.status = 'P'
		   AND GJH.ledger_id = GL.ledger_id
		   AND GL.ledger_category_code = 'PRIMARY'
		   AND GL.name <> 'CRISIL Consolidation'
		   AND GJH.je_batch_id = GJB.je_batch_id
		   AND GJH.je_header_id = GJL.je_header_id
		   AND GJL.code_combination_id = GCC.code_combination_id
		   AND GIR.je_header_id = GJL.je_header_id
		   AND GIR.je_line_num = GJL.je_line_num
		   AND GIR.gl_sl_link_id = XAL.gl_sl_link_id
		   AND GIR.gl_sl_link_table = 'XLAJEL'
		   AND XAL.ae_header_id = XAH.ae_header_id					-- Added by Pratul on 12th Apr 
		   AND XAL.application_id = XAH.application_id				-- Added by Pratul on 12th Apr 
		   AND XAH.entity_id = AP.entity_id(+)					-- Added by Pratul on 20th Apr 
		   AND XAH.entity_id = PAY.entity_id(+)
		   AND XAH.entity_id = CN.entity_id(+)					-- Added by Pratul on 12th Apr 
		   AND XAH.entity_id = REC.entity_id(+)					-- Added by Pratul on 12th Apr 
		   AND GL.name = :p_ledger
		   AND GCC.segment2 = NVL(:p_acct_code, GCC.segment2)
		   AND TRUNC(GJH.default_effective_date) BETWEEN (SELECT TRUNC(start_date)
															FROM gl_period_statuses
														   WHERE application_id = 101
															 AND ledger_id = GL.ledger_id
															 AND period_name = :p_from_period)
													 AND (SELECT TRUNC(end_date)
															FROM gl_period_statuses
														   WHERE application_id = 101
															 AND ledger_id = GL.ledger_id
															 AND period_name = :p_to_period)
		   AND EXISTS (SELECT '1'
						 FROM gl_je_lines 			GJL1
							 ,gl_code_combinations 	GCC1
						WHERE GJL1.code_combination_id = GCC1.code_combination_id
						  AND GJL1.je_header_id = GJH.je_header_id
						  AND GCC1.segment2 IN ('423003', '423005'))
		) X
 WHERE 1=1
   AND EXISTS (SELECT '1'
				 FROM xla_ae_lines 			XAL1
					 ,gl_code_combinations 	GCC2
					 ,xla_ae_headers 		XAH1
				WHERE XAH1.entity_id = X.entity_id
				  AND XAH1.ae_header_id = XAL1.ae_header_id
				  AND XAH1.application_id = XAL1.application_id
				  AND XAL1.code_combination_id = GCC2.code_combination_id
				  AND GCC2.segment2 IN ('423003', '423005'))
 ORDER BY X.period_name, X.journal_name, X.line_num
 ====================================================================================================================
 
------------------------------------------------------Reconciled Transactions Report---------------------------------------------------------------------------------
--GLJERECON
SELECT  r.jgzz_recon_id Recon_group, to_char(r.jgzz_recon_date,'YYYY-MM-DD') jgzz_recon_date, r.jgzz_recon_ref, b.name batch_name, h.name je_name,  
  js.user_je_source_name je_source_name, jc.user_je_category_name je_category, l.period_name, to_char(l.effective_date,'YYYY-MM-DD') effective_date, 
  l.je_line_num,  fnd_flex_ext.get_segs('GL','GL#',c.chart_of_accounts_id,c.code_combination_id,null) je_account, 
  gl_flexfields_pkg.get_concat_description(c.chart_of_accounts_id,c.code_combination_id) acct_desc,h.currency_code, 
  l.entered_dr, l.entered_cr, l.accounted_dr,  l.accounted_cr/*,grr.recon_rule_name Recon_Type,
  (SELECT  decode(count(distinct h1.currency_code),1,'Y','N') Show_Total
    FROM gl_je_headers h1
      ,gl_je_lines_recon r1
    WHERE h1.je_header_id        = r1.je_header_id
    and r1.recon_rule_id       = r.recon_rule_id
    and r1.jgzz_recon_id       = r.jgzz_recon_id
    ) show_Total*/
FROM gl_je_batches b
  ,gl_je_headers h
  ,gl_je_lines l
  ,gl_code_combinations c
  ,gl_je_lines_recon r
  ,gl_je_sources js
  ,gl_je_categories jc
  ,gl_period_statuses ps
  --,gl_reconciliation_rules grr
WHERE  b.je_batch_id         = h.je_batch_id
AND h.je_header_id        = l.je_header_id
AND l.code_combination_id = c.code_combination_id
AND l.je_header_id        = r.je_header_id
AND l.je_line_num         = r.je_line_num
AND h.je_source           = js.je_source_name
AND h.je_category         = jc.je_category_name
AND h.period_name         = ps.period_name
AND ps.ledger_id          = h.ledger_id
AND ps.application_id     = 101
AND l.status              = 'P'
AND c.jgzz_recon_flag     = 'Y'
AND h.actual_flag         = 'A'
AND r.jgzz_recon_status   = 'R'
--and r.recon_rule_id       = grr.recon_rule_id
and r.ledger_id           = :p_ledger_id
and r.recon_rule_id       = :p_recon_rule_id
and r.jgzz_recon_id       = nvl(:p_recon_id,r.jgzz_recon_id)
and ps.effective_period_num between :from_period_number and :to_period_number
and &FLEXDATA_SECURE = 'N'
and &LEX_FILTER_WHERE
&DAS_WHERE
&as_of_date_where_clause
order by r.jgzz_recon_id,r.jgzz_recon_date,r.jgzz_recon_ref,nvl2(l.entered_dr,-1,1)
===================================================================================================================================
SELECT  GL.period_set_name,GL.NAME LEDGER_NAME
,gb.ledger_id
		,GCC.SEGMENT1 ENTITY
		,GCC.SEGMENT3 BCC
		,gl_flexfields_pkg.get_description_sql (
		   gcc.chart_of_accounts_id,
		   3,
		   gcc.segment3
		)     BCC_DESC
		,GCC.SEGMENT5 CC
		,GCC.SEGMENT2 ACCOUNT
		,gl_flexfields_pkg.get_description_sql (
		   gcc.chart_of_accounts_id,
		   2,
		   gcc.segment2
		)                               ACCOUNT_DESC  
	    ,GB.CURRENCY_CODE CURRENCY
	 	,GL.CURRENCY_CODE FUN_CUR
		,CASE WHEN GB.CURRENCY_CODE = GL.CURRENCY_CODE 
		 THEN 1 
		 ELSE 	(SELECT GDR.conversion_rate
         		FROM GL_DAILY_RATES GDR
				WHERE GDR.FROM_CURRENCY= GB.CURRENCY_CODE
				AND GDR.TO_CURRENCY=  GL.CURRENCY_CODE 
				AND GDR.CONVERSION_TYPE= (SELECT CONVERSION_TYPE
									  FROM GL_DAILY_CONVERSION_TYPES 
									  WHERE  USER_CONVERSION_TYPE='Corporate End Rate')
				and conversion_date  = (SELECT max(GDR.conversion_date )
				FROM GL_DAILY_RATES GDR
				WHERE GDR.FROM_CURRENCY= GB.CURRENCY_CODE
				AND GDR.TO_CURRENCY= GL.CURRENCY_CODE 
				AND GDR.CONVERSION_DATE between (select START_DATE
											FROM GL_PERIODS GP1
											WHERE GP1.PERIOD_NAME =gb.period_name
											and GP1.PERIOD_SET_NAME= gl.PERIOD_SET_NAME
											)
										and (select END_DATE
												FROM GL_PERIODS GP1
												WHERE GP1.PERIOD_set_NAME =gl.PERIOD_SET_NAME
												and GP1.PERIOD_NAME =gb.period_name
												 )
		AND CONVERSION_TYPE='Corporate'))
		END CL_RATE
		,(SELECT GDR.conversion_rate
         		FROM GL_DAILY_RATES GDR
				WHERE GDR.FROM_CURRENCY= GB.CURRENCY_CODE
				AND GDR.TO_CURRENCY=  GL.CURRENCY_CODE
				AND GDR.CONVERSION_TYPE=(SELECT CONVERSION_TYPE
									  FROM GL_DAILY_CONVERSION_TYPES 
									  WHERE  USER_CONVERSION_TYPE='Corporate End Rate')
				and GDR.conversion_date  = (SELECT max(GDR1.conversion_date )
				FROM GL_DAILY_RATES GDR1
				WHERE GDR1.FROM_CURRENCY= gb.CURRENCY_CODE
				AND GDR1.TO_CURRENCY= gl.currency_code
				AND GDR1.CONVERSION_DATE < (select START_DATE
												FROM GL_PERIODS GP1
												WHERE GP1.PERIOD_set_NAME =gl.PERIOD_set_NAME
												and GP1.PERIOD_NAME =gb.period_name
												 )
		AND CONVERSION_TYPE=(SELECT CONVERSION_TYPE
									  FROM GL_DAILY_CONVERSION_TYPES 
									  WHERE  USER_CONVERSION_TYPE='Corporate End Rate')))    PREVIOUS_CL_RATE   -- ADDED BY SNEHAL ON 07/05/2021
		---
		,  (SUM(NVL(BEGIN_BALANCE_DR,0))-SUM(NVL(BEGIN_BALANCE_CR,0)))    SOURCE_OPENING -- CRISIL_ENTERED_OENT1
		,(SUM (NVL (gb.PERIOD_NET_DR, 0))) SOURCE_DEBIT
		,(SUM (NVL (gb.PERIOD_NET_CR, 0))) *(-1)  SOURCE_CREDIT        -- *-1 added by snehal on 07/5/2021
		,( (  sum(NVL (GB.begin_balance_dr, 0))  +   sum(NVL (GB.period_net_dr, 0)))
		- (  sum(NVL (GB.begin_balance_cr, 0))   +   sum(NVL (GB.period_net_cr, 0)))) SOURCE_CLOSING
		--,(SUM(NVL(BEGIN_BALANCE_DR_BEQ,0))-SUM(NVL(BEGIN_BALANCE_CR_BEQ,0)))  FUN_OPENING	
		,NVL((SELECT SUM(NVL(GJL.accounted_dr, 0)) - SUM(NVL(GJL.accounted_cr, 0))     -- FUN_CUR
				FROM gl_je_headers GJH
					  ,gl_je_lines GJL
					  ,gl_code_combinations GCC1
				 WHERE 1 = 1
				   AND GJL.je_header_id = GJH.je_header_id		
				   AND GJL.code_combination_id = gcc1.code_combination_id
				   AND GJL.status = 'P'
				--   AND GJL.period_name = GB.period_name
				   AND GJH.LEDGER_ID =  GB.LEDGER_ID  
				  -- AND GJH.je_category <> 'Revaluation'          -- COMMENTED BY SNEHAL ON 07/05/2021
				   AND GCC1.segment1 = GCC.segment1
				   AND GCC1.segment2 = GCc.segment2
				   AND GCC1.segment3 = GCC.segment3
				   AND GCC1.segment5 = GCC.segment5 
				   AND GJL.CURRENCY_CODE = GB.CURRENCY_CODE
				   AND GJL.period_name IN	(select PERIOD_NAME  
												from gl_periods 
												where period_set_name = GL.period_set_name
												and period_year = (select PERIOD_YEAR  	
																	from gl_periods
																	where period_name  = GB.PERIOD_NAME
																	and period_set_name =  GL.PERIOD_SET_NAME)
												AND PERIOD_NUM <(select PERIOD_NUM   	
																	from gl_periods
																	where period_name  = GB.PERIOD_NAME
																	and period_set_name =  GL.PERIOD_SET_NAME))),(SUM(NVL(BEGIN_BALANCE_DR,0))-SUM(NVL(BEGIN_BALANCE_CR,0))) )  FUN_OPENING 
		, NVL((SELECT SUM(NVL(GJL.accounted_Dr, 0))     -- FUN_CUR
				FROM gl_je_headers GJH
					  ,gl_je_lines GJL
					  ,gl_code_combinations GCC1
				 WHERE 1 = 1
				   AND GJL.je_header_id = GJH.je_header_id		
				   AND GJL.code_combination_id = gcc1.code_combination_id
				   AND GJL.status = 'P'
				--   AND GJL.period_name = GB.period_name
				   AND GJH.LEDGER_ID =  GB.LEDGER_ID  
				 --  AND GJH.je_category <> 'Revaluation'          -- COMMENTED BY SNEHAL ON 07/05/2021
				   AND GCC1.segment1 = GCC.segment1
				   AND GCC1.segment2 = GCc.segment2
				   AND GCC1.segment3 = GCC.segment3
				   AND GCC1.segment5 = GCC.segment5 
				   AND GJL.CURRENCY_CODE = GB.CURRENCY_CODE
				   AND GJL.period_name = GB.PERIOD_NAME ),(SUM (NVL (gb.PERIOD_NET_DR, 0)))) FUN_DEBIT
		,NVL((SELECT SUM(NVL(GJL.accounted_cr, 0))     -- FUN_CUR
				FROM gl_je_headers GJH
					  ,gl_je_lines GJL
					  ,gl_code_combinations GCC1
				 WHERE 1 = 1
				   AND GJL.je_header_id = GJH.je_header_id		
				   AND GJL.code_combination_id = gcc1.code_combination_id
				   AND GJL.status = 'P'
				--   AND GJL.period_name = GB.period_name
				   AND GJH.LEDGER_ID =  GB.LEDGER_ID  
				 --  AND GJH.je_category <> 'Revaluation'            -- COMMENTED BY SNEHAL ON 07/05/2021
				   AND GCC1.segment1 = GCC.segment1
				   AND GCC1.segment2 = GCc.segment2
				   AND GCC1.segment3 = GCC.segment3
				   AND GCC1.segment5 = GCC.segment5 
				   AND GJL.CURRENCY_CODE = GB.CURRENCY_CODE
				   AND GJL.period_name = GB.PERIOD_NAME ) ,(SUM (NVL (gb.PERIOD_NET_CR, 0)))) * (-1)  FUN_CREDIT    -- *-1 ADDED BY SNEHAL ON 07/05/2021
	
			,NVL((SELECT SUM(NVL(GJL.accounted_dr, 0)) - SUM(NVL(GJL.accounted_cr, 0))     -- FUN_CUR
				FROM gl_je_headers GJH
					  ,gl_je_lines GJL
					  ,gl_code_combinations GCC1
				 WHERE 1 = 1
				   AND GJL.je_header_id = GJH.je_header_id		
				   AND GJL.code_combination_id = gcc1.code_combination_id
				   AND GJL.status = 'P'
				--   AND GJL.period_name = GB.period_name
				   AND GJH.LEDGER_ID =  GB.LEDGER_ID  
				--   AND GJH.je_category <> 'Revaluation'            -- COMMENTED BY SNEHAL ON 07/05/2021
				   AND GCC1.segment1 = GCC.segment1
				   AND GCC1.segment2 = GCc.segment2
				   AND GCC1.segment3 = GCC.segment3
				   AND GCC1.segment5 = GCC.segment5 
				   AND GJL.CURRENCY_CODE = GB.CURRENCY_CODE
				   AND GJL.period_name IN	(select G1.PERIOD_NAME  
												from gl_periods  G1
												where G1.period_set_name = GL.period_set_name
												and G1.period_year = (select PERIOD_YEAR  	
																	from gl_periods G2
																	where G2.period_name  = GB.PERIOD_NAME
																	and G2.period_set_name =  GL.PERIOD_SET_NAME)
												AND G1.PERIOD_NUM <=(select G3.PERIOD_NUM   	
																	from gl_periods G3
																	where G3.period_name  = GB.PERIOD_NAME
																	and G3.period_set_name =  GL.PERIOD_SET_NAME))),( (  sum(NVL (GB.begin_balance_dr, 0))  +   sum(NVL (GB.period_net_dr, 0)))
		- (  sum(NVL (GB.begin_balance_cr, 0))   +   sum(NVL (GB.period_net_cr, 0)))))  FUN_CLOSING   -- COMMENTED BY SNEHAL ON 07/05/2021
		,(SELECT SUM(NVL(GJL.accounted_dr, 0)) - SUM(NVL(GJL.accounted_cr, 0)) balance
		  FROM gl_je_headers GJH
			  ,gl_je_lines GJL
			  ,gl_code_combinations GCC1
		 WHERE 1 = 1
		   AND GJL.je_header_id = GJH.je_header_id		
		   AND GJL.code_combination_id = gcc1.code_combination_id
		   AND GJL.status = 'P'
		   AND GJL.period_name = GB.period_name
		   AND GJH.LEDGER_ID =  GB.LEDGER_ID  
		   AND GJH.je_category ='Revaluation'
		   AND GJH.name not like 'Reverse%'                       -- added by Snehal on 07/05/2021
		   AND GCC1.segment1 = GCC.segment1
		   AND GCC1.segment2 = GCC.segment2
		   AND GCC1.segment3 = GCC.segment3
		   AND GCC1.segment5 = GCC.segment5 
		   AND GJH.CURRENCY_CODE = GB.CURRENCY_CODE
		   ) REVAL_AMT
		 ,(SELECT SUM(NVL(GJL.accounted_dr, 0)) - SUM(NVL(GJL.accounted_cr, 0))     -- FUN_CUR
				FROM gl_je_headers GJH
					  ,gl_je_lines GJL
					  ,gl_code_combinations GCC1
				 WHERE 1 = 1
				   AND GJL.je_header_id = GJH.je_header_id		
				   AND GJL.code_combination_id = gcc1.code_combination_id
				   AND GJL.status = 'P'
				--   AND GJL.period_name = GB.period_name
				   AND GJH.name  like 'Reverse%'               -- added by snehal on 07/05/2021
				   AND GJH.LEDGER_ID =  GB.LEDGER_ID  
				   AND GJH.je_category ='Revaluation'
				   AND GCC1.segment1 = GCC.segment1
				   AND GCC1.segment2 = GCc.segment2
				   AND GCC1.segment3 = GCC.segment3
				   AND GCC1.segment5 = GCC.segment5
				   AND GJH.CURRENCY_CODE = GB.CURRENCY_CODE				   
				   AND GJL.period_name = GB.period_name	/*(SELECT GPI.period_name 
											FROM gl_periods GPI
											WHERE  GPI.PERIOD_SET_NAME= GL.PERIOD_SET_NAME 
											AND GPI.start_date  = (SELECT   Add_months(start_date , -1)
														FROM gl_periods GP1
														WHERE GP1.period_name = GB.period_name
														AND GP1.PERIOD_SET_NAME= GL.PERIOD_SET_NAME)
														
											)*/   -- MODIFIED ON SNEHAL ON 07/05/2021
											)

		REVAL_AMT_PREV 
		--,GJL.ENTERED_DR FUN_AMT_WO_REVAL   -- CAN BE REMOVED
		
	-- 	,GJL.ENTERED_DR REVAL_IN_BASE
		,CASE WHEN GCC.SEGMENT3 = '999999'
		THEN 'Default'
		ELSE ( SELECT   (SELECT FFVV.description
	                       FROM fnd_flex_values_vl FFVV
				               ,fnd_flex_value_sets FFVS
		                  WHERE FFVV.flex_value = TREE2.parent_pk1_value
				            AND FFVS.flex_value_set_id = FFVV.flex_value_set_id
				        	AND FFVS.flex_value_set_name in
                                 ('CRISIL BUSINESS COST CENTER'))       
                   FROM  fnd_tree_node  TREE
                        ,fnd_tree_node  TREE1
						,fnd_tree_node  TREE2
			            ,fnd_tree_version FTV
			            ,fnd_tree_version FTV1
						,fnd_tree_version FTV2
                  WHERE  TREE.tree_structure_code  = 'GL_ACCT_FLEX'
                    AND TREE.tree_code            = 'CRISIL BUSINESS COST CENTER'
                    AND TREE1.tree_structure_code = 'GL_ACCT_FLEX'
					AND TREE2.tree_structure_code = 'GL_ACCT_FLEX'
		            AND TREE.tree_version_id      = FTV.tree_version_id
		            AND TRUNC(SYSDATE) BETWEEN TRUNC(FTV.effective_start_date) 
					                       AND TRUNC(FTV.effective_end_date)
		            AND TRUNC(SYSDATE) BETWEEN TRUNC(FTV1.effective_start_date) 
					                       AND TRUNC(FTV1.effective_end_date)
				    AND TRUNC(SYSDATE) BETWEEN TRUNC(FTV2.effective_start_date) 
					                       AND TRUNC(FTV2.effective_end_date)
		            AND TREE1.tree_version_id     = FTV1.tree_version_id
					  AND TREE2.tree_version_id     = FTV2.tree_version_id
		            --AND FTV1.status               = 'ACTIVE'
                    AND TREE1.tree_code           = 'CRISIL BUSINESS COST CENTER'
					AND TREE2.tree_code           = 'CRISIL BUSINESS COST CENTER'
                    AND TREE.parent_pk1_value     = tree1.pk1_start_value
					AND TREE1.parent_pk1_value     = tree2.pk1_start_value
					AND  TREE.pk1_start_value = GCC.SEGMENT3  )

			END															CC_dESC
		, (  SELECT   (SELECT FFVV.description
	                       FROM fnd_flex_values_vl FFVV
				               ,fnd_flex_value_sets FFVS
		                  WHERE FFVV.flex_value = TREE.parent_pk1_value
				            AND FFVS.flex_value_set_id = FFVV.flex_value_set_id
				        	AND FFVS.flex_value_set_name in
                                 ('CRISIL ACCOUNT'))      
	              FROM  fnd_tree_node  TREE
                        ,fnd_tree_version FTV			           
                  WHERE  TREE.tree_structure_code  = 'GL_ACCT_FLEX'
                    AND TREE.tree_code            = 'CRISIL_NATURALACCOUNT'
                    AND TREE.tree_version_id      = FTV.tree_version_id
		            AND TRUNC(SYSDATE) BETWEEN TRUNC(FTV.effective_start_date) 
					                       AND TRUNC(FTV.effective_end_date)
		            --AND FTV1.status               = 'ACTIVE'
					AND GCC.SEGMENT2= TREE.pk1_start_value  
                  )        GL_DESC
  FROM   gl_balances GB
      ,gl_code_combinations gcc
	  , GL_LEDGERS GL
WHERE gb.period_name = :P_PERIOD_NAME
AND   gb.code_combination_id = gcc.code_combination_id
AND   GB.ledger_id = GL.ledger_id 
AND   GL.ledger_id =  NVL(:P_LEDGER_ID, GL.ledger_id )
AND   ((GB.CURRENCY_CODE, GCC.CODE_COMBINATION_ID) IN (SELECT GJL.CURRENCY_CODE, GJL.CODE_COMBINATION_ID 
								  FROM GL_JE_LINES GJL	
										,GL_JE_HEADERS GJH
								 WHERE 	GJH.JE_HEADER_ID = GJL.JE_HEADER_ID 
								 AND    GJH.status ='P'
								 AND GJH.JE_CATEGORY = 'Revaluation'
								 AND GJL.PERIOD_NAME IN (select G1.PERIOD_NAME  
												from gl_periods  G1
												where G1.period_set_name = GL.period_set_name
												and G1.period_year = (select PERIOD_YEAR  	
																	from gl_periods G2
																	where G2.period_name  = GB.PERIOD_NAME
																	and G2.period_set_name =  GL.PERIOD_SET_NAME)
												AND G1.PERIOD_NUM <=(select G3.PERIOD_NUM   	
																	from gl_periods G3
																	where G3.period_name  = GB.PERIOD_NAME
																	and G3.period_set_name =  GL.PERIOD_SET_NAME)))
																	
	--OR GB.CURRENCY_CODE  = 		GL.CURRENCY_CODE 
	)
AND   GL.NAME NOT IN ('CRISIL Consolidation') 
AND gb.ACTUAL_FLAG = 'A'
AND   LEDGER_CATEGORY_CODE  <> 'SECONDARY'
--AND GCC.SEGMENT2 = '321012'
group by gb.period_name
		,GL.period_set_name
		,GCC.SEGMENT1  
		,GCC.SEGMENT3  
		,GCC.SEGMENT5  
		,GCC.SEGMENT2  
       ,GB.CURRENCY_CODE  
 	 	,GL.CURRENCY_CODE  
		,GL.NAME
		,gcc.chart_of_accounts_id
		,GB.LEDGER_ID
=============================================================================================================================
-----------------------------------SALES ORDER ACKNOWLEDGEMENT BY SHAIKSHAVALI------------------------------------
WITH history_table AS (
SELECT
MAX (PROCESSSTART) Last_run_date
FROM
ess_request_history ess_hist
WHERE 1 = 1
AND definition = 'JobDefinition://oracle/apps/ess/custom/oracle/apps/ess/custom/FIB_Sales_Order_Acknowledgement'
AND executable_status = 'SUCCEEDED'
)

SELECT dha.sold_to_party_contact_id,
ship_to.party_site_id_b,
dha.SOLD_TO_PARTY_ID,
mpt.name                                           payment_terms,
D.PARTY_NAME||' '||
       a.b
       || ' '
       || c.d                                             ship_via,
       HP.party_name                                      customer_name,
       contact.contact_name,
       ship_to.ship_email                             ship_to_email,
       bill_to.bill_email                                               bill_to_email,
       dla.line_id,
       DHA.order_number                                   ORDER_NO,
       To_char(DHA.ordered_date, 'MM/DD/YYYY')            ORDER_DATE,
       DHA.customer_po_number                             CUSTOMER_PO,
       DHA.order_type_code                                ORDER_TYPE,
       dha.packing_instructions,
       dha.shipping_instructions,
       dha.comments,
       dha.applied_currency_code                          currency_code,
       To_char(DFLA.schedule_ship_date, 'MM/DD/YYYY')      SHIP_DATE,
       DLA.line_number                                    ITEM,
       CASE WHEN DLA.ordered_qty IS NULL THEN '0' 
	   WHEN DLA.ordered_qty IS NOT NULL 
	   THEN DLA.ordered_qty
       ||' '
       ||DLA.ordered_uom 
	   END ORDER_QTY,
	   CASE WHEN DLA.shipped_qty IS NULL THEN '0 EA' 
	   WHEN DLA.shipped_qty IS NOT NULL 
	   THEN DLA.ordered_qty
       ||' '
       ||DLA.ordered_uom 
	   END SHP_QTY,
       DLA.unit_list_price                                UNIT_PRICE,
       ( DLA.ordered_qty * DLA.unit_list_price )          AMOUNT,
       DLA.unit_selling_price                             NET_PRICE,
       DLA.extended_amount                                NET_AMOUNT,
       ESI.item_number,
       ESI.description,
       CASE
         WHEN DHEB.attribute_char2 IS NOT NULL THEN DHEB.attribute_char2
         WHEN DHEB.attribute_char2 IS NULL THEN SHIP_TO.ship_to_address1
       END                                                SHIP_TO_ADDRESS1,
       CASE
         WHEN DHEB.attribute_char3 IS NOT NULL THEN DHEB.attribute_char3
         WHEN DHEB.attribute_char3 IS NULL THEN SHIP_TO.ship_to_address2
       END                                                SHIP_TO_ADDRESS2,
       CASE
         WHEN DHEB.attribute_char4 IS NOT NULL THEN DHEB.attribute_char4
         WHEN DHEB.attribute_char4 IS NULL THEN SHIP_TO.ship_to_city
       END                                                SHIP_TO_CITY,
       CASE
         WHEN DHEB.attribute_char6 IS NOT NULL THEN DHEB.attribute_char6
         WHEN DHEB.attribute_char6 IS NULL THEN SHIP_TO.ship_to_postal_code
       END                                                SHIP_TO_POSTAL_CODE,
       CASE
         WHEN DHEB.attribute_char5 IS NOT NULL THEN DHEB.attribute_char5
         ELSE SHIP_TO.ship_to_state
       END                                                SHIP_TO_STATE,
       ship_to.ship_to_site,
       BILL_TO.bill_to_address1,
       BILL_TO.bill_to_address2,
       BILL_TO.bill_to_city,
       BILL_TO.bill_to_postal_code,
       BILL_TO.bill_to_state,
       BILL_TO.bill_to_site,
       (SELECT EP.tp_item_number
        FROM   egp_trading_partner_items EP,
               egp_item_relationships_b EIR
        WHERE  EP.tp_item_id = EIR.tp_item_id
               AND EIR.inventory_item_id = DLA.inventory_item_id
               --AND EP.TP_TYPE = 'CUSTOMER'
               AND EP.trading_partner_id = DHA.sold_to_party_id
       --AND (EIR.END_DATE_ACTIVE IS NULL
       --OR TRUNC (EIR.END_DATE_ACTIVE)> TRUNC (SYSDATE)) 
       )                                                  CUST_ITEM_NUMBER,
       HOU.name                                           business_unit,
       HL.address_line_1,
       HL.telephone_number_1,
       HL.town_or_city
       ||', '
       ||HL.region_2
       ||' '
       ||HL.postal_code                                   ADDRESS_LINE2,
       HL.fax_area_code2
       ||''
       ||hl.fax_subscriber_num2                           FAX,
       (SELECT flv.meaning
        FROM   fusion.msc_xref_mapping MXM,
               fusion.msc_apps_instances Mai,
               fnd_lookup_values flv
        WHERE  mxm.sr_instance_id = MAI.instance_id
               AND mxm.entity_name = 'FOB'
               AND mxm.source_value = flv.lookup_code
               AND mxm.entity_name = flv.lookup_type
               AND mxm.attribute_name = 'LOOKUP_CODE'
               AND flv.LANGUAGE = Userenv('LANG')
               AND target_value = dha.fob_point_code)     fob,
       (SELECT flv.meaning
        FROM   fusion.msc_xref_mapping MXM,
               fusion.msc_apps_instances Mai,
               fnd_lookup_values flv
        WHERE  mxm.sr_instance_id = MAI.instance_id
               AND mxm.entity_name = 'WSH_FREIGHT_CHARGE_TERMS'
               AND mxm.source_value = flv.lookup_code
               AND mxm.entity_name = flv.lookup_type
               AND mxm.attribute_name = 'LOOKUP_CODE'
               AND flv.LANGUAGE = Userenv('LANG')
               AND target_value = DHA.freight_terms_code) freight
FROM   (SELECT flv.meaning b,
               DHA.HEADER_ID
        FROM   fusion.msc_xref_mapping MXM,
               fusion.msc_apps_instances Mai,
               fnd_lookup_values flv,
               DOO_HEADERS_ALL DHA
        WHERE  mxm.sr_instance_id = MAI.instance_id
               AND mxm.entity_name = 'WSH_SERVICE_LEVELS'
               AND mxm.source_value = flv.lookup_code
               AND mxm.entity_name = flv.lookup_type
               AND mxm.attribute_name = 'LOOKUP_CODE'
               AND flv.LANGUAGE = Userenv('LANG')
               AND target_value = DHA.ship_class_of_service) a,
       (SELECT flv.meaning d,
               DHA.HEADER_ID
        FROM   fusion.msc_xref_mapping MXM,
               fusion.msc_apps_instances Mai,
               fnd_lookup_values flv,
               DOO_HEADERS_ALL DHA
        WHERE  mxm.sr_instance_id = MAI.instance_id
               AND mxm.entity_name = 'WSH_MODE_OF_TRANSPORT'
               AND mxm.source_value = flv.lookup_code
               AND mxm.entity_name = flv.lookup_type
               AND mxm.attribute_name = 'LOOKUP_CODE'
               AND flv.LANGUAGE = Userenv('LANG')
               AND target_value = DHA.ship_mode_of_transport) c,
		(SELECT
         HP.PARTY_NAME ,
		 DHA.HEADER_ID
         FROM 
         msc_xref_mapping mxm,
         HZ_PARTIES HP,
         msc_apps_instances Mai,
         DOO_HEADERS_ALL DHA
         WHERE 1=1
         AND HP.PARTY_ID(+) = MXM.SOURCE_VALUE
         AND mxm.sr_instance_id = MAI.instance_id
         AND TARGET_VALUE = DHA.CARRIER_ID
         and mxm.ATTRIBUTE_NAME = 'CARRIER_ID'
         AND mxm.entity_name  = 'CARRIERS') D,	   
       doo_headers_all DHA,
       doo_headers_eff_b DHEB,
       hz_parties HP,
       doo_lines_all DLA,
       egp_system_items ESI,
       doo_fulfill_lines_all DFLA,
       hr_operating_units HOU,
       hr_locations HL,
       hr_organization_units HO,
       msc_payment_terms_vl mpt,
	   HISTORY_TABLE ESS,
       (SELECT DHA_ship.header_id          id1,
	   ( select 
                  LISTAGG(HCP.email_address,',') WITHIN GROUP (ORDER BY hcar.CUST_ACCT_SITE_ID) ship_email
                  
                  
                  from 
                  HZ_CONTACT_POINTS HCP,
                  hz_relationships HR,
                  hz_parties HP,
                  hz_cust_accounts hca,
                  HZ_CUST_ACCOUNT_ROLES hcar
                  WHERE 1=1
                  AND HCP.RELATIONSHIP_ID = HR.RELATIONSHIP_ID
                  AND HR.SUBJECT_ID = HP.PARTY_ID
                  AND HR.OBJECT_TYPE IN ( 'ORGANIZATION','PERSON')
                  AND hr.RELATIONSHIP_CODE='CONTACT'
                  AND hcar.ROLE_TYPE='CONTACT'
                  AND HCP.CONTACT_POINT_TYPE='EMAIL'
                  and hp.party_id = hca.PARTY_ID
                  --and hca.account_number='1406015'
                  AND hr.STATUS='A'
                  AND hcar.CUST_ACCOUNT_ID=hca.CUST_ACCOUNT_ID
                  AND hcar.CUST_ACCT_SITE_ID=hzcasa_ship.cust_acct_site_id   --ship to  cust_acct_site_id derived from doa.party_site_id=hcsa.party_site_id
                  AND hcar.RELATIONSHIP_ID=hr.RELATIONSHIP_ID
                  AND  exists( select 1 from hz_role_responsibility  hrr 
                                  where hrr.CUST_ACCOUNT_ROLE_ID=hcar.CUST_ACCOUNT_ROLE_ID
                                  and RESPONSIBILITY_TYPE='ACK'
	          		     )
	             ) ship_email,
	   doa_ship.party_site_id party_site_id_b,
               hzps_SHIP.party_site_number ship_to_site_number,
               hzps_SHIP.party_site_name   ship_to_site,
               hzl_SHIP.address1           SHIP_TO_ADDRESS1,
               hzl_SHIP.address2           SHIP_TO_ADDRESS2,
               hzl_SHIP.city               SHIP_TO_CITY,
               hzl_SHIP.postal_code        SHIP_TO_POSTAL_CODE,
               hzl_SHIP.state              SHIP_TO_STATE,
               HZP_SHIP.email_address      SHIP_TO_EMAIL,
               HZP_SHIP.party_name
        FROM   hz_parties HZP_SHIP,
               hz_cust_accounts HZA_SHIP,
               hz_cust_acct_sites_all hzcasa_SHIP,
               hz_party_sites hzps_SHIP,
               hz_locations HZL_SHIP,
               doo_headers_all DHA_SHIP,
               doo_order_addresses DOA_SHIP
        WHERE  HZP_ship.party_id = DHA_SHIP.sold_to_party_id
               AND dha_SHIP.header_id = doa_SHIP.header_id (+)
               AND ( doa_ship.address_use_type = 'SHIP_TO'
                      OR doa_ship.address_use_type IS NULL )
               AND doa_ship.party_site_id = hzps_ship.party_site_id (+)
               AND hzcasa_ship.party_site_id (+) = hzps_ship.party_site_id
               AND hzps_ship.party_id = hzp_ship.party_id (+)
               AND HZcasa_ship.cust_account_id = hza_ship.cust_account_id (+)
               AND hzps_ship.location_id = hzl_ship.location_id (+)
               --AND DHA.SOURCE_ORDER_NUMBER  = ('&SOURCE_ORDER_NUMBER')
               AND DHA_ship.status_code <> 'DOO_REFERENCE'
               AND DHA_ship.submitted_flag = 'Y'
       -- is this the active/submitted version
       ) SHIP_TO,
       (SELECT DHA_bill.header_id        ID2,
	   ( select 
                  LISTAGG(HCP.email_address,',') WITHIN GROUP (ORDER BY hcar.CUST_ACCT_SITE_ID) bill_email
                  
                  
                  from 
                  HZ_CONTACT_POINTS HCP,
                  hz_relationships HR,
                  hz_parties HP,
                  hz_cust_accounts hca,
                  HZ_CUST_ACCOUNT_ROLES hcar
                  WHERE 1=1
                  AND HCP.RELATIONSHIP_ID = HR.RELATIONSHIP_ID
                  AND HR.SUBJECT_ID = HP.PARTY_ID
                  AND HR.OBJECT_TYPE IN ( 'ORGANIZATION','PERSON')
                  AND hr.RELATIONSHIP_CODE='CONTACT'
                  AND hcar.ROLE_TYPE='CONTACT'
                  AND HCP.CONTACT_POINT_TYPE='EMAIL'
                  and hp.party_id = hca.PARTY_ID
                  --and hca.account_number='1406015'
                  AND hr.STATUS='A'
                  AND hcar.CUST_ACCOUNT_ID=hca.CUST_ACCOUNT_ID
                  AND hcar.CUST_ACCT_SITE_ID=hzcasa_BILL.cust_acct_site_id   --ship to  cust_acct_site_id derived from doa.party_site_id=hcsa.party_site_id
                  AND hcar.RELATIONSHIP_ID=hr.RELATIONSHIP_ID
                  AND  exists( select 1 from hz_role_responsibility  hrr 
                                  where hrr.CUST_ACCOUNT_ROLE_ID=hcar.CUST_ACCOUNT_ROLE_ID
                                  and RESPONSIBILITY_TYPE='ACK'
	          		     )
	             ) bill_email,
               hzps_BILL.party_site_name BILL_TO_SITE,
               hzl_BILL.address1         BILL_TO_ADDRESS1,
               hzl_BILL.address2         BILL_TO_ADDRESS2,
               hzl_BILL.city             BILL_TO_CITY,
               hzl_BILL.postal_code      BILL_TO_POSTAL_CODE,
               hzl_BILL.state            BILL_TO_STATE,
               HZP_bill.email_address    bill_TO_EMAIL
        FROM   hz_parties HZP_BILL,
               doo_headers_all DHA_BILL,
               doo_order_addresses DOA_BILL,
               hz_cust_accounts HZA_BILL,
               hz_cust_site_uses_all hzcsua_BILL,
               hz_cust_acct_sites_all hzcasa_BILL,
               hz_party_sites hzps_BILL,
               hz_locations HZL_BILL
        WHERE  HZP_BILL.party_id = DHA_BILL.sold_to_party_id
               AND dha_BILL.header_id = doa_bill.header_id (+)
               AND ( doa_BILL.address_use_type = 'BILL_TO'
                      OR doa_BILL.address_use_type IS NULL )
               AND DOA_BILL.cust_acct_id = hza_BILL.cust_account_id (+)
               AND DOA_BILL.cust_acct_site_use_id = hzcsua_BILL.site_use_id(+)
               AND hzcsua_BILL.cust_acct_site_id =
                   hzcasa_BILL.cust_acct_site_id (+)
               AND hzcasa_BILL.party_site_id = hzps_BILL.party_site_id (+)
               AND hzps_BILL.location_id = hzl_BILL.location_id (+)
       --AND DHA.SOURCE_ORDER_NUMBER   = ('&SOURCE_ORDER_NUMBER')
       ) BILL_TO,
       (SELECT r.relationship_id,
               r.object_id,
               p.party_name,
               c.party_name AS contact_name,
               c.status,
               EmailPEO.email_address,
               r.directional_flag,
               p.party_id,
               c.party_id   AS PARTY_ID1,
               r.relationship_rec_id,
               OrganizationContactPEO.job_title,
               OrganizationContactPEO.org_contact_id,
               OrganizationContactPEO.department,
               EmailPEO.contact_point_id,
               EmailPEO.contact_point_type,
               OrganizationContactPEO.contact_number
        FROM   fusion.hz_relationships r,
               fusion.hz_parties p,
               fusion.hz_parties c,
               fusion.hz_org_contacts OrganizationContactPEO,
               fusion.hz_contact_points EmailPEO
        WHERE  p.party_id = r.object_id
               AND c.party_id = r.subject_id
               AND r.object_type IN ( 'ORGANIZATION', 'PERSON' )
               AND r.relationship_code = 'CONTACT_OF'
               AND r.subject_type = 'PERSON'
               AND r.directional_flag = 'F'
               AND r.relationship_id =
                   OrganizationContactPEO.party_relationship_id(+)
               AND EmailPEO.owner_table_id(+) = r.subject_id
               AND EmailPEO.relationship_id(+) = r.relationship_id
               AND EmailPEO.owner_table_name(+) = 'HZ_PARTIES'
               AND EmailPEO.contact_point_type(+) = 'EMAIL'
               AND EmailPEO.primary_flag(+) = 'Y'
               AND EmailPEO.status(+) = 'A') contact
WHERE  1 = 1
        and a.header_id(+) =dha.header_id
        and c.header_id (+)=dha.header_id
		AND D.HEADER_ID(+)= dha.header_id
       --AND dha.ORDER_NUMBER ='1194'--'202'-- '1439' 
       AND DHA.header_id = DLA.header_id
       AND ESI.organization_id = DLA.inventory_organization_id
       AND dha.status_code = 'OPEN'
       AND DFLA.schedule_ship_date IS NOT NULL
       AND ESI.inventory_item_id = DLA.inventory_item_id
       AND DFLA.line_id = DLA.line_id
       AND DHA.header_id = SHIP_TO.id1(+)
       AND SHIP_TO.id1 = BILL_TO.id2(+)
       AND contact.relationship_id(+) = dha.sold_to_party_contact_id
       AND HOU.organization_id = DHA.org_id
       AND HOU.organization_id = HO.organization_id
       AND HO.location_id = HL.location_id
       AND dha.sold_to_party_id = hp.party_id
       AND DHA.header_id = DHEB.header_id(+)
       AND DHEB.context_code(+) = 'Shopify Customer'
       AND dha.payment_term_id = mpt.term_id(+)
	   
       AND (DHA.LAST_UPDATE_DATE >= nvl(ess.Last_run_date, trunc(sysdate))
	   OR (
       ( HOU.name IN ( :p_business_unit )
              OR Coalesce (:p_business_unit, NULL) IS NULL )
       AND ( HP.party_name IN ( :P_CUSTOMER_NAME )
              OR Coalesce (:P_CUSTOMER_NAME, NULL) IS NULL )
       AND ( DHA.order_number IN ( :P_Sales_Order_Number ))
              --OR Coalesce (:P_Sales_Order_Number, NULL) IS NULL )
       AND ( dha.creation_date IN ( :p_SO_Creation_Date )
              OR Coalesce (:p_SO_Creation_Date, NULL) IS NULL )
       AND ( ship_to.ship_to_site IN ( :P_SHIP_TO )
              OR Coalesce (:P_SHIP_TO, NULL) IS NULL )	) )	
ORDER BY DHA.ORDER_NUMBER,DLA.LINE_NUMBER
=================================================================================================================================
--SALES ORDER BY SIREESHA CHINTALA
--q2
select to_char(sysdate,'dd-MON-yyyy  HH:MM') TIME_STAMP  from dual
--salesorder
WITH MAIN1 AS (SELECT 
		  DHA.ORDER_NUMBER LuxCo_SO
		, DHA.CUSTOMER_PO_NUMBER OpCo_PurchaseOrder_Number
		, to_char(DHEB.ATTRIBUTE_DATE1,'mm/dd/yyyy') OpCo_Order_Date
		, (dla.DISPLAY_LINE_NUMBER ||'-'||dfla.FULFILL_LINE_NUMBER) "LuxCo_SO_Line"
		,  dfLA.ORDERED_QTY "Order_Qty _Value_SO"
		, (select IUOMV.UNIT_OF_MEASURE 
			  from INV_UNITS_OF_MEASURE_vl IUOMV 
			  WHERE IUOMV.UOM_CODE=DLA.ORDERED_UOM) "Order_Qty_UOM_SO"
		,( CASE 
	 -------- CONFIRMED logic Started------------------	 
				WHEN dfla.status_code     = 'AWAIT_SHIP' 
				and  plla.SCHEDULE_STATUS = 'OPEN'  
				and  plla.promised_date is not null
				AND (select PV.CO_NUM 
						  from po_versions pv 
						  where pv.version_id =pha.current_version_id) IS NOT NULL 	
			  /*and  pv.ORIGINATOR_ROLE='BUYER' 
				and  pv.CHANGE_ORDER_TYPE='I'*/ 
				THEN 'Confirmed' 
	-------- CONFIRMED logic Ended------------------
	-------- Order Confirmation Overdue logic Started------------------	
				 WHEN dfla.status_code ='AWAIT_SHIP' 
				and plla.SCHEDULE_STATUS= 'OPEN' 
				AND trunc(sysdate) - (SELECT trunc(max(PV.CREATION_DATE))
				 FROM PO_VERSIONS PV
				 WHERE 1=1
				 AND PV.PO_HEADER_ID = pha.PO_HEADER_ID
				 AND plla.ATTRIBUTE11='Y' 
				 AND pv.ORIGINATOR_ROLE='BUYER'
				AND pv.CHANGE_ORDER_TYPE='I'
								) >= 2
			  /*and pv.ORIGINATOR_ROLE='BUYER' 
				and pv.CHANGE_ORDER_TYPE='I' */
				THEN 'Order Confirmation Overdue' 
	-------- Order Confirmation Overdue logic Ended------------------	
	 -------- Receipt Confirmed logic Started------------------	
				WHEN dfla.status_code ='AWAIT_SHIP' 
				and  PLLA.attribute11='Y'  
				and  plla.SCHEDULE_STATUS='OPEN'
				AND (select PV.CO_NUM 
						  from po_versions pv 
						  where pv.version_id = pha.current_version_id) IS NOT NULL 	
			  /*and pv.ORIGINATOR_ROLE='BUYER' 
				and pv.CHANGE_ORDER_TYPE='I' */
				THEN 'Receipt Confirmed' 	
	-------- Receipt Confirmed logic Ended------------------
		
	---------- Changed Status Logic Started -------------------			
			WHEN dfla.status_code in ('DOO_CHANGED','CHANGE_PENDING','SCHEDULED','AWAIT_SHIP')  
				and dfla.status_code <> 'CANCELED' 
				and plla.SCHEDULE_STATUS = 'OPEN' 
				AND (select max(Pv.co_num)
						From 			
					   PO_LINE_LOCATIONS_ARCHIVE_ALL plla1
					 , po_versions pv  
					WHERE pv.po_header_id = plla1.po_header_id
					AND plla.po_line_id = pla.po_line_id
					AND pv.po_header_id =PHa.po_header_id
					AND (PLLA1.from_co_seq >= PV.co_sequence
					AND PLLA1.to_co_seq > PV.co_sequence )
					AND plla1.line_location_id =  pLLa.LINE_LOCATION_id
					and (pv.ORIGINATOR_ROLE = 'REQUESTER' 
						OR pv.ORIGINATOR_ROLE = 'BUYER') 
						 --  and  pv.CHANGE_ORDER_TYPE='E'
						  ) IS NOT NULL 		
				  
				THEN 'Changed' 
	---------- Changed Status Logic Ended ---------------------------------	
				
	--------- Produced Status Logic Started ----------------------------
				WHEN PHA.segment1 is NOT NULL 
				 AND dfla.status_code in ('SHIPPED','AWAIT_BILLING') 
				 and plla.SCHEDULE_STATUS IN ('CLOSED FOR INVOICING','CLOSED','OPEN')
				 AND (select AIA.invoice_date
				  from ap_invoices_all AIA 
				  where aia.invoice_id in 
				  (
					select AILA.invoice_id 
				  from ap_invoice_lines_all AILA 
			  where AILA.QUANTITY_INVOICED = DFLA.ordered_QTY
				  AND AILA.LINE_NUMBER = DLA.Line_number
					and AILA.po_line_id in (
			  select DDR.DOC_line_id 
				  from  doo_document_references ddr 
			  where DDR.FULFILL_LINE_ID = DFLA.FULFILL_LINE_ID
			  and DDR.DOC_REF_TYPE = 'DROPSHIP_PO_REFERENCE'
			  And rownum = 1
			  ))) is NOT NULL
		THEN 'Produced' 
				WHEN PHA.segment1 is NULL
				 AND dfla.status_code in ('AWAIT_BILLING') 
				 and (select DFLEB.ATTRIBUTE_CHAR2 
						 from DOO_fulfill_lines_EFF_b DFLEB
						 where 1=1
						 AND DFLEB.CONTEXT_CODE ='DropShip Information'
						 AND DFLEB.FULFILL_LINE_ID = dfla.FULFILL_LINE_ID ) = 'Y' 
				  then 'Produced'	
			When dfla.status_code = 'AWAIT_SHIP'
			     AND PHA.segment1 is NOT NULL
			     AND plla.SCHEDULE_STATUS is NULL
			then 'Produced'
	 ---------- Produced Status Logic End -------------------
      ----------Requisition Created logic started -------------------
          	 WHEN dfla.status_code in ('DOO_REQ_CREATED') 
	             THEN  'Requisition Created'
	----------Requisition Created logic Ended -------------------
	----------Returned logic started -------------------
	          WHEN dla.LINE_TYPE_CODE = 'ORA_RETURN'
			      THEN  'Returned'
	----------Returned logic Ended -------------------	 
	 
	 ---------- Created Status Logic Started -------------------
				WHEN dfla.status_code in ('DOO_REQ_CREATED') 
				AND plla.SCHEDULE_STATUS NOT IN ('CLOSED FOR RECEIVING','CLOSED FOR INVOICING')
				and dfla.status_code <> 'CANCELED' 
				AND (select Pv.co_num
					From 			
					 PO_LINE_LOCATIONS_ARCHIVE_ALL plla1
				   , po_versions pv  
					WHERE pv.po_header_id = plla1.po_header_id
					AND plla.po_line_id = pla.po_line_id
					AND pv.po_header_id = PHa.po_header_id
					AND (PLLA1.from_co_seq >= PV.co_sequence
					AND PLLA1.to_co_seq > PV.co_sequence )
					AND plla1.line_location_id =  pLLa.LINE_LOCATION_id
					 AND ROWNUM = 1) IS  NULL      
				THEN 'Created'
	---------- Created Status Logic Ended -------------------	
	---------- Cancelled Status Logic Started -------------------				
				WHEN dfla.status_code ='CANCELED' 
				THEN 'Canceled'
	---------- Cancelled Status Logic Ended -------------------	
	---------- Final Closure Logic Started ---------------------
			when DDR1.DOC_USER_KEY is NOT NULL              
				and dfla.status_code = 'CLOSED'
				AND (select plla.SCHEDULE_STATUS 
						 from po_line_locations_all PLLA
									 where PLLA.po_line_id = DDR1.Doc_line_id)
									 IN ('CLOSED','CLOSED FOR INVOICING','OPEN') 
				AND ( case when DDR1.DOC_USER_KEY  is NOT NULL
						  then (select to_char(rcta.trx_date,'mm/dd/yyyy')
						   from  ra_customer_trx_lines_all rctal,
								 doo_document_references ddr,
								 ra_customer_trx_all rcta
				 where 1=1
				 AND dfla.fulfill_line_id =ddr.fulfill_line_id
				 and rctal.interface_line_attribute5 = to_char (ddr.fulfill_line_id)
				 and rctal.customer_trx_id = rcta.customer_trx_id
				 and ddr.doc_ref_type = 'DROPSHIP_PO_REFERENCE' 
				 and rownum=1 
							   )
			   when DDR1.DOC_USER_KEY  is NULL
			   THEN (select to_char(rcta.trx_date,'mm/dd/yyyy')
							from  ra_customer_trx_lines_all rctal,
						   ra_customer_trx_all rcta 
					   where 1=1
						AND rcta.INTERFACE_HEADER_ATTRIBUTE1 = DHA.order_number
						AND rctal.customer_trx_id = rcta.customer_trx_id
						AND ROWNUM = 1
							   ) 
			  else null
			  end) is NOT NULL
			 AND ( select PLLA.ATTRIBUTE12 
						 from po_line_locations_all PLLA
									 where PLLA.po_line_id = DDR1.Doc_line_id )is NOT NULL 
			/* AND ( select plla.Attribute12
			   from 
					doo_document_references ddr
					, po_lines_all pla
					, po_line_locations_all plla
					,Doo_fulfill_lines_All dfla
		  where 1=1
		 --   AND DDR.DOC_USER_KEY    = '300100798'
			AND DDR.Fulfill_line_id = DFLA.fulfill_line_id
			AND DDR.doc_line_id     = pla.po_line_id
			AND PLLA.po_line_id     = pla.po_line_id 
			AND rownum = 1) is not null*/
		  THEN 'Final Closure'
		  WHEN DDR1.DOC_USER_KEY is  NULL 
						AND ( select plla.attribute12
								 from DOO_fulfill_lines_EFF_b DFLEB ,
								  ap_invoice_lines_all  AILA ,
								  ap_invoices_all  AIA  ,
								  po_headers_all pha ,
								   po_lines_all pla,
									po_line_locations_all plla
								 where 1=1
								 AND DFLEB.CONTEXT_CODE ='DropShip Information'
								 AND AIA.INVOICE_NUM = DFLEB.ATTRIBUTE_CHAR1
								 AND DFLEB.ATTRIBUTE_CHAR2 = 'Y'
								 AND AIlA.INVOICE_id  = AIA.INVOICE_id
								  AND AIA.po_header_id = pha.po_header_id
								  AND PLA.LINE_NUM     = DFLEB.ATTRIBUTE_NUMBER1
								 AND DFLEB.ATTRIBUTE_NUMBER1 = AILA.line_number
								 AND DFLEB.ATTRIBUTE_NUMBER1 = PLLA.ATTRIBUTE12
								 and pha.po_header_id = plla.po_header_id
								 AND DFLEB.FULFILL_LINE_ID = dfla.FULFILL_LINE_ID 
								 AND ROWNUM = 1) is not null

					  THEN	'Final Closure'
	-------- Final Closure Logic End -------------------------
	-------- Invoiced Status Logic Start ------------------------			
				when  PHA.segment1 is NOT NULL              
						and dfla.status_code = 'CLOSED'
						and plla.SCHEDULE_STATUS IN ('CLOSED','CLOSED FOR INVOICING','OPEN') 
						AND ( case when PHA.segment1 is NOT NULL
								  then (select to_char(rcta.trx_date,'mm/dd/yyyy')
								   from  ra_customer_trx_lines_all rctal,
										 doo_document_references ddr,
										 ra_customer_trx_all rcta
						 where 1=1
						 AND dfla.fulfill_line_id =ddr.fulfill_line_id
						 and rctal.interface_line_attribute5 = to_char (ddr.fulfill_line_id)
						 and rctal.customer_trx_id = rcta.customer_trx_id
						 and ddr.doc_ref_type = 'DROPSHIP_PO_REFERENCE' 
						 and rownum=1 
									   ) 
					   when PHA.segment1 is NULL
					   THEN (select to_char(rcta.trx_date,'mm/dd/yyyy')
									from  ra_customer_trx_lines_all rctal,
								   ra_customer_trx_all rcta 
							   where 1=1
								AND rcta.INTERFACE_HEADER_ATTRIBUTE1 = DHA.order_number
								AND rctal.customer_trx_id = rcta.customer_trx_id
								AND ROWNUM = 1
									   ) 
					  else null
					  end) is NOT NULL
				  THEN 'Invoiced'
				 WHEN PHA.segment1 is  NULL 
					   AND  dfla.status_code = 'CLOSED'
						 OR (select DFLEB.ATTRIBUTE_CHAR2 
								 from DOO_fulfill_lines_EFF_b DFLEB ,
								  ap_invoice_lines_all  AILA ,
								  ap_invoices_all  AIA 
								 where 1=1
								 AND DFLEB.CONTEXT_CODE ='DropShip Information'
								 AND AIA.INVOICE_NUM   = DFLEB.ATTRIBUTE_CHAR1
								 AND AIlA.INVOICE_id   = AIA.INVOICE_id
								  AND AILA.LINE_NUMBER = DFLEB.ATTRIBUTE_NUMBER2
								 AND DFLEB.FULFILL_LINE_ID = dfla.FULFILL_LINE_ID ) = 'Y'

					  THEN	'Invoiced'
	------------ Invoiced Status Logic End -----------------------------
	-------- Receipt Confirmation Overdue logic Started------------------				
				WHEN DFLA.status_code ='AWAIT_SHIP' 
				and  pla.LINE_STATUS = 'OPEN'
				AND  trunc(sysdate) - trunc(pla.creation_date) > 1
				    OR trunc(sysdate) - (SELECT Trunc(max(PV.CREATION_DATE))
										 from PO_LINE_LOCATIONS_ARCHIVE_ALL plla1, po_versions pv
					WHERE pv.po_header_id = plla1.po_header_id
			     AND (pv.ORIGINATOR_ROLE = 'REQUESTER' 
				   OR pv.ORIGINATOR_ROLE = 'BUYER' )
			  -- AND pv.CHANGE_ORDER_TYPE = 'I'
			   AND (PLLA1.from_co_seq >= PV.co_sequence
				  AND PLLA1.to_co_seq > PV.co_sequence 
				  AND plla1.line_location_id =  pLLa.LINE_LOCATION_id 
				  )) > 1
			  /*and pv.ORIGINATOR_ROLE='REQUESTER' 
				  and  pv.CHANGE_ORDER_TYPE='E' */
			   THEN 'Receipt Confirmation Overdue'
	 -------- Receipt Confirmation Overdue logic Ended------------------

				
				else null
				end
					  ) SO_Line_status
		, to_char(DLA.CREATION_DATE,'mm/dd/yyyy') "LuxCo_SO_Creation_Date"
		, DFLA.CUSTOMER_PO_LINE_NUMBER "OpCo Purchase Order Line Number"
		,(select IUOMV.UNIT_OF_MEASURE 
				from INV_UNITS_OF_MEASURE_vl IUOMV 
				WHERE IUOMV.UOM_CODE=ESIB.PRIMARY_UOM_CODE) "CD_UOM_SO"
		,(select IUOMV.UNIT_OF_MEASURE 
			   from INV_UNITS_OF_MEASURE_vl IUOMV 
				WHERE IUOMV.UOM_CODE=ESIB.PRIMARY_UOM_CODE) "MD_UOM_SO"
		,(select IUOMV.UNIT_OF_MEASURE  
			   from INV_UNITS_OF_MEASURE_vl IUOMV 
			   WHERE IUOMV.UOM_CODE=ESIB.PRIMARY_UOM_CODE) "I_UOM_SO"
		,(select IUOMV.UNIT_OF_MEASURE
			   from INV_UNITS_OF_MEASURE_vl IUOMV 
			   WHERE IUOMV.UOM_CODE=ESIB.PRIMARY_UOM_CODE) "O_UOM_SO"
		, ESIB.CUMULATIVE_TOTAL_LEAD_TIME "Standard_Leadtime"
		, DDR1.DOC_USER_KEY "LuxCo PO Number"
		, NVL(pha.attribute1,DDR1.DOC_USER_KEY ) "LuxCo Parent PO Number"
		, (select max(esib.ITEM_NUMBER)
					 FROM EGP_SYSTEM_ITEMS_B esib 
					 where 1=1
					  AND esib.ORGANIZATION_ID = DLA.INVENTORY_ORGANIZATION_ID
					  and esib.INVENTORY_ITEM_ID = DLA.INVENTORY_ITEM_ID) "LuxCo Item Number"
		,  (select max(esit.DESCRIPTION)
					 FROM EGP_SYSTEM_ITEMS_tl esit
					 where 1=1
					  AND esit.ORGANIZATION_ID = DLA.INVENTORY_ORGANIZATION_ID
					  and esit.INVENTORY_ITEM_ID = dla.INVENTORY_ITEM_ID) "LuxCo Item Description"
	   ,(select IUOMV.UNIT_OF_MEASURE
			 from INV_UNITS_OF_MEASURE_vl IUOMV 
			 WHERE IUOMV.UOM_CODE=ESIB.PRIMARY_UOM_CODE) "PO UOM for Quantities"
		, DFLA.ordered_QTY "Order Qty in PO UOM"
		, PLLA.ATTRIBUTE10 "Failure code"
		, PLLA.ATTRIBUTE9 "Quotum Month"
		, plla.attribute13 "Claim Number"
		, PLLA.ATTRIBUTE5 "Mill Order Number"
		, DFLA.FULFILLED_QTY "Shipped Quantity in PO UOM"  
		, TO_CHAR(PLLA.NEED_BY_DATE,'mm/dd/yyyy') "Requested Delivery Date"
		, TO_CHAR(PLLA.PROMISED_DATE,'mm/dd/yyyy') "Promised Delivery Date"
		, NVL(TO_CHAR(PLLA.ATTRIBUTE_DATE4,'mm/dd/yyyy'),TO_CHAR(PLLA.ATTRIBUTE_DATE2,'mm/dd/yyyy' )) "Delivery Date"
		, TO_CHAR(PLLA.ATTRIBUTE_DATE1,'mm/dd/yyyy') "Shipping Leg 1 Departure Date"
		, PLLA.ATTRIBUTE1 "Shipping Leg 1 Departure Place"
		, PLLA.ATTRIBUTE2 "Shipping Leg1 Vessel Name"
		, TO_CHAR(PLLA.ATTRIBUTE_DATE2,'mm/dd/yyyy') "Shipping Leg1 Arrival Date"
		, PLLA.ATTRIBUTE3 "Shipping Leg 1 Arrival Place"
		, TO_CHAR(PLLA.ATTRIBUTE_DATE3,'mm/dd/yyyy') "Shipping Leg 2 Departure Date"
		, PLLA.ATTRIBUTE6 "Shipping Leg 2 Departure Place"
		, PLLA.ATTRIBUTE7 "Shipping Leg 2 Vessel Name"
		, TO_CHAR(PLLA.ATTRIBUTE_DATE4,'mm/dd/yyyy') "Shipping Leg 2 Arrival Date"
		, PLLA.ATTRIBUTE8 "Shipping Leg 2 Arrival Place"
		, (SELECT ep.tp_item_number
						  FROM egp_trading_partner_items ep,
							   egp_item_relationships_b eir
						 WHERE     ep.tp_item_id = eir.tp_item_id
							   AND eir.inventory_item_id = DFLA.inventory_item_id
							   AND ep.tp_type = 'CUSTOMER'
							   AND ep.trading_partner_id = dha.SOLD_TO_PARTY_ID --hca.party_id
							   AND (eir.end_date_active IS NULL
									OR TRUNC (eir.end_date_active) > TRUNC (SYSDATE))
							   AND ROWNUM = 1)  OpCo_Item_Number
		, (SELECT ep.TP_ITEM_DESC
						  FROM egp_trading_partner_items ep,
							   egp_item_relationships_b eir
						 WHERE ep.tp_item_id = eir.tp_item_id
							   AND eir.inventory_item_id = DFLA.inventory_item_id
							   AND ep.tp_type = 'CUSTOMER'
							   AND ep.trading_partner_id = dha.SOLD_TO_PARTY_ID --hca.party_id
							   AND (eir.end_date_active IS NULL
									OR TRUNC (eir.end_date_active) > TRUNC (SYSDATE))
							   AND ROWNUM = 1)  Opco_Item_Description
		, EIEB.ATTRIBUTE_NUMBER1 MD_Value_SO
		, EIEB.ATTRIBUTE_NUMBER2 CD_Value_SO
		, EIEB.ATTRIBUTE_NUMBER3 I_Value_SO
		, EIEB.ATTRIBUTE_NUMBER4 O_Value_So
		,(select  
			   case when EIEB.ATTRIBUTE_CHAR2 ='PEFC' then 'PEFC'
					when EIEB.ATTRIBUTE_CHAR2 in ('FSC MIX 70','FSC 100','FSC') then 'FSC'
					Else NULL
					end
				 from 
					 EGO_ITEM_EFF_B EIEB 
				 where 
					 EIEB.CONTEXT_CODE IN ('Certification Information','Certification Information (IMO)')
				 and  EIEB.INVENTORY_ITEM_ID=ESIB.INVENTORY_ITEM_ID 
				 AND Rownum = 1 
														  ) Certification_Type
	  
		,  ( case when PHA.segment1 is NOT NULL
				  then (select to_char(rcta.trx_date,'mm/dd/yyyy')
						   from  ra_customer_trx_lines_all rctal,
								 doo_document_references ddr,
								 ra_customer_trx_all rcta
				 where 1=1
				 AND dfla.fulfill_line_id =ddr.fulfill_line_id
				 and rctal.interface_line_attribute5 = to_char (ddr.fulfill_line_id)
				 and rctal.customer_trx_id = rcta.customer_trx_id
				 and ddr.doc_ref_type = 'DROPSHIP_PO_REFERENCE' 
				 and rownum=1 
							   )
			   when PHA.segment1 is NULL
			   THEN (select to_char(rcta.trx_date,'mm/dd/yyyy')
							from  ra_customer_trx_lines_all rctal,
						          ra_customer_trx_all rcta 
					   where 1=1
						AND rcta.INTERFACE_HEADER_ATTRIBUTE1 = DHA.order_number
						AND rctal.customer_trx_id = rcta.customer_trx_id
						AND dfla.status_code <> 'CANCELED' 
						AND ROWNUM = 1
							   ) 
			  else null
			  end) Invoice_date	
	/*	, (select to_char(rcta.trx_date,'dd-mm-yyyy')
						   from  ra_customer_trx_lines_all rctal,
								 doo_document_references ddr,
								 ra_customer_trx_all rcta
				 where 1=1
				 AND dfla.fulfill_line_id =ddr.fulfill_line_id
				 and rctal.interface_line_attribute5 = to_char (ddr.fulfill_line_id)
				 and rctal.customer_trx_id = rcta.customer_trx_id
				 and ddr.doc_ref_type = 'DROPSHIP_PO_REFERENCE' 
				 and rownum=1 
							   )  Invoice_date*/
		
		, ( case when DDR1.DOC_USER_KEY is NOT NULL
				then (select TO_CHAR(AIA.invoice_date,'mm/dd/yyyy')
				               from  doo_document_references ddr,ap_invoice_lines_all AILA,
				  ap_invoices_all AIA				
			  where ddr.DOC_ID=AILA.PO_HEADER_ID
			  and ddr.DOC_LINE_ID= AILA.PO_LINE_ID
			  and ddr.DOC_SUBLINE_ID= AILA.PO_LINE_LOCATION_ID(+)
			  AND AIA.INVOICE_ID=AILA.INVOICE_ID
			  and DDR.FULFILL_LINE_ID = DFLA.FULFILL_LINE_ID
			  and DDR.DOC_REF_TYPE = 'DROPSHIP_PO_REFERENCE'
			  AND ROWNUM=1)
		when DDR1.DOC_USER_KEY is NULL
				THEN (select to_char(AIA.CREATION_DATE ,'mm/dd/yyyy') 
					 from DOO_fulfill_lines_EFF_b DFLEB, 
					ap_invoices_all  AIA 
					
			 where 1=1
			   AND DFLEB.ATTRIBUTE_CHAR2 = 'Y' 
			   AND AIA.INVOICE_NUM = DFLEB.ATTRIBUTE_CHAR1
			   AND DFLEB.FULFILL_LINE_ID(+) = dfla.FULFILL_LINE_ID 
			   AND Rownum = 1
			  )
			  else null
			  end)  Shipment_Date 		  

		, ship_party.party_name OpCo
		, ship_to_loc.address1||','||ship_to_loc.address2||','||ship_to_loc.address3||','||ship_to_loc.address4
					 ||','||ship_to_loc.city||','||ship_to_loc.state||','||ship_to_loc.postal_code
					 ||','||(select distinct HZG.GEOGRAPHY_NAME 
			   from HZ_geographies HZG 
			  WHERE HZG.GEOGRAPHY_CODE =ship_to_loc.COUNTRY) Opco_ship_to_Address
		,(case when DflA.CANCELED_FLAG='Y' 
				then to_char(DFLA.last_update_date,'mm/dd/yyyy' ) 
				else null 
				end 
									 ) Cancelled_Status_Date
	  
		,(select TO_CHAR(MAX(PV.CREATION_DATE),'mm/dd/yyyy')
             from PO_LINE_LOCATIONS_ARCHIVE_ALL plla1
		      , po_versions pv
                WHERE 1=1	
		   AND pv.po_header_id = plla1.po_header_id
           AND (pv.ORIGINATOR_ROLE = 'REQUESTER' 
		            OR pv.ORIGINATOR_ROLE = 'BUYER' )
           AND pv.CHANGE_ORDER_TYPE = 'E'
		   AND pv.co_num is not null
           AND (PLLA1.from_co_seq >= PV.co_sequence
           AND PLLA1.to_co_seq > PV.co_sequence
		   AND plla1.line_location_id =  pLLa.LINE_LOCATION_id 
		   AND plla1.po_line_id =  pLLa.PO_LINE_id 
		--   AND rownum = 1
			  )) Change_Status_Date	
		
		
		, (select TO_CHAR(max(PV.CREATION_DATE),'mm/dd/yyyy')
					 from PO_LINE_LOCATIONS_ARCHIVE_ALL plla1
						  , po_versions pv 
					WHERE pv.po_header_id = plla1.po_header_id
					AND PLLA.PROMISED_DATE IS NOT NULL
					AND  pv.ORIGINATOR_ROLE = 'BUYER'
					AND (PLLA1.from_co_seq >= PV.co_sequence
					AND PLLA1.to_co_seq > PV.co_sequence 
					AND plla1.line_location_id =  pLLa.LINE_LOCATION_id 
				  )) Confirmed_Status_Date												 
		
	  
		,   (select TO_CHAR(MAX(PV.CREATION_DATE),'mm/dd/yyyy')
               from   PO_LINE_LOCATIONS_ARCHIVE_ALL plla1
		              , po_versions pv 
                WHERE 1=1
				AND pv.po_header_id = plla1.po_header_id
				AND plla.ATTRIBUTE11 = 'Y'
		        AND pv.ORIGINATOR_ROLE = 'BUYER'
				AND pv.CHANGE_ORDER_TYPE='I'
                AND (PLLA1.from_co_seq >= PV.co_sequence
                AND PLLA1.to_co_seq > PV.co_sequence 
			    AND plla1.line_location_id =  pLLa.LINE_LOCATION_id 
				--AND ROWNUM = 1
			  )) "Receipt_Confirmation_Status_Date"										
		  , fabu.bu_name
		 , dfla.status_code
		  , PLLA.schedule_status
		  , PLLA.attribute12
		  , PLLA.attribute11
		  , PlA.po_header_id
		  , PLA.po_line_id
		  , DFLA.SOURCE_LINE_NUMBER
		  , plla.SALES_ORDER_LINE_NUMBER
		  , DDR1.DOC_USER_KEY
		  , DDR1.DOC_SUBLINE_USER_KEY
		  , PLLA.SHIPMENT_NUM
		  , dfla.FULFILL_LINE_NUMBER 
		  , pla.line_num
		  , pha.segment1
		  , DDR1.Doc_id
		  , DDR1.Doc_line_id
		  , plla.line_location_id
		  , DFLA.fulfill_line_id
		  , DLA.Line_number
		  , DFLA.ordered_QTY
		  , EIEB.CATEGORY_CODE
		  , EIEB.CONTEXT_CODE
		  , DHEB.ATTRIBUTE_DATE1
		  , DHA.SOLD_TO_PARTY_ID
		  , dha.ORG_ID
		  , pha.DOCUMENT_STATUS
		  , pla.LINE_STATUS
		  , pla.creation_date
	      , pHa.creation_date Header_Creation
				 
	FROM 
		  por_requisition_headers_all prha
		, por_requisition_lines_all prla  
		, doo_headers_all dha             
		, doo_fulfill_lines_all dfla 
		, doo_lines_all dla               
		, po_headers_all pha              
		, po_lines_all pla                
		, po_line_locations_all plla      
		, EGP_SYSTEM_ITEMS_B ESIB         
		, DOO_HEADERS_EFF_B DHEB          
		, EGO_ITEM_EFF_B EIEB            
		, doo_order_addresses ship_address 
		, hz_parties ship_party            
		, hz_party_sites party_site        
		, hz_locations ship_to_loc         
		, fun_all_business_units_v  fabu 
		, (select DDR.*  from doo_document_references ddr
								
													   where 
														
														 DDR.DOC_REF_TYPE = 'DROPSHIP_PO_REFERENCE'
													   )DDR1	
									   
	 
														   
		   
	WHERE   1=1
		  
			AND Dha.header_id                    = dla.header_id
			AND dha.header_id                    = dfla.header_id
			AND DDR1.FULFILL_LINE_ID  (+)        = DFLa.FULFILL_LINE_ID 
			AND DDR1.header_id       (+)         = DHA.header_id
		  --  AND DDR1.FULFILL_LINE_ID             = prla.interface_LINE_KEY (+)
		  --  AND TO_CHAR(dfla.fulfill_line_id)    = prla.interface_LINE_KEY (+)
			AND DDR1.doc_line_id                 = prla.po_line_id (+)
			AND prla.requisition_header_id       = prha.requisition_header_id (+)
			AND dha.submitted_flag               = 'Y'
			AND dfla.line_id                     = dla.line_id
			and dha.order_number                 = plla.sales_order_number(+)  
			and DFLA.source_LINE_NUMBER          = plla.SALES_ORDER_LINE_NUMBER(+)  
			and dfla.FULFILL_LINE_NUMBER         = PLLA.SHIPMENT_NUM (+)
			and prla.po_line_id                  = pla.po_line_id(+)
			and prla.po_line_id                  = plla.po_line_id (+)
			and pla.po_header_id                 = pha.po_header_id (+)		
			and pla.po_header_id			     = plla.po_header_id(+)
			and pla.po_line_id				     = plla.po_line_id(+)
			and plla.po_header_id			     = pha.po_header_id(+)	
			and DFLA.inventory_item_id           = ESIB.inventory_item_id
			AND DFLA.INVENTORY_ORGANIZATION_ID   = ESIB.ORGANIZATION_ID
			AND DHA.HEADER_ID                    = DHEB.HEADER_ID(+)  
			AND DHEB.CONTEXT_CODE(+)             = 'Additional Information' 
			AND EIEB.inventory_item_id(+)        = esib.inventory_item_id 
			AND EIEB.CONTEXT_CODE      (+)      in  ('Paperboard Pricing','Paperboard')
			AND EIEB.CATEGORY_CODE      (+)      = 'Paperboard'
			AND dha.ORG_ID                       = FABU.BU_ID
	--Ship To
			AND ship_address.header_id(+)        = dha.header_id 
			AND ship_address.ADDRESS_USE_TYPE(+) = 'SHIP_TO' 
			AND ship_party.party_id(+)           = ship_address.party_id 
			AND party_site.party_site_id(+)      = ship_address.party_site_id 
			AND ship_to_loc.location_id(+)       = party_site.location_id 
		--   and dha.ORDER_NUMBER IN ('998','988','985','984' ,'969', '979')
		--	AND FABU.BU_name                     = 'LUHUHT Huhtamaki Sarl'
			
	
ORDER BY 
			   DHA.ORDER_NUMBER 
			 , dla.DISPLAY_LINE_NUMBER
			 , dfla.FULFILL_LINE_NUMBER)
			-- , DLA.LINE_NUMBER  
		Select  * From MAIN1	
	        where 1=1
		       and (case when :P_STATUS_CODE = 'Y' 
			      and Main1. SO_Line_status NOT IN ('Final Closure','Canceled')  
				  then (1) when :P_STATUS_CODE = 'N' then  (1) else  (0) end) = 1
            AND ((:P_BU_Name is null) or (MAIN1.BU_Name = :P_BU_Name))
			AND ((:p_Item_class_type is null) or (MAIN1.CATEGORY_CODE = :p_Item_class_type))
			--AND MAIN1.CATEGORY_CODE = nvl(:p_Item_class_type,MAIN1.CATEGORY_CODE)
			and ((:p_OpCo_FROM IS NULL AND :p_OpCo_TO IS NULL) OR (MAIN1.SOLD_TO_PARTY_ID 
			BETWEEN :p_OpCo_FROM AND :p_OpCo_TO))
			and ((:p_LuxCo_PO_FROM IS NULL AND :p_LuxCo_PO_TO IS NULL) 
			OR (MAIN1.segment1 BETWEEN :p_LuxCo_PO_FROM AND :p_LuxCo_PO_TO))
			and ((:P_OpCo_OrderDate_from IS NULL AND :P_OpCo_OrderDate_TO IS NULL) 
			OR (trunc(MAIN1.ATTRIBUTE_DATE1) 
			BETWEEN to_date(to_char( :P_OpCo_OrderDate_from,'yyyy-MM-dd'),'yyyy-MM-dd') 
			AND to_date(to_char( :P_OpCo_OrderDate_To,'yyyy-MM-dd'), 'yyyy-MM-dd')))
=================================================================================================================================================
------------SCM Cost Roll Data Model-----------
--FII SCM Cost Rollup
select cs.scenario_number, topitem.item_number assembly_item, topitem_tl.description assembly_item_desc,
mkitem.item_number subassembly, mkitem_tl.description subassembly_item_desc,
op.operation_name,
buyitem.item_number component_item, buyitem_tl.description component_item_desc,
res.resource_code,
ibom.bom_level, LPAD('-', 2*(ibom.BOM_LEVEL),'-') || '>' || NVL(buyitem.ITEM_NUMBER, res.RESOURCE_CODE) ITEM_OR_RESOURCE,
ibom.unit_cost, ibom.extended_cost, ibom.quantity_usage, uom.unit_of_measure, wdn.work_def_name as Work_Definition, ibom.status_code
from
( 
SELECT MIN(ROLLUPKEY) ROLLUPKEY,
  ROOT_ASSEMBLY_ITEM_ID,
  DECODE(ROOT_TOTAL.ROOT_ROW_NUM, 1, ASSEMBLY_ITEM_ID, NULL) ASSEMBLY_ITEM_ID,
  DECODE(ROOT_TOTAL.ROOT_ROW_NUM, 1, BOM_LEVEL, 0) BOM_LEVEL,
  WORK_DEFINITION_ID,
  VERSION_NUMBER,
  ORGANIZATION_ID,
  OUTPUT_INVENTORY_ITEM_ID,
  WORK_DEFINITION_TYPE,
  PRODUCTION_PRIORITY,
  COSTING_PRIORITY,
  COSTING_BATCH_OUTPUT_SIZE WD_COSTING_BATCH_OUTPUT_SIZE,
  WORK_DEFINITION_NAME_ID,
  WORK_ORDER_ID,
--  PO_LINE_LOCATION_ID,
  VAL_UNIT_ID,
  SCENARIO_ROLLUP_HEADER_ID,
  SCENARIO_ID,
  ROLLUP_HEADER_TYPE,
  ROLLUP_HEADER_KEY,
  ROLLUP_HEADER_LEVEL,
  STATUS_CODE,
  SOURCE_TYPE,
  SOURCE_ID,
  COST_UOM_CODE,
  PRIMARY_UOM_CODE,
  COST_UOM_CONVERSION_FACTOR,
  CURRENCY_CONVERSION_RATE,
  PUBLISHED_FLAG,
  SCENARIO_EVENT_ID,
  INV_ORG_ID,
  POSTED_FLAG,
  DECODE(ROOT_TOTAL.ROOT_ROW_NUM, 1, WD_OPERATION_ID, NULL) WD_OPERATION_ID,
  DECODE(ROOT_TOTAL.ROOT_ROW_NUM, 1, RESOURCE_SEQ_NUMBER, NULL) RESOURCE_SEQ_NUMBER,
  DECODE(ROOT_TOTAL.ROOT_ROW_NUM, 1, RESOURCE_ID, NULL) RESOURCE_ID,
  DECODE(ROOT_TOTAL.ROOT_ROW_NUM, 1, MATERIAL_INVENTORY_ITEM_ID, NULL) MATERIAL_INVENTORY_ITEM_ID,
  DECODE(ROOT_TOTAL.ROOT_ROW_NUM, 1, MATERIAL_INVENTORY_ORG_ID, NULL) MATERIAL_INVENTORY_ORG_ID,
  DECODE(ROOT_TOTAL.ROOT_ROW_NUM, 1, COSTING_BATCH_OUTPUT_SIZE, NULL) COSTING_BATCH_OUTPUT_SIZE,
  DECODE(ROOT_TOTAL.ROOT_ROW_NUM, 1, YIELD_FACTOR, NULL) YIELD_FACTOR,
  DECODE(ROOT_TOTAL.ROOT_ROW_NUM, 1, BASIS_TYPE, NULL) BASIS_TYPE,
  DECODE(ROOT_TOTAL.ROOT_ROW_NUM, 1, QUANTITY_USAGE, 1) QUANTITY_USAGE,
  DECODE(ROOT_TOTAL.ROOT_ROW_NUM, 1, QTY_UOM_CODE, NULL) QTY_UOM_CODE,
  COST_UOM_CODE COMP_COST_UOM_CODE,
  SUM(EXTENDED_COST) EXTENDED_COST,
  SUM(EXTENDED_COST) / DECODE(ROOT_TOTAL.ROOT_ROW_NUM, 1, QUANTITY_USAGE, 1) UNIT_COST, -- recalculate the correct unit cost
  ROOT_TOTAL.ROOT_ROW_NUM
FROM
  (
  -- View
  SELECT SYS_CONNECT_BY_PATH(OUTPUT_INVENTORY_ITEM_ID||'.'||WD_OPERATION_ID||'.'||MATERIAL_INVENTORY_ITEM_ID||'.'||RESOURCE_ID, '/') ROLLUPKEY,
    CONNECT_BY_ROOT OUTPUT_INVENTORY_ITEM_ID ROOT_ASSEMBLY_ITEM_ID,
    OUTPUT_INVENTORY_ITEM_ID ASSEMBLY_ITEM_ID,
    LEVEL BOM_LEVEL,
    WORK_DEFINITION_ID,
    VERSION_NUMBER,
    ORGANIZATION_ID,
    OUTPUT_INVENTORY_ITEM_ID,
    WORK_DEFINITION_TYPE,
    PRODUCTION_PRIORITY,
    COSTING_PRIORITY,
    COSTING_BATCH_OUTPUT_SIZE WD_COSTING_BATCH_OUTPUT_SIZE,
    WORK_DEFINITION_NAME_ID,
    WORK_ORDER_ID,
--    PO_LINE_LOCATION_ID,
    VAL_UNIT_ID,
    SCENARIO_ROLLUP_HEADER_ID,
    SCENARIO_ID,
    ROLLUP_HEADER_TYPE,
    ROLLUP_HEADER_KEY,
    ROLLUP_HEADER_LEVEL,
    STATUS_CODE,
    SOURCE_TYPE,
    SOURCE_ID,
    COST_UOM_CODE,
    PRIMARY_UOM_CODE,
    COST_UOM_CONVERSION_FACTOR,
    CURRENCY_CONVERSION_RATE,
    PUBLISHED_FLAG,
    SCENARIO_EVENT_ID,
    INV_ORG_ID,
    POSTED_FLAG,
    WD_OPERATION_ID,
    RESOURCE_SEQ_NUMBER,
    RESOURCE_ID,
    MATERIAL_INVENTORY_ITEM_ID,
    MATERIAL_INVENTORY_ORG_ID,
    COSTING_BATCH_OUTPUT_SIZE,
    YIELD_FACTOR,
    BASIS_TYPE,
    TO_NUMBER(DECODE(NVL(QUANTITY_USAGE,0),0,1,QUANTITY_USAGE) )QUANTITY_USAGE,
    QTY_UOM_CODE,
    COST_UOM_CODE COMP_COST_UOM_CODE,
    EXTENDED_COST,
    UNIT_COST
  FROM
    (SELECT CWDV.WORK_DEFINITION_ID,
      CWDV.VERSION_NUMBER,
      CWDV.ORGANIZATION_ID,
      CWDV.OUTPUT_INVENTORY_ITEM_ID,
      CWDV.WORK_DEFINITION_TYPE,
      CWDV.PRODUCTION_PRIORITY,
      CWDV.COSTING_PRIORITY,
      CWDV.COSTING_BATCH_OUTPUT_SIZE WD_COSTING_BATCH_OUTPUT_SIZE,
      CWDV.WORK_DEFINITION_NAME_ID,
      CWDI.WORK_ORDER_ID,
--      CWDI.PO_LINE_LOCATION_ID,
      SC.VAL_UNIT_ID,
      SRH.SCENARIO_ROLLUP_HEADER_ID,
      SRH.SCENARIO_ID,
      SRH.ROLLUP_HEADER_TYPE,
      SRH.ROLLUP_HEADER_KEY,
      SRH.ROLLUP_HEADER_LEVEL,
      SRH.STATUS_CODE,
      SRH.SOURCE_TYPE,
      SRH.SOURCE_ID,
      SRH.COST_UOM_CODE,
      SRH.PRIMARY_UOM_CODE,
      SRH.COST_UOM_CONVERSION_FACTOR,
      SRH.CURRENCY_CONVERSION_RATE,
      SRH.PUBLISHED_FLAG,
      SRH.SCENARIO_EVENT_ID,
      SRH.INV_ORG_ID,
      SRH.POSTED_FLAG,
      SRD.WD_OPERATION_ID,
      SRD.RESOURCE_SEQ_NUMBER,
      SRD.RESOURCE_ID,
      SRD.MATERIAL_INVENTORY_ITEM_ID,
      SRD.MATERIAL_INVENTORY_ORG_ID,
      SRD.COSTING_BATCH_OUTPUT_SIZE,
      SRD.YIELD_FACTOR,
      SRD.BASIS_TYPE,
      SRD.QUANTITY_USAGE,
      SRD.QTY_UOM_CODE,
      SRD.COST_UOM_CODE COMP_COST_UOM_CODE,
      SRD.EXTENDED_COST,
      SRD.UNIT_COST
    FROM
      ( SELECT DISTINCT CWD.SCENARIO_ID,
        CWD.WORK_DEFINITION_ID,
        CWD.VERSION_NUMBER,
        CWD.ORGANIZATION_ID,
        CWD.OUTPUT_INVENTORY_ITEM_ID,
        CWD.WORK_DEFINITION_TYPE,
        CWD.PRODUCTION_PRIORITY,
        CWD.COSTING_PRIORITY,
        CWD.COSTING_BATCH_OUTPUT_SIZE,
        CWD.WORK_DEFINITION_NAME_ID
      FROM CST_WORK_DEFINITIONS CWD
      ) CWDV,
      CST_SCENARIO_ROLLUP_HEADERS SRH,
      CST_WORK_DEFINITION_ITEMS CWDI,
      CST_STD_COSTS SC,
      (SELECT SCENARIO_ROLLUP_HEADER_ID,
        WD_OPERATION_ID,
        RESOURCE_SEQ_NUMBER,
        RESOURCE_ID,
        MATERIAL_INVENTORY_ITEM_ID,
        MATERIAL_INVENTORY_ORG_ID,
        COSTING_BATCH_OUTPUT_SIZE,
        YIELD_FACTOR,
        BASIS_TYPE,
        QUANTITY_USAGE,
        QTY_UOM_CODE,
        COST_UOM_CODE,
        SUM(EXTENDED_COST) EXTENDED_COST,
        SUM(UNIT_COST) UNIT_COST
      FROM CST_SCENARIO_ROLLUP_DETAILS
      GROUP BY SCENARIO_ROLLUP_HEADER_ID,
        WD_OPERATION_ID,
        RESOURCE_SEQ_NUMBER,
        RESOURCE_ID,
        MATERIAL_INVENTORY_ITEM_ID,
        MATERIAL_INVENTORY_ORG_ID,
        COSTING_BATCH_OUTPUT_SIZE,
        YIELD_FACTOR,
        BASIS_TYPE,
        QUANTITY_USAGE,
        QTY_UOM_CODE,
        COST_UOM_CODE
      )SRD
    WHERE CWDV.OUTPUT_INVENTORY_ITEM_ID = SRH.ROLLUP_HEADER_KEY
      AND CWDV.SCENARIO_ID = SRH.SCENARIO_ID
      AND CWDV.ORGANIZATION_ID = SRH.INV_ORG_ID
      AND SRH.SCENARIO_ROLLUP_HEADER_ID = SRD.SCENARIO_ROLLUP_HEADER_ID(+)
      AND DECODE(SRH.ROLLUP_HEADER_TYPE, 'ITEM', SRH.SOURCE_ID, -1) = SC.STD_COST_ID (+)
      AND CWDV.SCENARIO_ID = CWDI.SCENARIO_ID (+)
      AND CWDV.ORGANIZATION_ID = CWDI.INVENTORY_ORG_ID (+)
      AND CWDV.OUTPUT_INVENTORY_ITEM_ID = CWDI.INVENTORY_ITEM_ID (+)
    )
    CONNECT BY PRIOR MATERIAL_INVENTORY_ITEM_ID = ROLLUP_HEADER_KEY
--    AND PRIOR MATERIAL_INVENTORY_ORG_ID = INV_ORG_ID
    AND PRIOR VAL_UNIT_ID = VAL_UNIT_ID
    AND PRIOR SCENARIO_ID = SCENARIO_ID
  ) ROLLUP_DET,
  (SELECT 1 ROOT_ROW_NUM FROM DUAL
  UNION
  SELECT 2 ROOT_ROW_NUM FROM DUAL
  ) ROOT_TOTAL
WHERE DECODE(ROLLUP_DET.ROOT_ASSEMBLY_ITEM_ID, ROLLUP_DET.ASSEMBLY_ITEM_ID, 2, 1) >= ROOT_TOTAL.ROOT_ROW_NUM
GROUP BY ROOT_ASSEMBLY_ITEM_ID,
  DECODE(ROOT_TOTAL.ROOT_ROW_NUM, 1, ASSEMBLY_ITEM_ID, NULL),
  DECODE(ROOT_TOTAL.ROOT_ROW_NUM, 1, BOM_LEVEL, 0),
  WORK_DEFINITION_ID,
  VERSION_NUMBER,
  ORGANIZATION_ID,
  OUTPUT_INVENTORY_ITEM_ID,
  WORK_DEFINITION_TYPE,
  PRODUCTION_PRIORITY,
  COSTING_PRIORITY,
  COSTING_BATCH_OUTPUT_SIZE,
  WORK_DEFINITION_NAME_ID,
  WORK_ORDER_ID,
--  PO_LINE_LOCATION_ID,
  VAL_UNIT_ID,
  SCENARIO_ROLLUP_HEADER_ID,
  SCENARIO_ID,
  ROLLUP_HEADER_TYPE,
  ROLLUP_HEADER_KEY,
  ROLLUP_HEADER_LEVEL,
  STATUS_CODE,
  SOURCE_TYPE,
  SOURCE_ID,
  COST_UOM_CODE,
  PRIMARY_UOM_CODE,
  COST_UOM_CONVERSION_FACTOR,
  CURRENCY_CONVERSION_RATE,
  PUBLISHED_FLAG,
  SCENARIO_EVENT_ID,
  INV_ORG_ID,
  POSTED_FLAG,
  DECODE(ROOT_TOTAL.ROOT_ROW_NUM, 1, WD_OPERATION_ID, NULL),
  DECODE(ROOT_TOTAL.ROOT_ROW_NUM, 1, RESOURCE_SEQ_NUMBER, NULL),
  DECODE(ROOT_TOTAL.ROOT_ROW_NUM, 1, RESOURCE_ID, NULL),
  DECODE(ROOT_TOTAL.ROOT_ROW_NUM, 1, MATERIAL_INVENTORY_ITEM_ID, NULL),
  DECODE(ROOT_TOTAL.ROOT_ROW_NUM, 1, MATERIAL_INVENTORY_ORG_ID, NULL),
  DECODE(ROOT_TOTAL.ROOT_ROW_NUM, 1, COSTING_BATCH_OUTPUT_SIZE, NULL),
  DECODE(ROOT_TOTAL.ROOT_ROW_NUM, 1, YIELD_FACTOR, NULL),
  DECODE(ROOT_TOTAL.ROOT_ROW_NUM, 1, BASIS_TYPE, NULL),
  DECODE(ROOT_TOTAL.ROOT_ROW_NUM, 1, QUANTITY_USAGE, 1),
  DECODE(ROOT_TOTAL.ROOT_ROW_NUM, 1, QTY_UOM_CODE, NULL),
  COST_UOM_CODE,
  ROOT_TOTAL.ROOT_ROW_NUM 
) ibom,
egp_system_items_b topitem, egp_system_items_tl topitem_tl,
egp_system_items_b mkitem, egp_system_items_tl mkitem_tl,
egp_system_items_b buyitem, egp_system_items_tl buyitem_tl, 
wis_resources_b res, cst_scenarios cs, wis_wd_operations_v op, WIS_WORK_DEFINITION_NAMES_VL wdn,
inv_units_of_measure uom
WHERE
  ibom.root_assembly_item_id = topitem.inventory_item_id and ibom.organization_id = topitem.organization_id and
  topitem.inventory_item_id = topitem_tl.inventory_item_id and topitem.organization_id = topitem_tl.organization_id and
  ibom.assembly_item_id = mkitem.inventory_item_id(+) and ibom.organization_id = mkitem.organization_id(+) and
  mkitem.inventory_item_id = mkitem_tl.inventory_item_id(+) and mkitem.organization_id = mkitem_tl.organization_id(+) and
  ibom.material_inventory_item_id = buyitem.inventory_item_id(+) and ibom.material_inventory_org_id = buyitem.organization_id(+) and
  buyitem.inventory_item_id = buyitem_tl.inventory_item_id(+) and buyitem.organization_id = buyitem_tl.organization_id(+) and
  ibom.resource_id = res.resource_id(+) and
  ibom.SCENARIO_ID = cs.scenario_id and
  ibom.wd_operation_id = op.wd_operation_id(+) and
  ibom.work_definition_name_id = wdn.work_definition_name_id(+) and 
  ibom.qty_uom_code = uom.uom_code(+) 
  and (instr(cs.scenario_number, :COST_SCENARIO) > 0 OR :COST_SCENARIO is null) 
  and (instr(topitem.item_number, :TOP_ASSEMBLY) > 0 OR :TOP_ASSEMBLY is null)
ORDER BY cs.scenario_number, ibom.rollupkey, ibom.bom_level
=============================================================================================================================
SELECT ROWNUM
	  ,GJH.period_name
	  ,:p_file_name FILE_NAME
	  ,'CRISILFEEDS' COL1
	  ,NULL SR_NO
	  ,GJL.code_combination_id CCID
	  ,(SELECT FFV.attribute2
		FROM fnd_flex_value_Sets FFVS,
			fnd_flex_values FFV 
		WHERE FFVS.flex_value_Set_id = FFV.flex_value_Set_id
		AND FFVS.flex_value_Set_name='CRISIL_ENTITY'
		AND FFV.flex_value = GCC.segment1) LEGAL_ENTITY	
	  ,CASE WHEN segment3 ='999999' 
		THEN
			(SELECT FFV.attribute1
			FROM fnd_flex_value_Sets FFVS,
				fnd_flex_values FFV 
			WHERE FFVS.flex_value_Set_id = FFV.flex_value_Set_id
			AND FFVS.flex_value_Set_name='CRISIL_CORPORATE_FUNCTION'
			AND FFV.flex_value = GCC.segment5) 
		ELSE 
			(SELECT FFV.attribute10
			FROM fnd_flex_value_Sets FFVS,
				fnd_flex_values FFV 
			WHERE FFVS.flex_value_Set_id = FFV.flex_value_Set_id
			AND FFVS.flex_value_Set_name='CRISIL BUSINESS COST CENTER'
			AND FFV.flex_value = GCC.segment3)
		END  UNIT_CODE
		,GCC.segment2
		,GCC.segment3
		,GCC.segment5
		,NVL((SELECT FFV.attribute3
			FROM fnd_flex_value_Sets FFVS,
				fnd_flex_values FFV 
			WHERE FFVS.flex_value_Set_id = FFV.flex_value_Set_id
			AND FFVS.flex_value_Set_name='CRISIL ACCOUNT'
			AND FFV.flex_value = GCC.segment2),
			(CASE WHEN segment3 ='999999' 
				THEN
					(SELECT FFV.attribute6
					FROM fnd_flex_value_Sets FFVS,
						fnd_flex_values FFV 
					WHERE FFVS.flex_value_Set_id = FFV.flex_value_Set_id
					AND FFVS.flex_value_Set_name='CRISIL_CORPORATE_FUNCTION'
					AND FFV.flex_value = GCC.segment5) 
				ELSE 
					(SELECT FFV.attribute8
					FROM fnd_flex_value_Sets FFVS,
						fnd_flex_values FFV 
					WHERE FFVS.flex_value_Set_id = FFV.flex_value_Set_id
					AND FFVS.flex_value_Set_name='CRISIL BUSINESS COST CENTER'
					AND FFV.flex_value = GCC.segment3)
					
				END) )  DEPARTMENT
		,(SELECT FFV.attribute1
			FROM fnd_flex_value_Sets FFVS,
				fnd_flex_values FFV 
			WHERE FFVS.flex_value_Set_id = FFV.flex_value_Set_id
			AND FFVS.flex_value_Set_name='CRISIL ACCOUNT'
			AND FFV.flex_value = GCC.segment2) 
		GL_ACCOUNT
		,CASE WHEN  ( (SELECT FFV.attribute1
			FROM fnd_flex_value_Sets FFVS,
				fnd_flex_values FFV 
			WHERE FFVS.flex_value_Set_id = FFV.flex_value_Set_id
			AND FFVS.flex_value_Set_name='CRISIL ACCOUNT'
			AND FFV.flex_value = GCC.segment2) IN('15721102', '15721251'))    -- CONDITION ADDED BY SNEHAL ON 30/04/2021
		OR ( (SELECT FFV.attribute1
			FROM fnd_flex_value_Sets FFVS,
				fnd_flex_values FFV 
			WHERE FFVS.flex_value_Set_id = FFV.flex_value_Set_id
			AND FFVS.flex_value_Set_name='CRISIL ACCOUNT'
			AND FFV.flex_value = GCC.segment2) BETWEEN  '29000001'  AND '29999999')
		OR ((SELECT FFV.attribute1
			FROM fnd_flex_value_Sets FFVS,
				fnd_flex_values FFV 
			WHERE FFVS.flex_value_Set_id = FFV.flex_value_Set_id
			AND FFVS.flex_value_Set_name='CRISIL ACCOUNT'
			AND FFV.flex_value = GCC.segment2) BETWEEN  '92611115'  AND '92611141')
		OR ((SELECT FFV.attribute1
			FROM fnd_flex_value_Sets FFVS,
				fnd_flex_values FFV 
			WHERE FFVS.flex_value_Set_id = FFV.flex_value_Set_id
			AND FFVS.flex_value_Set_name='CRISIL ACCOUNT'
			AND FFV.flex_value = GCC.segment2) BETWEEN  '92611501'  AND '92611502')
		THEN NVL((SELECT FFV.attribute4
			FROM fnd_flex_value_Sets FFVS,
				fnd_flex_values FFV 
			WHERE FFVS.flex_value_Set_id = FFV.flex_value_Set_id
			AND FFVS.flex_value_Set_name='CRISIL_INTERCOMPANY'
			AND FFV.flex_value = GCC.segment7),'0000')
		ELSE '0000'
		END  INTERCOMPANY		
		,CASE WHEN JE_CATEGORY='Revaluation' THEN
			'GR'
		ELSE 'TC'
		END SOURCE_CODE
	--	,GJH.posting_acct_seq_value DOC_SEQ_VALUE
		 ,SUBSTR(GJH.posting_acct_seq_value,1,3)||SUBSTR(GJH.posting_acct_seq_value,8,6)  DOC_SEQ_VALUE  -- substring added by snehal on 03/03/2021
	    ,GJL.JE_LINE_NUM ||'-'|| (SELECT FFV.attribute2
								FROM fnd_flex_value_Sets FFVS,
									fnd_flex_values FFV 
								WHERE FFVS.flex_value_Set_id = FFV.flex_value_Set_id
								AND FFVS.flex_value_Set_name='CRISIL ACCOUNT'
								AND FFV.flex_value = GCC.segment2) JE_LINE_NUM
	     ,GJL.CURRENCY_CODE 
		---- ,ABS((NVL(GJL.entered_dr,GJL.entered_cr))) *100 ENTERED_AMT   -- -- ABS  added by snehal on 01/03/2021
		 ,ABS(DECODE(NVL(GJL.entered_dr, 0), 0, GJL.entered_cr, GJL.entered_dr))*100	ENTERED_AMT		 -- Added by PRATUL ON 04MAR
   		 /*	  ,CASE WHEN GJL.entered_dr >0 
		  THEN '+'
		  WHEN GJL.entered_cr < 0    -- when condition added by snehal on 01/03/2021
		  THEN '+'
		  ELSE '-'
		  END DB_CR
		  */
		  , CASE WHEN GJL.accounted_dr > 0 
		  THEN '+'
		  WHEN GJL.accounted_cr < 0    -- when condition added by snehal on 01/03/2021
		  THEN '+'
		  WHEN NVL(GJL.accounted_dr,0) = 0  AND NVL(GJL.accounted_cr,0) = 0 
		  THEN '+'
		  ELSE '-'
		  END DB_CR       -- MODIFIED BY SNEHAL ON 03/03/2021 
	 -----   ,ABS(NVL(GJL.accounted_dr,GJL.accounted_cr))*100 ACCOUNTED_AMT		 --   ABS  added by snehal on 01/03/2021
	    ,ABS(DECODE(NVL(GJL.accounted_dr, 0), 0, GJL.accounted_cr, GJL.accounted_dr))*100 ACCOUNTED_AMT		-- Added by PRATUL ON 04MAR	
	    ,'N'|| to_char(last_day(GJH.DEFAULT_EFFECTIVE_DATE),'YYYYMMDD')  
		   		    || CASE WHEN GCC.segment2 in (SELECT FLV.lookup_code 
					FROM fnd_lookup_values FLV
					WHERE lookup_type = 'CRISIL_SNP_FEED_FILE'
					AND SYSDATE  BETWEEN NVL(FLV.start_date_active,SYSDATE ) AND  NVL(FLV.end_date_active, SYSDATE))
		   --GCC.segment2 ='511101'    -- segment2 condition modified by snehal on 01/03/2021
			-- ADDED BY SNEHAL ON 01/03/2021
						AND  (SELECT FFV.attribute2
								FROM fnd_flex_value_Sets FFVS,
									fnd_flex_values FFV 
								WHERE FFVS.flex_value_Set_id = FFV.flex_value_Set_id
								AND FFVS.flex_value_Set_name='CRISIL_ENTITY'
								AND FFV.flex_value = GCC.segment1) IN('0127','0180')
--		AND GCC.segment1 IN('127','180')                -- COMMENTED BY SNEHAL ON 01/03/2021
			THEN '330300'
		   ELSE NVL((SELECT FFV.attribute4
			         FROM fnd_flex_value_Sets FFVS,
					fnd_flex_values FFV 
					WHERE FFVS.flex_value_Set_id = FFV.flex_value_Set_id
					AND FFVS.flex_value_Set_name='CRISIL ACCOUNT'
					AND FFV.flex_value = GCC.segment2),'000000 ')
			END Activity_code
		,GJH.posted_date
FROM gl_je_headers GJH,
	gl_je_lines GJL,
	gl_code_combinations GCC
WHERE GJH.je_header_id = GJL.je_header_id 
AND GJL.code_combination_id = GCC.code_combination_id
--AND GJH.je_category not in('')
AND GJL.STATUS ='P'
--AND GJL.je_header_id =10006
AND GJH.period_Name =:p_period_name
AND GJL.currency_code <> 'STAT'
AND GJH.ledger_id not in(SELECT ledger_id FROM gl_ledgers GL WHERE GL.name in('CRISIL Foundation','CRISIL Consolidation')  )
AND  GJH.ledger_id not in(SELECT ledger_id FROM gl_ledgers GL WHERE LEDGER_CATEGORY_CODE = 'SECONDARY')
AND GJH.POSTED_DATE between :P_FROM_DATE -5.5/24 AND :p_to_date  -5.5/24                 -- -5.5/24 added by snehal on 09/04/2021
AND GJH.POSTED_DATE +5.5/24 >= (SELECT nvl( to_timestamp(description , 'YYYY-MM-DD HH24:MI:SS.FF'),GJH.POSTED_DATE +5.5/24)
						FROM fnd_lookups  HL
						WHERE lookup_type ='XXCSL_SNP_FEED_PARAMETER' 
						AND lookup_code ='TO_DATE'
						AND TRUNC(SYSDATE) BETWEEN TRUNC(NVL(hl.START_DATE_ACTIVE,SYSDATE) ) AND TRUNC(NVL(hl.END_DATE_ACTIVE,SYSDATE+1) ))   -- -- added by snehal on 03/05/2021
--commented by snehal on 03/05/2021
/*AND to_char(GJH.POSTED_DATE ,'yyyy-mm-dd hh:mm:ss') >= (SELECT NVL(DESCRIPTION,to_char(GJH.POSTED_DATE ,'yyyy-mm-dd hh:mm:ss'))
						FROM fnd_lookups  HL
						WHERE lookup_type ='XXCSL_SNP_FEED_PARAMETER' 
						AND lookup_code ='TO_DATE'
						AND TRUNC(SYSDATE) BETWEEN TRUNC(NVL(hl.START_DATE_ACTIVE,SYSDATE) ) AND TRUNC(NVL(hl.END_DATE_ACTIVE,SYSDATE+1) )
						)*/
========================================================================================================================================
SELECT ROWNUM
	  ,GJH.period_name
	  ,:p_file_name FILE_NAME
	  ,'CRISILFEEDS' COL1
	  ,NULL SR_NO
	  ,GJL.code_combination_id CCID
	  ,(SELECT FFV.attribute2
		FROM fnd_flex_value_Sets FFVS,
			fnd_flex_values FFV 
		WHERE FFVS.flex_value_Set_id = FFV.flex_value_Set_id
		AND FFVS.flex_value_Set_name='CRISIL_ENTITY'
		AND FFV.flex_value = GCC.segment1) LEGAL_ENTITY	
	  ,CASE WHEN segment3 ='999999' 
		THEN
			(SELECT FFV.attribute1
			FROM fnd_flex_value_Sets FFVS,
				fnd_flex_values FFV 
			WHERE FFVS.flex_value_Set_id = FFV.flex_value_Set_id
			AND FFVS.flex_value_Set_name='CRISIL_CORPORATE_FUNCTION'
			AND FFV.flex_value = GCC.segment5) 
		ELSE 
			(SELECT FFV.attribute10
			FROM fnd_flex_value_Sets FFVS,
				fnd_flex_values FFV 
			WHERE FFVS.flex_value_Set_id = FFV.flex_value_Set_id
			AND FFVS.flex_value_Set_name='CRISIL BUSINESS COST CENTER'
			AND FFV.flex_value = GCC.segment3)
		END  UNIT_CODE
		,GCC.segment2
		,GCC.segment3
		,GCC.segment5
		,NVL((SELECT FFV.attribute3
			FROM fnd_flex_value_Sets FFVS,
				fnd_flex_values FFV 
			WHERE FFVS.flex_value_Set_id = FFV.flex_value_Set_id
			AND FFVS.flex_value_Set_name='CRISIL ACCOUNT'
			AND FFV.flex_value = GCC.segment2),
			(CASE WHEN segment3 ='999999' 
				THEN
					(SELECT FFV.attribute6
					FROM fnd_flex_value_Sets FFVS,
						fnd_flex_values FFV 
					WHERE FFVS.flex_value_Set_id = FFV.flex_value_Set_id
					AND FFVS.flex_value_Set_name='CRISIL_CORPORATE_FUNCTION'
					AND FFV.flex_value = GCC.segment5) 
				ELSE 
					(SELECT FFV.attribute8
					FROM fnd_flex_value_Sets FFVS,
						fnd_flex_values FFV 
					WHERE FFVS.flex_value_Set_id = FFV.flex_value_Set_id
					AND FFVS.flex_value_Set_name='CRISIL BUSINESS COST CENTER'
					AND FFV.flex_value = GCC.segment3)
					
				END) )  DEPARTMENT
		,(SELECT FFV.attribute1
			FROM fnd_flex_value_Sets FFVS,
				fnd_flex_values FFV 
			WHERE FFVS.flex_value_Set_id = FFV.flex_value_Set_id
			AND FFVS.flex_value_Set_name='CRISIL ACCOUNT'
			AND FFV.flex_value = GCC.segment2) 
		GL_ACCOUNT
		,CASE WHEN ( (SELECT FFV.attribute1
			FROM fnd_flex_value_Sets FFVS,
				fnd_flex_values FFV 
			WHERE FFVS.flex_value_Set_id = FFV.flex_value_Set_id
			AND FFVS.flex_value_Set_name='CRISIL ACCOUNT'
			AND FFV.flex_value = GCC.segment2) IN('15721102', '15721251'))    -- CONDITION ADDED BY SNEHAL ON 30/04/2021
		OR ( (SELECT FFV.attribute1
			FROM fnd_flex_value_Sets FFVS,
				fnd_flex_values FFV 
			WHERE FFVS.flex_value_Set_id = FFV.flex_value_Set_id
			AND FFVS.flex_value_Set_name='CRISIL ACCOUNT'
			AND FFV.flex_value = GCC.segment2) BETWEEN  '29000001'  AND '29999999')
		OR ((SELECT FFV.attribute1
			FROM fnd_flex_value_Sets FFVS,
				fnd_flex_values FFV 
			WHERE FFVS.flex_value_Set_id = FFV.flex_value_Set_id
			AND FFVS.flex_value_Set_name='CRISIL ACCOUNT'
			AND FFV.flex_value = GCC.segment2) BETWEEN  '92611115'  AND '92611141')
		OR ((SELECT FFV.attribute1
			FROM fnd_flex_value_Sets FFVS,
				fnd_flex_values FFV 
			WHERE FFVS.flex_value_Set_id = FFV.flex_value_Set_id
			AND FFVS.flex_value_Set_name='CRISIL ACCOUNT'
			AND FFV.flex_value = GCC.segment2) BETWEEN  '92611501'  AND '92611502')
		THEN NVL((SELECT FFV.attribute4
			FROM fnd_flex_value_Sets FFVS,
				fnd_flex_values FFV 
			WHERE FFVS.flex_value_Set_id = FFV.flex_value_Set_id
			AND FFVS.flex_value_Set_name='CRISIL_INTERCOMPANY'
			AND FFV.flex_value = GCC.segment7),'0000')
		ELSE '0000'
		END  INTERCOMPANY		
		,CASE WHEN JE_CATEGORY='Revaluation' THEN
			'GR'
		ELSE 'TC'
		END SOURCE_CODE
		,GJH.posting_acct_seq_value DOC_SEQ_VALUE
	    ,GJL.JE_LINE_NUM ||'-'|| (SELECT FFV.attribute2
								FROM fnd_flex_value_Sets FFVS,
									fnd_flex_values FFV 
								WHERE FFVS.flex_value_Set_id = FFV.flex_value_Set_id
								AND FFVS.flex_value_Set_name='CRISIL ACCOUNT'
								AND FFV.flex_value = GCC.segment2) JE_LINE_NUM
	     ,GJL.CURRENCY_CODE 
		----- ,ABS(NVL(GJL.entered_dr,GJL.entered_cr)) *100 ENTERED_AMT -- ABS  added by snehal on 01/03/2021
		 ,ABS(DECODE(NVL(GJL.entered_dr, 0), 0, GJL.entered_cr, GJL.entered_dr))*100	ENTERED_AMT		 -- Added by PRATUL ON 04MAR	
   		  /*	  ,CASE WHEN GJL.entered_dr >0 
		  THEN '+'
		  WHEN GJL.entered_cr < 0    -- when condition added by snehal on 01/03/2021
		  THEN '+'
		  ELSE '-'
		  END DB_CR
		  */
		  , CASE WHEN GJL.accounted_dr > 0 
		  THEN '+'
		  WHEN GJL.accounted_cr < 0    -- when condition added by snehal on 01/03/2021
		  THEN '+'
		  WHEN NVL(GJL.accounted_dr,0) = 0  AND NVL(GJL.accounted_cr,0) = 0 
		  THEN '+'
		  ELSE '-'
		  END DB_CR       -- MODIFIED BY SNEHAL ON 03/03/2021 
	   ---- ,ABS(NVL(GJL.accounted_dr,GJL.accounted_cr) )*100 ACCOUNTED_AMT		 -- ABS  added by snehal on 01/03/2021
	    ,ABS(DECODE(NVL(GJL.accounted_dr, 0), 0, GJL.accounted_cr, GJL.accounted_dr))*100 ACCOUNTED_AMT		-- Added by PRATUL ON 04MAR	
	    ,'N'|| to_char(last_day(GJH.DEFAULT_EFFECTIVE_DATE),'YYYYMMDD')  
		||  CASE WHEN GCC.segment2 in (SELECT FLV.lookup_code 
					FROM fnd_lookup_values FLV
					WHERE lookup_type = 'CRISIL_SNP_FEED_FILE'
					AND SYSDATE  BETWEEN NVL(FLV.start_date_active,SYSDATE ) AND  NVL(FLV.end_date_active, SYSDATE))
					-- ADDED BY SNEHAL ON 01/03/2021
						AND  (SELECT FFV.attribute2
								FROM fnd_flex_value_Sets FFVS,
									fnd_flex_values FFV 
								WHERE FFVS.flex_value_Set_id = FFV.flex_value_Set_id
								AND FFVS.flex_value_Set_name='CRISIL_ENTITY'
								AND FFV.flex_value = GCC.segment1) IN('0127','0180')
--		AND GCC.segment1 IN('127','180')                -- COMMENTED BY SNEHAL ON 01/03/2021
			THEN '330300'
		   ELSE NVL((SELECT FFV.attribute4
			         FROM fnd_flex_value_Sets FFVS,
					fnd_flex_values FFV 
					WHERE FFVS.flex_value_Set_id = FFV.flex_value_Set_id
					AND FFVS.flex_value_Set_name='CRISIL ACCOUNT'
					AND FFV.flex_value = GCC.segment2),'000000 ')
			END Activity_code
		,GJH.posted_date
		,GCC.segment1
		||'.'
		||GCC.segment2
		||'.'
		||GCC.segment3
		||'.'
		||GCC.segment4
		||'.'
		||GCC.segment5
		||'.'
		||GCC.segment6
		||'.'
		||GCC.segment7
		||'.'
		||GCC.segment8
        ||'.'
		||GCC.segment9		ACCOUNT_CODE                       -- CCID added by Meenal on 22/02/2021

		FROM gl_je_headers GJH,
	gl_je_lines GJL,
	gl_code_combinations GCC
WHERE GJH.je_header_id = GJL.je_header_id 
AND GJL.code_combination_id = GCC.code_combination_id
--AND GJH.je_category not in('')
AND GJL.STATUS ='P'
--AND GJL.je_header_id =10006
AND GJH.period_Name =:p_period_name
AND GJL.currency_code <> 'STAT'
AND GJH.ledger_id not in(SELECT ledger_id FROM gl_ledgers GL WHERE GL.name in('CRISIL Foundation','CRISIL Consolidation')  )
AND  GJH.ledger_id not in(SELECT ledger_id FROM gl_ledgers GL WHERE LEDGER_CATEGORY_CODE = 'SECONDARY')
AND GJH.POSTED_DATE between :P_FROM_DATE -5.5/24 AND :p_to_date -5.5/24                      --  -- -5.5/24 added by snehal on 09/04/2021
-- COMMENTED BY SNEHAL ON 01/03/2021 
/*AND to_char(GJH.POSTED_DATE ,'yyyy-mm-dd hh:mm:ss') >= (SELECT NVL(DESCRIPTION,to_char(GJH.POSTED_DATE ,'yyyy-mm-dd hh:mm:ss'))
						FROM fnd_lookups  HL
						WHERE lookup_type ='XXCSL_SNP_FEED_PARAMETER' 
						AND lookup_code ='TO_DATE'
						AND TRUNC(SYSDATE) BETWEEN TRUNC(NVL(hl.START_DATE_ACTIVE,SYSDATE) ) AND TRUNC(NVL(hl.END_DATE_ACTIVE,SYSDATE+1) )
						

						)*/
=============================================================================================================================================
---------------------------------Spanish Withholding Tax Data Model-------------------------------------------------
--Q_WT_Invoice_Details
select  
       j190.vendor_name               	                         Supplier_Name
,      j190.vendor_nif 				                         Supplier_NIF_Code
,      TO_CHAR(j190.invoice_date,'YYYY-MM-DD')  Invoice_Date
,      j190.invoice_id                                                      Invoice_Id
,      j190.invoice_num                                                 Invoice_Number
,      j190.inv_doc_seq_num                                      Invoice_Doc_Sequence
,     TO_CHAR(decode(:P_PAY_INV_SEL,'I',j190.gl_date,'P',j190.date_paid,null),'YYYY-MM-DD') 	Dist_GL_Date
,      j190.net_amount                                 Net_Amount
,      j190.withholding_tax_amount * -1   Withheld_Tax_Amount -- multiply by -1 for Bug 9300627
,      j190.tax_name 		  Break_Tax_name
,      j190.tax_rate 			  Break_Tax_rate
,      j190.tax_name                Dist_Tax_Name
,      j190.tax_rate                    Dist_Tax_Rate
,      substr(hzl.postal_code,1,10)      C_Zip
,      substrb(hzl.city,1,19)                     C_City
,      JE_REP_ES_WHTAX_REPORT.csiteaddress(substrb(hzl.address1,1,35), 
                                          substrb(hzl.address2,1,35),
                                          substrb(hzl.address3,1,35),
                                          substr  (hzl.postal_code,1,10),
                                          substrb(hzl.city,1,19),
                                          hzl.state) C_Address
from    je_es_modelo_190_all j190,
            poz_supplier_sites_all_m vs,
             hz_locations hzl,
             ap_invoices_all inv
where  j190.request_id = :FUSIONAPPS_REQUEST_ID
and      inv.invoice_id = j190.invoice_id     
and      vs.vendor_site_id = inv.vendor_site_id       
and       vs.location_id = hzl.location_id
order by j190.tax_name ,
                j190.vendor_name, 
                j190.invoice_num,
               decode(:P_PAY_INV_SEL,'I',j190.gl_date,'P',j190.date_paid,null)
=================================================================================================================================
------------------------------------------------------Spanish Withholding Tax Magnetic Format Data Model---------------------------------------------------------
--Q_Detail
select
 '2'   c_d_col1,
 '190' c_d_col2,
 upper(:p_year) c_d_col3,
 lpad(upper(replace(nvl(:p_nif,'0'),' ','0')),9,'0') c_d_col4,
 lpad(upper(replace(nvl(vendor_nif,'0'),' ','0')),9,'0') c_d_col5,
 upper(vendor_name) c_d_col7,
 substr(lpad(upper(replace(
 nvl(zip_electronic,'00000'),' ','0')),5,'0'),1,2) c_d_col8,
 upper(remun_type) c_d_col9,
 upper(sub_remun_type) c_d_col10,
 upper(nvl(sign,' ')) c_d_col11,
 lpad(to_char(sum(net_amount)*100),13,'0') c_d_col12,
 lpad(to_char(sum(withholding_tax_amount)*100),13,'0') c_d_col13,
 upper(nvl(WITHHOLDABLE_AMT_IN_KIND_SIGN,' ')) c_d_col14,
 lpad(to_char(sum(nvl(WITHHOLDABLE_AMT_IN_KIND,0))*100),13,'0') c_d_col15,
 lpad(to_char(sum(nvl(WITHHELD_AMT_IN_KIND,0))*100),13,'0') c_d_col_16,
 lpad(to_char(sum(nvl(WITHHELD_PYMT_AMT_IN_KIND,0))*100),13,'0') c_d_col_17,
 lpad(to_char(nvl(year_due,0)),4,'0') c_d_col18,
 lpad(to_char(nvl(EARNED_AMOUNTS,0)),1,'0') c_d_col19,
 lpad(to_char(nvl(CONTRACT_TYPE,0)),1,'0') c_d_col20,
 lpad(to_char(nvl(BIRTH_YEAR,0)),4,'0') c_d_col21,
 lpad(to_char(nvl(DISABLED,0)),1,'0') c_d_col22,
 lpad(to_char(nvl(FAMILY_SITUATION,0)),1,'0') c_d_col23,
 rpad(nvl(PARTNER_FISCAL_CODE,' '),9,' ') c_d_col24,
 lpad(to_char(sum(nvl(DESCENDANT_LT_3,0))),2,'0') c_d_col25,
 lpad(to_char(sum(nvl(DESCENDANT_BT_3_16,0))),2,'0') c_d_col26,
 lpad(to_char(sum(nvl(DESCENDANT_BT_16_25,0))),2,'0') c_d_col27,
 lpad(to_char(sum(nvl(DISABLE_DESC_BT_33_65,0))),2,'0') c_d_col28,
 lpad(to_char(sum(nvl(DISABLE_DESC_GT_65,0))),2,'0') c_d_col29,
 lpad(to_char(sum(nvl(DESCENDANT_TOTAL,0))),2,'0') c_d_col30,
 lpad(to_char(sum(nvl(DEDUCTIONS,0))*100),13,'0') c_d_col31,
 lpad(to_char(sum(nvl(EXPENSES,0))*100),13,'0') c_d_col32,
 lpad(to_char(sum(nvl(SPOUSE_MAINTENANCE_AMT,0))*100),13,'0') c_d_col33,
 lpad(to_char(sum(nvl(CHILDREN_MAINTENANCE_AMT,0))*100),13,'0') c_d_col34
 from je_es_modelo_190_all
 where request_id is NULL
 and legal_entity_id = :p_legal_entity_id -- BUG 32746397
 GROUP BY
 '2' ,
 '190' ,
 upper(:p_year) ,
 lpad(upper(replace(nvl(:p_nif,'0'),' ','0')),9,'0') ,
 lpad(upper(replace(nvl(vendor_nif,'0'),' ','0')),9,'0') ,
 upper(vendor_name) ,
 substr(lpad(upper(replace(
 nvl(zip_electronic,'00000'),' ','0')),5,'0'),1,2) ,
 upper(remun_type) ,
 upper(sub_remun_type) ,
 upper(nvl(sign,' ')) ,
 upper(nvl(WITHHOLDABLE_AMT_IN_KIND_SIGN,' ')) ,
 lpad(to_char(nvl(year_due,0)),4,'0') ,
 lpad(to_char(nvl(EARNED_AMOUNTS,0)),1,'0') ,
 lpad(to_char(nvl(CONTRACT_TYPE,0)),1,'0') ,
 lpad(to_char(nvl(BIRTH_YEAR,0)),4,'0') ,
 lpad(to_char(nvl(DISABLED,0)),1,'0') ,
 lpad(to_char(nvl(FAMILY_SITUATION,0)),1,'0') ,
 rpad(nvl(PARTNER_FISCAL_CODE,' '),9,' ')
 order by upper(vendor_name),upper(remun_type)
 --Q_Header
 select
 '1' c_h_col1,
 '190' c_h_col2,
 upper(:p_year) c_h_col3,
 upper(:p_nif) c_h_col4,
 upper(:p_company_name) c_h_col5,
 upper(:P_MEDIUM) c_h_col6,
 upper(:p_contact_phone_no) c_h_col7,
 upper(:p_contact_name) c_h_col8,
 lpad(to_char(nvl(:p_reference_number,0)),13,'0') c_h_col9,
 lpad(to_char(nvl(:p_prv_reference_number,0)),13,'0') c_h_col12,
 sum(nvl(WITHHELD_AMT_IN_KIND,0)) +
 sum(nvl(withholding_tax_amount,0)) c_sum_withheld_amt,
 sum(nvl(net_amount,0)) +
 sum(nvl(WITHHOLDABLE_AMT_IN_KIND,0)) c_sum_withholdable_amt,
 count(*) C_count_all,
 decode(sign(sum(nvl(net_amount,0)) + sum(nvl(WITHHOLDABLE_AMT_IN_KIND,0))), -1, 'N', '') CF_withholdable_amt_sign
 from je_es_modelo_190_all
 where request_id is NULL
 and legal_entity_id = :p_legal_entity_id -- BUG 32746397
 ==========================================================================================================================================================
---STATEMENT OF ACCOUNT BY BUSHAN

SELECT DISTINCT
TO_CHAR(aia.invoice_date,'DD-Mon-YYYY') Invoice_Date,
aia.invoice_num,
aila.description,
aia.Invoice_Amount,
igst.igst_amount VAT,
NULL Total_value_in_SAR, 
NULL Amount_in_SAR,
NULL Date_of_the_Receipt,
NULL Balance_in_SAR
FROM
    ap_invoices_all      aia,
    ap_invoice_lines_all aila,
	ra_customer_trx_all rcta,
	ra_cust_trx_line_gl_dist_all trx_dist,
	XLA_TRANSACTION_ENTITIES xle,
	(SELECT
DISTINCT trx_id,
trx_line_id,
trx_line_number,
ABS (unrounded_tax_amt) igst_amount,
tax_rate igst_rate,
ABS (unrounded_taxable_amt) igst_taxable
FROM zx_lines
WHERE entity_code = 'TRANSACTIONS'
AND tax LIKE '%IGST%'
AND application_id = 222) igst
where 1=1
And aia.invoice_num = '1'
AND aia.invoice_id = aila.invoice_id
AND aila.org_id = rcta.org_id
AND rcta.customer_trx_id = trx_dist.customer_trx_id
AND trx_dist.customer_trx_id= igst.trx_id(+)
AND trx_dist.customer_trx_line_id = igst.trx_line_id(+)
and xle.SOURCE_ID_INT_1=aia.invoice_id
AND xle.legal_entity_id = rcta.legal_entity_id



 --AND xle.transaction_id= rcta.trx_id
--AND xle.ENTITY_ID=trx_dist.CUSTOMER_TRX_ID

--------------------------------------------------------------------
 just for my reference this below query
 
 
 
SELECT
apd.*
FROM
GL.GL_LEDGERS GL
,GL.GL_JE_BATCHES GLB
,GL.GL_JE_HEADERS GLH
,GL.GL_JE_LINES GLL
,GL.GL_IMPORT_REFERENCES GLIR
,XLA.XLA_AE_LINES XLL
,XLA.XLA_AE_HEADERS XLH
,XLA.XLA_EVENTS XLE
,XLA.XLA_TRANSACTION_ENTITIES XLTE
,XLA.XLA_DISTRIBUTION_LINKS XLDL
,ap.ap_invoices_all aph
,ap.ap_invoice_lines_all apl
,ap.ap_invoice_distributions_all apd
WHERE
GL.CHART_OF_ACCOUNTS_ID = GLB.CHART_OF_ACCOUNTS_ID AND
GL.PERIOD_SET_NAME = GLB.PERIOD_SET_NAME AND
GL.ACCOUNTED_PERIOD_TYPE = GLB.ACCOUNTED_PERIOD_TYPE AND
GLB.JE_BATCH_ID = GLH.JE_BATCH_ID AND
GLH.JE_HEADER_ID = GLL.JE_HEADER_ID AND
GLL.JE_HEADER_ID = GLIR.JE_HEADER_ID AND
GLL.JE_LINE_NUM = GLIR.JE_LINE_NUM AND
GLIR.GL_SL_LINK_TABLE = XLL.GL_SL_LINK_TABLE AND
GLIR.GL_SL_LINK_ID = XLL.GL_SL_LINK_ID AND
XLL.APPLICATION_ID = XLH.APPLICATION_ID AND
XLL.AE_HEADER_ID = XLH.AE_HEADER_ID AND
XLH.APPLICATION_ID = XLE.APPLICATION_ID AND
XLH.EVENT_ID = XLE.EVENT_ID AND
XLE.APPLICATION_ID = XLTE.APPLICATION_ID AND
XLE.ENTITY_ID = XLTE.ENTITY_ID AND
XLL.APPLICATION_ID = XLDL.APPLICATION_ID AND
XLL.AE_HEADER_ID = XLDL.AE_HEADER_ID AND
XLL.AE_LINE_NUM = XLDL.AE_LINE_NUM AND
XLTE.SOURCE_ID_INT_1 = aph.invoice_id AND
aph.invoice_id = apl.invoice_id AND
apl.invoice_id = apd.invoice_id AND
apl.line_number = apd.invoice_line_number AND
XLDL.SOURCE_DISTRIBUTION_ID_NUM_1 = apd.invoice_distribution_id



&p_Invoice_Id can be identified from XLA_TRANSACTION_ENTITIES.source_id_int_1

&p_trx_num can be identified from XLA_TRANSACTION_ENTITIES.transaction_number in order to verify the link.

APPLIED_TO_SOURCE_ID_NUM_1----------XLA_DISTRIBUTION_LINKS
===========================================================================================================
SELECT 
--PSV.VENDOR_ID
--,psam.VENDOR_SITE_ID
 PSV.SEGMENT1                  Supplier_Number
,PSV.VENDOR_NAME               Supplier
,PSV.VENDOR_NAME_ALT           Alternate_Name
,PSV.duns_number_c             DUNS_Number
,PSI.Income_tax_id             taxpayer_id
,PSI.VAT_REGISTRATION_NUM      Registration_Number
,ATT.NAME                      PAYMENT_TERMS
,(SELECT 
        hauft.NAME BusinessUnit
FROM   HR_ORG_UNIT_CLASSIFICATIONS_F houcf, 
HR_ALL_ORGANIZATION_UNITS_F haouf, 
HR_ORGANIZATION_UNITS_F_TL hauft
WHERE   haouf.ORGANIZATION_ID = houcf.ORGANIZATION_ID 
AND haouf.ORGANIZATION_ID = hauft.ORGANIZATION_ID 
AND haouf.EFFECTIVE_START_DATE BETWEEN houcf.EFFECTIVE_START_DATE AND houcf.EFFECTIVE_END_DATE 
AND hauft.LANGUAGE =USERENV('LANG')
AND hauft.EFFECTIVE_START_DATE = haouf.EFFECTIVE_START_DATE 
AND     hauft.EFFECTIVE_END_DATE = haouf.EFFECTIVE_END_DATE 
AND houcf.CLASSIFICATION_CODE = 'FUN_BUSINESS_UNIT' 
AND     SYSDATE BETWEEN hauft.effective_start_date AND hauft.effective_end_date
AND     hauft.organization_id = PSAM.PRC_BU_ID) Procurment_bu
,PSAM.INVOICE_CURRENCY_CODE    Invoice_Currency 
,PSAM.PAYMENT_CURRENCY_CODE    Payment_Currency
,PSAM.VENDOR_SITE_CODE            SITE
,PSAM.PURCHASING_SITE_FLAG       Purchasing
,PSAM.RFQ_ONLY_SITE_FLAG          
,PSAM.PAY_SITE_FLAG
,(select HLA.location_code
	       from hr_locations_all HLA
		  where HLA.location_id = psaam.bill_to_location_id)  Bill_to_Location
,(select HLA.location_code
	       from hr_locations_all HLA
		  where HLA.location_id = psaam.ship_to_location_id) Ship_to_Location
,(select segment1||'-'||segment2||'-'||segment3||'-'||segment4||'-'||segment5||'-'||segment6||'-'||segment7||'-'||segment8||'-'||segment9
	       from gl_code_combinations GCC
		  where GCC.code_combination_id = psaam.ACCTS_PAY_CODE_COMBINATION_ID)  Liability_Distribution
,(select segment1||'-'||segment2||'-'||segment3||'-'||segment4||'-'||segment5||'-'||segment6||'-'||segment7||'-'||segment8||'-'||segment9
	       from gl_code_combinations GCC
		  where GCC.code_combination_id = psaam.PREPAY_CODE_COMBINATION_ID)  Prepayment_Distribution
,SUPPLIER_ADD.address1    Address_Line_1
,SUPPLIER_ADD.address2    Address_Line_2
,SUPPLIER_ADD.address3    Address_Line_3
,SUPPLIER_ADD.CITY
,SUPPLIER_ADD.STATE
,SUPPLIER_ADD.postal_code   PIN_CODE
,SUPPLIER_ADD.country
,PASCV.PERSON_FIRST_NAME    First_name
,PASCV.PERSON_LAST_NAME     Last_name
,PASCV.PERSON_MIDDLE_NAME   Middle_Name
,PASCV.SALUTATION               Salutation
,PASCV.EMAIL_ADDRESS            Email_Address
,PASCV.PHONE_AREA_CODE          PHONE_AREA_CODE
,PASCV.PHONE_COUNTRY_CODE||''||PASCV.PHONE_AREA_CODE||''|| PASCV.PHONE_NUMBER         PHONE_NUMBER
,PASCV.MOBILE_AREA_CODE		
,PASCV.MOBILE_COUNTRY_CODE||''||PASCV.MOBILE_AREA_CODE||''||PASCV.MOBILE_NUMBER       MOBILE_NUMBER
,PASCV.FAX_AREA_CODE
--,CBBV.BANK_NAME                     BANK_NAME
--,CBBV.BANK_BRANCH_NAME 
--,CBBV.BRANCH_NUMBER 
--,CBBV.ADDRESS_LINE1                 BRANCH_ADDRESS_LINE_1
--,CBBV.ADDRESS_LINE2                 BRANCH_ADDRESS_LINE_2
--,CBBV.BANK_BRANCH_TYPE
--,IEBA.BANK_ACCOUNT_NUM
--,IEBA.BANK_ACCOUNT_TYPE
,Psv.vendor_type_lookup_code     Supplier_Type
,PSAM.ATTRIBUTE_CATEGORY         Additional_Information
,PSAM.ATTRIBUTE1   DIVISION      
,PSAM.ATTRIBUTE2   PAYMENT_WEEK
,PSAM.ATTRIBUTE3   BRAND
,PSAM.ATTRIBUTE4   TRANSFER_TO_RMS
,PSAM.ATTRIBUTE5   RMS_SITE_NAME
,ieppm.payment_method_code  Payment_Method 
,psam.FREIGHT_TERMS_LOOKUP_CODE
FROM 
  poz_suppliers_v PSV
  ,poz_suppliers_pii psi
  ,POZ_SUPPLIER_SITES_ALL_M PSAM
  ,POZ_SITE_ASSIGNMENTS_ALL_M psaam
  ,AP_TERMS_TL ATT
  ,HZ_LOCATIONS SUPPLIER_ADD
  ,POZ_ALL_SUPPLIER_CONTACTS_V PASCV
  --,IBY_EXT_BANK_ACCOUNTS IEBA
  --,CE_BANK_BRANCHES_V CBBV
  ,iby_ext_party_pmt_mthds ieppm
  ,iby_external_payees_all iepa
  
  
WHERE 1=1
AND PSV.VENDOR_ID=psi.VENDOR_ID
AND PSV.VENDOR_ID =PSAM.VENDOR_ID(+)
and psaam.BU_ID=psam.PRC_BU_ID
AND PSAM.TERMS_ID = ATT.TERM_ID(+)
AND ATT.LANGUAGE (+)=USERENV('LANG')
and psaam.VENDOR_SITE_ID =psam.VENDOR_SITE_ID
AND SUPPLIER_ADD.LOCATION_ID=PSAM.LOCATION_ID
AND PASCV.SUP_PARTY_ID=PSV.PARTY_ID
--AND PSV.PARTY_ID   = IEBA.BANK_ID(+)
--AND IEBA.BRANCH_ID(+)  = CBBV.BRANCH_PARTY_ID
and PSAM.vendor_site_id= iepa.supplier_site_id(+)
and ieppm.ext_pmt_party_id(+)=iepa.ext_payee_id
======================================================================================================================================
/* Formatted on 2021/04/06 10:14 (Formatter Plus v4.8.8) */

SELECT   xx.q_type, xx.account_code, xx.account_desc, xx.ledger_id, SUM (xx.opening) opening, SUM (xx.period_net) period_net, SUM (xx.closing)
                                                                                                                                              closing,
         
         --xx.cd1,
         xx.currency_code, xx.period_month, xx.period_year, xx.location_state, xx.location_gstin, xx.location_state_code, xx.location_segment,
         xx.location_desc, xx.ledger_name, xx.uniq_value, xx.period_num, CASE
            WHEN xx.period_month = 'April'
               THEN SUM (xx.period_net)
            ELSE NULL
         END april, CASE
            WHEN xx.period_month = 'May'
               THEN SUM (xx.period_net)
            ELSE NULL
         END may, CASE
            WHEN xx.period_month = 'June'
               THEN SUM (xx.period_net)
            ELSE NULL
         END june, CASE
            WHEN xx.period_month = 'July'
               THEN SUM (xx.period_net)
            ELSE NULL
         END july, CASE
            WHEN xx.period_month = 'August'
               THEN SUM (xx.period_net)
            ELSE NULL
         END august, CASE
            WHEN xx.period_month = 'September'
               THEN SUM (xx.period_net)
            ELSE NULL
         END september, CASE
            WHEN xx.period_month = 'October'
               THEN SUM (xx.period_net)
            ELSE NULL
         END october, CASE
            WHEN xx.period_month = 'November'
               THEN SUM (xx.period_net)
            ELSE NULL
         END november, CASE
            WHEN xx.period_month = 'December'
               THEN SUM (xx.period_net)
            ELSE NULL
         END december, CASE
            WHEN xx.period_month = 'January'
               THEN SUM (xx.period_net)
            ELSE NULL
         END january, CASE
            WHEN xx.period_month = 'February'
               THEN SUM (xx.period_net)
            ELSE NULL
         END february, CASE
            WHEN xx.period_month = 'March'
               THEN SUM (xx.period_net)
            ELSE NULL
         END march
    FROM (
/*Opening Balance Query*/
          SELECT   'Opening Balance' q_type, gcc.segment2 account_code,
                   SUBSTR (gl_flexfields_pkg.get_description_sql (gcc.chart_of_accounts_id, 2, gcc.segment2), 1, 300) account_desc, gl.ledger_id,
                   (SUM (NVL (gb.begin_balance_dr_beq, 0)) - SUM (NVL (gb.begin_balance_cr_beq, 0))) opening, 0 period_net, 0 closing,
                   gb.currency_code cd1, gl.currency_code, TRIM (TO_CHAR (gp.start_date, 'Month', 'NLS_DATE_LANGUAGE=AMERICAN')) period_month,
                   gp.period_num, gp.period_year, NVL (hl.region_3, region_2) location_state, hl.attribute1 location_gstin,
                   SUBSTR (hl.attribute1, 1, 2) location_state_code, loc_set.location_segment, loc_set.location_desc, gl.NAME ledger_name,
                   
                   --gl.ledger_id||
                   gcc.segment2 || loc_set.location_segment uniq_value
              FROM   gb,
                   gl_code_combinations gcc,
                   gl_ledgers gl,
                   gl_periods gp,
                   gl_periods gp1,
                   (SELECT ffvv.description location_desc, ffvv.flex_value location_segment, attribute2 location_gstin
                      FROM fnd_flex_value_sets ffvs, fnd_flex_values_vl ffvv
                     WHERE ffvs.flex_value_set_name = 'CRISIL_LOCATION'
                       AND ffvs.flex_value_set_id = ffvv.flex_value_set_id
                       AND ffvv.enabled_flag = 'Y'
                       AND ffvv.value_category = 'CRISIL_LOCATION'
                       AND ffvv.attribute2 IS NOT NULL) loc_set,
                   hr_locations hl
             WHERE gb.code_combination_id = gcc.code_combination_id
               --AND gl.ledger_id IN (300000002033036, 300000002123655, 300000002033060, 300000002123619)
               AND (gl.NAME IN (:p_ledger_name) OR 'All' IN (:p_ledger_name || 'All'))
               AND gp.period_set_name = :p_period_set
               AND gp.adjustment_period_flag = 'N'
               AND gp1.adjustment_period_flag = 'N'
               AND gb.period_name = gp.period_name
               AND gp.period_set_name = gp1.period_set_name
               AND gp.year_start_date = gp1.year_start_date
               AND gp.period_num = 1
               AND gp1.period_name = :p_period_name
               AND gb.actual_flag = 'A'
               AND gl.ledger_id = gb.ledger_id
               AND gcc.segment6 = loc_set.location_segment
               AND hl.attribute_category = 'India GST Information'
               AND hl.attribute1 = loc_set.location_gstin
          GROUP BY gcc.segment2,
                   gl.ledger_id,
                   SUBSTR (gl_flexfields_pkg.get_description_sql (gcc.chart_of_accounts_id, 2, gcc.segment2), 1, 300),
                   gb.currency_code,
                   gl.currency_code,
                   TO_CHAR (gp.start_date, 'Month', 'NLS_DATE_LANGUAGE=AMERICAN'),
                   gp.period_year,
                   NVL (hl.region_3, region_2),
                   hl.attribute1,
                   SUBSTR (hl.attribute1, 1, 2),
                   loc_set.location_segment,
                   loc_set.location_desc,
                   gl.NAME,
                   gp.period_num,
                   --gl.ledger_id ||
                   gcc.segment2 || loc_set.location_segment
          /*End Opening Balance Query*/
          UNION ALL
          /*Period Balance Query*/
          SELECT   'Period Balance' q_type, gcc.segment2 account_code,
                   SUBSTR (gl_flexfields_pkg.get_description_sql (gcc.chart_of_accounts_id, 2, gcc.segment2), 1, 300) account_desc, gl.ledger_id,
                   0 opening, (SUM (NVL (gb.period_net_dr_beq, 0)) - SUM (NVL (gb.period_net_cr_beq, 0))) period_net,
                   ((  (SUM (NVL (gb.begin_balance_dr_beq, 0)) - SUM (NVL (gb.begin_balance_cr_beq, 0)))
                     + (SUM (NVL (gb.period_net_dr_beq, 0)) - SUM (NVL (gb.period_net_cr_beq, 0)))
                    )
                   /** NVL ((SELECT conversion_rate
                             FROM gl_daily_rates gdr, gl_periods gp
                            WHERE from_currency = gb.currency_code
                              AND to_currency = 'INR'
                              AND gp.period_name = :p_period_name
                              AND gp.period_set_name = :p_period_set---'APR to MAR'
                              AND gdr.conversion_date BETWEEN gp.start_date AND gp.end_date
                              AND conversion_type = '300000002067051'
                              AND status_code = 'C'
                              AND gdr.conversion_date =
                                     (SELECT MAX (gdr1.conversion_date)
                                        FROM gl_daily_rates gdr1
                                       WHERE 1 = 1
                                         AND gdr1.from_currency = gdr.from_currency
                                         AND gdr1.to_currency = gdr1.to_currency
                                         AND gdr1.conversion_date BETWEEN gp.start_date AND gp.end_date
                                         AND gdr1.conversion_type = gdr.conversion_type
                                         AND gdr1.status_code = gdr.status_code)),
                          1
                         )*/
                   ) closing,
                   gb.currency_code cd1, gl.currency_code, TRIM (TO_CHAR (gp.start_date, 'Month', 'NLS_DATE_LANGUAGE=AMERICAN')) period_month,
                   gp.period_num, gp.period_year, NVL (hl.region_3, region_2) location_state, hl.attribute1 location_gstin,
                   SUBSTR (hl.attribute1, 1, 2) location_state_code, loc_set.location_segment, loc_set.location_desc, gl.NAME ledger_name,
                   
                   --gl.ledger_id||
                   gcc.segment2 || loc_set.location_segment uniq_value
              FROM gl_balances gb,
                   gl_code_combinations gcc,
                   gl_ledgers gl,
                   gl_periods gp,
                   gl_periods gp1,
                   (SELECT ffvv.description location_desc, ffvv.flex_value location_segment, attribute2 location_gstin
                      FROM fnd_flex_value_sets ffvs, fnd_flex_values_vl ffvv
                     WHERE ffvs.flex_value_set_name = 'CRISIL_LOCATION'
                       AND ffvs.flex_value_set_id = ffvv.flex_value_set_id
                       AND ffvv.enabled_flag = 'Y'
                       AND ffvv.value_category = 'CRISIL_LOCATION'
                       AND ffvv.attribute2 IS NOT NULL) loc_set,
                   hr_locations hl
             WHERE gb.code_combination_id = gcc.code_combination_id
               --AND gl.ledger_id IN (300000002033036, 300000002123655, 300000002033060, 300000002123619)
               AND (gl.NAME IN (:p_ledger_name) OR 'All' IN (:p_ledger_name || 'All'))
               AND gp.period_set_name = :p_period_set
               AND gp.adjustment_period_flag = 'N'
               AND gp1.adjustment_period_flag = 'N'
               AND gb.period_name = gp.period_name
               AND gp.period_set_name = gp1.period_set_name
               AND gp.year_start_date >= gp1.year_start_date
               AND gp.end_date <= gp1.end_date
               AND gp1.period_name = :p_period_name
               AND gb.actual_flag = 'A'
               AND gl.ledger_id = gb.ledger_id
               AND gcc.segment6 = loc_set.location_segment
               AND hl.attribute_category = 'India GST Information'
               AND hl.attribute1 = loc_set.location_gstin
          GROUP BY gcc.segment2,
                   gl.ledger_id,
                   SUBSTR (gl_flexfields_pkg.get_description_sql (gcc.chart_of_accounts_id, 2, gcc.segment2), 1, 300),
                   gb.currency_code,
                   gl.currency_code,
                   TO_CHAR (gp.start_date, 'Month', 'NLS_DATE_LANGUAGE=AMERICAN'),
                   gp.period_year,
                   NVL (hl.region_3, region_2),
                   hl.attribute1,
                   SUBSTR (hl.attribute1, 1, 2),
                   loc_set.location_segment,
                   loc_set.location_desc,
                   gl.NAME,
                   gp.period_num,
                   --gl.ledger_id ||
                   gcc.segment2 || loc_set.location_segment
                                                           /*End Period Balance Query*/
         ) xx
   WHERE 1 = 1
     AND (xx.location_state IN (:p_loc_state) OR 'All' IN (:p_loc_state || 'All'))
     AND (xx.location_state_code IN (:p_loc_st_code) OR 'All' IN (:p_loc_st_code || 'All'))
     AND (xx.location_gstin IN (:p_loc_gstin) OR 'All' IN (:p_loc_gstin || 'All'))
GROUP BY xx.q_type,
         xx.account_code,
         xx.account_desc,
         xx.ledger_id,
         --xx.cd1,
         xx.currency_code,
         xx.period_month,
         xx.period_year,
         xx.location_state,
         xx.location_gstin,
         xx.location_state_code,
         xx.location_segment,
         xx.location_desc,
         xx.ledger_name,
         xx.uniq_value,
         xx.period_num
ORDER BY xx.ledger_name, xx.account_code, xx.period_num
=====================================================================================================================================
---------------------------------------------------Trial Balance - Average Data Model------------------------------------------
SELECT  Q.LEDGER_NAME    LEDGER_NAME,
        Q.Ending_Balance ENDING_BALANCE,
        Q.PATD           PATD,
        Q.QATD           QATD,
        Q.YATD           YATD,
        Q.ACCT_FLEX      ACCT_FLEX,
        Q.PBAL_VALUE     PBAL_VALUE,
        Q.ADDT_VALUE     ADDT_VALUE,
        Q.NACC_VALUE     NACC_VALUE,
        Q.BAL2_VALUE     BAL2_VALUE,
        Q.BAL3_VALUE     BAL3_VALUE,
        Q.CCTR_VALUE     CCTR_VALUE,
        Q.INTC_VALUE     INTC_VALUE,
        Q.MGMT_VALUE     MGMT_VALUE,
        DECODE(:P_SUMMARIZE_BY, 'ACCOUNT_COMB', gl_flexfields_pkg.get_concat_description(:P_STRUCT_NUM, Q.ccid, 'N'), null) ACCT_DESC,
        gl_flexfields_pkg.get_description_sql(:P_STRUCT_NUM, :PBAL_SEGNUM, Q.PBAL_VALUE) PBAL_DESC,
        DECODE(:P_ADDITIONAL_SEGNUM, null, null, gl_flexfields_pkg.get_description_sql(:P_STRUCT_NUM, :P_ADDITIONAL_SEGNUM, Q.ADDT_VALUE)) ADDT_DESC,
        DECODE(Q.NACC_VALUE, null, null, gl_flexfields_pkg.get_description_sql(:P_STRUCT_NUM, :NACC_SEGNUM, Q.NACC_VALUE)) NACC_DESC,
        DECODE(Q.BAL2_VALUE, null, null, gl_flexfields_pkg.get_description_sql(:P_STRUCT_NUM, :BAL2_SEGNUM, Q.BAL2_VALUE)) BAL2_DESC,
        DECODE(Q.BAL3_VALUE, null, null, gl_flexfields_pkg.get_description_sql(:P_STRUCT_NUM, :BAL3_SEGNUM, Q.BAL3_VALUE)) BAL3_DESC,
        DECODE(Q.CCTR_VALUE, null, null, gl_flexfields_pkg.get_description_sql(:P_STRUCT_NUM, :CCTR_SEGNUM, Q.CCTR_VALUE)) CCTR_DESC,
        DECODE(Q.INTC_VALUE, null, null, gl_flexfields_pkg.get_description_sql(:P_STRUCT_NUM, :INTC_SEGNUM, Q.INTC_VALUE)) INTC_DESC,
        DECODE(Q.MGMT_VALUE, null, null, gl_flexfields_pkg.get_description_sql(:P_STRUCT_NUM, :MGMT_SEGNUM, Q.MGMT_VALUE)) MGMT_DESC
FROM (
  SELECT
        QRY.LEDGER_NAME     LEDGER_NAME,
        QRY.ACCT_FLEX       ACCT_FLEX,
        QRY.PBAL_VALUE      PBAL_VALUE,
        QRY.ADDT_VALUE      ADDT_VALUE,
        QRY.NACC_VALUE      NACC_VALUE,
        MAX(QRY.CCID)       CCID,
        MAX(QRY.BAL2_VALUE) BAL2_VALUE,
        MAX(QRY.BAL3_VALUE) BAL3_VALUE,
        MAX(QRY.CCTR_VALUE) CCTR_VALUE,
        MAX(QRY.INTC_VALUE) INTC_VALUE,
        MAX(QRY.MGMT_VALUE) MGMT_VALUE,
        MAX(QRY.ACCT_SECURED_SEG) ACCT_SECURED_SEG,
        SUM(Ending_Balance) Ending_Balance,
        SUM(PATD) PATD,
        SUM(QATD) QATD,
        SUM(YATD) YATD
  FROM (
    SELECT
	lr.target_ledger_name LEDGER_NAME,
	&P_ENDING_BALANCE Ending_Balance,
	&P_PATD PATD,
	&P_QATD QATD,
	&P_YATD YATD,
	CC.code_combination_id CCID,
	DECODE(:P_SUMMARIZE_BY, 'ACCOUNT_COMB', &ACCOUNT_FLEX, null) ACCT_FLEX,
	&ACCOUNT_SECURED_SEG ACCT_SECURED_SEG,
	&PBAL_VAL PBAL_VALUE,
	DECODE(:P_ADDITIONAL_SEGNUM, null, null, &ADDT_VAL) ADDT_VALUE,
	&NACC_VAL NACC_VALUE,
	DECODE(:P_SUMMARIZE_BY,
		'ACCOUNT_COMB', &BAL2_VAL,
		'NATURAL_ACCOUNT_SEG', null,
		DECODE(:P_ADDITIONAL_SEGNUM, :BAL2_SEGNUM, &BAL2_VAL, null)) BAL2_VALUE,
	DECODE(:P_SUMMARIZE_BY,
		'ACCOUNT_COMB', &BAL3_VAL,
		'NATURAL_ACCOUNT_SEG', null,
		DECODE(:P_ADDITIONAL_SEGNUM, :BAL3_SEGNUM, &BAL3_VAL, null)) BAL3_VALUE,
	DECODE(:P_SUMMARIZE_BY,
		'ACCOUNT_COMB', &CCTR_VAL,
		'NATURAL_ACCOUNT_SEG', null,
		DECODE(:P_ADDITIONAL_SEGNUM, :CCTR_SEGNUM, &CCTR_VAL, null)) CCTR_VALUE,
	DECODE(:P_SUMMARIZE_BY,
		'ACCOUNT_COMB', &INTC_VAL,
		'NATURAL_ACCOUNT_SEG', null,
		DECODE(:P_ADDITIONAL_SEGNUM, :INTC_SEGNUM, &BAL3_VAL, null)) INTC_VALUE,
	DECODE(:P_SUMMARIZE_BY,
		'ACCOUNT_COMB', &MGMT_VAL,
		'NATURAL_ACCOUNT_SEG', null,
		DECODE(:P_ADDITIONAL_SEGNUM, :MGMT_SEGNUM, &MGMT_VAL, null)) MGMT_VALUE
    FROM    
	GL_CODE_COMBINATIONS 	cc,
	GL_DAILY_BALANCES 	dbs,
	GL_LEDGERS		l,
	GL_LEDGER_SET_ASSIGNMENTS ls,
	GL_LEDGER_RELATIONSHIPS	lr
    WHERE
	cc.code_combination_id  = dbs.code_combination_id
    AND l.ledger_id = :P_LEDGER_ID
    AND ls.ledger_set_id (+) = l.ledger_id
    AND lr.source_ledger_id = NVL(ls.ledger_id, :P_LEDGER_ID)
    AND lr.target_ledger_id = NVL(ls.ledger_id, :P_LEDGER_ID)
    AND lr.target_currency_code = :LEDGER_CURRENCY_PARAM
    &WHERE_DAS
    AND dbs.period_name = :PERIOD_NAME
    AND dbs.currency_code = :RESULTING_CURRENCY
    AND dbs.template_id is NULL
    AND &CURR_TYPE
    AND &ACT_FILTER_WHERE
    AND dbs.ledger_id = lr.target_ledger_id
    AND cc.chart_of_accounts_id = :P_STRUCT_NUM ) QRY
  GROUP BY
    LEDGER_NAME,
    PBAL_VALUE,
    ADDT_VALUE,
    NACC_VALUE,
    ACCT_FLEX ) Q
&SECURITY_WHERE
ORDER BY
    LEDGER_NAME,
    PBAL_VALUE,
    ACCT_FLEX,
    ADDT_VALUE,
    NACC_VALUE
==============================================================================================================================================
--------------------------------------Trial Balance Data Model------------------------------------------------
&P_WITH_CLAUSE	  
SELECT Q.LEDGER_NAME_H,
       Q.LEDGER_ID,
       Q.PAGEBREAK_VALUE,
       Q.ADDITIONAL_VALUE,
       Q.NATURAL_ACCOUNT_VALUE,
       Q.ACCT_FLEX,
       Q.ACCT_TYPE,
       Q.BEGIN_BALANCE,
       Q.PERIOD_DR,
       Q.PERIOD_CR,
       Q.END_BALANCE,
	   &P_SELECT
FROM
(
SELECT MAX(QRY.LEDGER_NAME_H) LEDGER_NAME_H,
       QRY.LEDGER_ID LEDGER_ID,
       QRY.PAGEBREAK_VALUE,
       QRY.ADDITIONAL_VALUE,
       QRY.NATURAL_ACCOUNT_VALUE,
       QRY.ACCT_FLEX,
       MAX(QRY.CCID) CCID,
       MAX(QRY.ACCT_SECURED_SEG) ACCT_SECURED_SEG,
       QRY.ACCT_TYPE,
       SUM(QRY.BEGIN_BALANCE) BEGIN_BALANCE,
       SUM(QRY.PERIOD_DR) PERIOD_DR,
       SUM(QRY.PERIOD_CR) PERIOD_CR,
       SUM(QRY.END_BALANCE) END_BALANCE
	   &P_INNER_SELECT
FROM
(SELECT /*+ leading(GLL ASG LR GLB CC) */
    LR.TARGET_LEDGER_NAME     LEDGER_NAME_H,
    GLB.LEDGER_ID      LEDGER_ID,
    &BEGIN_BALANCE_SELECT BEGIN_BALANCE,
    &PERIOD_DR_SELECT  PERIOD_DR,
    &PERIOD_CR_SELECT  PERIOD_CR,
    &END_BALANCE_SELECT END_BALANCE,
    CC.code_combination_id CCID,
    &PAGEBREAK_VAL PAGEBREAK_VALUE,
    DECODE(:P_ADDITIONAL_SEGMENT_NUM, null, null, &ADDITIONAL_VAL) ADDITIONAL_VALUE,
    &NATURAL_ACCOUNT_VAL NATURAL_ACCOUNT_VALUE,
    DECODE(:P_SUMMARIZE_BY, 'ACCOUNT_COMB', &ACCOUNT_FLEX, null) ACCT_FLEX,
    &ACCOUNT_SECURED_SEG ACCT_SECURED_SEG,
    CC.ACCOUNT_TYPE  ACCT_TYPE
	&ACCT_DESC_SEL
FROM
    GL_BALANCES      GLB,
    GL_CODE_COMBINATIONS   CC,
    GL_LEDGERS    GLL,
    GL_LEDGER_SET_ASSIGNMENTS ASG,
    GL_LEDGER_RELATIONSHIPS LR
	&ACCT_DESC_FROM
WHERE
    GLB.ACTUAL_FLAG = :P_ACTUAL_FLAG
AND GLB.CURRENCY_CODE = :RESULTING_CURRENCY
AND GLB.PERIOD_NAME IN (:ACCOUNTING_PERIOD_PARAM, DECODE(:P_PERIOD_TYPE,
                                                         'PTD', :ACCOUNTING_PERIOD_PARAM,
                                                         'PJTD', :ACCOUNTING_PERIOD_PARAM,
                                                         'YTD', :FIRST_PERIOD,
                                                         'QTD', :FIRST_PERIOD,
                                                         'N/A', :P_BUDGET_FIRST_PERIOD_NAME))
AND GLB.CODE_COMBINATION_ID = CC.CODE_COMBINATION_ID
AND CC.CHART_OF_ACCOUNTS_ID = :P_STRUCT_NUM
AND CC.SUMMARY_FLAG = 'N'
AND CC.TEMPLATE_ID IS NULL
AND GLL.LEDGER_ID = :P_LEDGER_ID
AND ASG.LEDGER_SET_ID(+) = GLL.LEDGER_ID
AND LR.TARGET_LEDGER_ID = NVL(ASG.LEDGER_ID, GLL.LEDGER_ID)
AND LR.SOURCE_LEDGER_ID = NVL(ASG.LEDGER_ID, GLL.LEDGER_ID)
AND LR.TARGET_CURRENCY_CODE = :P_LEDGER_CURRENCY
AND LR.SOURCE_LEDGER_ID = GLB.LEDGER_ID
AND LR.TARGET_LEDGER_ID = GLB.LEDGER_ID
AND &CURRENCY_WHERE
AND &ACCESS_WHERE
/*
AND &BUDGET_WHERE
*/
AND &ENCUM_WHERE 
AND &PAGEBREAK_WHERE
&ACCT_DESC_WHERE) QRY
GROUP BY
    LEDGER_ID,
    PAGEBREAK_VALUE,
    ADDITIONAL_VALUE,
    NATURAL_ACCOUNT_VALUE,
    ACCT_FLEX,
    ACCT_TYPE
	&ACCT_DESC_GROUP) Q	
	&P_FROM_CLAUSE
&SECURITY_WHERE
AND (   BEGIN_BALANCE != 0
     OR PERIOD_DR     != 0
     OR PERIOD_CR     != 0
     OR END_BALANCE   != 0)
	&P_WHERE_CLAUSE
ORDER BY
    LEDGER_ID,
    PAGEBREAK_VALUE,
    ADDITIONAL_VALUE,
    NATURAL_ACCOUNT_VALUE,
    ACCT_FLEX
=========================================================================================================================================
------------------------------------------Trial Balance Extract Data Model------------------------------------------
SELECT Q.LEDGER_NAME_H,
       Q.LEDGER_ID,
       Q.PAGEBREAK_VALUE,
       Q.ADDITIONAL_VALUE,
       Q.NATURAL_ACCOUNT_VALUE,
       Q.ACCT_FLEX,
       Q.ACCT_TYPE,
       Q.BEGIN_BALANCE,
       Q.PERIOD_DR,
       Q.PERIOD_CR,
       Q.END_BALANCE,
       gl_flexfields_pkg.get_description_sql(:P_STRUCT_NUM, :PAGEBREAK_SEGNUM, Q.PAGEBREAK_VALUE) PAGEBREAK_DESC,
       DECODE(:P_ADDITIONAL_SEGMENT_NUM, null, null, gl_flexfields_pkg.get_description_sql(:P_STRUCT_NUM, :P_ADDITIONAL_SEGMENT_NUM, Q.ADDITIONAL_VALUE)) ADDITIONAL_DESC,
       gl_flexfields_pkg.get_description_sql(:P_STRUCT_NUM, :NATURAL_ACCOUNT_SEGNUM, Q.NATURAL_ACCOUNT_VALUE) NATURAL_ACCOUNT_DESC,
       DECODE(:P_SUMMARIZE_BY, 'ACCOUNT_COMB', gl_flexfields_pkg.get_concat_description(:P_STRUCT_NUM, Q.ccid, 'N'), null) ACCT_DESC
FROM
(
SELECT MAX(QRY.LEDGER_NAME_H) LEDGER_NAME_H,
       QRY.LEDGER_ID LEDGER_ID,
       QRY.PAGEBREAK_VALUE,
       QRY.ADDITIONAL_VALUE,
       QRY.NATURAL_ACCOUNT_VALUE,
       QRY.ACCT_FLEX,
       MAX(QRY.CCID) CCID,
       MAX(QRY.ACCT_SECURED_SEG) ACCT_SECURED_SEG,
       QRY.ACCT_TYPE,
       SUM(QRY.BEGIN_BALANCE) BEGIN_BALANCE,
       SUM(QRY.PERIOD_DR) PERIOD_DR,
       SUM(QRY.PERIOD_CR) PERIOD_CR,
       SUM(QRY.END_BALANCE) END_BALANCE
FROM
(SELECT /*+ leading(GLL ASG LR GLB CC) */
LR.TARGET_LEDGER_NAME     LEDGER_NAME_H,
GLB.LEDGER_ID      LEDGER_ID,
-- BEGIN_BALANCE
--DECODE(:P_ACTUAL_FLAG,
--       'A',
 DECODE(:P_PERIOD_TYPE,
                   'PTD', DECODE(:P_CURRENCY_TYPE,
                                 'T', NVL(BEGIN_BALANCE_DR,0) - NVL(BEGIN_BALANCE_CR,0),
                                 'S', NVL(BEGIN_BALANCE_DR,0) - NVL(BEGIN_BALANCE_CR,0),
                                 'E', DECODE(GLB.TRANSLATED_FLAG,
                                             'R', NVL(BEGIN_BALANCE_DR,0) - NVL(BEGIN_BALANCE_CR,0),
                                             NVL(BEGIN_BALANCE_DR_BEQ,0) - NVL(BEGIN_BALANCE_CR_BEQ,0)),
                                 'C', NVL(BEGIN_BALANCE_DR_BEQ, 0) - NVL(BEGIN_BALANCE_CR_BEQ, 0)),
                   'PJTD', DECODE(:P_CURRENCY_TYPE, 'T', 0, 'S', 0, 'E', 0, 'C', 0),
                   'QTD', DECODE(:P_CURRENCY_TYPE,
                                 'T', DECODE(GLB.PERIOD_NAME, :FIRST_PERIOD,
                                             NVL(BEGIN_BALANCE_DR, 0) - NVL(BEGIN_BALANCE_CR, 0), 0),
                                 'S', DECODE(GLB.PERIOD_NAME, :FIRST_PERIOD,
                                             NVL(BEGIN_BALANCE_DR, 0) - NVL(BEGIN_BALANCE_CR, 0) ,0),
                                 'E', DECODE(GLB.TRANSLATED_FLAG,
                                             'R', DECODE(GLB.PERIOD_NAME, :FIRST_PERIOD,
                                                         NVL(BEGIN_BALANCE_DR, 0) - NVL(BEGIN_BALANCE_CR, 0), 0),
                                                  DECODE(GLB.PERIOD_NAME, :FIRST_PERIOD,
                                                         NVL(BEGIN_BALANCE_DR_BEQ, 0) - NVL(BEGIN_BALANCE_CR_BEQ, 0) ,0)),
                                 'C', DECODE(GLB.PERIOD_NAME, :FIRST_PERIOD,
                                             NVL(BEGIN_BALANCE_DR_BEQ, 0) - NVL(BEGIN_BALANCE_CR_BEQ, 0), 0)),
                   'YTD', DECODE(:P_CURRENCY_TYPE,
                                 'T', DECODE(GLB.PERIOD_NAME, :FIRST_PERIOD,
                                             NVL(BEGIN_BALANCE_DR, 0) - NVL(BEGIN_BALANCE_CR, 0), 0),
                                 'S', DECODE(GLB.PERIOD_NAME, :FIRST_PERIOD,
                                             NVL(BEGIN_BALANCE_DR, 0) - NVL(BEGIN_BALANCE_CR, 0), 0),
                                 'E', DECODE(GLB.TRANSLATED_FLAG,
                                             'R', DECODE(GLB.PERIOD_NAME, :FIRST_PERIOD,
                                                         NVL(BEGIN_BALANCE_DR, 0) - NVL(BEGIN_BALANCE_CR, 0), 0),
                                                  DECODE(GLB.PERIOD_NAME, :FIRST_PERIOD,
                                                         NVL(BEGIN_BALANCE_DR_BEQ, 0) - NVL(BEGIN_BALANCE_CR_BEQ, 0), 0)),
                                 'C', DECODE(GLB.PERIOD_NAME, :FIRST_PERIOD,
                                             NVL(BEGIN_BALANCE_DR_BEQ, 0) - NVL(BEGIN_BALANCE_CR_BEQ, 0), 0)))
--,
--       'E',  DECODE(:P_PERIOD_TYPE,
--                    'PTD', DECODE(:P_CURRENCY_TYPE, 'T', NVL(BEGIN_BALANCE_DR, 0) - NVL(BEGIN_BALANCE_CR, 0), 0),
--                    'PJTD', DECODE(:P_CURRENCY_TYPE, 'T', 0, 0),
--                    'QTD', DECODE(:P_CURRENCY_TYPE, 'T', DECODE(GLB.PERIOD_NAME, :FIRST_PERIOD,
--                                                                NVL(BEGIN_BALANCE_DR, 0) - NVL(BEGIN_BALANCE_CR, 0), 0), 0),
--                    'YTD', DECODE(:P_CURRENCY_TYPE, 'T', DECODE(GLB.PERIOD_NAME, :FIRST_PERIOD,
--                                                                NVL(BEGIN_BALANCE_DR, 0) - NVL(BEGIN_BALANCE_CR, 0), 0), 0)))
  BEGIN_BALANCE,
-- PERIOD_DR
--DECODE(:P_ACTUAL_FLAG,
--       'A',
 DECODE(:P_PERIOD_TYPE,
                   'PTD', DECODE(:P_CURRENCY_TYPE,
                                 'T', NVL(PERIOD_NET_DR, 0),
                                 'S', NVL(PERIOD_NET_DR, 0),
                                 'E', DECODE(GLB.TRANSLATED_FLAG,
                                             'R', NVL(PERIOD_NET_DR, 0),
                                                  NVL(PERIOD_NET_DR_BEQ, 0)),
                                 'C', NVL(PERIOD_NET_DR_BEQ, 0)),
                   'PJTD', DECODE(:P_CURRENCY_TYPE,
                                  'T', NVL(PROJECT_TO_DATE_DR, 0) + NVL(PERIOD_NET_DR, 0),
                                  'S', NVL(PROJECT_TO_DATE_DR, 0) + NVL(PERIOD_NET_DR, 0),
                                  'E', DECODE(GLB.TRANSLATED_FLAG,
                                              'R', NVL(PROJECT_TO_DATE_DR, 0) + NVL(PERIOD_NET_DR, 0),
                                                   NVL(PROJECT_TO_DATE_DR_BEQ, 0) + NVL(PERIOD_NET_DR_BEQ, 0)),
                                  'C', NVL(PROJECT_TO_DATE_DR_BEQ, 0) + NVL(PERIOD_NET_DR_BEQ, 0)),
                   'QTD', DECODE(:P_CURRENCY_TYPE,
                                 'T', DECODE(GLB.PERIOD_NAME, :ACCOUNTING_PERIOD_PARAM,
                                             NVL(BEGIN_BALANCE_DR, 0) + NVL(PERIOD_NET_DR, 0), 0)
                                    - DECODE(GLB.PERIOD_NAME, :FIRST_PERIOD, NVL(BEGIN_BALANCE_DR, 0), 0),
                                 'S', DECODE(GLB.PERIOD_NAME, :ACCOUNTING_PERIOD_PARAM,
                                             NVL(BEGIN_BALANCE_DR, 0) + NVL(PERIOD_NET_DR, 0), 0)
                                    - DECODE(GLB.PERIOD_NAME, :FIRST_PERIOD, NVL(BEGIN_BALANCE_DR, 0), 0),
                                 'E', DECODE(GLB.TRANSLATED_FLAG,
                                             'R', DECODE(GLB.PERIOD_NAME, :ACCOUNTING_PERIOD_PARAM,
                                                         NVL(BEGIN_BALANCE_DR, 0) + NVL(PERIOD_NET_DR, 0), 0)
                                                - DECODE(GLB.PERIOD_NAME, :FIRST_PERIOD, NVL(BEGIN_BALANCE_DR, 0), 0),
                                                  DECODE(GLB.PERIOD_NAME, :ACCOUNTING_PERIOD_PARAM,
                                                         NVL(BEGIN_BALANCE_DR_BEQ, 0) + NVL(PERIOD_NET_DR_BEQ, 0), 0)
                                                - DECODE(GLB.PERIOD_NAME, :FIRST_PERIOD, NVL(BEGIN_BALANCE_DR_BEQ, 0), 0)),
                                 'C', DECODE(GLB.PERIOD_NAME, :ACCOUNTING_PERIOD_PARAM,
                                                         NVL(BEGIN_BALANCE_DR_BEQ, 0) + NVL(PERIOD_NET_DR_BEQ, 0), 0)
                                                - DECODE(GLB.PERIOD_NAME, :FIRST_PERIOD, NVL(BEGIN_BALANCE_DR_BEQ, 0), 0)),
                   'YTD', DECODE(:P_CURRENCY_TYPE,
                                 'T', DECODE(GLB.PERIOD_NAME, :ACCOUNTING_PERIOD_PARAM,
                                             NVL(BEGIN_BALANCE_DR, 0) + NVL(PERIOD_NET_DR, 0), 0)
                                    - DECODE(GLB.PERIOD_NAME, :FIRST_PERIOD, NVL(BEGIN_BALANCE_DR, 0), 0),
                                 'S', DECODE(GLB.PERIOD_NAME, :ACCOUNTING_PERIOD_PARAM,
                                             NVL(BEGIN_BALANCE_DR, 0) + NVL(PERIOD_NET_DR, 0), 0)
                                    - DECODE(GLB.PERIOD_NAME, :FIRST_PERIOD, NVL(BEGIN_BALANCE_DR, 0), 0),
                                 'E', DECODE(GLB.TRANSLATED_FLAG,
                                             'R', DECODE(GLB.PERIOD_NAME, :ACCOUNTING_PERIOD_PARAM,
                                                         NVL(BEGIN_BALANCE_DR, 0) + NVL(PERIOD_NET_DR, 0), 0)
                                                - DECODE(GLB.PERIOD_NAME, :FIRST_PERIOD, NVL(BEGIN_BALANCE_DR, 0), 0),
                                                  DECODE(GLB.PERIOD_NAME, :ACCOUNTING_PERIOD_PARAM,
                                                         NVL(BEGIN_BALANCE_DR_BEQ, 0) + NVL(PERIOD_NET_DR_BEQ, 0), 0)
                                                - DECODE(GLB.PERIOD_NAME, :FIRST_PERIOD, NVL(BEGIN_BALANCE_DR_BEQ, 0), 0)),
                                 'C', DECODE(GLB.PERIOD_NAME, :ACCOUNTING_PERIOD_PARAM,
                                                         NVL(BEGIN_BALANCE_DR_BEQ, 0) + NVL(PERIOD_NET_DR_BEQ, 0), 0)
                                                - DECODE(GLB.PERIOD_NAME, :FIRST_PERIOD, NVL(BEGIN_BALANCE_DR_BEQ, 0), 0)))
--,
--       'E', DECODE(:P_PERIOD_TYPE,
--                    'PTD', DECODE(:P_CURRENCY_TYPE, 'T', NVL(PERIOD_NET_DR, 0), 0),
--                    'PJTD', DECODE(:P_CURRENCY_TYPE, 'T', NVL(PROJECT_TO_DATE_DR, 0) + NVL(PERIOD_NET_DR, 0), 0),
--                    'QTD', DECODE(:P_CURRENCY_TYPE, 'T', DECODE(GLB.PERIOD_NAME, :ACCOUNTING_PERIOD_PARAM,
--                                                                NVL(BEGIN_BALANCE_DR, 0) + NVL(PERIOD_NET_DR, 0), 0)
--                                                       - DECODE(GLB.PERIOD_NAME, :FIRST_PERIOD, NVL(BEGIN_BALANCE_DR, 0), 0), 0),
--                    'YTD', DECODE(:P_CURRENCY_TYPE, 'T', DECODE(GLB.PERIOD_NAME, :ACCOUNTING_PERIOD_PARAM,
--                                                                NVL(BEGIN_BALANCE_DR, 0) + NVL(PERIOD_NET_DR, 0), 0)
--                                                       - DECODE(GLB.PERIOD_NAME, :FIRST_PERIOD, NVL(BEGIN_BALANCE_DR, 0), 0), 0)))
  PERIOD_DR,
-- PERIOD_CR
--DECODE(:P_ACTUAL_FLAG,
--       'A',
 DECODE(:P_PERIOD_TYPE,
                   'PTD', DECODE(:P_CURRENCY_TYPE,
                                 'T', NVL(PERIOD_NET_CR, 0),
                                 'S', NVL(PERIOD_NET_CR, 0),
                                 'E', DECODE(GLB.TRANSLATED_FLAG,
                                             'R', NVL(PERIOD_NET_CR, 0),
                                                  NVL(PERIOD_NET_CR_BEQ, 0)),
                                 'C', NVL(PERIOD_NET_CR_BEQ, 0)),
                   'PJTD', DECODE(:P_CURRENCY_TYPE,
                                  'T', NVL(PROJECT_TO_DATE_CR, 0) + NVL(PERIOD_NET_CR, 0),
                                  'S', NVL(PROJECT_TO_DATE_CR, 0) + NVL(PERIOD_NET_CR, 0),
                                  'E', DECODE(GLB.TRANSLATED_FLAG,
                                              'R', NVL(PROJECT_TO_DATE_CR, 0) + NVL(PERIOD_NET_CR, 0),
                                                   NVL(PROJECT_TO_DATE_CR_BEQ, 0) + NVL(PERIOD_NET_CR_BEQ, 0)),
                                  'C', NVL(PROJECT_TO_DATE_CR_BEQ, 0) + NVL(PERIOD_NET_CR_BEQ, 0)),
                   'QTD', DECODE(:P_CURRENCY_TYPE,
                                 'T', DECODE(GLB.PERIOD_NAME, :ACCOUNTING_PERIOD_PARAM,
                                             NVL(BEGIN_BALANCE_CR, 0) + NVL(PERIOD_NET_CR, 0), 0)
                                    - DECODE(GLB.PERIOD_NAME, :FIRST_PERIOD, NVL(BEGIN_BALANCE_CR, 0), 0),
                                 'S', DECODE(GLB.PERIOD_NAME, :ACCOUNTING_PERIOD_PARAM,
                                             NVL(BEGIN_BALANCE_CR, 0) + NVL(PERIOD_NET_CR, 0), 0)
                                    - DECODE(GLB.PERIOD_NAME, :FIRST_PERIOD, NVL(BEGIN_BALANCE_CR, 0), 0),
                                 'E', DECODE(GLB.TRANSLATED_FLAG,
                                             'R', DECODE(GLB.PERIOD_NAME, :ACCOUNTING_PERIOD_PARAM,
                                                         NVL(BEGIN_BALANCE_CR, 0) + NVL(PERIOD_NET_CR, 0), 0)
                                                - DECODE(GLB.PERIOD_NAME, :FIRST_PERIOD, NVL(BEGIN_BALANCE_CR, 0), 0),
                                                  DECODE(GLB.PERIOD_NAME, :ACCOUNTING_PERIOD_PARAM,
                                                         NVL(BEGIN_BALANCE_CR_BEQ, 0) + NVL(PERIOD_NET_CR_BEQ, 0), 0)
                                                - DECODE(GLB.PERIOD_NAME, :FIRST_PERIOD, NVL(BEGIN_BALANCE_CR_BEQ, 0), 0)),
                                 'C', DECODE(GLB.PERIOD_NAME, :ACCOUNTING_PERIOD_PARAM,
                                                         NVL(BEGIN_BALANCE_CR_BEQ, 0) + NVL(PERIOD_NET_CR_BEQ, 0), 0)
                                                - DECODE(GLB.PERIOD_NAME, :FIRST_PERIOD, NVL(BEGIN_BALANCE_CR_BEQ, 0), 0)),
                   'YTD', DECODE(:P_CURRENCY_TYPE,
                                 'T', DECODE(GLB.PERIOD_NAME, :ACCOUNTING_PERIOD_PARAM,
                                             NVL(BEGIN_BALANCE_CR, 0) + NVL(PERIOD_NET_CR, 0), 0)
                                    - DECODE(GLB.PERIOD_NAME, :FIRST_PERIOD, NVL(BEGIN_BALANCE_CR, 0), 0),
                                 'S', DECODE(GLB.PERIOD_NAME, :ACCOUNTING_PERIOD_PARAM,
                                             NVL(BEGIN_BALANCE_CR, 0) + NVL(PERIOD_NET_CR, 0), 0)
                                    - DECODE(GLB.PERIOD_NAME, :FIRST_PERIOD, NVL(BEGIN_BALANCE_CR, 0), 0),
                                 'E', DECODE(GLB.TRANSLATED_FLAG,
                                             'R', DECODE(GLB.PERIOD_NAME, :ACCOUNTING_PERIOD_PARAM,
                                                         NVL(BEGIN_BALANCE_CR, 0) + NVL(PERIOD_NET_CR, 0), 0)
                                                - DECODE(GLB.PERIOD_NAME, :FIRST_PERIOD, NVL(BEGIN_BALANCE_CR, 0), 0),
                                                  DECODE(GLB.PERIOD_NAME, :ACCOUNTING_PERIOD_PARAM,
                                                         NVL(BEGIN_BALANCE_CR_BEQ, 0) + NVL(PERIOD_NET_CR_BEQ, 0), 0)
                                                - DECODE(GLB.PERIOD_NAME, :FIRST_PERIOD, NVL(BEGIN_BALANCE_CR_BEQ, 0), 0)),
                                 'C', DECODE(GLB.PERIOD_NAME, :ACCOUNTING_PERIOD_PARAM,
                                                         NVL(BEGIN_BALANCE_CR_BEQ, 0) + NVL(PERIOD_NET_CR_BEQ, 0), 0)
                                                - DECODE(GLB.PERIOD_NAME, :FIRST_PERIOD, NVL(BEGIN_BALANCE_CR_BEQ, 0), 0)))
--,
--       'E', DECODE(:P_PERIOD_TYPE,
--                    'PTD', DECODE(:P_CURRENCY_TYPE, 'T', NVL(PERIOD_NET_CR, 0), 0),
--                    'PJTD', DECODE(:P_CURRENCY_TYPE, 'T', NVL(PROJECT_TO_DATE_CR, 0) + NVL(PERIOD_NET_CR, 0), 0),
--                    'QTD', DECODE(:P_CURRENCY_TYPE, 'T', DECODE(GLB.PERIOD_NAME, :ACCOUNTING_PERIOD_PARAM,
--                                                                NVL(BEGIN_BALANCE_CR, 0) + NVL(PERIOD_NET_CR, 0), 0)
--                                                       - DECODE(GLB.PERIOD_NAME, :FIRST_PERIOD, NVL(BEGIN_BALANCE_CR, 0), 0), 0),
--                    'YTD', DECODE(:P_CURRENCY_TYPE, 'T', DECODE(GLB.PERIOD_NAME, :ACCOUNTING_PERIOD_PARAM,
--                                                                NVL(BEGIN_BALANCE_CR, 0) + NVL(PERIOD_NET_CR, 0), 0)
--                                                       - DECODE(GLB.PERIOD_NAME, :FIRST_PERIOD, NVL(BEGIN_BALANCE_CR, 0), 0), 0)))
  PERIOD_CR,
-- END_BALANCE
--DECODE(:P_ACTUAL_FLAG,
--       'A',
 DECODE(:P_PERIOD_TYPE,
                   'PTD', DECODE(:P_CURRENCY_TYPE,
                                 'T', NVL(BEGIN_BALANCE_DR, 0) + NVL(PERIOD_NET_DR, 0)
                                    - NVL(BEGIN_BALANCE_CR, 0) - NVL(PERIOD_NET_CR, 0),
                                 'S', NVL(BEGIN_BALANCE_DR, 0) + NVL(PERIOD_NET_DR, 0)
                                    - NVL(BEGIN_BALANCE_CR, 0) - NVL(PERIOD_NET_CR, 0),
                                 'E', DECODE(GLB.TRANSLATED_FLAG, 'R',
                                             NVL(BEGIN_BALANCE_DR, 0) + NVL(PERIOD_NET_DR, 0)
                                           - NVL(BEGIN_BALANCE_CR, 0) - NVL(PERIOD_NET_CR, 0),
                                             NVL(BEGIN_BALANCE_DR_BEQ, 0) + NVL(PERIOD_NET_DR_BEQ, 0)
                                           - NVL(BEGIN_BALANCE_CR_BEQ, 0) - NVL(PERIOD_NET_CR_BEQ, 0)),
                                 'C', NVL(BEGIN_BALANCE_DR_BEQ, 0) + NVL(PERIOD_NET_DR_BEQ, 0)
                                    - NVL(BEGIN_BALANCE_CR_BEQ, 0) - NVL(PERIOD_NET_CR_BEQ, 0)),
                   'PJTD', DECODE(:P_CURRENCY_TYPE,
                                 'T', NVL(PROJECT_TO_DATE_DR, 0) + NVL(PERIOD_NET_DR, 0)
                                    - NVL(PROJECT_TO_DATE_CR, 0) - NVL(PERIOD_NET_CR, 0),
                                 'S', NVL(PROJECT_TO_DATE_DR, 0) + NVL(PERIOD_NET_DR, 0)
                                    - NVL(PROJECT_TO_DATE_CR, 0) - NVL(PERIOD_NET_CR, 0),
                                 'E', DECODE(GLB.TRANSLATED_FLAG, 'R',
                                             NVL(PROJECT_TO_DATE_DR, 0) + NVL(PERIOD_NET_DR, 0)
                                           - NVL(PROJECT_TO_DATE_CR, 0) - NVL(PERIOD_NET_CR, 0),
                                             NVL(PROJECT_TO_DATE_DR_BEQ, 0) + NVL(PERIOD_NET_DR_BEQ, 0)
                                           - NVL(PROJECT_TO_DATE_CR_BEQ, 0) - NVL(PERIOD_NET_CR_BEQ, 0)),
                                 'C', NVL(PROJECT_TO_DATE_DR_BEQ, 0) + NVL(PERIOD_NET_DR_BEQ, 0)
                                    - NVL(PROJECT_TO_DATE_CR_BEQ, 0) - NVL(PERIOD_NET_CR_BEQ, 0)),
                   'QTD', DECODE(:P_CURRENCY_TYPE,
                                 'T', DECODE(GLB.PERIOD_NAME, :ACCOUNTING_PERIOD_PARAM,
                                             NVL(BEGIN_BALANCE_DR, 0) + NVL(PERIOD_NET_DR, 0)
                                           - NVL(BEGIN_BALANCE_CR, 0) - NVL(PERIOD_NET_CR, 0)),
                                 'S', DECODE(GLB.PERIOD_NAME, :ACCOUNTING_PERIOD_PARAM,
                                             NVL(BEGIN_BALANCE_DR, 0) + NVL(PERIOD_NET_DR, 0)
                                           - NVL(BEGIN_BALANCE_CR, 0) - NVL(PERIOD_NET_CR, 0)),
                                 'E', DECODE(GLB.TRANSLATED_FLAG, 'R',
                                             DECODE(GLB.PERIOD_NAME, :ACCOUNTING_PERIOD_PARAM,
                                                    NVL(BEGIN_BALANCE_DR, 0) + NVL(PERIOD_NET_DR, 0)
                                                  - NVL(BEGIN_BALANCE_CR, 0) - NVL(PERIOD_NET_CR, 0)),
                                             DECODE(GLB.PERIOD_NAME, :ACCOUNTING_PERIOD_PARAM,
                                                    NVL(BEGIN_BALANCE_DR_BEQ, 0) + NVL(PERIOD_NET_DR_BEQ, 0)
                                                  - NVL(BEGIN_BALANCE_CR_BEQ, 0) - NVL(PERIOD_NET_CR_BEQ, 0))),
                                 'C', DECODE(GLB.PERIOD_NAME, :ACCOUNTING_PERIOD_PARAM,
                                             NVL(BEGIN_BALANCE_DR_BEQ, 0) + NVL(PERIOD_NET_DR_BEQ, 0)
                                           - NVL(BEGIN_BALANCE_CR_BEQ, 0) - NVL(PERIOD_NET_CR_BEQ, 0))),
                   'YTD', DECODE(:P_CURRENCY_TYPE,
                                 'T', DECODE(GLB.PERIOD_NAME, :ACCOUNTING_PERIOD_PARAM,
                                             NVL(BEGIN_BALANCE_DR, 0) + NVL(PERIOD_NET_DR, 0)
                                           - NVL(BEGIN_BALANCE_CR, 0) - NVL(PERIOD_NET_CR, 0)),
                                 'S', DECODE(GLB.PERIOD_NAME, :ACCOUNTING_PERIOD_PARAM,
                                             NVL(BEGIN_BALANCE_DR, 0) + NVL(PERIOD_NET_DR, 0)
                                           - NVL(BEGIN_BALANCE_CR, 0) - NVL(PERIOD_NET_CR, 0)),
                                 'E', DECODE(GLB.TRANSLATED_FLAG, 'R',
                                             DECODE(GLB.PERIOD_NAME, :ACCOUNTING_PERIOD_PARAM,
                                                    NVL(BEGIN_BALANCE_DR, 0) + NVL(PERIOD_NET_DR, 0)
                                                  - NVL(BEGIN_BALANCE_CR, 0) - NVL(PERIOD_NET_CR, 0)),
                                             DECODE(GLB.PERIOD_NAME, :ACCOUNTING_PERIOD_PARAM,
                                                    NVL(BEGIN_BALANCE_DR_BEQ, 0) + NVL(PERIOD_NET_DR_BEQ, 0)
                                                  - NVL(BEGIN_BALANCE_CR_BEQ, 0) - NVL(PERIOD_NET_CR_BEQ, 0))),
                                 'C', DECODE(GLB.PERIOD_NAME, :ACCOUNTING_PERIOD_PARAM,
                                                    NVL(BEGIN_BALANCE_DR_BEQ, 0) + NVL(PERIOD_NET_DR_BEQ, 0)
                                                  - NVL(BEGIN_BALANCE_CR_BEQ, 0) - NVL(PERIOD_NET_CR_BEQ, 0))))
--,
--       'E', DECODE(:P_PERIOD_TYPE,
--                   'PTD', DECODE(:P_CURRENCY_TYPE, 'T', NVL(BEGIN_BALANCE_DR, 0) + NVL(PERIOD_NET_DR, 0)
--                                                  - NVL(BEGIN_BALANCE_CR, 0) - NVL(PERIOD_NET_CR, 0), 0),
--                   'PJTD', DECODE(:P_CURRENCY_TYPE, 'T', NVL(PROJECT_TO_DATE_DR, 0) + NVL(PERIOD_NET_DR, 0)
--                                                   - NVL(PROJECT_TO_DATE_CR, 0) - NVL(PERIOD_NET_CR, 0), 0),
--                   'QTD', DECODE(:P_CURRENCY_TYPE, 'T', DECODE(GLB.PERIOD_NAME, :ACCOUNTING_PERIOD_PARAM,
--                                                               NVL(BEGIN_BALANCE_DR, 0) + NVL(PERIOD_NET_DR, 0)
--                                                             - NVL(BEGIN_BALANCE_CR, 0) - NVL(PERIOD_NET_CR, 0)), 0),
--                   'YTD', DECODE(:P_CURRENCY_TYPE, 'T', DECODE(GLB.PERIOD_NAME, :ACCOUNTING_PERIOD_PARAM,
--                                                               NVL(BEGIN_BALANCE_DR, 0) + NVL(PERIOD_NET_DR, 0)
--                                                             - NVL(BEGIN_BALANCE_CR, 0) - NVL(PERIOD_NET_CR, 0)), 0)))
  END_BALANCE,
    CC.code_combination_id CCID,
    &PAGEBREAK_VAL PAGEBREAK_VALUE,
    DECODE(:P_ADDITIONAL_SEGMENT_NUM, null, null, &ADDITIONAL_VAL) ADDITIONAL_VALUE,
    &NATURAL_ACCOUNT_VAL NATURAL_ACCOUNT_VALUE,
    DECODE(:P_SUMMARIZE_BY, 'ACCOUNT_COMB', &ACCOUNT_FLEX, null) ACCT_FLEX,
    &ACCOUNT_SECURED_SEG ACCT_SECURED_SEG,
    CC.ACCOUNT_TYPE  ACCT_TYPE
FROM
    GL_BALANCES      GLB,
    GL_CODE_COMBINATIONS   CC,
    GL_LEDGERS    GLL,
    GL_LEDGER_SET_ASSIGNMENTS ASG,
    GL_LEDGER_RELATIONSHIPS LR
WHERE
    GLB.ACTUAL_FLAG = :P_ACTUAL_FLAG
AND GLB.CURRENCY_CODE = :RESULTING_CURRENCY
AND GLB.PERIOD_NAME IN (:ACCOUNTING_PERIOD_PARAM, DECODE(:P_PERIOD_TYPE,
                                                         'PTD', :ACCOUNTING_PERIOD_PARAM,
                                                         'PJTD', :ACCOUNTING_PERIOD_PARAM,
                                                         'YTD', :FIRST_PERIOD,
                                                         'QTD', :FIRST_PERIOD,
                                                         'N/A', :P_BUDGET_FIRST_PERIOD_NAME))
AND GLB.CODE_COMBINATION_ID = CC.CODE_COMBINATION_ID
AND CC.CHART_OF_ACCOUNTS_ID = :P_STRUCT_NUM
AND CC.SUMMARY_FLAG = 'N'
AND CC.TEMPLATE_ID IS NULL
AND GLL.LEDGER_ID = :P_LEDGER_ID
AND ASG.LEDGER_SET_ID(+) = GLL.LEDGER_ID
AND LR.TARGET_LEDGER_ID = NVL(ASG.LEDGER_ID, GLL.LEDGER_ID)
AND LR.SOURCE_LEDGER_ID = NVL(ASG.LEDGER_ID, GLL.LEDGER_ID)
AND LR.TARGET_CURRENCY_CODE = :P_LEDGER_CURRENCY
AND LR.SOURCE_LEDGER_ID = GLB.LEDGER_ID
AND LR.TARGET_LEDGER_ID = GLB.LEDGER_ID
AND &CURRENCY_WHERE
AND &ACCESS_WHERE
/*
AND &BUDGET_WHERE
*/
AND &ENCUM_WHERE 
AND &LP_INCREMENTAL_EXPORT
AND &FLEXDATA_SECURE = 'N'
AND &PAGEBREAK_WHERE) QRY
GROUP BY
    LEDGER_ID,
    PAGEBREAK_VALUE,
    ADDITIONAL_VALUE,
    NATURAL_ACCOUNT_VALUE,
    ACCT_FLEX,
    ACCT_TYPE) Q
&SECURITY_WHERE
ORDER BY
    LEDGER_ID,
    PAGEBREAK_VALUE,
    ADDITIONAL_VALUE,
    NATURAL_ACCOUNT_VALUE,
    ACCT_FLEX
========================================================================================================================================
-----------------------------------------U.S. 1096 Data Model-----------------------------------------------
--Q_FLEXDATA
SELECT
&C_FLEXFIELD C_FLEXDATA, 
	&C_DESC_ALL C_DESC_ALL
	--, 
	--&C_FLEXFIELD C_FLEXFIELD
FROM GL_CODE_COMBINATIONS
WHERE CHART_OF_ACCOUNTS_ID = :C_CHART_OF_ACCOUNTS_ID
--Q_bu
select MO_UTILS.GET_ORG_NAME(:P_BUSINESS_UNIT) C_BUSINESS_UNIT from dual
========================================================================================================================================
--------------------------------------U.S. 1099 Data Model-----------------------------------------------------
--Q_nec_select
SELECT n_vendor_name,
       n_tax_reporting_name,
       n_vendor_id,
       n_vendor_line,
       n_vendor_city,
       n_vendor_state,
       n_vendor_zip,
       n_current_error_text,
       n_num_1099,
       n_misc1,
       n_misc2,
       n_misc3,
       n_misc4,
       n_misc5,
       n_misc6,
       n_misc7,
       n_misc8,
       n_misc9,
       n_misc10,
       n_misc11, /*Added misc11 for Bug#32723706*/
       n_misc13,
       n_misc14,
       n_misc7_9,
       n_epp_payment,
       n_misc15aNT,
       n_misc15aT,
       n_misc15a,
       n_misc15b, 
       n_nec4,      
       n_C_RECIPIENT_NAME, 
       n_C_VENDOR_CITY_STATE_ZIP, 
       n_C_total
FROM(
SELECT pvw.vendor_name n_vendor_name,
            pvw.tax_reporting_name n_tax_reporting_name,
            TD.vendor_id n_vendor_id,
            substr(pvw.address_line1 || ' ' || pvw.address_line2 || ' ' ||
                   pvw.address_line3,
                   1,
                   33) n_vendor_line,
            ---substr added for 5853767
            pvw.city n_vendor_city,
            pvw.state n_vendor_state,
            pvw.zip n_vendor_zip,
            AP_APXT7F99_XMLP_PKG.C_ERROR_DUMMYFORMULA(decode(pvw.address_line1, '', 'No Address Line 1. ') ||
            decode(substr(pvw.organization_type_lookup_code, 1, 7),
                   'FOREIGN',
                   decode(pvw.country, '', 'No country. '),
                   nvl(decode(length(replace(replace(nvl(pvw.national_identifier,
                                                         nvl(null/*P.individual_1099*/,PII.income_tax_id)),
                                                     '-',
                                                     ''),
                                             ' ',
                                             '')),
                              0,
                              '',
                              9,
                              '',
                              'TIN not 9 digits. '),
                       decode(ltrim(translate(nvl(pvw.national_identifier,
                                                  nvl(null/*P.individual_1099*/,PII.income_tax_id)),
                                              '1234567890- ',
                                              ' ')),
                              '',
                              '',
                              'TIN contains non-numeric digit(s). ')) ||
                   decode(pvw.city, '', 'No city. ') ||
                   decode(nvl(pvw.province, pvw.state), '', 'No state. ') ||
                   decode(replace(replace(pvw.zip, '-', ''), ' ', ''),
                          '',
                          'No postal code. ')), pvw.vendor_name) n_current_error_text,
            decode(replace(replace(nvl(pvw.national_identifier,
                                       nvl(null/*P.individual_1099*/,PII.income_tax_id)),
                                   '-',
                                   ''),
                           ' ',
                           ''),
                   '000000000',
                   '',
                   nvl(pvw.national_identifier,
                       nvl(null/*P.individual_1099*/,PII.income_tax_id))) n_num_1099,
            sum(TD.misc1) n_misc1,
            sum(TD.misc2) n_misc2,
            sum(TD.misc3) n_misc3,
            sum(TD.misc4) n_misc4,
            sum(TD.misc5) n_misc5,
            sum(TD.misc6) n_misc6,
            sum(TD.misc7) + sum(TD.misc15aT) + sum(TD.misc15b) n_misc7,
            sum(TD.misc8) n_misc8,
            sum(TD.misc9) n_misc9,
            sum(TD.misc10) n_misc10,
            sum(TD.misc11) n_misc11, /*Added misc11 for Bug#32723706*/
            sum(TD.misc13) n_misc13,
            sum(TD.misc14) n_misc14,
            sum(TD.misc7) + sum(TD.misc9) n_misc7_9,
            decode(sum(TD.misc9),
                   0,
                   '',
                   to_char(sum(TD.misc9), '999999999D00') || 'EPP') n_epp_payment,
            sum(TD.misc15aNT) n_misc15aNT,
            sum(TD.misc15aT) n_misc15aT,
            sum(TD.misc15aNT) + sum(TD.misc15aT) n_misc15a,
            sum(TD.misc15b) + sum(TD.misc15aT) n_misc15b, 
        sum(TD.nec4) n_nec4,      
        AP_APXT7F99_XMLP_PKG.c_recipient_nameformula(Pvw.tax_reporting_name, pvw.vendor_name) n_C_RECIPIENT_NAME, 
        AP_APXT7F99_XMLP_PKG.c_vendor_city_state_zipformula(pvw.city, pvw.state, pvw.zip) n_C_VENDOR_CITY_STATE_ZIP,
        --Modified n_C_total for bug 30962385 
        CASE 
          WHEN to_char(:P_START_YEAR_DATE, 'YYYY')<2020 THEN
	 	 AP_APXT7F99_XMLP_PKG.c_totalformula(sum ( misc1 ), sum ( misc2 ), sum ( misc3 ), sum ( misc5 ), sum ( misc6 ), sum ( misc7 ) + sum ( misc15aT ) + sum ( misc15b ), sum ( misc8 ), sum ( misc9 ), sum ( misc10 ), sum ( misc11 ), sum ( misc13 ), sum ( misc14 ))  /*Added misc11 for Bug#32723706*/
          ELSE 
		  AP_APXT7F99_XMLP_PKG.c_totalformula(sum ( misc1 ), sum ( misc2 ), sum ( misc3 ), sum ( misc5 ), sum ( misc6 ), 0, sum ( misc8 ), sum ( misc9 ), sum ( misc10 ), sum ( misc11 ), sum ( misc13 ), sum ( misc14 ))  /*Added misc11 for Bug#32723706*/
		END n_C_total
      FROM ap_1099_tape_data_all TD,
           POZ_SUPPLIERS_PII PII,       
            (SELECT P.vendor_id VENDOR_ID,
            tca_party.party_name VENDOR_NAME,
            P.tax_reporting_name TAX_REPORTING_NAME,
            p.organization_type_lookup_code ORGANIZATION_TYPE_LOOKUP_CODE,
            NULL NATIONAL_IDENTIFIER,
            pvs.province PROVINCE,
            pvs.address_line1 ADDRESS_LINE1,
            pvs.address_line2 ADDRESS_LINE2,
            pvs.address_line3 ADDRESS_LINE3,
            pvs.state STATE,
            pvs.city CITY,
            pvs.zip ZIP,
            pvs.COUNTRY COUNTRY
     FROM poz_suppliers P,
          HZ_PARTIES tca_party,
          poz_supplier_sites_v pvs
      WHERE tca_party.party_id =    P.party_id
        AND pvs.vendor_id = P.vendor_id
        AND EXISTS(SELECT 1 FROM POZ_SITE_ASSIGNMENTS_ALL_M PVSA WHERE PVS.VENDOR_SITE_ID = PVSA.VENDOR_SITE_ID AND PVSA.BU_ID = :P_BUSINESS_UNIT)
        AND nvl(p.vendor_type_lookup_code, 'DUMMY') <> 'EMPLOYEE' /*Bug 9247826*/
        AND (NVL(pvs.tax_reporting_site_flag,'N') = 'Y' OR
            (pvs.vendor_site_code =
            (select min(vendor_site_code)
                 from poz_supplier_sites_v pvs2
                where pvs2.vendor_id = pvs.vendor_id
                  and nvl(inactive_date, sysdate + 9000) =
                      (select max(decode(inactive_date,
                                         '',
                                         sysdate + 9000,
                                         inactive_date))
                         from poz_supplier_sites_v pvs3
                        where pvs3.vendor_id = pvs.vendor_id)) 
              AND not exists
             (SELECT 'A tax reporting site exists for this vendor'
                 FROM poz_supplier_sites_v pvs4
                WHERE NVL(pvs4.tax_reporting_site_flag,'N') = 'Y'
                  AND pvs4.vendor_id = pvs.vendor_id))) 
                  /* * *
                    Employee is not applicable to 1099 reports in Fusion anymore because a new supplier 
                    would be created for the employee if he has dual roles. As it confirmed by 
                    nageshwar.addepalli@oracle.com, it is safe to assume that we can rule out 
                    all data whose type is 'Employee'
                    * * */
     ) pvw /*Bug 8768541 :added the inline view for emp address from HR*/
     where pvw.vendor_id = TD.vendor_id  
       AND     pvw.vendor_id = PII.vendor_id (+)
       AND     TD.org_id = :P_BUSINESS_UNIT
      GROUP BY pvw.vendor_name,
               TD.vendor_id,
               nvl(pvw.national_identifier, nvl(null/*P.individual_1099*/,PII.income_tax_id)),
               pvw.tax_reporting_name,
               pvw.organization_type_lookup_code,
               pvw.country,
               pvw.address_line1,
               pvw.address_line2,
               pvw.address_line3,
               pvw.city,
               pvw.province,
               pvw.state,
               pvw.zip) WHERE (n_misc7 > 0 AND to_char(:P_START_YEAR_DATE, 'YYYY')>=2020)
     ORDER BY (decode(:P_ORDER_BY,
                       'STATE CODE',
                       n_vendor_state,
                       'REPORTING NAME',
                       nvl(n_tax_reporting_name, n_vendor_name),
                  n_vendor_state))
--Q_main_select
SELECT vendor_name,
       tax_reporting_name,
       vendor_id,
       vendor_line,
       vendor_city,
       vendor_state,
       vendor_zip,
       current_error_text,
       num_1099,
       misc1,
       misc2,
       misc3,
       misc4,
       misc5,
       misc6,
       misc7,
       misc8,
       misc9,
       misc10,
       misc11, /*Added misc11 for Bug#32723706*/
       misc13,
       misc14,
       misc7_9,
       epp_payment,
       misc15aNT,
       misc15aT,
       misc15a,
       misc15b, 
       nec4,      
       C_RECIPIENT_NAME, 
       C_VENDOR_CITY_STATE_ZIP, 
       C_total
FROM(
         SELECT pvw.vendor_name vendor_name,
	        pvw.tax_reporting_name tax_reporting_name,
	        TD.vendor_id vendor_id,
	        substr(pvw.address_line1 || ' ' || pvw.address_line2 || ' ' ||
	               pvw.address_line3,
	               1,
	               33) vendor_line,
	        ---substr added for 5853767
	        pvw.city vendor_city,
	        pvw.state vendor_state,
	        pvw.zip vendor_zip,
	        AP_APXT7F99_XMLP_PKG.C_ERROR_DUMMYFORMULA(decode(pvw.address_line1, '', 'No Address Line 1. ') ||
	        decode(substr(pvw.organization_type_lookup_code, 1, 7),
	               'FOREIGN',
	               decode(pvw.country, '', 'No country. '),
	               nvl(decode(length(replace(replace(nvl(pvw.national_identifier,
	                                                     nvl(null/*P.individual_1099*/,PII.income_tax_id)),
	                                                 '-',
	                                                 ''),
	                                         ' ',
	                                         '')),
	                          0,
	                          '',
	                          9,
	                          '',
	                          'TIN not 9 digits. '),
	                   decode(ltrim(translate(nvl(pvw.national_identifier,
	                                              nvl(null/*P.individual_1099*/,PII.income_tax_id)),
	                                          '1234567890- ',
	                                          ' ')),
	                          '',
	                          '',
	                          'TIN contains non-numeric digit(s). ')) ||
	               decode(pvw.city, '', 'No city. ') ||
	               decode(nvl(pvw.province, pvw.state), '', 'No state. ') ||
	               decode(replace(replace(pvw.zip, '-', ''), ' ', ''),
	                      '',
	                      'No postal code. ')), pvw.vendor_name) current_error_text,
	        decode(replace(replace(nvl(pvw.national_identifier,
	                                   nvl(null/*P.individual_1099*/,PII.income_tax_id)),
	                               '-',
	                               ''),
	                       ' ',
	                       ''),
	               '000000000',
	               '',
	               nvl(pvw.national_identifier,
	                   nvl(null/*P.individual_1099*/,PII.income_tax_id))) num_1099,
	        sum(TD.misc1) misc1,
	        sum(TD.misc2) misc2,
	        sum(TD.misc3) misc3,
	        sum(TD.misc4) misc4,
	        sum(TD.misc5) misc5,
	        sum(TD.misc6) misc6,
	        sum(TD.misc7) + sum(TD.misc15aT) + sum(TD.misc15b) misc7,
	        sum(TD.misc8) misc8,
	        sum(TD.misc9) misc9,
	        sum(TD.misc10) misc10,
           sum(TD.misc11) misc11, /*Added misc11 for Bug#32723706*/
	        sum(TD.misc13) misc13,
	        sum(TD.misc14) misc14,
	        sum(TD.misc7) + sum(TD.misc9) misc7_9,
	        decode(sum(TD.misc9),
	               0,
	               '',
	               to_char(sum(TD.misc9), '999999999D00') || 'EPP') epp_payment,
	        sum(TD.misc15aNT) misc15aNT,
	        sum(TD.misc15aT) misc15aT,
	        sum(TD.misc15aNT) + sum(TD.misc15aT) misc15a,
	        sum(TD.misc15b) + sum(TD.misc15aT) misc15b, 
		sum(TD.nec4) nec4,      
	 	AP_APXT7F99_XMLP_PKG.c_recipient_nameformula(Pvw.tax_reporting_name, pvw.vendor_name) C_RECIPIENT_NAME, 
	 	AP_APXT7F99_XMLP_PKG.c_vendor_city_state_zipformula(pvw.city, pvw.state, pvw.zip) C_VENDOR_CITY_STATE_ZIP, 
                --Modified C_total for bug 30962385
	        CASE 
		   WHEN to_char(:P_START_YEAR_DATE, 'YYYY')<2020 THEN
	 	     AP_APXT7F99_XMLP_PKG.c_totalformula(sum ( misc1 ), sum ( misc2 ), sum ( misc3 ), sum ( misc5 ), sum ( misc6 ), sum ( misc7 ) + sum ( misc15aT ) + sum ( misc15b ), sum ( misc8 ), sum ( misc9 ), sum ( misc10 ), sum ( misc11 ), sum ( misc13 ), sum ( misc14 ))  /*Added misc11 for Bug#32723706*/
		   ELSE 
		     AP_APXT7F99_XMLP_PKG.c_totalformula(sum ( misc1 ), sum ( misc2 ), sum ( misc3 ), sum ( misc5 ), sum ( misc6 ), 0, sum ( misc8 ), sum ( misc9 ), sum ( misc10 ), sum ( misc11 ), sum ( misc13 ), sum ( misc14 ))  /*Added misc11 for Bug#32723706*/
		END C_total
	  FROM ap_1099_tape_data_all TD,
	       POZ_SUPPLIERS_PII PII,       
	        (SELECT P.vendor_id VENDOR_ID,
	        tca_party.party_name VENDOR_NAME,
	        P.tax_reporting_name TAX_REPORTING_NAME,
	        p.organization_type_lookup_code ORGANIZATION_TYPE_LOOKUP_CODE,
	        NULL NATIONAL_IDENTIFIER,
	        pvs.province PROVINCE,
	        pvs.address_line1 ADDRESS_LINE1,
	        pvs.address_line2 ADDRESS_LINE2,
	        pvs.address_line3 ADDRESS_LINE3,
	        pvs.state STATE,
	        pvs.city CITY,
	        pvs.zip ZIP,
	        pvs.COUNTRY COUNTRY
	 FROM poz_suppliers P,
	      HZ_PARTIES tca_party,
	      poz_supplier_sites_v pvs
	  WHERE tca_party.party_id = 	P.party_id
	    AND pvs.vendor_id = P.vendor_id
		AND EXISTS(SELECT 1 FROM POZ_SITE_ASSIGNMENTS_ALL_M PVSA WHERE PVS.VENDOR_SITE_ID = PVSA.VENDOR_SITE_ID AND PVSA.BU_ID = :P_BUSINESS_UNIT)
	    AND nvl(p.vendor_type_lookup_code, 'DUMMY') <> 'EMPLOYEE' /*Bug 9247826*/
	    AND (NVL(pvs.tax_reporting_site_flag,'N') = 'Y' OR
	        (pvs.vendor_site_code =
	        (select min(vendor_site_code)
	             from poz_supplier_sites_v pvs2
	            where pvs2.vendor_id = pvs.vendor_id
	              and nvl(inactive_date, sysdate + 9000) =
	                  (select max(decode(inactive_date,
	                                     '',
	                                     sysdate + 9000,
	                                     inactive_date))
	                     from poz_supplier_sites_v pvs3
	                    where pvs3.vendor_id = pvs.vendor_id)) 
	          AND not exists
	         (SELECT 'A tax reporting site exists for this vendor'
	             FROM poz_supplier_sites_v pvs4
	            WHERE NVL(pvs4.tax_reporting_site_flag,'N') = 'Y'
	              AND pvs4.vendor_id = pvs.vendor_id))) 
				  /* * *
				    Employee is not applicable to 1099 reports in Fusion anymore because a new supplier 
					would be created for the employee if he has dual roles. As it confirmed by 
					nageshwar.addepalli@oracle.com, it is safe to assume that we can rule out 
					all data whose type is 'Employee'
					* * */
	 ) pvw /*Bug 8768541 :added the inline view for emp address from HR*/
	 where pvw.vendor_id = TD.vendor_id  
	   AND     pvw.vendor_id = PII.vendor_id (+)
           AND     TD.org_id = :P_BUSINESS_UNIT
	  GROUP BY pvw.vendor_name,
	           TD.vendor_id,
	           nvl(pvw.national_identifier, nvl(null/*P.individual_1099*/,PII.income_tax_id)),
	           pvw.tax_reporting_name,
	           pvw.organization_type_lookup_code,
	           pvw.country,
	           pvw.address_line1,
	           pvw.address_line2,
	           pvw.address_line3,
	           pvw.city,
	           pvw.province,
	           pvw.state,
	           pvw.zip) WHERE ((C_total) > 0 OR to_char(:P_START_YEAR_DATE, 'YYYY')<2020) /* Bug 30962385 */
	 ORDER BY (decode(:P_ORDER_BY,
	                   'STATE CODE',
	                   vendor_state,
	                   'REPORTING NAME',
	                   nvl(tax_reporting_name, vendor_name),
                  vendor_state))
--Q_FLEXDATA
SELECT
null C_FLEXDATA, 
	&C_DESC_ALL C_DESC_ALL, 
	&C_FLEXFIELD C_FLEXFIELD
FROM GL_CODE_COMBINATIONS
WHERE CHART_OF_ACCOUNTS_ID = :C_CHART_OF_ACCOUNTS_ID
=====================================================================================================================================
-------------------------------------------------------------U.S. 1099 Electronic Media Data Model--------------------------------------------------
--Q_K_NEC_REC_SELECT
SELECT control_totalmisc7,
            control_totalnec4,
            num_of_payees,
            lpad(substr(region_code,1,2),2,'0') k_region_code,
            AP_APXT7CMT_XMLP_PKG.C_K_NEC_RECORDFORMULA(num_of_payees, control_totalmisc7, 0, 0, control_totalnec4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, lpad ( substr ( region_code , 1 , 2 ) , 2 , '0' )) C_K_NEC_RECORD
        FROM (SELECT
              SUM(MISC7) + SUM(misc15aT) + SUM(misc15b) control_totalmisc7,
              SUM(NEC4) control_totalnec4,
              count(*) num_of_payees,
              REGION_CODE
            FROM
            AP_1099_TAPE_DATA_ALL
              WHERE org_id = :P_BUSINESS_UNIT --FUSION APXT7C99
              AND (MISC7 + NEC4 + misc15aT + misc15b) > 0
              AND REGION_CODE IS NOT NULL
            GROUP BY
            REGION_CODE)
            WHERE   num_of_payees > 0
--Q_K_REC_SELECT
SELECT  control_total1,
                control_total2,
                control_total3,
                control_total4,
                control_total5,
                control_total6,
                control_total7,
                control_total8,
                control_total9,
                control_total10,
                control_total11, /*Bug33437598*/
                control_total13,
                control_total14,
	control_total15a,
	control_total15b,
                num_of_payees,
                lpad(substr(region_code,1,2),2,'0') k_region_code, 
	AP_APXT7CMT_XMLP_PKG.c_k_recordformula(num_of_payees, control_total1, control_total2, control_total3, control_total4, control_total5, control_total6, control_total7, control_total8, control_total10, control_total11, control_total13, control_total14, control_total15a, control_total15b, lpad ( substr ( region_code , 1 , 2 ) , 2 , '0' )) C_K_RECORD /*Bug33437598 - added control_total11*/
FROM    ap_income_tax_regions
        WHERE   num_of_payees > 0
--Q_nec_select
select  rownum C_rownum,
			vendor_name,
			tax_reporting_name,
			payee_name_control,
			vendor_line,
			vendor_city,
			vendor_state,
			vendor_zip,
			error_text,
			misc1,
			misc2,
			misc3,
			misc4,
			misc5,
			misc6,
			misc7,
			misc8,
			misc9,
			misc10,
            misc11, /*Bug33437598*/
			misc13,
			misc14,
			misc15a,
			misc15b,
            nec4,
			foreign_payee_flag,
			tin_type,
			vendor_num,
			region_code, /*Bug33437598 - uncommented*/
			vendor_id,
            EIN,
--AP_APXT7CMT_XMLP_PKG.C_B_RECORDFORMULA(payee_name_control,tin_type,EIN,vendor_id,misc1,misc2,misc3,misc4,misc5,misc6,misc7,misc8,misc10,misc11,misc13,misc14,misc15a,misc15b,foreign_payee_flag,tax_reporting_name,vendor_name,vendor_line,vendor_city,vendor_state,vendor_zip,'',misc9) C_B_RECORD,
/*AP_APXT7CMT_XMLP_PKG.C_B_RECORDFORMULA(payee_name_control,tin_type,EIN,vendor_id,misc7,0,0,nec4,0,0,0,0,0,0,0,0,0,0,foreign_payee_flag,tax_reporting_name,vendor_name,vendor_line,vendor_city,vendor_state,vendor_zip,'',0,'NEC') N_C_B_RECORD - Bug33437598 - commented*/
AP_APXT7CMT_XMLP_PKG.C_B_RECORDFORMULA(payee_name_control,tin_type,EIN,vendor_id,misc7,0,0,nec4,0,0,0,0,0,0,0,0,0,0,foreign_payee_flag,tax_reporting_name,vendor_name,vendor_line,vendor_city,vendor_state,vendor_zip,region_code,0,'NEC') N_C_B_RECORD
			from (SELECT
  pvw.vendor_name vendor_name,
  pvw.tax_reporting_name tax_reporting_name,
  rpad(pvw.name_control, 4) payee_name_control,
  pvw.address_line1
  || ' '
  || pvw.address_line2
  || ' '
  || pvw.address_line3 vendor_line,
  decode(substr(pvw.organization_type_lookup_code, 1, 7), 'FOREIGN', substr(pvw.city, 1, 21)
  || ' '
  || substr(pvw.state, 1, 9)
  || ' '
  || substr(ft.territory_short_name, 1, 10), rpad(substr(pvw.city, 1, 40), 40)) vendor_city,
  rpad(AP_APXT7CMT_XMLP_PKG.C_VENDOR_GEO_STATE_FORMULA(pvw.state),2) vendor_state,
  rpad(substr(replace(replace(pvw.zip, '-', ''), ' ', ''), 1, 9), 9) vendor_zip,
  AP_APXT7CMT_XMLP_PKG.C_ERROR_DUMMYFORMULA_NEC(decode(pvw.address_line1, '', 'No Address Line 1. ')
  || decode(substr(pvw.organization_type_lookup_code, 1, 7), 'FOREIGN', decode(pvw.country, '', 'No country. '), nvl ( decode ( length ( replace ( replace ( PII.income_tax_id , '-' , '' ) , ' ' , '' ) ) , 0 , '' , 9 , '' , 'TIN not 9 digits. ' ) , decode ( ltrim ( translate (PII.income_tax_id , '1234567890- ' , ' ' ) ) , '' , '' , 'TIN contains non-numeric digit(s). ' ) )
  || decode(pvw.city, '', 'No city. ')
  || decode(nvl(pvw.province, pvw.state), '', 'No state. ')
  || decode(replace(replace(pvw.zip, '-', ''), ' ', ''), '', 'No postal code. ')), pvw.vendor_name) error_text,
  sum(TD.misc1) misc1,
  sum(TD.misc2) misc2,
  sum(TD.misc3) misc3,
  sum(TD.misc4) misc4,
  sum(TD.misc5) misc5,
  sum(TD.misc6) misc6,
  sum(TD.misc7 + TD.misc15aT + TD.misc15b) misc7,
  sum(TD.misc8) misc8,
  sum(TD.misc9) misc9,
  sum(TD.misc10) misc10,
  sum(TD.misc11) misc11, /*Bug33437598*/
  sum(TD.misc13) misc13,
  sum(TD.misc14) misc14,
  sum(TD.misc15aT + TD.misc15aNT) misc15a,
  sum(TD.misc15aT + TD.misc15b) misc15b,
  sum(TD.nec4) nec4,
  decode(substr(pvw.organization_type_lookup_code, 1, 7), 'FOREIGN', '1', ' ') foreign_payee_flag,
  decode(replace(pvw.organization_type_lookup_code, 'FOREIGN '), 'CORPORATION', '1', 'INDIVIDUAL', '2', ' ') tin_type,
  decode(replace(replace(PII.income_tax_id, '-', ''), ' ', ''), '000000000', '', replace(replace(PII.income_tax_id, '-', ''), ' ', '')) EIN,
  pvw.segment1 vendor_num,
  lpad(substr(TD.region_code, 1, 2), 2, '0') region_code, /*Bug33437598 - uncommented*/
  pvw.vendor_id --3124375
FROM ap_1099_tape_data_all TD,
  fnd_territories_vl ft,
  POZ_SUPPLIERS_PII PII,
  (SELECT P.vendor_id VENDOR_ID,
    tca_party.party_name VENDOR_NAME,
    P.tax_reporting_name TAX_REPORTING_NAME,
    p.organization_type_lookup_code ORGANIZATION_TYPE_LOOKUP_CODE,
	pvs.vendor_site_id VENDOR_SITE_ID,
    pvs.province PROVINCE,
    pvs.address_line1 ADDRESS_LINE1,
    pvs.address_line2 ADDRESS_LINE2,
    pvs.address_line3 ADDRESS_LINE3,
    pvs.state STATE,
    pvs.city CITY,
    pvs.zip ZIP,
    pvs.COUNTRY COUNTRY,
    p.segment1 SEGMENT1,
    p.name_control NAME_CONTROL
  FROM poz_suppliers P,
    HZ_PARTIES tca_party,
    poz_supplier_sites_v pvs
  WHERE tca_party.party_id                     = P.party_id
  AND pvs.vendor_id                            = P.vendor_id
    AND EXISTS(SELECT 1 FROM POZ_SITE_ASSIGNMENTS_ALL_M PVSA WHERE PVS.VENDOR_SITE_ID = PVSA.VENDOR_SITE_ID AND PVSA.BU_ID = :P_BUSINESS_UNIT)
  AND nvl(p.vendor_type_lookup_code, 'DUMMY') <> 'EMPLOYEE'
    /*Bug 9247826*/
  AND (NVL(pvs.tax_reporting_site_flag,'N') = 'Y'
  OR (pvs.vendor_site_code                  =
    (select min(vendor_site_code)
    from poz_supplier_sites_v pvs2
    where pvs2.vendor_id                   = pvs.vendor_id
    and nvl(inactive_date, sysdate                  + 9000) =
      (select max(decode(inactive_date, '', sysdate + 9000, inactive_date))
      from poz_supplier_sites_v pvs3
      where pvs3.vendor_id = pvs.vendor_id
      )
    )
  AND not exists
    (SELECT 'A tax reporting site exists for this vendor'
    FROM poz_supplier_sites_v pvs4
    WHERE NVL(pvs4.tax_reporting_site_flag,'N') = 'Y'
    AND pvs4.vendor_id                          = pvs.vendor_id
    )))
	ORDER BY VENDOR_SITE_ID
  ) pvw
  /*Bug 8768541 :added the inline view for emp address from HR*/
WHERE TD.vendor_id = pvw.vendor_id
AND     pvw.vendor_id = PII.vendor_id (+)
AND     TD.org_id = :P_BUSINESS_UNIT
AND pvw.vendor_id IN
  (SELECT X.vendor_id
  FROM ap_1099_tape_data_all X
  GROUP BY vendor_id
  HAVING sum(nvl(misc1, 0)) + sum(nvl(misc3, 0)) + sum(nvl(misc6, 0)) + sum(nvl(misc7, 0)) + sum(nvl(misc9, 0)) + sum(nvl(misc10, 0)) + sum(nvl(misc11, 0)) >= :P_FEDERAL_REPORTING_LIMIT /*Bug33437598*/
  OR sum(nvl(misc2, 0))                                                                                                               >= 10
  OR sum(nvl(misc8, 0))                                                                                                               >= 10
  OR sum(nvl(misc15aT, 0)) + sum(nvl(misc15aNT, 0))                                                                                   >= :P_FEDERAL_REPORTING_LIMIT
  OR sum(nvl(misc13, 0))   + sum(nvl(misc14, 0)) + sum(nvl(misc5, 0))                                                                  > 0
  OR sum(nvl(misc15b, 0))                                                                                                              > 0
/*OR sum(nvl(misc4, 0))                                                                                                                > 0*/
  OR sum(nvl(nec4, 0))                                                                                                                 > 0/*Bug33437598 commented misc4 and added nec4*/
  OR sum(nvl(misc7, 0)) +sum(nvl(misc15aT, 0)) +sum(nvl(misc15b, 0))                                                                   >= :P_FEDERAL_REPORTING_LIMIT
  OR sum(nvl(misc11, 0))                                                                                                               >= :P_FEDERAL_REPORTING_LIMIT /*Bug33437598*/
  
   UNION
  
  SELECT Y.vendor_id FROM ap_1099_tape_data_all Y WHERE region_code is not null
  GROUP BY vendor_id
  having sum(nvl(misc7, 0)) +sum(nvl(misc15aT, 0)) +sum(nvl(misc15b, 0)) +sum(nvl(nec4,0)) > 0 /*Bug33437598 - added nec4*/
    )
AND nvl(misc7, 0) + nvl(misc15aT, 0) + nvl(misc15b, 0) +nvl(nec4,0) > 0 /*Bug33437598 - added nec4*/
AND ft.territory_code(+) = pvw.country
AND to_char(:P_START_YEAR_DATE, 'YYYY')>=2020
GROUP BY 
  pvw.vendor_name,
  TD.region_code, /*Bug33437598 - uncommented*/
  pvw.name_control,
  pvw.organization_type_lookup_code,
  PII.income_tax_id,
  pvw.segment1,
  pvw.tax_reporting_name,
  pvw.country,
  ft.territory_short_name,
  pvw.address_line1,
  pvw.address_line2,
  pvw.address_line3,
  pvw.city,
  pvw.province,
  pvw.state,
  pvw.zip,
  pvw.vendor_id
ORDER BY pvw.vendor_id)
ORDER BY rownum
--Q_main_select
select C_rownum,
			vendor_name,
			tax_reporting_name,
			payee_name_control,
			vendor_line,
			vendor_city,
			vendor_state,
			vendor_zip,
			error_text,
			misc1,
			misc2,
			misc3,
			misc4,
			misc5,
			misc6,
			misc7,
			misc8,
			misc9,
			misc10,
            misc11, /*Bug33437598*/
			misc13,
			misc14,
			misc15a,
			misc15b,
			nec4,
			foreign_payee_flag,
			tin_type,
			vendor_num,
			region_code,
			vendor_id,
            EIN,
AP_APXT7CMT_XMLP_PKG.C_B_RECORDFORMULA(payee_name_control,tin_type,EIN,vendor_id,misc1,misc2,misc3,misc4,misc5,misc6,misc7,misc8,misc10,misc11,misc13,misc14,misc15a,misc15b,foreign_payee_flag,tax_reporting_name,vendor_name,vendor_line,vendor_city,vendor_state,vendor_zip,region_code,misc9,'MISC') C_B_RECORD /*Bug33437598 - added misc11*/
			from (SELECT rownum C_rownum,
  pvw.vendor_name vendor_name,
  pvw.tax_reporting_name tax_reporting_name,
  rpad(pvw.name_control, 4) payee_name_control,
  pvw.address_line1
  || ' '
  || pvw.address_line2
  || ' '
  || pvw.address_line3 vendor_line,
  decode(substr(pvw.organization_type_lookup_code, 1, 7), 'FOREIGN', substr(pvw.city, 1, 21)
  || ' '
  || substr(pvw.state, 1, 9)
  || ' '
  || substr(ft.territory_short_name, 1, 10), rpad(substr(pvw.city, 1, 40), 40)) vendor_city,
  rpad(AP_APXT7CMT_XMLP_PKG.C_VENDOR_GEO_STATE_FORMULA(pvw.state),2) vendor_state,
  rpad(substr(replace(replace(pvw.zip, '-', ''), ' ', ''), 1, 9), 9) vendor_zip,
  AP_APXT7CMT_XMLP_PKG.C_ERROR_DUMMYFORMULA(decode(pvw.address_line1, '', 'No Address Line 1. ')
  || decode(substr(pvw.organization_type_lookup_code, 1, 7), 'FOREIGN', decode(pvw.country, '', 'No country. '), nvl ( decode ( length ( replace ( replace ( PII.income_tax_id , '-' , '' ) , ' ' , '' ) ) , 0 , '' , 9 , '' , 'TIN not 9 digits. ' ) , decode ( ltrim ( translate (PII.income_tax_id , '1234567890- ' , ' ' ) ) , '' , '' , 'TIN contains non-numeric digit(s). ' ) )
  || decode(pvw.city, '', 'No city. ')
  || decode(nvl(pvw.province, pvw.state), '', 'No state. ')
  || decode(replace(replace(pvw.zip, '-', ''), ' ', ''), '', 'No postal code. ')), pvw.vendor_name) error_text,
  sum(TD.misc1) misc1,
  sum(TD.misc2) misc2,
  sum(TD.misc3) misc3,
  sum(TD.misc4) misc4,
  sum(TD.misc5) misc5,
  sum(TD.misc6) misc6,
  sum(TD.misc7 + TD.misc15aT + TD.misc15b) misc7,
  sum(TD.misc8) misc8,
  sum(TD.misc9) misc9,
  sum(TD.misc10) misc10,
  sum(TD.misc11) misc11, /*Bug33437598*/
  sum(TD.misc13) misc13,
  sum(TD.misc14) misc14,
  sum(TD.misc15aT + TD.misc15aNT) misc15a,
  sum(TD.misc15aT + TD.misc15b) misc15b,
  sum(TD.nec4) nec4,
  decode(substr(pvw.organization_type_lookup_code, 1, 7), 'FOREIGN', '1', ' ') foreign_payee_flag,
  decode(replace(pvw.organization_type_lookup_code, 'FOREIGN '), 'CORPORATION', '1', 'INDIVIDUAL', '2', ' ') tin_type,
  decode(replace(replace(PII.income_tax_id, '-', ''), ' ', ''), '000000000', '', replace(replace(PII.income_tax_id, '-', ''), ' ', '')) EIN,
  pvw.segment1 vendor_num,
  lpad(substr(TD.region_code, 1, 2), 2, '0') region_code,
  pvw.vendor_id, --3124375
 -- Added changes for 2020
(CASE 
	WHEN to_char(:P_START_YEAR_DATE, 'YYYY')<2020 THEN
		AP_APXT7CMT_XMLP_PKG.c_totalformula(sum ( nvl(misc1,0) ), sum ( nvl(misc2,0) ), sum ( nvl(misc3,0) ), sum ( nvl(misc4,0) ), sum ( nvl(misc5,0) ), sum ( nvl(misc6,0) ), sum ( nvl(misc7,0) ) , sum ( nvl(misc8,0) ), sum ( nvl(misc9,0) ), sum ( nvl(misc10,0) ), sum ( nvl(misc11,0) ), sum ( nvl(misc13,0) ), sum ( nvl(misc14,0) ),sum ( nvl(misc15aT,0) ),sum ( nvl(misc15aNT,0) ), sum ( nvl(misc15b,0) )) /*Bug33437598 - added misc11*/ 
	ELSE
		AP_APXT7CMT_XMLP_PKG.c_totalformula(sum ( nvl(misc1,0) ), sum ( nvl(misc2,0) ), sum ( nvl(misc3,0) ), sum ( nvl(misc4,0) ), sum ( nvl(misc5,0) ), sum ( nvl(misc6,0) ),  0 , sum ( nvl(misc8,0) ), sum ( nvl(misc9,0) ), sum ( nvl(misc10,0) ), sum ( nvl(misc11,0) ), sum ( nvl(misc13,0) ), sum ( nvl(misc14,0) ), sum ( nvl(misc15aT,0) ), sum ( nvl(misc15aNT,0) ), sum ( nvl(misc15b,0) )) /*Bug33437598 - added misc11*/ 
END)  C_total
FROM ap_1099_tape_data_all TD,
  fnd_territories_vl ft,
  POZ_SUPPLIERS_PII PII,
  (SELECT P.vendor_id VENDOR_ID,
    tca_party.party_name VENDOR_NAME,
    P.tax_reporting_name TAX_REPORTING_NAME,
    p.organization_type_lookup_code ORGANIZATION_TYPE_LOOKUP_CODE,
	pvs.vendor_site_id VENDOR_SITE_ID,
    pvs.province PROVINCE,
    pvs.address_line1 ADDRESS_LINE1,
    pvs.address_line2 ADDRESS_LINE2,
    pvs.address_line3 ADDRESS_LINE3,
    pvs.state STATE,
    pvs.city CITY,
    pvs.zip ZIP,
    pvs.COUNTRY COUNTRY,
    p.segment1 SEGMENT1,
    p.name_control NAME_CONTROL
  FROM poz_suppliers P,
    HZ_PARTIES tca_party,
    poz_supplier_sites_v pvs
  WHERE tca_party.party_id                     = P.party_id
  AND pvs.vendor_id                            = P.vendor_id
    AND EXISTS(SELECT 1 FROM POZ_SITE_ASSIGNMENTS_ALL_M PVSA WHERE PVS.VENDOR_SITE_ID = PVSA.VENDOR_SITE_ID AND PVSA.BU_ID = :P_BUSINESS_UNIT)
  AND nvl(p.vendor_type_lookup_code, 'DUMMY') <> 'EMPLOYEE'
    /*Bug 9247826*/
  AND (NVL(pvs.tax_reporting_site_flag,'N') = 'Y'
  OR (pvs.vendor_site_code                  =
    (select min(vendor_site_code)
    from poz_supplier_sites_v pvs2
    where pvs2.vendor_id                   = pvs.vendor_id
    and nvl(inactive_date, sysdate                  + 9000) =
      (select max(decode(inactive_date, '', sysdate + 9000, inactive_date))
      from poz_supplier_sites_v pvs3
      where pvs3.vendor_id = pvs.vendor_id
      )
    )
  AND not exists
    (SELECT 'A tax reporting site exists for this vendor'
    FROM poz_supplier_sites_v pvs4
    WHERE NVL(pvs4.tax_reporting_site_flag,'N') = 'Y'
    AND pvs4.vendor_id                          = pvs.vendor_id
    )))
	ORDER BY VENDOR_SITE_ID
  ) pvw
  /*Bug 8768541 :added the inline view for emp address from HR*/
WHERE TD.vendor_id = pvw.vendor_id
AND     pvw.vendor_id = PII.vendor_id (+)
AND     TD.org_id = :P_BUSINESS_UNIT
AND pvw.vendor_id IN
  (SELECT X.vendor_id
  FROM ap_1099_tape_data_all X
  GROUP BY vendor_id
  HAVING sum(nvl(misc1, 0)) + sum(nvl(misc3, 0)) + sum(nvl(misc6, 0)) + sum(nvl(misc7, 0)) + sum(nvl(misc9, 0)) + sum(nvl(misc10, 0)) + sum(nvl(misc11, 0)) >= :P_FEDERAL_REPORTING_LIMIT /*Bug33437598 - added MISC11*/
  OR sum(nvl(misc2, 0))                                                                                                               >= 10
  OR sum(nvl(misc8, 0))                                                                                                               >= 10
  OR sum(nvl(misc15aT, 0)) + sum(nvl(misc15aNT, 0))                                                                                   >= :P_FEDERAL_REPORTING_LIMIT
  OR sum(nvl(misc13, 0))   + sum(nvl(misc14, 0)) + sum(nvl(misc5, 0))                                                                  > 0
  OR sum(nvl(misc15b, 0))                                                                                                              > 0
  OR sum(nvl(misc4, 0))                                                                                                                > 0
  OR sum(nvl(misc11, 0))                                                                                                              >= :P_FEDERAL_REPORTING_LIMIT /*Bug33437598*/
  
  UNION
  
  SELECT Y.vendor_id FROM ap_1099_tape_data_all Y WHERE region_code is not null
  )
AND 
((CASE  WHEN to_char(:P_START_YEAR_DATE, 'YYYY')<2020 THEN
		AP_APXT7CMT_XMLP_PKG.c_totalformula ( nvl(misc1,0) , nvl(misc2,0) ,  nvl(misc3,0) ,  nvl(misc4,0) ,  nvl(misc5,0)  , nvl(misc6,0) ,  nvl(misc7,0)  , nvl(misc8,0) , nvl(misc9,0) , nvl(misc10,0) , nvl(misc11,0) , nvl(misc13,0) ,  nvl(misc14,0) ,nvl(misc15aT,0) , nvl(misc15aNT,0) , nvl(misc15b,0) ) /*Bug33437598 - added misc11*/
ELSE
	 AP_APXT7CMT_XMLP_PKG.c_totalformula( nvl(misc1,0) ,  nvl(misc2,0) ,  nvl(misc3,0) ,  nvl(misc4,0) ,  nvl(misc5,0) ,  nvl(misc6,0) ,  0 ,  nvl(misc8,0) ,  nvl(misc9,0) , nvl(misc10,0) ,  nvl(misc11,0) , nvl(misc13,0) ,  nvl(misc14,0) , nvl(misc15aT,0) ,  nvl(misc15aNT,0) , nvl(misc15b,0) ) /*Bug33437598 - added misc11*/
END)   > 0 OR to_char(:P_START_YEAR_DATE, 'YYYY')<2020)
AND ft.territory_code(+) = pvw.country
GROUP BY rownum,
  pvw.vendor_name,
  TD.region_code,
  pvw.name_control,
  pvw.organization_type_lookup_code,
  PII.income_tax_id,
  pvw.segment1,
  pvw.tax_reporting_name,
  pvw.country,
  ft.territory_short_name,
  pvw.address_line1,
  pvw.address_line2,
  pvw.address_line3,
  pvw.city,
  pvw.province,
  pvw.state,
  pvw.zip,
  pvw.vendor_id
ORDER BY rownum)
ORDER BY rownum
==================================================================================================================================================
-----------------------------------------U.S. 1099 Forms - Comma Delimited Format Data Mode-------------------------------------------------------------
--Q_main_select
SELECT pvw.vendor_name vendor_name,
  pvw.tax_reporting_name tax_reporting_name,
  TD.vendor_id vendor_id,
  pvw.address_line1
  ||' '
  ||pvw.address_line2
  ||' '
  ||pvw.address_line3 vendor_line,
  pvw.city vendor_city,
  pvw.state vendor_state,
  pvw.zip vendor_zip,
  decode(pvw.address_line1,'','No Address Line 1. ')
  || decode(substr(pvw.organization_type_lookup_code,1,7), 'FOREIGN', decode(pvw.country,'','No country. '), nvl(decode(length(replace(replace(PII.income_tax_id, '-',''), ' ','')),0,'',9,'','TIN not 9 digits. '), decode(ltrim(translate(PII.income_tax_id,'1234567890- ',' ')), '','','TIN contains non-numeric digit(s). '))
  || decode(pvw.city,'','No city. ')
  || decode(nvl(pvw.province,pvw.state),'','No state. ')
  || decode(replace(replace(pvw.zip,'-',''),' ',''), '','No postal code. ')) current_error_text,
  decode(replace(replace(PII.income_tax_id,'-',''),' ',''),'000000000','',PII.income_tax_id) num_1099,
  sum(misc1) misc1,
  sum(misc2) misc2,
  sum(misc3) misc3,
  sum(misc4) misc4,
  sum(misc5) misc5,
  sum(misc6) misc6,
  sum(misc7) + sum(misc15aT) + sum(misc15b) misc7,
  sum(misc8) misc8,
  sum(misc9) misc9,
  sum(misc10) misc10,
  sum(misc11) misc11,  /*Added for Bug#32723706*/
  sum(misc13) misc13,
  sum(misc14) misc14,
  sum(misc7)+sum(misc9) misc7_9,
  decode(sum(misc9),0,'', to_char(sum(misc9),'999999999D00')
  ||'EPP') epp_payment,
  sum(misc15aNT)+sum(misc15aT) misc15a,
  sum(misc15b)  + sum(misc15aT) misc15b,
  AP_APXT7C99_XMLP_PKG.c_vendor_city_state_zipformula(pvw.city, pvw.state, pvw.zip) C_VENDOR_CITY_STATE_ZIP,
  AP_APXT7C99_XMLP_PKG.c_error_dummyformula(decode ( pvw.address_line1 , '' , 'No Address Line 1. ' )
  || decode ( substr ( pvw.organization_type_lookup_code , 1 , 7 ) , 'FOREIGN' , decode ( pvw.country , '' , 'No country. ' ) , nvl ( decode ( length ( replace ( replace (PII.income_tax_id, '-', '' ) , ' ' , '' ) ) , 0 , '' , 9 , '' , 'TIN not 9 digits. ' ) , decode ( ltrim ( translate (PII.income_tax_id, '1234567890- ' , ' ' ) ) , '' , '' , 'TIN contains non-numeric digit(s). ' ) )
  || decode ( pvw.city , '' , 'No city. ' )
  || decode ( nvl ( pvw.province , pvw.state ) , '' , 'No state. ' )
  || decode ( replace ( replace ( pvw.zip , '-' , '' ) , ' ' , '' ) , '' , 'No postal code. ' ) ), pvw.vendor_name) C_error_dummy,
  AP_APXT7C99_XMLP_PKG.cf_negative_miscformula(sum ( misc2 ), sum ( misc3 ), sum ( misc4 ), sum ( misc5 ), sum ( misc6 ), sum ( misc7 ) + sum ( misc15aT ) + sum ( misc15b ), sum ( misc8 ), sum ( misc9 ), sum ( misc13 ), sum ( misc14 ), sum ( misc15aNT ) + sum ( misc15aT ), sum ( misc15b ) + sum ( misc15aT ), sum ( misc10 ), sum( misc11 ), decode ( pvw.address_line1 , '' , 'No Address Line 1. ' ) /*Added misc11 for Bug#32723706*/
  || decode ( substr ( pvw.organization_type_lookup_code , 1 , 7 ) , 'FOREIGN' , decode ( pvw.country , '' , 'No country. ' ) , nvl ( decode ( length ( replace ( replace ( PII.income_tax_id , '-' , '' ) , ' ' , '' ) ) , 0 , '' , 9 , '' , 'TIN not 9 digits. ' ) , decode ( ltrim ( translate (PII.income_tax_id , '1234567890- ' , ' ' ) ) , '' , '' , 'TIN contains non-numeric digit(s). ' ) )
  || decode ( pvw.city , '' , 'No city. ' )
  || decode ( nvl ( pvw.province , pvw.state ) , '' , 'No state. ' )
  || decode ( replace ( replace ( pvw.zip , '-' , '' ) , ' ' , '' ) , '' , 'No postal code. ' ) ), pvw.vendor_name) CF_negative_misc,
  AP_APXT7C99_XMLP_PKG.c_totalformula(sum ( misc1 ), sum ( misc2 ), sum ( misc3 ), sum ( misc5 ), sum ( misc6 ), sum ( misc7 ) + sum ( misc15aT ) + sum ( misc15b ), sum ( misc8 ), sum ( misc9 ), sum ( misc10 ), sum ( misc11 ), sum ( misc13 ), sum ( misc14 )) C_total, /*Added misc11 for Bug#32723706*/
  AP_APXT7C99_XMLP_PKG.f_commaformula(pvw.tax_reporting_name, decode ( replace ( replace (PII.income_tax_id , '-' , '' ) , ' ' , '' ) , '000000000' , '' , PII.income_tax_id ), pvw.address_line1
  || ' '
  || pvw.address_line2
  || ' '
  || pvw.address_line3, pvw.city, pvw.state, pvw.zip, sum ( misc1 ), sum ( misc2 ), sum ( misc3 ), sum ( misc4 ), sum ( misc5 ), sum ( misc6 ), sum ( misc7 ) + sum ( misc15aT ) + sum ( misc15b ), sum ( misc8 ), sum ( misc9 ), sum ( misc10 ), sum ( misc11 ), sum ( misc13 ), sum ( misc14 ), sum ( misc15aNT ) + sum ( misc15aT ), sum ( misc15b ) + sum ( misc15aT ), pvw.vendor_name, sum(nec4)) CF_COMMA /*Bug 30920647*/ /*Added misc11 for Bug#32723706*/
FROM ap_1099_tape_data_All TD,
  POZ_SUPPLIERS_PII PII,
  (SELECT P.vendor_id VENDOR_ID,
    tca_party.party_name VENDOR_NAME,
    P.tax_reporting_name TAX_REPORTING_NAME,
    p.organization_type_lookup_code ORGANIZATION_TYPE_LOOKUP_CODE,
    NULL NATIONAL_IDENTIFIER,
    pvs.province PROVINCE,
    pvs.address_line1 ADDRESS_LINE1,
    pvs.address_line2 ADDRESS_LINE2,
    pvs.address_line3 ADDRESS_LINE3,
    pvs.state STATE,
    pvs.city CITY,
    pvs.zip ZIP,
    pvs.COUNTRY COUNTRY,
    p.segment1 SEGMENT1,
    p.name_control NAME_CONTROL
  FROM poz_suppliers P,
    HZ_PARTIES tca_party,
    poz_supplier_sites_v pvs
  WHERE tca_party.party_id                     = P.party_id
  AND EXISTS(SELECT 1 FROM POZ_SITE_ASSIGNMENTS_ALL_M PVSA WHERE PVS.VENDOR_SITE_ID = PVSA.VENDOR_SITE_ID AND PVSA.BU_ID = :P_BUSINESS_UNIT)
  AND pvs.vendor_id                            = P.vendor_id
  AND nvl(p.vendor_type_lookup_code, 'DUMMY') <> 'EMPLOYEE'
    /*Bug 9247826*/
  AND (NVL(pvs.tax_reporting_site_flag,'N') = 'Y'
  OR (pvs.vendor_site_code                  =
    (select min(vendor_site_code)
    from poz_supplier_sites_v pvs2
    where pvs2.vendor_id                   = pvs.vendor_id
    and nvl(inactive_date, sysdate                  + 9000) =
      (select max(decode(inactive_date, '', sysdate + 9000, inactive_date))
      from poz_supplier_sites_v pvs3
      where pvs3.vendor_id = pvs.vendor_id
      )
    )
  AND not exists
    (SELECT 'A tax reporting site exists for this vendor'
    FROM poz_supplier_sites_v pvs4

    WHERE NVL(pvs4.tax_reporting_site_flag,'N') = 'Y'
    AND pvs4.vendor_id                          = pvs.vendor_id
    )))
  ) pvw
WHERE pvw.vendor_id = TD.vendor_id
AND pvw.vendor_id   = PII.vendor_id (+)
AND TD.org_id       = :P_BUSINESS_UNIT
GROUP BY pvw.vendor_name,
  TD.vendor_id,
  PII.income_tax_id,
  pvw.tax_reporting_name,
  pvw.organization_type_lookup_code,
  pvw.country,
  pvw.address_line1,
  pvw.address_line2,
  pvw.address_line3,
  pvw.city,
  pvw.province,
  pvw.state,
  pvw.zip
ORDER BY (decode(:P_ORDER_BY,'STATE CODE',vendor_state,'REPORTING NAME',nvl(tax_reporting_name,vendor_name),vendor_state))
========================================================================================================================================
------------------------------------------------U.S. 1099 Invoice Exceptions Data Model------------------------------------------------------------------
--Q_CONV_RATE_EXCEP
SELECT  distinct P.vendor_id vendor_id_1,
                                                  P.vendor_name vendor_name_1,P.segment1 vendor_num_1,
				                  IP.invoice_id invoice_id_1,
                                                  I.invoice_num invoice_num_1,
                                                  I.invoice_amount invoice_amount_1,
                                                  AC.check_number payment_num_1,
				                  TO_CHAR(IP.accounting_date,'YYYY-MM-DD')  payment_date_1,
                                                  asp.base_currency_code ledger_currency_1,
                                                  SUM(nvl(IP.payment_base_amount,IP.amount)) payment_base_amount_1
                                                  
				  FROM ap_income_tax_regions ITR,
				  ap_reporting_entity_lines_all REL,
				  poz_suppliers_v P,
				  ce_bank_accounts ABA,
				  ce_bank_acct_uses_all BAU,
				  ap_checks_all AC,
				  ap_invoices_all I,
				  gl_code_combinations CC,
				  ap_invoice_distributions_all ID,
				  ap_invoice_payments_all IP,
				  (SELECT DISTINCT gdr.from_currency,
				    gdr.conversion_rate,
				    gdr.conversion_date
				  FROM gl_daily_rates gdr
				  WHERE gdr.conversion_date BETWEEN :p_start_date and :p_end_date
				  AND gdr.conversion_type = :p_conversion_rate_type
				  AND gdr.to_currency     = 'USD'
				  ) GR,
				  ap_system_parameters_all asp
				WHERE ID.income_tax_region = ITR.region_short_name (+)
				AND P.vendor_id            =I.vendor_id
				AND (AC.void_date         IS NULL
				OR NOT AC.void_date BETWEEN :p_start_date and :p_end_date)
				AND I.invoice_id           =IP.invoice_id
				AND I.invoice_id           =ID.invoice_id
				and ID.posted_flag = 'Y' /* Bug 32160815*/
				AND  AC.vendor_id = I.vendor_id /* Bug 32160815*/
				AND I.set_of_books_id  = :p_set_of_books_id
				AND IP.accounting_date BETWEEN :p_start_date and :p_end_date
				AND gr.from_currency(+)           = asp.base_currency_code
				AND gr.conversion_date(+)         = ip.accounting_date
				AND asp.org_id                    = ip.org_id
				AND ac.org_id = :P_BUSINESS_UNIT
				AND IP.payment_currency_code <> 'USD'
                                AND asp.base_currency_code <> 'USD'
				AND GR.conversion_rate is null
				AND ID.type_1099                 IS NOT NULL
				AND AC.ce_bank_acct_use_id     = BAU.bank_acct_use_id
				AND BAU.bank_account_id           = ABA.bank_account_id
				AND IP.check_id                            = AC.check_id
				AND REL.tax_entity_id                  = :p_rep_entity_id
				AND decode(:P_query_driver, 'INV', ID.dist_code_combination_id,ABA.asset_code_combination_id) = CC.code_combination_id
				AND REL.balancing_segment_value = decode(:P_balancing_segment_column,
						      'SEGMENT1',cc.segment1, 'SEGMENT2',cc.segment2,
						      'SEGMENT3',cc.segment3,'SEGMENT4',cc.segment4,
						      'SEGMENT5',cc.segment5,'SEGMENT6',cc.segment6,
						      'SEGMENT7',cc.segment7,'SEGMENT8',cc.segment8,
						      'SEGMENT9',cc.segment9,'SEGMENT10',cc.segment10,
						      'SEGMENT11',cc.segment11,'SEGMENT12',cc.segment12,
						      'SEGMENT13',cc.segment13,'SEGMENT14',cc.segment14,
						      'SEGMENT15',cc.segment15,'SEGMENT16',cc.segment16,
						      'SEGMENT17',cc.segment17,'SEGMENT18',cc.segment18,
						      'SEGMENT19',cc.segment19,'SEGMENT20',cc.segment20,
						      'SEGMENT21',cc.segment21,'SEGMENT22',cc.segment22,
						      'SEGMENT23',cc.segment23,'SEGMENT24',cc.segment24,
						      'SEGMENT25',cc.segment25,'SEGMENT26',cc.segment26,
						      'SEGMENT27',cc.segment27,'SEGMENT28',cc.segment28,
						      'SEGMENT29',cc.segment29,'SEGMENT30',cc.segment30,null)
                            GROUP BY P.vendor_id,
                                                  P.vendor_name ,P.segment1,
				                  IP.invoice_id ,
                                                  I.invoice_num ,
                                                  I.invoice_amount ,
                                                  AC.check_number ,
				                  TO_CHAR(IP.accounting_date,'YYYY-MM-DD') ,
                                                  asp.base_currency_code
                            ORDER BY payment_date_1,vendor_name_1
--Q_CONV_RATE_EXCEP
SELECT  distinct P.vendor_id vendor_id_1,
                                                  P.vendor_name vendor_name_1,P.segment1 vendor_num_1,
				                  IP.invoice_id invoice_id_1,
                                                  I.invoice_num invoice_num_1,
                                                  I.invoice_amount invoice_amount_1,
                                                  AC.check_number payment_num_1,
				                  TO_CHAR(IP.accounting_date,'YYYY-MM-DD')  payment_date_1,
                                                  asp.base_currency_code ledger_currency_1,
                                                  SUM(nvl(IP.payment_base_amount,IP.amount)) payment_base_amount_1
                                                  
				  FROM ap_income_tax_regions ITR,
				  ap_reporting_entity_lines_all REL,
				  poz_suppliers_v P,
				  ce_bank_accounts ABA,
				  ce_bank_acct_uses_all BAU,
				  ap_checks_all AC,
				  ap_invoices_all I,
				  gl_code_combinations CC,
				  ap_invoice_distributions_all ID,
				  ap_invoice_payments_all IP,
				  (SELECT DISTINCT gdr.from_currency,
				    gdr.conversion_rate,
				    gdr.conversion_date
				  FROM gl_daily_rates gdr
				  WHERE gdr.conversion_date BETWEEN :p_start_date and :p_end_date
				  AND gdr.conversion_type = :p_conversion_rate_type
				  AND gdr.to_currency     = 'USD'
				  ) GR,
				  ap_system_parameters_all asp
				WHERE ID.income_tax_region = ITR.region_short_name (+)
				AND P.vendor_id            =I.vendor_id
				AND (AC.void_date         IS NULL
				OR NOT AC.void_date BETWEEN :p_start_date and :p_end_date)
				AND I.invoice_id           =IP.invoice_id
				AND I.invoice_id           =ID.invoice_id
				and ID.posted_flag = 'Y' /* Bug 32160815*/
				AND  AC.vendor_id = I.vendor_id /* Bug 32160815*/
				AND I.set_of_books_id  = :p_set_of_books_id
				AND IP.accounting_date BETWEEN :p_start_date and :p_end_date
				AND gr.from_currency(+)           = asp.base_currency_code
				AND gr.conversion_date(+)         = ip.accounting_date
				AND asp.org_id                    = ip.org_id
				AND ac.org_id = :P_BUSINESS_UNIT
				AND IP.payment_currency_code <> 'USD'
                                AND asp.base_currency_code <> 'USD'
				AND GR.conversion_rate is null
				AND ID.type_1099                 IS NOT NULL
				AND AC.ce_bank_acct_use_id     = BAU.bank_acct_use_id
				AND BAU.bank_account_id           = ABA.bank_account_id
				AND IP.check_id                            = AC.check_id
				AND REL.tax_entity_id                  = :p_rep_entity_id
				AND decode(:P_query_driver, 'INV', ID.dist_code_combination_id,ABA.asset_code_combination_id) = CC.code_combination_id
				AND REL.balancing_segment_value = decode(:P_balancing_segment_column,
						      'SEGMENT1',cc.segment1, 'SEGMENT2',cc.segment2,
						      'SEGMENT3',cc.segment3,'SEGMENT4',cc.segment4,
						      'SEGMENT5',cc.segment5,'SEGMENT6',cc.segment6,
						      'SEGMENT7',cc.segment7,'SEGMENT8',cc.segment8,
						      'SEGMENT9',cc.segment9,'SEGMENT10',cc.segment10,
						      'SEGMENT11',cc.segment11,'SEGMENT12',cc.segment12,
						      'SEGMENT13',cc.segment13,'SEGMENT14',cc.segment14,
						      'SEGMENT15',cc.segment15,'SEGMENT16',cc.segment16,
						      'SEGMENT17',cc.segment17,'SEGMENT18',cc.segment18,
						      'SEGMENT19',cc.segment19,'SEGMENT20',cc.segment20,
						      'SEGMENT21',cc.segment21,'SEGMENT22',cc.segment22,
						      'SEGMENT23',cc.segment23,'SEGMENT24',cc.segment24,
						      'SEGMENT25',cc.segment25,'SEGMENT26',cc.segment26,
						      'SEGMENT27',cc.segment27,'SEGMENT28',cc.segment28,
						      'SEGMENT29',cc.segment29,'SEGMENT30',cc.segment30,null)
                            GROUP BY P.vendor_id,
                                                  P.vendor_name ,P.segment1,
				                  IP.invoice_id ,
                                                  I.invoice_num ,
                                                  I.invoice_amount ,
                                                  AC.check_number ,
				                  TO_CHAR(IP.accounting_date,'YYYY-MM-DD') ,
                                                  asp.base_currency_code
                            ORDER BY payment_date_1,vendor_name_1
--Q_negative
select AI.vendor_id, AID.type_1099 type_2
      from   ap_invoices_all AI,
                 ap_invoice_distributions_all AID
      where   1 = 1  -- bug 29222638
	--	AI.org_id = :P_BUSINESS_UNIT
        --      AND AID.org_id = :P_BUSINESS_UNIT
              AND AI.invoice_id = AID.invoice_id
      and ai.invoice_id in ( select aip.invoice_id
                                      from ap_invoice_payments aip,
                                              ap_checks ac
                                      where   ac.check_id = aip.check_id
				      and     ac.org_id = :P_BUSINESS_UNIT  -- bug 29222638
                                      and     AIP.accounting_date between :p_start_date and :p_end_date /*rchandan for fusion*/
                                       --to_date(:p_start_date,'DD-MON-YYYY') and to_date(:p_end_date,'DD-MON-YYYY')
                                      and     nvl(ac.void_date,:p_end_date + 1) not between /*rchandan for fusion*/
                                      --to_date(:p_start_date,'DD-MON-YYYY') and to_date(:p_end_date,'DD-MON-YYYY')
                                      :p_start_date and :p_end_date /*rchandan for fusion*/
								)
      and  TYPE_1099 is not null
      and  TYPE_1099  <>  'MISC4'
      and  AID.POSTED_FLAG = 'Y'
      and   AID.line_type_lookup_code  <>  'AWT'
      group by AI.vendor_id, AID.TYPE_1099
      having sum(AID.amount)< 0
--Q_1099_NEGATIVE_W
SELECT   pv.vendor_name vendor_name4,
                      pv.segment1 segment5,
                      i.invoice_num invoice_num4,
                      TO_CHAR(i.invoice_date,'YYYY-MM-DD') invoice_date4,
                      i.invoice_amount invoice_amount4,
                      id.distribution_line_number distribution_line_number4,
                      id.amount amount4,
                      id.type_1099 type_10993,
                      pv.vendor_id vendor_id3
      FROM    AP_invoice_distributions_all id,
                      AP_Invoices_all i,
                      POZ_SUPPLIERS_V pv,
                      GL_code_combinations gcc,
                      AP_Reporting_Entity_Lines_all rel,                  
				ap_invoice_payments_all ip,
                      ap_checks_all ac,
                      ce_bank_accounts aba,
				ce_bank_acct_uses_all cbau,
				        xla_events xe, /*Bug 32160815*/
			     xla_ae_headers xah,/* Bug 32160815*/
			      xla_ae_lines xal /*Bug 16306895*/ 
              WHERE   1 =1 -- bug 29222638
	--	id.org_id = :P_BUSINESS_UNIT
        --      AND i.org_id = :P_BUSINESS_UNIT
        --      AND ip.org_id = :P_BUSINESS_UNIT
              AND ac.org_id = :P_BUSINESS_UNIT
              AND id.invoice_id = i.invoice_id
              AND     i.vendor_id = pv.vendor_id
			     AND (ac.void_date         IS NULL
				OR NOT ac.void_date BETWEEN :p_start_date and :p_end_date)/* Bug 32160815*/
			  AND  ac.vendor_id = i.vendor_id /* Bug 32160815*/			
and id.posted_flag = 'Y' /* Bug 32160815*/
		and     ac.ce_bank_acct_use_id = cbau.bank_acct_use_id
		and     cbau.bank_account_id = aba.bank_account_id
		AND    nvl(id.reversal_flag , 'N') <> 'Y' --rchandan for bug#9709459
              AND     ip.check_id = ac.check_id   
AND ip.set_of_books_id = id.set_of_books_id /* Bug 32160815 start*/
			  AND id.accounting_event_id = xe.event_id 
			  AND xe.application_id = 200 
			  AND xe.event_id =  xah.event_id 
			  AND xah.application_id = 200 
			  AND xah.ae_header_id =   xal.ae_header_id /* Bug 32160815 end*/
AND     xal.accounting_class_code <>'LIABILITY'
AND     xal.ledger_id = id.set_of_books_id 
AND     xal.application_id = 200
/*Bug 16306895 ended here*/ 	      
		--AND     ac.bank_account_id = aba.bank_account_id                                              
		AND     decode(:P_query_driver, 'INV', nvl(xal.code_combination_id, ID.dist_code_combination_id),                                                                      ABA.asset_code_combination_id) = GCC.code_combination_id
              AND     rel.tax_entity_id = :p_rep_entity_id
              AND     rel.balancing_segment_value = decode(:P_balancing_segment_column,
                      'SEGMENT1',gcc.segment1, 'SEGMENT2',gcc.segment2,
                      'SEGMENT3',gcc.segment3,'SEGMENT4',gcc.segment4,
                      'SEGMENT5',gcc.segment5,'SEGMENT6',gcc.segment6,
                      'SEGMENT7',gcc.segment7,'SEGMENT8',gcc.segment8,
                      'SEGMENT9',gcc.segment9,'SEGMENT10',gcc.segment10,
                      'SEGMENT11',gcc.segment11,'SEGMENT12',gcc.segment12,
                      'SEGMENT13',gcc.segment13,'SEGMENT14',gcc.segment14,
                      'SEGMENT15',gcc.segment15,'SEGMENT16',gcc.segment16,
                      'SEGMENT17',gcc.segment17,'SEGMENT18',gcc.segment18,
                      'SEGMENT19',gcc.segment19,'SEGMENT20',gcc.segment20,
                      'SEGMENT21',gcc.segment21,'SEGMENT22',gcc.segment22,
                      'SEGMENT23',gcc.segment23,'SEGMENT24',gcc.segment24,
                      'SEGMENT25',gcc.segment25,'SEGMENT26',gcc.segment26,
                      'SEGMENT27',gcc.segment27,'SEGMENT28',gcc.segment28,
                      'SEGMENT29',gcc.segment29,'SEGMENT30',gcc.segment30,null)
              AND     ip.invoice_id = i.invoice_id
              AND     ip.accounting_date between :p_start_date and :p_end_date /*rchandan for fusion*/
		 --to_date(:p_start_date,'DD-MON-YYYY') and to_date(:p_end_date,'DD-MON-YYYY')
       and pv.vendor_id=:vendor_id2
       and id.type_1099=:type_4
      GROUP BY pv.vendor_name,
                      pv.segment1,
                      i.invoice_num,
                      i.invoice_date,
                      i.invoice_amount,
                      id.distribution_line_number,
                      id.amount,
                      id.type_1099,
					  id.invoice_line_number,
                      pv.vendor_id
             --ORDER BY  upper(pv.vendor_name), i.invoice_num, i.invoice_date, id.type_1099
             ORDER BY 1, 2, 3, 4, 5, 9, 6, 7, 8
--Q_1099_NEGATIVE
SELECT   pv.vendor_name vendor_name2,
                      pv.segment1 segment3,
                      i.invoice_num invoice_num2,
                      TO_CHAR(i.invoice_date,'YYYY-MM-DD') invoice_date2,
                      i.invoice_amount invoice_amount2,
                      id.distribution_line_number distribution_line_number2,
                      id.amount amount2,
                      id.type_1099 type_1,
                      pv.vendor_id vendor_id1
      FROM    AP_invoice_distributions_all id,
                      AP_Invoices_all i,
                      POZ_SUPPLIERS_V pv,
                      GL_code_combinations gcc,
                      AP_Reporting_Entity_Lines_all rel,                  
				ap_invoice_payments_all ip,
                      ap_checks_all ac,
                      ce_bank_accounts aba,
				ce_bank_acct_uses_all cbau,
				   xla_events xe, /*Bug 32160815*/
			     xla_ae_headers xah,/* Bug 32160815*/
			      xla_ae_lines xal /*Bug 16306895*/ 
              WHERE   1 = 1 -- bug 29222638
	--	id.org_id = :P_BUSINESS_UNIT
        --      AND i.org_id = :P_BUSINESS_UNIT
        --      AND ip.org_id = :P_BUSINESS_UNIT
              AND ac.org_id = :P_BUSINESS_UNIT
              AND id.invoice_id = i.invoice_id
              AND    nvl(id.reversal_flag , 'N') <> 'Y' --rchandan for bug#9709459
              AND     i.vendor_id = pv.vendor_id
			       AND (ac.void_date         IS NULL
				OR NOT ac.void_date BETWEEN :p_start_date and :p_end_date)/* Bug 32160815*/
			  AND  ac.vendor_id = i.vendor_id /* Bug 32160815*/			
and id.posted_flag = 'Y' /* Bug 32160815*/
		and     ac.ce_bank_acct_use_id = cbau.bank_acct_use_id
		and     cbau.bank_account_id = aba.bank_account_id
              AND     ip.check_id = ac.check_id        
 AND ip.set_of_books_id = id.set_of_books_id /* Bug 32160815 start*/
			  AND id.accounting_event_id = xe.event_id 
			  AND xe.application_id = 200 
			  AND xe.event_id =  xah.event_id 
			  AND xah.application_id = 200 
			  AND xah.ae_header_id =   xal.ae_header_id /* Bug 32160815 end*/
AND     xal.accounting_class_code <>'LIABILITY'
AND     xal.ledger_id = id.set_of_books_id 
AND     xal.application_id = 200
/*Bug 16306895 ended here*/ 	      
		--AND     ac.bank_account_id = aba.bank_account_id                                              
		AND       decode(:P_query_driver, 'INV', nvl(xal.code_combination_id, ID.dist_code_combination_id),                                                                             ABA.asset_code_combination_id) = GCC.code_combination_id
              AND     rel.tax_entity_id = :p_rep_entity_id
              AND     rel.balancing_segment_value = decode(:P_balancing_segment_column,
                      'SEGMENT1',gcc.segment1, 'SEGMENT2',gcc.segment2,
                      'SEGMENT3',gcc.segment3,'SEGMENT4',gcc.segment4,
                      'SEGMENT5',gcc.segment5,'SEGMENT6',gcc.segment6,
                      'SEGMENT7',gcc.segment7,'SEGMENT8',gcc.segment8,
                      'SEGMENT9',gcc.segment9,'SEGMENT10',gcc.segment10,
                      'SEGMENT11',gcc.segment11,'SEGMENT12',gcc.segment12,
                      'SEGMENT13',gcc.segment13,'SEGMENT14',gcc.segment14,
                      'SEGMENT15',gcc.segment15,'SEGMENT16',gcc.segment16,
                      'SEGMENT17',gcc.segment17,'SEGMENT18',gcc.segment18,
                      'SEGMENT19',gcc.segment19,'SEGMENT20',gcc.segment20,
                      'SEGMENT21',gcc.segment21,'SEGMENT22',gcc.segment22,
                      'SEGMENT23',gcc.segment23,'SEGMENT24',gcc.segment24,
                      'SEGMENT25',gcc.segment25,'SEGMENT26',gcc.segment26,
                      'SEGMENT27',gcc.segment27,'SEGMENT28',gcc.segment28,
                      'SEGMENT29',gcc.segment29,'SEGMENT30',gcc.segment30,null)
              AND     ip.invoice_id = i.invoice_id
              AND     ip.accounting_date between :p_start_date and :p_end_date /*rchandan for fusion*/
		 --to_date(:p_start_date,'DD-MON-YYYY') and to_date(:p_end_date,'DD-MON-YYYY')
       and pv.vendor_id=:vendor_id
       and id.type_1099=:type_2
      GROUP BY pv.vendor_name,
                      pv.segment1,
                      i.invoice_num,
                      i.invoice_date,
                      i.invoice_amount,
                      id.distribution_line_number,
                      id.amount,
                      id.type_1099,
					  id.invoice_line_number,
                      pv.vendor_id
             --ORDER BY  upper(pv.vendor_name), i.invoice_num, i.invoice_date, id.type_1099
             ORDER BY 1, 2, 3, 4, 5, 9, 6, 7, 8
--Q_Null_Invalid_Tax
SELECT    pv.vendor_name vendor_name1,
                      pv.segment1 segment2,
                      i.invoice_num invoice_num1,
                      TO_CHAR(i.invoice_date,'YYYY-MM-DD') invoice_date1,
                      i.invoice_amount invoice_amount1,
                      id.distribution_line_number distribution_line_number1,
                      id.amount amount1,
                      substr(id.income_tax_region,1,10) SUBSTR_ID_INCOME_TAX_REGION_1_
      FROM    AP_invoice_distributions_all id,
                      AP_Invoices_all i,
                      POZ_SUPPLIERS_V pv,
                      GL_code_combinations gcc,
                      AP_Reporting_Entity_Lines_all rel,                  
				ap_invoice_payments_all ip,
                      ap_checks_all ac,
                      ce_bank_accounts aba,
				ce_bank_acct_uses_all cbau,
				       xla_events xe, /*Bug 32160815*/
			     xla_ae_headers xah,/* Bug 32160815*/
			      xla_ae_lines xal /*Bug 16306895*/ 
              WHERE   1 = 1  -- bug 29222638
	--	id.org_id = :P_BUSINESS_UNIT
        --      AND i.org_id = :P_BUSINESS_UNIT
        --      AND ip.org_id = :P_BUSINESS_UNIT
              AND ac.org_id = :P_BUSINESS_UNIT
              AND    nvl(id.reversal_flag , 'N') <> 'Y' --rchandan for bug#9709459
              AND id.invoice_id = i.invoice_id
              AND     i.vendor_id = pv.vendor_id
			    AND (ac.void_date         IS NULL
				OR NOT ac.void_date BETWEEN :p_start_date and :p_end_date)/* Bug 32160815*/
			  AND  ac.vendor_id = i.vendor_id /* Bug 32160815*/			
and id.posted_flag = 'Y' /* Bug 32160815*/
		and     ac.ce_bank_acct_use_id = cbau.bank_acct_use_id
		and     cbau.bank_account_id = aba.bank_account_id
              AND     pv.federal_reportable_flag = 'Y'          AND     (id.income_tax_region is null
              OR      id.income_tax_region not in (SELECT region_short_name
                                                   FROM   ap_income_tax_regions
                                                   WHERE  sysdate <
                                                         nvl(inactive_date,sysdate+1)
                                                   AND    sysdate >=
                                                          nvl(active_date,sysdate)))
              AND     ip.check_id = ac.check_id             
 AND ip.set_of_books_id = id.set_of_books_id /* Bug 32160815 start*/
			  AND id.accounting_event_id = xe.event_id 
			  AND xe.application_id = 200 
			  AND xe.event_id =  xah.event_id 
			  AND xah.application_id = 200 
			  AND xah.ae_header_id =   xal.ae_header_id /* Bug 32160815 end*/
AND     xal.accounting_class_code <>'LIABILITY'
AND     xal.ledger_id = id.set_of_books_id 
AND     xal.application_id = 200
/*Bug 16306895 ended here*/ 	      
		--AND     ac.bank_account_id = aba.bank_account_id                                              
		AND     decode(:P_query_driver, 'INV', nvl(xal.code_combination_id, ID.dist_code_combination_id),  ABA.asset_code_combination_id) =                                               GCC.code_combination_id
              AND     rel.tax_entity_id = :p_rep_entity_id
              AND     rel.balancing_segment_value =
                      decode(:p_balancing_segment_column,
                      'SEGMENT1',gcc.segment1,'SEGMENT2',gcc.segment2,
                      'SEGMENT3',gcc.segment3,'SEGMENT4',gcc.segment4,
                      'SEGMENT5',gcc.segment5,'SEGMENT6',gcc.segment6,
                      'SEGMENT7',gcc.segment7,'SEGMENT8',gcc.segment8,
                      'SEGMENT9',gcc.segment9,'SEGMENT10',gcc.segment10,
                      'SEGMENT11',gcc.segment11,'SEGMENT12',gcc.segment12,
                      'SEGMENT13',gcc.segment13,'SEGMENT14',gcc.segment14,
                      'SEGMENT15',gcc.segment15,'SEGMENT16',gcc.segment16,
                      'SEGMENT17',gcc.segment17,'SEGMENT18',gcc.segment18,
                      'SEGMENT19',gcc.segment19,'SEGMENT20',gcc.segment20,
                      'SEGMENT21',gcc.segment21,'SEGMENT22',gcc.segment22,
                      'SEGMENT23',gcc.segment23,'SEGMENT24',gcc.segment24,
                      'SEGMENT25',gcc.segment25,'SEGMENT26',gcc.segment26,
                      'SEGMENT27',gcc.segment27,'SEGMENT28',gcc.segment28,
                      'SEGMENT29',gcc.segment29,'SEGMENT30',gcc.segment30,null)
              AND     ip.invoice_id = i.invoice_id
              AND     ip.accounting_date between :p_start_date and :p_end_date /*rchandan for fusion*/
		 --to_date(:p_start_date,'DD-MON-YYYY') and to_date(:p_end_date,'DD-MON-YYYY')
             GROUP BY pv.vendor_name,
                      pv.vendor_name,
                      pv.segment1,
                      i.invoice_num,
                      i.invoice_date,
                      i.invoice_amount,
                      id.distribution_line_number,
                      id.amount,
                      id.income_tax_region,
					  id.invoice_line_number
              --ORDER BY  upper(pv.vendor_name), i.invoice_num, i.invoice_date
              ORDER BY 1, 2, 3, 4, 5, 8, 6, 7
--Q_Non_1099_Tax
SELECT   pv.vendor_name vendor_name3,
                      pv.segment1 segment4,
                      i.invoice_num invoice_num3,
                      TO_CHAR(i.invoice_date,'YYYY-MM-DD') invoice_date3,
                      i.invoice_amount invoice_amount3,
                      id.distribution_line_number distribution_line_number3,
                      id.amount amount3,
                      id.type_1099
      FROM    AP_invoice_distributions_all id,
                      AP_Invoices_all i,
                      POZ_SUPPLIERS_V pv,
                      GL_code_combinations gcc,
                      AP_Reporting_Entity_Lines_all rel,                  
				ap_invoice_payments_all ip,
                      ap_checks_all ac,
                      ce_bank_accounts aba,
				ce_bank_acct_uses_all cbau,
				   xla_events xe, /*Bug 32160815*/
			     xla_ae_headers xah,/* Bug 32160815*/
			      xla_ae_lines xal /*Bug 16306895*/ 
              WHERE   1 = 1 -- bug 29222638
	--	id.org_id = :P_BUSINESS_UNIT
        --      AND i.org_id = :P_BUSINESS_UNIT
        --      AND ip.org_id = :P_BUSINESS_UNIT
              AND ac.org_id = :P_BUSINESS_UNIT
              AND    nvl(id.reversal_flag , 'N') <> 'Y' --rchandan for bug#9709459
              AND id.invoice_id = i.invoice_id
              AND     i.vendor_id = pv.vendor_id
			     AND (ac.void_date         IS NULL
				OR NOT ac.void_date BETWEEN :p_start_date and :p_end_date)/* Bug 32160815*/
			  AND  ac.vendor_id = i.vendor_id /* Bug 32160815*/			
and id.posted_flag = 'Y' /* Bug 32160815*/
		and     ac.ce_bank_acct_use_id = cbau.bank_acct_use_id
		and     cbau.bank_account_id = aba.bank_account_id
              AND   (   nvl(pv.federal_reportable_flag,'N') = 'N'
              AND     id.type_1099 is not null)
              AND     ip.check_id = ac.check_id      
AND ip.set_of_books_id = id.set_of_books_id /* Bug 32160815 start*/
			  AND id.accounting_event_id = xe.event_id 
			  AND xe.application_id = 200 
			  AND xe.event_id =  xah.event_id 
			  AND xah.application_id = 200 
			  AND xah.ae_header_id =   xal.ae_header_id /* Bug 32160815 end*/
AND     xal.accounting_class_code <>'LIABILITY'
AND     xal.ledger_id = id.set_of_books_id 
AND     xal.application_id = 200
/*Bug 16306895 ended here*/ 	      
		--AND     ac.bank_account_id = aba.bank_account_id                                              
		AND     decode(:P_query_driver, 'INV', nvl(xal.code_combination_id, ID.dist_code_combination_id),                                                              ABA.asset_code_combination_id) = GCC.code_combination_id
              AND     rel.tax_entity_id = :p_rep_entity_id
              AND     rel.balancing_segment_value = decode(:P_balancing_segment_column,
                      'SEGMENT1',gcc.segment1, 'SEGMENT2',gcc.segment2,
                      'SEGMENT3',gcc.segment3,'SEGMENT4',gcc.segment4,
                      'SEGMENT5',gcc.segment5,'SEGMENT6',gcc.segment6,
                      'SEGMENT7',gcc.segment7,'SEGMENT8',gcc.segment8,
                      'SEGMENT9',gcc.segment9,'SEGMENT10',gcc.segment10,
                      'SEGMENT11',gcc.segment11,'SEGMENT12',gcc.segment12,
                      'SEGMENT13',gcc.segment13,'SEGMENT14',gcc.segment14,
                      'SEGMENT15',gcc.segment15,'SEGMENT16',gcc.segment16,
                      'SEGMENT17',gcc.segment17,'SEGMENT18',gcc.segment18,
                      'SEGMENT19',gcc.segment19,'SEGMENT20',gcc.segment20,
                      'SEGMENT21',gcc.segment21,'SEGMENT22',gcc.segment22,
                      'SEGMENT23',gcc.segment23,'SEGMENT24',gcc.segment24,
                      'SEGMENT25',gcc.segment25,'SEGMENT26',gcc.segment26,
                      'SEGMENT27',gcc.segment27,'SEGMENT28',gcc.segment28,
                      'SEGMENT29',gcc.segment29,'SEGMENT30',gcc.segment30,null)
              AND     ip.invoice_id = i.invoice_id
              AND     ip.accounting_date between :p_start_date and :p_end_date /*rchandan for fusion*/
		 --to_date(:p_start_date,'DD-MON-YYYY') and to_date(:p_end_date,'DD-MON-YYYY')
             GROUP BY pv.vendor_name,
                      pv.segment1,
                      i.invoice_num,
                      i.invoice_date,
                      i.invoice_amount,
                      id.distribution_line_number,
                      id.amount,
                      id.type_1099,
					  id.invoice_line_number
             --ORDER BY  upper(pv.vendor_name), i.invoice_num, i.invoice_date, id.type_1099
             ORDER BY 1, 2, 3, 4, 5, 6, 7, 8
--Q_1099_No_Tax
SELECT   pv.vendor_name,
                      pv.segment1,
                     i.invoice_num,
                      TO_CHAR(i.invoice_date,'YYYY-MM-DD') invoice_date,
                      i.invoice_amount,
                      id.distribution_line_number,
                      id.amount
      FROM    AP_invoice_distributions_all id,
                      AP_Invoices_all i,
                      POZ_SUPPLIERS_V pv,
                      GL_code_combinations gcc,
                      AP_Reporting_Entity_Lines_all rel,                   
				ap_invoice_payments_all ip,
                      ap_checks_all ac,
                      ce_bank_accounts aba,
				ce_bank_acct_uses_all cbau,
				    xla_events xe, /*Bug 32160815*/
			     xla_ae_headers xah,/* Bug 32160815*/
			      xla_ae_lines xal /*Bug 16306895*/ 
              WHERE   1 = 1  -- bug 29222638
	--	id.org_id = :P_BUSINESS_UNIT
        --      AND i.org_id = :P_BUSINESS_UNIT
        --      AND ip.org_id = :P_BUSINESS_UNIT
               AND ac.org_id = :P_BUSINESS_UNIT
               AND    nvl(id.reversal_flag , 'N') <> 'Y' --rchandan for bug#9709459
	       AND id.invoice_id = i.invoice_id
              AND     i.vendor_id = pv.vendor_id
			    AND (ac.void_date         IS NULL
				OR NOT ac.void_date BETWEEN :p_start_date and :p_end_date)/* Bug 32160815*/
			  AND  ac.vendor_id = i.vendor_id /* Bug 32160815*/			
and id.posted_flag = 'Y' /* Bug 32160815*/
		and     ac.ce_bank_acct_use_id = cbau.bank_acct_use_id
		and     cbau.bank_account_id = aba.bank_account_id
              AND    pv.federal_reportable_flag = 'Y'
              AND     id.type_1099 is null
              AND     ip.check_id = ac.check_id  
AND     xal.accounting_class_code <>'LIABILITY'
AND     xal.ledger_id = id.set_of_books_id 
AND     xal.application_id = 200
 AND ip.set_of_books_id = id.set_of_books_id /* Bug 32160815 start*/
			  AND id.accounting_event_id = xe.event_id 
			  AND xe.application_id = 200 
			  AND xe.event_id =  xah.event_id 
			  AND xah.application_id = 200 
			  AND xah.ae_header_id =   xal.ae_header_id /* Bug 32160815 end*/	      
		--AND     ac.bank_account_id = aba.bank_account_id                                              
		AND     decode(:P_query_driver, 'INV', nvl(xal.code_combination_id, id.dist_code_combination_id),                                     
		                         ABA.asset_code_combination_id) = GCC.code_combination_id
              AND     rel.tax_entity_id = :p_rep_entity_id
              AND     rel.balancing_segment_value = decode(:P_balancing_segment_column,
                      'SEGMENT1',gcc.segment1, 'SEGMENT2',gcc.segment2,
                      'SEGMENT3',gcc.segment3,'SEGMENT4',gcc.segment4,
                      'SEGMENT5',gcc.segment5,'SEGMENT6',gcc.segment6,
                      'SEGMENT7',gcc.segment7,'SEGMENT8',gcc.segment8,
                      'SEGMENT9',gcc.segment9,'SEGMENT10',gcc.segment10,
                      'SEGMENT11',gcc.segment11,'SEGMENT12',gcc.segment12,
                      'SEGMENT13',gcc.segment13,'SEGMENT14',gcc.segment14,
                      'SEGMENT15',gcc.segment15,'SEGMENT16',gcc.segment16,
                      'SEGMENT17',gcc.segment17,'SEGMENT18',gcc.segment18,
                      'SEGMENT19',gcc.segment19,'SEGMENT20',gcc.segment20,
                      'SEGMENT21',gcc.segment21,'SEGMENT22',gcc.segment22,
                      'SEGMENT23',gcc.segment23,'SEGMENT24',gcc.segment24,
                      'SEGMENT25',gcc.segment25,'SEGMENT26',gcc.segment26,
                      'SEGMENT27',gcc.segment27,'SEGMENT28',gcc.segment28,
                      'SEGMENT29',gcc.segment29,'SEGMENT30',gcc.segment30,null)
              AND     ip.invoice_id = i.invoice_id
              AND     ip.accounting_date between :p_start_date and :p_end_date /*rchandan for fusion*/
                             --    to_date(:p_start_date,'DD-MON-YYYY') and to_date(:p_end_date,'DD-MON-YYYY')
             GROUP BY pv.vendor_name,
                      pv.segment1,
                      i.invoice_num,
                      i.invoice_date,
                      i.invoice_amount,
                      id.distribution_line_number,
                      id.amount,
					  id.invoice_line_number
             --ORDER BY  upper(pv.vendor_name), i.invoice_num, i.invoice_date
             ORDER BY 1, 2, 3, 4, 5, 6, 7
--Q_FLEXDATA
SELECT
      null C_FLEXDATA,
          &C_DESC_ALL C_DESC_ALL,
          &C_FLEXFIELD C_FLEXFIELD
      FROM GL_CODE_COMBINATIONS
      WHERE CHART_OF_ACCOUNTS_ID = :C_CHART_OF_ACCOUNTS_ID
      and rownum = 1
	  
=======================================================================================================================================================
-------------------------------------------------U.S. 1099 Payments Data Model---------------------------------------------------------------------
--Q_RS_DISTRIBUTION_W
SELECT    ID.type_1099 Income_Tax_Type,
                 nvl(ID.income_tax_region,'No Tax Region') Region_Sname,
   
                 -1*(sum(nvl(ID.amount,0)))  ts_distribution_total
FROM      ap_reporting_entities_all RE,
                ap_reporting_entity_lines_all REL,
                gl_code_combinations CC,
                ap_invoice_distributions_all ID,
                ap_invoices_all AI,
                /* FUSION INITIATIVE CHANGES BEGIN po_vendors */ POZ_SUPPLIERS_V /* FUSION INITIATIVE CHANGES END*/ P,
                AP_1099_TAPE_DATA_ALL TD,
                ap_checks_all C,
                /* FUSION INITIATIVE CHANGES BEGIN ap_bank_accounts */ CE_BANK_ACCOUNTS /* FUSION INITIATIVE CHANGES END*/ ABA,
                CE_BANK_ACCT_USES_ALL BAU, /*rchandan for bug#9709459*/
                ap_invoice_payments_all IP
WHERE    P.vendor_id = AI.vendor_id
AND	ID.POSTED_FLAG = 'Y'
--      and        c.void_date is null  rchandan for bug#9709459
AND     (c.void_date is null 
         OR c.void_date NOT BETWEEN :p_start_date AND :p_end_date) --rchandan for bug#9709459
      AND   P.vendor_id=TD.vendor_id
	  AND TD.org_id       = :P_BUSINESS_UNIT
      AND   (:p_input_region_short_name is null OR
                    ID.income_tax_region = :p_input_region_short_name)
      AND   ID.type_1099 is not null
      AND   ID.type_1099 = 'MISC4'
      AND   IP.invoice_id = AI.invoice_id
      AND   ID.invoice_id = AI.invoice_id
      AND   C.check_id = IP.check_id
      /* FUSION INITIATIVE CHANGES BEGIN temporarily commented, bank_account_id not present.	
	  AND      C.bank_account_id = ABA.bank_account_id	
	  FUSION INITIATIVE CHANGES END*/
AND C.CE_BANK_ACCT_USE_ID = BAU.BANK_ACCT_USE_ID /*rchandan for bug#9709459*/
AND BAU.BANK_ACCOUNT_ID = ABA.BANK_ACCOUNT_ID /*rchandan for bug#9709459*/	  
      AND   IP.invoice_payment_id in
                   (SELECT  invoice_payment_id        
                       FROM  ap_invoice_payments_all IP1,
                                  ap_checks_all c1                  
                     WHERE  IP1.invoice_id = AI.invoice_id
                          AND  IP1.check_id = c1.check_id 
                          AND  nvl(c1.void_date,:p_end_date+1) not between :P_START_DATE and :P_END_DATE
                          AND  IP1.accounting_date BETWEEN :p_start_date AND  :p_end_date
                          AND  rownum = 1)
      AND   IP.accounting_date BETWEEN :p_start_date    AND   :p_end_date
	/*  AND   ID.accounting_date BETWEEN :p_start_date   AND    :p_end_date ---bug 12393629 16294327 */
      AND   RE.tax_entity_id = :p_tax_entity_id
      AND   RE.tax_entity_id = REL.tax_entity_id
--AND     decode(:P_query_driver, 'INV', ID.dist_code_combination_id,
                       --ABA.asset_code_combination_id) = CC.code_combination_id
&LP_QUERY_DRIVER	---	 bug 5851995 6725024
    AND   CC.chart_of_accounts_id = :C_CHART_ACCTS_ID
&C_DYNAMIC_SQL 
 and nvl ( ID.income_tax_region , 'No Tax Region' )=:Region_Sname222 
 and ID.type_1099=:Income_Tax_Type222
GROUP BY ID.type_1099,ID.income_tax_region 
order by 1,2
--Q_RS_PAYMENT_W
SELECT   nvl(ID.income_tax_region,'No Tax Region') Region_Sname,
                 ID.type_1099 Income_Tax_Type,

            -1*(round(sum(decode(I.cancelled_amount,
                         null,ID.amount,decode(greatest(ID.accounting_date,:p_end_date+1),
                         ID.accounting_date,0,decode(least(ID.accounting_date,
						 :p_start_date-1),ID.accounting_date,0,ID.amount)))/
                    decode(I.invoice_amount,0,decode(I.cancelled_amount,
                         null,1,0,1,I.cancelled_amount),
                         decode(AP_UTILITIES_PKG.Net_Invoice_Amount(I.invoice_id),0,1,
                                      AP_UTILITIES_PKG.Net_Invoice_Amount(I.invoice_id)))
                        *decode(IP.amount, 0, decode(ip2.ip_count, 0, 1, 0), IP.amount)),2)) payment_total,


               -1*(round(sum(decode(I.cancelled_amount,
                         null,ID.amount,decode(greatest(ID.accounting_date,:p_end_date+1),
                         ID.accounting_date,0,decode(least(ID.accounting_date,
						 :p_start_date-1),ID.accounting_date,0,ID.amount)))/
                    decode(I.invoice_amount,0,decode(I.cancelled_amount,
                         null,1,0,1,I.cancelled_amount),
                         decode(AP_UTILITIES_PKG.Net_Invoice_Amount(I.invoice_id),0,1,
                                      AP_UTILITIES_PKG.Net_Invoice_Amount(I.invoice_id)))
                        *DECODE(:p_conversion_rate_type,NULL,DECODE(NVL(IP.payment_base_amount,IP.amount), 0, DECODE(ip2.ip_count, 0, 1, 0),NVL(IP.payment_base_amount,IP.amount)),
DECODE(IP.payment_currency_code,'USD',NVL(IP.amount,0), NVL(IP.payment_base_amount,IP.amount)*GR.conversion_rate))),2)) usd_payment_total /* Added for the Bug 30510238 */ /*Modified for the bug 30954910 */

FROM     ap_reporting_entities_all RE,
               ap_reporting_entity_lines_all REL,
               AP_1099_TAPE_DATA_ALL TD,
               /* FUSION INITIATIVE CHANGES BEGIN po_vendors */ POZ_SUPPLIERS_V /* FUSION INITIATIVE CHANGES END*/ P,
               gl_code_combinations CC,
               ap_invoices_all I,
               ap_checks_all C,
               /* FUSION INITIATIVE CHANGES BEGIN ap_bank_accounts */ CE_BANK_ACCOUNTS /* FUSION INITIATIVE CHANGES END*/ ABA,
               CE_BANK_ACCT_USES_ALL BAU, /*rchandan for bug#9709459*/
               ap_invoice_distributions_all ID,
               ap_invoice_payments_all IP,
               (SELECT distinct gdr.from_currency,  gdr.conversion_rate, gdr.conversion_Date
                    FROM gl_daily_rates gdr
                    WHERE gdr.conversion_date BETWEEN :p_start_date AND :p_end_date
                    AND  gdr.conversion_type= :p_conversion_rate_type
                    AND gdr.to_currency = 'USD'  
                    ) gr, ap_system_parameters_all asp,      /*Added for the bug 30954910 */
                (
                   select invoice_id,count(decode(aip.amount,0,null,1)) ip_count
                   from   ap_invoice_payments_all aip
                   where  aip.accounting_date BETWEEN :p_start_date AND :p_end_date
                   group  by invoice_id
                 ) ip2
WHERE  (:p_input_region_short_name is null OR
                ID.income_tax_region = :p_input_region_short_name)
AND	ID.POSTED_FLAG = 'Y'
AND        P.vendor_id=I.vendor_id
--and        c.void_date is null  rchandan for bug#9709459
AND     (c.void_date is null 
         OR c.void_date NOT BETWEEN :p_start_date AND :p_end_date) --rchandan for bug#9709459
AND     P.vendor_id=TD.vendor_id
AND TD.org_id       = :P_BUSINESS_UNIT
AND      ((:p_fed_reportable = 'Y' and P.federal_reportable_flag = 'Y')
               OR (:p_fed_reportable = 'N' or :p_fed_reportable is null))
AND      I.invoice_id=IP.invoice_id
AND      I.invoice_id=ID.invoice_id
AND     C.check_id = IP.check_id
AND ip2.invoice_id = I.invoice_id
AND gr.from_currency(+) = asp.base_currency_code
and gr.conversion_date(+) = ip.accounting_date
and asp.org_id = ip.org_id    /*Added for the bug 30954910 */
/* FUSION INITIATIVE CHANGES BEGIN temporarily commented, bank_account_id not present.	
AND      C.bank_account_id = ABA.bank_account_id	
FUSION INITIATIVE CHANGES END*/
AND C.CE_BANK_ACCT_USE_ID = BAU.BANK_ACCT_USE_ID /*rchandan for bug#9709459*/
AND BAU.BANK_ACCOUNT_ID = ABA.BANK_ACCOUNT_ID /*rchandan for bug#9709459*/
AND      IP.accounting_date BETWEEN :p_start_date  AND      :p_end_date
/*AND      ID.accounting_date BETWEEN :p_start_date   AND    :p_end_date ---bug 12393629 16294327 */
AND      ID.type_1099 is not null
AND      ID.type_1099 = 'MISC4'
--AND     decode(:P_query_driver, 'INV', ID.dist_code_combination_id,
                       --ABA.asset_code_combination_id) = CC.code_combination_id
&LP_QUERY_DRIVER	---	 bug 5851995 6725024
AND      RE.tax_entity_id = :p_tax_entity_id
AND      RE.tax_entity_id = REL.tax_entity_id
AND      CC.chart_of_accounts_id = :C_CHART_ACCTS_ID
&C_DYNAMIC_SQL 
 and nvl ( ID.income_tax_region , 'No Tax Region' )=:Region_Sname222 
 and ID.type_1099=:Income_Tax_Type222
GROUP BY ID.type_1099,ID.income_tax_region
ORDER BY  1,2
--Q_SS_DISTRIBUTION_W
SELECT    P.segment1 vendor_num,
        P.vendor_name vendor_name,

                 -1*(sum(nvl(ID.amount,0)))ss_distribution_total ,
         ID.type_1099 income_tax_type
FROM       AP_1099_TAPE_DATA_ALL TD,
                 ap_reporting_entities_all RE,
                 ap_reporting_entity_lines_all REL,
                 gl_code_combinations CC,
                 ap_invoice_distributions_all ID,
                 ap_invoices_all AI,
                 /* FUSION INITIATIVE CHANGES BEGIN po_vendors */ POZ_SUPPLIERS_V /* FUSION INITIATIVE CHANGES END*/ P,
                 /* FUSION INITIATIVE CHANGES BEGIN ap_bank_accounts */ CE_BANK_ACCOUNTS /* FUSION INITIATIVE CHANGES END*/ ABA,
                 CE_BANK_ACCT_USES_ALL BAU, /*rchandan for bug#9709459*/
                 ap_checks_all C,
                 ap_invoice_payments_all IP
WHERE    P.vendor_id = AI.vendor_id
AND	ID.POSTED_FLAG = 'Y'
--      and        c.void_date is null  rchandan for bug#9709459
AND     (c.void_date is null 
         OR c.void_date NOT BETWEEN :p_start_date AND :p_end_date) --rchandan for bug#9709459
      AND   P.vendor_id=TD.vendor_id
	  AND TD.org_id       = :P_BUSINESS_UNIT
      AND C.ORG_ID       = TD.org_id   --Bug 26564189
      AND   (:p_input_region_short_name is null OR
                 ID.income_tax_region = :p_input_region_short_name)
      AND   ID.type_1099 is not null
      AND   ID.type_1099 = 'MISC4'
      AND   AI.invoice_id = IP.invoice_id
      AND   ID.invoice_id = AI.invoice_id
      AND   C.check_id = IP.check_id
      /* FUSION INITIATIVE CHANGES BEGIN temporarily commented, bank_account_id not present.	
	  AND      C.bank_account_id = ABA.bank_account_id	
	  FUSION INITIATIVE CHANGES END*/
AND C.CE_BANK_ACCT_USE_ID = BAU.BANK_ACCT_USE_ID /*rchandan for bug#9709459*/
AND BAU.BANK_ACCOUNT_ID = ABA.BANK_ACCOUNT_ID /*rchandan for bug#9709459*/	  
      AND   IP.invoice_payment_id in
                   (SELECT  invoice_payment_id        
                       FROM  ap_invoice_payments_all IP1,
                                  ap_checks_all c1                  
                     WHERE  IP1.invoice_id = AI.invoice_id
                          AND  IP1.check_id = c1.check_id 
                          AND  nvl(c1.void_date,:p_end_date+1) not between :P_START_DATE and :P_END_DATE
                          AND  IP1.accounting_date BETWEEN :p_start_date AND  :p_end_date
                          AND  rownum = 1)
      AND   IP.accounting_date BETWEEN :p_start_date  AND   :p_end_date
	/*  AND   ID.accounting_date BETWEEN :p_start_date   AND    :p_end_date ---bug 12393629 16294327 */
      AND   RE.tax_entity_id = :p_tax_entity_id
      AND   RE.tax_entity_id = REL.tax_entity_id
--AND     decode(:P_query_driver, 'INV', ID.dist_code_combination_id,
                       --ABA.asset_code_combination_id) = CC.code_combination_id
&LP_QUERY_DRIVER	---	 bug 5851995 6725024
      AND   CC.chart_of_accounts_id = :C_CHART_ACCTS_ID
&C_DYNAMIC_SQL 
 and ID.type_1099=:Income_Tax_Type2 
 and P.segment1=:Vendor_Number4
GROUP BY P.vendor_name, P.segment1,ID.type_1099
order by P.vendor_name,P.segment1,ID.type_1099
--Q_SS_PAYMENT_W
SELECT  P.vendor_name Vendor_name,
         P.segment1 Vendor_Number,
                     null Tax_Reporting_site,
        ID.type_1099 Income_Tax_Type,
                 decode(replace(replace(PII.income_tax_id,'-',''),' ',''),'000000000','',PII.income_tax_id) Tax_ID_Number,
              -1*(round(sum(decode(I.cancelled_amount,
                         null,ID.amount,decode(greatest(ID.accounting_date,:p_end_date+1),
                         ID.accounting_date,0,decode(least(ID.accounting_date,
						 :p_start_date-1),ID.accounting_date,0,ID.amount)))/
                    decode(I.invoice_amount,0,decode(I.cancelled_amount,
                         null,1,0,1,I.cancelled_amount),
                         decode(AP_UTILITIES_PKG.Net_Invoice_Amount(I.invoice_id),0,1,
                                      AP_UTILITIES_PKG.Net_Invoice_Amount(I.invoice_id)))
                        *decode(IP.amount, 0, decode(ip2.ip_count, 0, 1, 0), IP.amount)),2)) payment_total,

               -1*(round(sum(decode(I.cancelled_amount,
                         null,ID.amount,decode(greatest(ID.accounting_date,:p_end_date+1),
                         ID.accounting_date,0,decode(least(ID.accounting_date,
						 :p_start_date-1),ID.accounting_date,0,ID.amount)))/
                    decode(I.invoice_amount,0,decode(I.cancelled_amount,
                         null,1,0,1,I.cancelled_amount),
                         decode(AP_UTILITIES_PKG.Net_Invoice_Amount(I.invoice_id),0,1,
                                      AP_UTILITIES_PKG.Net_Invoice_Amount(I.invoice_id)))
                        *DECODE(:p_conversion_rate_type,NULL,DECODE(NVL(IP.payment_base_amount,IP.amount), 0, DECODE(ip2.ip_count, 0, 1, 0),NVL(IP.payment_base_amount,IP.amount)),
                        DECODE(IP.payment_currency_code,'USD',NVL(IP.amount,0), NVL(IP.payment_base_amount,IP.amount)*GR.conversion_rate))),2)) usd_payment_total /* Added for the Bug 30510238 */ /*Modified for the bug 30954910 */



FROM     ap_reporting_entities_all RE,
               ap_reporting_entity_lines_all REL,
               AP_1099_TAPE_DATA_ALL TD,
               /* FUSION INITIATIVE CHANGES BEGIN po_vendors */ POZ_SUPPLIERS_V /* FUSION INITIATIVE CHANGES END*/ P,
               gl_code_combinations CC,
               ap_invoices_all I,
               ap_checks_all C,
               /* FUSION INITIATIVE CHANGES BEGIN ap_bank_accounts */ CE_BANK_ACCOUNTS /* FUSION INITIATIVE CHANGES END*/ ABA,
               ap_invoice_distributions_all ID,
               ap_invoice_payments_all IP,  -- Bug 1131150
                              (SELECT distinct gdr.from_currency,  gdr.conversion_rate, gdr.conversion_Date
                    FROM gl_daily_rates gdr
                    WHERE gdr.conversion_date BETWEEN :p_start_date AND :p_end_date
                    AND  gdr.conversion_type= :p_conversion_rate_type
                    AND gdr.to_currency = 'USD'  
                    ) gr, ap_system_parameters_all asp,      /*Added for the bug 30954910 */
	       CE_BANK_ACCT_USES_ALL BAU,  -- bug 8739088 by anupgupt
	       poz_suppliers_pii PII,
                (
                   select invoice_id,count(decode(aip.amount,0,null,1)) ip_count
                   from   ap_invoice_payments_all aip
                   where  aip.accounting_date BETWEEN :p_start_date AND :p_end_date
                   group  by invoice_id
                 ) ip2	
WHERE  not exists
               (select pvs.vendor_site_code
                 from   /* FUSION INITIATIVE CHANGES BEGIN po_vendor_sites */ POZ_SUPPLIER_SITES_V /* FUSION INITIATIVE CHANGES END*/ pvs
                 where p.vendor_id = pvs.vendor_id)
AND	ID.POSTED_FLAG = 'Y'
AND     P.vendor_id = PII.vendor_id (+)
AND       (:p_input_region_short_name is null OR
                ID.income_tax_region = :p_input_region_short_name)
AND        P.vendor_id=I.vendor_id
--and        c.void_date is null  --4480766  rchandan for bug#9709459
AND     (c.void_date is null 
         OR c.void_date NOT BETWEEN :p_start_date AND :p_end_date) --rchandan for bug#9709459
AND        P.vendor_id=TD.vendor_id
AND TD.org_id       = :P_BUSINESS_UNIT
AND      ((:p_fed_reportable = 'Y' and P.federal_reportable_flag = 'Y')
               OR (:p_fed_reportable = 'N' or :p_fed_reportable is null))
AND      I.invoice_id=IP.invoice_id
AND      I.invoice_id=ID.invoice_id
AND     C.check_id = IP.check_id
AND ip2.invoice_id = I.invoice_id
AND gr.from_currency(+) = asp.base_currency_code
and gr.conversion_date(+) = ip.accounting_date
and asp.org_id = ip.org_id    /*Added for the bug 30954910 */
/* FUSION INITIATIVE CHANGES BEGIN temporarily commented, bank_account_id not present.	
AND      C.bank_account_id = ABA.bank_account_id	
FUSION INITIATIVE CHANGES END*/

AND      IP.accounting_date BETWEEN :p_start_date  AND      :p_end_date
/*AND      ID.accounting_date BETWEEN :p_start_date   AND    :p_end_date ---bug 12393629 16294327 */
AND      ID.type_1099 is not null
AND      ID.type_1099 = 'MISC4'
--AND     decode(:P_query_driver, 'INV', ID.dist_code_combination_id,
                       --ABA.asset_code_combination_id) = CC.code_combination_id
&LP_QUERY_DRIVER	---	 bug 5851995 6725024
AND      RE.tax_entity_id = :p_tax_entity_id
AND      RE.tax_entity_id = REL.tax_entity_id
AND      CC.chart_of_accounts_id = :C_CHART_ACCTS_ID 
AND      C.ce_bank_acct_use_id = BAU.bank_acct_use_id  -- bug 8739088 by anupgupt
AND      BAU.bank_account_id = ABA.bank_account_id  -- bug 8739088 by anupgupt
AND ID.type_1099=:Income_Tax_Type2 -- bug 22330854 mlean
AND P.segment1=:Vendor_Number4     -- bug 22330854 mlean
&C_DYNAMIC_SQL 
GROUP BY P.segment1,P.vendor_name,ID.type_1099,
                 decode(replace(replace(PII.income_tax_id,'-',''),' ',''),'000000000','',PII.income_tax_id)
UNION
 SELECT P.vendor_name Vendor_name,
         P.segment1 Vendor_Number,
                    PVS.vendor_site_code Tax_Reporting_site,
                 ID.type_1099 Income_Tax_Type,
                PII.income_tax_id Tax_id_Number,
             -1*(round(sum(decode(I.cancelled_amount,
                         null,ID.amount,decode(greatest(ID.accounting_date,:p_end_date+1),
                         ID.accounting_date,0,decode(least(ID.accounting_date,
						 :p_start_date-1),ID.accounting_date,0,ID.amount)))/
                    decode(I.invoice_amount,0,decode(I.cancelled_amount,
                         null,1,0,1,I.cancelled_amount),
                         decode(AP_UTILITIES_PKG.Net_Invoice_Amount(I.invoice_id),0,1,
                                      AP_UTILITIES_PKG.Net_Invoice_Amount(I.invoice_id)))
                        *decode(IP.amount, 0, decode(ip2.ip_count, 0, 1, 0), IP.amount)),2)) payment_total,
            -1*(round(sum(decode(I.cancelled_amount,
                         null,ID.amount,decode(greatest(ID.accounting_date,:p_end_date+1),
                         ID.accounting_date,0,decode(least(ID.accounting_date,
						 :p_start_date-1),ID.accounting_date,0,ID.amount)))/
                    decode(I.invoice_amount,0,decode(I.cancelled_amount,
                         null,1,0,1,I.cancelled_amount),
                         decode(AP_UTILITIES_PKG.Net_Invoice_Amount(I.invoice_id),0,1,
                                      AP_UTILITIES_PKG.Net_Invoice_Amount(I.invoice_id)))
                        *DECODE(:p_conversion_rate_type,NULL,DECODE(NVL(IP.payment_base_amount,IP.amount), 0, DECODE(ip2.ip_count, 0, 1, 0),NVL(IP.payment_base_amount,IP.amount)),
                        DECODE(IP.payment_currency_code,'USD',NVL(IP.amount,0), NVL(IP.payment_base_amount,IP.amount)*GR.conversion_rate))),2)) usd_payment_total /*Modified for the bug 30954910 */
FROM    ap_income_tax_regions ITR,
               ap_reporting_entities_all RE,
               ap_reporting_entity_lines_all REL,
               AP_1099_TAPE_DATA_ALL TD,
               /* FUSION INITIATIVE CHANGES BEGIN po_vendors */ POZ_SUPPLIERS_V /* FUSION INITIATIVE CHANGES END*/ P,
                /* FUSION INITIATIVE CHANGES BEGIN po_vendor_sites */ POZ_SUPPLIER_SITES_V /* FUSION INITIATIVE CHANGES END*/ pvs,
               gl_code_combinations CC,
               ap_invoices_all I,
               ap_checks_all C,
               /* FUSION INITIATIVE CHANGES BEGIN ap_bank_accounts */ CE_BANK_ACCOUNTS /* FUSION INITIATIVE CHANGES END*/ ABA,
               CE_BANK_ACCT_USES_ALL BAU, /*rchandan for bug#9709459*/
               ap_invoice_distributions_all ID,
               ap_invoice_payments_all IP,  -- Bug 1131150
               (SELECT distinct gdr.from_currency,  gdr.conversion_rate, gdr.conversion_Date
                    FROM gl_daily_rates gdr
                    WHERE gdr.conversion_date BETWEEN :p_start_date AND :p_end_date
                    AND  gdr.conversion_type= :p_conversion_rate_type
                    AND gdr.to_currency = 'USD'  
                    ) gr, ap_system_parameters_all asp,      /*Added for the bug 30954910 */
	       poz_suppliers_pii PII,
                (
                   select invoice_id,count(decode(aip.amount,0,null,1)) ip_count
                   from   ap_invoice_payments_all aip
                   where  aip.accounting_date BETWEEN :p_start_date AND :p_end_date
                   group  by invoice_id
                 ) ip2	
WHERE   p.vendor_id = pvs.vendor_id

AND	ID.POSTED_FLAG = 'Y'
AND     P.vendor_id = PII.vendor_id (+)
AND       ( PVS.tax_reporting_site_flag  = 'Y'    OR
                  ( not exists
                ( select        ' No Tax_Report_Flag Setting'
                   from        /* FUSION INITIATIVE CHANGES BEGIN po_vendor_sites */ POZ_SUPPLIER_SITES_V /* FUSION INITIATIVE CHANGES END*/ pvs2
                   where     pvs2.tax_reporting_site_flag = 'Y'
                                           and     pvs2.vendor_id = p.vendor_id )
                   AND
                   pvs.vendor_site_code = ( select     min(pvs2.vendor_site_code)
                                   from        /* FUSION INITIATIVE CHANGES BEGIN po_vendor_sites */ POZ_SUPPLIER_SITES_V /* FUSION INITIATIVE CHANGES END*/ pvs2
                                   where      pvs2.vendor_id = p.vendor_id ))
                )
AND       ID.income_tax_region = ITR.region_short_name (+)
--and        c.void_date is null  --4480766  rchandan for bug#9709459
AND     (c.void_date is null 
         OR c.void_date NOT BETWEEN :p_start_date AND :p_end_date) --rchandan for bug#9709459
AND       (:p_input_region_short_name is null OR
                ID.income_tax_region = :p_input_region_short_name)
AND        P.vendor_id=I.vendor_id
AND     P.vendor_id=TD.vendor_id
AND TD.org_id       = :P_BUSINESS_UNIT
AND      ((:p_fed_reportable = 'Y' and P.federal_reportable_flag = 'Y')
               OR (:p_fed_reportable = 'N' or :p_fed_reportable is null))
AND      I.invoice_id=IP.invoice_id
AND      I.invoice_id=ID.invoice_id
AND     C.check_id = IP.check_id
AND ip2.invoice_id = I.invoice_id
AND gr.from_currency(+) = asp.base_currency_code
and gr.conversion_date(+) = ip.accounting_date
and asp.org_id = ip.org_id    /*Added for the bug 30954910 */
/* FUSION INITIATIVE CHANGES BEGIN temporarily commented, bank_account_id not present.	
AND      C.bank_account_id = ABA.bank_account_id	
FUSION INITIATIVE CHANGES END*/
AND C.CE_BANK_ACCT_USE_ID = BAU.BANK_ACCT_USE_ID /*rchandan for bug#9709459*/
AND BAU.BANK_ACCOUNT_ID = ABA.BANK_ACCOUNT_ID /*rchandan for bug#9709459*/
AND      IP.accounting_date BETWEEN :p_start_date  AND      :p_end_date
/*AND      ID.accounting_date BETWEEN :p_start_date   AND    :p_end_date ---bug 12393629 16294327 */
AND      ID.type_1099 is not null
AND      ID.type_1099 = 'MISC4'
--AND     decode(:P_query_driver, 'INV', ID.dist_code_combination_id,
                       --ABA.asset_code_combination_id) = CC.code_combination_id
&LP_QUERY_DRIVER	---	 bug 5851995 6725024
AND      RE.tax_entity_id = :p_tax_entity_id
AND      RE.tax_entity_id = REL.tax_entity_id
AND      CC.chart_of_accounts_id = :C_CHART_ACCTS_ID 
AND ID.type_1099=:Income_Tax_Type2 -- bug 22330854 mlean
AND P.segment1=:Vendor_Number4     -- bug 22330854 mlean
AND EXISTS(SELECT 1 FROM POZ_SITE_ASSIGNMENTS_ALL_M PVSA WHERE PVS.VENDOR_SITE_ID = PVSA.VENDOR_SITE_ID AND PVSA.BU_ID = TD.org_id) -- bug 22330854 mlean
&C_DYNAMIC_SQL 
GROUP BY P.vendor_name,P.segment1, PII.income_tax_id, PVS.vendor_site_code,ID.type_1099



order by 1
--Q_TD_DISTRIBUTION
SELECT    ID.type_1099,
      	P.vendor_id,
	AI.invoice_id,
      
decode(ID.type_1099, 'MISC4', -1*(sum(nvl(ID.amount,0))),
                                                        sum(nvl(ID.amount,0))) td_distribution_total
FROM        ap_reporting_entities_all RE,
                  ap_reporting_entity_lines_all REL,
                  gl_code_combinations CC,
                  ap_invoice_distributions_all ID,
                  ap_invoices_all AI,
                  /* FUSION INITIATIVE CHANGES BEGIN po_vendors */ POZ_SUPPLIERS_V /* FUSION INITIATIVE CHANGES END*/ P,
                  AP_1099_TAPE_DATA_ALL TD,
                  /* FUSION INITIATIVE CHANGES BEGIN ap_bank_accounts */ CE_BANK_ACCOUNTS /* FUSION INITIATIVE CHANGES END*/ ABA,
                  CE_BANK_ACCT_USES_ALL BAU, /*rchandan for bug#9709459*/
                  ap_checks_all C,
                  ap_invoice_payments_all IP
WHERE      P.vendor_id = AI.vendor_id
AND	ID.POSTED_FLAG = 'Y'
--      and        c.void_date is null  rchandan for bug#9709459
AND     (c.void_date is null 
         OR c.void_date NOT BETWEEN :p_start_date AND :p_end_date) --rchandan for bug#9709459
      AND     P.vendor_id=TD.vendor_id 
	  AND TD.org_id       = :P_BUSINESS_UNIT
      AND     (:p_input_region_short_name is null OR
                      ID.income_tax_region = :p_input_region_short_name)
      AND     ID.type_1099 is not null
      AND     ID.invoice_id = AI.invoice_id
      AND     IP.invoice_id = AI.invoice_id
      AND     C.check_id = IP.check_id
      /* FUSION INITIATIVE CHANGES BEGIN temporarily commented, bank_account_id not present.	
	  AND      C.bank_account_id = ABA.bank_account_id	
	  FUSION INITIATIVE CHANGES END*/
AND C.CE_BANK_ACCT_USE_ID = BAU.BANK_ACCT_USE_ID /*rchandan for bug#9709459*/
AND BAU.BANK_ACCOUNT_ID = ABA.BANK_ACCOUNT_ID /*rchandan for bug#9709459*/	  
      AND   IP.invoice_payment_id in
                   (SELECT  invoice_payment_id        
                       FROM  ap_invoice_payments_all IP1,
                                  ap_checks_all c1                  
                     WHERE  IP1.invoice_id = AI.invoice_id
                          AND  IP1.check_id = c1.check_id 
                          AND  nvl(c1.void_date,:p_end_date+1) not between :P_START_DATE and :P_END_DATE
                          AND  IP1.accounting_date BETWEEN :p_start_date AND  :p_end_date
                          AND  rownum = 1)
      AND     IP.accounting_date BETWEEN :p_start_date AND     :p_end_date
/*	  AND     ID.accounting_date BETWEEN :p_start_date AND  :p_end_date ---bug 12393629 16294327 */
      AND     RE.tax_entity_id = :p_tax_entity_id
      AND     RE.tax_entity_id = REL.tax_entity_id  
--AND     decode(:P_query_driver, 'INV', ID.dist_code_combination_id,
                       --ABA.asset_code_combination_id) = CC.code_combination_id
&LP_QUERY_DRIVER	---	 bug 5851995 6725024
      AND     CC.chart_of_accounts_id = :C_CHART_ACCTS_ID 
&C_DYNAMIC_SQL 
 and ID.type_1099=:Income_Tax_Type11 
 and P.vendor_id=:vendor_id8 
 and AI.invoice_id=:invoice_id8
GROUP BY P.vendor_id, AI.invoice_id, ID.type_1099
order by 1
--SELECT    ID.type_1099,
      	P.vendor_id,
	AI.invoice_id,
      
decode(ID.type_1099, 'MISC4', -1*(sum(nvl(ID.amount,0))),
                                                        sum(nvl(ID.amount,0))) td_distribution_total
FROM        ap_reporting_entities_all RE,
                  ap_reporting_entity_lines_all REL,
                  gl_code_combinations CC,
                  ap_invoice_distributions_all ID,
                  ap_invoices_all AI,
                  /* FUSION INITIATIVE CHANGES BEGIN po_vendors */ POZ_SUPPLIERS_V /* FUSION INITIATIVE CHANGES END*/ P,
                  AP_1099_TAPE_DATA_ALL TD,
                  /* FUSION INITIATIVE CHANGES BEGIN ap_bank_accounts */ CE_BANK_ACCOUNTS /* FUSION INITIATIVE CHANGES END*/ ABA,
                  CE_BANK_ACCT_USES_ALL BAU, /*rchandan for bug#9709459*/
                  ap_checks_all C,
                  ap_invoice_payments_all IP
WHERE      P.vendor_id = AI.vendor_id
AND	ID.POSTED_FLAG = 'Y'
--      and        c.void_date is null  rchandan for bug#9709459
AND     (c.void_date is null 
         OR c.void_date NOT BETWEEN :p_start_date AND :p_end_date) --rchandan for bug#9709459
      AND     P.vendor_id=TD.vendor_id 
	  AND TD.org_id       = :P_BUSINESS_UNIT
      AND     (:p_input_region_short_name is null OR
                      ID.income_tax_region = :p_input_region_short_name)
      AND     ID.type_1099 is not null
      AND     ID.invoice_id = AI.invoice_id
      AND     IP.invoice_id = AI.invoice_id
      AND     C.check_id = IP.check_id
      /* FUSION INITIATIVE CHANGES BEGIN temporarily commented, bank_account_id not present.	
	  AND      C.bank_account_id = ABA.bank_account_id	
	  FUSION INITIATIVE CHANGES END*/
AND C.CE_BANK_ACCT_USE_ID = BAU.BANK_ACCT_USE_ID /*rchandan for bug#9709459*/
AND BAU.BANK_ACCOUNT_ID = ABA.BANK_ACCOUNT_ID /*rchandan for bug#9709459*/	  
      AND   IP.invoice_payment_id in
                   (SELECT  invoice_payment_id        
                       FROM  ap_invoice_payments_all IP1,
                                  ap_checks_all c1                  
                     WHERE  IP1.invoice_id = AI.invoice_id
                          AND  IP1.check_id = c1.check_id 
                          AND  nvl(c1.void_date,:p_end_date+1) not between :P_START_DATE and :P_END_DATE
                          AND  IP1.accounting_date BETWEEN :p_start_date AND  :p_end_date
                          AND  rownum = 1)
      AND     IP.accounting_date BETWEEN :p_start_date AND     :p_end_date
/*	  AND     ID.accounting_date BETWEEN :p_start_date AND  :p_end_date ---bug 12393629 16294327 */
      AND     RE.tax_entity_id = :p_tax_entity_id
      AND     RE.tax_entity_id = REL.tax_entity_id  
--AND     decode(:P_query_driver, 'INV', ID.dist_code_combination_id,
                       --ABA.asset_code_combination_id) = CC.code_combination_id
&LP_QUERY_DRIVER	---	 bug 5851995 6725024
      AND     CC.chart_of_accounts_id = :C_CHART_ACCTS_ID 
&C_DYNAMIC_SQL 
 and ID.type_1099=:Income_Tax_Type11 
 and P.vendor_id=:vendor_id8 
 and AI.invoice_id=:invoice_id8
GROUP BY P.vendor_id, AI.invoice_id, ID.type_1099
order by 1
--SELECT    ID.type_1099,
      	P.vendor_id,
	AI.invoice_id,
      
decode(ID.type_1099, 'MISC4', -1*(sum(nvl(ID.amount,0))),
                                                        sum(nvl(ID.amount,0))) td_distribution_total
FROM        ap_reporting_entities_all RE,
                  ap_reporting_entity_lines_all REL,
                  gl_code_combinations CC,
                  ap_invoice_distributions_all ID,
                  ap_invoices_all AI,
                  /* FUSION INITIATIVE CHANGES BEGIN po_vendors */ POZ_SUPPLIERS_V /* FUSION INITIATIVE CHANGES END*/ P,
                  AP_1099_TAPE_DATA_ALL TD,
                  /* FUSION INITIATIVE CHANGES BEGIN ap_bank_accounts */ CE_BANK_ACCOUNTS /* FUSION INITIATIVE CHANGES END*/ ABA,
                  CE_BANK_ACCT_USES_ALL BAU, /*rchandan for bug#9709459*/
                  ap_checks_all C,
                  ap_invoice_payments_all IP
WHERE      P.vendor_id = AI.vendor_id
AND	ID.POSTED_FLAG = 'Y'
--      and        c.void_date is null  rchandan for bug#9709459
AND     (c.void_date is null 
         OR c.void_date NOT BETWEEN :p_start_date AND :p_end_date) --rchandan for bug#9709459
      AND     P.vendor_id=TD.vendor_id 
	  AND TD.org_id       = :P_BUSINESS_UNIT
      AND     (:p_input_region_short_name is null OR
                      ID.income_tax_region = :p_input_region_short_name)
      AND     ID.type_1099 is not null
      AND     ID.invoice_id = AI.invoice_id
      AND     IP.invoice_id = AI.invoice_id
      AND     C.check_id = IP.check_id
      /* FUSION INITIATIVE CHANGES BEGIN temporarily commented, bank_account_id not present.	
	  AND      C.bank_account_id = ABA.bank_account_id	
	  FUSION INITIATIVE CHANGES END*/
AND C.CE_BANK_ACCT_USE_ID = BAU.BANK_ACCT_USE_ID /*rchandan for bug#9709459*/
AND BAU.BANK_ACCOUNT_ID = ABA.BANK_ACCOUNT_ID /*rchandan for bug#9709459*/	  
      AND   IP.invoice_payment_id in
                   (SELECT  invoice_payment_id        
                       FROM  ap_invoice_payments_all IP1,
                                  ap_checks_all c1                  
                     WHERE  IP1.invoice_id = AI.invoice_id
                          AND  IP1.check_id = c1.check_id 
                          AND  nvl(c1.void_date,:p_end_date+1) not between :P_START_DATE and :P_END_DATE
                          AND  IP1.accounting_date BETWEEN :p_start_date AND  :p_end_date
                          AND  rownum = 1)
      AND     IP.accounting_date BETWEEN :p_start_date AND     :p_end_date
/*	  AND     ID.accounting_date BETWEEN :p_start_date AND  :p_end_date ---bug 12393629 16294327 */
      AND     RE.tax_entity_id = :p_tax_entity_id
      AND     RE.tax_entity_id = REL.tax_entity_id  
--AND     decode(:P_query_driver, 'INV', ID.dist_code_combination_id,
                       --ABA.asset_code_combination_id) = CC.code_combination_id
&LP_QUERY_DRIVER	---	 bug 5851995 6725024
      AND     CC.chart_of_accounts_id = :C_CHART_ACCTS_ID 
&C_DYNAMIC_SQL 
 and ID.type_1099=:Income_Tax_Type11 
 and P.vendor_id=:vendor_id8 
 and AI.invoice_id=:invoice_id8
GROUP BY P.vendor_id, AI.invoice_id, ID.type_1099
order by 1
--Q_TD_PAYMENT
SELECT   ID.type_1099,
      	P.vendor_id,
	I.invoice_id,

               decode(ID.type_1099, 'MISC4', -1*(round(sum(decode(I.cancelled_amount,
                         null,ID.amount,decode(greatest(ID.accounting_date,:p_end_date+1),
                         ID.accounting_date,0,decode(least(ID.accounting_date,
						 :p_start_date-1),ID.accounting_date,0,ID.amount)))/
                    decode(I.invoice_amount,0,decode(I.cancelled_amount,
                         null,1,0,1,I.cancelled_amount),
                         decode(AP_UTILITIES_PKG.Net_Invoice_Amount(I.invoice_id),0,1,
                                      AP_UTILITIES_PKG.Net_Invoice_Amount(I.invoice_id)))
                        *decode(IP.amount, 0, decode(ip2.ip_count, 0, 1, 0), IP.amount)),2)),
                             round(sum(decode(I.cancelled_amount,
                         null,ID.amount,decode(greatest(ID.accounting_date,:p_end_date+1),
                         ID.accounting_date,0,decode(least(ID.accounting_date,
						 :p_start_date-1),ID.accounting_date,0,ID.amount)))/
                    decode(I.invoice_amount,0,decode(I.cancelled_amount,
                         null,1,0,1,I.cancelled_amount),
                         decode(AP_UTILITIES_PKG.Net_Invoice_Amount(I.invoice_id),0,1,
                                      AP_UTILITIES_PKG.Net_Invoice_Amount(I.invoice_id)))
                        *decode(IP.amount, 0, decode(ip2.ip_count, 0, 1, 0), IP.amount)),2))   payment_total,


                  decode(ID.type_1099, 'MISC4', -1*(round(sum(decode(I.cancelled_amount,
                         null,ID.amount,decode(greatest(ID.accounting_date,:p_end_date+1),
                         ID.accounting_date,0,decode(least(ID.accounting_date,
						 :p_start_date-1),ID.accounting_date,0,ID.amount)))/
                    decode(I.invoice_amount,0,decode(I.cancelled_amount,
                         null,1,0,1,I.cancelled_amount),
                         decode(AP_UTILITIES_PKG.Net_Invoice_Amount(I.invoice_id),0,1,
                                      AP_UTILITIES_PKG.Net_Invoice_Amount(I.invoice_id)))
                        *DECODE(:p_conversion_rate_type,NULL,DECODE(NVL(IP.payment_base_amount,IP.amount), 0, DECODE(ip2.ip_count, 0, 1, 0),NVL(IP.payment_base_amount,IP.amount)),
                        DECODE(IP.payment_currency_code,'USD',NVL(IP.amount,0), NVL(IP.payment_base_amount,IP.amount)*GR.conversion_rate))),2)),
                             round(sum(decode(I.cancelled_amount,
                         null,ID.amount,decode(greatest(ID.accounting_date,:p_end_date+1),
                         ID.accounting_date,0,decode(least(ID.accounting_date,
						 :p_start_date-1),ID.accounting_date,0,ID.amount)))/
                    decode(I.invoice_amount,0,decode(I.cancelled_amount,
                         null,1,0,1,I.cancelled_amount),
                         decode(AP_UTILITIES_PKG.Net_Invoice_Amount(I.invoice_id),0,1,
                                      AP_UTILITIES_PKG.Net_Invoice_Amount(I.invoice_id)))
                        *DECODE(:p_conversion_rate_type,NULL,DECODE(NVL(IP.payment_base_amount,IP.amount), 0, DECODE(ip2.ip_count, 0, 1, 0),NVL(IP.payment_base_amount,IP.amount)),
                        DECODE(IP.payment_currency_code,'USD',NVL(IP.amount,0), NVL(IP.payment_base_amount,IP.amount)*GR.conversion_rate))),2))  usd_payment_total, /* Added for the Bug 30510238 */ /*Modified for the bug 30954910 */
                    

                     decode(ID.type_1099, 'MISC4', -1*(round(sum(decode(I.cancelled_amount,
                         null,ID.amount,decode(greatest(ID.accounting_date,:p_end_date+1),
                         ID.accounting_date,0,decode(least(ID.accounting_date,
						 :p_start_date-1),ID.accounting_date,0,ID.amount)))/
                    decode(I.invoice_amount,0,decode(I.cancelled_amount,
                         null,1,0,1,I.cancelled_amount),
                         decode(AP_UTILITIES_PKG.Net_Invoice_Amount(I.invoice_id),0,1,
                                      AP_UTILITIES_PKG.Net_Invoice_Amount(I.invoice_id)))
                        *decode(IP.amount, 0, decode(ip2.ip_count, 0, 1, 0), IP.amount)),2)), 0)  payment_total_w,

                     decode(ID.type_1099, 'MISC4', -1*(round(sum(decode(I.cancelled_amount,
                         null,ID.amount,decode(greatest(ID.accounting_date,:p_end_date+1),
                         ID.accounting_date,0,decode(least(ID.accounting_date,
						 :p_start_date-1),ID.accounting_date,0,ID.amount)))/
                    decode(I.invoice_amount,0,decode(I.cancelled_amount,
                         null,1,0,1,I.cancelled_amount),
                         decode(AP_UTILITIES_PKG.Net_Invoice_Amount(I.invoice_id),0,1,
                                      AP_UTILITIES_PKG.Net_Invoice_Amount(I.invoice_id)))
                    *DECODE(:p_conversion_rate_type,NULL,DECODE(NVL(IP.payment_base_amount,IP.amount), 0, DECODE(ip2.ip_count, 0, 1, 0),NVL(IP.payment_base_amount,IP.amount)),
                        DECODE(IP.payment_currency_code,'USD',NVL(IP.amount,0), NVL(IP.payment_base_amount,IP.amount)*GR.conversion_rate))),2)), 0)  usd_payment_total_w /* Added for the Bug 30510238 */ /*Modified for the bug 30954910 */




FROM    ap_income_tax_regions ITR,
               ap_reporting_entities_all RE,
               ap_reporting_entity_lines_all REL,
               AP_1099_TAPE_DATA_ALL TD,
               /* FUSION INITIATIVE CHANGES BEGIN po_vendors */ POZ_SUPPLIERS_V /* FUSION INITIATIVE CHANGES END*/ P, 
               gl_code_combinations CC,
               ap_invoices_all I,
               ap_checks_all C,
               /* FUSION INITIATIVE CHANGES BEGIN ap_bank_accounts */ CE_BANK_ACCOUNTS /* FUSION INITIATIVE CHANGES END*/ ABA,
               CE_BANK_ACCT_USES_ALL BAU, /*rchandan for bug#9709459*/
               ap_invoice_distributions_all ID,
               ap_invoice_payments_all IP,
                  
                 (SELECT distinct gdr.from_currency,  gdr.conversion_rate, gdr.conversion_Date
                    FROM gl_daily_rates gdr
                    WHERE gdr.conversion_date BETWEEN :p_start_date AND :p_end_date
                    AND  gdr.conversion_type= :p_conversion_rate_type
                    AND gdr.to_currency = 'USD'  
                    ) gr, ap_system_parameters_all asp, /*Added for the bug 30954910 */
               
                (
                   select invoice_id,count(decode(aip.amount,0,null,1)) ip_count
                   from   ap_invoice_payments_all aip
                   where  aip.accounting_date BETWEEN :p_start_date AND :p_end_date
                   group  by invoice_id
                 ) ip2	
WHERE   ID.income_tax_region = ITR.region_short_name (+)
AND	ID.POSTED_FLAG = 'Y'
--and        c.void_date is null  rchandan for bug#9709459
AND     (c.void_date is null 
         OR c.void_date NOT BETWEEN :p_start_date AND :p_end_date) --rchandan for bug#9709459
AND       (:p_input_region_short_name is null OR
                ID.income_tax_region = :p_input_region_short_name)
AND        P.vendor_id=I.vendor_id
AND	P.vendor_id=TD.vendor_id 
AND TD.org_id       = :P_BUSINESS_UNIT
AND      ((:p_fed_reportable = 'Y' and P.federal_reportable_flag = 'Y')
               OR (:p_fed_reportable = 'N' or :p_fed_reportable is null))
AND      I.invoice_id=IP.invoice_id
AND      I.invoice_id=ID.invoice_id
AND     C.check_id = IP.check_id
AND ip2.invoice_id = I.invoice_id
AND gr.from_currency(+) = asp.base_currency_code
and gr.conversion_date(+) = ip.accounting_date
and asp.org_id = ip.org_id    /*Added for the bug 30954910 */ 
/* FUSION INITIATIVE CHANGES BEGIN temporarily commented, bank_account_id not present.	
AND      C.bank_account_id = ABA.bank_account_id	
FUSION INITIATIVE CHANGES END*/
AND C.CE_BANK_ACCT_USE_ID = BAU.BANK_ACCT_USE_ID /*rchandan for bug#9709459*/
AND BAU.BANK_ACCOUNT_ID = ABA.BANK_ACCOUNT_ID /*rchandan for bug#9709459*/
AND      IP.accounting_date BETWEEN :p_start_date  AND      :p_end_date
/*AND      ID.accounting_date BETWEEN :p_start_date   AND    :p_end_date ---bug 12393629 16294327 */
AND      ID.type_1099 is not null
--AND     decode(:P_query_driver, 'INV', ID.dist_code_combination_id,
                       --ABA.asset_code_combination_id) = CC.code_combination_id
&LP_QUERY_DRIVER	---	 bug 5851995 6725024
AND      RE.tax_entity_id = :p_tax_entity_id
AND      RE.tax_entity_id = REL.tax_entity_id
AND      CC.chart_of_accounts_id = :C_CHART_ACCTS_ID
&C_DYNAMIC_SQL 
 and ID.type_1099=:Income_Tax_Type11 
 and P.vendor_id=:vendor_id8 
 and I.invoice_id=:invoice_id8
GROUP BY ID.type_1099, P.vendor_id,I.invoice_id,
                    I.invoice_amount
ORDER BY 1
--Q_TD_CHECK
SELECT  ID.type_1099,
      	P.vendor_id,
	I.invoice_id,
	 C.check_number,
	TO_CHAR(C.Check_date,'YYYY-MM-DD') Check_date
FROM    ap_income_tax_regions ITR,
               ap_reporting_entities_all RE,
               ap_reporting_entity_lines_all REL,
               AP_1099_TAPE_DATA_ALL TD,
               /* FUSION INITIATIVE CHANGES BEGIN po_vendors */ POZ_SUPPLIERS_V /* FUSION INITIATIVE CHANGES END*/ P, 
               gl_code_combinations CC,
               ap_invoices_all I,
               ap_checks_all C,
               /* FUSION INITIATIVE CHANGES BEGIN ap_bank_accounts */ CE_BANK_ACCOUNTS /* FUSION INITIATIVE CHANGES END*/ ABA,
               CE_BANK_ACCT_USES_ALL BAU, /*rchandan for bug#9709459*/
               ap_invoice_distributions_all ID,
               ap_invoice_payments_all IP
WHERE   ID.income_tax_region = ITR.region_short_name (+)
AND	ID.POSTED_FLAG = 'Y'
AND       (:p_input_region_short_name is null OR
                ID.income_tax_region = :p_input_region_short_name)
AND        P.vendor_id=I.vendor_id
--and        c.void_date is null  rchandan for bug#9709459
AND     (c.void_date is null 
         OR c.void_date NOT BETWEEN :p_start_date AND :p_end_date) --rchandan for bug#9709459
AND	P.vendor_id=TD.vendor_id 
AND TD.org_id       = :P_BUSINESS_UNIT
AND      ((:p_fed_reportable = 'Y' and P.federal_reportable_flag = 'Y')
               OR (:p_fed_reportable = 'N' or :p_fed_reportable is null))
AND      I.invoice_id=IP.invoice_id
AND      I.invoice_id=ID.invoice_id
AND     C.check_id = IP.check_id
/* FUSION INITIATIVE CHANGES BEGIN temporarily commented, bank_account_id not present.	
AND      C.bank_account_id = ABA.bank_account_id	
FUSION INITIATIVE CHANGES END*/
AND C.CE_BANK_ACCT_USE_ID = BAU.BANK_ACCT_USE_ID /*rchandan for bug#9709459*/
AND BAU.BANK_ACCOUNT_ID = ABA.BANK_ACCOUNT_ID /*rchandan for bug#9709459*/
AND      IP.accounting_date BETWEEN :p_start_date  AND      :p_end_date
/*AND      ID.accounting_date BETWEEN :p_start_date   AND     :p_end_date ---bug 12393629 16294327 */
AND      ID.type_1099 is not null
--AND     decode(:P_query_driver, 'INV', ID.dist_code_combination_id,
                       --ABA.asset_code_combination_id) = CC.code_combination_id
&LP_QUERY_DRIVER	---	 bug 5851995 6725024
AND      RE.tax_entity_id = :p_tax_entity_id
AND      RE.tax_entity_id = REL.tax_entity_id
AND      CC.chart_of_accounts_id = :C_CHART_ACCTS_ID
&C_DYNAMIC_SQL 
 and ID.type_1099=:Income_Tax_Type11 
 and I.invoice_id=:invoice_id8 
 and P.vendor_id=:vendor_id8
GROUP BY  ID.type_1099,
      	P.vendor_id,
	I.invoice_id,
	 C.check_number,
	C.Check_date 
ORDER BY 1
--Q_TYPE_DETAIL
SELECT  P.vendor_id,
	I.invoice_id,
	P.vendor_name,
                 P.segment1 Vendor_Number,
                 decode(replace(replace(PII.income_tax_id,'-',''),' ',''),'000000000','',PII.income_tax_id) Tax_ID_Number, 
                 pvs.vendor_site_code Tax_Reporting_Site,
                 ID.type_1099 Income_Tax_Type,
                 I.invoice_num,
                 TO_CHAR(I.invoice_date,'YYYY-MM-DD') invoice_date,
                 decode(I.invoice_amount,0,
                    decode(I.cancelled_amount,null,0,decode(greatest(I.cancelled_date,:p_end_date+1),
                        I.cancelled_date,I.cancelled_amount,I.invoice_amount)),
                        I.invoice_amount) invoice_amount
FROM    ap_income_tax_regions ITR,
               ap_reporting_entities_all RE,
               ap_reporting_entity_lines_all REL,
               AP_1099_TAPE_DATA_ALL TD,
               /* FUSION INITIATIVE CHANGES BEGIN po_vendors */ POZ_SUPPLIERS_V /* FUSION INITIATIVE CHANGES END*/ P,
               /* FUSION INITIATIVE CHANGES BEGIN po_vendor_sites */ POZ_SUPPLIER_SITES_V /* FUSION INITIATIVE CHANGES END*/ PVS,
               gl_code_combinations CC,
               ap_invoices_all I,
               ap_checks_all C,
               /* FUSION INITIATIVE CHANGES BEGIN ap_bank_accounts */ CE_BANK_ACCOUNTS /* FUSION INITIATIVE CHANGES END*/ ABA,
               ap_invoice_distributions_all ID,
               ap_invoice_payments_all IP,  -- Bug 1131150
	       CE_BANK_ACCT_USES_ALL BAU,  -- bug 8739088 by anupgupt
	       poz_suppliers_pii PII
WHERE   ID.income_tax_region = ITR.region_short_name (+)
AND	ID.POSTED_FLAG = 'Y'
AND     P.vendor_id = PII.vendor_id (+)
--and        c.void_date is null  --4480766  rchandan for bug#9709459
AND     (c.void_date is null 
         OR c.void_date NOT BETWEEN :p_start_date AND :p_end_date) --rchandan for bug#9709459
AND       (:p_input_region_short_name is null OR
                ID.income_tax_region = :p_input_region_short_name)
AND        P.vendor_id = PVS.vendor_id
and C.org_id = td.org_id
AND pvs.VENDOR_SITE_ID =
(SELECT min(pvs2.VENDOR_SITE_ID)
    FROM POZ_SITE_ASSIGNMENTS_ALL_M PVSA
       , POZ_SUPPLIER_SITES_V pvs2
   WHERE pvs2.VENDOR_SITE_ID          = PVSA.VENDOR_SITE_ID
     AND PVSA.BU_ID                   = TD.org_id
     AND pvs2.tax_reporting_site_flag = 'Y'
     AND pvs2.vendor_id               = p.vendor_id
)

AND        P.vendor_id=I.vendor_id
AND	P.vendor_id=TD.vendor_id 
AND TD.org_id       = :P_BUSINESS_UNIT
AND      ((:p_fed_reportable = 'Y' and P.federal_reportable_flag = 'Y')
               OR (:p_fed_reportable = 'N' or :p_fed_reportable is null))
AND      I.invoice_id=IP.invoice_id
AND      I.invoice_id=ID.invoice_id
AND     C.check_id  =  ip.check_id  --2670501
/* FUSION INITIATIVE CHANGES BEGIN temporarily commented, bank_account_id not present.	
AND      C.bank_account_id = ABA.bank_account_id	
FUSION INITIATIVE CHANGES END*/
AND      IP.accounting_date BETWEEN :p_start_date  AND      :p_end_date
/*AND      ID.accounting_date BETWEEN :p_start_date   AND    :p_end_date ---bug 12393629 16294327 */
AND      ID.type_1099 is not null
--AND     decode(:P_query_driver, 'INV', ID.dist_code_combination_id,
                       --ABA.asset_code_combination_id) = CC.code_combination_id
&LP_QUERY_DRIVER	---	 bug 5851995 6725024
AND      RE.tax_entity_id = :p_tax_entity_id
AND      RE.tax_entity_id = REL.tax_entity_id
AND      CC.chart_of_accounts_id =:C_CHART_ACCTS_ID
AND      C.ce_bank_acct_use_id = BAU.bank_acct_use_id  -- bug 8739088 by anupgupt
AND      BAU.bank_account_id = ABA.bank_account_id  -- bug 8739088 by anupgupt
&C_DYNAMIC_SQL 
GROUP BY  ID.type_1099,
        P.vendor_id,
	P.vendor_name,
        P.segment1  ,
        decode(replace(replace(PII.income_tax_id,'-',''),' ',''),'000000000','',PII.income_tax_id),
        pvs.vendor_site_code,
        I.invoice_id,
        I.invoice_num,
        I.invoice_date,
        decode(I.invoice_amount,0,
           decode(I.cancelled_amount,null,0,decode(greatest(I.cancelled_date,:p_end_date+1),
            I.cancelled_date,I.cancelled_amount,I.invoice_amount)),
            I.invoice_amount)
UNION
SELECT  P.vendor_id,
	I.invoice_id,
	P.vendor_name,
                 P.segment1 Vendor_Number,
                 decode(replace(replace(PII.income_tax_id,'-',''),' ',''),'000000000','',PII.income_tax_id) Tax_ID_Number, 
                 null Tax_Reporting_Site,
                 ID.type_1099 Income_Tax_Type,
                 I.invoice_num,
                 TO_CHAR(I.invoice_date,'YYYY-MM-DD') invoice_date,
                 decode(I.invoice_amount,0,
                    decode(I.cancelled_amount,null,0,decode(greatest(I.cancelled_date,:p_end_date+1),
                        I.cancelled_date,I.cancelled_amount,I.invoice_amount)),
                        I.invoice_amount) invoice_amount
FROM    ap_income_tax_regions ITR,
               ap_reporting_entities_all RE,
               ap_reporting_entity_lines_all REL,
                AP_1099_TAPE_DATA_ALL TD,
               /* FUSION INITIATIVE CHANGES BEGIN po_vendors */ POZ_SUPPLIERS_V /* FUSION INITIATIVE CHANGES END*/ P, 
               gl_code_combinations CC,
               ap_invoices_all I,
               ap_checks_all C,
               /* FUSION INITIATIVE CHANGES BEGIN ap_bank_accounts */ CE_BANK_ACCOUNTS /* FUSION INITIATIVE CHANGES END*/ ABA,
               CE_BANK_ACCT_USES_ALL BAU, /*rchandan for bug#9709459*/
               ap_invoice_distributions_all ID,
               ap_invoice_payments_all IP,  -- Bug 1131150
	       poz_suppliers_pii PII
WHERE   ID.income_tax_region = ITR.region_short_name (+)
AND	ID.POSTED_FLAG = 'Y'
AND     P.vendor_id = PII.vendor_id (+)
--and        c.void_date is null  --4480766  rchandan for bug#9709459
AND     (c.void_date is null 
         OR c.void_date NOT BETWEEN :p_start_date AND :p_end_date) --rchandan for bug#9709459
AND       (:p_input_region_short_name is null OR
                ID.income_tax_region = :p_input_region_short_name)
AND        not exists
  	(select  pvs.vendor_site_code
	from     /* FUSION INITIATIVE CHANGES BEGIN po_vendor_sites */ POZ_SUPPLIER_SITES_V /* FUSION INITIATIVE CHANGES END*/ pvs
	where  pvs.vendor_id = p.vendor_id)
AND        P.vendor_id=I.vendor_id
AND	P.vendor_id=TD.vendor_id 
AND TD.org_id       = :P_BUSINESS_UNIT
AND      ((:p_fed_reportable = 'Y' and P.federal_reportable_flag = 'Y')
               OR (:p_fed_reportable = 'N' or :p_fed_reportable is null))
AND      I.invoice_id=IP.invoice_id
AND      I.invoice_id=ID.invoice_id
AND     C.check_id  =  ip.check_id  --2675051
/* FUSION INITIATIVE CHANGES BEGIN temporarily commented, bank_account_id not present.	
AND      C.bank_account_id = ABA.bank_account_id	
FUSION INITIATIVE CHANGES END*/
AND C.CE_BANK_ACCT_USE_ID = BAU.BANK_ACCT_USE_ID /*rchandan for bug#9709459*/
AND BAU.BANK_ACCOUNT_ID = ABA.BANK_ACCOUNT_ID /*rchandan for bug#9709459*/
AND      IP.accounting_date BETWEEN :p_start_date  AND      :p_end_date
/*AND      ID.accounting_date BETWEEN :p_start_date   AND    :p_end_date ---bug 12393629 16294327 */
AND      ID.type_1099 is not null
--AND     decode(:P_query_driver, 'INV', ID.dist_code_combination_id,
                       --ABA.asset_code_combination_id) = CC.code_combination_id
&LP_QUERY_DRIVER	---	 bug 5851995 6725024
AND      RE.tax_entity_id = :p_tax_entity_id
AND      RE.tax_entity_id = REL.tax_entity_id
AND      CC.chart_of_accounts_id = :C_CHART_ACCTS_ID 
&C_DYNAMIC_SQL 
GROUP BY  ID.type_1099  ,
          P.vendor_id,
          P.vendor_name,
          P.segment1  ,
          decode(replace(replace(PII.income_tax_id,'-',''),' ',''),'000000000','',PII.income_tax_id), 
          I.invoice_id,
          I.invoice_num,
          I.invoice_date,
          decode(I.invoice_amount,0,
            decode(I.cancelled_amount,null,0,decode(greatest(I.cancelled_date,:p_end_date+1),
            I.cancelled_date,I.cancelled_amount,I.invoice_amount)),
            I.invoice_amount)
ORDER BY 7,3,8
--Q_TYPE_SUMMARY
SELECT    ID.type_1099 Income_Tax_Type,
  decode(ID.type_1099, 'MISC4',  -1*(sum(nvl(ID.amount,0))),
                                                     sum(nvl(ID.amount,0)))  ts_distribution_total,


decode(ID.TYPE_1099,'MISC1',:C_TS_MISC1,
                     'MISC2',:C_TS_MISC2,
                     'MISC3',:C_TS_MISC3,
                     'MISC4',:C_TS_MISC4,
                     'MISC5',:C_TS_MISC5,
                     'MISC6',:C_TS_MISC6,
                     'MISC7',:C_TS_MISC7,
                     'MISC8',:C_TS_MISC8,
                     'MISC9',:C_TS_MISC9,
                     'MISC10',:C_TS_MISC10,
                     'MISC11',:C_TS_MISC11, /*Added misc11 for Bug#32723706*/
                     'MISC13',:C_TS_MISC13,
                     'MISC14',:C_TS_MISC14,
                     NULL) ts_payment_total
FROM            ap_reporting_entity_lines_all REL,
                gl_code_combinations CC,
                ap_invoice_distributions_all ID,
                ap_invoices_all AI,
                /* FUSION INITIATIVE CHANGES BEGIN po_vendors */ POZ_SUPPLIERS_V /* FUSION INITIATIVE CHANGES END*/ P,
                AP_1099_TAPE_DATA_ALL TD,
                ap_checks_all C,
                /* FUSION INITIATIVE CHANGES BEGIN ap_bank_accounts_all */ CE_BANK_ACCOUNTS /* FUSION INITIATIVE CHANGES END*/ ABA,
                CE_BANK_ACCT_USES_ALL BAU, /*rchandan for bug#9709459*/
                ap_invoice_payments_all IP
WHERE    P.vendor_id = AI.vendor_id
AND	ID.POSTED_FLAG = 'Y'
--      and    c.void_date is null  rchandan for bug#9709459
AND     (c.void_date is null 
         OR c.void_date NOT BETWEEN :p_start_date AND :p_end_date) --rchandan for bug#9709459
      AND   P.vendor_id=TD.vendor_id 
	  AND TD.org_id       = :P_BUSINESS_UNIT
      AND C.ORG_ID       = TD.org_id 
      AND   (:p_input_region_short_name is null OR
                    ID.income_tax_region = :p_input_region_short_name)
      AND   ID.type_1099 is not null
      AND   IP.invoice_id = AI.invoice_id
      AND   ID.invoice_id = AI.invoice_id
      AND   C.check_id = IP.check_id
      /* FUSION INITIATIVE CHANGES BEGIN temporarily commented, bank_account_id not present.	
	  AND      C.bank_account_id = ABA.bank_account_id	
	  FUSION INITIATIVE CHANGES END*/
AND C.CE_BANK_ACCT_USE_ID = BAU.BANK_ACCT_USE_ID /*rchandan for bug#9709459*/
AND BAU.BANK_ACCOUNT_ID = ABA.BANK_ACCOUNT_ID /*rchandan for bug#9709459*/	  
      AND   IP.invoice_payment_id in
                   (SELECT  invoice_payment_id        
                       FROM  ap_invoice_payments_all IP1,
                              ap_checks_all c1                  
                     WHERE  IP1.invoice_id = AI.invoice_id
                          AND  IP1.check_id = c1.check_id 
                          AND  nvl(c1.void_date,:p_end_date+1) not between 
                                  :P_START_DATE and :P_END_DATE
                          AND  IP1.accounting_date BETWEEN :p_start_date AND  :p_end_date
                          AND  rownum = 1)
      AND   IP.accounting_date BETWEEN :p_start_date AND   :p_end_date
	/*  AND   ID.accounting_date BETWEEN :p_start_date   AND    :p_end_date ---bug 12393629 16294327 */
      AND   REL.tax_entity_id = :p_tax_entity_id
--AND     decode(:P_query_driver, 'INV', ID.dist_code_combination_id,
                       --ABA.asset_code_combination_id) = CC.code_combination_id
&LP_QUERY_DRIVER	---	 bug 5851995 6725024
    AND   CC.chart_of_accounts_id = :C_CHART_ACCTS_ID 

    and ID.type_1099 in ('MISC1', 'MISC2', 'MISC3', 'MISC4', 'MISC5', 'MISC6', 'MISC7', 'MISC8',
                                     'MISC9', 'MISC10','MISC11','MISC13','MISC14') /*Added misc11 for Bug#32723706*/
AND CC.segment1 = REL.balancing_segment_value
GROUP BY ID.type_1099
order by 1
--Q_SD_DISTRIBUTION
SELECT    ID.type_1099,
      	P.vendor_id,
	AI.invoice_id,
  
                decode(ID.type_1099, 'MISC4',  -1*(sum(nvl(ID.amount,0))), 
                                                                        sum(nvl(ID.amount,0))) sd_distribution_total
FROM        ap_reporting_entities_all RE,
                  ap_reporting_entity_lines_all REL,
                  gl_code_combinations CC,
                  ap_invoice_distributions_all ID,
                  ap_invoices_all AI,
                  /* FUSION INITIATIVE CHANGES BEGIN po_vendors */ POZ_SUPPLIERS_V /* FUSION INITIATIVE CHANGES END*/ P,
                  AP_1099_TAPE_DATA_ALL TD,
                  /* FUSION INITIATIVE CHANGES BEGIN ap_bank_accounts */ CE_BANK_ACCOUNTS /* FUSION INITIATIVE CHANGES END*/ ABA,
                  CE_BANK_ACCT_USES_ALL BAU, /*rchandan for bug#9709459*/
                  ap_checks_all C,
                  ap_invoice_payments_all IP
WHERE      P.vendor_id = AI.vendor_id
AND	ID.POSTED_FLAG = 'Y'
--      and        c.void_date is null  rchandan for bug#9709459
AND     (c.void_date is null 
         OR c.void_date NOT BETWEEN :p_start_date AND :p_end_date) --rchandan for bug#9709459
      AND     P.vendor_id=TD.vendor_id 
	  AND TD.org_id       = :P_BUSINESS_UNIT
      AND     (:p_input_region_short_name is null OR
                    ID.income_tax_region = :p_input_region_short_name)
      AND     ID.type_1099 is not null
      AND     ID.invoice_id = AI.invoice_id
      AND     IP.invoice_id = AI.invoice_id
      AND     C.check_id = IP.check_id
      /* FUSION INITIATIVE CHANGES BEGIN temporarily commented, bank_account_id not present.	
	  AND      C.bank_account_id = ABA.bank_account_id	
	  FUSION INITIATIVE CHANGES END*/
AND C.CE_BANK_ACCT_USE_ID = BAU.BANK_ACCT_USE_ID /*rchandan for bug#9709459*/
AND BAU.BANK_ACCOUNT_ID = ABA.BANK_ACCOUNT_ID /*rchandan for bug#9709459*/	  
      AND   IP.invoice_payment_id in
                   (SELECT  invoice_payment_id        
                       FROM  ap_invoice_payments_all IP1,
                                  ap_checks_all c1                  
                     WHERE  IP1.invoice_id = AI.invoice_id
                          AND  IP1.check_id = c1.check_id 
                          AND  nvl(c1.void_date,:p_end_date+1) not between :P_START_DATE and :P_END_DATE
                          AND  IP1.accounting_date BETWEEN :p_start_date AND  :p_end_date
                          AND  rownum = 1)
      AND     IP.accounting_date BETWEEN :p_start_date AND     :p_end_date
	/*  AND     ID.accounting_date BETWEEN :p_start_date   AND    :p_end_date ---bug 12393629 16294327 */
      AND     RE.tax_entity_id = :p_tax_entity_id
      AND     RE.tax_entity_id = REL.tax_entity_id
--AND     decode(:P_query_driver, 'INV', ID.dist_code_combination_id,
                       --ABA.asset_code_combination_id) = CC.code_combination_id
&LP_QUERY_DRIVER	---	 bug 5851995 6725024
      AND     CC.chart_of_accounts_id = :C_CHART_ACCTS_ID 
&C_DYNAMIC_SQL 
 and P.vendor_id=:VENDOR_ID111 
 and ID.type_1099=:Income_Tax_Type7 
 and AI.invoice_id=:INVOICE_ID111
GROUP BY P.vendor_id, ID.type_1099,AI.invoice_id
order by 1
--Q_SD_CHECK
SELECT   ID.type_1099,
      	P.vendor_id,
	I.invoice_id,
	C.check_number,
	TO_CHAR(C.Check_date,'YYYY-MM-DD') Check_date
FROM    ap_income_tax_regions ITR,
               ap_reporting_entities_all RE,
               ap_reporting_entity_lines_all REL,
               AP_1099_TAPE_DATA_ALL TD,
               /* FUSION INITIATIVE CHANGES BEGIN po_vendors */ POZ_SUPPLIERS_V /* FUSION INITIATIVE CHANGES END*/ P, 
               gl_code_combinations CC,
               ap_invoices_all I,
               ap_checks_all C,
               /* FUSION INITIATIVE CHANGES BEGIN ap_bank_accounts */ CE_BANK_ACCOUNTS /* FUSION INITIATIVE CHANGES END*/ ABA,
               CE_BANK_ACCT_USES_ALL BAU, /*rchandan for bug#9709459*/
               ap_invoice_distributions_all ID,
               ap_invoice_payments_all IP 
WHERE   ID.income_tax_region = ITR.region_short_name (+)
AND	ID.POSTED_FLAG = 'Y'
--and        c.void_date is null  rchandan for bug#9709459
AND     (c.void_date is null 
         OR c.void_date NOT BETWEEN :p_start_date AND :p_end_date) --rchandan for bug#9709459
AND       (:p_input_region_short_name is null OR
                ID.income_tax_region = :p_input_region_short_name)
AND        P.vendor_id=I.vendor_id
AND	P.vendor_id=TD.vendor_id 
AND TD.org_id       = :P_BUSINESS_UNIT
AND      ((:p_fed_reportable = 'Y' and P.federal_reportable_flag = 'Y')
               OR (:p_fed_reportable = 'N' or :p_fed_reportable is null))
AND      I.invoice_id=IP.invoice_id
AND      I.invoice_id=ID.invoice_id
AND     C.check_id = IP.check_id
/* FUSION INITIATIVE CHANGES BEGIN temporarily commented, bank_account_id not present.	
AND      C.bank_account_id = ABA.bank_account_id	
FUSION INITIATIVE CHANGES END*/
AND C.CE_BANK_ACCT_USE_ID = BAU.BANK_ACCT_USE_ID /*rchandan for bug#9709459*/
AND BAU.BANK_ACCOUNT_ID = ABA.BANK_ACCOUNT_ID /*rchandan for bug#9709459*/
AND      IP.accounting_date BETWEEN :p_start_date  AND      :p_end_date
/*AND      ID.accounting_date BETWEEN :p_start_date   AND    :p_end_date ---bug 12393629 16294327 */
AND      ID.type_1099 is not null
--AND     decode(:P_query_driver, 'INV', ID.dist_code_combination_id,
                       --ABA.asset_code_combination_id) = CC.code_combination_id
&LP_QUERY_DRIVER	---	 bug 5851995 6725024
AND      RE.tax_entity_id = :p_tax_entity_id
AND      RE.tax_entity_id = REL.tax_entity_id
AND      CC.chart_of_accounts_id = :C_CHART_ACCTS_ID
&C_DYNAMIC_SQL 
 and P.vendor_id=:vendor_id111 
 and I.invoice_id=:invoice_id111 
 and ID.type_1099=:Income_Tax_Type7
GROUP BY ID.type_1099,
      	P.vendor_id,
	I.invoice_id,
	 C.check_number,
	C.Check_date 
ORDER BY 1
--Q_SD_PAYMENT
SELECT    ID.type_1099,
      	P.vendor_id,
	I.invoice_id,

               decode(ID.type_1099, 'MISC4', -1*(round(sum(decode(I.cancelled_amount,
                         null,ID.amount,decode(greatest(ID.accounting_date,:p_end_date+1),
                         ID.accounting_date,0,decode(least(ID.accounting_date,
						 :p_start_date-1),ID.accounting_date,0,ID.amount)))/
                    decode(I.invoice_amount,0,decode(I.cancelled_amount,
                         null,1,0,1,I.cancelled_amount),
                         decode(AP_UTILITIES_PKG.Net_Invoice_Amount(I.invoice_id),0,1,
                                      AP_UTILITIES_PKG.Net_Invoice_Amount(I.invoice_id)))
                        *decode(IP.amount, 0, decode(ip2.ip_count, 0, 1, 0), IP.amount)),2)),
 round(sum(decode(I.cancelled_amount,
                         null,ID.amount,decode(greatest(ID.accounting_date,:p_end_date+1),
                         ID.accounting_date,0,decode(least(ID.accounting_date,
						 :p_start_date-1),ID.accounting_date,0,ID.amount)))/
                    decode(I.invoice_amount,0,decode(I.cancelled_amount,
                         null,1,0,1,I.cancelled_amount),
                         decode(AP_UTILITIES_PKG.Net_Invoice_Amount(I.invoice_id),0,1,
                                      AP_UTILITIES_PKG.Net_Invoice_Amount(I.invoice_id)))
                        *decode(IP.amount, 0, decode(ip2.ip_count, 0, 1, 0), IP.amount)),2))
 payment_total,


                      decode(ID.type_1099, 'MISC4', -1*(round(sum(decode(I.cancelled_amount,
                         null,ID.amount,decode(greatest(ID.accounting_date,:p_end_date+1),
                         ID.accounting_date,0,decode(least(ID.accounting_date,
						 :p_start_date-1),ID.accounting_date,0,ID.amount)))/
                    decode(I.invoice_amount,0,decode(I.cancelled_amount,
                         null,1,0,1,I.cancelled_amount),
                         decode(AP_UTILITIES_PKG.Net_Invoice_Amount(I.invoice_id),0,1,
                                      AP_UTILITIES_PKG.Net_Invoice_Amount(I.invoice_id)))
                        *DECODE(:p_conversion_rate_type,NULL,DECODE(NVL(IP.payment_base_amount,IP.amount), 0, DECODE(ip2.ip_count, 0, 1, 0),NVL(IP.payment_base_amount,IP.amount)),
                        DECODE(IP.payment_currency_code,'USD',NVL(IP.amount,0), NVL(IP.payment_base_amount,IP.amount)*GR.conversion_rate))),2)),
 round(sum(decode(I.cancelled_amount,
                         null,ID.amount,decode(greatest(ID.accounting_date,:p_end_date+1),
                         ID.accounting_date,0,decode(least(ID.accounting_date,
						 :p_start_date-1),ID.accounting_date,0,ID.amount)))/
                    decode(I.invoice_amount,0,decode(I.cancelled_amount,
                         null,1,0,1,I.cancelled_amount),
                         decode(AP_UTILITIES_PKG.Net_Invoice_Amount(I.invoice_id),0,1,
                                      AP_UTILITIES_PKG.Net_Invoice_Amount(I.invoice_id)))
                        *DECODE(:p_conversion_rate_type,NULL,DECODE(NVL(IP.payment_base_amount,IP.amount), 0, DECODE(ip2.ip_count, 0, 1, 0),NVL(IP.payment_base_amount,IP.amount)),
                        DECODE(IP.payment_currency_code,'USD',NVL(IP.amount,0), NVL(IP.payment_base_amount,IP.amount)*GR.conversion_rate))),2)) usd_payment_total,  /* Added for the Bug 30510238 */ /*Modified for the bug 30954910 */



decode(ID.type_1099, 'MISC4', -1*(round(sum(decode(I.cancelled_amount,
                         null,ID.amount,decode(greatest(ID.accounting_date,:p_end_date+1),
                         ID.accounting_date,0,decode(least(ID.accounting_date,
						 :p_start_date-1),ID.accounting_date,0,ID.amount)))/
                    decode(I.invoice_amount,0,decode(I.cancelled_amount,
                         null,1,0,1,I.cancelled_amount),
                         decode(AP_UTILITIES_PKG.Net_Invoice_Amount(I.invoice_id),0,1,
                                      AP_UTILITIES_PKG.Net_Invoice_Amount(I.invoice_id)))
                        *decode(IP.amount, 0, decode(ip2.ip_count, 0, 1, 0), IP.amount)),2)),  0)   payment_total_w,


decode(ID.type_1099, 'MISC4', -1*(round(sum(decode(I.cancelled_amount,
                         null,ID.amount,decode(greatest(ID.accounting_date,:p_end_date+1),
                         ID.accounting_date,0,decode(least(ID.accounting_date,
						 :p_start_date-1),ID.accounting_date,0,ID.amount)))/
                    decode(I.invoice_amount,0,decode(I.cancelled_amount,
                         null,1,0,1,I.cancelled_amount),
                         decode(AP_UTILITIES_PKG.Net_Invoice_Amount(I.invoice_id),0,1,
                                      AP_UTILITIES_PKG.Net_Invoice_Amount(I.invoice_id)))
                        *DECODE(:p_conversion_rate_type,NULL,DECODE(NVL(IP.payment_base_amount,IP.amount), 0, DECODE(ip2.ip_count, 0, 1, 0),NVL(IP.payment_base_amount,IP.amount)),
                        DECODE(IP.payment_currency_code,'USD',NVL(IP.amount,0), NVL(IP.payment_base_amount,IP.amount)*GR.conversion_rate))),2)),  0) usd_payment_total_w /* Added for the Bug 30510238 */ /*Modified for the bug 30954910 */


FROM    ap_income_tax_regions ITR,
               ap_reporting_entities_all RE,
               ap_reporting_entity_lines_all REL,
               AP_1099_TAPE_DATA_ALL TD,
               /* FUSION INITIATIVE CHANGES BEGIN po_vendors */ POZ_SUPPLIERS_V /* FUSION INITIATIVE CHANGES END*/ P, 
               gl_code_combinations CC,
               ap_invoices_all I,
               ap_checks_all C,
               /* FUSION INITIATIVE CHANGES BEGIN ap_bank_accounts */ CE_BANK_ACCOUNTS /* FUSION INITIATIVE CHANGES END*/ ABA,
               CE_BANK_ACCT_USES_ALL BAU, /*rchandan for bug#9709459*/
               ap_invoice_distributions_all ID,
               ap_invoice_payments_all IP,
               (SELECT distinct gdr.from_currency,  gdr.conversion_rate, gdr.conversion_Date
                    FROM gl_daily_rates gdr
                    WHERE gdr.conversion_date BETWEEN :p_start_date AND :p_end_date
                    AND  gdr.conversion_type= :p_conversion_rate_type
                    AND gdr.to_currency = 'USD'  
                    ) gr, ap_system_parameters_all asp,      /*Added for the bug 30954910 */
              
                (
                   select invoice_id,count(decode(aip.amount,0,null,1)) ip_count
                   from   ap_invoice_payments_all aip
                   where  aip.accounting_date BETWEEN :p_start_date AND :p_end_date
                   group  by invoice_id
                 ) ip2
WHERE   ID.income_tax_region = ITR.region_short_name (+)
AND	ID.POSTED_FLAG = 'Y'
--and        c.void_date is null  rchandan for bug#9709459
AND     (c.void_date is null 
         OR c.void_date NOT BETWEEN :p_start_date AND :p_end_date) --rchandan for bug#9709459
AND       (:p_input_region_short_name is null OR
                ID.income_tax_region = :p_input_region_short_name)
AND        P.vendor_id=I.vendor_id
AND	P.vendor_id=TD.vendor_id 
AND TD.org_id       = :P_BUSINESS_UNIT
AND      ((:p_fed_reportable = 'Y' and P.federal_reportable_flag = 'Y')
               OR (:p_fed_reportable = 'N' or :p_fed_reportable is null))
AND      I.invoice_id=IP.invoice_id
AND      I.invoice_id=ID.invoice_id
AND     C.check_id = IP.check_id
AND ip2.invoice_id = I.invoice_id
 AND gr.from_currency(+) = asp.base_currency_code
and gr.conversion_date(+) = ip.accounting_date
and asp.org_id = ip.org_id    /*Added for the bug 30954910 */
/* FUSION INITIATIVE CHANGES BEGIN temporarily commented, bank_account_id not present.	
AND      C.bank_account_id = ABA.bank_account_id	
FUSION INITIATIVE CHANGES END*/
AND C.CE_BANK_ACCT_USE_ID = BAU.BANK_ACCT_USE_ID /*rchandan for bug#9709459*/
AND BAU.BANK_ACCOUNT_ID = ABA.BANK_ACCOUNT_ID /*rchandan for bug#9709459*/
AND      IP.accounting_date BETWEEN :p_start_date   AND      :p_end_date
/*AND      ID.accounting_date BETWEEN :p_start_date   AND    :p_end_date ---bug 12393629 16294327 */
AND      ID.type_1099 is not null
--AND     decode(:P_query_driver, 'INV', ID.dist_code_combination_id,
                       --ABA.asset_code_combination_id) = CC.code_combination_id
&LP_QUERY_DRIVER	---	 bug 5851995 6725024
AND      RE.tax_entity_id = :p_tax_entity_id
AND      RE.tax_entity_id = REL.tax_entity_id
AND      CC.chart_of_accounts_id = :C_CHART_ACCTS_ID
&C_DYNAMIC_SQL 
 and P.vendor_id=:vendor_id111 
 and I.invoice_id=:invoice_id111 
 and ID.type_1099=:Income_Tax_Type7
GROUP BY P.vendor_id, ID.type_1099,I.invoice_num,I.invoice_id,
                     I.invoice_date 
ORDER BY 4
--Q_SUPPLIER_DETAIL
SELECT    P.vendor_id,
                 I.invoice_id,
                 P.vendor_name,
                 P.segment1 Vendor_Number,
                 P.tax_reporting_name tax_reporting_name,
                 decode(replace(replace(PII.income_tax_id,'-',''),' ',''),'000000000','',PII.income_tax_id) Tax_ID_Number, 
                 pvs.vendor_site_code Tax_Reporting_Site,
                 (SUBSTR(nvl(PVS.address_line1,'')||' '||nvl(PVS.address_line2,' ')||' '||
                 nvl(PVS.address_line3,' '),1,30)||' '||nvl(PVS.city,'')||', '||nvl(PVS.STATE,'')||'   '||nvl(PVS.zip,'')) 		address,
                 ID.type_1099 Income_Tax_Type,
                 I.invoice_num,
                 TO_CHAR(I.invoice_date,'YYYY-MM-DD') invoice_date,
                 decode(I.invoice_amount,0,
                    decode(I.cancelled_amount,null,0,decode(greatest(I.cancelled_date,:p_end_date+1),
                        I.cancelled_date,I.cancelled_amount,I.invoice_amount)),
                        I.invoice_amount) invoice_amount
FROM     ap_reporting_entities_all RE,
               ap_reporting_entity_lines_all REL,
               AP_1099_TAPE_DATA_ALL TD,
               /* FUSION INITIATIVE CHANGES BEGIN po_vendors */ POZ_SUPPLIERS_V /* FUSION INITIATIVE CHANGES END*/ P,
               /* FUSION INITIATIVE CHANGES BEGIN po_vendor_sites */ POZ_SUPPLIER_SITES_V /* FUSION INITIATIVE CHANGES END*/ PVS,
               gl_code_combinations CC,
               ap_invoices_all I,
               ap_checks_all C,
               /* FUSION INITIATIVE CHANGES BEGIN ap_bank_accounts */ CE_BANK_ACCOUNTS /* FUSION INITIATIVE CHANGES END*/ ABA,
               ap_invoice_distributions_all ID,
               ap_invoice_payments_all IP,  -- Bug 1131150
	       CE_BANK_ACCT_USES_ALL BAU,  -- bug 8739088 by anupgupt
	       poz_suppliers_pii PII
WHERE    (:p_input_region_short_name is null OR
                ID.income_tax_region = :p_input_region_short_name)
AND	ID.POSTED_FLAG = 'Y'
AND     P.vendor_id = PII.vendor_id (+)
AND        P.vendor_id = PVS.vendor_id
--and        c.void_date is null  --4480766  rchandan for bug#9709459
AND     (c.void_date is null 
         OR c.void_date NOT BETWEEN :p_start_date AND :p_end_date) --rchandan for bug#9709459
and C.org_id = td.org_id
AND pvs.VENDOR_SITE_ID =
(SELECT min(pvs2.VENDOR_SITE_ID)
    FROM POZ_SITE_ASSIGNMENTS_ALL_M PVSA
       , POZ_SUPPLIER_SITES_V pvs2
   WHERE pvs2.VENDOR_SITE_ID          = PVSA.VENDOR_SITE_ID
     AND PVSA.BU_ID                   = TD.org_id
     AND pvs2.tax_reporting_site_flag = 'Y'
     AND pvs2.vendor_id               = p.vendor_id
)
AND        P.vendor_id=I.vendor_id
AND	P.vendor_id=TD.vendor_id 
AND TD.org_id       = :P_BUSINESS_UNIT
AND      ((:p_fed_reportable = 'Y' and P.federal_reportable_flag = 'Y')
               OR (:p_fed_reportable = 'N' or :p_fed_reportable is null))
AND      I.invoice_id=IP.invoice_id
AND      I.invoice_id=ID.invoice_id
AND     C.check_id =  ip.check_id   --2670501
/* FUSION INITIATIVE CHANGES BEGIN temporarily commented, bank_account_id not present.	
AND      C.bank_account_id = ABA.bank_account_id	
FUSION INITIATIVE CHANGES END*/
AND      IP.accounting_date BETWEEN :p_start_date   AND      :p_end_date
/*AND      ID.accounting_date BETWEEN :p_start_date   AND      :p_end_date ---bug 12393629 16294327 */
AND      ID.type_1099 is not null
--AND     decode(:P_query_driver, 'INV', ID.dist_code_combination_id,
                       --ABA.asset_code_combination_id) = CC.code_combination_id
&LP_QUERY_DRIVER	---	 bug 5851995 6725024
AND      RE.tax_entity_id = :p_tax_entity_id
AND      RE.tax_entity_id = REL.tax_entity_id
AND      CC.chart_of_accounts_id = :C_CHART_ACCTS_ID
AND      C.ce_bank_acct_use_id = BAU.bank_acct_use_id  -- bug 8739088 by anupgupt
AND      BAU.bank_account_id = ABA.bank_account_id  -- bug 8739088 by anupgupt
&LP_VENDOR_ID 
&C_DYNAMIC_SQL 
GROUP BY  P.vendor_id, 
	P.segment1,
	P.vendor_name,
	P.tax_reporting_name,
	decode(replace(replace(PII.income_tax_id,'-',''),' ',''),'000000000','',PII.income_tax_id), 
                   PVS.vendor_site_id,
	PVS.vendor_site_code,
                  	ID.type_1099,
                  (SUBSTR(nvl(PVS.address_line1,'')||' '||nvl(PVS.address_line2,' ')||' '||
                  nvl(PVS.address_line3,' '),1,30)||' '||nvl(PVS.city,'')||', '||nvl(PVS.STATE,'')||'   '||nvl(PVS.zip,'')) ,	                  I.invoice_id,
                  I.invoice_num,
                  I.invoice_date,
                  decode(I.invoice_amount,0,
                    decode(I.cancelled_amount,null,0,decode(greatest(I.cancelled_date,:p_end_date+1),
                        I.cancelled_date,I.cancelled_amount,I.invoice_amount)),
                        I.invoice_amount)
UNION

SELECT    P.vendor_id,
                 I.invoice_id,
                 P.vendor_name,
                 P.segment1 Vendor_Number,
                 P.tax_reporting_name,
                decode(replace(replace(PII.income_tax_id,'-',''),' ',''),'000000000','',PII.income_tax_id) Tax_ID_Number,
                null tax_reporting_site,
                null address ,
                 ID.type_1099 Income_Tax_Type,
                 I.invoice_num,
                 TO_CHAR(I.invoice_date,'YYYY-MM-DD') invoice_date,
                 decode(I.invoice_amount,0,
                    decode(I.cancelled_amount,null,0,decode(greatest(I.cancelled_date,:p_end_date+1),
                        I.cancelled_date,I.cancelled_amount,I.invoice_amount)),
                        I.invoice_amount) invoice_amount
FROM    ap_income_tax_regions ITR,
               ap_reporting_entities_all RE,
               ap_reporting_entity_lines_all REL,
               AP_1099_TAPE_DATA_ALL TD,
               /* FUSION INITIATIVE CHANGES BEGIN po_vendors */ POZ_SUPPLIERS_V /* FUSION INITIATIVE CHANGES END*/ P, 
               gl_code_combinations CC,
               ap_invoices_all I,
               ap_checks_all C,
               /* FUSION INITIATIVE CHANGES BEGIN ap_bank_accounts */ CE_BANK_ACCOUNTS /* FUSION INITIATIVE CHANGES END*/ ABA,
               CE_BANK_ACCT_USES_ALL BAU, /*rchandan for bug#9709459*/
               ap_invoice_distributions_all ID,
               ap_invoice_payments_all IP,  -- Bug 1131150
	       poz_suppliers_pii PII
WHERE   ID.income_tax_region = ITR.region_short_name (+)
AND	ID.POSTED_FLAG = 'Y'
AND     P.vendor_id = PII.vendor_id (+)

--and        c.void_date is null  --4480766  rchandan for bug#9709459
AND     (c.void_date is null 
         OR c.void_date NOT BETWEEN :p_start_date AND :p_end_date) --rchandan for bug#9709459
AND       (:p_input_region_short_name is null OR
                ID.income_tax_region = :p_input_region_short_name)
AND         not exists
	(select    vendor_id
	  from      /* FUSION INITIATIVE CHANGES BEGIN po_vendor_sites */ POZ_SUPPLIER_SITES_V /* FUSION INITIATIVE CHANGES END*/
	 where    vendor_id = p.vendor_id)
AND        P.vendor_id=I.vendor_id
AND	P.vendor_id=TD.vendor_id 
AND TD.org_id       = :P_BUSINESS_UNIT
AND      ((:p_fed_reportable = 'Y' and P.federal_reportable_flag = 'Y')
               OR (:p_fed_reportable = 'N' or :p_fed_reportable is null))
AND      I.invoice_id=IP.invoice_id
AND      I.invoice_id=ID.invoice_id
AND     C.check_id = IP.check_id
/* FUSION INITIATIVE CHANGES BEGIN temporarily commented, bank_account_id not present.	
AND      C.bank_account_id = ABA.bank_account_id	
FUSION INITIATIVE CHANGES END*/
AND C.CE_BANK_ACCT_USE_ID = BAU.BANK_ACCT_USE_ID /*rchandan for bug#9709459*/
AND BAU.BANK_ACCOUNT_ID = ABA.BANK_ACCOUNT_ID /*rchandan for bug#9709459*/
AND      IP.accounting_date BETWEEN :p_start_date   AND      :p_end_date
/* AND      ID.accounting_date BETWEEN :p_start_date   AND    :p_end_date ---bug 12393629 16294327 */
AND      ID.type_1099 is not null
--AND     decode(:P_query_driver, 'INV', ID.dist_code_combination_id,
                       --ABA.asset_code_combination_id) = CC.code_combination_id
&LP_QUERY_DRIVER	---	 bug 5851995 6725024
AND      RE.tax_entity_id = :p_tax_entity_id
AND      RE.tax_entity_id = REL.tax_entity_id
AND      CC.chart_of_accounts_id = :C_CHART_ACCTS_ID 
&C_DYNAMIC_SQL 
&LP_VENDOR_ID 
GROUP BY  P.vendor_id,
	P.segment1,                
	P.vendor_name,
	P.tax_reporting_name,
            	ID.type_1099,
                  decode(replace(replace(PII.income_tax_id,'-',''),' ',''),'000000000','',PII.income_tax_id), 
	I.invoice_id,
                  I.invoice_num,
                  I.invoice_date,
                 decode(I.invoice_amount,0,
                    decode(I.cancelled_amount,null,0,decode(greatest(I.cancelled_date,:p_end_date+1),
                        I.cancelled_date,I.cancelled_amount,I.invoice_amount)),
                        I.invoice_amount)

ORDER BY 5,3,9,10SELECT    P.vendor_id,
                 I.invoice_id,
                 P.vendor_name,
                 P.segment1 Vendor_Number,
                 P.tax_reporting_name tax_reporting_name,
                 decode(replace(replace(PII.income_tax_id,'-',''),' ',''),'000000000','',PII.income_tax_id) Tax_ID_Number, 
                 pvs.vendor_site_code Tax_Reporting_Site,
                 (SUBSTR(nvl(PVS.address_line1,'')||' '||nvl(PVS.address_line2,' ')||' '||
                 nvl(PVS.address_line3,' '),1,30)||' '||nvl(PVS.city,'')||', '||nvl(PVS.STATE,'')||'   '||nvl(PVS.zip,'')) 		address,
                 ID.type_1099 Income_Tax_Type,
                 I.invoice_num,
                 TO_CHAR(I.invoice_date,'YYYY-MM-DD') invoice_date,
                 decode(I.invoice_amount,0,
                    decode(I.cancelled_amount,null,0,decode(greatest(I.cancelled_date,:p_end_date+1),
                        I.cancelled_date,I.cancelled_amount,I.invoice_amount)),
                        I.invoice_amount) invoice_amount
FROM     ap_reporting_entities_all RE,
               ap_reporting_entity_lines_all REL,
               AP_1099_TAPE_DATA_ALL TD,
               /* FUSION INITIATIVE CHANGES BEGIN po_vendors */ POZ_SUPPLIERS_V /* FUSION INITIATIVE CHANGES END*/ P,
               /* FUSION INITIATIVE CHANGES BEGIN po_vendor_sites */ POZ_SUPPLIER_SITES_V /* FUSION INITIATIVE CHANGES END*/ PVS,
               gl_code_combinations CC,
               ap_invoices_all I,
               ap_checks_all C,
               /* FUSION INITIATIVE CHANGES BEGIN ap_bank_accounts */ CE_BANK_ACCOUNTS /* FUSION INITIATIVE CHANGES END*/ ABA,
               ap_invoice_distributions_all ID,
               ap_invoice_payments_all IP,  -- Bug 1131150
	       CE_BANK_ACCT_USES_ALL BAU,  -- bug 8739088 by anupgupt
	       poz_suppliers_pii PII
WHERE    (:p_input_region_short_name is null OR
                ID.income_tax_region = :p_input_region_short_name)
AND	ID.POSTED_FLAG = 'Y'
AND     P.vendor_id = PII.vendor_id (+)
AND        P.vendor_id = PVS.vendor_id
--and        c.void_date is null  --4480766  rchandan for bug#9709459
AND     (c.void_date is null 
         OR c.void_date NOT BETWEEN :p_start_date AND :p_end_date) --rchandan for bug#9709459
and C.org_id = td.org_id
AND pvs.VENDOR_SITE_ID =
(SELECT min(pvs2.VENDOR_SITE_ID)
    FROM POZ_SITE_ASSIGNMENTS_ALL_M PVSA
       , POZ_SUPPLIER_SITES_V pvs2
   WHERE pvs2.VENDOR_SITE_ID          = PVSA.VENDOR_SITE_ID
     AND PVSA.BU_ID                   = TD.org_id
     AND pvs2.tax_reporting_site_flag = 'Y'
     AND pvs2.vendor_id               = p.vendor_id
)
AND        P.vendor_id=I.vendor_id
AND	P.vendor_id=TD.vendor_id 
AND TD.org_id       = :P_BUSINESS_UNIT
AND      ((:p_fed_reportable = 'Y' and P.federal_reportable_flag = 'Y')
               OR (:p_fed_reportable = 'N' or :p_fed_reportable is null))
AND      I.invoice_id=IP.invoice_id
AND      I.invoice_id=ID.invoice_id
AND     C.check_id =  ip.check_id   --2670501
/* FUSION INITIATIVE CHANGES BEGIN temporarily commented, bank_account_id not present.	
AND      C.bank_account_id = ABA.bank_account_id	
FUSION INITIATIVE CHANGES END*/
AND      IP.accounting_date BETWEEN :p_start_date   AND      :p_end_date
/*AND      ID.accounting_date BETWEEN :p_start_date   AND      :p_end_date ---bug 12393629 16294327 */
AND      ID.type_1099 is not null
--AND     decode(:P_query_driver, 'INV', ID.dist_code_combination_id,
                       --ABA.asset_code_combination_id) = CC.code_combination_id
&LP_QUERY_DRIVER	---	 bug 5851995 6725024
AND      RE.tax_entity_id = :p_tax_entity_id
AND      RE.tax_entity_id = REL.tax_entity_id
AND      CC.chart_of_accounts_id = :C_CHART_ACCTS_ID
AND      C.ce_bank_acct_use_id = BAU.bank_acct_use_id  -- bug 8739088 by anupgupt
AND      BAU.bank_account_id = ABA.bank_account_id  -- bug 8739088 by anupgupt
&LP_VENDOR_ID 
&C_DYNAMIC_SQL 
GROUP BY  P.vendor_id, 
	P.segment1,
	P.vendor_name,
	P.tax_reporting_name,
	decode(replace(replace(PII.income_tax_id,'-',''),' ',''),'000000000','',PII.income_tax_id), 
                   PVS.vendor_site_id,
	PVS.vendor_site_code,
                  	ID.type_1099,
                  (SUBSTR(nvl(PVS.address_line1,'')||' '||nvl(PVS.address_line2,' ')||' '||
                  nvl(PVS.address_line3,' '),1,30)||' '||nvl(PVS.city,'')||', '||nvl(PVS.STATE,'')||'   '||nvl(PVS.zip,'')) ,	                  I.invoice_id,
                  I.invoice_num,
                  I.invoice_date,
                  decode(I.invoice_amount,0,
                    decode(I.cancelled_amount,null,0,decode(greatest(I.cancelled_date,:p_end_date+1),
                        I.cancelled_date,I.cancelled_amount,I.invoice_amount)),
                        I.invoice_amount)
UNION

SELECT    P.vendor_id,
                 I.invoice_id,
                 P.vendor_name,
                 P.segment1 Vendor_Number,
                 P.tax_reporting_name,
                decode(replace(replace(PII.income_tax_id,'-',''),' ',''),'000000000','',PII.income_tax_id) Tax_ID_Number,
                null tax_reporting_site,
                null address ,
                 ID.type_1099 Income_Tax_Type,
                 I.invoice_num,
                 TO_CHAR(I.invoice_date,'YYYY-MM-DD') invoice_date,
                 decode(I.invoice_amount,0,
                    decode(I.cancelled_amount,null,0,decode(greatest(I.cancelled_date,:p_end_date+1),
                        I.cancelled_date,I.cancelled_amount,I.invoice_amount)),
                        I.invoice_amount) invoice_amount
FROM    ap_income_tax_regions ITR,
               ap_reporting_entities_all RE,
               ap_reporting_entity_lines_all REL,
               AP_1099_TAPE_DATA_ALL TD,
               /* FUSION INITIATIVE CHANGES BEGIN po_vendors */ POZ_SUPPLIERS_V /* FUSION INITIATIVE CHANGES END*/ P, 
               gl_code_combinations CC,
               ap_invoices_all I,
               ap_checks_all C,
               /* FUSION INITIATIVE CHANGES BEGIN ap_bank_accounts */ CE_BANK_ACCOUNTS /* FUSION INITIATIVE CHANGES END*/ ABA,
               CE_BANK_ACCT_USES_ALL BAU, /*rchandan for bug#9709459*/
               ap_invoice_distributions_all ID,
               ap_invoice_payments_all IP,  -- Bug 1131150
	       poz_suppliers_pii PII
WHERE   ID.income_tax_region = ITR.region_short_name (+)
AND	ID.POSTED_FLAG = 'Y'
AND     P.vendor_id = PII.vendor_id (+)

--and        c.void_date is null  --4480766  rchandan for bug#9709459
AND     (c.void_date is null 
         OR c.void_date NOT BETWEEN :p_start_date AND :p_end_date) --rchandan for bug#9709459
AND       (:p_input_region_short_name is null OR
                ID.income_tax_region = :p_input_region_short_name)
AND         not exists
	(select    vendor_id
	  from      /* FUSION INITIATIVE CHANGES BEGIN po_vendor_sites */ POZ_SUPPLIER_SITES_V /* FUSION INITIATIVE CHANGES END*/
	 where    vendor_id = p.vendor_id)
AND        P.vendor_id=I.vendor_id
AND	P.vendor_id=TD.vendor_id 
AND TD.org_id       = :P_BUSINESS_UNIT
AND      ((:p_fed_reportable = 'Y' and P.federal_reportable_flag = 'Y')
               OR (:p_fed_reportable = 'N' or :p_fed_reportable is null))
AND      I.invoice_id=IP.invoice_id
AND      I.invoice_id=ID.invoice_id
AND     C.check_id = IP.check_id
/* FUSION INITIATIVE CHANGES BEGIN temporarily commented, bank_account_id not present.	
AND      C.bank_account_id = ABA.bank_account_id	
FUSION INITIATIVE CHANGES END*/
AND C.CE_BANK_ACCT_USE_ID = BAU.BANK_ACCT_USE_ID /*rchandan for bug#9709459*/
AND BAU.BANK_ACCOUNT_ID = ABA.BANK_ACCOUNT_ID /*rchandan for bug#9709459*/
AND      IP.accounting_date BETWEEN :p_start_date   AND      :p_end_date
/* AND      ID.accounting_date BETWEEN :p_start_date   AND    :p_end_date ---bug 12393629 16294327 */
AND      ID.type_1099 is not null
--AND     decode(:P_query_driver, 'INV', ID.dist_code_combination_id,
                       --ABA.asset_code_combination_id) = CC.code_combination_id
&LP_QUERY_DRIVER	---	 bug 5851995 6725024
AND      RE.tax_entity_id = :p_tax_entity_id
AND      RE.tax_entity_id = REL.tax_entity_id
AND      CC.chart_of_accounts_id = :C_CHART_ACCTS_ID 
&C_DYNAMIC_SQL 
&LP_VENDOR_ID 
GROUP BY  P.vendor_id,
	P.segment1,                
	P.vendor_name,
	P.tax_reporting_name,
            	ID.type_1099,
                  decode(replace(replace(PII.income_tax_id,'-',''),' ',''),'000000000','',PII.income_tax_id), 
	I.invoice_id,
                  I.invoice_num,
                  I.invoice_date,
                 decode(I.invoice_amount,0,
                    decode(I.cancelled_amount,null,0,decode(greatest(I.cancelled_date,:p_end_date+1),
                        I.cancelled_date,I.cancelled_amount,I.invoice_amount)),
                        I.invoice_amount)

ORDER BY 5,3,9,10
--Q_SS_DISTRIBUTION
SELECT    P.segment1 vendor_num,
	P.vendor_name vendor_name,
   
                  sum(nvl(ID.amount,0)) ss_distribution_total ,
         ID.type_1099 income_tax_type
FROM       AP_1099_TAPE_DATA_ALL TD,
                 ap_reporting_entities_all RE,
                 ap_reporting_entity_lines_all REL,
                 gl_code_combinations CC,
                 ap_invoice_distributions_all ID,
                 ap_invoices_all AI,
                 /* FUSION INITIATIVE CHANGES BEGIN po_vendors */ POZ_SUPPLIERS_V /* FUSION INITIATIVE CHANGES END*/ P,
                 /* FUSION INITIATIVE CHANGES BEGIN ap_bank_accounts */ CE_BANK_ACCOUNTS /* FUSION INITIATIVE CHANGES END*/ ABA,
                 CE_BANK_ACCT_USES_ALL BAU, /*rchandan for bug#9709459*/
                 ap_checks_all C,
                 ap_invoice_payments_all IP
WHERE    P.vendor_id = AI.vendor_id
AND	ID.POSTED_FLAG = 'Y'
--      and        c.void_date is null  rchandan for bug#9709459
AND     (c.void_date is null 
         OR c.void_date NOT BETWEEN :p_start_date AND :p_end_date) --rchandan for bug#9709459
      AND   P.vendor_id=TD.vendor_id 
	  AND TD.org_id       = :P_BUSINESS_UNIT
      AND C.ORG_ID       = TD.org_id     --BUG 26564189
      AND   (:p_input_region_short_name is null OR
                 ID.income_tax_region = :p_input_region_short_name)
      AND   ID.type_1099 is not null
     AND   ID.type_1099  <> 'MISC4'
      AND   AI.invoice_id = IP.invoice_id
      AND   ID.invoice_id = AI.invoice_id
      AND   C.check_id = IP.check_id
      /* FUSION INITIATIVE CHANGES BEGIN temporarily commented, bank_account_id not present.	
	  AND      C.bank_account_id = ABA.bank_account_id	
	  FUSION INITIATIVE CHANGES END*/
AND C.CE_BANK_ACCT_USE_ID = BAU.BANK_ACCT_USE_ID /*rchandan for bug#9709459*/
AND BAU.BANK_ACCOUNT_ID = ABA.BANK_ACCOUNT_ID /*rchandan for bug#9709459*/	  
      AND   IP.invoice_payment_id in
                   (SELECT  invoice_payment_id        
                       FROM  ap_invoice_payments_all IP1,
                                  ap_checks_all c1                  
                     WHERE  IP1.invoice_id = AI.invoice_id
                          AND  IP1.check_id = c1.check_id 
                          AND  nvl(c1.void_date,:p_end_date+1) not between :P_START_DATE and :P_END_DATE
                          AND  IP1.accounting_date BETWEEN :p_start_date AND  :p_end_date
                          AND  rownum = 1)
      AND   IP.accounting_date BETWEEN :p_start_date   AND   :p_end_date
	/*  AND   ID.accounting_date BETWEEN :p_start_date   AND    :p_end_date ---bug 12393629 16294327*/
      AND   RE.tax_entity_id = :p_tax_entity_id
      AND   RE.tax_entity_id = REL.tax_entity_id
--AND     decode(:P_query_driver, 'INV', ID.dist_code_combination_id,
                       --ABA.asset_code_combination_id) = CC.code_combination_id
&LP_QUERY_DRIVER	---	 bug 5851995 6725024
      AND   CC.chart_of_accounts_id = :C_CHART_ACCTS_ID 
&C_DYNAMIC_SQL 
 and P.segment1=:Vendor_Number4 
 and ID.type_1099=:Income_Tax_Type2
GROUP BY P.vendor_name, P.segment1,ID.type_1099 
order by P.vendor_name,P.segment1,ID.type_1099
--Q_SS_PAYMENT
SELECT  P.vendor_name Vendor_name,
	 P.segment1 Vendor_Number,
	 null Tax_Reporting_site,
	ID.type_1099 Income_Tax_Type,
                 decode(replace(replace(PII.income_tax_id,'-',''),' ',''),'000000000','',PII.income_tax_id) Tax_ID_Number, 

                round(sum(decode(I.cancelled_amount,
                         null,ID.amount,decode(greatest(ID.accounting_date,:p_end_date+1),
                         ID.accounting_date,0,decode(least(ID.accounting_date,
						 :p_start_date-1),ID.accounting_date,0,ID.amount)))/
                    decode(I.invoice_amount,0,decode(I.cancelled_amount,
                         null,1,0,1,I.cancelled_amount),
                         decode(AP_UTILITIES_PKG.Net_Invoice_Amount(I.invoice_id),0,1,
                                      AP_UTILITIES_PKG.Net_Invoice_Amount(I.invoice_id)))
                        *decode(IP.amount, 0, decode(ip2.ip_count, 0, 1, 0), IP.amount)),2) payment_total,

                     round(sum(decode(I.cancelled_amount,
                         null,ID.amount,decode(greatest(ID.accounting_date,:p_end_date+1),
                         ID.accounting_date,0,decode(least(ID.accounting_date,
						 :p_start_date-1),ID.accounting_date,0,ID.amount)))/
                    decode(I.invoice_amount,0,decode(I.cancelled_amount,
                         null,1,0,1,I.cancelled_amount),
                         decode(AP_UTILITIES_PKG.Net_Invoice_Amount(I.invoice_id),0,1,
                                      AP_UTILITIES_PKG.Net_Invoice_Amount(I.invoice_id)))
                         *DECODE(:p_conversion_rate_type,NULL,DECODE(NVL(IP.payment_base_amount,IP.amount), 0, DECODE(ip2.ip_count, 0, 1, 0),NVL(IP.payment_base_amount,IP.amount)),
                        DECODE(IP.payment_currency_code,'USD',NVL(IP.amount,0), NVL(IP.payment_base_amount,IP.amount)*GR.conversion_rate))),2) usd_payment_total /* Added for the Bug 30510238 */ /*Modified for the bug 30954910 */



FROM     ap_reporting_entities_all RE,
               ap_reporting_entity_lines_all REL,
               AP_1099_TAPE_DATA_ALL TD,
               /* FUSION INITIATIVE CHANGES BEGIN po_vendors */ POZ_SUPPLIERS_V /* FUSION INITIATIVE CHANGES END*/ P,
               gl_code_combinations CC,
               ap_invoices_all I,
               ap_checks_all C,
               /* FUSION INITIATIVE CHANGES BEGIN ap_bank_accounts */ CE_BANK_ACCOUNTS /* FUSION INITIATIVE CHANGES END*/ ABA,
               ap_invoice_distributions_all ID,
               ap_invoice_payments_all IP,
                              (SELECT distinct gdr.from_currency,  gdr.conversion_rate, gdr.conversion_Date
                    FROM gl_daily_rates gdr
                    WHERE gdr.conversion_date BETWEEN :p_start_date AND :p_end_date
                    AND  gdr.conversion_type= :p_conversion_rate_type
                    AND gdr.to_currency = 'USD'  
                    ) gr, ap_system_parameters_all asp,      /*Added for the bug 30954910 */
	       CE_BANK_ACCT_USES_ALL BAU,  -- bug 8739088 by anupgupt
	       poz_suppliers_pii PII,
                (
                   select invoice_id,count(decode(aip.amount,0,null,1)) ip_count
                   from   ap_invoice_payments_all aip
                   where  aip.accounting_date BETWEEN :p_start_date AND :p_end_date
                   group  by invoice_id
                 ) ip2
 WHERE  P.vendor_id = PII.vendor_id (+)
AND	ID.POSTED_FLAG = 'Y'
AND       (:p_input_region_short_name is null OR
                ID.income_tax_region = :p_input_region_short_name)
AND        P.vendor_id=I.vendor_id
--and        c.void_date is null  rchandan for bug#9709459
AND     (c.void_date is null 
         OR c.void_date NOT BETWEEN :p_start_date AND :p_end_date) --rchandan for bug#9709459
AND        P.vendor_id=TD.vendor_id 
AND TD.org_id       = :P_BUSINESS_UNIT
and C.org_id = TD.org_id
AND      ((:p_fed_reportable = 'Y' and P.federal_reportable_flag = 'Y')
               OR (:p_fed_reportable = 'N' or :p_fed_reportable is null))
AND      I.invoice_id=IP.invoice_id
AND      I.invoice_id=ID.invoice_id
AND     C.check_id = IP.check_id
AND ip2.invoice_id = I.invoice_id
AND gr.from_currency(+) = asp.base_currency_code
and gr.conversion_date(+) = ip.accounting_date
and asp.org_id = ip.org_id    /*Added for the bug 30954910 */
/* FUSION INITIATIVE CHANGES BEGIN temporarily commented, bank_account_id not present.	
AND      C.bank_account_id = ABA.bank_account_id	
FUSION INITIATIVE CHANGES END*/
AND      IP.accounting_date BETWEEN :p_start_date  AND      :p_end_date
/*AND      ID.accounting_date BETWEEN :p_start_date  AND      :p_end_date ---bug 12393629 16294327 */
AND      ID.type_1099 is not null
AND      ID.type_1099 <> 'MISC4'
--AND     decode(:P_query_driver, 'INV', ID.dist_code_combination_id,
                       --ABA.asset_code_combination_id) = CC.code_combination_id
&LP_QUERY_DRIVER	---	 bug 5851995 6725024
AND      RE.tax_entity_id = :p_tax_entity_id
AND      RE.tax_entity_id = REL.tax_entity_id
AND      CC.chart_of_accounts_id = :C_CHART_ACCTS_ID
AND      P.segment1=:Vendor_Number4
AND      ID.type_1099=:Income_Tax_Type2
AND      C.ce_bank_acct_use_id = BAU.bank_acct_use_id  -- bug 8739088 by anupgupt
AND      BAU.bank_account_id = ABA.bank_account_id  -- bug 8739088 by anupgupt
&C_DYNAMIC_SQL
GROUP BY P.segment1,P.vendor_name,ID.type_1099,
                 decode(replace(replace(PII.income_tax_id,'-',''),' ',''),'000000000','',PII.income_tax_id) 
order by 1
--Q_SUPPLIER_SUMMARY
SELECT    P.vendor_id,
                 
                 P.vendor_name,
                 P.segment1 Vendor_Number,
                 P.tax_reporting_name tax_reporting_name,
                 decode(replace(replace(PII.income_tax_id,'-',''),' ',''),'000000000','',PII.income_tax_id) Tax_ID_Number, 
                 pvs.vendor_site_code Tax_Reporting_Site,
                 (SUBSTR(nvl(PVS.address_line1,'')||' '||nvl(PVS.address_line2,' ')||' '||
                 nvl(PVS.address_line3,' '),1,30)||' '||nvl(PVS.city,'')||', '||nvl(PVS.STATE,'')||'   '||nvl(PVS.zip,'')) 		address,
                 ID.type_1099 Income_Tax_Type
                
FROM     ap_reporting_entities_all RE,
               ap_reporting_entity_lines_all REL,
               AP_1099_TAPE_DATA_ALL TD,
               /* FUSION INITIATIVE CHANGES BEGIN po_vendors */ POZ_SUPPLIERS_V /* FUSION INITIATIVE CHANGES END*/ P,
               /* FUSION INITIATIVE CHANGES BEGIN po_vendor_sites */ POZ_SUPPLIER_SITES_V /* FUSION INITIATIVE CHANGES END*/ PVS,
               gl_code_combinations CC,
               ap_invoices_all I,
               ap_checks_all C,
               /* FUSION INITIATIVE CHANGES BEGIN ap_bank_accounts */ CE_BANK_ACCOUNTS /* FUSION INITIATIVE CHANGES END*/ ABA,
               ap_invoice_distributions_all ID,
               ap_invoice_payments_all IP,  -- Bug 1131150
	       CE_BANK_ACCT_USES_ALL BAU, -- bug 8739088 by anupgupt
	       poz_suppliers_pii PII
WHERE    (:p_input_region_short_name is null OR
                ID.income_tax_region = :p_input_region_short_name)
AND	ID.POSTED_FLAG = 'Y'
AND        P.vendor_id = PVS.vendor_id
AND     P.vendor_id = PII.vendor_id (+)
--and        c.void_date is null  --4480766  rchandan for bug#9709459
AND     (c.void_date is null 
         OR c.void_date NOT BETWEEN :p_start_date AND :p_end_date) --rchandan for bug#9709459
and C.org_id = td.org_id
AND pvs.VENDOR_SITE_ID =
(SELECT min(pvs2.VENDOR_SITE_ID)
    FROM POZ_SITE_ASSIGNMENTS_ALL_M PVSA
       , POZ_SUPPLIER_SITES_V pvs2
   WHERE pvs2.VENDOR_SITE_ID          = PVSA.VENDOR_SITE_ID
     AND PVSA.BU_ID                   = TD.org_id
     AND pvs2.tax_reporting_site_flag = 'Y'
     AND pvs2.vendor_id               = p.vendor_id

)
AND        P.vendor_id=I.vendor_id
AND	P.vendor_id=TD.vendor_id 
AND TD.org_id       = :P_BUSINESS_UNIT
AND      ((:p_fed_reportable = 'Y' and P.federal_reportable_flag = 'Y')
               OR (:p_fed_reportable = 'N' or :p_fed_reportable is null))
AND      I.invoice_id=IP.invoice_id
AND      I.invoice_id=ID.invoice_id
AND     C.check_id =  ip.check_id   --2670501
/* FUSION INITIATIVE CHANGES BEGIN temporarily commented, bank_account_id not present.	
AND      C.bank_account_id = ABA.bank_account_id	
FUSION INITIATIVE CHANGES END*/
AND      IP.accounting_date BETWEEN :p_start_date   AND      :p_end_date
/*AND      ID.accounting_date BETWEEN :p_start_date   AND      :p_end_date ---bug 12393629 16294327 */
AND      ID.type_1099 is not null
--AND     decode(:P_query_driver, 'INV', ID.dist_code_combination_id,
                       --ABA.asset_code_combination_id) = CC.code_combination_id
&LP_QUERY_DRIVER	---	 bug 5851995 6725024
AND      RE.tax_entity_id = :p_tax_entity_id
AND      RE.tax_entity_id = REL.tax_entity_id
AND      CC.chart_of_accounts_id = :C_CHART_ACCTS_ID 
AND      C.ce_bank_acct_use_id = BAU.bank_acct_use_id  -- bug 8739088 by anupgupt
AND      BAU.bank_account_id = ABA.bank_account_id  -- bug 8739088 by anupgupt
&LP_VENDOR_ID 
&C_DYNAMIC_SQL 
GROUP BY  P.vendor_id, 
	P.segment1,
	P.vendor_name,
	P.tax_reporting_name,
	decode(replace(replace(PII.income_tax_id,'-',''),' ',''),'000000000','',PII.income_tax_id), 
                   PVS.vendor_site_id,
	PVS.vendor_site_code,
                  	ID.type_1099,
                  (SUBSTR(nvl(PVS.address_line1,'')||' '||nvl(PVS.address_line2,' ')||' '||
                  nvl(PVS.address_line3,' '),1,30)||' '||nvl(PVS.city,'')||', '||nvl(PVS.STATE,'')||'   '||nvl(PVS.zip,'')) ,	                  I.invoice_id,
                  I.invoice_num,
                  I.invoice_date,
                  decode(I.invoice_amount,0,
                    decode(I.cancelled_amount,null,0,decode(greatest(I.cancelled_date,:p_end_date+1),
                        I.cancelled_date,I.cancelled_amount,I.invoice_amount)),
                        I.invoice_amount)

UNION


SELECT    P.vendor_id,
               
                 P.vendor_name,
                 P.segment1 Vendor_Number,
                 P.tax_reporting_name,
                decode(replace(replace(PII.income_tax_id,'-',''),' ',''),'000000000','',PII.income_tax_id) Tax_ID_Number,
                null tax_reporting_site,
                null address ,
                 ID.type_1099 Income_Tax_Type
               
FROM    ap_income_tax_regions ITR,
               ap_reporting_entities_all RE,
               ap_reporting_entity_lines_all REL,
               AP_1099_TAPE_DATA_ALL TD,
               /* FUSION INITIATIVE CHANGES BEGIN po_vendors */ POZ_SUPPLIERS_V /* FUSION INITIATIVE CHANGES END*/ P, 
               gl_code_combinations CC,
               ap_invoices_all I,
               ap_checks_all C,
               /* FUSION INITIATIVE CHANGES BEGIN ap_bank_accounts */ CE_BANK_ACCOUNTS /* FUSION INITIATIVE CHANGES END*/ ABA,
               CE_BANK_ACCT_USES_ALL BAU, /*rchandan for bug#9709459*/
               ap_invoice_distributions_all ID,
               ap_invoice_payments_all IP,  -- Bug 1131150
	       poz_suppliers_pii PII
WHERE   ID.income_tax_region = ITR.region_short_name (+)
AND	ID.POSTED_FLAG = 'Y'
AND     P.vendor_id = PII.vendor_id (+)
--and        c.void_date is null  --4480766 rchandan for bug#9709459
AND     (c.void_date is null 
         OR c.void_date NOT BETWEEN :p_start_date AND :p_end_date) --rchandan for bug#9709459
AND       (:p_input_region_short_name is null OR
                ID.income_tax_region = :p_input_region_short_name)
AND         not exists
	(select    vendor_id
	  from      /* FUSION INITIATIVE CHANGES BEGIN po_vendor_sites */ POZ_SUPPLIER_SITES_V /* FUSION INITIATIVE CHANGES END*/
	 where    vendor_id = p.vendor_id)
AND        P.vendor_id=I.vendor_id
AND	P.vendor_id=TD.vendor_id 
AND TD.org_id       = :P_BUSINESS_UNIT
AND      ((:p_fed_reportable = 'Y' and P.federal_reportable_flag = 'Y')
               OR (:p_fed_reportable = 'N' or :p_fed_reportable is null))
AND      I.invoice_id=IP.invoice_id
AND      I.invoice_id=ID.invoice_id
AND     C.check_id = IP.check_id
/* FUSION INITIATIVE CHANGES BEGIN temporarily commented, bank_account_id not present.	
AND      C.bank_account_id = ABA.bank_account_id	
FUSION INITIATIVE CHANGES END*/
AND C.CE_BANK_ACCT_USE_ID = BAU.BANK_ACCT_USE_ID /*rchandan for bug#9709459*/
AND BAU.BANK_ACCOUNT_ID = ABA.BANK_ACCOUNT_ID /*rchandan for bug#9709459*/
AND      IP.accounting_date BETWEEN :p_start_date AND      :p_end_date
/* AND      ID.accounting_date BETWEEN :p_start_date   AND    :p_end_date ---bug 12393629 16294327*/
AND      ID.type_1099 is not null
--AND     decode(:P_query_driver, 'INV', ID.dist_code_combination_id,
                       --ABA.asset_code_combination_id) = CC.code_combination_id
&LP_QUERY_DRIVER	---	 bug 5851995 6725024
AND      RE.tax_entity_id = :p_tax_entity_id
AND      RE.tax_entity_id = REL.tax_entity_id
AND      CC.chart_of_accounts_id = :C_CHART_ACCTS_ID 
&C_DYNAMIC_SQL 
&LP_VENDOR_ID 
GROUP BY  P.vendor_id,
	P.segment1,                
	P.vendor_name,
	P.tax_reporting_name,
            	ID.type_1099,
                  decode(replace(replace(PII.income_tax_id,'-',''),' ',''),'000000000','',PII.income_tax_id), 
	I.invoice_id,
                  I.invoice_num,
                  I.invoice_date,
                 decode(I.invoice_amount,0,
                    decode(I.cancelled_amount,null,0,decode(greatest(I.cancelled_date,:p_end_date+1),
                        I.cancelled_date,I.cancelled_amount,I.invoice_amount)),
                        I.invoice_amount)

ORDER BY 5,3
--Q_RD_DISTRIBUTION
SELECT    ID.type_1099,
      	P.vendor_id,
	AI.invoice_id,
                 
  decode(ID.type_1099, 'MISC4', 
-1*(sum(nvl(ID.amount,0))),
       sum(nvl(ID.amount,0)))  td_distribution_total 
    

,nvl(id.income_tax_region,'No Tax Region')
FROM        ap_reporting_entities_all RE,
                  ap_reporting_entity_lines_all REL,
                  gl_code_combinations CC,
                  ap_invoice_distributions_all ID,
                  ap_invoices_all AI,
                  /* FUSION INITIATIVE CHANGES BEGIN po_vendors */ POZ_SUPPLIERS_V /* FUSION INITIATIVE CHANGES END*/ P,
                  AP_1099_TAPE_DATA_ALL TD,
                  /* FUSION INITIATIVE CHANGES BEGIN ap_bank_accounts */ CE_BANK_ACCOUNTS /* FUSION INITIATIVE CHANGES END*/ ABA,
                  CE_BANK_ACCT_USES_ALL BAU, /*rchandan for bug#9709459*/
                  ap_checks_all C,
                  ap_invoice_payments_all IP
WHERE      P.vendor_id = AI.vendor_id
AND	ID.POSTED_FLAG = 'Y'
--      and        c.void_date is null  rchandan for bug#9709459
AND     (c.void_date is null 
         OR c.void_date NOT BETWEEN :p_start_date AND :p_end_date) --rchandan for bug#9709459
      AND     P.vendor_id=TD.vendor_id 
	  AND TD.org_id       = :P_BUSINESS_UNIT
      AND     (:p_input_region_short_name is null OR
                      ID.income_tax_region = :p_input_region_short_name)
      AND     ID.type_1099 is not null
      AND     ID.invoice_id = AI.invoice_id
      AND     IP.invoice_id = AI.invoice_id
    AND     C.check_id = IP.check_id
      /* FUSION INITIATIVE CHANGES BEGIN temporarily commented, bank_account_id not present.	
	  AND      C.bank_account_id = ABA.bank_account_id	
	  FUSION INITIATIVE CHANGES END*/
AND C.CE_BANK_ACCT_USE_ID = BAU.BANK_ACCT_USE_ID /*rchandan for bug#9709459*/
AND BAU.BANK_ACCOUNT_ID = ABA.BANK_ACCOUNT_ID /*rchandan for bug#9709459*/	  
      AND   IP.invoice_payment_id in
                   (SELECT  invoice_payment_id        
                       FROM  ap_invoice_payments_all IP1,
                                  ap_checks_all c1                  
                     WHERE  IP1.invoice_id = AI.invoice_id
                          AND  IP1.check_id = c1.check_id 
                          AND  nvl(c1.void_date,:p_end_date+1) not between :P_START_DATE and :P_END_DATE
                          AND  IP1.accounting_date BETWEEN :p_start_date AND  :p_end_date
                          AND  rownum = 1)
      AND     IP.accounting_date BETWEEN :p_start_date   AND   :p_end_date
	/*  AND     ID.accounting_date BETWEEN :p_start_date   AND   :p_end_date ---bug 12393629 16294327 */
      AND     RE.tax_entity_id = :p_tax_entity_id
      AND     RE.tax_entity_id = REL.tax_entity_id  
--AND     decode(:P_query_driver, 'INV', ID.dist_code_combination_id,
                       --ABA.asset_code_combination_id) = CC.code_combination_id
&LP_QUERY_DRIVER	---	 bug 5851995 6725024
      AND     CC.chart_of_accounts_id = :C_CHART_ACCTS_ID 
&C_DYNAMIC_SQL 
 and ID.type_1099=:Income_Tax_Type1 
 and P.vendor_id=:vendor_id3 
 and AI.invoice_id=:invoice_id3 
 and nvl ( id.income_tax_region , 'No Tax Region' )=:nvl_id_income_tax_region_No_Ta
GROUP BY P.vendor_id, AI.invoice_id, ID.type_1099, id.income_tax_region 
order by 1
--Q_RS_DISTRIBUTION
SELECT    ID.type_1099 Income_Tax_Type,
                 nvl(ID.income_tax_region,'No Tax Region') Region_Sname,
   
                  sum(nvl(ID.amount,0)) ts_distribution_total
FROM      ap_reporting_entities_all RE,
                ap_reporting_entity_lines_all REL,
                gl_code_combinations CC,
                ap_invoice_distributions_all ID,
                ap_invoices_all AI,
                /* FUSION INITIATIVE CHANGES BEGIN po_vendors */ POZ_SUPPLIERS_V /* FUSION INITIATIVE CHANGES END*/ P,
                AP_1099_TAPE_DATA_ALL TD,
                ap_checks_all C,
                /* FUSION INITIATIVE CHANGES BEGIN ap_bank_accounts */ CE_BANK_ACCOUNTS /* FUSION INITIATIVE CHANGES END*/ ABA,
                CE_BANK_ACCT_USES_ALL BAU, /*rchandan for bug#9709459*/
                ap_invoice_payments_all IP
WHERE    P.vendor_id = AI.vendor_id
AND	ID.POSTED_FLAG = 'Y'
--      and        c.void_date is null  rchandan for bug#9709459
AND     (c.void_date is null 
         OR c.void_date NOT BETWEEN :p_start_date AND :p_end_date) --rchandan for bug#9709459
      AND   P.vendor_id=TD.vendor_id 
	  AND TD.org_id       = :P_BUSINESS_UNIT
      AND   (:p_input_region_short_name is null OR
                    ID.income_tax_region = :p_input_region_short_name)
      AND   ID.type_1099 is not null
      AND   C.ORG_ID = TD.org_id   -- BUG 26564189 
      AND   ID.type_1099 <>  'MISC4'
      AND   IP.invoice_id = AI.invoice_id
      AND   ID.invoice_id = AI.invoice_id
      AND   C.check_id = IP.check_id
      /* FUSION INITIATIVE CHANGES BEGIN temporarily commented, bank_account_id not present.	
	  AND      C.bank_account_id = ABA.bank_account_id	
	  FUSION INITIATIVE CHANGES END*/
AND C.CE_BANK_ACCT_USE_ID = BAU.BANK_ACCT_USE_ID /*rchandan for bug#9709459*/
AND BAU.BANK_ACCOUNT_ID = ABA.BANK_ACCOUNT_ID /*rchandan for bug#9709459*/	  
      AND   IP.invoice_payment_id in
                   (SELECT  invoice_payment_id        
                       FROM  ap_invoice_payments_all IP1,
                                  ap_checks_all c1                  
                     WHERE  IP1.invoice_id = AI.invoice_id
                          AND  IP1.check_id = c1.check_id 
                          AND  nvl(c1.void_date,:p_end_date+1) not between :P_START_DATE and :P_END_DATE
                          AND  IP1.accounting_date BETWEEN :p_start_date AND  :p_end_date
                          AND  rownum = 1)
      AND   IP.accounting_date BETWEEN :p_start_date   AND   :p_end_date
	/*  AND   ID.accounting_date BETWEEN :p_start_date   AND   :p_end_date ---bug 12393629 16294327 */
      AND   RE.tax_entity_id = :p_tax_entity_id
      AND   RE.tax_entity_id = REL.tax_entity_id
--AND     decode(:P_query_driver, 'INV', ID.dist_code_combination_id,
                       --ABA.asset_code_combination_id) = CC.code_combination_id
&LP_QUERY_DRIVER	---	 bug 5851995 6725024
    AND   CC.chart_of_accounts_id = :C_CHART_ACCTS_ID 
&C_DYNAMIC_SQL 
 and nvl ( ID.income_tax_region , 'No Tax Region' )=:Region_Sname222 
 and ID.type_1099=:Income_Tax_Type222
GROUP BY ID.type_1099, ID.income_tax_region
order by 1,2
--Q_RS_PAYMENT
SELECT   nvl(ID.income_tax_region,'No Tax Region') Region_Sname,
                 ID.type_1099 Income_Tax_Type,

                round(sum(decode(I.cancelled_amount,
                         null,ID.amount,decode(greatest(ID.accounting_date,:p_end_date+1),
                         ID.accounting_date,0,decode(least(ID.accounting_date,
                         :p_start_date-1),ID.accounting_date,0,ID.amount)))/						 
                    decode(I.invoice_amount,0,decode(I.cancelled_amount,
                         null,1,0,1,I.cancelled_amount), 
                         decode(AP_UTILITIES_PKG.Net_Invoice_Amount(I.invoice_id),0,1,   
                                      AP_UTILITIES_PKG.Net_Invoice_Amount(I.invoice_id)))
                        *decode(IP.amount, 0, decode(ip2.ip_count, 0, 1, 0),IP.amount)),2) payment_total,

              round(sum(decode(I.cancelled_amount,
                         null,ID.amount,decode(greatest(ID.accounting_date,:p_end_date+1),
                         ID.accounting_date,0,decode(least(ID.accounting_date,
                         :p_start_date-1),ID.accounting_date,0,ID.amount)))/						 
                    decode(I.invoice_amount,0,decode(I.cancelled_amount,
                         null,1,0,1,I.cancelled_amount), 
                         decode(AP_UTILITIES_PKG.Net_Invoice_Amount(I.invoice_id),0,1,   
                                      AP_UTILITIES_PKG.Net_Invoice_Amount(I.invoice_id)))
                        *DECODE(:p_conversion_rate_type,NULL,DECODE(NVL(IP.payment_base_amount,IP.amount), 0, DECODE(ip2.ip_count, 0, 1, 0),NVL(IP.payment_base_amount,IP.amount)),
                        DECODE(IP.payment_currency_code,'USD',NVL(IP.amount,0), NVL(IP.payment_base_amount,IP.amount)*GR.conversion_rate))),2) usd_payment_total   /* Added for the Bug 30510238 */ /*Modified for the bug 30954910 */

FROM     ap_reporting_entities_all RE,
               ap_reporting_entity_lines_all REL,
               AP_1099_TAPE_DATA_ALL TD,
               /* FUSION INITIATIVE CHANGES BEGIN po_vendors */ POZ_SUPPLIERS_V /* FUSION INITIATIVE CHANGES END*/ P,
               gl_code_combinations CC,
               ap_invoices_all I,
               ap_checks_all C,
               /* FUSION INITIATIVE CHANGES BEGIN ap_bank_accounts */ CE_BANK_ACCOUNTS /* FUSION INITIATIVE CHANGES END*/ ABA,
               CE_BANK_ACCT_USES_ALL BAU, /*rchandan for bug#9709459*/
               ap_invoice_distributions_all ID,
               ap_invoice_payments_all IP,
               (SELECT distinct gdr.from_currency,  gdr.conversion_rate, gdr.conversion_Date
                    FROM gl_daily_rates gdr
                    WHERE gdr.conversion_date BETWEEN :p_start_date AND :p_end_date
                    AND  gdr.conversion_type= :p_conversion_rate_type
                    AND gdr.to_currency = 'USD'  
                    ) gr, ap_system_parameters_all asp,      /*Added for the bug 30954910 */
                (
                   select invoice_id,count(decode(aip.amount,0,null,1)) ip_count
                   from   ap_invoice_payments_all aip
                   where  aip.accounting_date BETWEEN :p_start_date AND :p_end_date
                   group  by invoice_id
                 ) ip2
 WHERE  (:p_input_region_short_name is null OR
                ID.income_tax_region = :p_input_region_short_name)
AND	ID.POSTED_FLAG = 'Y'
AND        P.vendor_id=I.vendor_id
AND	P.vendor_id=TD.vendor_id 
AND TD.org_id       = :P_BUSINESS_UNIT
AND C.ORG_ID       = TD.org_id   --Bug 26564189
AND      ((:p_fed_reportable = 'Y' and P.federal_reportable_flag = 'Y')
               OR (:p_fed_reportable = 'N' or :p_fed_reportable is null))
AND      I.invoice_id=IP.invoice_id
--and        c.void_date is null  rchandan for bug#9709459
AND     (c.void_date is null 
         OR c.void_date NOT BETWEEN :p_start_date AND :p_end_date) --rchandan for bug#9709459
AND      I.invoice_id=ID.invoice_id
AND     C.check_id = IP.check_id
AND ip2.invoice_id = I.invoice_id
AND gr.from_currency(+) = asp.base_currency_code
and gr.conversion_date(+) = ip.accounting_date
and asp.org_id = ip.org_id    /*Added for the bug 30954910 */ 
/* FUSION INITIATIVE CHANGES BEGIN temporarily commented, bank_account_id not present.	
AND      C.bank_account_id = ABA.bank_account_id	
FUSION INITIATIVE CHANGES END*/
AND C.CE_BANK_ACCT_USE_ID = BAU.BANK_ACCT_USE_ID /*rchandan for bug#9709459*/
AND BAU.BANK_ACCOUNT_ID = ABA.BANK_ACCOUNT_ID /*rchandan for bug#9709459*/
AND      IP.accounting_date BETWEEN :p_start_date  AND      :p_end_date
/*AND      ID.accounting_date BETWEEN :p_start_date  AND      :p_end_date ---bug 12393629 16294327 */
AND      ID.type_1099 is not null
AND      ID.type_1099  <> 'MISC4'
--AND     decode(:P_query_driver, 'INV', ID.dist_code_combination_id,
                       --ABA.asset_code_combination_id) = CC.code_combination_id
&LP_QUERY_DRIVER	---	 bug 5851995 6725024
AND      RE.tax_entity_id = :p_tax_entity_id
AND      RE.tax_entity_id = REL.tax_entity_id
AND      CC.chart_of_accounts_id = :C_CHART_ACCTS_ID
&C_DYNAMIC_SQL 
 and nvl ( ID.income_tax_region , 'No Tax Region' )=:Region_Sname222 
 and ID.type_1099=:Income_Tax_Type222
GROUP BY ID.type_1099,ID.income_tax_region 
ORDER BY  1,2
--Q_RD_CHECK
SELECT  ID.type_1099,
      	P.vendor_id,
	I.invoice_id,
	 C.check_number,
	TO_CHAR(C.Check_date,'YYYY-MM-DD') Check_date
FROM    ap_income_tax_regions ITR,
               ap_reporting_entities_all RE,
               ap_reporting_entity_lines_all REL,
               AP_1099_TAPE_DATA_ALL TD,
               /* FUSION INITIATIVE CHANGES BEGIN po_vendors */ POZ_SUPPLIERS_V /* FUSION INITIATIVE CHANGES END*/ P, 
               gl_code_combinations CC,
               ap_invoices_all I,
               ap_checks_all C,
               /* FUSION INITIATIVE CHANGES BEGIN ap_bank_accounts */ CE_BANK_ACCOUNTS /* FUSION INITIATIVE CHANGES END*/ ABA,
               CE_BANK_ACCT_USES_ALL BAU, /*rchandan for bug#9709459*/
               ap_invoice_distributions_all ID,
               ap_invoice_payments_all IP
WHERE   ID.income_tax_region = ITR.region_short_name (+)
AND	ID.POSTED_FLAG = 'Y'
AND       (:p_input_region_short_name is null OR
                ID.income_tax_region = :p_input_region_short_name)
--and        c.void_date is null  rchandan for bug#9709459
AND     (c.void_date is null 
         OR c.void_date NOT BETWEEN :p_start_date AND :p_end_date) --rchandan for bug#9709459
AND        P.vendor_id=I.vendor_id
AND	P.vendor_id=TD.vendor_id 
AND TD.org_id       = :P_BUSINESS_UNIT
AND      ((:p_fed_reportable = 'Y' and P.federal_reportable_flag = 'Y')
               OR (:p_fed_reportable = 'N' or :p_fed_reportable is null))
AND      I.invoice_id=IP.invoice_id
AND      I.invoice_id=ID.invoice_id
AND     C.check_id = IP.check_id
/* FUSION INITIATIVE CHANGES BEGIN temporarily commented, bank_account_id not present.	
AND      C.bank_account_id = ABA.bank_account_id	
FUSION INITIATIVE CHANGES END*/
AND C.CE_BANK_ACCT_USE_ID = BAU.BANK_ACCT_USE_ID /*rchandan for bug#9709459*/
AND BAU.BANK_ACCOUNT_ID = ABA.BANK_ACCOUNT_ID /*rchandan for bug#9709459*/
AND      IP.accounting_date BETWEEN :p_start_date  AND      :p_end_date
/*AND      ID.accounting_date BETWEEN :p_start_date  AND      :p_end_date ---bug 12393629 16294327*/
AND      ID.type_1099 is not null
--AND     decode(:P_query_driver, 'INV', ID.dist_code_combination_id,
                       --ABA.asset_code_combination_id) = CC.code_combination_id
&LP_QUERY_DRIVER	---	 bug 5851995 6725024
AND      RE.tax_entity_id = :p_tax_entity_id
AND      RE.tax_entity_id = REL.tax_entity_id
AND      CC.chart_of_accounts_id = :C_CHART_ACCTS_ID
&C_DYNAMIC_SQL 
 and ID.type_1099=:Income_Tax_Type1 
 and P.vendor_id=:vendor_id3 
 and I.invoice_id=:invoice_id3
GROUP BY  ID.type_1099,
      	P.vendor_id,
	I.invoice_id,
	 C.check_number,
	C.Check_date 
ORDER BY 1
--Q_RD_PAYMENT
SELECT   ID.type_1099,
      	P.vendor_id,
	I.invoice_id,

               decode(ID.type_1099, 'MISC4', -1*(round(sum(decode(I.cancelled_amount,
                         null,ID.amount,decode(greatest(ID.accounting_date,:p_end_date+1),
                         ID.accounting_date,0,decode(least(ID.accounting_date,                         
                         :p_start_date-1),ID.accounting_date,0,ID.amount)))/						 
                    decode(AP_UTILITIES_PKG.Net_Invoice_Amount(I.invoice_id),0,decode(I.cancelled_amount,
                         null,1,0,1,I.cancelled_amount),AP_UTILITIES_PKG.Net_Invoice_Amount(I.invoice_id))
                        *decode(IP.amount, 0, decode(ip2.ip_count, 0, 1, 0),IP.amount)),2)), 
                    round(sum(decode(I.cancelled_amount,
                         null,ID.amount,decode(greatest(ID.accounting_date,:p_end_date+1),
                         ID.accounting_date,0,decode(least(ID.accounting_date,
						 :p_start_date-1),ID.accounting_date,0,ID.amount)))/
                    decode(AP_UTILITIES_PKG.Net_Invoice_Amount(I.invoice_id),0,decode(I.cancelled_amount,
                         null,1,0,1,I.cancelled_amount),AP_UTILITIES_PKG.Net_Invoice_Amount(I.invoice_id))
                        *decode(IP.amount, 0, decode(ip2.ip_count, 0, 1, 0),IP.amount)),2)) payment_total,

               decode(ID.type_1099, 'MISC4', -1*(round(sum(decode(I.cancelled_amount,
                         null,ID.amount,decode(greatest(ID.accounting_date,:p_end_date+1),
                         ID.accounting_date,0,decode(least(ID.accounting_date,                         
                         :p_start_date-1),ID.accounting_date,0,ID.amount)))/						 
                    decode(AP_UTILITIES_PKG.Net_Invoice_Amount(I.invoice_id),0,decode(I.cancelled_amount,
                         null,1,0,1,I.cancelled_amount),AP_UTILITIES_PKG.Net_Invoice_Amount(I.invoice_id))
                        *DECODE(:p_conversion_rate_type,NULL,DECODE(NVL(IP.payment_base_amount,IP.amount), 0, DECODE(ip2.ip_count, 0, 1, 0),NVL(IP.payment_base_amount,IP.amount)),
                        DECODE(IP.payment_currency_code,'USD',NVL(IP.amount,0), NVL(IP.payment_base_amount,IP.amount)*GR.conversion_rate))),2)),  
                    round(sum(decode(I.cancelled_amount,
                         null,ID.amount,decode(greatest(ID.accounting_date,:p_end_date+1),
                         ID.accounting_date,0,decode(least(ID.accounting_date,
						 :p_start_date-1),ID.accounting_date,0,ID.amount)))/
                    decode(AP_UTILITIES_PKG.Net_Invoice_Amount(I.invoice_id),0,decode(I.cancelled_amount,
                         null,1,0,1,I.cancelled_amount),AP_UTILITIES_PKG.Net_Invoice_Amount(I.invoice_id))
                         *DECODE(:p_conversion_rate_type,NULL,DECODE(NVL(IP.payment_base_amount,IP.amount), 0, DECODE(ip2.ip_count, 0, 1, 0),NVL(IP.payment_base_amount,IP.amount)),
                        DECODE(IP.payment_currency_code,'USD',NVL(IP.amount,0), NVL(IP.payment_base_amount,IP.amount)*GR.conversion_rate))),2)) usd_payment_total,  /* Added for the Bug 30510238 */ /*Modified for the bug 30954910 */


decode(ID.type_1099, 'MISC4', -1*(round(sum(decode(I.cancelled_amount,
                         null,ID.amount,decode(greatest(ID.accounting_date,:p_end_date+1),
                         ID.accounting_date,0,decode(least(ID.accounting_date,
						 :p_start_date-1),ID.accounting_date,0,ID.amount)))/
                    decode(AP_UTILITIES_PKG.Net_Invoice_Amount(I.invoice_id),0,decode(I.cancelled_amount,
                         null,1,0,1,I.cancelled_amount),AP_UTILITIES_PKG.Net_Invoice_Amount(I.invoice_id))
                        *decode(IP.amount, 0, decode(ip2.ip_count, 0, 1, 0),IP.amount)),2)), 0) payment_total_w ,



decode(ID.type_1099, 'MISC4', -1*(round(sum(decode(I.cancelled_amount,
                         null,ID.amount,decode(greatest(ID.accounting_date,:p_end_date+1),
                         ID.accounting_date,0,decode(least(ID.accounting_date,
						 :p_start_date-1),ID.accounting_date,0,ID.amount)))/
                    decode(AP_UTILITIES_PKG.Net_Invoice_Amount(I.invoice_id),0,decode(I.cancelled_amount,
                         null,1,0,1,I.cancelled_amount),AP_UTILITIES_PKG.Net_Invoice_Amount(I.invoice_id))
                      *DECODE(:p_conversion_rate_type,NULL,DECODE(NVL(IP.payment_base_amount,IP.amount), 0, DECODE(ip2.ip_count, 0, 1, 0),NVL(IP.payment_base_amount,IP.amount)),
                       DECODE(IP.payment_currency_code,'USD',NVL(IP.amount,0), NVL(IP.payment_base_amount,IP.amount)*GR.conversion_rate))),2)), 0) usd_payment_total_w  , /* Added for the Bug 30510238 */ /*Modified for the bug 30954910 */


nvl(id.income_tax_region,'No Tax Region')
FROM    ap_income_tax_regions ITR,
               ap_reporting_entities_all RE,
               ap_reporting_entity_lines_all REL,
               AP_1099_TAPE_DATA_ALL TD,
               /* FUSION INITIATIVE CHANGES BEGIN po_vendors */ POZ_SUPPLIERS_V /* FUSION INITIATIVE CHANGES END*/ P, 
               gl_code_combinations CC,
               ap_invoices_all I,
               ap_checks_all C,
               /* FUSION INITIATIVE CHANGES BEGIN ap_bank_accounts */ CE_BANK_ACCOUNTS /* FUSION INITIATIVE CHANGES END*/ ABA,
               CE_BANK_ACCT_USES_ALL BAU, /*rchandan for bug#9709459*/
               ap_invoice_distributions_all ID,
               ap_invoice_payments_all IP,
                              (SELECT distinct gdr.from_currency,  gdr.conversion_rate, gdr.conversion_Date
                    FROM gl_daily_rates gdr
                    WHERE gdr.conversion_date BETWEEN :p_start_date AND :p_end_date
                    AND  gdr.conversion_type= :p_conversion_rate_type
                    AND gdr.to_currency = 'USD'  
                    ) gr, ap_system_parameters_all asp,      /*Added for the bug 30954910 */
                (
                   select invoice_id,count(decode(aip.amount,0,null,1)) ip_count
                   from   ap_invoice_payments_all aip
                   where  aip.accounting_date BETWEEN :p_start_date AND :p_end_date
                   group  by invoice_id
                 ) ip2
 WHERE   ID.income_tax_region = ITR.region_short_name (+)
AND	ID.POSTED_FLAG = 'Y'
AND       (:p_input_region_short_name is null OR
                ID.income_tax_region = :p_input_region_short_name)
AND        P.vendor_id=I.vendor_id

--and        c.void_date is null  rchandan for bug#9709459
AND     (c.void_date is null 
         OR c.void_date NOT BETWEEN :p_start_date AND :p_end_date) --rchandan for bug#9709459
AND	P.vendor_id=TD.vendor_id 
AND TD.org_id       = :P_BUSINESS_UNIT
AND      ((:p_fed_reportable = 'Y' and P.federal_reportable_flag = 'Y')
               OR (:p_fed_reportable = 'N' or :p_fed_reportable is null))
AND      I.invoice_id=IP.invoice_id
AND      I.invoice_id=ID.invoice_id
AND     C.check_id = IP.check_id
AND     ip2.invoice_id = I.invoice_id
AND gr.from_currency(+) = asp.base_currency_code
and gr.conversion_date(+) = ip.accounting_date
and asp.org_id = ip.org_id    /*Added for the bug 30954910 */
/* FUSION INITIATIVE CHANGES BEGIN temporarily commented, bank_account_id not present.	
AND      C.bank_account_id = ABA.bank_account_id	
FUSION INITIATIVE CHANGES END*/
AND C.CE_BANK_ACCT_USE_ID = BAU.BANK_ACCT_USE_ID /*rchandan for bug#9709459*/
AND BAU.BANK_ACCOUNT_ID = ABA.BANK_ACCOUNT_ID /*rchandan for bug#9709459*/
AND      IP.accounting_date BETWEEN :p_start_date   AND      :p_end_date
/*AND      ID.accounting_date BETWEEN :p_start_date   AND      :p_end_date ---bug 12393629 16294327 */
AND      ID.type_1099 is not null
--AND     decode(:P_query_driver, 'INV', ID.dist_code_combination_id,
                       --ABA.asset_code_combination_id) = CC.code_combination_id
&LP_QUERY_DRIVER	---	 bug 5851995 6725024
AND      RE.tax_entity_id = :p_tax_entity_id
AND      RE.tax_entity_id = REL.tax_entity_id
AND      CC.chart_of_accounts_id = :C_CHART_ACCTS_ID
&C_DYNAMIC_SQL 
 and ID.type_1099=:Income_Tax_Type1 
 and P.vendor_id=:vendor_id3 
 and I.invoice_id=:invoice_id3 
 and nvl ( id.income_tax_region , 'No Tax Region' )=:nvl_id_income_tax_region_No_Ta
GROUP BY P.vendor_id, I.invoice_num,I.invoice_id,
                     I.invoice_date, I.invoice_amount, ID.type_1099, ITR.region_code, id.income_tax_region
--Q_REGION_DETAIL
SELECT    decode(ID.income_tax_region,'','No Tax Region',
                 replace(replace(substr(ITR.region_long_name,1,20)||' ('||
                 ID.income_tax_region||')','#','\#'),'.','\.')) Region,
                  ITR.region_code, 
      	P.vendor_id,
	I.invoice_id,
	P.vendor_name,  
                 P.segment1 Vendor_Number,
                 decode(replace(replace(PII.income_tax_id,'-',''),' ',''),'000000000','',PII.income_tax_id) Tax_ID_Number, 
                 pvs.vendor_site_code Tax_Reporting_Site,
                 ID.type_1099 Income_Tax_Type,
                 I.invoice_num,
                 TO_CHAR(I.invoice_date,'YYYY-MM-DD') invoice_date,
                 decode(I.invoice_amount,0,
                    decode(I.cancelled_amount,null,0,decode(greatest(I.cancelled_date,:p_end_date+1),
                        I.cancelled_date,I.cancelled_amount,I.invoice_amount)),
                        I.invoice_amount) invoice_amount,
                        nvl(id.income_tax_region,'No Tax Region') 
FROM    ap_income_tax_regions ITR,
               ap_reporting_entities_all RE,
               ap_reporting_entity_lines_all REL,
               AP_1099_TAPE_DATA_ALL TD,
               /* FUSION INITIATIVE CHANGES BEGIN po_vendors */ POZ_SUPPLIERS_V /* FUSION INITIATIVE CHANGES END*/ P,
               /* FUSION INITIATIVE CHANGES BEGIN po_vendor_sites */ POZ_SUPPLIER_SITES_V /* FUSION INITIATIVE CHANGES END*/ PVS,
               gl_code_combinations CC,
               ap_invoices_all I,
               ap_checks_all C,
               /* FUSION INITIATIVE CHANGES BEGIN ap_bank_accounts */ CE_BANK_ACCOUNTS /* FUSION INITIATIVE CHANGES END*/ ABA,
               ap_invoice_distributions_all ID,
               ap_invoice_payments_all IP,
	       CE_BANK_ACCT_USES_ALL BAU, -- added by bug 8739088 by anupgupt
	       poz_suppliers_pii PII
WHERE   ID.income_tax_region = ITR.region_short_name (+)
AND	ID.POSTED_FLAG = 'Y'

AND     P.vendor_id = PII.vendor_id (+)
--and        c.void_date is null  --4480766  rchandan for bug#9709459
AND     (c.void_date is null 
         OR c.void_date NOT BETWEEN :p_start_date AND :p_end_date) --rchandan for bug#9709459
AND       (:p_input_region_short_name is null OR
                ID.income_tax_region = :p_input_region_short_name)
AND        P.vendor_id = PVS.vendor_id
and c.org_id = td.org_id
AND pvs.VENDOR_SITE_ID =
(SELECT min(pvs2.VENDOR_SITE_ID)
    FROM POZ_SITE_ASSIGNMENTS_ALL_M PVSA
       , POZ_SUPPLIER_SITES_V pvs2
   WHERE pvs2.VENDOR_SITE_ID          = PVSA.VENDOR_SITE_ID
     AND PVSA.BU_ID                   = TD.org_id
     AND pvs2.tax_reporting_site_flag = 'Y'
     AND pvs2.vendor_id               = p.vendor_id
     )

AND        P.vendor_id=I.vendor_id
AND	P.vendor_id=TD.vendor_id 
AND TD.org_id       = :P_BUSINESS_UNIT
AND      ((:p_fed_reportable = 'Y' and P.federal_reportable_flag = 'Y')
               OR (:p_fed_reportable = 'N' or :p_fed_reportable is null))
AND      I.invoice_id=IP.invoice_id
AND      I.invoice_id=ID.invoice_id
AND     C.check_id  = ip.check_id  --2670501
/* FUSION INITIATIVE CHANGES BEGIN temporarily commented, bank_account_id not present.	
AND      C.bank_account_id = ABA.bank_account_id	
FUSION INITIATIVE CHANGES END*/
AND      IP.accounting_date BETWEEN :p_start_date  AND      :p_end_date
/*AND      ID.accounting_date BETWEEN :p_start_date  AND      :p_end_date ---bug 12393629 16294327*/
AND      ID.type_1099 is not null
--AND     decode(:P_query_driver, 'INV', ID.dist_code_combination_id,
                       --ABA.asset_code_combination_id) = CC.code_combination_id
&LP_QUERY_DRIVER	---	 bug 5851995 6725024
AND      RE.tax_entity_id = :p_tax_entity_id
AND      RE.tax_entity_id = REL.tax_entity_id
AND      CC.chart_of_accounts_id =:C_CHART_ACCTS_ID
AND      C.ce_bank_acct_use_id = BAU.bank_acct_use_id  -- added by bug 8739088 by anupgupt
AND      BAU.bank_account_id = ABA.bank_account_id -- added by bug 8739088 by anupgupt
&C_DYNAMIC_SQL 
GROUP BY  ITR.region_long_name,
                 ID.income_tax_region,
	ITR.region_code,
 	P.vendor_id,
	I.invoice_id,
                 p.vendor_name,
                 P.segment1  ,
                 decode(replace(replace(PII.income_tax_id,'-',''),' ',''),'000000000','',PII.income_tax_id), 
                 pvs.vendor_site_code,
                 ID.type_1099  ,
                 I.invoice_num,
                 I.invoice_date,
                 decode(I.invoice_amount,0,
                    decode(I.cancelled_amount,null,0,decode(greatest(I.cancelled_date,:p_end_date+1),
                        I.cancelled_date,I.cancelled_amount,I.invoice_amount)),
                        I.invoice_amount)

UNION

SELECT    decode(ID.income_tax_region,'','No Tax Region',
                 replace(replace(substr(ITR.region_long_name,1,20)||' ('||
                 ID.income_tax_region||')','#','\#'),'.','\.')) Region,
                  ITR.region_code,
      	P.vendor_id,
	I.invoice_id,
	P.vendor_name,
                 P.segment1 Vendor_Number,
                 decode(replace(replace(PII.income_tax_id,'-',''),' ',''),'000000000','',PII.income_tax_id) Tax_ID_Number, 
                 null Tax_Reporting_Site,
                 ID.type_1099 Income_Tax_Type,
                 I.invoice_num,
                 TO_CHAR(I.invoice_date,'YYYY-MM-DD') invoice_date,
                 decode(I.invoice_amount,0,
                    decode(I.cancelled_amount,null,0,decode(greatest(I.cancelled_date,:p_end_date+1),
                        I.cancelled_date,I.cancelled_amount,I.invoice_amount)),
                        I.invoice_amount) invoice_amount,
                        nvl(id.income_tax_region,'No Tax Region') 
FROM    ap_income_tax_regions ITR,
               ap_reporting_entities_all RE,
               ap_reporting_entity_lines_all REL,
                AP_1099_TAPE_DATA_ALL TD,
               /* FUSION INITIATIVE CHANGES BEGIN po_vendors */ POZ_SUPPLIERS_V /* FUSION INITIATIVE CHANGES END*/ P, 
               gl_code_combinations CC,
               ap_invoices_all I,
               ap_checks_all C,
               /* FUSION INITIATIVE CHANGES BEGIN ap_bank_accounts */ CE_BANK_ACCOUNTS /* FUSION INITIATIVE CHANGES END*/ ABA,
               CE_BANK_ACCT_USES_ALL BAU, /*rchandan for bug#9709459*/
               ap_invoice_distributions_all ID,
               ap_invoice_payments_all IP,  -- Bug 1131150
	       poz_suppliers_pii PII
WHERE   ID.income_tax_region = ITR.region_short_name (+)
AND	ID.POSTED_FLAG = 'Y'
AND     P.vendor_id = PII.vendor_id (+)
--and        c.void_date is null  --4480766  rchandan for bug#9709459
AND     (c.void_date is null 
         OR c.void_date NOT BETWEEN :p_start_date AND :p_end_date) --rchandan for bug#9709459
AND       (:p_input_region_short_name is null OR
                ID.income_tax_region = :p_input_region_short_name)
AND        not exists
  	(select  pvs.vendor_site_code
	from     /* FUSION INITIATIVE CHANGES BEGIN po_vendor_sites */ POZ_SUPPLIER_SITES_V /* FUSION INITIATIVE CHANGES END*/ pvs
	where  pvs.vendor_id = p.vendor_id)
AND        P.vendor_id=I.vendor_id
AND	P.vendor_id=TD.vendor_id 
AND TD.org_id       = :P_BUSINESS_UNIT
AND      ((:p_fed_reportable = 'Y' and P.federal_reportable_flag = 'Y')
               OR (:p_fed_reportable = 'N' or :p_fed_reportable is null))
AND      I.invoice_id=IP.invoice_id
AND      I.invoice_id=ID.invoice_id
AND     C.check_id  =  ip.check_id  
/* FUSION INITIATIVE CHANGES BEGIN temporarily commented, bank_account_id not present.	
AND      C.bank_account_id = ABA.bank_account_id	
FUSION INITIATIVE CHANGES END*/
AND C.CE_BANK_ACCT_USE_ID = BAU.BANK_ACCT_USE_ID /*rchandan for bug#9709459*/
AND BAU.BANK_ACCOUNT_ID = ABA.BANK_ACCOUNT_ID /*rchandan for bug#9709459*/
AND      IP.accounting_date BETWEEN :p_start_date  AND      :p_end_date
/*AND      ID.accounting_date BETWEEN :p_start_date  AND      :p_end_date   ---bug 12393629 16294327 */
AND      ID.type_1099 is not null
--AND     decode(:P_query_driver, 'INV', ID.dist_code_combination_id,
                       --ABA.asset_code_combination_id) = CC.code_combination_id
&LP_QUERY_DRIVER	---	 bug 5851995 6725024
AND      RE.tax_entity_id = :p_tax_entity_id
AND      RE.tax_entity_id = REL.tax_entity_id
AND      CC.chart_of_accounts_id = :C_CHART_ACCTS_ID 
&C_DYNAMIC_SQL 
GROUP BY  ITR.region_long_name,
                 ID.income_tax_region,
	ITR.region_code,
      	P.vendor_id,
	I.invoice_id,
	P.vendor_name,
                 P.segment1  ,
                 decode(replace(replace(PII.income_tax_id,'-',''),' ',''),'000000000','',PII.income_tax_id), 
                 ID.type_1099  ,
                 I.invoice_num,
                 I.invoice_date,
                 decode(I.invoice_amount,0,
                    decode(I.cancelled_amount,null,0,decode(greatest(I.cancelled_date,:p_end_date+1),
                        I.cancelled_date,I.cancelled_amount,I.invoice_amount)),
                        I.invoice_amount)
ORDER BY 2,3,9,5
--Q_REGION_SUMMARY
SELECT   decode(ID.income_tax_region,'','No Tax Region',
        	   replace(replace(substr(ITR.region_long_name,1,20)||' ('||
        	   ID.income_tax_region||')','#','\#'),'.','\.')) Region,
                 ITR.region_code Region_code,
                 nvl(ID.income_tax_region,'No Tax Region') Region_Sname,
                 ID.type_1099 Income_Tax_Type,
	count(distinct(p.vendor_name)) No_of_1099_Vendors
FROM    ap_income_tax_regions ITR,
               ap_reporting_entities_all RE,
               ap_reporting_entity_lines_all REL,
               AP_1099_TAPE_DATA_ALL TD,
               /* FUSION INITIATIVE CHANGES BEGIN po_vendors */ POZ_SUPPLIERS_V /* FUSION INITIATIVE CHANGES END*/ P,
               gl_code_combinations CC,
               ap_invoices_all I,
               ap_checks_all C,
               /* FUSION INITIATIVE CHANGES BEGIN ap_bank_accounts */ CE_BANK_ACCOUNTS /* FUSION INITIATIVE CHANGES END*/ ABA,
               CE_BANK_ACCT_USES_ALL BAU, /*rchandan for bug#9709459*/
               ap_invoice_distributions_all ID,
               ap_invoice_payments_all IP
 WHERE  ID.income_tax_region = ITR.region_short_name (+)
AND	ID.POSTED_FLAG = 'Y'
--and        c.void_date is null  rchandan for bug#9709459
AND     (c.void_date is null 
         OR c.void_date NOT BETWEEN :p_start_date AND :p_end_date) --rchandan for bug#9709459
AND       (:p_input_region_short_name is null OR
                ID.income_tax_region = :p_input_region_short_name)
AND        P.vendor_id=I.vendor_id
AND	ID.POSTED_FLAG = 'Y'
AND	P.vendor_id=TD.vendor_id 
AND TD.org_id       = :P_BUSINESS_UNIT
AND      ((:p_fed_reportable = 'Y' and P.federal_reportable_flag = 'Y')
               OR (:p_fed_reportable = 'N' or :p_fed_reportable is null))
AND      I.invoice_id=IP.invoice_id
AND      I.invoice_id=ID.invoice_id
AND     C.check_id  = ip.check_id  
/* FUSION INITIATIVE CHANGES BEGIN temporarily commented, bank_account_id not present.	
AND      C.bank_account_id = ABA.bank_account_id	
FUSION INITIATIVE CHANGES END*/
AND C.CE_BANK_ACCT_USE_ID = BAU.BANK_ACCT_USE_ID /*rchandan for bug#9709459*/
AND BAU.BANK_ACCOUNT_ID = ABA.BANK_ACCOUNT_ID /*rchandan for bug#9709459*/
AND      IP.accounting_date BETWEEN :p_start_date  AND      :p_end_date
/*AND      ID.accounting_date BETWEEN :p_start_date  AND      :p_end_date ---bug 12393629 16294327*/
AND      ID.type_1099 is not null
--AND     decode(:P_query_driver, 'INV', ID.dist_code_combination_id,
                       --ABA.asset_code_combination_id) = CC.code_combination_id
&LP_QUERY_DRIVER	---	 bug 5851995 6725024  
AND      RE.tax_entity_id = :p_tax_entity_id
AND      RE.tax_entity_id = REL.tax_entity_id
AND      CC.chart_of_accounts_id = :C_CHART_ACCTS_ID 
&C_DYNAMIC_SQL 
GROUP BY ID.type_1099,ID.income_tax_region, 
                     ITR.region_long_name, ITR.region_code
ORDER BY  1,2,3
--Q_bu
select MO_UTILS.GET_ORG_NAME(:P_BUSINESS_UNIT) C_BUSINESS_UNIT from dual
================================================================================================================================
-------------------------------------------------U.S. 1099 Supplier Exceptions Data Model-----------------------------------------------------------
--Q_Vendor
SELECT
			    pv.vendor_name                                                                                                         vendor_name1,
			    pv.segment1                                                                                                            vendor_num,
			    decode(replace(replace(pii.income_tax_id, '-', ''), ' ', ''), '000000000', '', pii.income_tax_id)                      tax_id,
			    pv.vendor_id                                                                                                           vendor_id
			FROM
			    poz_suppliers_v    pv,
			    poz_suppliers_pii  pii
			WHERE
			    NVL(pv.federal_reportable_flag, 'N') = 'Y'
			    AND pv.vendor_id = pii.vendor_id(+)
			AND EXISTS (select 1 FROM  
					     ap_invoices_all i,
					     ap_invoice_payments_all ip,
					     ap_invoice_distributions_all id,
					     ap_checks_all ac 
					WHERE
					    pv.vendor_id = i.vendor_id
					    AND  i.invoice_id = ip.invoice_id 
					    AND id.invoice_id = i.invoice_id 
					    AND  ip.check_id = ac.check_id      
					    AND  id.posted_flag = 'Y'  
					    AND ac.org_id = :p_business_unit  
					    AND ip.accounting_date BETWEEN NVL2(:P_START_DATE,TO_DATE(:LP_START_DATE,'YYYY-MM-DD') ,ip.accounting_date)
					    AND TO_DATE(TO_CHAR(SYSDATE, 'yyyy/mm/dd'),'YYYY-MM-DD')                                     
			)
			AND NOT EXISTS (
					   SELECT
					       'vendor already merged'
					   FROM
					       poz_supplier_merge_requests adv
					   WHERE
					       adv.from_vendor_id = pv.vendor_id
					       AND adv.process_flag || '' = 'Y'
				       )
			ORDER BY vendor_name1,tax_id
--Q_EXCEPTION_FED
--exception no 1099 site
SELECT pv.vendor_id vendor_id1,
  lc.displayed_field exception4,
  lc.lookup_code exception_code1,
  --'SUPPLIER' error_level,
  NULL vendor_site_code1, 
  NULL state1
FROM POZ_SUPPLIERS_V pv,
  ap_lookup_codes lc
WHERE ( NVL ( pv.federal_reportable_flag , 'N' ) = 'Y'
AND EXISTS
  (SELECT
    /*+ NO_UNNEST */
    'site exists'
  FROM POZ_SUPPLIER_SITES_V
  WHERE vendor_id = pv.vendor_id
  )
AND NOT EXISTS
  (SELECT
    /*+ NO_UNNEST */
    'no 1099 site'
  FROM POZ_SUPPLIER_SITES_V
  WHERE NVL ( tax_reporting_site_flag , 'N' ) = 'Y'
  AND vendor_id                               = pv.vendor_id
  )
AND lc.lookup_type = '1099 VENDOR EXCEPTION'
AND lc.lookup_code = 'NO 1099 SITE' )
AND ( :vendor_id   = pv.vendor_id)
UNION
--exception null tin
SELECT pv.vendor_id vendor_id1,
  lc.displayed_field exception4,
  lc.lookup_code exception_code1,
  --'SUPPLIER' error_level,
  NULL vendor_site_code1, 
  NULL state1
FROM POZ_SUPPLIERS_V pv,
  ap_lookup_codes lc,
  (SELECT DISTINCT person_id,
    national_identifier_number
  FROM PER_national_identifiers
  ) papf, --bug6050423
  POZ_SUPPLIERS_PII pii,
  PER_PERSONS PP
WHERE ( ( pii.income_tax_id IS NULL
OR REPLACE ( REPLACE ( NVL ( papf.national_identifier_number , NVL ( NULL
  /*Pv.individual_1099*/
  , pii.income_tax_id ) ) , '-' , '' ) , ' ' , '' ) IS NULL
OR REPLACE ( REPLACE ( NVL ( papf.national_identifier_number , NVL ( NULL
  /*Pv.individual_1099*/
  , pii.income_tax_id ) ) , '-' , '' ) , ' ' , '' ) = '000000000' )
AND NVL ( pv.federal_reportable_flag , 'N' )        = 'Y'
AND lc.lookup_type                                  = '1099 VENDOR EXCEPTION'
AND lc.lookup_code                                  = 'NULL TIN'
AND pv.VENDOR_ID                                    = pii.VENDOR_ID (+)
AND pv.party_id                                     = PP.party_id (+)
AND PP.person_id                                    = papf.person_id (+) )
AND ( :vendor_id                                    = pv.vendor_id)
UNION
--exception null org type
SELECT pv.vendor_id vendor_id1,
  lc.displayed_field exception4,
  lc.lookup_code exception_code1,
  --'SUPPLIER' error_level,
  NULL vendor_site_code1, 
  NULL state1
FROM POZ_SUPPLIERS_V pv,
  ap_lookup_codes lc
WHERE ( pv.organization_type_lookup_code    IS NULL
AND NVL ( pv.federal_reportable_flag , 'N' ) = 'Y'
AND lc.lookup_type                           = '1099 VENDOR EXCEPTION'
AND lc.lookup_code                           = 'NULL ORGANIZATION TYPE' )
AND ( :vendor_id                             = pv.vendor_id)
UNION
--exception non std state
SELECT pv.vendor_id vendor_id1,
  lc.displayed_field exception4,
  lc.lookup_code exception_code1,
  --'SITE' error_level,
  pvs.vendor_site_code vendor_site_code1, 
  pvs.state state1
FROM POZ_SUPPLIER_SITES_V pvs,
  ap_lookup_codes lc,
  POZ_SUPPLIERS_V pv
WHERE ( pvs.vendor_id                           = pv.vendor_id
AND NVL ( pv.federal_reportable_flag , 'N' )    = 'Y'
AND lc.lookup_type                              = '1099 VENDOR EXCEPTION'
AND ( NVL ( pvs.tax_reporting_site_flag , 'N' ) = 'Y'
OR EXISTS
  (SELECT
    /*+ NO_UNNEST */
    'Only One Site Exists'
  FROM POZ_SUPPLIER_SITES_V pvs1
  WHERE pvs1.vendor_id = pv.vendor_id
  GROUP BY pvs1.vendor_id
  HAVING COUNT ( * ) = 1
  ) )
AND ( ( pvs.state                                                   IS NULL
AND SUBSTR ( NVL ( pv.organization_type_lookup_code , 1 ) , 1 , 7 ) != 'FOREIGN'
AND lc.lookup_code                                                   = 'NULL STATE' )
OR ( lc.lookup_code                                                  = 'NON-STANDARD STATE'
AND SUBSTR ( NVL ( pv.organization_type_lookup_code , 1 ) , 1 , 7 ) != 'FOREIGN'
AND NOT EXISTS
  (SELECT
    /*+ NO_UNNEST */
    'Match on state'
  FROM AP_Income_Tax_Regions
  WHERE pvs.state = region_short_name
  AND sysdate     < NVL ( inactive_date , sysdate + 1 )
  AND sysdate    >= NVL ( active_date , sysdate )
  )
AND pvs.state                                                       IS NOT NULL
AND NOT EXISTS /*Bug 28163617*/
( SELECT 1
   FROM HZ_GEOGRAPHY_IDENTIFIERS ID,
   HZ_GEOGRAPHIES C
   WHERE ID.COUNTRY_CODE             = 'US'
   AND ID.GEOGRAPHY_TYPE           ='STATE'
   AND C.GEOGRAPHY_ID              = ID.GEOGRAPHY_ID
   AND UPPER(ID.IDENTIFIER_VALUE)  = UPPER(pvs.state)
   AND  C.GEOGRAPHY_CODE IS NOT NULL
   AND LENGTH (C.GEOGRAPHY_CODE) = 2))
OR ( lc.lookup_code                                                  = 'NULL ADDRESS LINES'
AND ( ( pvs.address_line1                                           IS NULL
OR pvs.city                                                         IS NULL
OR pvs.zip                                                          IS NULL )
AND SUBSTR ( NVL ( pv.organization_type_lookup_code , 1 ) , 1 , 7 ) != 'FOREIGN' ) )
OR ( lc.lookup_code                                                  = 'NULL FOREIGN ADDRESS'
AND ( ( pvs.address_line1                                           IS NULL
OR pvs.country                                                      IS NULL )
AND SUBSTR ( NVL ( pv.organization_type_lookup_code , 1 ) , 1 , 7 )  = 'FOREIGN' ) ) ) )
AND ( :vendor_id                                                     = pv.vendor_id)
UNION
--exception foreign vendor
SELECT pv.vendor_id vendor_id1,
  lc.displayed_field exception4,
  lc.lookup_code exception_code1,
  --'SUPPLIER' error_level,
  NULL vendor_site_code1, 
  NULL state1
FROM POZ_SUPPLIERS_V pv,
  ap_lookup_codes lc
WHERE ( NVL ( pv.federal_reportable_flag , 'N' )                    = 'Y'
AND SUBSTR ( NVL ( pv.organization_type_lookup_code , 1 ) , 1 , 7 ) = 'FOREIGN'
AND lc.lookup_type                                                  = '1099 VENDOR EXCEPTION'
AND lc.lookup_code                                                  = 'FOREIGN VENDOR' )
AND ( :vendor_id                                                    = pv.vendor_id)
--Removed exception duplicate tin bug 26755053
UNION
--exception non std tin
SELECT pv.vendor_id vendor_id1,
  lc.displayed_field exception4,
  lc.lookup_code exception_code1,
  --'SUPPLIER' error_level,
  NULL vendor_site_code1, 
  NULL state1
FROM POZ_SUPPLIERS_V pv ,
  ap_lookup_codes lc,
  (SELECT DISTINCT person_id ,
    national_identifier_number
  FROM PER_national_identifiers
  ) papf, --bug6050423
  POZ_SUPPLIERS_PII pii,
  PER_PERSONS PP
WHERE ( NVL ( pv.federal_reportable_flag , 'N' )                     = 'Y'
AND SUBSTR ( NVL ( pv.organization_type_lookup_code , 1 ) , 1 , 7 ) != 'FOREIGN'
AND ( LENGTH ( REPLACE ( REPLACE ( NVL ( papf.national_identifier_number , NVL ( NULL
  /*Pv.individual_1099*/
  , pii.income_tax_id ) ) , '-' , '' ) , ' ' , '' ) ) != 9
OR NVL ( LENGTH ( ltrim ( TRANSLATE ( REPLACE ( REPLACE ( NVL ( papf.national_identifier_number , NVL ( NULL
  /*Pv.individual_1099*/
  , pii.income_tax_id ) ) , '-' , '' ) , ' ' , '' ) , '1234567890' , '1111111111' ) , '1' ) ) , 0 ) != 0 )
AND lc.lookup_type                                                                                   = '1099 VENDOR EXCEPTION'
AND lc.lookup_code                                                                                   = 'NON-STANDARD TIN'
AND pv.VENDOR_ID                                                                                     = pii.VENDOR_ID (+)
AND pv.party_id                                                                                      = PP.party_id (+)
AND PP.person_id                                                                                     = papf.person_id (+))
AND ( :vendor_id                                                                                     = pv.vendor_id)  
order by 1,2,3,4,5
--Q_EXCEP_SITE
SELECT lc.displayed_field displayed_field,
			  lc.description
			FROM ap_lookup_codes lc
			WHERE lc.lookup_type                      = '1099 VENDOR EXCEPTION'
                  AND lc.lookup_code in ('NULL STATE','NON-STANDARD STATE','NULL ADDRESS LINES','NULL FOREIGN ADDRESS')
			AND NVL(lc.end_date_active, sysdate + 1) >= sysdate
			ORDER BY lc.displayed_field
--Q_EXCEP_CONDITION
SELECT lc.displayed_field displayed_field,
			  lc.description
			FROM ap_lookup_codes lc
			WHERE lc.lookup_type                      = '1099 VENDOR EXCEPTION'
                  AND lc.lookup_code not in ('NULL STATE','NON-STANDARD STATE','NULL ADDRESS LINES','NULL FOREIGN ADDRESS','DUPLICATE TIN') /*	Bug 26755053*/
			AND NVL(lc.end_date_active, sysdate + 1) >= sysdate
			ORDER BY lc.displayed_field
====================================================================================================================================================

-------------------------------------------------------------Unprocessed Accounting Transactions Report-------------------------------------------------------------------------
--Q_BATCH_INTERFACE
SELECT distinct ds.ledger_name led_name,
             ds.ledger_id led_id,
             ds.transaction_name trans_name,
             --ds.transaction_name_perf trans_name_perf,
             ds.ledger_currency ledger_currency_code,
             ds.amount led_amt, 
             ds.row_count row_count,
             to_char(ds.ledger_id)||'-'||ds.trans_id DRILLDOWN_LINK,
             to_char(ds.ledger_id)||'-'||ds.transaction_type DRILLDOWN_TRANSTYPE_LINK,
             ds.creation_date num_days, 
             --decode(ds.transaction_type, 'ORA_GL_JOURNAL', 'General Ledger Journal', 'ORA_JOURNAL_INTERFACE', 'Journal Interface', ds.transaction_type) trans_type,
             lkup.meaning trans_type,
             ds.created_on created_on
       FROM ( 
              SELECT greatest(sum(decode(jeh.currency_code, 'STAT', 0, nvl(jeh.running_total_accounted_dr,0))), sum(decode(jeh.currency_code, 'STAT', 0, nvl(jeh.running_total_accounted_cr,0)))) amount
                   --,substr(replace(replace(gl_message.get_message('GL_AUTORUN_BATCH_IDENTIFIER', 'N'), '{BATCH_NAME}', jeb.name), '{BATCH_PERIOD}', jeb.default_period_name), 1, 1000) transaction_name
                   ,substr(replace(replace(&G_AUTORUN_BATCH_ID , '{BATCH_NAME}', jeb.name), '{BATCH_PERIOD}', jeb.default_period_name), 1, 1000) transaction_name
                   ,lgrb.name ledger_name
                   ,lgrb.currency_code ledger_currency
                   ,lgrb.ledger_id ledger_id
                   ,to_char(jeb.je_batch_id) trans_id
                   ,extract(day from (sysdate - jeb.creation_date)) creation_date
                   ,'ORA_GL_JOURNAL' transaction_type
                   ,jeb.creation_date created_on
                   --,count(*) row_count
                   , 1 row_count
              FROM gl_je_batches jeb, 
                   gl_je_headers jeh, 
                   gl_ledgers lgrb
              WHERE (jeb.status < 'P' OR jeb.status > 'P')
              AND   jeb.status <> 'u'
              --AND   greatest(jeb.default_effective_date, jeb.creation_date) >= :effective_start_date
              &WHERE_START_DATE_BATCH
              &WHERE_END_DATE_BATCH
              AND   jeh.je_batch_id = jeb.je_batch_id
              AND   nvl(jeh.display_alc_journal_flag, 'Y') = 'Y'
              AND   lgrb.ledger_id = jeh.ledger_id
              GROUP BY jeb.name, jeb.default_period_name, lgrb.ledger_id, jeb.je_batch_id, lgrb.name, lgrb.currency_code, jeb.creation_date
              UNION
              SELECT null amount
                   --, substr(replace(replace(gl_message.get_message('GL_AUTORUN_REPORT_JRNLIMPORT', 'N'),'{JRL_SOURCE}', decode(js2.import_using_key_flag,'Y', js2.user_je_source_name,interf.user_je_source_name)), '{GROUP_ID}', interf.group_id),1,1000) transaction_name
                   , substr(replace(replace(&G_AUTORUN_JRNL_IMPORT,'{JRL_SOURCE}', decode(js2.import_using_key_flag,'Y', js2.user_je_source_name,interf.user_je_source_name)), '{GROUP_ID}', interf.group_id),1,1000) transaction_name
                   ,lgri.name ledger_name 
                   ,lgri.currency_code ledger_currency
                   ,lgri.ledger_id ledger_id
                   ,interf.user_je_source_name ||'-'|| interf.group_id trans_id
                   ,interf.creation_date creation_date
                   ,'ORA_JOURNAL_INTERFACE' transaction_type
                   ,interf.created_on
                   ,interf.row_count
              FROM (SELECT inter.user_je_source_name
                         ,inter.group_id
                         ,nvl(decode(inter.ledger_id, -1, NULL, inter.ledger_id), decode(inter.set_of_books_id, -1, NULL, inter.set_of_books_id)) ledger_id
                         --,extract(day from (sysdate - nvl(inter.creation_date, inter.accounting_date))) creation_date
                         --,nvl(inter.creation_date,inter.accounting_date) created_on
                         ,max(extract(day from (sysdate - nvl(inter.creation_date, inter.date_created)))) creation_date 
                         ,max(nvl(inter.creation_date, inter.date_created)) created_on
                         --,count(*) row_count
                         ,1 row_count
                    FROM gl_interface inter
                    --WHERE inter.accounting_date >= :effective_start_date
                    &WHERE_START_DATE_INTER
                    &WHERE_END_DATE_INTER
                    AND status != 'PROCESSED'
                    GROUP BY inter.user_je_source_name, 
                            inter.group_id, 
                            nvl(decode(inter.ledger_id, -1, NULL, inter.ledger_id), decode(inter.set_of_books_id, -1, NULL, inter.set_of_books_id)), 
                            --nvl(inter.creation_date, inter.accounting_date)
                            trunc(nvl(inter.creation_date, inter.date_created))
                  ) interf, 
                  gl_ledgers lgri,
                  gl_je_sources js2
              WHERE js2.je_source_key(+) = interf.user_je_source_name 
              AND lgri.ledger_id(+) = interf.ledger_id
              UNION
              SELECT  decode(nvl(sum(xal.accounted_dr),sum(xal.accounted_cr)),NULL,to_number(NULL), greatest(sum(decode(xal.currency_code, 'STAT', 0, nvl(xal.accounted_dr,0))), sum(decode(xal.currency_code, 'STAT', 0, nvl(xal.accounted_cr,0))))) amount
                      ,dat.transaction_name trans_name
                      --,dat.transaction_name trans_name_perf
                      ,lgr.name ledger_name
                      ,lgr.currency_code ledger_currency
                      ,lgr.ledger_id led_id
                      ,to_char(nvl(xal.ae_header_id, dat.event_id)) trans_id
                      ,dat.age creation_date
                      ,dat.transaction_type_code transaction_type
                      ,dat.date_created  created_on
                      --,xal.creation_date  created_on
                      --,count(*) row_count
                      ,1 row_count
              FROM GL_AUTORUN_UNPROCESSED_DATA_GT dat,
                   gl_ledgers lgr,
                   xla_ae_lines xal
              WHERE lgr.ledger_id = dat.ledger_id
              AND   xal.ae_header_id(+) = dat.ae_header_id
              AND   xal.application_id(+) = dat.application_id
              GROUP BY dat.transaction_name, lgr.name, lgr.currency_code, lgr.ledger_id, dat.age, dat.transaction_type_code, nvl(xal.ae_header_id, dat.event_id), dat.date_created --xal.creation_date
             )ds
             ,gl_lookups lkup
       WHERE ds.transaction_type = lkup.lookup_code
       &WHERE_PARAMS_CLAUSE
       AND lkup.lookup_type = 'ORA_TRANSACTION_TYPE'
       ORDER BY ds.ledger_name , lkup.meaning, ds.amount desc --, num_days desc, trans_name
	   
--Q_EFF_START_DATE
--SELECT to_char(min(trunc(decode(current_period.start_date,current_period.quarter_start_date,prior_quarter.quarter_start_date,current_period.quarter_start_date))), 'YYYY/MM/DD') effective_start_date
            SELECT nvl(min(trunc(decode(current_period.start_date,current_period.quarter_start_date,prior_quarter.quarter_start_date,current_period.quarter_start_date))), (sysdate -90)) effective_start_date
            FROM gl_date_period_map period_map,gl_ledgers ledger,gl_period_statuses current_period,gl_period_statuses prior_quarter
            WHERE period_map.period_set_name    = ledger.period_set_name 
            AND period_map.period_type        = ledger.accounted_period_type
            AND period_map.period_type        = current_period.period_type
            AND period_map.period_type        = prior_quarter.period_type
            AND period_map.accounting_date    = trunc(sysdate)
            AND current_period.ledger_id      = ledger.ledger_id
            AND current_period.period_name    = period_map.period_name
            AND prior_quarter.ledger_id       = ledger.ledger_id
            AND prior_quarter.end_date        = current_period.quarter_start_date - 1 
            AND current_period.application_id = 101 
            AND prior_quarter.application_id  = 101
===============================================================================================================================================
------------------------------------------------------------------Unreconciled Transactions Report--------------------------------------------------------------------------
SELECT   GRR.recon_rule_name recon_type
         ,GCT.concat_segments je_account
         ,GCT.recon_reference
         ,&REC_STATUS_SELECT recon_status
         ,&REC_GROUP_SELECT recon_id
         ,&REC_DATE_SELECT recon_date
         ,GCT.batch_name
         ,GCT.journal_name je_name
         ,js.user_je_source_name je_source
         ,jc.user_je_category_name je_category
         ,h.description JE_DESCRIPTION
         ,GCT.period_name
         ,to_char(GCT.effective_date,'YYYY-MM-DD') effective_date
         ,GCT.je_line_num
         ,GCT.currency_code
         ,entered_dr
         ,entered_cr
         ,accounted_dr
         ,accounted_cr
         ,to_date(sysdate) - to_date(gct.effective_date) days_Outstanding
         ,NVL(accounted_dr,0) - NVL(accounted_cr,0) net_acct_balance
FROM gl_clearing_acct_recon_gt GCT,
     gl_reconciliation_rules GRR,
     gl_je_headers h,
     gl_code_combinations c,
     gl_je_batches gjb,
     gl_lookups l,
     gl_je_sources js,
     gl_je_categories jc
WHERE GCT.recon_rule_id     = GRR.recon_rule_id(+)
AND gct.je_header_id        = h.je_header_id
AND gct.code_combination_id = c.code_combination_id
and GCT.je_batch_id     = Gjb.je_batch_id
and GCT.recon_status    = l.lookup_code
and l.lookup_type       = 'ORA_GL_LINE_RECON_STATUS'
and js.je_source_name   = gjb.je_source
and jc.je_category_name = h.je_category
&DAS_WHERE
AND &FLEXDATA_SECURE = 'N'
ORDER BY  GRR.recon_rule_name
         ,GCT.concat_segments
         ,GCT.recon_reference
==========================================================================================================================================
----------------------------------------------Update and Report Income Tax Details Data Model--------------------------------------------------------------
--Q_get_regions
SELECT  substr(pv.vendor_name,1,30) supplier_name_R,
                substr(pv.segment1,1,20) supplier_num_R,
                pss.vendor_site_id site_id_R,
                substr(pss.vendor_site_code, 1, 13) site_code_R,
                AP_APXT7CMT_XMLP_PKG.C_VENDOR_GEO_STATE_FORMULA(pss.state) region_R,
                pv.vendor_id supplier_id_R,
                count(distinct d.invoice_distribution_id) count_R 
	    FROM    AP_Invoice_Distributions d, 
		        AP_Invoices i,
                POZ_Supplier_Sites_V pss, 
				POZ_Suppliers_V pv,
                AP_Invoice_Payments ip
        WHERE   (pv.vendor_id = :P_vendor_option OR nvl(:P_vendor_option, -1) = -1)
        AND     ((:P_region_code not in ('VENDOR SITE', 'INCOME TAX REPORTING SITE')                             
		           AND NVL(d.income_tax_region, 'DuMmY') <> :P_region_code)
                 OR (:P_region_code = 'VENDOR SITE'
                            AND NVL(d.income_tax_region, 'DuMmY') <> AP_APXT7CMT_XMLP_PKG.C_VENDOR_GEO_STATE_FORMULA(pss.state) 
                            AND AP_APXT7CMT_XMLP_PKG.C_VENDOR_GEO_STATE_FORMULA(pss.state) in (SELECT region_short_name
                                                       FROM   ap_income_tax_regions
                                                       WHERE  TRUNC(sysdate) < nvl(inactive_date,TRUNC(sysdate)+1)
                                                       AND    TRUNC(sysdate) >= nvl(active_date,TRUNC(sysdate))))
                  OR(:P_region_code = 'INCOME TAX REPORTING SITE'                                                          
				    AND NVL(d.income_tax_region, 'DuMmY') <>                                                                                                                  (select pss2.state
                                                            from poz_supplier_sites_v pss2
                                                            where pss2.tax_reporting_site_flag= 'Y'
                                                            and pss2.vendor_id=pv.vendor_id
                                                            and pss2.state in
                                                                              (SELECT region_short_name
                                                                               FROM   ap_income_tax_regions
                                                                               WHERE  TRUNC(sysdate) < nvl(inactive_date,TRUNC(sysdate)+1)
                                                                               AND    TRUNC(sysdate) >= nvl(active_date,TRUNC(sysdate)))
AND ROWNUM = 1 /* Bug 28947711 */))
                )
        AND     pv.vendor_id = i.vendor_id
        AND     pss.vendor_site_id = i.vendor_site_id
        AND     i.invoice_id = d.invoice_id
        AND     i.invoice_id = ip.invoice_id
        AND     ip.accounting_date between :g_report_start_date and :g_report_end_date
        AND     nvl(pv.federal_reportable_flag,'N') = 'Y'
	AND	i.org_id=:p_bu_id
        GROUP BY pv.vendor_id, pv.vendor_name, pss.vendor_site_id,pss.vendor_site_code, pv.segment1, pss.state
        ORDER BY upper(pv.vendor_name), upper(pss.vendor_site_code)
--Q_get_miscs
SELECT substr(pv.vendor_name,1,30) supplier_name,
                substr(pv.segment1,1,20) supplier_num,
                substr(pv.type_1099,1,10) type_1099,
                pv.vendor_id supplier_id,
                count(distinct d.invoice_distribution_id) count_type 
	    FROM    AP_Invoice_Distributions d, 
		        AP_Invoices i, 
				POZ_Suppliers_V pv,
                AP_Invoice_Payments ip
        WHERE   (pv.vendor_id = :P_vendor_option OR nvl(:P_vendor_option, -1) = -1)
        AND     pv.vendor_id = i.vendor_id
        AND     i.invoice_id = d.invoice_id
        AND     i.invoice_id = ip.invoice_id
        AND     ip.accounting_date between :g_report_start_date and :g_report_end_date
        AND     ((pv.type_1099 != d.type_1099
                                   AND pv.type_1099 IS NOT NULL 
                                   AND d.type_1099 IS NOT NULL)
                     OR  (pv.type_1099 IS NULL AND d.type_1099 IS NOT NULL)
                     OR  (pv.type_1099 IS NOT NULL AND d.type_1099 IS NULL))
        AND    d.line_type_lookup_code    <>  'AWT'  
	AND    i.org_id=:p_bu_id
		GROUP BY pv.vendor_id, pv.vendor_name, pv.segment1,pv.type_1099
        ORDER BY upper(pv.vendor_name)
==================================================================================================================================
---------------------WIP Cost Data Model-----------------------
--FII_WIP_COST_DM
SELECT WORK_DEFINITION_AS_OF_DATE,
work_order_number,
Finished_Item, 
Finished_item_description,
component,
component_description,
Quantity_Required,
Quantity_Issued,
std_cost,
extended_cost,
resource_code,
usage_rate,
actual_usage_rate,
usage_cost,
NVL(job_cost,0) job_cost,
NVL(wip_balance,0) wip_balance,
NVL(material_variance,0) material_variance
FROM 
(
select to_char(wob.WORK_DEFINITION_AS_OF_DATE,'RRRR/MM/DD') WORK_DEFINITION_AS_OF_DATE,
       wob.work_order_number,
	   esi.item_number Finished_Item, 
       esi.DESCRIPTION Finished_item_description,
	   null component, 
       null component_description, 
       null Quantity_Required ,  
       null Quantity_Issued,
	   null std_cost,
	   null extended_cost,
	   crrv.resource_code,
       NVL(wor.required_usage,0) usage_rate,
NVL(wor.ACTUAL_RESOURCE_USAGE,0) actual_usage_rate,
	   NVL((crrv.total_rate*wor.ACTUAL_RESOURCE_USAGE),0) usage_cost,
	   (crrv.total_rate*wor.ACTUAL_RESOURCE_USAGE) job_cost,
            0 WIP_Balance,
			0 material_variance
        	   from WIE_WO_OPERATION_RESOURCES wor, 
                    --WIS_RESOURCES_B wr,
					WIE_WORK_ORDERS_B WOB,
                    EGP_SYSTEM_ITEMS esi,
					CST_RESOURCE_RATES_VCP_V crrv,
					WIE_WO_OPERATIONS_V wwo
			 where  crrv.Resource_id = wor.RESOURCE_ID 
			   and wor.WO_OPERATION_ID = wwo.WO_OPERATION_ID
			   and wob.INVENTORY_ITEM_ID = esi.INVENTORY_ITEM_ID
               and WOb.ORGANIZATION_ID = esi.ORGANIZATION_ID
			   and WWO.work_order_id  = wob.work_order_id
			   and wob.work_order_number = :P_WORK_ORDER_NO
union all
select to_char(wob.WORK_DEFINITION_AS_OF_DATE,'RRRR/MM/DD') WORK_DEFINITION_AS_OF_DATE,
wob.work_order_number,
esi1.item_number Finished_Item, 
esi1.DESCRIPTION Finished_item_description,
esi.item_number component, 
esi.DESCRIPTION component_description, 
nvl( wom.quantity,0)   Quantity_Required,  
nvl(wom.issued_quantity,0) Quantity_Issued,
( SELECT csc.total_cost FROM  EGP_SYSTEM_ITEMS esi_cost,
           CST_STD_COSTS csc
WHERE csc.inventory_item_id = esi_cost.inventory_item_id
--AND csc.organization_id = esi_cost.organization_id
AND to_char(wob.WORK_DEFINITION_AS_OF_DATE,'RRRR/MM/DD') between to_char(csc.EFFECTIVE_start_DATE,'RRRR/MM/DD') and to_char(csc.EFFECTIVE_END_DATE,'RRRR/MM/DD')
AND esi_cost.item_number = esi.item_number
and rownum = 1) Std_cost, 
(nvl(( SELECT csc.total_cost FROM  EGP_SYSTEM_ITEMS esi_cost,
           CST_STD_COSTS csc
WHERE csc.inventory_item_id = esi_cost.inventory_item_id
--AND csc.organization_id = esi_cost.organization_id
and rownum = 1
AND to_char(wob.WORK_DEFINITION_AS_OF_DATE,'RRRR/MM/DD') between to_char(csc.EFFECTIVE_start_DATE,'RRRR/MM/DD') and to_char(csc.EFFECTIVE_END_DATE,'RRRR/MM/DD') 
AND esi_cost.item_number = esi.item_number),0) * nvl(wom.issued_quantity,0)) extended_cost,
null resource_code,
null usage_rate,
null actual_usage_rate,
null usage_cost,
(nvl(( SELECT csc.total_cost FROM  EGP_SYSTEM_ITEMS esi_cost,
           CST_STD_COSTS csc
WHERE csc.inventory_item_id = esi_cost.inventory_item_id
--AND csc.organization_id = esi_cost.organization_id
and rownum = 1
AND to_char(wob.WORK_DEFINITION_AS_OF_DATE,'RRRR/MM/DD') between to_char(csc.EFFECTIVE_start_DATE,'RRRR/MM/DD') and to_char(csc.EFFECTIVE_END_DATE,'RRRR/MM/DD') 
AND esi_cost.item_number = esi.item_number),0) * nvl(wom.issued_quantity,0)) job_cost,
nvl((select SUM(cwoc.QUANTITY * cwoc.UNIT_COST * cwoc.WIP_TXN_SIGN)  from CST_WORK_ORDER_COSTS cwoc,
cst_work_orders cwo
where 1=1
and cwo.work_order_number = :P_WORK_ORDER_NO
AND cwo.cst_work_order_id = cwoc.cst_work_order_id
AND NOT (cwoc.WIP_COST_TYPE       = 'SCRAP'
AND cwoc.ABSORPTION_TYPE          =1) 
) ,0) WIP_Balance,
(select CWCV.VARIANCE_AMOUNT from CST_WO_COST_VARIANCES cwcv,cst_work_orders cwo 
where cwcv.cst_work_order_id = cwo.cst_work_order_id 
AND VARIANCE_TYPE = 'MAT_RATE_VARIANCE'
AND CWCV.INVENTORY_ITEM_ID = ESI.INVENTORY_ITEM_ID
and cwo.work_order_number = :P_WORK_ORDER_NO ) material_variance
FROM WIE_WO_OPERATION_MATERIALS_V WOM,
WIE_WORK_ORDERS_B WOB,
EGP_SYSTEM_ITEMS esi,
EGP_SYSTEM_ITEMS esi1
WHERE WOM.work_order_id  = wob.work_order_id
and wom.INVENTORY_ITEM_ID = esi.INVENTORY_ITEM_ID
and WOM.ORGANIZATION_ID = esi.ORGANIZATION_ID
and wob.INVENTORY_ITEM_ID = esi1.INVENTORY_ITEM_ID
and WOb.ORGANIZATION_ID = esi1.ORGANIZATION_ID
and wob.WORK_ORDER_STATUS_ID = 10001
--Completed Status
and wob.work_order_number =   :P_WORK_ORDER_NO
union all
select to_char(wob.WORK_DEFINITION_AS_OF_DATE,'RRRR/MM/DD') WORK_DEFINITION_AS_OF_DATE,
wob.work_order_number,
esi1.item_number Finished_Item, 
esi1.DESCRIPTION Finished_item_description,
esi.item_number component, 
esi.DESCRIPTION component_description, 
nvl( wom.quantity,0)   Quantity_Required,  
nvl(wom.issued_quantity,0) Quantity_Issued,
( SELECT csc.total_cost FROM  EGP_SYSTEM_ITEMS esi_cost,
           CST_STD_COSTS csc
WHERE csc.inventory_item_id = esi_cost.inventory_item_id
--AND csc.organization_id = esi_cost.organization_id
AND to_char(SYSDATE,'RRRR/MM/DD') between to_char(csc.EFFECTIVE_start_DATE,'RRRR/MM/DD') and to_char(csc.EFFECTIVE_END_DATE,'RRRR/MM/DD')
AND esi_cost.item_number = esi.item_number
and rownum = 1) Std_cost, 
(nvl(( SELECT csc.total_cost FROM  EGP_SYSTEM_ITEMS esi_cost,
           CST_STD_COSTS csc
WHERE csc.inventory_item_id = esi_cost.inventory_item_id
--AND csc.organization_id = esi_cost.organization_id
and rownum = 1
AND to_char(SYSDATE,'RRRR/MM/DD') between to_char(csc.EFFECTIVE_start_DATE,'RRRR/MM/DD') and to_char(csc.EFFECTIVE_END_DATE,'RRRR/MM/DD') 
AND esi_cost.item_number = esi.item_number),0) * nvl(wom.issued_quantity,0)) extended_cost,
null resource_code,
null usage_rate,
null actual_usage_rate,
null usage_cost,
(nvl(( SELECT csc.total_cost FROM  EGP_SYSTEM_ITEMS esi_cost,
           CST_STD_COSTS csc
WHERE csc.inventory_item_id = esi_cost.inventory_item_id
--AND csc.organization_id = esi_cost.organization_id
and rownum = 1
AND to_char(SYSDATE,'RRRR/MM/DD') between to_char(csc.EFFECTIVE_start_DATE,'RRRR/MM/DD') and to_char(csc.EFFECTIVE_END_DATE,'RRRR/MM/DD') 
AND esi_cost.item_number = esi.item_number),0) * nvl(wom.issued_quantity,0)) job_cost,
nvl((select SUM(cwoc.QUANTITY * cwoc.UNIT_COST * cwoc.WIP_TXN_SIGN)  from CST_WORK_ORDER_COSTS cwoc,
cst_work_orders cwo
where 1=1
and cwo.work_order_number = :P_WORK_ORDER_NO
AND cwo.cst_work_order_id = cwoc.cst_work_order_id
AND NOT (cwoc.WIP_COST_TYPE       = 'SCRAP'
AND cwoc.ABSORPTION_TYPE          =1) 
) ,0) WIP_Balance,
(select CWCV.VARIANCE_AMOUNT from CST_WO_COST_VARIANCES cwcv,cst_work_orders cwo 
where cwcv.cst_work_order_id = cwo.cst_work_order_id 
AND VARIANCE_TYPE = 'MAT_RATE_VARIANCE'
AND CWCV.INVENTORY_ITEM_ID = ESI.INVENTORY_ITEM_ID
and cwo.work_order_number = :P_WORK_ORDER_NO ) material_variance
FROM WIE_WO_OPERATION_MATERIALS_V WOM,
WIE_WORK_ORDERS_B WOB,
EGP_SYSTEM_ITEMS esi,
EGP_SYSTEM_ITEMS esi1
WHERE WOM.work_order_id  = wob.work_order_id
and wom.INVENTORY_ITEM_ID = esi.INVENTORY_ITEM_ID
and WOM.ORGANIZATION_ID = esi.ORGANIZATION_ID
and wob.INVENTORY_ITEM_ID = esi1.INVENTORY_ITEM_ID
and WOb.ORGANIZATION_ID = esi1.ORGANIZATION_ID
and wob.WORK_ORDER_STATUS_ID != 10001
and wob.work_order_number =   :P_WORK_ORDER_NO
)
order by work_order_number,resource_code

--FII_WIP_FINAL_COST
SELECT WOB.work_order_number, 
       NVL((csc.total_cost * WOB.COMPLETED_QUANTITY * -1),0) total_cost, 
       WOB.COMPLETED_QUANTITY,
	   esi_cost.item_number finished_item,
	   esi_cost.description Finished_item_description,
       to_char(WOB.actual_completion_date,'DD/MM/RRRR') FROM  EGP_SYSTEM_ITEMS esi_cost,
             WIE_WORK_ORDERS_B WOB,
           CST_STD_COSTS csc
WHERE csc.inventory_item_id = esi_cost.inventory_item_id
AND csc.organization_id = esi_cost.organization_id
AND to_char(wob.actual_completion_date,'DD/MM/RRRR') between to_char(csc.EFFECTIVE_start_DATE,'DD/MM/RRRR') and to_char(csc.EFFECTIVE_END_DATE,'DD/MM/RRRR')
AND WOB.inventory_item_id = esi_cost.inventory_item_id
and wob.WORK_ORDER_STATUS_ID = 10001
--Completed Status
AND WOB.work_order_number = :P_WORK_ORDER_NO
union
SELECT WOB.work_order_number, 
       NVL((csc.total_cost * WOB.COMPLETED_QUANTITY * -1),0) total_cost, 
       WOB.COMPLETED_QUANTITY,
	   esi_cost.item_number finished_item,
	   esi_cost.description Finished_item_description,
       to_char(WOB.actual_completion_date,'DD/MM/RRRR') FROM  EGP_SYSTEM_ITEMS esi_cost,
             WIE_WORK_ORDERS_B WOB,
           CST_STD_COSTS csc
WHERE csc.inventory_item_id = esi_cost.inventory_item_id
AND csc.organization_id = esi_cost.organization_id
AND to_char(SYSDATE,'DD/MM/RRRR') between to_char(csc.EFFECTIVE_start_DATE,'DD/MM/RRRR') and to_char(csc.EFFECTIVE_END_DATE,'DD/MM/RRRR')
AND WOB.inventory_item_id = esi_cost.inventory_item_id
and wob.WORK_ORDER_STATUS_ID != 10001
--Completed Status
AND WOB.work_order_number = :P_WORK_ORDER_NO
union
SELECT WOB.work_order_number, 
     nvl(WOB.COMPLETED_QUANTITY,0) total_cost, 
       nvl(WOB.COMPLETED_QUANTITY,0) COMPLETED_QUANTITY,
	   esi_cost.item_number finished_item,
	   esi_cost.description Finished_item_description,
       to_char(WOB.actual_completion_date,'DD/MM/RRRR') FROM  EGP_SYSTEM_ITEMS esi_cost,
             WIE_WORK_ORDERS_B WOB
WHERE wob.inventory_item_id = esi_cost.inventory_item_id
AND wob.organization_id = esi_cost.organization_id
AND  nvl(WOB.COMPLETED_QUANTITY,0) =0
AND WOB.work_order_number = :P_WORK_ORDER_NO

--G_4
(select sum(variance_amount) from CST_WO_COST_VARIANCES cwcv,cst_work_orders cwo 
where cwcv.cst_work_order_id = cwo.cst_work_order_id and cwo.work_order_number = :P_WORK_ORDER_NO ) variance_amount

--G_5
SELECT completed_quantity
from WIE_WORK_ORDERS_B wwb
WHERE wwb.work_order_number = :P_WORK_ORDER_NO

--G_6
SELECT csc.total_cost "output_uni_cost"
FROM CST_STD_COSTS csc,cst_work_orders cst
where to_char(cst.WORK_DEFINITION_AS_OF_DATE,'RRRR/MM/DD') between to_char(csc.EFFECTIVE_start_DATE,'RRRR/MM/DD') 
and to_char(csc.EFFECTIVE_END_DATE,'RRRR/MM/DD') 
AND csc.inventory_item_id = cst.inventory_item_id
AND cst.work_order_number = :P_WORK_ORDER_NO
and cst.WORK_ORDER_STATUS_ID = 10001
--Completed Status
and rownum = 1
union
SELECT csc.total_cost "output_uni_cost"
FROM CST_STD_COSTS csc,cst_work_orders cst
where to_char(SYSDATE,'RRRR/MM/DD') between to_char(csc.EFFECTIVE_start_DATE,'RRRR/MM/DD') 
and to_char(csc.EFFECTIVE_END_DATE,'RRRR/MM/DD') 
AND csc.inventory_item_id = cst.inventory_item_id
and cst.WORK_ORDER_STATUS_ID != 10001
AND cst.work_order_number = :P_WORK_ORDER_NO

--G_7
select SUM(QUANTITY * UNIT_COST * WIP_TXN_SIGN) AS VALUE from CST_WORK_ORDER_COSTS cwoc,cst_work_orders cwo
where NOT (WIP_COST_TYPE       = 'SCRAP'
AND ABSORPTION_TYPE          =1)
and cwoc.CST_WORK_ORDER_ID= cwo.CST_WORK_ORDER_ID
and cwo.work_order_number = :P_WORK_ORDER_NO

--G_8
select SUM(QUANTITY * UNIT_COST * WIP_TXN_SIGN) AS SCRAP_VALUE from CST_WORK_ORDER_COSTS cwoc,cst_work_orders cwo
where WIP_COST_TYPE       = 'SCRAP'
and cwoc.CST_WORK_ORDER_ID= cwo.CST_WORK_ORDER_ID
and cwo.work_order_number = :P_WORK_ORDER_NO
==========================================================================================================================================
-------------------------------------------------------Yearly Tax Withholdings For Italy Data Model----------------------------------------------------\
--Q_TOT_INPS
SELECT   SUM (JG_INFO_N6) 		WTH_AMOUNT
	 , JG_INFO_N8 			TAX_RATE
	  ,JG_INFO_V15 			TAX_NAME
FROM jg_zz_vat_trx_gt
WHERE jg_info_n15 = :P_LEGAL_ENTITY_ID
AND jg_info_v17 = :CP_INPS
GROUP BY jg_info_n8, jg_info_v15
ORDER BY jg_info_n8
--Q_TOT_IRPEF
SELECT   SUM (jg_info_n7) 		WTH_AMOUNT
	, JG_INFO_N9 			TAX_RATE
	, JG_INFO_V16 			TAX_NAME
FROM jg_zz_vat_trx_gt
WHERE jg_info_n15 = :P_LEGAL_ENTITY_ID
AND jg_info_v18 = :CP_IRPEF
GROUP BY jg_info_n9, jg_info_v16
ORDER BY jg_info_n9
--Q_SUM_INPS
SELECT   SUM (JG_INFO_N6) WTH_AMOUNT
	 , JG_INFO_N8     TAX_RATE
	 ,JG_INFO_V15 	  TAX_NAME
FROM jg_zz_vat_trx_gt
WHERE jg_info_n15 = :P_LEGAL_ENTITY_ID
AND jg_info_v17 = :CP_INPS
AND jg_info_n2 = :SITE_ID
GROUP BY jg_info_n8, jg_info_v15
ORDER BY jg_info_n8
--Q_SUM_IRPEF
--SELECT   SUM (jg_info_n7) WTH_AMOUNT
       , JG_INFO_N9 	TAX_RATE
       , JG_INFO_V16    TAX_NAME
FROM jg_zz_vat_trx_gt
WHERE jg_info_n15 = :P_LEGAL_ENTITY_ID
AND jg_info_v18 = :CP_IRPEF
AND jg_info_n2 = :SITE_ID
GROUP BY jg_info_n9, jg_info_v16
ORDER BY jg_info_n9
--Q_WHT
SELECT
	 JG_INFO_V1			SUPPLIER_NAME
	,JG_INFO_N1 		VENDOR_ID
	,JG_INFO_V2 		TAXPAYER_ID
	,JG_INFO_V3 		SUPPLIER_NUMBER
	,JG_INFO_V4 		SITE_CODE
	,JG_INFO_N2 		SITE_ID
	,JG_INFO_V5 		VAT_REGISTRATION_NUMBER
	,JG_INFO_V6 		SUPPLIER_ADDR1
	,JG_INFO_V7 		SUPPLIER_ADDR2
	,JG_INFO_V8 		SUPPLIER_ADDR3
	,JG_INFO_V9 		SUPPLIER_ADDRESS
	,JG_INFO_V10 		SUPPLIER_CITY
	,JG_INFO_V11		SUPPLIER_ZIP
	,JG_INFO_V12 		SUPPLIER_PROVINCE
	,JG_INFO_V13 		SUPPLIER_COUNTRY
	,JG_INFO_N3 		INVOICE_ID
	,JG_INFO_N4 		INVOICE_AMOUNT
	,JG_INFO_N5 		AMOUNT_PAID
	,JG_INFO_V14 		INVOICE_NUMBER
	,JG_INFO_N6 		INPS_WTHAMOUNT
	,JG_INFO_N7 		IRPEF_WTHAMOUNT
	,JG_INFO_N8 		INPS_RATE
	,JG_INFO_N9 		IRPEF_RATE
	,JG_INFO_V15 		INPS_TAXNAME
	,JG_INFO_V16 		IRPEF_TAXNAME
	,JG_INFO_N10 		CF_AMOUNT_PAID
	,JG_INFO_N11 		CF_RATIO_PAID
	,JG_INFO_N12 		CF_GC_AMOUNT
	,JG_INFO_N13 		CF_EX_AMOUNT
	,JG_INFO_N14 		CF_TAXABLE_AMOUNT  
	,JG_INFO_V17 		INPS_SUPPNAME  
	,JG_INFO_V18  		IRPEF_SUPPNAME
  FROM jg_zz_vat_trx_gt
 WHERE JG_INFO_N15 = :P_LEGAL_ENTITY_ID 
 ORDER BY decode (:P_ORDER_BY, 'S', JG_INFO_V1,
                               'V', JG_INFO_V5,
                               'T', JG_INFO_V2,
                                    JG_INFO_V1)
--Q_LEGAL_ENTITY
SELECT  XR.registered_name 						LEGAL_ENTITY_NAME
	           ,XR.registration_number 			TAX_PAYER_ID
	           ,FT.territory_short_name 		LE_COUNTRY
	           ,HL.address1 				ADDRESS_LINE_1
	           ,HL.address2 				ADDRESS_LINE_2
	           ,HL.address3 				ADDRESS_LINE_3
	           ,HL.city   				TOWN_OR_CITY
	           ,HL.postal_code    				POSTAL_CODE
	           ,hp.party_id       				LE_PARTY_ID
	           ,HL.county  				REGION
	           ,ZPTP.rep_registration_number 	VAT_REGISTRATION_NUMBER
 		   	   ,gll.currency_code 				CURRENCY_CODE
	   FROM    xle_registrations       XR
	           ,xle_entity_profiles     XEP
	           ,hz_locations        HL
	           ,hz_parties              HP
	           ,fnd_territories_vl      FT
	           ,ZX_PARTY_TAX_PROFILE    ZPTP
	           ,XLE_ETB_PROFILES       XETPB
			   ,GL_LEDGER_LE_V        GLL
	   WHERE   XR.source_id          =  XEP.legal_entity_id
	    AND     XR.source_table       = 'XLE_ENTITY_PROFILES'
	    AND     XEP.legal_entity_id   = :P_LEGAL_ENTITY_ID
	    AND     XR.location_id        =  HL.location_id
	    AND     HL.country            =  FT.TERRITORY_CODE
	    AND     XEP.party_id          =  HP.party_id
	    AND     ZPTP.PARTY_TYPE_CODE = 'LEGAL_ESTABLISHMENT' 
	    AND     XETPB.party_id=ZPTP.party_id
	    AND     XETPB.legal_entity_id = XEP.legal_entity_id 
		AND     GLL.legal_entity_id=XEP.legal_entity_id
	    AND     XETPB.MAIN_ESTABLISHMENT_FLAG = 'Y'
	    AND     XR.identifying_flag   = 'Y'
	    AND     HL.INTERNAL_FLAG = 'Y'
		AND     GLL.ledger_category_code = 'PRIMARY'
=========================================================================================================================================
AP Invoice Query:-  select  fabu.bu_name Business_Unit,
	         ps.VENDOR_NAME Supplier,
			 aia.invoice_num AP_Invoice_Number,
			 rsh.attribute1 supplier_invoice_number,
			 pha.segment1 po_number,
			 rsl.line_num line_number,
			 rsh.receipt_num receipt_number
			
			from fun_all_business_units_v fabu,
			ap_invoice_lines_all aila ,
			ap_invoices_all aia ,
			rcv_shipment_lines rsl,
			rcv_shipment_headers rsh,
			po_headers_all pha,poz_suppliers_v
			 ps
	where 1=1
	AND aia.invoice_id=aila.invoice_id
	--AND aia.invoice_num='R-1011000088-10002'
	and (aia.creation_date >= :p_from_date 
	          or :p_from_date is null)
	   and (aia.creation_date <= :p_to_date 
	          or :p_to_date is null)
	and aila.LINE_TYPE_LOOKUP_CODE='ITEM'
	and aila.po_header_id=rsl.po_header_id
	and aila.po_line_id=rsl.po_line_id
	and aila.po_header_id=pha.po_header_id
	AND rsh.shipment_header_id = rsl.shipment_header_id
	AND ps.VENDOR_ID = PHA.VENDOR_ID
	AND fabu.bu_id=pha.PRC_BU_ID
	AND fabu.bu_name=:p_bu
	AND ps.VENDOR_NAME = NVL(:p_SUPPLIER,ps.VENDOR_NAME) 
	AND aia.org_id=pha.PRC_BU_ID
	ORDER BY rsl.line_num
=======================================================================
SELECT hou.name ou_name,
       ph.segment1 po_num,
       ph.po_header_id,
       pol.po_line_id,
       pol.line_num,
       order_type.displayed_field line_type, 
       COALESCE(pd.quantity_ordered,pll.quantity,pol.quantity) quantity,
       (pol.unit_price * (pd.quantity_ordered - pd.quantity_cancelled)) line_amount,
       rsh.receipt_source_code,
       flv_ship_source.meaning receipt_source_code, 
       papf.full_name received_by,
       rsh.vendor_id,
       aps.vendor_name,
       aps.segment1 vendor_number,
       assa.vendor_site_id, 
       assa.vendor_site_code,
       ph.org_id,
       rsh.shipment_num,
       rsh.receipt_num,
       rsh.ship_to_location_id,
       hl.location_code deliver_to,
       rsl.item_description,
       rsl.shipment_line_id,
       rsl.quantity_shipped,
       rsl.quantity_received,
       rsl.unit_of_measure,
       rsl.vendor_item_num,
       flv_shipment.meaning shipment_line_status_code,
       flv_inspection.meaning inspection_status_code,
       rsl.shipment_line_status_code,     
       rct.inspection_status_code,
       flv_tran_type.meaning transaction_type,
       rct.transaction_type transaction_type_lookup_code,    
       rct.transaction_id,
       nvl(rct.source_doc_quantity,0) transaction_qty,
       rct.transaction_date,
       assa.attribute1 vendor_global_code,
       assa.attribute2 entity_supplier_code,
       assa.attribute3 vendor_communication_language,
       pd.attribute1 company_specific_gl_code,
       pol.attribute2 sanction_number,
       pol.attribute3 inspection_required,
       pol.attribute4 end_user_details,
       rsh.attribute1 Invoice_number,
       rct.comments gre_comments,
       rsh.attribute2 exchange_rate_information,
       rsh.attribute3 gst_invoice_amt,
       rsh.attribute4 gst_exchange_rate,
       rsh.attribute5 custom_form_no,
       rct.attribute1 receipt_line_level_tax_rate
  from rcv_transactions             rct,
       rcv_shipment_headers         rsh,
       per_all_people_f             papf,
       rcv_shipment_lines           rsl,
       po_distributions_all         pd,
       po_lines_all                 pol,
       po_line_locations_all        pll,
       po_headers_all               ph,
       ap_suppliers                 aps,
       ap_supplier_sites_all        assa,
       hr_all_organization_units    hou,
       hr_locations                 hl,
       fnd_lookup_values            flv_shipment,
       fnd_lookup_values            flv_inspection,
       fnd_lookup_values            flv_tran_type,
       fnd_lookup_values            flv_ship_source,
       po_lookup_codes              order_type,  
       po_line_types_b              plt          
 WHERE 1 = 1
   and rct.po_header_id            = ph.po_header_id
   and rct.po_line_location_id     = pll.line_location_id
   AND rct.po_line_id              = pol.po_line_id
   AND pol.po_line_id              = pd.po_line_id
   and rct.shipment_line_id        = rsl.shipment_line_id
   and rsl.shipment_header_id      = rsh.shipment_header_id
   AND rct.po_distribution_id      = pd.po_distribution_id
   AND rct.employee_id             = papf.person_id
   AND SYSDATE BETWEEN papf.effective_start_date AND papf.effective_end_date
   and rsh.vendor_id               = aps.vendor_id
   and ph.vendor_site_id           = assa.vendor_site_id 
   AND hou.organization_id         = ph.org_id
   AND rct.deliver_to_location_id  = hl.location_id
   AND rsl.shipment_line_status_code = flv_shipment.lookup_code
   AND flv_shipment.lookup_type    = 'SHIPMENT LINE STATUS'
   AND flv_shipment.language       = USERENV('LANG')
   AND rct.inspection_status_code  = flv_inspection.lookup_code
   AND flv_inspection.lookup_type  = 'INSPECTION STATUS'
   AND flv_inspection.language     = USERENV('LANG')
   AND rct.transaction_type        = flv_tran_type.lookup_code
   AND flv_tran_type.lookup_type   = 'RCV TRANSACTION TYPE'
   AND flv_tran_type.language      = USERENV('LANG')
   AND flv_ship_source.lookup_type = 'SHIPMENT SOURCE TYPE'
   AND flv_ship_source.language    = USERENV('LANG')
   AND flv_ship_source.lookup_code = rsh.receipt_source_code
   AND order_type.lookup_type      = 'ORDER TYPE'                   
   AND order_type.lookup_code      = plt.order_type_lookup_code     
   AND pol.line_type_id            = plt.line_type_id;
====================================================================================
SELECT bu_name,
       region,
       customer_name,
       account_number,
       item_number,
       description,
       warehouse,
       SUM(item_sales) Item_Sales,
       discount,
       freight,
	   customer_type,
	   null net_sale,
	   category_code,
       category_name
	   
	   
FROM   (SELECT rctla.org_id,
               RCTA.sold_to_customer_id,
               (SELECT name
                FROM   hr_operating_units hou
                WHERE  1 = 1
                       AND hou.organization_id = rcta.org_id) BU_NAME,
               eitm.category_code,
               eitm.category_name,
               rctla.inventory_item_id,
               rctla.warehouse_id,
               'ZZ'                                           warehouse,
               rcta.customer_trx_id,
               'XX'                                           Region,
               RCTA.trx_number,
               hp.party_name                                  Customer_Name,
               hca.account_number,
               eitm.item_number,
               eitm.description,
               ( rctld.amount * Nvl(rcta.exchange_rate, 1) )  Item_Sales,
               10                                             Discount,
               10                                             freight,
			   hca.customer_type
        FROM   ra_customer_trx_all rcta,
               ra_customer_trx_lines_all rctla,
               hz_parties hp,
               hz_cust_accounts HCA,
               ra_cust_trx_types_all rctt,
               ra_cust_trx_line_gl_dist_all rctld,
               (SELECT ecv.category_code,
                       ecv.category_name,
                       ev.category_set_id,
                       ev.category_set_name,
                       eic.category_id,
                       eic.inventory_item_id,
                       eic.organization_id,
                       eipv.primary_uom_code,
                       esib.item_number,
                       item_tl.description
                FROM   egp_item_categories eic,
                       egp_categories_vl ecv,
                       egp_category_sets_vl ev,
                       egp_item_primary_uoms_v eipv,
                       egp_system_items_b esib,
                       egp_system_items_tl item_tl
                WHERE  eic.inventory_item_id = esib.inventory_item_id
                       AND eic.organization_id = esib.organization_id
                       AND item_tl.inventory_item_id = esib.inventory_item_id
                       AND item_tl.organization_id = esib.organization_id
                       AND eic.category_id = ecv.category_id
                       AND ev.category_set_id = eic.category_set_id
                       AND ev.category_set_name = 'SCC_Catalog'
                       AND eipv.inventory_item_id = eic.inventory_item_id
                       AND item_tl.LANGUAGE = Userenv('LANG')) eitm
        WHERE  1 = 1
               AND rcta.cust_trx_type_seq_id = rctt.cust_trx_type_seq_id
               AND rcta.customer_trx_id = rctld.customer_trx_id
               AND rctla.customer_trx_line_id = rctld.customer_trx_line_id
               AND rcta.customer_trx_id = rctla.customer_trx_id
               --AND RCTA.trx_number = '1001'
               AND RCTLA.line_type = 'LINE'
               AND RCTA.bill_to_customer_id = hca.cust_account_id(+)
               AND hca.party_id = hp.party_id(+)
               AND RCTla.inventory_item_id = eitm.inventory_item_id
               AND RCTla.warehouse_id = eitm.organization_id
               AND ( eitm.category_id IN ( :P_CATEGORY_id )
                      OR Coalesce(:P_CATEGORY_id, NULL) IS NULL )
               AND ( rcta.org_id IN ( :P_bu_id )
                      OR Coalesce(:P_bu_id, NULL) IS NULL )
               AND ( eitm.inventory_item_id IN ( :P_item_id )
                      OR Coalesce(:P_item_id, NULL) IS NULL )
               AND hca.account_number BETWEEN Nvl(:P_From_Customer_Account,
                                              hca.account_number)
                                              AND
                   Nvl(:P_To_Customer_Account, hca.account_number)
               AND Trunc(rcta.creation_date) >= Nvl(:p_acc_date_From,
                                                Trunc(rcta.creation_date)
                                                )
               AND Trunc(rcta.creation_date) <= Nvl(:p_acc_date_to,
                                                Trunc(rcta.creation_date)))
GROUP  BY bu_name,
          region,
          customer_name,
          account_number,
          item_number,
          description,
          warehouse,
          discount,
          freight,
		  category_code,
		  customer_type,
          category_name
=================================================================================================
------GL REPORT BY SAMBA-----
select ac.*,NVL(ac.opening_balance, 0) + SUM(net_amount) OVER (PARTITION BY account ORDER BY  ACCOUNT,ac.ROW_NUM) RUNNING_CLOSING,
 CASE WHEN  NVL(ac.opening_balance, 0) + SUM(NVL(ac.amount_dr,0) - NVL(amount_cr,0)) OVER (PARTITION BY account ORDER BY  ledger_name,
 bu_code,division,ACCOUNT)>0 THEN 'Dr' ELSE 'Cr' END    balanceindicator

from (select bb.*,nvl((select  SUM(NVL ((NVL(gjl.accounted_dr,0) - NVL(gjl.accounted_dr,0)), 0))  
	 FROM   gl_je_headers gjh,
	 gl_je_lines  gjl,
     GL_CODE_COMBINATIONS GCC
	where 1=1
	and GCC.CODE_COMBINATION_ID = gjl.CODE_COMBINATION_ID
    AND gjl.LEDGER_ID = bb.LEDGER_ID
	AND gcc.segment3=bb.account
	AND      gjh.status = 'P'
	AND      gjl.je_header_id = gjh.je_header_id
	AND  gjl.effective_date <= :p_from_date)  ,0)    opening_balance ,
	ROW_NUMBER() OVER (PARTITION BY bb.account ORDER BY bb.account,bb.transaction_date ,bb.TRANSACTION_NUMBER) AS ROW_NUM
	from (select LEDGER_ID,ledger_name,
legal_entity,
account_description ,
bu_code ,
bu_nmae ,
account ,
division ,
je_category_desc ,
transaction_number ,
transaction_date,
party_number,
party_name ,
bill_no,
bill_date,
remarks,
sum(amount_dr) amount_dr ,
sum(amount_cr) amount_cr ,
sum(net_amount) net_amount

 from 
 ( SELECT   'Q1' query,gjl.LEDGER_ID,gl.NAME ledger_name ,   xe.NAME     legal_entity,
         gl_flexfields_pkg.Get_description_sql ( gcc.chart_of_accounts_id, 3, gcc.segment3 ) account_description ,
         gcc.segment1                                                                        bu_code ,
         gl_flexfields_pkg.Get_description_sql ( gcc.chart_of_accounts_id ,1 ,gcc.segment1 ) bu_nmae ,
         gcc.segment3                                                                        account ,
         gcc.segment6                                                                        division ,
         gjc.je_category_name                                                                je_category_desc ,
         gjh.NAME                                                                            transaction_number ,
         to_char(gjh.DATE_CREATED ,'DD-MON-RR')                                                transaction_date,
         '1'                                                                                party_number,
         '1'                                                                                party_name ,
         '1'                                                                                bill_no,
         to_char(gjh.DATE_CREATED ,'DD-MON-RR')                                              bill_date,
         gjl.description                                                                     remarks,
         nvl(gjl.accounted_dr, 0)                                                            amount_dr ,
         nvl(gjl.accounted_cr, 0)                                                            amount_cr ,
         (nvl(gjl.accounted_dr, 0) - nvl(gjl.accounted_cr, 0))                               net_amount 
FROM     gl_code_combinations gcc ,
         gl_ledgers gl ,
         gl_je_lines gjl ,
         gl_je_headers gjh ,
         gl_je_categories gjc ,
         gl_je_sources gjs ,
         xle_entity_profiles xe
WHERE    1 = 1
AND      gjl.code_combination_id = gcc.code_combination_id
AND      gl.ledger_id = gjl.ledger_id
AND      gjl.je_header_id = gjh.je_header_id
AND      gjh.je_category = gjc.je_category_name
AND      gjh.je_source = gjs.je_source_name
AND      gjh.legal_entity_id = xe.legal_entity_id(+)
AND      gjs.je_source_name IN ('Manual')
AND      gjh.status = 'P'
         --AND      gjh.NAME = 'Journal GL 01'
         ---------------------- PARAMETERS ---------------------
AND 	(gl.NAME  IN (:p_led)
         OR       COALESCE(:p_led,NULL) IS NULL)
AND 	(gcc.segment1  IN (:p_bu)
         OR       COALESCE(:p_bu,NULL) IS NULL)	 
--AND ( xe.name  IN (:P_LEGAL_ENTITY)
   --      OR       COALESCE(:P_LEGAL_ENTITY,NULL) IS NULL)	 
AND      (
                  gcc.segment3 IN (:p_account)
         OR       COALESCE(:p_account,NULL) IS NULL)
AND      (
                  gcc.segment6 IN (:p_division)
         OR       COALESCE(:p_division,NULL) IS NULL)
AND      (gjl.effective_date >= :p_from_date
         OR :p_from_date IS NULL )
AND      (gjl.effective_date <= :p_to_date
         OR :p_to_date IS NULL )
UNION	
--AP
SELECT    'Q3' query,gjl.LEDGER_ID,
	     gl.NAME                                                                       ledger_name ,
         xe.NAME                                                                             legal_entity,
         gl_flexfields_pkg.Get_description_sql ( gcc.chart_of_accounts_id, 3, gcc.segment3 ) account_description ,
         gcc.segment1                                                                        bu_code ,
         gl_flexfields_pkg.Get_description_sql ( gcc.chart_of_accounts_id ,1 ,gcc.segment1 ) bu_nmae ,
         gcc.segment3                                                                        account ,
         gcc.segment6                                                                        division ,
         gjc.je_category_name                                                                je_category_desc ,
         nvl(to_char(aia.DOC_SEQUENCE_VALUE),aia.invoice_num )                                   transaction_number ,
		-- case when aia.DOC_SEQUENCE_VALUE is not null then aia.DOC_SEQUENCE_VALUE else aia.invoice_num end transaction_number,
         to_char( aia.invoice_date ,'DD-MON-RR')                                                          transaction_date,
         hps.party_number                                                                      party_Number,
         hps.party_name                                                                       PartyName ,
         aia.invoice_num                                                                    bill_no,
         to_char( aia.invoice_date ,'DD-MON-RR')                                                                      bill_date,
		 gjl.description                                               remarks,
		 nvl(gjl.accounted_dr, 0) amount_dr,
		 nvl(gjl.accounted_cr, 0) amount_cr,
		 nvl(gjl.accounted_dr, 0)-nvl(gjl.accounted_cr, 0) net_amount
FROM   gl_code_combinations gcc ,
       gl_je_lines gjl ,
       gl_je_headers gjh ,
       gl_je_categories gjc ,
       gl_je_sources gjs ,
       ap_invoices_all aia ,
       hz_parties hps ,
       hz_party_sites hpss ,
       xla_ae_headers xah ,
       xla_transaction_entities xte ,
       xla_events xev ,
       xla_ae_lines xal ,
       gl_import_references gir ,
       fnd_lookup_values flv ,
       gl_ledgers gl ,
       xle_entity_profiles xe ,
       hr_operating_units hou
WHERE  1 = 1
AND    gjl.code_combination_id = gcc.code_combination_id
AND    gjl.je_header_id = gjh.je_header_id
AND    aia.party_id = hps.party_id
AND    aia.party_site_id = hpss.party_site_id
AND    aia.invoice_id = xte.source_id_int_1
AND    xte.application_id = 200
AND    xte.application_id = xev.application_id
AND    xte.application_id = xah.application_id
AND    xev.entity_id = xte.entity_id
AND    xah.entity_id = xte.entity_id
AND    xah.event_id = xev.event_id
AND    xah.ae_header_id = xal.ae_header_id
AND    xal.gl_sl_link_id = gir.gl_sl_link_id
AND    gir.gl_sl_link_table = xal.gl_sl_link_table
AND    gjh.je_header_id = gir.je_header_id
AND    gir.je_header_id = gjl.je_header_id
AND    gir.je_line_num = gjl.je_line_num
AND    gjh.je_category = gjc.je_category_name
AND    gjh.je_source = gjs.je_source_name
AND    flv.lookup_type = 'INVOICE TYPE'
AND    flv.lookup_code = aia.invoice_type_lookup_code
AND    flv.language = userenv('LANG')
AND GJC.je_category_name    = 'Purchase Invoices'
       -- AND XAL.accounting_class_code   LIKE '%TAX%'
AND    gjs.je_source_name = 'Payables'
AND    gjh.status = 'P'
AND    (
              gjl.accounted_cr <> 0
       OR     gjl.accounted_dr <> 0)
AND    (
              xal.accounted_cr <> 0
       OR     xal.accounted_dr <> 0)
AND    gl.ledger_id = gjl.ledger_id
AND    gjh.legal_entity_id = xe.legal_entity_id
AND    aia.org_id = hou.organization_id
AND      gjh.status = 'P'
         ---------------------- PARAMETERS ---------------------
/*AND ( xe.name  IN (:P_LEGAL_ENTITY)
         OR       COALESCE(:P_LEGAL_ENTITY,NULL) IS NULL)	 */
AND 	(gl.NAME  IN (:p_led)
         OR       COALESCE(:p_led,NULL) IS NULL)	 		 
AND 	(gcc.segment1  IN (:p_bu)
         OR       COALESCE(:p_bu,NULL) IS NULL)	 
AND      (
                  gcc.segment3 IN (:p_account)
         OR       COALESCE(:p_account,NULL) IS NULL)
AND      (
                  gcc.segment6 IN (:p_division)
         OR       COALESCE(:p_division,NULL) IS NULL)
AND      (
                  gjl.effective_date >= :p_from_date
         OR       :p_from_date IS NULL )
AND      (
                  gjl.effective_date <= :p_to_date
         OR       :p_to_date IS NULL )	
UNION
SELECT    'Q2' query,gjl.LEDGER_ID,gl.NAME                                                                             ledger_name ,
         xe.NAME                                                                             legal_entity,
         gl_flexfields_pkg.Get_description_sql ( gcc.chart_of_accounts_id, 3, gcc.segment3 ) account_description ,
         gcc.segment1                                                                        bu_code ,
         gl_flexfields_pkg.Get_description_sql ( gcc.chart_of_accounts_id ,1 ,gcc.segment1 ) bu_nmae ,
         gcc.segment3                                                                        account ,
         gcc.segment6                                                                        division ,
         gjc.je_category_name                                                               je_category_desc ,
         rcta.trx_number                                                                     transaction_number ,
         to_char(rcta.trx_date ,'DD-MON-RR')                                                 transaction_date,
         hp.party_number                                                                      party_Number,
         hp.party_name                                                                       PartyName ,
         rcta.trx_number                                                                     bill_no,
         to_char(rcta.trx_date ,'DD-MON-RR')                                                bill_date,
         gjl.description                                               remarks,
         nvl(gjl.accounted_dr, 0)                                                     amount_dr ,
         nvl(gjl.accounted_cr, 0)                                                    amount_cr ,
         nvl(gjl.accounted_dr, 0) - nvl(gjl.accounted_cr, 0)                      net_amount 
FROM   ra_customer_trx_all rcta ,
       hz_cust_accounts hcaa ,
       hz_cust_acct_sites_all hcasa ,
       hz_cust_site_uses_all hcsua ,
       hz_parties hp ,
       hz_party_sites hps ,
       xla_transaction_entities xte ,
       xla_events xev ,
       xla_ae_headers xah ,
       xla_ae_lines xal ,
       gl_import_references gir ,
       gl_je_headers gjh ,
       gl_je_lines gjl ,
       gl_code_combinations gcc ,
       gl_je_categories gjc ,
       gl_je_sources gjs ,
       gl_ledgers gl ,
       xle_entity_profiles xe ,
       hr_operating_units hou
WHERE  1 = 1
AND    gjl.code_combination_id = gcc.code_combination_id
AND    gl.ledger_id = gjl.ledger_id
AND    rcta.bill_to_customer_id = hcaa.cust_account_id
AND    hcaa.party_id = hp.party_id
AND    hcaa.cust_account_id = hcasa.cust_account_id
AND    hcasa.cust_acct_site_id = hcsua.cust_acct_site_id
AND    hcsua.site_use_id = rcta.bill_to_site_use_id
AND    hcasa.party_site_id = hps.party_site_id
AND    rcta.customer_trx_id = xte.source_id_int_1
AND    xte.application_id = 222
AND    xev.entity_id = xte.entity_id
AND    xah.entity_id = xte.entity_id
AND    xah.event_id = xev.event_id
AND    xah.ae_header_id = xal.ae_header_id
AND    xal.gl_sl_link_id = gir.gl_sl_link_id
AND    gir.gl_sl_link_table = xal.gl_sl_link_table
AND    gjl.je_header_id = gjh.je_header_id
AND    gjh.je_header_id = gir.je_header_id
AND    gjl.je_header_id = gir.je_header_id
AND    gir.je_line_num = gjl.je_line_num
AND    gjh.je_category = gjc.je_category_name
AND    gjh.je_source = gjs.je_source_name
AND GJC.je_category_name    = 'Sales Invoices'
AND    gjs.je_source_name = 'Receivables'
AND    (
              gjl.accounted_cr <> 0
       OR     gjl.accounted_dr <> 0)
AND    (
              xal.accounted_cr <> 0
       OR     xal.accounted_dr <> 0)
AND    gjh.status = 'P'
AND    gjh.legal_entity_id = xe.legal_entity_id
AND    rcta.org_id = hou.organization_id
       -- AND RCTA.trx_number     = '211000010000090'
         ---------------------- PARAMETERS ---------------------
AND 	(gl.NAME  IN (:p_led)
         OR       COALESCE(:p_led,NULL) IS NULL)		 
AND 	(gcc.segment1  IN (:p_bu)
         OR       COALESCE(:p_bu,NULL) IS NULL)	 
AND ( xe.name  IN (:P_LEGAL_ENTITY)
         OR       COALESCE(:P_LEGAL_ENTITY,NULL) IS NULL)
AND      (
                  gcc.segment3 IN (:p_account)
         OR       COALESCE(:p_account,NULL) IS NULL)
AND      (
                  gcc.segment6 IN (:p_division)
         OR       COALESCE(:p_division,NULL) IS NULL)
AND      (
                  gjl.effective_date >= :p_from_date
         OR       :p_from_date IS NULL )
AND      (
                  gjl.effective_date <= :p_to_date
         OR       :p_to_date IS NULL )	 
		 ) aa
group by LEDGER_ID,ledger_name,
legal_entity,
account_description ,
bu_code ,
bu_nmae ,
account ,
division ,
je_category_desc ,
transaction_number ,
transaction_date,
party_number,
party_name ,
bill_no,
bill_date,
remarks		 ) bb 
) ac
========================================================================================
/******************************************************************
Date             Developer          Version               Description
07/Jun/2021      ASWAR A        1.0                    Query to fetch Item master Details
****************************************************************/
--
WITH itemcat AS (
    SELECT
        eica.inventory_item_id,
        eica.organization_id,
        ecs.control_level,
        ect.category_name,
        ecs.catalog_code,
        ect.category_id
    FROM
        egp_item_cat_assignments   eica,
        egp_category_sets_b        ecs,
        egp_categories_tl          ect
    WHERE
        1 = 1
        AND ecs.category_set_id = eica.category_set_id
        AND eica.category_id = ect.category_id
        AND ect.language = 'US'
        AND ecs.catalog_code = 'Operations'
), costcat AS (
    SELECT
        eica.inventory_item_id,
        eica.organization_id,
        ecs.control_level,
        ect.category_name,
        ecs.catalog_code,
        ect.category_id
    FROM
        egp_item_cat_assignments   eica,
        egp_category_sets_b        ecs,
        egp_categories_tl          ect
    WHERE
        1 = 1
        AND ecs.category_set_id = eica.category_set_id
        AND eica.category_id = ect.category_id
        AND ect.language = 'US'
        AND ecs.catalog_code = 'Costing'
), account_number_t AS (
    SELECT
        ecv.category_name category_name,
        ( gcc.segment1
          || '.'
          || gcc.segment2
          || '.'
          || gcc.segment3
          || '.'
          || gcc.segment4
          || '.'
          || gcc.segment5
          || '.'
          || gcc.segment6
          || '.'
          || gcc.segment7
          || '.'
          || gcc.segment8 ) inventory_account_number
    FROM
        xla_mapping_set_values   xmsv,
        egp_categories_vl        ecv,
        gl_code_combinations     gcc
    WHERE
        mapping_set_code = 'NTRA_PUR_INV_VAL_MAPPING'   ---short code of mapping set 
        AND xmsv.input_value_constant1 = ecv.category_id
        AND xmsv.value_code_combination_id = gcc.code_combination_id
        AND xmsv.enabled_flag = 'Y'
), costing_category_pl_t AS (
    SELECT
        ecv.category_name category_name1,
        xmsv.value_constant
    FROM
        xla_mapping_set_values   xmsv,
        egp_categories_vl        ecv
    WHERE
        mapping_set_code = 'NTRA_COSTING_CATEGORY_PL'   ---short code of mapping set 
        AND xmsv.input_value_constant1 = ecv.category_id
        AND xmsv.enabled_flag = 'Y'
)
,salesaccount_t as ( SELECT
    esib.inventory_item_id,
    CASE
        WHEN ( gccsa.segment1
               || '.'
               || gccsa.segment2
               || '.'
               || gccsa.segment3
               || '.'
               || gccsa.segment4
               || '.'
               || gccsa.segment5
               || '.'
               || gccsa.segment6
               || '.'
               || gccsa.segment7
               || '.'
               || gccsa.segment8 ) = '.......' THEN
            NULL
        ELSE
            ( gccsa.segment1
              || '.'
              || gccsa.segment2
              || '.'
              || gccsa.segment3
              || '.'
              || gccsa.segment4
              || '.'
              || gccsa.segment5
              || '.'
              || gccsa.segment6
              || '.'
              || gccsa.segment7
              || '.'
              || gccsa.segment8 )
    END salesaccount
FROM
    egp_system_items       esib,
    gl_code_combinations   gccsa
WHERE
    esib.sales_account = gccsa.code_combination_id
    AND ( esib.organization_id IN (
        :p_org_code
    )
          OR least(:p_org_code) IS NULL )
)

SELECT
    esib.item_number,
    esib.description        item_description,
    esib.organization_id,
    esib.inventory_item_id,
    itemcat.category_name   item_category,
    eicv.item_class_name,
    iog.organization_code   org_code,
    costcat.category_name   cost_category,
    nvl(ant.inventory_account_number,(
        SELECT
            (gcc.segment1
             || '.'
             || gcc.segment2
             || '.'
             || gcc.segment3
             || '.'
             || gcc.segment4
             || '.'
             || gcc.segment5
             || '.'
             || gcc.segment6
             || '.'
             || gcc.segment7
             || '.'
             || gcc.segment8) inventory_account_number
        FROM
            xla_mapping_set_flavors   xmsf, gl_code_combinations      gcc
        WHERE
            xmsf.default_ccid = gcc.code_combination_id
            AND mapping_set_code = 'NTRA_PUR_INV_VAL_MAPPING'
    )) inventory_account_number,
    gccsa_T.salesaccount salesaccount,
    (
        SELECT
            ( gcc.segment1
              || '.'
              || gcc.segment2
              || '.'
              || gcc.segment3
              || '.'
              || gcc.segment4
              || '.'
              || gcc.segment5
              || '.'
              || gcc.segment6
              || '.'
              || gcc.segment7
              || '.'
              || gcc.segment8 ) povariance_account_number
        FROM
            xla_mapping_set_values   xmsv,
            gl_code_combinations     gcc
        WHERE
            mapping_set_code = 'NTRA_PUR_VARIANCE_MAPPING'   ---short code of mapping set 
            AND xmsv.value_code_combination_id = gcc.code_combination_id
            AND xmsv.enabled_flag = 'Y'
            AND xmsv.input_value_constant1 = 'Natera, Inc'
    ) povariance_account_number,
    (
        SELECT
            ( gccca.segment1
              || '.'
              || gccca.segment2
              || '.'
              || gccca.segment3
              || '.'
              || gccca.segment4
              || '.'
              || gccca.segment5
              || '.'
              || gccca.segment6
              || '.'
              || gccca.segment7
              || '.'
              || gccca.segment8 ) recinveacc
        FROM
            xla_seg_rule_details   xsd,
            fnd_application_vl     fav,
            gl_code_combinations   gccca
        WHERE
            application_name = 'Cost Management'
            AND xsd.application_id = fav.application_id
            AND xsd.segment_rule_code = 'NTRA_RECEIVING_INSPECTION'
            AND xsd.value_code_combination_id = gccca.code_combination_id
    ) recinveacc,
    (
        SELECT
            ( gccca.segment1
              || '.'
              || gccca.segment2
              || '.'
              || gccca.segment3
              || '.'
              || (
                SELECT
                    aaa.value_constant
                FROM
                    costing_category_pl_t aaa
                WHERE
                    aaa.category_name1 = costcat.category_name
            )
              || '.'
              || gccca.segment5
              || '.'
              || gccca.segment6
              || '.'
              || gccca.segment7
              || '.'
              || gccca.segment8 )
        FROM
            xla_seg_rule_details   xsd,
            fnd_application_vl     fav,
            gl_code_combinations   gccca
        WHERE
            application_name = 'Cost Management'
            AND xsd.application_id = fav.application_id
            AND xsd.segment_rule_code = 'NTRA_COGS_RULE'
            AND xsd.value_code_combination_id = gccca.code_combination_id
            AND segment_rule_type_code = 'C'
    ) cogsaccountnumber,
    (
        SELECT
            ( gccca.segment1
              || '.'
              || gccca.segment2
              || '.'
              || gccca.segment3
              || '.'
              || (
                SELECT
                    aaa.value_constant
                FROM
                    costing_category_pl_t aaa
                WHERE
                    aaa.category_name1 = costcat.category_name
            )
              || '.'
              || gccca.segment5
              || '.'
              || gccca.segment6
              || '.'
              || gccca.segment7
              || '.'
              || gccca.segment8 )
        FROM
            xla_seg_rule_details   xsd,
            fnd_application_vl     fav,
            gl_code_combinations   gccca
        WHERE
            application_name = 'Cost Management'
            AND xsd.application_id = fav.application_id
            AND xsd.segment_rule_code = 'NTRA_INV_ADJ_OFFSET'
            AND xsd.value_code_combination_id = gccca.code_combination_id
            AND segment_rule_type_code = 'C'
    ) inv_adj_account_number,
    (
        SELECT
            ( gccca.segment1
              || '.'
              || gccca.segment2
              || '.'
              || gccca.segment3
              || '.'
              || (
                SELECT
                    aaa.value_constant
                FROM
                    costing_category_pl_t aaa
                WHERE
                    aaa.category_name1 = costcat.category_name
            )
              || '.'
              || gccca.segment5
              || '.'
              || gccca.segment6
              || '.'
              || gccca.segment7
              || '.'
              || gccca.segment8 )
        FROM
            xla_seg_rule_details   xsd,
            fnd_application_vl     fav,
            gl_code_combinations   gccca
        WHERE
            application_name = 'Cost Management'
            AND xsd.application_id = fav.application_id
            AND xsd.segment_rule_code = 'NTRA_COST_ADJ_RULE'
            AND xsd.value_code_combination_id = gccca.code_combination_id
            AND segment_rule_type_code = 'C'
    ) cost_adj_var_acct_number
FROM
    egp_system_items       esib,
    itemcat,
    egp_item_classes_vl    eicv,
    inv_org_parameters     iog,
    costcat,
    account_number_t       ant,
    salesaccount_t   gccsa_T
WHERE
    esib.inventory_item_id = itemcat.inventory_item_id (+)
    AND esib.organization_id = itemcat.organization_id (+)
    AND esib.item_catalog_group_id = eicv.item_class_id
    AND esib.organization_id = iog.organization_id
    AND esib.inventory_item_id = costcat.inventory_item_id (+)
    AND esib.organization_id = costcat.organization_id (+)
    AND itemcat.category_name = ant.category_name (+)
    AND esib.inventory_item_id = gccsa_T.inventory_item_id (+)
    and iog.organization_code='NIM'
    AND ( esib.inventory_item_id IN (
        :p_item
    )
          OR least(:p_item) IS NULL )
    AND ( itemcat.category_name IN (
        :p_item_category_name
    )
          OR least(:p_item_category_name) IS NULL )
    AND ( eicv.item_class_id IN (
        :p_item_class_name
    )
          OR least(:p_item_class_name) IS NULL )
======================================================================================
/******************************************************************
Date             Developer          Version               Description
08/Jun/2021      Aswar A       1.0                    Query to fetch Item Pending ASL Entries Report
****************************************************************/
--
SELECT
    esib.inventory_item_id,
    esib.organization_id,
    esib.item_number   item_pending_asl_entries,
    (
        SELECT
            hp.party_name
        FROM
            egp_trading_partner_items   ep,
            egp_item_relationships_b    eir,
            poz_suppliers               hca,
            hz_parties                  hp
        WHERE
            ep.tp_item_id = eir.tp_item_id
            AND eir.inventory_item_id = esib.inventory_item_id
            AND preference_number IS NULL
            AND ep.tp_type = 'SUPPLIER'
            AND ep.trading_partner_id = hca.party_id
            AND hp.party_id = hca.party_id
            AND ( eir.end_date_active IS NULL
                  OR trunc(eir.end_date_active) > trunc(sysdate) )
            AND ROWNUM = 1
    ) trading_partner,
    (
        SELECT
            ep.tp_item_number
        FROM
            egp_trading_partner_items   ep,
            egp_item_relationships_b    eir,
            poz_suppliers               hca
        WHERE
            ep.tp_item_id = eir.tp_item_id
            AND eir.inventory_item_id = esib.inventory_item_id
            AND preference_number IS NULL
            AND ep.tp_type = 'SUPPLIER'
            AND ep.trading_partner_id = hca.party_id
            AND ( eir.end_date_active IS NULL
                  OR trunc(eir.end_date_active) > trunc(sysdate) )
            AND ROWNUM = 1
    ) supplier_item_number,
    flv.meaning        nir_approved_status,
    CASE
        WHEN flv.meaning = 'Approved' THEN
            nvl(((
                SELECT
                    (from_tz(CAST(ecb.approval_date AS TIMESTAMP), 'UTC') AT TIME ZONE fnd_global.timezone )
                FROM
                    ego_change_lines_b          ecl, ego_engineering_changes_b   ecb
                WHERE
                    1 = 1
                    AND ecb.change_id = ecl.change_id
                    AND ecl.organization_id = esib.organization_id
                    AND ecl.pk1_value = esib.inventory_item_id
                    AND ROWNUM = 1
            )),(from_tz(CAST(esib.creation_date AS TIMESTAMP), 'UTC') AT TIME ZONE fnd_global.timezone))
        ELSE
            NULL
    END approved_date,
    esib.must_use_approved_vendor_flag asl_required
FROM
    egp_system_items_b   esib,
    fnd_lookup_values    flv,
    inv_org_parameters   org
WHERE
    1 = 1
    AND esib.organization_id = org.organization_id
      -- AND ESIB.item_number = 'SKT-100502' --'NAT-800001'
    AND esib.must_use_approved_vendor_flag = 'Y'
    AND flv.lookup_type = 'EGP_APPROVAL_STATUS'
    AND flv.lookup_code = esib.approval_status
    AND flv.source_lang = userenv('LANG')--'US'
    AND org.organization_code = 'NIM'
    AND NOT EXISTS (
        SELECT
            1
        FROM
            po_approved_supplier_list   pasl,
            poz_suppliers_v             psv,
            po_asl_statuses             pas
        WHERE
            1 = 1
            AND pasl.vendor_id = psv.vendor_id
            AND pasl.item_id = esib.inventory_item_id
            AND pasl.owning_organization_id = esib.organization_id
            AND pasl.asl_status_id = pas.status_id
    )
============================================================================================
Select
  CUST_INV.line_amount,
  CUST_INV.revenue_account,
  CUST_INV.customer_account_number,
  CUST_INV.customer_name,
  AgenT_Q.agent,
  AgenT_Q.percentage,
  AgenT_Q.DIVISION,
  AgenT_Q.Supplier_number,
  round(CUST_INV.line_amount*(AgenT_Q.percentage*0.01),2) PERCENTAGE_AMOUNT
 
from (select hca.cust_account_id,

sum((trx_dist.amount
+nvl(sgst.sgst_amount,0)
+nvl(cgst.cgst_amount,0)
+nvl(igst.igst_amount,0)
-- Add Frieght
)) line_amount,
gcc.segment2 revenue_account,
hca.account_number customer_account_number,
hp.party_name customer_name


FROM
ra_customer_trx_all rcta,
ra_cust_trx_line_gl_dist_all trx_dist,
hz_cust_accounts hca,
hz_parties hp,
(SELECT
DISTINCT trx_id,
trx_line_id,
trx_line_number,
ABS (unrounded_tax_amt) igst_amount,
tax_rate igst_rate,
ABS (unrounded_taxable_amt) igst_taxable
FROM zx_lines
WHERE entity_code = 'TRANSACTIONS'
AND tax LIKE '%IGST%'
AND application_id = 222) igst,
(SELECT
DISTINCT trx_id,
trx_line_id,
trx_line_number,
ABS (unrounded_tax_amt) cgst_amount,
tax_rate cgst_rate,
ABS (unrounded_taxable_amt) cgst_taxable
FROM zx_lines
WHERE entity_code = 'TRANSACTIONS'
AND tax LIKE '%CGST%'
AND application_id = 222) cgst,
(SELECT
DISTINCT trx_id,
trx_line_id,
trx_line_number,
ABS (unrounded_tax_amt) sgst_amount,
tax_rate sgst_rate,
ABS (unrounded_taxable_amt) sgst_taxable
FROM zx_lines
WHERE entity_code = 'TRANSACTIONS'
AND tax LIKE '%SGST%'
AND application_id = 222) sgst,
gl_code_combinations gcc,
xla_transaction_entities xte,
xla_ae_headers xah,
xla_ae_lines xal,
xla_distribution_links xdl,
gl_import_references gir,
gl_je_headers gjh,
gl_je_lines gjl
WHERE 1=1
AND rcta.customer_trx_id = trx_dist.customer_trx_id
AND rcta.bill_TO_CUSTOMER_ID = hca.cust_account_id
AND rcta.sold_to_party_id=hp.party_id
--AND rcta.trx_number='56000'
AND account_class='REV'
--Tax
AND trx_dist.customer_trx_id= igst.trx_id(+)
AND trx_dist.customer_trx_line_id = igst.trx_line_id(+)
AND trx_dist.customer_trx_id = sgst.trx_id(+)
AND trx_dist.customer_trx_line_id = sgst.trx_line_id(+)
AND trx_dist.customer_trx_id = cgst.trx_id(+)
AND trx_dist.customer_trx_line_id = cgst.trx_line_id(+)
AND (rcta.trx_number IN (:p_inv)
OR
COALESCE(:p_inv,NULL) IS NULL)
AND TRUNC(rcta.trx_date) BETWEEN NVL(:p_inv_from,TRUNC(rcta.trx_date)) AND NVL(:p_inv_to,TRUNC(rcta.trx_date))
--
AND xte.source_id_int_1 = rcta.customer_trx_id
AND gcc.code_combination_id = gjl.code_combination_id
AND xte.entity_code = 'TRANSACTIONS'
AND xte.application_id = 222
AND xah.entity_id = xte.entity_id
AND xal.ae_header_id = xah.ae_header_id
AND xal.accounting_class_code = 'REVENUE'
AND xdl.ae_header_id = xah.ae_header_id
AND xdl.ae_line_num = xal.ae_line_num
AND xdl.source_distribution_id_num_1 = trx_dist.cust_trx_line_gl_dist_id
AND xdl.application_id = 222
AND gir.gl_sl_link_id = xal.gl_sl_link_id
AND gir.gl_sl_link_table='XLAJEL'
AND gjh.je_header_id = gir.je_header_id
AND gjl.je_header_id = gjh.je_header_id
AND gjl.je_line_num = gir.je_line_num
GROUP BY hca.cust_account_id,
gcc.segment2 ,
hca.account_number ,
hp.party_name) CUST_INV,
(select cust_account_id ACCOUNTZ_ID ,
           ATTRIBUTE3 agent,
           ATTRIBUTE_NUMBER1 percentage,
           ATTRIBUTE_NUMBER3 DIVISION ,
           ATTRIBUTE4 Supplier_number
           from hz_cust_accounts
           
           UNION
           select cust_account_id ACCOUNTZ_ID ,
           ATTRIBUTE7 agent,
           to_number(ATTRIBUTE8) percentage,
           ATTRIBUTE_NUMBER4 DIVISION ,
           ATTRIBUTE9 Supplier_number
           from hz_cust_accounts
            )
Agent_q
where CUST_INV.cust_account_id=Agent_q.ACCOUNTZ_ID(+)
 AND CUST_INV.revenue_account=Agent_q.DIVISION(+)
 




/*to remove time stamp
select to_char(:p_from_date,'dd/mm/yyyy')p_from_date_p,
      to_char(:p_to_date,'dd/mm/yyyy')p_to_date_p  */   
===============================================================================
SELECT iop.organization_code,
po_hdr.segment1 po_number,
po_hdr.comments ,
hp.party_name supplier,
pvsa.vendor_site_code supplier_site,
po_hdr.document_status order_status,
po_hdr.CREATION_DATE order_creation_date,
po_hdr.revision_num,
po_line.line_num,
esib.item_number,
ESIB.ITEM_TYPE,
(SELECT SEGMENT1 || ‘.’ ||
SEGMENT2 || ‘.’ ||
SEGMENT3 || ‘.’ ||
SEGMENT4 || ‘.’ ||
SEGMENT5 || ‘.’ ||
SEGMENT6 || ‘.’ ||
SEGMENT7
FROM Gl_CODE_COMBINATIONS gcc,
PO_DISTRIBUTIONS_ALL pda
WHERE 1 = 1
and pda.po_line_id = po_line.po_line_id
and gcc.CODE_COMBINATION_ID = pda.CODE_COMBINATION_ID
and rownum = 1) INV_EXP_DEFATUL_ACCT,
(SELECT SEGMENT1 || ‘.’ ||
SEGMENT2 || ‘.’ ||
SEGMENT3 || ‘.’ ||
SEGMENT4 || ‘.’ ||
SEGMENT5 || ‘.’ ||
SEGMENT6 || ‘.’ ||
SEGMENT7
FROM Gl_CODE_COMBINATIONS gcc,
PO_DISTRIBUTIONS_ALL pda
WHERE 1 = 1
and pda.po_line_id = po_line.po_line_id
and gcc.CODE_COMBINATION_ID = pda.ACCRUAL_ACCOUNT_ID
and rownum = 1) ACCRUAL_DEFAULT_ACCT,
(SELECT SEGMENT1 || ‘.’ ||
SEGMENT2 || ‘.’ ||
SEGMENT3 || ‘.’ ||
SEGMENT4 || ‘.’ ||
SEGMENT5 || ‘.’ ||
SEGMENT6 || ‘.’ ||
SEGMENT7
FROM Gl_CODE_COMBINATIONS gcc,
PO_DISTRIBUTIONS_ALL pda
WHERE 1 = 1
and pda.po_line_id = po_line.po_line_id
and gcc.CODE_COMBINATION_ID = pda.VARIANCE_ACCOUNT_ID
and rownum = 1) VARIANCE_DEFAULT_ACCT,
po_line.item_description,
po_line.quantity order_qty,
po_line.unit_price,
line_loc.requested_ship_date,
line_loc.need_by_date,
po_line.line_status,
po_hdr.agent_id buyer_id,
(select ppf.full_name
from per_person_names_f ppf
where ppf.person_name_id = po_hdr.agent_id
and TRUNC(SYSDATE) BETWEEN trunc(ppf.effective_start_date)
AND trunc(ppf.effective_end_date) and rownum=1) buyer,
rsh.SHIPMENT_NUM SHIPMENT_NUM,
rsh.receipt_num receipt_number,
rsl.quantity_received quantity_received,
rsl.quantity_delivered quantity_delivered, rsl.quantity_shipped quantity_shipped,
rsh.creation_date receipt_date,
po_hdr.created_by,
line_loc.destination_type_code destination_type,
line_loc.sales_order_number customer_sales_order,
(SELECT prha.requisition_number
FROM por_req_distributions_all prda
,por_requisition_lines_all prla
,por_requisition_headers_all prha
,po_distributions_all pda
WHERE prda.requisition_line_id = prla.requisition_line_id
AND prla.requisition_header_id = prha.requisition_header_id
AND prda.distribution_id = pda.req_distribution_id
AND pda.line_location_id = line_loc.line_location_id
AND rownum = 1) requisition,
rsl.shipment_line_status_code shipment_status_code
FROM po_headers_all po_hdr,
poz_suppliers pv,
hz_parties hp,
poz_supplier_sites_all_m pvsa,
po_lines_all po_line,
po_line_locations_all line_loc,
egp_system_items_b esib,
inv_org_parameters iop,
rcv_shipment_headers rsh,
rcv_shipment_lines rsl,
hr_operating_units hou
WHERE po_hdr.po_header_id = po_line.po_header_id
AND pv.vendor_id = po_hdr.vendor_id
AND pv.party_id = hp.party_id
AND pvsa.vendor_site_id = po_hdr.vendor_site_id
AND po_line.po_line_id = line_loc.po_line_id
AND po_line.item_id = esib.inventory_item_id
AND line_loc.ship_to_organization_id = esib.organization_id
AND iop.organization_id = line_loc.ship_to_organization_id
AND esib.organization_id = iop.organization_id
AND rsh.shipment_header_id(+) = rsl.shipment_header_id
AND line_loc.po_line_id = rsl.po_line_id(+)
AND line_loc.po_header_id = rsl.po_header_id(+)
AND rsl.po_line_location_id = line_loc.line_location_id
AND rsl.source_document_code = ‘PO’
AND hou.organization_id = po_hdr.PRC_BU_ID
=======================================================================
SELECT  FABUV.BU_NAME REQUISITIONING_BU,
	    PRHA.REQUISITION_NUMBER REQUISITION,
        PRHA.DESCRIPTION PR_Description,
		PRLA.LINE_NUMBER PR_LINE,
		PRLA.ITEM_DESCRIPTION ITEM_DESCRIPTION,
		PZV.VENDOR_NAME SUPPLIER,
		TO_CHAR(PRLA.NEED_BY_DATE ,'MM/DD/RR')NEED_BY_DATE,
		PRLA.QUANTITY QUANTITY,
		IUOMV.UNIT_OF_MEASURE UOM_NAME,
		PRLA.CURRENCY_CODE CURRENCY,
		RSL.QUANTITY_RECEIVED RECEIVED,
		(PDA.QUANTITY_ORDERED-RSL.QUANTITY_RECEIVED)available_qty,
		PDA.QUANTITY_BILLED INVOICED,
		RSL.QUANTITY_RETURNED RETURNED,
		(RSL.QUANTITY_RECEIVED-ABS(RCT.QUANTITY))CORRECTED,
		PHA.SEGMENT1 PURCHASE_ORDER,
		RSH.RECEIPT_NUM RECEIPT_NUMBER,
		PLA.LINE_NUM PURCHASE_ORDER_LINE,
		PLLA.SHIPMENT_NUM Purchase_Order_Schedule,
		(GCC.SEGMENT1||'.'||GCC.SEGMENT2||'.'||GCC.SEGMENT3||'.'||GCC.SEGMENT4||'.'||GCC.SEGMENT5||'.'||GCC.SEGMENT6||'.'||GCC.SEGMENT7||'.'||GCC.SEGMENT8||'.'||GCC.SEGMENT9||'.'||GCC.SEGMENT10) Charge_Account


FROM 
		POR_REQUISITION_HEADERS_ALL  PRHA,
		FUN_ALL_BUSINESS_UNITS_V FABUV,
		POR_REQUISITION_LINES_ALL  PRLA,
		POR_REQ_DISTRIBUTIONS_ALL PRDA,
		POZ_SUPPLIERS_V PZV,
		PO_HEADERS_ALL PHA,
		PO_LINES_ALL PLA,
		PO_DISTRIBUTIONS_ALL PDA,
		RCV_SHIPMENT_HEADERS RSH,
		RCV_SHIPMENT_LINES RSL,
		RCV_TRANSACTIONS RCT,
		INV_UNITS_OF_MEASURE_VL IUOMV,
		GL_CODE_COMBINATIONS GCC,
		PO_LINE_LOCATIONS_ALL PLLA
		

WHERE 1=1
	
	AND PRHA.REQ_BU_ID = FABUV.BU_ID
	AND PRHA.REQUISITION_HEADER_ID = PRLA.REQUISITION_HEADER_ID
	AND PRDA.REQUISITION_LINE_ID = PRLA.REQUISITION_LINE_ID
	AND PDA.REQ_DISTRIBUTION_ID = PRDA.DISTRIBUTION_ID
	AND PDA.PO_HEADER_ID = PHA.PO_HEADER_ID
	AND PHA.PO_HEADER_ID = PLA.PO_HEADER_ID
	AND RCT.PO_HEADER_ID = PHA.PO_HEADER_ID
	AND RCT.PO_LINE_ID = PLA.PO_LINE_ID
	AND PLA.PO_LINE_ID = PDA.PO_LINE_ID
	AND RCT.SHIPMENT_LINE_ID = RSL.SHIPMENT_LINE_ID
	AND RSL.SHIPMENT_HEADER_ID = RSH.SHIPMENT_HEADER_ID
	AND RCT.PO_DISTRIBUTION_ID = PDA.PO_DISTRIBUTION_ID
	AND PHA.VENDOR_ID=PZV.VENDOR_ID  
	AND IUOMV.UOM_CODE = PRLA.UOM_CODE
	AND GCC.CODE_COMBINATION_ID = PDA.CODE_COMBINATION_ID
	AND PLA.PO_LINE_ID = PLLA.PO_LINE_ID
========================================================================
Ar Invoice Query


SELECT distinct rcta.trx_number AS INV_NUM,
rcta.customer_trx_id ,
rcta.trx_date ,
rcta.invoice_currency_code ,
  hca.account_number,
  hp.party_name,
  hps.party_site_number,
  hps.party_site_name,
  hl.address1,
  hl.address2,
  hl.address3,
  hl.address4,
  hl.city,
  hl.state,
  hl.country,
(select name from ra_terms_vl rt where rt.term_id = rcta.term_id and rownum=1) pay_term, 
(select description from ra_terms_vl rt where rt.term_id = rcta.term_id and rownum=1) pay_term_desc, 
(select ((select due_days 
from ra_terms_vl rt , ra_terms_lines rtl
where rt.term_id = hcp.STANDARD_TERMS 
and rt.term_id =rtl.term_id and rtl.SEQUENCE_NUM = 1)  + (rcta.trx_date)) from dual) due_date,
rctl.description description,
rctl.EXTENDED_AMOUNT line_amt,
rctl_tax.eXTENDED_AMOUNT tax_amt_tot,
zl.tax,
zl.tax_rate_code,
zl.tax_amt 
FROM hz_customer_profiles_f hcp,
  ra_customer_trx_all rcta,
  ra_customer_trx_lines_all rctl,
  ra_customer_trx_lines_all rctl_tax,
  hz_cust_acct_sites_all hcas,
    hz_cust_site_uses_all hcsu,
  hz_cust_accounts hca,
  hz_party_sites hps,
  hz_parties hp,
  hz_locations hl,
  zx_lines zl,
  fun_all_business_units_v fabu
WHERE rcta.customer_trx_id = rctl.customer_trx_id
and rctl_tax.tax_line_id = zl.tax_line_id(+)
and zl.application_id(+) = 222
and rcta.trx_number between :trx_num_low and :trx_num_high
and rcta.customer_trx_id = rctl_tax.customer_trx_id(+)
and rctl.customer_trx_line_id = rctl_tax.LINK_TO_CUST_TRX_LINE_ID(+)
and rcta.BILL_TO_CUSTOMER_ID  = hca.CUST_ACCOUNT_ID
and hcsu.SITE_USE_ID = rcta.BILL_TO_SITE_USE_ID
and hcsu.CUST_ACCT_SITE_ID = hcas.CUST_ACCT_SITE_ID
and rcta.org_id = fabu.bu_id
and rctl.LINE_TYPE = 'LINE'
and rctl_tax.LINE_TYPE(+) = 'TAX'
and hcp.cust_account_id <> '-1'
AND hcp.site_use_id          is null
and hcp.party_id = hca.party_id
AND TRUNC (SYSDATE) BETWEEN TRUNC (hcp.effective_start_date) AND TRUNC (hcp.effective_end_date)
AND hcas.cust_account_id     = hca.cust_account_id
AND hcas.party_site_id       = hps.party_site_id
AND hps.party_id             = hp.party_id
AND hps.location_id          = hl.location_id
AND fabu.bu_name             = :p_bu_name
============================================================================
--Query for supplier address level contact details-----------------

SELECT * 
FROM (SELECT 
    hp.party_name AS "Supplier Name",
    pd.PARTY_SITE_NAME  AS "Address Name",
    pasv.PERSON_FIRST_NAME  AS "First Name",
    pasv.PERSON_LAST_NAME  AS "Last Name",
    --pasv.EMAIL_ADDRESS     As "Email Address",
	(SELECT 	     
       Email.EMAIL_ADDRESS
FROM 
       HZ_PARTIES PersonParty, 
       HZ_RELATIONSHIPS Relationship,
       HZ_PARTY_USG_ASSIGNMENTS PartyUsageAssignment,
       HZ_ORG_CONTACTS OrgContact, 
       HZ_ORG_CONTACT_ROLES OrgContactRole, 
       HZ_CONTACT_POINTS Email, 
       POZ_LOOKUP_CODES  StatusLookup,
       HZ_LOOKUPS ContactTitleLookup,
       PER_USERS Users,
       POZ_SUPPLIER_CONTACTS ContactAddresses      
WHERE 
      PersonParty.STATUS = 'A'
      AND Relationship.SUBJECT_ID = PersonParty.PARTY_ID 
      and Relationship.RELATIONSHIP_TYPE = 'CONTACT' 
      and Relationship.RELATIONSHIP_CODE = 'CONTACT_OF' 
      and Relationship.SUBJECT_TYPE = 'PERSON' 
      and Relationship.SUBJECT_TABLE_NAME = 'HZ_PARTIES' 
      and Relationship.OBJECT_TYPE = 'ORGANIZATION' 
      and Relationship.OBJECT_TABLE_NAME = 'HZ_PARTIES' 
      and Relationship.STATUS = 'A'
      AND OrgContact.PARTY_RELATIONSHIP_ID(+) = Relationship.RELATIONSHIP_ID 
      AND OrgContactRole.ORG_CONTACT_ID(+) = OrgContact.ORG_CONTACT_ID
      and OrgContactRole.ROLE_TYPE(+) = 'ADMINISTRATIVE_CONTACT_FOR'
      and OrgContactRole.STATUS(+) = 'A'
      AND PersonParty.PARTY_ID = PartyUsageAssignment.PARTY_ID 
      AND PartyUsageAssignment.PARTY_USAGE_CODE = 'SUPPLIER_CONTACT'
      AND PartyUsageAssignment.STATUS_FLAG = 'A' 
      AND PartyUsageAssignment.OWNER_TABLE_ID = Relationship.RELATIONSHIP_ID 
      AND PartyUsageAssignment.OWNER_TABLE_NAME = 'HZ_RELATIONSHIPS' 
      AND Email.OWNER_TABLE_NAME(+) = 'HZ_PARTIES'  
      and Email.OWNER_TABLE_ID(+) =  Relationship.SUBJECT_ID 
      and Email.RELATIONSHIP_ID(+) = Relationship.RELATIONSHIP_ID 
      and Email.CONTACT_POINT_TYPE(+) = 'EMAIL' 
      and Email.PRIMARY_FLAG(+) = 'Y' 
      and Email.STATUS(+) = 'A'   
      AND StatusLookup.LOOKUP_TYPE(+) = 'POZ_STATUS' 
      and StatusLookup.LOOKUP_CODE(+) = (CASE WHEN sysdate < nvl(PartyUsageAssignment.EFFECTIVE_END_DATE, sysdate + 1) THEN 'ACTIVE' ELSE 'INACTIVE' END) 
      and StatusLookup.ENABLED_FLAG(+) = 'Y' 
      and ContactTitleLookup.LOOKUP_TYPE(+) = 'CONTACT_TITLE'
      and ContactTitleLookup.LOOKUP_CODE(+) = PersonParty.PERSON_PRE_NAME_ADJUNCT 
      and ContactTitleLookup.ENABLED_FLAG(+) = 'Y'
      and PersonParty.PARTY_ID = Users.PARTY_ID(+)
      and ContactAddresses.PER_PARTY_ID = PersonParty.PARTY_ID
    --  and Relationship.OBJECT_ID=(select party_id from POZ_SUPPLIERS_V where POZ_SUPPLIERS_V.vendor_name like 'A & M Visa Service ltd')
	  --AND PersonParty.PARTY_ID=pasv.PER_PARTY_ID
	  AND ContactAddresses.INACTIVE_DATE is NULL
  and Relationship.OBJECT_ID=hp.PARTY_ID
	 and rownum=1
) Email_Address
FROM
    poz_suppliers psv,
    hz_parties hp,
    poz_supplier_address_v pd,
    POZ_ALL_SUPPLIER_CONTACTS_V pasv
WHERE 1=1
AND  psv.party_id        = hp.party_id
AND psv.VENDOR_ID         = pd.VENDOR_ID
AND pasv.SUP_PARTY_ID = psv.party_id
AND hp.PREFERRED_CONTACT_PERSON_ID=pasv.PER_PARTY_ID
--and hp.party_name='A & M Visa Service ltd'
and pasv.status='Active'
) XXYY

WHERE 1=1 
AND XXYY.Email_Address IS NOT NULL
--AND XXYY."Supplier Name" = 'A & M Visa Service ltd'
=======================================================================
SELECT
    py.batch_id      py_batch_id,
    py.party_orig_system,
    py.party_orig_system_reference,
    py.insert_update_flag,
    py.party_type,
    py.organization_name,
    ps.site_orig_system,
    ps.site_orig_system_reference,
    ps.party_site_name,
	ps.party_site_number,
    ps.start_date_active,
    ps.end_date_active,
    ps.identifying_address_flag,
    ps.party_site_language,
    psu.siteuse_orig_system,
    psu.siteuse_orig_system_ref,
    psu.site_use_type,
    psu.start_date,
    psu.end_date,
    hl.location_orig_system,
    hl.location_orig_system_reference,
    ac.cust_orig_system,
    ac.cust_orig_system_reference,
    ac.customer_type,
    ac.account_name,
    ac.account_established_date,
    accs.acct_site_language,
    accs.translated_customer_name,
    accsu.cust_siteuse_orig_system,
    accsu.cust_siteuse_orig_sys_ref,
    accsu.site_use_code,
    accsu.location,
    hl.country,
    hl.address1,
    hl.address2,
    hl.address3,
    hl.address4,
    hl.city,
    hl.state,
    hl.province,
    hl.county,
    hl.postal_code,
    hl.location_language,
    hl.date_validated,
    hl.address_effective_date,
    hl.address_expiration_date,
    hl.validated_flag,
    ct1.cp_orig_system,
    ct1.cp_orig_system_reference,
    ct1.primary_flag   ct_primary_flag,
    ct1.contact_point_type,
    ct1.contact_point_purpose,
    ct1.email_address,
    ct1.email_format,
    ct1.phone_area_code,
    ct1.phone_country_code,
    ct1.phone_extension,
    ct1.phone_line_type,
    ct1.phone_number,
    ct1.start_date     ct_start_date,
    ct1.end_date       ct_end_date,
    pfl.customer_profile_class_name,
    pfl.collector_name,
    pfl.credit_analyst_name,
    pfl.credit_balance_statements,
    pfl.credit_checking,
    pfl.credit_hold,
    pfl.discount_terms,
    pfl.dunning_letters,
    pfl.interest_charges,
    pfl.statements,
    pfl.tolerance,
    pfl.interest_period_days,
    pfl.overall_credit_limit,
    pfl.org_id,
    pmd.payment_method_name,
    pmd.primary_flag,
    pmd.start_date     pmd_start_date,
    pmd.end_date       pmd_end_date,
    pmd.org_id         pmd_org_id
FROM
    hz_imp_parties_t             py,
    hz_imp_partysites_t          ps,
    hz_imp_partysiteuses_t       psu,
    hz_imp_accounts_t            ac,
    hz_imp_acctsites_t           accs,
    hz_imp_acctsiteuses_t        accsu,
    hz_imp_locations_t           hl,
    hz_imp_contactpts_t          ct1,
    ra_customer_profiles_int_all    pfl,
    ra_cust_pay_method_int_all   pmd
WHERE
    1 = 1
    AND py.party_orig_system_reference = ps.party_orig_system_reference
    AND ps.party_orig_system_reference = psu.party_orig_system_reference
    AND ps.site_orig_system_reference = psu.site_orig_system_reference
    AND ps.location_orig_system_reference = hl.location_orig_system_reference
    AND py.party_orig_system_reference = ac.party_orig_system_reference
    AND ac.cust_orig_system_reference = accs.cust_orig_system_reference
    AND accs.site_orig_system_reference = ps.site_orig_system_reference
    AND psu.site_use_type = accsu.site_use_code
--    AND accs.cust_site_orig_sys_ref = ps.party_orig_system_reference
    AND accs.cust_site_orig_sys_ref = accsu.cust_site_orig_sys_ref
    AND ps.party_orig_system_reference = ct1.party_orig_system_reference (+)
    AND ps.site_orig_system_reference = ct1.site_orig_system_reference (+)
    AND py.party_orig_system_reference = pfl.party_orig_system_reference (+)
    AND ac.cust_orig_system_reference = pfl.cust_orig_system_reference (+)
    AND ac.cust_orig_system_reference = pmd.cust_orig_system_reference (+)
    AND accs.cust_site_orig_sys_ref = pmd.cust_site_orig_sys_ref (+)
	AND py.batch_id     = ps.batch_id(+)
	AND ps.batch_id     = psu.batch_id(+)
	AND psu.batch_id     = ac.batch_id(+)
	AND ac.batch_id     = accs.batch_id(+)
	AND accs.batch_id     = accsu.batch_id(+)
	AND accsu.batch_id     = hl.batch_id(+)
	AND hl.batch_id     = ct1.batch_id(+)
	AND ct1.batch_id     = pfl.batch_id(+)
	AND pfl.batch_id     = pmd.batch_id(+)
	AND py.batch_id     =  :BATCH_ID
--    AND ps.party_orig_system_reference = '107517591'
--    AND ps.site_orig_system_reference = '234046'
--    AND psu.siteuse_orig_system_ref = '234046_S'
=============================================================================
SELECT    NVL ( party_ref.orig_system, 'FUSION' ) source_system
       ,  NVL ( party_ref.orig_system_reference, TO_CHAR ( hp.party_id ) ) customer_source_reference
       ,  hp.party_id
       ,  hp.party_number party_registry_id
       ,  hop.organization_name customer_name
       ,  hca.account_number
       ,  hca.cust_account_id
       ,  NVL ( acct_ref.orig_system_reference, TO_CHAR ( hca.cust_account_id ) ) account_source_reference
       ,  hca.customer_type
       ,  hca.account_name account_description
       ,  hca.account_established_date
       ,  hca.customer_class_code
       ,  hca.attribute_category dff_acc_context
       ,  hca.attribute1   dff_acc_attribute1
       ,  hca.attribute2   dff_acc_attribute2
       ,  hca.attribute3   dff_acc_attribute3
       ,  hca.attribute4   dff_acc_attribute4
       ,  hca.attribute5   dff_acc_attribute5
       ,  hca.attribute6   dff_acc_attribute6
       ,  hca.attribute7   dff_acc_attribute7
       ,  hca.attribute8   dff_acc_attribute8
       ,  hca.attribute9   dff_acc_attribute9
       ,  hca.attribute10  dff_acc_attribute10
	   ,  hca.attribute11  dff_acc_attribute11
	   ,  hca.attribute12  dff_acc_attribute12
	   ,  hca.attribute13  dff_acc_attribute13
	   ,  hca.attribute14  dff_acc_attribute14
       ,  hps.party_site_number
       ,  hps.party_site_id
       ,  NVL ( site_ref.orig_system_reference, TO_CHAR ( hps.party_site_id ) ) site_source_reference
       ,  hps.party_site_name
       ,  hps.start_date_active partysite_startdate
       ,  hps.end_date_active partysite_enddate
       ,  hps.identifying_address_flag
       ,  hps.party_site_language
       ,  hpsu.begin_date partysiteuse_startdate
       ,  hpsu.end_date partysiteuse_enddate
       ,  hpsu.site_use_type
       ,  hpsu.primary_per_type
       ,  NVL ( loc_ref.orig_system_reference, TO_CHAR ( hl.location_id ) ) location_source_reference
       ,  hcas.cust_acct_site_id
       ,  hcas.translated_customer_name
       ,  hcas.start_date acctsite_startdate
       ,  hcas.end_date acctsite_enddate
       ,  hcas.attribute1 dff_accsite_attribute1
	   ,  hcas.attribute2 dff_accsite_attribute2
	   ,  hcas.attribute3 dff_accsite_attribute3
	   ,  hcas.attribute4 dff_accsite_attribute4
       ,  NVL ( acct_site_pur_ref.orig_system_reference, TO_CHAR ( hcsu.site_use_id ) ) site_purpose_source_reference
       ,  hcsu.site_use_code
       ,  hcsu.primary_flag
       ,  hcsu.location
       ,  hcsu.start_date acctsiteuse_startdate
       ,  hcsu.end_date acctsiteuse_enddate
       ,  hcsu.site_use_id
       ,  hl.country
       ,  hl.address1
       ,  hl.address2
       ,  hl.address3
       ,  hl.address4
       ,  hl.city
       ,  hl.state
       ,  hl.province
       ,  hl.county
       ,  hl.postal_code
       ,  hl.postal_plus4_code
       ,  hl.address_effective_date
       ,  hl.address_expiration_date
       ,  hl.date_validated
       ,  hcpc.name customer_profile_class
       ,  hcp.credit_checking
       ,  hcp.credit_hold
       ,  hcpc.discount_terms
       ,  hcpc.dunning_letters
       ,  hcpc.interest_charges
       ,  hcpc.statements
       ,  hcpc.credit_balance_statements
       ,  hcpc.tolerance
       ,  hcpc.interest_period_days
       ,  hcp.credit_limit
 /*      ,  ifp.cust_account_id bank_cust_acct_id
       ,  ifp.acct_site_use_id bank_cust_site_use_id
       ,  ifp.instrument_id
       ,  ifp.bank_name
       ,  ifp.branch_number
	   ,  ifp.primary_flag bank_account_primary
       ,  ieb.country_code
       ,  ieb.bank_Account_name
       ,  ieb.bank_account_num
       ,  ieb.start_date bank_account_start
       ,  ieb.end_date bank_account_end
       ,  ieb.currency_code bank_account_currency  */
	   ,  hp.created_by				party_created_by
	   ,  to_char(hp.creation_date,'MM/DD/YYYY')         party_creation_date
	   ,  to_char(hp.last_update_date,'MM/DD/YYYY')      party_last_update_date
	   ,  hp.last_updated_by						     party_last_updated_by
	   ,  hps.created_by						    	 party_site_created_by
	   ,  to_char(hps.creation_date,'MM/DD/YYYY')        party_site_creation_date
	   ,  to_char(hps.last_update_date,'MM/DD/YYYY')     party_site_last_update_date
	   ,  hps.last_updated_by					         party_site_last_updated_by
    FROM hz_cust_site_uses_all hcsu
       ,  hz_cust_acct_sites_all hcas
       ,  hz_cust_accounts hca
       ,  hz_parties hp
       ,  hz_organization_profiles hop
       ,  hz_party_sites hps
       ,  hz_locations hl
       ,  hz_party_site_uses hpsu
       ,  hz_person_profiles hpp
       ,  hz_customer_profiles_f hcp
       ,  hz_cust_profile_classes hcpc
       ,  hz_party_usg_assignments hpua
       ,  hz_orig_sys_references party_ref
       ,  hz_orig_sys_references acct_ref
       ,  hz_orig_sys_references site_ref
       ,  hz_orig_sys_references acct_site_ref
       ,  hz_orig_sys_references acct_site_pur_ref
       ,  hz_orig_sys_references loc_ref
       ,  hz_orig_sys_references site_use_ref
   /*    ,  iby_ext_bank_accounts ieb
       ,  iby_fndcpt_payer_assgn_instr_v ifp */
   WHERE 1 = 1
     AND hca.party_id = hp.party_id
     AND hca.status = 'A'
     AND hca.cust_account_id = hcas.cust_account_id
     AND hcas.status = 'A'
     AND hcas.cust_acct_site_id = hcsu.cust_acct_site_id
     AND hcsu.status = 'A'
     AND hcas.party_site_id = hps.party_site_id
     AND hpsu.site_use_type = hcsu.site_use_code
     AND hp.party_id = hop.party_id
     AND TRUNC ( SYSDATE ) BETWEEN TRUNC ( NVL ( hop.effective_start_date, SYSDATE - 1 ) )
                               AND TRUNC ( NVL ( hop.effective_end_date, SYSDATE ) )
     AND hps.location_id = hl.location_id
     AND hps.party_site_id = hpsu.party_site_id
     AND hpsu.status = 'A'
     AND hp.party_id = hpp.party_id(+)
     AND hp.party_id = hpua.party_id
     AND hpua.status_flag = 'A'
     AND hca.cust_account_id = hcp.cust_account_id(+)
     AND hcp.site_use_id(+) IS NULL
     AND TRUNC ( SYSDATE ) BETWEEN hcp.effective_start_date(+) AND hcp.effective_end_date(+)
     AND hcp.profile_class_id = hcpc.profile_class_id(+)
     AND acct_site_ref.owner_table_name(+) = 'HZ_CUST_ACCT_SITES_ALL'
     AND TO_CHAR ( acct_site_ref.owner_table_id(+) ) = hcas.orig_system_reference
     AND acct_site_pur_ref.owner_table_name(+) = 'HZ_CUST_SITE_USES_ALL'
     AND TO_CHAR ( acct_site_pur_ref.owner_table_id(+) ) = hcsu.site_use_id
     AND site_ref.owner_table_name(+) = 'HZ_PARTY_SITES'
     AND site_ref.owner_table_id(+) = hps.party_site_id
     AND party_ref.owner_table_name(+) = 'HZ_PARTIES'
     AND party_ref.owner_table_id(+) = hp.party_id
     AND acct_ref.owner_table_name(+) = 'HZ_CUST_ACCOUNTS'
     AND acct_ref.owner_table_id(+) = hca.cust_account_id
     AND loc_ref.owner_table_name(+) = 'HZ_LOCATIONS'
     AND loc_ref.owner_table_id(+) = hl.location_id
     AND site_use_ref.owner_table_name(+) = 'HZ_PARTY_SITE_USES'
     AND site_use_ref.owner_table_id(+) = hpsu.party_site_use_id
 /*    AND hcsu.site_use_id = ifp.acct_site_use_id(+)
     AND ifp.instrument_type(+) = 'BANKACCOUNT'
     AND ifp.instrument_id = ieb.ext_bank_account_id(+)*/
     AND hpua.party_usage_code = 'CUSTOMER'
     AND (party_ref.orig_system  = :sourcesystem
          OR :sourcesystem is NULL)
     AND hop.organization_name = NVL(:customername,hop.organization_name)
ORDER BY hp.party_id
       ,  hca.cust_account_id
       ,  hps.party_site_id
       ,  hcsu.site_use_id
============================================================================
SELECT
      HOU.NAME BU_NAME,
	  RCTAGL.ACCOUNT_CLASS,
	  RCTAGL.ACCTD_AMOUNT AMOUNT,
	  RCTAGL.PERCENT,
	  RCTA.INTERFACE_HEADER_CONTEXT INTERFACE_LINE_CONTEXT,
      RCTA.INTERFACE_HEADER_ATTRIBUTE1 INTERFACE_LINE_ATTRIBUTE1,
	  GCC.SEGMENT1,
      GCC.SEGMENT2,
      GCC.SEGMENT3,
      GCC.SEGMENT4,
      GCC.SEGMENT5,
	  GCC.SEGMENT6,
      GCC.SEGMENT7,
      GCC.SEGMENT8,
      GCC.SEGMENT9,
      GCC.SEGMENT10
FROM
      HR_OPERATING_UNITS HOU,
	  RA_CUST_TRX_LINE_GL_DIST_ALL RCTAGL,
	  RA_CUSTOMER_TRX_ALL RCTA,
	  GL_CODE_COMBINATIONS GCC
WHERE 
      HOU.NAME='2201 - MTN Nigeria Communications'	 
  AND HOU.ORGANIZATION_ID = RCTA.ORG_ID
  AND RCTA.CUSTOMER_TRX_ID = RCTAGL.CUSTOMER_TRX_ID
  AND GCC.CODE_COMBINATION_ID = RCTAGL.CODE_COMBINATION_ID
  --AND RCTAGL.ACCOUNT_CLASS IN ('REV','REC')
=======================================================================
SELECT
      HOU.NAME BU_NAME,
	  RBSA.NAME BATCH_SOURCE_NAME,
	  RCTTA.NAME CUST_TRX_TYPE_NAME,
	  RTB.NAME TERM_NAME,
	  RCTA.TRX_DATE,
	  RCTA.TRX_DATE GL_DATE,
	  RCTA.TRX_NUMBER,
      HOSR.ORIG_SYSTEM_REFERENCE ORIG_SYSTEM_BILL_CUSTOMER_REF,
      HOSR.ORIG_SYSTEM_REFERENCE ORIG_SYSTEM_BILL_ADDRESS_REF,
	  RCTLA.LINE_TYPE,
	  RCTLA.DESCRIPTION,
	  RCTA.INVOICE_CURRENCY_CODE CURRENCY_CODE,
	  RCTA.EXCHANGE_RATE_TYPE CONVERSION_TYPE
	  RCTA.EXCHANGE_DATE CONVERSION_DATE
	  RCTLA.EXTENDED_AMOUNT,	
	  RCTLA.INTERFACE_LINE_CONTEXT,
      RCTLA.INTERFACE_LINE_ATTRIBUTE1,
	  RCTA.LEGAL_ENTITY_ID LEGAL_ENTITY_IDENTIFIER,
	  RCTLA.TAXABLE_FLAG
FROM 
      HR_OPERATING_UNITS HOU,
      RA_BATCH_SOURCES_ALL RBSA,
      RA_CUST_TRX_TYPES_ALL RCTTA,
      RA_TERMS_B RTB,
      RA_CUSTOMER_TRX_ALL RCTA,
      HZ_ORIG_SYS_REFERENCES HOSR,
	  --HZ_ORIG_SYS_REFERENCES HOSR1	  
	  RA_CUSTOMER_TRX_LINES_ALL RCTLA
WHERE 
      HOU.ORGANIZATION_ID = RCTA.ORG_ID	  
  AND HOSR.OWNER_TABLE_ID = RCTA.BILL_TO_CUSTOMER_ID
  --AND HOSR1.OWNER_TABLE_ID = RCTA.BILL_TO_SITE_USE_ID
  AND RCTLA.CUSTOMER_TRX_ID = RCTA.CUSTOMER_TRX_ID
  AND RCTTA.NAME IN ('MTNN Invoice Conv','MTNN Credit Memo')
  AND RBSA.NAME='IFS-MTNN-AR'
  AND RCTLA.LINE_TYPE='LINE'
=========================================================================
/* Formatted on 2021/03/19 17:37 (Formatter Plus v4.8.8) */
SELECT   hca.cust_account_id, hou.NAME ou_name, rct.customer_trx_id, rtt.NAME trx_type, rctda.account_class account_class, rct.trx_number,
         rct.trx_class invoice_type, hp.party_name cust_name, hp.party_number cust_code,
         TO_CHAR (rct.trx_date, 'DD/MON/RRRR', 'NLS_DATE_LANGUAGE=AMERICAN') trx_date, rct.invoice_currency_code,
         TO_CHAR (rctda.gl_date, 'DD/MON/RRRR', 'NLS_DATE_LANGUAGE=AMERICAN') gl_date, gcc.segment1 entity, gcc.segment2 gl_account, gcc.segment3 bcc,
         gcc.segment4 project, gcc.segment7 intercompany, SUM (rctl.extended_amount) entered_base_amount,
         (SUM (rctl.extended_amount) * NVL (rct.exchange_rate, 1)) acctd_base_amount,
         (SELECT SUM (rctl2.extended_amount)
            FROM ra_customer_trx_lines_all rctl2
           WHERE rctl2.customer_trx_id = rct.customer_trx_id AND rctl2.line_type = 'TAX') entered_tax_amount,
         ((SELECT SUM (rctl2.extended_amount)
             FROM ra_customer_trx_lines_all rctl2
            WHERE rctl2.customer_trx_id = rct.customer_trx_id AND rctl2.line_type = 'TAX') * NVL (rct.exchange_rate, 1)) acct_tax_amount,
         (SELECT MAX (tax_rate_code)
            FROM zx_lines zx, ra_customer_trx_lines_all rctl2
           WHERE zx.tax_line_id = rctl2.tax_line_id AND rctl2.customer_trx_id = rctl.customer_trx_id AND rctl2.line_type = 'TAX') tax_rate_category,
         (SELECT ppn.display_name
            FROM per_person_names_f ppn, per_all_people_f pap
           WHERE 1 = 1
             AND ppn.name_type = 'GLOBAL'
             AND ppn.person_id = pap.person_id
             AND pap.person_number = rct.attribute1
             AND ROWNUM = 1) sales_person_name,
         rct.attribute6 irn, rct.attribute8 ack_date,
         (CASE WHEN rctda.GL_POSTED_DATE IS NOT NULL THEN 'YES' ELSE 'N0' END) accounted,
         --DECODE (rctda.account_set_flag, 'Y', 'YES', 'N', 'NO') accounted,
         (SELECT MAX (phone_number)
            FROM hz_contact_points hcp
           WHERE hcp.owner_table_name = 'HZ_PARTIES'
             AND hcp.contact_point_type = 'PHONE'
             AND hcp.owner_table_id IN (SELECT party_id
                                          FROM hz_cust_accounts hca2
                                         WHERE hca2.cust_account_id = hca.cust_account_id)) cust_contact,
         (SELECT MAX(NAME)
            FROM ra_batch_sources_all rbs
           WHERE rbs.batch_source_seq_id = rct.batch_source_seq_id) transaction_source,
         rct.attribute12 trx_classification,
         (SELECT MAX (vsl.description)
            FROM fnd_flex_value_sets vs, fnd_flex_values_vl vsl
           WHERE 1 = 1
             AND vs.flex_value_set_id = vsl.flex_value_set_id
             AND vsl.flex_value = gcc.segment3
             AND vs.flex_value_set_name = 'CRISIL BUSINESS COST CENTER') cost_center_desc,
         (SELECT MAX (vsl.description)
            FROM fnd_flex_value_sets vs, fnd_flex_values_vl vsl
           WHERE 1 = 1
             AND vs.flex_value_set_id = vsl.flex_value_set_id
             AND vsl.flex_value = gcc.segment4
             AND vs.flex_value_set_name = 'CRISIL_PROJECT') proj_code_desc,
             hzl.country,hzl.state
    FROM ra_customer_trx_all rct,
         ra_customer_trx_lines_all rctl,
         ra_cust_trx_line_gl_dist_all rctda,
         ra_cust_trx_types_all rtt,
         hz_cust_accounts hca,
         hz_parties hp,
        hz_cust_site_uses_all hcsu,
         hz_cust_acct_sites_all hcas,
           hz_party_sites hps,
        hz_locations hzl,
         gl_code_combinations gcc,
         hr_operating_units hou
   WHERE 1 = 1
     AND rct.customer_trx_id = rctl.customer_trx_id
     AND rct.cust_trx_type_seq_id = rtt.cust_trx_type_seq_id
     AND rct.customer_trx_id = rctda.customer_trx_id
     AND rct.bill_to_customer_id = hca.cust_account_id
     AND hca.party_id = hp.party_id
     and rct.BILL_TO_SITE_USE_ID = hcsu.SITE_USE_ID
    and hcsu.CUST_ACCT_SITE_ID = hcas.CUST_ACCT_SITE_ID
    and hcas.PARTY_SITE_ID = hps.PARTY_SITE_ID
    and hps.LOCATION_ID = hzl.LOCATION_ID
     AND rctda.code_combination_id = gcc.code_combination_id
     AND rct.org_id = hou.organization_id
     AND rctl.line_type = 'LINE'
     AND complete_flag = 'Y'
     AND nvl(rctda.LATEST_REC_FLAG,'N') = (case when :p_acct_class = 'REC' then 'Y' else 'N' end)
     AND (hou.NAME IN (:p_ou_name) OR 'All' IN (:p_ou_name || 'All'))
     AND TRUNC (rct.trx_date) >= :p_from_date
     AND TRUNC (rct.trx_date) <= :p_to_date
     AND rctda.account_class = NVL (:p_acct_class, rctda.account_class)
     --AND rct.trx_number = '108208'
GROUP BY hou.NAME,
         rtt.NAME,
         rtt.TYPE,
         rct.trx_number,
         rct.trx_class,
         hp.party_name,
         hp.party_number,
         rct.trx_date,
         rct.invoice_currency_code,
         rctda.gl_date,
         gcc.segment1,
         gcc.segment2,
         gcc.segment3,
         gcc.segment4,
         gcc.segment7,
         rctda.acctd_amount,
         rct.customer_trx_id,
         rct.exchange_rate,
         rctl.tax_line_id,
         rct.attribute1,
         rct.attribute6,
         rct.attribute8,
         rctl.customer_trx_id,
         rctda.account_set_flag,
         rctda.account_class,
         hca.cust_account_id,
         rct.attribute12,
         rct.batch_source_seq_id,
         rct.trx_class,
         hzl.country,hzl.state,rctda.GL_POSTED_DATE
ORDER BY rct.trx_number
======================================================================
--SELECT COUNT(*) FROM (
SELECT 'CREATE' "Transaction_Type"
, NULL "Batch_ID"
, NULL "Batch_Number"
, esib.ITEM_NUMBER "Item_Number"
, esib.OUTSIDE_PROCESS_SERVICE_FLAG
, IOP.organization_code "organization_Code"
, esit.description "Description"
, esit.template_name "Template_Name"
, DECODE(egp.CROSS_REFERENCE, NULL, NULL, 'SYMPHONY') "Source_System_Code" 
, egp.CROSS_REFERENCE "Source_System_Reference_Description" 
, 'SYMPHONY' "Source_System_Reference"
, EICT.ITEM_CLASS_NAME "Item_Class_Name"
, (SELECT uom.UNIT_OF_MEASURE FROM INV_UNITS_OF_MEASURE_VL uom WHERE  uom.uom_code=esib.PRIMARY_UOM_code) "Primary_Unit_of_Measure"
, esib.CURRENT_PHASE_CODE "Lifecycle_Phase"
, esib.INVENTORY_ITEM_STATUS_CODE "Item_Status"
, NULL "New Item Class Name"
, esib.ASSET_TRACKED_FLAG "Asset_Tracked"
, esib.ALLOW_MAINTENANCE_ASSET_FLAG "Allow_Maintenance_Asset"
, esib.ENABLE_GENEALOGY_TRACKING_FLAG "Enable_Genealogy_Flag"
, esib.ASSET_CLASS "Asset_Class"
, esib.EAM_ITEM_TYPE "Asset_Item_Type"
, esib.EAM_ACTIVITY_TYPE_CODE "Activity_Type" 
, esib.EAM_ACTIVITY_CAUSE_CODE "Activity_Cause"
, esib.EAM_ACT_NOTIFICATION_FLAG "Activity_Notification_Required"
, esib.EAM_ACT_SHUTDOWN_STATUS "Shutdown_Type"
, esib.EAM_ACTIVITY_SOURCE_CODE "Activity_Source"
, esib.costing_enabled_flag "Costing_Enabled"
, esib.STD_LOT_SIZE "Standard_Lot_Size"
, esib.inventory_asset_flag "Inventory_Asset_Value"
, esib.default_include_in_rollup_flag "Include_in_Rollup"
, esib.ORDER_COST "Order_Cost"
, esib.VMI_MINIMUM_DAYS "Minimum_Days_of_Supply"
, esib.VMI_FIXED_ORDER_QUANTITY "Fixed_Quantity"
, esib.VMI_MINIMUM_UNITS "Minimum_Order"
, esib.asn_autoexpire_flag "Automatically_Expire_ASN"
, esib.CARRYING_COST "Carrying_Cost_Percentage"
, esib.consigned_flag "Consigned"
, esib.FIXED_DAYS_SUPPLY "Fixed_Days_Supply"
, esib.FIXED_LOT_MULTIPLIER "Fixed_Lot_Size_Multiplier"
, esib.FIXED_ORDER_QUANTITY "Fixed_Order_Quantity"
, esib.FORECAST_HORIZON "Window_Days"
, esib.inventory_planning_code "Inventory_Planning_Method"
, esib.MRP_SAFETY_STOCK_PERCENT "Safety_Stock_Planning_Method"
, esib.DEMAND_PERIOD "Demand_Period" 
, esib.DAYS_OF_COVER "Days_Of_Cover"
, esib.MIN_MINMAX_QUANTITY "Minimum_Min_Max_Quantity"
, esib.MAX_MINMAX_QUANTITY "Maximum_Min_Max_Quantity"
, esib.MINIMUM_ORDER_QUANTITY "Minimum_Order_Quantity"
, esib.MAXIMUM_ORDER_QUANTITY "Maximum_Order_Quantity"
, esib.PLANNER_CODE "Planner"
, esib.planning_make_buy_code "Make_or_Buy"
, esib.SOURCE_SUBINVENTORY "Source_Subinventory"
, esib.source_type "Replenishment_Source_Type"
, esib.so_authorization_flag "Release_Authorization_Required"
, esib.SUBCONTRACTING_COMPONENT "Subcontracting_Component"
, esib.vmi_forecast_type "Forecast_Type"
, esib.VMI_MAXIMUM_UNITS "Maximum_Order"
, esib.VMI_MAXIMUM_DAYS "Maximum_Days_of_Supply"
, esib.SOURCE_ORGANIZATION_ID "Source_Organization"
, esib.restrict_subinventories_code "Subinventory_Restrictions"
, esib.restrict_locators_code "Restrict_Locators"
, esib.child_lot_flag "Child_Lot_Enabled"
, esib.CHILD_LOT_PREFIX "Child_Lot_Prefix"
, esib.CHILD_LOT_STARTING_NUMBER "Child_Lot_Starting_Number"
, esib.CHILD_LOT_VALIDATION_FLAG "Child_Lot_Format_Validation"
, esib.COPY_LOT_ATTRIBUTE_FLAG "Copy_Lot_Attributes"
, esib.EXPIRATION_ACTION_CODE "Expiration_Action"
, esib.EXPIRATION_ACTION_INTERVAL "Expiration_Action_Interval"
, esib.stock_enabled_flag "Stocked"
, esib.start_auto_lot_number "Starting_Lot_Number"
, esib.shelf_life_code "Lot_Expiration_Control"
, esib.shelf_life_days "Shelf_Life_Days"
, esib.serial_number_control_code "Serial_Number_Control"
, esib.serial_status_enabled "Serial_Status_Enabled"
, esib.revision_qty_control_code "Revision_Control"
, esib.RETEST_INTERVAL "Retest_Interval"
, esib.AUTO_LOT_ALPHA_PREFIX "Starting_Lot_Prefix"
, esib.AUTO_SERIAL_ALPHA_PREFIX "Starting_Serial_Prefix"
, esib.bulk_picked_flag "Bulk_Picked"
, esib.check_shortages_flag "Check_Material_Shortage"
, esib.cycle_count_enabled_flag "Cycle_Count_Enabled"
, esib.DEFAULT_GRADE "Default_Grade"
, esib.grade_control_flag "Grade_Controlled"
, esib.HOLD_DAYS "Hold_Days"
, esib.lot_divisible_flag "Lot_Divisible"
, esib.MATURITY_DAYS "Maturity_Days"
, esib.DEFAULT_LOT_STATUS_ID "Default_Lot_Status"
, esib.DEFAULT_SERIAL_STATUS_ID "Default_Serial_Status"
, esib.lot_split_enabled "Lot_Split_Enabled"
, esib.lot_merge_enabled "Lot_Merge_Enabled"
, esib.inventory_item_flag "Inventory_Item"
, esib.location_control_code "Stock_Locator_Control"
, esib.lot_control_code "Lot_Control"
, esib.lot_status_enabled "Lot_Status_Enabled"
, esib.LOT_SUBSTITUTION_ENABLED "Lot_Substitution_Enabled"
, esib.LOT_TRANSLATE_ENABLED "Lot_Translate_Enabled"
, esib.mtl_transactions_enabled_flag "Transaction_Enabled"
, esib.POSITIVE_MEASUREMENT_ERROR "Positive_Measurement_Error"
, esib.NEGATIVE_MEASUREMENT_ERROR "Negative_Measurement_Error"
, esib.PARENT_CHILD_GENERATION_FLAG "Child_Lot_Generation"
, esib.reservable_type "Reservable"
, esib.START_AUTO_SERIAL_NUMBER "Starting_Serial_Number"
, esib.INVOICING_RULE_ID "Invoicing_Rule"
, esib.TAX_CODE "Output_Tax_Classification_Code"
, esib.SALES_ACCOUNT "Sales_Account"
, esib.PAYMENT_TERMS_ID "Payment_Terms"
, esib.invoice_enabled_flag "Invoice_Enabled"
, esib.invoiceable_item_flag "Invoiced"
, esib.ACCOUNTING_RULE_ID "Accounting_Rule"
, esib.auto_created_config_flag "Autocreated_Configuration"
, esib.replenish_to_order_flag "Assemble_to_Order"
, esib.pick_components_flag "Pick_Components"
, (SELECT esib_st.item_number FROM egp_system_items_b esib_st WHERE esib_st.inventory_item_id = esib.BASE_ITEM_ID and esib_st.organization_id = esib.organization_id) "Base_Model"
, esib.effectivity_control "Effectivity_Control"
, esib.CONFIG_ORGS "Create Configured_Item"
, esib.CONFIG_MATCH "Match Configuration"
, esib.CONFIG_MODEL_TYPE "Configurator_Model_Type"
, esib.bom_item_type "Structure_Item_Type"
, esib.CUM_MANUFACTURING_LEAD_TIME "Cumulative_Manufacturing_Lead_Time"
, esib.PREPROCESSING_LEAD_TIME "Preprocessing_Days"
, esib.CUMULATIVE_TOTAL_LEAD_TIME "Cumulative_Total_Lead_Time"
, esib.FIXED_LEAD_TIME "Fixed_Lead_Time"
, esib.VARIABLE_LEAD_TIME "Variable_Lead_Time"
, esib.FULL_LEAD_TIME "Processing_Days"
, esib.lead_time_lot_size "Lead Time_Lot_Size"
, esib.postprocessing_lead_time "Postprocessing_Days"
, esib.ato_forecast_control "Forecast_Control"
, esib.critical_component_flag "Critical_Component"
, esib.ACCEPTABLE_EARLY_DAYS "Acceptable_Early_Days"
, esib.create_supply_flag "Create_Supply"
, esib.DAYS_TGT_INV_SUPPLY "Target_Inventory_Days_of_Supply"
, esib.DAYS_TGT_INV_WINDOW "Target_Inventory_Window"
, esib.DAYS_MAX_INV_SUPPLY "Maximum_Inventory_Days_of_Supply"
, esib.DAYS_MAX_INV_WINDOW "Maximum_Inventory_Window"
, esib.DEMAND_TIME_FENCE_CODE "Demand_Time_Fence"
, esib.DEMAND_TIME_FENCE_DAYS "Demand_Time_Days"
, esib.drp_planned_flag "Distribution_Planned"
, esib.end_assembly_pegging_flag "End_Assembly_Pegging"
, esib.exclude_FROM_budget_flag "Exclude_from_Budget"
, esib.MRP_CALCULATE_ATP_FLAG "Calculate_ATP"
, esib.mrp_planning_code "Planning_Method"
, esib.PLANNED_INV_POINT_FLAG "Planned_Inventory_Point"
, esib.planning_time_fence_code "Planning_Time_Fence_Code"
, esib.planning_time_fence_days "Planning_Time_Fence_Days"
, esib.preposition_point "Preposition_Point"
, esib.RELEASE_TIME_FENCE_CODE "Release_Time_Fence_Code"
, esib.RELEASE_TIME_FENCE_DAYS "Release_Time_Fence_Days"
, esib.REPAIR_LEADTIME "Repair_Lead_Time"
, esib.REPAIR_YIELD "Repair_Yield"
, esib.repair_program "Repair_Program"
, esib.rounding_control_type "Round_Order_Quantities"
, esib.SHRINKAGE_RATE "Shrinkage_Rate"
, esib.SUBSTITUTION_WINDOW_CODE "Substitution_Window_Code"
, esib.SUBSTITUTION_WINDOW_DAYS "Substitution_Window_Days"
, esib.TRADE_ITEM_DESCRIPTOR "Pack_Type"
, esib.allowed_units_lookup_code "Conversions"
, esib.dual_uom_deviation_high "Positive_Deviation_Factor"
, esib.dual_uom_deviation_low "Negative_Deviation_Factor"
, esib.item_type "User_Item_Type"
, esit.LONG_DESCRIPTION "Long_Description"
, NULL "Formatted_Description"
, esib.ont_pricing_qty_source "Pricing_Unit_of_Measure"
, esib.SECONDARY_DEFAULT_IND "Defaulting_Control"
, esib.SECONDARY_UOM_CODE "Secondary_Unit_of_Measure"
, esib.tracking_quantity_ind "Tracking_Unit_of_Measure"
, esib.ENGINEERED_ITEM_FLAG "Engineered_Item_Flag"
, esib.atp_components_flag "ATP_Components" 
, esib.atp_flag "Check_ATP"
, esib.OVER_SHIPMENT_TOLERANCE "Over_Shipment_Tolerance"
, esib.UNDER_SHIPMENT_TOLERANCE "Under_Shipment_Tolerance"
, esib.OVER_RETURN_TOLERANCE "Over_Return_Tolerance"
, esib.UNDER_RETURN_TOLERANCE "Under_Return_Tolerance"
, esib.DOWNLOADABLE_FLAG "Downloadable"
, esib.ELECTRONIC_FLAG "Electronic_Format"
, esib.INDIVISIBLE_FLAG "Order_Management_Indivisible"
, esib.internal_order_enabled_flag "Internal_Orders_Enabled"
, esib.ATP_RULE_ID "ATP_Rule"
, (SELECT uom.unit_of_measure FROM INV_UNITS_OF_MEASURE_VL uom WHERE uom.uom_code = esib.CHARGE_PERIODICITY_CODE) "Charge_Periodicity"
, esib.CUSTOMER_ORDER_FLAG "Customer_Orders_Enabled"
--, (SELECT io.ORGANIZATION_CODE FROM INV_ORG_PARAMETERS io WHERE io.ORGANIZATION_ID = ESIB.DEFAULT_SHIPPING_ORG) "Default_Shipping_Organization"
, esib.default_so_source_type "Default_Sales_Order_Source_Type"
, esib.ELIGIBILITY_COMPATIBILITY_RULE "Eligibility_Rule"
, esib.financing_allowed_flag "Financing_Allowed"
, esib.internal_order_flag "Internal_Ordered"
, esib.PICKING_RULE_ID "Picking_Rule"
, esib.returnable_flag "Returnable"
, esib.return_inspection_requirement "RMA_Inspection_Required"
, esib.SALES_PRODUCT_TYPE "Sales_Product_Type"
, esib.BACK_TO_BACK_ENABLED "Back_To_Back_Enabled"
, esib.shippable_item_flag "Shippable"
, esib.ship_model_complete_flag "Ship_Model_Complete"
, esib.so_transactions_flag "Order_Management_Transaction_Enabled"
, esib.customer_order_flag "Customer_Ordered"
, esib.UNIT_WEIGHT "Unit_Weight"
, esib.WEIGHT_UOM_CODE "Weight_Unit_of_Measure"
, esib.UNIT_VOLUME "Unit_Volume"
, esib.VOLUME_UOM_CODE "Volume_Unit_of_Measure"
, esib.DIMENSION_UOM_CODE "Dimension_Unit_of_Measure"
, esib.UNIT_LENGTH "Length"
, esib.UNIT_WIDTH "Width"
, esib.UNIT_HEIGHT "Height"
, esib.collateral_flag "Collateral"
, esib.container_item_flag "Container"
, esib.CONTAINER_TYPE_CODE "Container_Type"
, esib.equipment_type "Warehouse_Equipment"
, esib.event_flag "Event"
, esib.INTERNAL_VOLUME "Internal_Volume"
, esib.MAXIMUM_LOAD_WEIGHT "Maximum_Load_Weight"
, esib.MINIMUM_FILL_PERCENT "Minimum_Fill_Percent"
, esib.vehicle_item_flag "Vehicle"
, esib.CAS_NUMBER "CAS_Number"
, esib.hazardous_material_flag "Hazardous_Material"
, esib.process_costing_enabled_flag "Process_Costing_Enabled"
, esib.process_execution_enabled_flag "Process_Execution_Enabled"
, esib.process_quality_enabled_flag "Process_Quality_Enabled"
, esib.PROCESS_SUPPLY_LOCATOR_ID "Process_Supply_Locator"
, esib.PROCESS_SUPPLY_SUBINVENTORY "Process_Supply_Subinventory"
, esib.PROCESS_YIELD_LOCATOR_ID "Process_Yield_Locator"
, esib.PROCESS_YIELD_SUBINVENTORY "Process_Yield_Subinventory"
, esib.recipe_enabled_flag "Recipe_Enabled"
, esib.EXPENSE_ACCOUNT "Expense_Account"
, esib.UN_NUMBER_ID "UN_Number"
, esib.UNIT_OF_ISSUE "Unit_of_Issue"
, esib.ROUNDING_FACTOR "Rounding_Factor"
, esib.RECEIVE_CLOSE_TOLERANCE "Receipt_Close_Tolerance_Percentage"
, esib.purchasing_tax_code "Input_Tax_Classification_Code"
, esib.purchasing_item_flag "Purchased"
, esib.PRICE_TOLERANCE_PERCENT "Price_Tolerance_Percentage"
, esib.OUTSOURCED_ASSEMBLY "Outsourced_Assembly"
, esib.OUTSIDE_OPERATION_UOM_TYPE "Outside_Processing_Unit_Type"
, esib.NEGOTIATION_REQUIRED_FLAG "Negotiation_Required"
, esib.must_use_approved_vendor_flag "Use_Approved_Supplier"
, esib.MATCH_APPROVAL_LEVEL "Match_Approval_Level"
, esib.INVOICE_MATCH_OPTION "Invoice_Match_Option"
, esib.list_price_per_unit "List_Price"
, esib.INVOICE_CLOSE_TOLERANCE "Invoice_Close_Tolerance_Percentage"
, esib.HAZARD_CLASS_ID "Hazard_Class"
, esib.BUYER_ID "Default_Buyer"
, esib.taxable_flag "Taxable"
, esib.purchasing_enabled_flag "Purchasable"
, esib.OUTSIDE_OPERATION_FLAG "Outside_Processing_Item_Enabled"
, esib.MARKET_PRICE "Market_Price"
, esib.ASSET_CATEGORY_ID "Asset_Category"
, esib.allow_item_desc_update_flag "Allow_Purchasing_Document_Description_Update"
, esib.allow_express_delivery_flag "Allow_Express_Transactions"
, esib.allow_substitute_receipts_flag "Allow_Substitute_Receipts"
, esib.allow_unordered_receipts_flag "Allow_Unordered_Receipts"
, esib.DAYS_EARLY_RECEIPT_ALLOWED "Days_Early_Receipt_Allowed"
, esib.DAYS_LATE_RECEIPT_ALLOWED "Days_Late_Receipt_Allowed"
, esib.RECEIVING_ROUTING_ID "Receipt_Routing" --250
, esib.ENFORCE_SHIP_TO_LOCATION_CODE "Enforce_Ship-to_Location"
, esib.QTY_RCV_EXCEPTION_CODE "Quantity_Received_Action"
, esib.QTY_RCV_TOLERANCE "Quantity_Received_Tolerance"
, esib.RECEIPT_DAYS_EXCEPTION_CODE "Receipt_Date_Exception_Action"
, esib.asset_creation_code "Create_Fixed_Asset"
, esib.SERVICE_START_TYPE_CODE "Service_Start_Type"
, esib.COMMS_NL_TRACKABLE_FLAG "Track_in_Installed_Base"
, esib.CSS_ENABLED_FLAG "Enable_for_Customer_Self_Service"
, esib.CONTRACT_ITEM_TYPE_CODE "Contract_Item_Type"
, NULL "StandardCoverage"
, esib.DEFECT_TRACKING_ON_FLAG "Enable_Defect_Tracking"
, esib.IB_ITEM_INSTANCE_CLASS "Instance_Class"
, esib.MATERIAL_BILLABLE_FLAG "Billing_Type"
, esib.RECOVERED_PART_DISP_CODE "Recovered_Part_Disposition"
, esib.serviceable_product_flag "Enable_Contract_Coverage"
, esib.SERVICE_STARTING_DELAY "Starting_Delay_in_Days"
, esib.SERVICE_DURATION "Service_Duration"
, esib.SERVICE_DURATION_PERIOD_CODE "Service_Duration_Period"
, esib.SERV_REQ_ENABLED_CODE "Service_Request"
, esib.ALLOW_SUSPEND_FLAG "Allow_Suspend"
, esib.ALLOW_TERMINATE_FLAG "Allow_Terminate"
, esib.REQUIRES_FULFILLMENT_LOC_FLAG "Requires_Fulfillment_Location"
, esib.REQUIRES_ITM_ASSOCIATION_FLAG "Requires_Item_Association"
, esib.SERVICE_START_DELAY "Service_Start_Delay"
, esib.SERVICE_DURATION_TYPE_CODE "Service_Duration_Type" 
, esib.COMMS_ACTIVATION_REQD_FLAG "Enable_Provisioning"
, esib.serv_billing_enabled_flag "Enable_Service_Billing"
, esib.orderable_on_web_flag "Orderable_on_the_Web"
, esib.BACK_ORDERABLE_FLAG "Back_Orderable" 
, esib.web_status "Web_Status"
, esib.MINIMUM_LICENSE_QUANTITY "Minimum_License_Quantity"
, esib.build_in_wip_flag "Build_in_WIP"
, esib.CONTRACT_MANUFACTURING "Contract_Manufacturing"
, esib.WIP_SUPPLY_LOCATOR_ID "WIP_Supply_Locator"
, esib.wip_supply_type "WIP_Supply_Type"
, esib.WIP_SUPPLY_SUBINVENTORY "WIP_Supply_Subinventory"
, esib.OVERCOMPLETION_TOLERANCE_TYPE "Overcompletion_Tolerance_Type"
, esib.OVERCOMPLETION_TOLERANCE_VALUE "Overcompletion_Tolerance_Value"
, esib.INVENTORY_CARRY_PENALTY "Inventory_Carry_Penalty"
, esib.OPERATION_SLACK_PENALTY "Operation_Slack_Penalty"
, NULL "Revision"
, esib.STYLE_ITEM_FLAG "Style_Item"
, NULL "Style_Item_Number"
, TO_CHAR(esib.VERSION_START_DATE,'YYYY/MM/DD') "Version_Start_Date"
, NULL "Version_Revision_Code"
, NULL "Version_Label"
, esib.START_UPON_MILESTONE_CODE "Service_Start_Upon_Milestone"
, esib.SALES_PRODUCT_SUB_TYPE "Sales_Product_Sub_Type"
, esib.GLOBAL_ATTRIBUTE_CATEGORY
, esib.GLOBAL_ATTRIBUTE1 
, esib.GLOBAL_ATTRIBUTE2
, esib.GLOBAL_ATTRIBUTE3
, esib.GLOBAL_ATTRIBUTE4
, esib.GLOBAL_ATTRIBUTE5
, esib.GLOBAL_ATTRIBUTE6
, esib.GLOBAL_ATTRIBUTE7
, esib.GLOBAL_ATTRIBUTE8
, esib.GLOBAL_ATTRIBUTE9
, esib.GLOBAL_ATTRIBUTE10
, esib.ATTRIBUTE_CATEGORY
, esib.ATTRIBUTE1
, esib.ATTRIBUTE2
, esib.ATTRIBUTE3
, esib.ATTRIBUTE4
, esib.ATTRIBUTE5
, esib.ATTRIBUTE6
, esib.ATTRIBUTE7
, esib.ATTRIBUTE8
, esib.ATTRIBUTE9
, esib.ATTRIBUTE10
, esib.ATTRIBUTE11
, esib.ATTRIBUTE12
, esib.ATTRIBUTE13
, esib.ATTRIBUTE14
, esib.ATTRIBUTE15
, esib.ATTRIBUTE16
, esib.ATTRIBUTE17
, esib.ATTRIBUTE18
, esib.ATTRIBUTE19
, esib.ATTRIBUTE20
, esib.ATTRIBUTE21
, esib.ATTRIBUTE22
, esib.ATTRIBUTE23
, esib.ATTRIBUTE24
, esib.ATTRIBUTE25
, esib.ATTRIBUTE26
, esib.ATTRIBUTE27
, esib.ATTRIBUTE28
, esib.ATTRIBUTE29
, esib.ATTRIBUTE30
, esib.ATTRIBUTE_NUMBER1
, esib.ATTRIBUTE_NUMBER2
, esib.ATTRIBUTE_NUMBER3
, esib.ATTRIBUTE_NUMBER4
, esib.ATTRIBUTE_NUMBER5
, esib.ATTRIBUTE_NUMBER6
, esib.ATTRIBUTE_NUMBER7
, esib.ATTRIBUTE_NUMBER8
, esib.ATTRIBUTE_NUMBER9
, esib.ATTRIBUTE_NUMBER10
, esib.ATTRIBUTE_DATE1
, esib.ATTRIBUTE_DATE2
, esib.ATTRIBUTE_DATE3
, esib.ATTRIBUTE_DATE4
, esib.ATTRIBUTE_DATE5
, esib.ATTRIBUTE_TIMESTAMP1
, esib.ATTRIBUTE_TIMESTAMP2
, esib.ATTRIBUTE_TIMESTAMP3
, esib.ATTRIBUTE_TIMESTAMP4
, esib.ATTRIBUTE_TIMESTAMP5
, esib.GLOBAL_ATTRIBUTE11
, esib.GLOBAL_ATTRIBUTE12
, esib.GLOBAL_ATTRIBUTE13
, esib.GLOBAL_ATTRIBUTE14
, esib.GLOBAL_ATTRIBUTE15
, esib.GLOBAL_ATTRIBUTE16
, esib.GLOBAL_ATTRIBUTE17
, esib.GLOBAL_ATTRIBUTE18
, esib.GLOBAL_ATTRIBUTE19
, esib.GLOBAL_ATTRIBUTE20
, esib.GLOBAL_ATTRIBUTE_NUMBER1
, esib.GLOBAL_ATTRIBUTE_NUMBER2
, esib.GLOBAL_ATTRIBUTE_NUMBER3
, esib.GLOBAL_ATTRIBUTE_NUMBER4
, esib.GLOBAL_ATTRIBUTE_NUMBER5
, esib.GLOBAL_ATTRIBUTE_DATE1
, esib.GLOBAL_ATTRIBUTE_DATE2
, esib.GLOBAL_ATTRIBUTE_DATE3
, esib.GLOBAL_ATTRIBUTE_DATE4
, esib.GLOBAL_ATTRIBUTE_DATE5
, NULL "Procurement_Business_Unit"
, esib.FORCE_PURCHASE_LEAD_TIME_FLAG "Enforce_Purchasing_Lead_Time_Flag"
, esib.REPLACEMENT_TYPE "Replacement_Type"
, NULL "Buyer_Email_Address"
, (SELECT pe.EXPENDITURE_TYPE_NAME FROM PJF_EXP_TYPES_TL pe
  WHERE pe.LANGUAGE = 'US'
  AND pe.EXPENDITURE_TYPE_ID = esib.EXPENDITURE_TYPE_ID) "Default_Expenditure_Type"
, esib.HARD_PEGGING_LEVEL "Hard_Pegging_Level"
, esib.COMN_SUPPLY_PRJ_DEMAND_FLAG "Allow_Use_of_Common_Supplies"
, esib.ENABLE_IOT_FLAG "Enable_IoT"
, NULL "Packaging_String"
--, (CASE WHEN esib.ENABLED_FLAG = 'Y' THEN 'Success' ELSE 'Failed' END)  STATUS 
, 'Success' STATUS
, NULL ERROR_TEXT_MESSAGE
, ESIB.INVENTORY_ITEM_ID
, ESIB.ORGANIZATION_ID
, ESIB.CREATED_BY
, ESIB.CREATION_DATE
, ESIB.LAST_UPDATED_BY
, ESIB.LAST_UPDATE_DATE
, ESIB.LAST_UPDATE_LOGIN
, ESIB.OBJECT_VERSION_NUMBER

FROM 
     EGP_SYSTEM_ITEMS_B ESIB,
	 EGP_SYSTEM_ITEMS_TL ESIT,
	 INV_ORG_PARAMETERS IOP,
	 EGP_ITEM_RELATIONSHIPS_B egp,
	 EGP_ITEM_CLASSES_TL EICT
	 --EGP_SYSTEM_ITEMS_INTERFACE esii
	 
WHERE 1=1
AND egp.INVENTORY_ITEM_ID(+) = ESIT.INVENTORY_ITEM_ID
--and egp.MASTER_ORGANIZATION_ID(+) = ESIB.ORGANIZATION_ID
AND egp.ITEM_RELATIONSHIP_TYPE (+)= 'SYS_ITEM_XREF' -- for Non-recipe use this condition. and comment the above condition as well.
--AND esii.INVENTORY_ITEM_ID(+)=esib.INVENTORY_ITEM_ID
--AND esii.ORGANIZATION_ID(+)=esib.ORGANIZATION_ID
AND ESIB.INVENTORY_ITEM_ID = ESIT.INVENTORY_ITEM_ID				 
AND ESIB.ORGANIZATION_ID = ESIT.ORGANIZATION_ID 
AND ESIB.ORGANIZATION_ID = IOP.ORGANIZATION_ID 
AND IOP.ORGANIZATION_CODE IN ('IMO')
and esib.created_by in ('DH_DM_SCM_USER')
AND ESIB.ITEM_CATALOG_GROUP_ID = EICT.ITEM_CLASS_ID
AND EICT.LANGUAGE = 'US'
AND ESIT.LANGUAGE = 'US'
and ESIB.REQUEST_ID in (1300094,1300321,1301195)
AND NVL(ESIB.enabled_flag, 'Y') <> 'N'
/*AND esib.ITEM_NUMBER IN ( SELECT esib.ITEM_NUMBER FROM EGP_SYSTEM_ITEMS_B 
ESIB WHERE esib.ITEM_NUMBER NOT LIKE 'BR%' AND esib.ITEM_NUMBER NOT LIKE 'FR%')*/
==========================================================================
SELECT owner, table_name, column_name 
FROM all_tab_columns 
WHERE column_name LIKE '%FOB%'
--AND OWNER IN ('YOUR_SCHEMA_NAME')
;

select * from fnd_lookup_values where lookup_type like '%FOB%'

oracle cloud



AP_Invoice Report 
=================
select  fabu.bu_name Business_Unit,
	         ps.VENDOR_NAME Supplier,
			 aia.invoice_num AP_Invoice_Number,
			 rsh.attribute1 supplier_invoice_number,
			 pha.segment1 po_number,
			 rsl.line_num line_number,
			 rsh.receipt_num receipt_number,
			 ps.segment1 SUPPLIER_NUMBER,
			 to_char(pha.CREATION_DATE,'DD/MM/YYYY')PO_DATE,
			 to_char(aia.invoice_date ,'DD/MM/YYYY')AP_INV_DATE,
			 to_char(rsh.ATTRIBUTE_TIMESTAMP1,'DD/MM/YYYY') SUPPLIER_INVOICE_DATE,
			 ----null SUPPLIER_INVOICE_DATE,
			 to_char(rsh.CREATION_DATE ,'DD/MM/YYYY')RECEIPT_DATE
			
			from
			fun_all_business_units_v fabu,
			ap_invoice_lines_all aila ,
			ap_invoices_all aia ,
			rcv_shipment_lines rsl,
			rcv_shipment_headers rsh,
			po_headers_all pha,
			poz_suppliers_v ps
			--RA_CUSTOMER_TRX_ALL rcta
	where 1=1
	AND aia.invoice_id=aila.invoice_id
	--AND aia.invoice_num='R-1011000088-10002'
	and (aia.invoice_date >= :p_from_date 
	          or :p_from_date is null)
	   and (aia.invoice_date <= :p_to_date 
	          or :p_to_date is null)
	and aila.LINE_TYPE_LOOKUP_CODE='ITEM'
	and aila.po_header_id=rsl.po_header_id
	and aila.po_line_id=rsl.po_line_id
	and aila.po_header_id=pha.po_header_id
	AND rsh.shipment_header_id = rsl.shipment_header_id
	AND ps.VENDOR_ID = PHA.VENDOR_ID
	AND fabu.bu_id=pha.PRC_BU_ID
	AND fabu.bu_name in (:p_bu)
	AND ps.VENDOR_NAME = NVL(:p_SUPPLIER,ps.VENDOR_NAME) 
	AND aia.org_id=pha.PRC_BU_ID
	ORDER BY rsl.line_num
	
	
1.Query to get Account Code Combination Description
---------------------------------------------------

SELECT gl_flexfields_pkg.get_concat_description
                                          (chart_of_accounts_id,
                                           code_combination_id
                                          )
            FROM gl_code_combinations
 
2. Query to get Account Segment Description
-------------------------------------------

SELECT gl_flexfields_pkg.get_description_sql
                                     (chart_of_accounts_id,--- chart of account id
                                      1,----- Position of segment
                                      segment1 ---- Segment value
                                     )
FROM gl_code_combinations
/

select segment1||'-'||segment2||'-'||segment3 acc from gl_code_combinations 	gcc where 

select * from (select segment1||'-'||segment2||'-'||segment3 acc from gl_code_combinations 	gcc)
where 1=1
AND	(acc IN (:p_acc)
		OR
		COALESCE(:p_acc,NULL) IS NULL) 
-- Parent Query
===========================================================

SELECT 
	DISTINCT ft.pk1_start_value||' - '||ffvv.description description
	,ft.pk1_start_value parent
FROM 
	fnd_tree_node 			ft
	,fnd_flex_values_vl		ffvv
WHERE 1=1  
AND ft.pk1_start_value 				= ffvv.flex_value
AND ft.pk2_start_value				= ffvv.value_category
AND ffvv.summary_flag				= 'Y'
AND ft.tree_code 					= 'BRAND JCPL_PL JCPL_PL IN'
AND ft.tree_version_id IN 			(SELECT tree_version_id
									FROM fnd_tree_version_vl
									WHERE tree_code = 'BRAND JCPL_PL JCPL_PL IN'    
									AND TRUNC (effective_end_date) >= TRUNC (SYSDATE))
ORDER BY 1


--Division Query
=====================================================

SELECT 
	DISTINCT ft.pk1_start_value||' - '||ffvv.description description
	,ft.pk1_start_value child
FROM 
	fnd_tree_node 			ft
	,fnd_flex_values_vl		ffvv
	,fnd_id_flex_segments  	fifs
	,gl_code_combinations 	gcc
WHERE 1=1  
AND ft.pk1_start_value 				= ffvv.flex_value
AND ffvv.flex_value_set_id 			= fifs.flex_value_set_id
AND ffvv.flex_value					= gcc.segment2
AND fifs.id_flex_code 				= 'GL#'
AND fifs.enabled_flag 				= 'Y'
AND fifs.application_column_name 	= 'SEGMENT2'
AND ft.tree_code 					= 'BRAND JCPL_PL JCPL_PL IN'
AND ft.tree_version_id IN 			(SELECT tree_version_id
									FROM fnd_tree_version_vl
									WHERE tree_code = 'BRAND JCPL_PL JCPL_PL IN'    
									AND TRUNC (effective_end_date) >= TRUNC (SYSDATE))
AND ft.parent_pk1_value 			IN (:P_LOB_PARENT)
ORDER BY 1



--Account Parent Query
===========================================================


SELECT 
	DISTINCT ft.pk1_start_value||' - '||ffvv.description description
	,ft.pk1_start_value parent
FROM 
	fnd_tree_node 			ft
	,fnd_flex_values_vl		ffvv
WHERE 1=1  
AND ft.pk1_start_value 				= ffvv.flex_value
AND ft.pk2_start_value				= ffvv.value_category
AND ffvv.summary_flag				= 'Y'
AND ft.tree_code 					= 'ACCOUNT JCPL_PL JCPL_PL IN'
AND ft.tree_version_id IN 			(SELECT tree_version_id
									FROM fnd_tree_version_vl
									WHERE tree_code = 'ACCOUNT JCPL_PL JCPL_PL IN'    
									AND TRUNC (effective_end_date) >= TRUNC (SYSDATE))
--Account Query
=====================================================


SELECT 
	DISTINCT ft.pk1_start_value||' - '||ffvv.description description
	,ft.pk1_start_value child
FROM 
	fnd_tree_node 			ft
	,fnd_flex_values_vl		ffvv
	,fnd_id_flex_segments  	fifs
	,gl_code_combinations 	gcc
WHERE 1=1  
AND ft.pk1_start_value 				= ffvv.flex_value
AND ffvv.flex_value_set_id 			= fifs.flex_value_set_id
AND ffvv.flex_value					= gcc.segment4
AND fifs.id_flex_code 				= 'GL#'
AND fifs.enabled_flag 				= 'Y'
AND fifs.application_column_name 	= 'SEGMENT4'
AND ft.tree_code 					= 'ACCOUNT JCPL_PL JCPL_PL IN'
AND ft.tree_version_id IN 			(SELECT tree_version_id
									FROM fnd_tree_version_vl
									WHERE tree_code = 'ACCOUNT JCPL_PL JCPL_PL IN'    
									AND TRUNC (effective_end_date) >= TRUNC (SYSDATE))
AND ft.parent_pk1_value 			IN (:P_PR_ACC)
ORDER BY 1


--BU  segment1

select distinct gcc.segment1 from gl_code_combinations 	gcc


select  DISTINCT 
         gl_flexfields_pkg.Get_description_sql ( gcc.chart_of_accounts_id ,1 ,gcc.segment1 ) bu_nmae ,
          gcc.segment1                                                                        bu_code 
  from gl_code_combinations 	gcc


select  DISTINCT 
        gl_flexfields_pkg.Get_description_sql ( gcc.chart_of_accounts_id ,6 ,gcc.segment6 ) dision ,
          gcc.segment6                                                                        div_code 
  from gl_code_combinations 	gcc
  
  select  DISTINCT 
        gl_flexfields_pkg.Get_description_sql ( gcc.chart_of_accounts_id ,3 ,gcc.segment3 ) Account ,
          gcc.segment3                                                                        acc_code 
  from gl_code_combinations 	gcc

==== Receivables Receipt Split Report 

SELECT
	rcta.customer_trx_id,
	rcta.sold_to_customer_id,
	rcta.sold_to_site_use_id,
	rcta.ship_to_site_use_id,
	rcta.ship_to_customer_id,
	rcta.bill_to_customer_id,
	rcta.trx_number invoice_number,
	gcc.segment1
	|| '.'
	|| gcc.segment2
	|| '.'
	|| gcc.segment3
	|| '.'
	|| gcc.segment4
	|| '.'
	|| gcc.segment5
	|| '.'
	|| gcc.segment6
	|| '.'
	|| gcc.segment7
	|| '.'
	|| gcc.segment8
	ar_inv_dist_code_combination,
	(trx_dist.amount
	+nvl(sgst.sgst_amount,0)
	+nvl(cgst.cgst_amount,0)
	+nvl(igst.igst_amount,0)
	-- Add Frieght
	) line_amount,
	rtl.name payment_terms,
	hca.account_number customer_account_number,
	hca.account_name,
	gcc.segment2 revenue_account,
	--bill to
	hp_bill.party_name bill_to_customer,
	--Ship To
	(SELECT
		hp_ship.party_name ship_to_customer
	FROM
		hz_cust_accounts hca_ship,
		hz_parties hp_ship,
		hz_cust_site_uses_all hcsu_ship,
		hz_cust_acct_sites_all hcas_ship,
		hz_party_sites hps_ship,
		hz_locations hl_ship
	WHERE 1=1
	AND hl_ship.location_id = hps_ship.location_id
	AND hps_ship.party_site_id = hcas_ship.party_site_id
	AND hcas_ship.cust_acct_site_id = hcsu_ship.cust_acct_site_id
	AND hcsu_ship.site_use_id = rcta.ship_to_site_use_id
	AND hca_ship.party_id = hp_ship.party_id
	AND hca_ship.cust_account_id = rcta.ship_to_customer_id ) ship_to_customer,
	acra.receipt_number,
	acra.amount receipt_amount,
	ROUND((((trx_dist.amount
	+nvl(sgst.sgst_amount,0)
	+nvl(cgst.cgst_amount,0)
	+nvl(igst.igst_amount,0)
	-- Add Frieght
	)
	/(SELECT SUM(line_recoverable+NVL(tax_recoverable,0)) 
	FROM ra_customer_trx_lines_all 
	WHERE customer_trx_id = rcta.customer_trx_id))
	* acra.amount),2)	split_receipt_amount,
	bill_to.location  bill_to_site,
	hps_ship.party_site_number ship_to_site
FROM
	ra_customer_trx_all rcta,
	ra_cust_trx_line_gl_dist_all trx_dist,
	gl_code_combinations gcc,
	xla_transaction_entities xte,
	xla_ae_headers xah,
	xla_ae_lines xal,
	xla_distribution_links xdl,
	gl_import_references gir,
	gl_je_headers gjh,
	gl_je_lines gjl,
	ra_terms_tl rtl,
	hz_cust_accounts hca,
	(SELECT 
		DISTINCT trx_id,
		trx_line_id,
		trx_line_number,
		ABS (unrounded_tax_amt) igst_amount,
		tax_rate igst_rate,
		ABS (unrounded_taxable_amt) igst_taxable
	FROM zx_lines
	WHERE entity_code = 'TRANSACTIONS'
	AND tax LIKE '%IGST%'
	AND application_id = 222) igst,
	(SELECT 
		DISTINCT trx_id,
		trx_line_id,
		trx_line_number,
		ABS (unrounded_tax_amt) cgst_amount,
		tax_rate cgst_rate,
		ABS (unrounded_taxable_amt) cgst_taxable
	FROM zx_lines
	WHERE entity_code = 'TRANSACTIONS'
	AND tax LIKE '%CGST%'
	AND application_id = 222) cgst,
	(SELECT 
		DISTINCT trx_id,
		trx_line_id,
		trx_line_number,
		ABS (unrounded_tax_amt) sgst_amount,
		tax_rate sgst_rate,
		ABS (unrounded_taxable_amt) sgst_taxable
	FROM zx_lines
	WHERE entity_code = 'TRANSACTIONS'
	AND tax LIKE '%SGST%'
	AND application_id = 222) sgst,
	--bill to
	hz_cust_accounts hca_bill,
	hz_parties hp_bill,
	hz_cust_site_uses_all hcsu_bill,
	hz_cust_acct_sites_all hcas_bill,
	hz_party_sites hps_bill,
	hz_locations hl_bill,
	--Ship to
	ar_receivable_applications_all araa,
	ar_cash_receipts_all acra,
	hz_cust_site_uses_all bill_to,
	--Ship to
	hz_party_site_uses hcsu_ship,
	hz_party_sites hps_ship
WHERE 1=1
AND xte.source_id_int_1 = rcta.customer_trx_id
AND rcta.customer_trx_id = trx_dist.customer_trx_id
AND gcc.code_combination_id = gjl.code_combination_id
AND xte.entity_code = 'TRANSACTIONS'
AND xte.application_id = 222
AND xah.entity_id = xte.entity_id
AND xal.ae_header_id = xah.ae_header_id
AND xal.accounting_class_code = 'REVENUE'
AND xdl.ae_header_id = xah.ae_header_id
AND xdl.ae_line_num = xal.ae_line_num
AND xdl.source_distribution_id_num_1 = trx_dist.cust_trx_line_gl_dist_id
AND xdl.application_id = 222
AND gir.gl_sl_link_id = xal.gl_sl_link_id
AND gir.gl_sl_link_table='XLAJEL'
AND gjh.je_header_id = gir.je_header_id
AND gjl.je_header_id = gjh.je_header_id
AND gjl.je_line_num = gir.je_line_num
AND rcta.term_id = rtl.term_id
AND rtl.LANGUAGE = USERENV('lang')
AND rcta.bill_to_customer_id = hca.cust_account_id
--Tax
AND trx_dist.customer_trx_id= igst.trx_id(+)
AND trx_dist.customer_trx_line_id = igst.trx_line_id(+)
AND trx_dist.customer_trx_id = sgst.trx_id(+)
AND trx_dist.customer_trx_line_id = sgst.trx_line_id(+)
AND trx_dist.customer_trx_id = cgst.trx_id(+)
AND trx_dist.customer_trx_line_id = cgst.trx_line_id(+)
--Bill to
AND hl_bill.location_id = hps_bill.location_id
AND hps_bill.party_site_id = hcas_bill.party_site_id
AND hcas_bill.cust_acct_site_id = hcsu_bill.cust_acct_site_id
AND hcsu_bill.site_use_id = rcta.bill_to_site_use_id
AND hca_bill.party_id = hp_bill.party_id
AND hca_bill.cust_account_id = rcta.bill_to_customer_id
AND rcta.customer_trx_id = araa.applied_customer_trx_id
AND araa.display = 'Y'
AND araa.cash_receipt_id = acra.cash_receipt_id
AND	rcta.bill_to_site_use_id = bill_to.site_use_id
AND hcsu_ship.party_site_use_id = rcta.ship_to_party_site_use_id
AND hcsu_ship.party_site_id = hps_ship.party_site_id
AND (rcta.customer_trx_id IN (:p_inv)
		OR
		COALESCE(:p_inv,NULL) IS NULL)
AND	TRUNC(rcta.trx_date) BETWEEN NVL(:p_inv_from,TRUNC(rcta.trx_date)) AND NVL(:p_inv_to,TRUNC(rcta.trx_date))
AND	(rcta.org_id IN (:p_bu)
		OR
		COALESCE(:p_bu,NULL) IS NULL)
AND	(acra.cash_receipt_id IN (:p_receipt)
	OR
	COALESCE(:p_receipt,NULL) IS NULL)
AND	(rcta.bill_to_customer_id IN (:p_cust_no)
    OR 
	COALESCE(:p_cust_no,NULL) IS NULL)

AND	(rcta.bill_to_customer_id IN (:p_cust)
    OR 
	COALESCE(:p_cust,NULL) IS NULL)
	
--

BUlist
------------------------------------
SELECT  OU.NAME,OU.ORGANIZATION_ID
  FROM HR_OPERATING_UNITS OU, 
         GL_LEDGERS GL
 WHERE 1=1 
       AND OU.SET_OF_BOOKS_ID = GL.SHORT_NAME 
       AND OU.ORGANIZATION_ID IN (SELECT DISTINCT ORG_ID FROM FUN_USER_ROLE_DATA_ASGNMNTS WHERE USER_GUID = FND_GLOBAL.USER_GUID)
       AND TRUNC (OU.DATE_TO) >= TRUNC (SYSDATE) 
 ORDER BY 1
 	
/******************************************************************* 
 *PURPOSE: SQL Query to get Organization Structure along with LE, BU and Ledger    *
 *AUTHOR: Shailender Thallam 				           *
 *******************************************************************/
SELECT
       horg.name            enterprise
     , horg.organization_id enterprise_id
     , xr.registered_name
     , xr.alternate_registered_name
     , xr.registration_number
     , xr.place_of_registration
     , xr.effective_from
     , xr.effective_to
     , xep.name "LEGAL_ENTITY_NAME"
     , xep.legal_entity_identifier
     , hou.business_group_id
     , hou.organization_id "BU_ID"
     , hou.name "BU_NAME"
     , hou.date_from "BU_FROM_DATE"
     , hou.date_to "BU_TO_DATE"
     , hou.short_code "BU_SHORT_CODE"
     , hou.set_of_books_id
     , gll.name ledger_name
     , gll.ledger_id
FROM
       xle_entity_profiles     xep
     , xle_registrations       xr
     , hr_operating_units      hou
     , hr_organization_units   horg
     , gl_ledger_norm_seg_vals glnsv
     , gl_ledgers              gll
WHERE
       xep.legal_entity_id       = xr.source_id
       AND xr.source_table       = 'XLE_ENTITY_PROFILES'
       AND xep.legal_entity_id   = hou.default_legal_context_id(+)
       AND horg.organization_id  = hou.business_group_id
       AND glnsv.legal_entity_id = xep.legal_entity_id
       AND gll.ledger_id         = glnsv.ledger_id	

/******************************************************************* 
 *PURPOSE: SQL Query to get Account wise commision agent report AR    *
 *AUTHOR: Shailender Thallam 				           *
 *******************************************************************/	   

Select 
	   CUST_INV.line_amount,
	   CUST_INV.revenue_account,
	   CUST_INV.customer_account_number,
	   CUST_INV.customer_name,
	   AgenT_Q.agent,
	   AgenT_Q.percentage,
	   AgenT_Q.DIVISION,
	   AgenT_Q.Supplier_number,
	   round(CUST_INV.line_amount*(AgenT_Q.percentage*0.01),2) PERCENTAGE_AMOUNT,
	   CUST_INV.trx_number,
	   to_char(CUST_INV.trx_date,'DD/MM/YYYY')trx_date,
	   CUST_INV.amount_applied,
	   CUST_INV.receipt_date
	  
	   
from (select hca.cust_account_id,
	
	 sum((trx_dist.amount
	+nvl(sgst.sgst_amount,0)
	+nvl(cgst.cgst_amount,0)
	+nvl(igst.igst_amount,0)
	-- Add Frieght
	)) line_amount,
	gcc.segment2 revenue_account,
	hca.account_number customer_account_number,
	hp.party_name customer_name,
    rcta.trx_number,
	rcta.trx_date,
	ar_rct.amount_applied,
	ar_rct.receipt_date
	
FROM
	ra_customer_trx_all rcta,
	ra_cust_trx_line_gl_dist_all trx_dist,
	hz_cust_accounts hca,
	hz_parties hp,
	(SELECT 
		DISTINCT trx_id,
		trx_line_id,
		trx_line_number,
		ABS (unrounded_tax_amt) igst_amount,
		tax_rate igst_rate,
		ABS (unrounded_taxable_amt) igst_taxable
	FROM zx_lines
	WHERE entity_code = 'TRANSACTIONS'
	AND tax LIKE '%IGST%'
	AND application_id = 222) igst,
	(SELECT 
		DISTINCT t=rx_id,
		trx_line_id,
		trx_line_number,
		ABS (unrounded_tax_amt) cgst_amount,
		tax_rate cgst_rate,
		ABS (unrounded_taxable_amt) cgst_taxable
	FROM zx_lines
	WHERE entity_code = 'TRANSACTIONS'
	AND tax LIKE '%CGST%'
	AND application_id = 222) cgst,
	(SELECT 
		DISTINCT trx_id,
		trx_line_id,
		trx_line_number,
		ABS (unrounded_tax_amt) sgst_amount,
		tax_rate sgst_rate,
		ABS (unrounded_taxable_amt) sgst_taxable
	FROM zx_lines
	WHERE entity_code = 'TRANSACTIONS'
	AND tax LIKE '%SGST%'
	AND application_id = 222) sgst,
		gl_code_combinations gcc,
	xla_transaction_entities xte,
	xla_ae_headers xah,
	xla_ae_lines xal,
	xla_distribution_links xdl,
	gl_import_references gir,
	gl_je_headers gjh,
	gl_je_lines gjl,
	 (select  araa.applied_customer_trx_id,sum(araa.amount_applied) amount_applied,
       LISTAGG(distinct to_char(araa.APPLY_DATE,'DD/MM/YYYY'), ' / ') WITHIN GROUP (ORDER BY to_char(araa.APPLY_DATE,'DD/MM/YYYY')) receipt_date
	  from 
      ar_cash_receipts_all acra,
      ar_receivable_applications_all araa
	  where 1=1 
	  --and araa.applied_customer_trx_id = rcta.customer_trx_id
      AND acra.cash_receipt_id = araa.cash_receipt_id
	  --and araa.applied_customer_trx_id=81066
	  group by araa.applied_customer_trx_id
	   ) ar_rct
WHERE 1=1
 AND ar_rct.applied_customer_trx_id = rcta.customer_trx_id
AND rcta.customer_trx_id = trx_dist.customer_trx_id	
AND rcta.bill_TO_CUSTOMER_ID = hca.cust_account_id
AND rcta.sold_to_party_id=hp.party_id
AND account_class='REV'
--Tax
AND trx_dist.customer_trx_id= igst.trx_id(+)
AND trx_dist.customer_trx_line_id = igst.trx_line_id(+)
AND trx_dist.customer_trx_id = sgst.trx_id(+)
AND trx_dist.customer_trx_line_id = sgst.trx_line_id(+)
AND trx_dist.customer_trx_id = cgst.trx_id(+)
AND trx_dist.customer_trx_line_id = cgst.trx_line_id(+)
AND	(hca.account_name IN (:p_cust)
    OR 
	COALESCE(:p_cust,NULL) IS NULL)
AND	TRUNC(rcta.trx_date) BETWEEN NVL(:p_inv_from,TRUNC(rcta.trx_date)) AND NVL(:p_inv_to,TRUNC(rcta.trx_date))
----
AND xte.source_id_int_1 = rcta.customer_trx_id
AND gcc.code_combination_id = gjl.code_combination_id
AND xte.entity_code = 'TRANSACTIONS'
AND xte.application_id = 222
AND xah.entity_id = xte.entity_id
AND xal.ae_header_id = xah.ae_header_id
AND xal.accounting_class_code = 'REVENUE'
AND xdl.ae_header_id = xah.ae_header_id
AND xdl.ae_line_num = xal.ae_line_num
AND xdl.source_distribution_id_num_1 = trx_dist.cust_trx_line_gl_dist_id
AND xdl.application_id = 222
AND gir.gl_sl_link_id = xal.gl_sl_link_id
AND gir.gl_sl_link_table='XLAJEL'
AND gjh.je_header_id = gir.je_header_id
AND gjl.je_header_id = gjh.je_header_id
AND gjl.je_line_num = gir.je_line_num
GROUP BY hca.cust_account_id,
	gcc.segment2 ,
	hca.account_number ,
	hp.party_name,
	rcta.trx_number,
	rcta.trx_date,
	ar_rct.amount_applied,
	ar_rct.receipt_date
	) CUST_INV,
	(select cust_account_id ACCOUNTZ_ID ,
           ATTRIBUTE3 agent,
           ATTRIBUTE_NUMBER1 percentage,
           ATTRIBUTE_NUMBER3 DIVISION	,
           ATTRIBUTE4 Supplier_number 
           from hz_cust_accounts 
           
           UNION
           select cust_account_id ACCOUNTZ_ID ,
           ATTRIBUTE7 agent,
           to_number(ATTRIBUTE8) percentage,
           ATTRIBUTE_NUMBER4 DIVISION	,
           ATTRIBUTE9 Supplier_number
           from hz_cust_accounts 
            )
			Agent_q
where CUST_INV.cust_account_id=Agent_q.ACCOUNTZ_ID(+)
 AND CUST_INV.revenue_account=Agent_q.DIVISION(+)	   
 
GL Report -AP AR Manual
========================


select ac.*,NVL(ac.opening_balance, 0) + SUM(net_amount) OVER (PARTITION BY account ORDER BY  ACCOUNT,ac.ROW_NUM) RUNNING_CLOSING,
 CASE WHEN  NVL(ac.opening_balance, 0) + SUM(NVL(ac.amount_dr,0) - NVL(amount_cr,0)) OVER (PARTITION BY account ORDER BY  ledger_name,
 bu_code,division,ACCOUNT)>0 THEN 'Dr' ELSE 'Cr' END    balanceindicator

from (select bb.*,nvl((select  SUM(NVL ((NVL(gjl.accounted_dr,0) - NVL(gjl.accounted_dr,0)), 0))  
	 FROM   gl_je_headers gjh,
	 gl_je_lines  gjl,
    GL_CODE_COMBINATIONS GCC
	where 
	1=1
	and GCC.CODE_COMBINATION_ID = gjl.CODE_COMBINATION_ID
    AND gjl.LEDGER_ID = bb.LEDGER_ID
	AND gcc.segment3=bb.account
	AND      gjh.status = 'P'
	AND      gjl.je_header_id = gjh.je_header_id
	AND  gjl.effective_date <= :p_from_date)  ,0)    opening_balance ,
	ROW_NUMBER() OVER (PARTITION BY bb.account ORDER BY bb.account,bb.transaction_date ,bb.TRANSACTION_NUMBER) AS ROW_NUM
	from (select LEDGER_ID,ledger_name,
legal_entity,
account_description ,
bu_code ,
bu_nmae ,
account ,
division ,
je_category_desc ,
transaction_number ,
transaction_date,
party_number,
party_name ,
bill_no,
bill_date,
remarks,
sum(amount_dr) amount_dr ,
sum(amount_cr) amount_cr ,
sum(net_amount) net_amount

 from 
 ( SELECT   'Q1' query,gjl.LEDGER_ID,gl.NAME ledger_name ,   xe.NAME     legal_entity,
         gl_flexfields_pkg.Get_description_sql ( gcc.chart_of_accounts_id, 3, gcc.segment3 ) account_description ,
         gcc.segment1                                                                        bu_code ,
         gl_flexfields_pkg.Get_description_sql ( gcc.chart_of_accounts_id ,1 ,gcc.segment1 ) bu_nmae ,
         gcc.segment3                                                                        account ,
         gcc.segment6                                                                        division ,
         gjc.je_category_name                                                                je_category_desc ,
         gjh.NAME                                                                            transaction_number ,
         to_char(gjh.DATE_CREATED ,'DD-MON-RR')                                                transaction_date,
         '1'                                                                                party_number,
         '1'                                                                                party_name ,
         '1'                                                                                bill_no,
         to_char(gjh.DATE_CREATED ,'DD-MON-RR')                                              bill_date,
         gjl.description                                                                     remarks,
         nvl(gjl.accounted_dr, 0)                                                            amount_dr ,
         nvl(gjl.accounted_cr, 0)                                                            amount_cr ,
         (nvl(gjl.accounted_dr, 0) - nvl(gjl.accounted_cr, 0))                               net_amount 
FROM     gl_code_combinations gcc ,
         gl_ledgers gl ,
         gl_je_lines gjl ,
         gl_je_headers gjh ,
         gl_je_categories gjc ,
         gl_je_sources gjs ,
         xle_entity_profiles xe
WHERE    1 = 1
AND      gjl.code_combination_id = gcc.code_combination_id
AND      gl.ledger_id = gjl.ledger_id
AND      gjl.je_header_id = gjh.je_header_id
AND      gjh.je_category = gjc.je_category_name
AND      gjh.je_source = gjs.je_source_name
AND      gjh.legal_entity_id = xe.legal_entity_id(+)
AND      gjs.je_source_name IN ('Manual')
AND      gjh.status = 'P'
         --AND      gjh.NAME = 'Journal GL 01'
         ---------------------- PARAMETERS ---------------------
AND 	(gl.NAME  IN (:p_led)
         OR       COALESCE(:p_led,NULL) IS NULL)
AND 	(gcc.segment1  IN (:p_bu)
         OR       COALESCE(:p_bu,NULL) IS NULL)	 
--AND ( xe.name  IN (:P_LEGAL_ENTITY)
   --      OR       COALESCE(:P_LEGAL_ENTITY,NULL) IS NULL)	 
AND      (
                  gcc.segment3 IN (:p_account)
         OR       COALESCE(:p_account,NULL) IS NULL)
AND      (
                  gcc.segment6 IN (:p_division)
         OR       COALESCE(:p_division,NULL) IS NULL)
AND      (
                  gjl.effective_date >= :p_from_date
         OR       :p_from_date IS NULL )
AND      (
                  gjl.effective_date <= :p_to_date
         OR       :p_to_date IS NULL )
UNION	
--AP
SELECT    'Q3' query,gjl.LEDGER_ID,
	     gl.NAME                                                                       ledger_name ,
         xe.NAME                                                                             legal_entity,
         gl_flexfields_pkg.Get_description_sql ( gcc.chart_of_accounts_id, 3, gcc.segment3 ) account_description ,
         gcc.segment1                                                                        bu_code ,
         gl_flexfields_pkg.Get_description_sql ( gcc.chart_of_accounts_id ,1 ,gcc.segment1 ) bu_nmae ,
         gcc.segment3                                                                        account ,
         gcc.segment6                                                                        division ,
         gjc.je_category_name                                                                je_category_desc ,
         nvl(to_char(aia.DOC_SEQUENCE_VALUE),aia.invoice_num )                                   transaction_number ,
		-- case when aia.DOC_SEQUENCE_VALUE is not null then aia.DOC_SEQUENCE_VALUE else aia.invoice_num end transaction_number,
         to_char( aia.invoice_date ,'DD-MON-RR')                                                          transaction_date,
         hps.party_number                                                                      party_Number,
         hps.party_name                                                                       PartyName ,
         aia.invoice_num                                                                    bill_no,
         to_char( aia.invoice_date ,'DD-MON-RR')                                                                      bill_date,
		 gjl.description                                               remarks,
		 nvl(gjl.accounted_dr, 0) amount_dr,
		 nvl(gjl.accounted_cr, 0) amount_cr,
		 nvl(gjl.accounted_dr, 0)-nvl(gjl.accounted_cr, 0) net_amount
FROM   gl_code_combinations gcc ,
       gl_je_lines gjl ,
       gl_je_headers gjh ,
       gl_je_categories gjc ,
       gl_je_sources gjs ,
       ap_invoices_all aia ,
       hz_parties hps ,
       hz_party_sites hpss ,
       xla_ae_headers xah ,
       xla_transaction_entities xte ,
       xla_events xev ,
       xla_ae_lines xal ,
       gl_import_references gir ,
       fnd_lookup_values flv ,
       gl_ledgers gl ,
       xle_entity_profiles xe ,
       hr_operating_units hou
WHERE  1 = 1
AND    gjl.code_combination_id = gcc.code_combination_id
AND    gjl.je_header_id = gjh.je_header_id
AND    aia.party_id = hps.party_id
AND    aia.party_site_id = hpss.party_site_id
AND    aia.invoice_id = xte.source_id_int_1
AND    xte.application_id = 200
AND    xte.application_id = xev.application_id
AND    xte.application_id = xah.application_id
AND    xev.entity_id = xte.entity_id
AND    xah.entity_id = xte.entity_id
AND    xah.event_id = xev.event_id
AND    xah.ae_header_id = xal.ae_header_id
AND    xal.gl_sl_link_id = gir.gl_sl_link_id
AND    gir.gl_sl_link_table = xal.gl_sl_link_table
AND    gjh.je_header_id = gir.je_header_id
AND    gir.je_header_id = gjl.je_header_id
AND    gir.je_line_num = gjl.je_line_num
AND    gjh.je_category = gjc.je_category_name
AND    gjh.je_source = gjs.je_source_name
AND    flv.lookup_type = 'INVOICE TYPE'
AND    flv.lookup_code = aia.invoice_type_lookup_code
AND    flv.language = userenv('LANG')
AND GJC.je_category_name    = 'Purchase Invoices'
       -- AND XAL.accounting_class_code   LIKE '%TAX%'
AND    gjs.je_source_name = 'Payables'
AND    gjh.status = 'P'
AND    (
              gjl.accounted_cr <> 0
       OR     gjl.accounted_dr <> 0)
AND    (
              xal.accounted_cr <> 0
       OR     xal.accounted_dr <> 0)
AND    gl.ledger_id = gjl.ledger_id
AND    gjh.legal_entity_id = xe.legal_entity_id
AND    aia.org_id = hou.organization_id
AND      gjh.status = 'P'
         ---------------------- PARAMETERS ---------------------
/*AND ( xe.name  IN (:P_LEGAL_ENTITY)
         OR       COALESCE(:P_LEGAL_ENTITY,NULL) IS NULL)	 */
AND 	(gl.NAME  IN (:p_led)
         OR       COALESCE(:p_led,NULL) IS NULL)	
 		 
AND 	(gcc.segment1  IN (:p_bu)
         OR       COALESCE(:p_bu,NULL) IS NULL)	 
AND      (
                  gcc.segment3 IN (:p_account)
         OR       COALESCE(:p_account,NULL) IS NULL)
AND      (
                  gcc.segment6 IN (:p_division)
         OR       COALESCE(:p_division,NULL) IS NULL)
AND      (
                  gjl.effective_date >= :p_from_date
         OR       :p_from_date IS NULL )
AND      (
                  gjl.effective_date <= :p_to_date
         OR       :p_to_date IS NULL )	
UNION
SELECT    'Q2' query,gjl.LEDGER_ID,gl.NAME                                                                             ledger_name ,
         xe.NAME                                                                             legal_entity,
         gl_flexfields_pkg.Get_description_sql ( gcc.chart_of_accounts_id, 3, gcc.segment3 ) account_description ,
         gcc.segment1                                                                        bu_code ,
         gl_flexfields_pkg.Get_description_sql ( gcc.chart_of_accounts_id ,1 ,gcc.segment1 ) bu_nmae ,
         gcc.segment3                                                                        account ,
         gcc.segment6                                                                        division ,
         gjc.je_category_name                                                               je_category_desc ,
         rcta.trx_number                                                                     transaction_number ,
         to_char(rcta.trx_date ,'DD-MON-RR')                                                 transaction_date,
         hp.party_number                                                                      party_Number,
         hp.party_name                                                                       PartyName ,
         rcta.trx_number                                                                     bill_no,
         to_char(rcta.trx_date ,'DD-MON-RR')                                                bill_date,
         gjl.description                                               remarks,
         nvl(gjl.accounted_dr, 0)                                                     amount_dr ,
         nvl(gjl.accounted_cr, 0)                                                    amount_cr ,
         nvl(gjl.accounted_dr, 0) - nvl(gjl.accounted_cr, 0)                      net_amount 
FROM   ra_customer_trx_all rcta ,
       hz_cust_accounts hcaa ,
       hz_cust_acct_sites_all hcasa ,
       hz_cust_site_uses_all hcsua ,
       hz_parties hp ,
       hz_party_sites hps ,
       xla_transaction_entities xte ,
       xla_events xev ,
       xla_ae_headers xah ,
       xla_ae_lines xal ,
       gl_import_references gir ,
       gl_je_headers gjh ,
       gl_je_lines gjl ,
       gl_code_combinations gcc ,
       gl_je_categories gjc ,
       gl_je_sources gjs ,
       gl_ledgers gl ,
       xle_entity_profiles xe ,
       hr_operating_units hou
WHERE  1 = 1
AND    gjl.code_combination_id = gcc.code_combination_id
AND    gl.ledger_id = gjl.ledger_id
AND    rcta.bill_to_customer_id = hcaa.cust_account_id
AND    hcaa.party_id = hp.party_id
AND    hcaa.cust_account_id = hcasa.cust_account_id
AND    hcasa.cust_acct_site_id = hcsua.cust_acct_site_id
AND    hcsua.site_use_id = rcta.bill_to_site_use_id
AND    hcasa.party_site_id = hps.party_site_id
AND    rcta.customer_trx_id = xte.source_id_int_1
AND    xte.application_id = 222
AND    xev.entity_id = xte.entity_id
AND    xah.entity_id = xte.entity_id
AND    xah.event_id = xev.event_id
AND    xah.ae_header_id = xal.ae_header_id
AND    xal.gl_sl_link_id = gir.gl_sl_link_id
AND    gir.gl_sl_link_table = xal.gl_sl_link_table
AND    gjl.je_header_id = gjh1y.je_header_id
AND    gjh.je_header_id = gir.je_header_id
AND    gjl.je_header_id = gir.je_header_id
AND    gir.je_line_num = gjl.je_line_num
AND    gjh.je_category = gjc.je_category_name
AND    gjh.je_source = gjs.je_source_name
AND GJC.je_category_name    = 'Sales Invoices'
AND    gjs.je_source_name = 'Receivables'
AND    (
              gjl.accounted_cr <> 0
       OR     gjl.accounted_dr <> 0)
AND    (
              xal.accounted_cr <> 0
       OR     xal.accounted_dr <> 0)
AND    gjh.status = 'P'
AND    gjh.legal_entity_id = xe.legal_entity_id
AND    rcta.org_id = hou.organization_id
       -- AND RCTA.trx_number     = '211000010000090'
         ---------------------- PARAMETERS ---------------------
AND 	(gl.NAME  IN (:p_led)
         OR       COALESCE(:p_led,NULL) IS NULL)		 
AND 	(gcc.segment1  IN (:p_bu)
         OR       COALESCE(:p_bu,NULL) IS NULL)	 
AND ( xe.name  IN (:P_LEGAL_ENTITY)
         OR       COALESCE(:P_LEGAL_ENTITY,NULL) IS NULL)
AND      (
                  gcc.segment3 IN (:p_account)
         OR       COALESCE(:p_account,NULL) IS NULL)
AND      (
                  gcc.segment6 IN (:p_division)
         OR       COALESCE(:p_division,NULL) IS NULL)
AND      (
                  gjl.effective_date >= :p_from_date
         OR       :p_from_date IS NULL )
AND      (
                  gjl.effective_date <= :p_to_date
         OR       :p_to_date IS NULL )	 
		 ) aa
group by LEDGER_ID,ledger_name,
legal_entity,
account_description ,
bu_code ,
bu_nmae ,
account ,
division ,
je_category_desc ,
transaction_number ,
transaction_date,
party_number,
party_name ,
bill_no,
bill_date,
remarks		 ) bb 
) ac
		 
 LOV
 ----
 1)LE 
   select name from xle_entity_profiles xe
   
 2)BU --
 select distinct gcc.segment1 from gl_code_combinations 	gcc  
 3)Ledger 
  SELECT DISTINCT GL.NAME LEDNAME
  FROM HR_OPERATING_UNITS OU, 
         GL_LEDGERS GL
 WHERE 1=1 
       AND OU.SET_OF_BOOKS_ID = GL.SHORT_NAME 
       AND OU.ORGANIZATION_ID IN (SELECT DISTINCT ORG_ID FROM FUN_USER_ROLE_DATA_ASGNMNTS 
	   WHERE USER_GUID = FND_GLOBAL.USER_GUID)
       AND TRUNC (OU.DATE_TO) >= TRUNC (SYSDATE) 
      ORDER BY 1
	  
---- 
--Inventory Transaction Report 
--
select distinct
IOP.ORGANIZATION_CODE "Site Code",
hauft.NAME "Site Name",
itrh.request_number "SO NO",
To_char(itrl.CREATION_DATE, 'DD-MM-YYYY') "SO Date",
psn.PICK_SLIP_NUMBER "ST NO",
To_char(psn.PICK_SLIP_DUE_DATE, 'DD-MM-YYYY') "ST DATE",
item_b.ITEM_NUMBER "Ser Ord Item Code",
item_tl.DESCRIPTION "Ser Ord Item Name",
itrl.QUANTITY "Ser Ord Qty",
itrl.QUANTITY_DELIVERED "Stock Transfer Qty",
abs(IMT.TRANSACTION_QUANTITY) "Item Util Qty",
imt.ATTRIBUTE6 "Proj_code",
iil.DESCRIPTION "Engr Name",
itrl.FROM_SUBINVENTORY_CODE "Source Subinventory",
--IOQD.SUBINVENTORY_CODE LOCATION_CODE,
item_b.PRIMARY_UOM_CODE "UOM",


(select 
IMT1.TRANSACTION_QUANTITY
--sum(abs(IMT1.TRANSACTION_QUANTITY))

from
inv_transaction_types_tl ittt1,
INV_TRANSACTION_TYPES_B ittb1,
INV_ITEM_LOCATIONS iil1,
INV_MATERIAL_TXNS IMT1

where
rownum=1
and itrh.request_number=imt1.attribute7(+)
and itrl.TO_LOCATOR_ID=iil1.INVENTORY_LOCATION_ID(+)
and iil1.INVENTORY_LOCATION_ID=imt1.locator_id
and imt1.TRANSACTION_TYPE_ID = ittb1.TRANSACTION_TYPE_ID(+)
and ittb1.TRANSACTION_TYPE_ID = ittt1.TRANSACTION_TYPE_ID(+)
and ittt1.TRANSACTION_TYPE_NAME(+) ='Subinventory Transfer'
AND IMT1.SUBINVENTORY_CODE='Fresh' --
AND IMT1.TRANSFER_SUBINVENTORY='Engineers'
AND IMT1.TRANSACTION_QUANTITY>0
) Stock_Return_From_Eng,

(case when itrl.QUANTITY=itrl.QUANTITY_DELIVERED and itrl.QUANTITY=abs(IMT.TRANSACTION_QUANTITY) then 'Complete' else 'Pending' end) "SERV ORD Status",

(case when itrl.QUANTITY_DELIVERED<itrl.QUANTITY then 'Pending' 
      when itrl.QUANTITY_DELIVERED is null then 'Pending' else 'Complete' end) "Transfer Status",

(case when abs(IMT.TRANSACTION_QUANTITY)<itrl.QUANTITY_DELIVERED then 'Pending' 
      when IMT.TRANSACTION_QUANTITY is null then 'Pending' else 'Complete' end) "IU Status",
	  
imt.CREATED_BY "Request Raised By"



-- itrl.QUANTITY_DELIVERED "Pick Confirm Quantity",
-- itrl.QUANTITY "MMR QUANTITY",
-- IMT.TRANSACTION_QUANTITY "Miscellaneous quantity",


--itrl.CREATION_DATE "Ser Req Date",
-- itrh.ATTRIBUTE1 "Ser Order Number",
-- To_char(itrh.ATTRIBUTE_DATE1, 'DD-MM-YYYY') "Ser Order Date",

-- itrh.ATTRIBUTE2 "Remarks",
-- itrl.line_number "line",

--itrl.DATE_REQUIRED "movement request date2",



-- imt.ATTRIBUTE1 "customercode",
-- imt.ATTRIBUTE2 "customernameAdress",
-- imt.ATTRIBUTE3 "io number",
-- imt.ATTRIBUTE4 "consumption type",
-- imt.ATTRIBUTE5 "mqReferenceNo",

-- imt.ATTRIBUTE7 "mmr",
--itrl.QUANTITY_DETAILED,
--itrl.Primary_quantity "mmr quantity 2",

--(select distinct imt1.PICK_SLIP_NUMBER from INV_MATERIAL_TXNS imt1 where  IMT1.TRANSACTION_SOURCE_ID=itrh.request_number and rownum=1) "Pick No", 
--(select distinct imt1.PICK_SLIP_DATE from INV_MATERIAL_TXNS imt1 where  IMT1.TRANSACTION_SOURCE_ID=itrh.request_number and rownum=1) "Pick Date1",
-- IMT.TRANSACTION_ID "misc issue id",
-- To_char(imt.TRANSACTION_DATE, 'DD-MM-YYYY') "Miscellaneous issue date",


--SUM(IOQD.TRANSACTION_QUANTITY) ONHAND_QUANTITY,
-- ittt.TRANSACTION_TYPE_NAME,
-- itrl.inventory_item_id

from 

INV_PICK_SLIP_LINES_V pslv,
inv_pick_slip_numbers psn,
--,HR_locations hrr
inv_txn_request_headers itrh,
INV_TXN_REQUEST_LINES itrl,
INV_ORG_PARAMETERS IOP,
HR_ORGANIZATION_UNITS_F_TL hauft,
--INV_ONHAND_QUANTITIES_DETAIL IOQD,
INV_ITEM_LOCATIONS iil,
EGP_SYSTEM_ITEMS_B item_b,
EGP_SYSTEM_ITEMS_TL item_tl,
INV_TRANSACTION_TYPES_B ittb,
inv_transaction_types_tl ittt,
INV_MATERIAL_TXNS IMT

where 
itrh.request_number=imt.attribute7(+)
--itrh.request_number=nvl(TO_CHAR(imt.attribute7),itrh.request_number)
and imt.TRANSACTION_TYPE_ID = ittb.TRANSACTION_TYPE_ID(+)
--and ittb.TRANSACTION_TYPE_ID=itrh.TRANSACTION_TYPE_ID
and ittb.TRANSACTION_TYPE_ID = ittt.TRANSACTION_TYPE_ID(+)
--and ittt.TRANSACTION_TYPE_NAME IN('Miscellaneous issue')
and ittt.TRANSACTION_TYPE_NAME(+) ='Miscellaneous issue'
and itrl.HEADER_ID=itrh.HEADER_ID
and itrl.inventory_item_id=imt.inventory_item_id(+)
and itrl.TO_LOCATOR_ID=iil.INVENTORY_LOCATION_ID(+)


--and imtp.TRANSACTION_SOURCE_ID = itrl.header_id
and pslv.request_number(+) = itrh.request_number
and pslv.pick_slip_number = psn.pick_slip_number(+)
and pslv.TRX_SOURCE_LINE_ID(+) = itrl.LINE_ID
--and itrh.request_number in ('256001','255006')
and IOP.ORGANIZATION_ID = hauft.ORGANIZATION_ID
and IOP.ORGANIZATION_ID = itrh.ORGANIZATION_ID
AND item_b.INVENTORY_ITEM_ID=itrl.INVENTORY_ITEM_ID
AND item_b.ORGANIZATION_ID=itrl.ORGANIZATION_ID
AND item_tl.INVENTORY_ITEM_ID=item_b.INVENTORY_ITEM_ID
AND item_tl.ORGANIZATION_ID=item_b.ORGANIZATION_ID
AND item_tl.LANGUAGE = 'US'
and hauft.LANGUAGE ='US'
--and itrh.request_number='469003'
-- and IOP.ORGANIZATION_CODE='C0201_CRP'
-- and IOQD.ORGANIZATION_ID=item_b.ORGANIZATION_ID
-- and IOQD.INVENTORY_ITEM_ID=item_b.INVENTORY_ITEM_ID
-- and itrl.TO_LOCATOR_ID=IOQD.locator_id

--and IMT.TRANSACTION_QUANTITY is not null


-- and (itln.lot_number in (:lot) OR 'All' in(:lot||'All'))
-- and (iut.serial_number in (:serial) OR 'All' in(:serial||'All'))
-- and (itrh.ATTRIBUTE1 in (:Service_order_no) OR 'All' in(:Service_order_no||'All'))
-- and (itrh.ATTRIBUTE_DATE1 in (:Service_order_date) OR 'All' in(:Service_order_date||'All'))
and (itrh.request_number in (:SO_NO) OR 'All' in(:SO_NO||'All'))
and (IOP.ORGANIZATION_CODE  in (:Site_Code) OR 'All' in(:Site_Code||'All'))
and (iil.DESCRIPTION  in (:Engr_name) OR 'All' in(:Engr_name||'All'))
and (item_b.item_number in (:item_number) OR 'All' in(:item_number||'All'))
and (itrl.FROM_SUBINVENTORY_CODE in (:Source_Subinv) OR 'All' in(:Source_Subinv||'All'))
and ( psn.PICK_SLIP_NUMBER in (:p_pick_slip) or least(:p_pick_slip) is null)
and (trunc(itrl.CREATION_DATE)>=(:p_so_from_date) or least(:p_so_from_date) is null)
and (trunc(itrl.CREATION_DATE)<=(:p_so_to_date) or least(:p_so_to_date) is null)
and (trunc(psn.PICK_SLIP_DUE_DATE)>=(:p_st_from_date) or least(:p_st_from_date) is null)
and (trunc(psn.PICK_SLIP_DUE_DATE)<=(:p_st_to_date) or least(:p_st_to_date) is null)
and (trunc(imt.transaction_date)>=(:p_iu_from_date) or least(:p_iu_from_date) is null)
and (trunc(imt.transaction_date)<=(:p_iu_to_date) or least(:p_iu_to_date) is null)
and ( imt.transaction_id in (:p_trx_id) or least(:p_trx_id) is null)

-- and (imt.CREATED_BY in (:MIS_USER) OR 'All' in(:MIS_USER||'All'))
-- and (imt.ATTRIBUTE1 in (:customer_code) OR 'All' in(:customer_code||'All'))
-- and (item_tl.DESCRIPTION in (:item_name) OR 'All' in(:item_name||'All'))
-- and (hauft.NAME in (:org_name) OR 'All' in(:org_name||'All'))



--Aging Report

select
item_b.item_number "item code",
item_b.primary_uom_code uom,
item_tl.description "item description",
iop.organization_code "site code",
abc.ORGANIZATION_CODE "Source Site Code",
hauft.name "site desc",
IOQD.lot_number,
hl.town_or_city,
sysdate,
eitm.CATEGORY_NAME "item_group",
abc.unit_price "Per Unit Rate",
to_char(abc.TRANSACTION_DATE,'DD/MM/YYYY') "Last Receipt Date",
abc.receipt_num,
abc.TRANSACTION_TYPE_NAME transaction_type,
abc.SHIPPED_DATE,
abc.header_number "Transfer Order Number",
(TRUNC((SYSDATE-abc.TRANSACTION_DATE+2))) Non_moving_days,

(case when (TRUNC(SYSDATE-abc.TRANSACTION_DATE)<=90) then (sum(IOQD.TRANSACTION_QUANTITY)) else null end) quan_0_90days,
(case when (TRUNC(SYSDATE-abc.TRANSACTION_DATE)<=90) then (SUM(IOQD.TRANSACTION_QUANTITY)*abc.unit_price) else null end) value_0_90days,

(case when (TRUNC(SYSDATE-abc.TRANSACTION_DATE)<=150) and (TRUNC(SYSDATE-abc.TRANSACTION_DATE)>=91) then (sum(IOQD.TRANSACTION_QUANTITY)) else null end) quan_91_150days,
(case when (TRUNC(SYSDATE-abc.TRANSACTION_DATE)<=150) and (TRUNC(SYSDATE-abc.TRANSACTION_DATE)>91) then (SUM(IOQD.TRANSACTION_QUANTITY)*abc.unit_price) else null end) value_91_150days,

(case when (TRUNC(SYSDATE-abc.TRANSACTION_DATE)<=180) and (TRUNC(SYSDATE-abc.TRANSACTION_DATE)>=151) then (sum(IOQD.TRANSACTION_QUANTITY)) else null end) quan_151_180days,
(case when (TRUNC(SYSDATE-abc.TRANSACTION_DATE)<=180) and (TRUNC(SYSDATE-abc.TRANSACTION_DATE)>=151) then (SUM(IOQD.TRANSACTION_QUANTITY)*abc.unit_price) else null end) value_151_180days,

(case when (TRUNC(SYSDATE-abc.TRANSACTION_DATE)<=365) and (TRUNC(SYSDATE-abc.TRANSACTION_DATE)>=181) then (sum(IOQD.TRANSACTION_QUANTITY)) else null end) quan_181_365days,
(case when (TRUNC(SYSDATE-abc.TRANSACTION_DATE)<=365) and (TRUNC(SYSDATE-abc.TRANSACTION_DATE)>=181) then (SUM(IOQD.TRANSACTION_QUANTITY)*abc.unit_price) else null end) value_181_365days,

(case when (TRUNC(SYSDATE-abc.TRANSACTION_DATE)>365) then (sum(IOQD.TRANSACTION_QUANTITY)) else null end) quan_365moredays,
(case when (TRUNC(SYSDATE-abc.TRANSACTION_DATE)>365) then (SUM(IOQD.TRANSACTION_QUANTITY)*abc.unit_price) else null end) value_365moredays,

SUM(IOQD.TRANSACTION_QUANTITY)*abc.unit_price "Stock_value",
IOQD.subinventory_code Storage_Location,
SUM(IOQD.TRANSACTION_QUANTITY) total_quantity



from
egp_system_items_b item_b,
egp_system_items_tl item_tl,
inv_org_parameters iop,
hr_organization_units_f_tl hauft,
hr_locations hl,
hr_all_organization_units haou,
INV_ONHAND_QUANTITIES_DETAIL IOQD,

(select distinct
itln.lot_number,
itln.inventory_item_id,
itln.organization_id,
rsh.receipt_num,
itol.unit_price,
rt.TRANSACTION_DATE,
rsh.SHIPPED_DATE,
--to_char(rsh.EXPECTED_RECEIPT_DATE,'DD/MM/YYYY') receipt_date,
item_b.item_number,
iln.ORIGINATION_DATE,
ittt.TRANSACTION_TYPE_NAME,
itol.header_id,
iops.ORGANIZATION_CODE,
itoh.header_number



from
inv_transaction_lot_numbers itln,
inv_material_txns imt,
INV_TRANSACTION_TYPES_B ittb,
inv_transaction_types_tl ittt,
rcv_transactions rt,
rcv_shipment_headers rsh,
inv_transfer_order_lines itol,
inv_org_parameters iops,
inv_transfer_order_headers itoh,
egp_system_items_b item_b,
INV_LOT_NUMBERS iln



where 1=1
and imt.TRANSACTION_ID = itln.TRANSACTION_ID
and itln.ORGANIZATION_ID = imt.ORGANIZATION_ID
and itln.INVENTORY_ITEM_ID=imt.INVENTORY_ITEM_ID
and ittb.TRANSACTION_ACTION_ID=imt.TRANSACTION_ACTION_ID
and ittb.TRANSACTION_SOURCE_TYPE_ID=imt.TRANSACTION_SOURCE_TYPE_ID
and ittb.TRANSACTION_TYPE_ID=ittt.TRANSACTION_TYPE_ID
and iln.ORGANIZATION_ID=itln.ORGANIZATION_ID
and iln.INVENTORY_ITEM_ID=itln.INVENTORY_ITEM_ID
and iln.lot_number=itln.lot_number
and rt.transaction_id=imt.rcv_transaction_id
and rsh.shipment_header_id=rt.shipment_header_id
and item_b.inventory_item_id = imt.inventory_item_id
and item_b.organization_id = imt.organization_id
and imt.transaction_source_id(+) = itol.header_id
and itol.header_id=itoh.header_id
and itol.inventory_item_id = item_b.inventory_item_id
and itol.source_organization_id=iops.organization_id
and ittt.TRANSACTION_TYPE_NAME in ('Transfer Order Interorganization Receipt','Transfer Order Intraorganization Receipt',
'Transfer Order Return Receipt',
'Transfer Order Return Transfer Receipt','Misc Receipt')

) abc,

(
select 

ev.category_set_id , 
ev.CATEGORY_SET_NAME, 
eic.category_id,
eic.inventory_item_id, 
eic.organization_id,
ectl.CATEGORY_NAME


from 
EGP_ITEM_CATEGORIES eic,

egp_categories_tl ectl,
EGP_CATEGORY_SETS_VL ev
where

ectl.CATEGORY_ID = eic.CATEGORY_ID
and ev.category_set_id= eic.category_set_id
and ev.category_set_name = 'Procurement Catalog'
)eitm

where 1=1

and abc.lot_number(+) = ioqd.lot_number
and abc.inventory_item_id(+) = ioqd.inventory_item_id
--and abc.organization_id(+) = ioqd.organization_id
and item_tl.inventory_item_id=item_b.inventory_item_id
and item_tl.organization_id=item_b.organization_id
and item_tl.language = 'US'
and eitm.organization_id = item_b.organization_id
and eitm.INVENTORY_ITEM_ID=item_b.INVENTORY_ITEM_ID
and iop.organization_id = item_b.organization_id
and iop.organization_id = hauft.organization_id
and iop.organization_id = haou.organization_id
and hl.location_id=haou.location_id
and IOQD.ORGANIZATION_ID=item_b.ORGANIZATION_ID
and IOQD.INVENTORY_ITEM_ID=item_b.INVENTORY_ITEM_ID
and abc.unit_price is not null
--and abc.header_id='14003'

--and PHA.segment1='BBGJ20162'
--and IOQD.lot_number='ALOT100000089001'
--and IOQD.SUBINVENTORY_CODE='Fresh'
--and item_b.item_number='2000000094'
-- and (IOQD.lot_number in (:lot) OR 'All' in(:lot||'All'))
-- and (item_b.item_number in (:item_number) OR 'All' in(:item_number||'All'))
-- and (iop.ORGANIZATION_CODE in (:Site_CODE) OR 'All' in(:Site_CODE||'All'))
-- and (IOQD.subinventory_code in (:Subinventory) OR 'All' in(:Subinventory||'All'))



group by
item_b.item_number,
item_b.primary_uom_code,
item_tl.description,
iop.organization_code,
hauft.name,
abc.unit_price,
sysdate,
hl.town_or_city,
IOQD.subinventory_code,
abc.TRANSACTION_DATE,
abc.ORGANIZATION_CODE,
abc.receipt_num,
abc.TRANSACTION_TYPE_NAME,
abc.SHIPPED_DATE,
abc.header_number,
eitm.CATEGORY_NAME,
IOQD.lot_number

order by
eitm.CATEGORY_NAME, item_b.item_number  asc

--


GRN Dump Report 
---------------

After Column "Quantity Received" 
Return Quantity 
Return Date(Concatenate , as single value ) GRN No,siteCode combination will be unique 

Add Optional parameter on Receipt Date with Date Range 

From Receipt Date 
To Receipt Date

SELECT hou.organization_code                                 "Site Code",
       hrou.name                                             "Site Description",
       rsh.attribute2                                        "Gate Entry No",
       To_char(rsh.attribute_timestamp2, 'DD-MM-YYYY')       "Rec Date",
       rsh.receipt_num                                       "GRN No",
       To_char(rsh.expected_receipt_date, 'DD-MM-YYYY')      "GRN Date",
       poz.vendor_name                                       "Supplier Name",
       pha.segment1                                          "PO order number",
       To_char(pha.creation_date, 'DD-MM-YYYY')              "PO Order Date",
       ittt.transaction_type_name                            "Tran Ser",
       aia.invoice_num                                       "Bill No",
       To_char(aia.invoice_date, 'DD-MM-YYYY')               "Bill Date",
       eitm.hsn                                              "HSN code",
       eitm.item_number                                      "Item Code",
       eitm.description                                      "Item Name",
       rsh.attribute_number1                                 "No of Cartons",
       itln.lot_number                                       "Lot Number",
       aila.quantity_invoiced                                "Quantity aia",
       rsl.quantity_received                                 "Qty Received*",
       pla.uom_code                                          "UOM",
       aila.unit_price                                       "Rate",
       aia.invoice_amount                                    "Amount",
       rsl.quantity_received * costing_details.freight       "Freight",
       rsl.quantity_received * costing_details.insurance     "Insurance",
       rsl.quantity_received * costing_details.miscellaneous "Other Charges",
       rsl.quantity_received * costing_details.boe           "BOE",
       aila.unit_price * rsl.quantity_received               "Taxable Amount",
       igst.igst_rate                                        "PO IGST Percent",
       ( aila.unit_price * rsl.quantity_received * igst.igst_rate ) / 100
                                                             "IGST Tax Amount",
       aila.unit_price * rsl.quantity_received + (
       aila.unit_price * rsl.quantity_received * igst.igst_rate ) / 100
       "IGST Taxable Amount",
       cgst.cgst_rate                                        "PO CGST Percent",
       ( aila.unit_price * rsl.quantity_received * cgst.cgst_rate ) / 100
                                                             "CGST Tax Amount",
       aila.unit_price * rsl.quantity_received + (
       aila.unit_price * rsl.quantity_received * cgst.cgst_rate ) / 100
       "CGST Taxable Amount",
       sgst.sgst_rate                                        "PO SGST Percent",
       ( aila.unit_price * rsl.quantity_received * sgst.sgst_rate ) / 100
                                                             "SGST Tax Amount",
       aila.unit_price * rsl.quantity_received + (
       aila.unit_price * rsl.quantity_received * sgst.sgst_rate ) / 100
       "SGST Taxable Amount",
       rsl.quantity_received * Nvl(costing_details.freight, 0) +
       rsl.quantity_received * Nvl(costing_details.insurance, 0) +
       rsl.quantity_received * Nvl(costing_details.miscellaneous, 0) +
       rsl.quantity_received * Nvl(costing_details.boe, 0) +
       Nvl(aila.unit_price, 0) * Nvl(rsl.quantity_received, 0) + (
       Nvl(aila.unit_price, 0) *
       rsl.quantity_received * Nvl(cgst.cgst_rate, 0) ) /
                                       100 +
       (
       Nvl(aila.unit_price, 0) * rsl.quantity_received *
       Nvl(sgst.sgst_rate, 0) ) /
                                             100 +
       (
       Nvl(aila.unit_price, 0) * rsl.quantity_received *
       Nvl(igst.igst_rate, 0) ) /
                                                   100       "Total Amount",
       rsh.created_by                                        "GRN Creator",
       rsh.attribute6                                        "Remarks",
       sub_inv_q.subinventory,
	   ret_rct.return_qty Return_Quantity ,
	   ret_rct.Return_Date
FROM   rcv_shipment_lines rsl,
       rcv_shipment_headers rsh,
       rcv_transactions rt,--346003 344001
       poz_suppliers_v poz,
       po_headers_all pha,
       ap_invoice_lines_all aila,
       ap_invoices_all aia,
       inv_material_txns imt,
       inv_transaction_types_tl ittt,
       inv_transaction_lot_numbers itln,
       po_lines_all pla,
       po_line_locations_all plla,
       po_distributions_all pda,
       ap_invoice_distributions_all aid,
       hr_organization_units hrou,
       inv_org_parameters hou,
	   (select SHIPMENT_line_ID,
               SUM(QUANTITY) return_qty,
               LISTAGG(distinct  to_char(transaction_date,'DD/MM/YYYY'), ' / ') WITHIN GROUP (order by SHIPMENT_line_ID) return_date
           from RCV_TRANSACTIONS
          where Transaction_type='RETURN TO VENDOR'
        group by SHIPMENT_line_ID) ret_rct,
       (SELECT DISTINCT RT1.subinventory,
                        RT1.shipment_line_id
        FROM   rcv_transactions RT1
        WHERE  RT1.transaction_type = 'DELIVER') sub_inv_q,
       (SELECT ecv.category_code,
               ev.category_set_id,
               ev.category_set_name,
               eic.category_id,
               eic.inventory_item_id,
               eic.organization_id,
               Substr(ecv.category_code, 3, Length(ecv.category_code)) hsn,
               eipv.primary_uom_code,
               esib.item_number,
               item_tl.description
        FROM   egp_item_categories eic,
               egp_categories_vl ecv,
               egp_category_sets_vl ev,
               egp_item_primary_uoms_v eipv,
               egp_system_items_b esib,
               egp_system_items_tl item_tl
        WHERE  eic.inventory_item_id = esib.inventory_item_id
               AND eic.organization_id = esib.organization_id
               AND item_tl.inventory_item_id = esib.inventory_item_id
               AND item_tl.organization_id = esib.organization_id
               AND eic.category_id = ecv.category_id
               AND ev.category_set_id = eic.category_set_id
               AND ev.category_set_name = 'Procurement Catalog'
               AND eipv.inventory_item_id = eic.inventory_item_id) eitm,
       (SELECT SUM(CASE
                     WHEN cct.name = 'Freight' THEN ( Round(
                     To_number(clct.est_unit_amt_in_charge_curr), 2) )
                     ELSE NULL
                   END)
               Freight,
               SUM(CASE
                     WHEN cct.name = 'Insurance' THEN ( Round(
                     To_number(clct.est_unit_amt_in_charge_curr), 2) )
                     ELSE NULL
                   END)
               Insurance,
               SUM(CASE
                     WHEN cct.name = 'Miscellaneous' THEN ( Round(
                     To_number(clct.est_unit_amt_in_charge_curr), 2) )
                     ELSE NULL
                   END)
               Miscellaneous
               ,
               SUM(CASE
                     WHEN cct.name = 'BOE' THEN (
                     Round(To_number(clct.est_unit_amt_in_charge_curr), 2) )
                     ELSE NULL
                   END)                                                   BOE,
               SUM(CASE
                     WHEN cct.name = 'Custom Duty' THEN ( Round(
                     To_number(clct.est_unit_amt_in_charge_curr), 2) )
                     ELSE NULL
                   END)
               Custom_Duty,
               crt.parent_transaction_id,
               crt.rcv_parent_transaction_id,
               --crt.CMR_RCV_TRANSACTION_ID,
               crt.po_line_location_id,
               crt.po_distribution_id,
               crt.rcv_po_distribution_id,
               crt.receipt_number,
               crt.inventory_item_id,
               crt.root_receive_txn_id,
               --crt.ROOT_DELIVER_TXN_ID,
               crt.cmr_root_receive_txn_id,
               crt.cmr_po_distribution_id,
               crt.cmr_po_line_location_id,
               crt.shipment_line_number,
               crt.receipt_line_number,
               esib.item_number,
               item_tl.description,
               SUM(crt.primary_quantity),
               SUM(crt.transaction_quantity),
               SUM(crt.assessable_value),
               SUM(Round(To_number(clct.est_unit_amt_in_charge_curr), 2)) charge
        FROM   cmr_rcv_transactions crt,
               cml_landed_cost_charges clct,
               cml_charges_tl cct,
               egp_system_items_b esib,
               egp_system_items_tl item_tl
        WHERE  1 = 1
               AND clct.cmr_rcv_transaction_id = crt.cmr_root_receive_txn_id
               AND clct.inventory_item_id = crt.inventory_item_id
               --and crt.po_line_location_id=300000013948224
               --and crt.ROOT_RECEIVE_TXN_ID=237003
               AND cct.LANGUAGE = 'US'
               AND clct.charge_id = cct.charge_id
               AND esib.inventory_item_id = crt.inventory_item_id
               AND esib.organization_id = clct.inventory_org_id
               AND item_tl.inventory_item_id = esib.inventory_item_id
               AND item_tl.organization_id = esib.organization_id
        GROUP  BY crt.parent_transaction_id,
                  crt.rcv_parent_transaction_id,
                  --crt.CMR_RCV_TRANSACTION_ID,
                  crt.po_line_location_id,
                  crt.po_distribution_id,
                  crt.rcv_po_distribution_id,
                  crt.receipt_number,
                  crt.inventory_item_id,
                  crt.root_receive_txn_id,
                  --crt.ROOT_DELIVER_TXN_ID,
                  crt.cmr_root_receive_txn_id,
                  crt.cmr_po_distribution_id,
                  crt.cmr_po_line_location_id,
                  crt.shipment_line_number,
                  crt.receipt_line_number,
                  crt.inventory_item_id,
                  esib.item_number,
                  item_tl.description)costing_details,
       (SELECT DISTINCT trx_id,
                        trx_line_id,
                        trx_line_number,
                        Abs (unrounded_tax_amt)     igst_amount,
                        tax_rate                    igst_rate,
                        Abs (unrounded_taxable_amt) igst_taxable,
                        taxable_amt
        FROM   zx_lines
        WHERE  entity_code = 'PURCHASE_ORDER'
               AND tax LIKE '%IN IGST%'
               AND application_id = 201
               AND Nvl(cancel_flag, 'N') = 'N') igst,
       (SELECT DISTINCT trx_id,
                        trx_line_id,
                        trx_line_number,
                        Abs (unrounded_tax_amt)     cgst_amount,
                        tax_rate                    cgst_rate,
                        Abs (unrounded_taxable_amt) cgst_taxable,
                        taxable_amt
        FROM   zx_lines
        WHERE  entity_code = 'PURCHASE_ORDER'
               AND tax LIKE '%IN CGST%'
               AND application_id = 201
               AND Nvl(cancel_flag, 'N') = 'N') cgst,
       (SELECT DISTINCT trx_id,
                        trx_line_id,
                        trx_line_number,
                        Abs (unrounded_tax_amt)     sgst_amount,
                        tax_rate                    sgst_rate,
                        Abs (unrounded_taxable_amt) sgst_taxable,
                        taxable_amt
        FROM   zx_lines
        WHERE  entity_code = 'PURCHASE_ORDER'
               AND tax LIKE '%IN SGST%'
               AND application_id = 201
               AND Nvl(cancel_flag, 'N') = 'N') sgst
WHERE  1 = 1
       AND rsl.SHIPMENT_line_ID= ret_rct.SHIPMENT_line_ID(+)
       AND hou.organization_id = eitm.organization_id
       AND eitm.organization_id = hrou.organization_id
       AND rt.shipment_line_id = rsl.shipment_line_id
       AND rsl.shipment_header_id = rsh.shipment_header_id
       AND poz.vendor_id = pha.vendor_id
       AND pha.po_header_id = rsl.po_header_id
       AND pla.po_line_id = rsl.po_line_id
       AND pha.po_header_id = pda.po_header_id
       AND aid.po_distribution_id(+) = pda.po_distribution_id
       AND aia.invoice_id(+) = aid.invoice_id
       AND aid.line_type_lookup_code(+) IN ( 'ITEM', 'ACCRUAL' )
       AND aila.line_type_lookup_code(+) IN ( 'ITEM', 'ACCRUAL' )
       --and
       --aia.invoice_id = aila.invoice_id
       AND aid.invoice_id(+) = aila.invoice_id
       AND aid.invoice_line_number(+) = aila.line_number
       AND rt.transaction_id = aila.rcv_transaction_id(+)
       AND imt.rcv_transaction_id(+) = rt.transaction_id
       AND imt.transaction_type_id = ittt.transaction_type_id(+)
       AND pha.po_header_id = pla.po_header_id
       AND plla.po_line_id = pla.po_line_id
       AND eitm.inventory_item_id(+) = pla.item_id
       AND eitm.organization_id(+) = plla.ship_to_organization_id
       AND pla.po_line_id = pda.po_line_id
       AND itln.transaction_id(+) = imt.transaction_id
       AND costing_details.po_line_location_id(+) = plla.line_location_id
       AND costing_details.root_receive_txn_id(+) = rt.transaction_id
       -- and
       -- eitm.inventory_item_id = costing_details.inventory_item_id
       AND pha.po_header_id = sgst.trx_id(+)
       AND plla.line_location_id = sgst.trx_line_id(+)
       AND pha.po_header_id = cgst.trx_id(+)
       AND plla.line_location_id = cgst.trx_line_id(+)
       AND pha.po_header_id = igst.trx_id(+)
       AND plla.line_location_id = igst.trx_line_id(+)
       AND ittt.LANGUAGE(+) = 'US'
       AND transaction_type = 'RECEIVE'
       AND sub_inv_q.shipment_line_id(+) = rsl.shipment_line_id
       --and sub_inv_q.transaction_id (+)=rt.transaction_id
       AND ( ( hou.organization_code IN ( :SITE_CODE ) )
              OR ( Least(:SITE_CODE) IS NULL ) )
       AND ( ( hrou.name IN ( :SITE_DESCRIPTION ) )
              OR ( Least(:SITE_DESCRIPTION) IS NULL ) )
       AND ( ( rsh.attribute2 IN ( :GATE_ENTRY_NO ) )
              OR ( Least(:GATE_ENTRY_NO) IS NULL ) )
       AND ( ( rsh.receipt_num IN ( :GRN_NO ) )
              OR ( Least(:GRN_NO) IS NULL ) )
       AND ( ( poz.vendor_name IN ( :SUPPLIER_NAME ) )
              OR ( Least(:SUPPLIER_NAME) IS NULL ) )
       AND ( ( pha.segment1 IN ( :PO_NUM ) )
              OR ( Least(:PO_NUM) IS NULL ) )
       AND ( ( aia.invoice_num IN ( :SUPPLIER_INV_NUM ) )
              OR ( Least(:SUPPLIER_INV_NUM) IS NULL ) )
       AND ( ( eitm.item_number IN ( :ITEM_CODE ) )
              OR ( Least(:ITEM_CODE) IS NULL ) )
       AND ( ( eitm.description IN ( :ITEM_NAME ) )
              OR ( Least(:ITEM_NAME) IS NULL ) )
       AND ( ( itln.lot_number IN ( :LOT_NUM ) )
              OR ( Least(:LOT_NUM) IS NULL ) )
       AND ( ( To_char(rsh.expected_receipt_date, 'DD/MM/YYYY') ) IN (
             :RECEIPT_DATE )
              OR Coalesce(:RECEIPT_DATE, 'XXXX') = 'XXXX' )
       --Receipt Date Range 
       AND      (
                  rsh.creation_date >= :p_from_rct_date
         OR       :p_from_rct_date IS NULL )
       AND      (
                  rsh.creation_date <= :p_to_rct_date
         OR       :p_to_rct_date IS NULL )	   
--pha.segment1='124200135'
--pha.segment1='BBGJ20180'
ORDER  BY receipt_num

--------------

KCB Regeipt Report 
--------------------

SELECT FABUV.bu_name                                   REQUISITIONING_BU,
       PRHA.requisition_number                         REQUISITION,
       PRHA.description                                PR_Description,
       PRLA.line_number                                PR_LINE,
       eitm.item_number,
       eitm.description                                ITEM_DESCRIPTION,
       poz.vendor_name                                 SUPPLIER,
       To_char(PLLA.need_by_date, 'MM/DD/RR')          NEED_BY_DATE,
       pla.quantity                                    QUANTITY,
       eitm.primary_uom_code                           UOM_NAME,
       pha.currency_code                               CURRENCY,
       RSL.quantity_received                           RECEIVED,
       ( PDA.quantity_ordered - RSL.quantity_received )available_qty,
       PDA.quantity_billed                             INVOICED,
       RSL.quantity_returned                           RETURNED,
       ( RSL.quantity_received - Abs(RT.quantity) )    CORRECTED,
       PHA.segment1                                    PURCHASE_ORDER,
       RSH.receipt_num                                 RECEIPT_NUMBER,
       PLA.line_num                                    PURCHASE_ORDER_LINE,
       PLLA.shipment_num                               PURCHASE_ORDER_SCHEDULE,
       ( GCC.segment1
         ||'.'
         ||GCC.segment2
         ||'.'
         ||GCC.segment3
         ||'.'
         ||GCC.segment4
         ||'.'
         ||GCC.segment5
         ||'.'
         ||GCC.segment6
         ||'.'
         ||GCC.segment7
         ||'.'
         ||GCC.segment8
         ||'.'
         ||GCC.segment9
         ||'.'
         ||GCC.segment10 )                             Charge_Account
FROM   por_requisition_headers_all PRHA,
       fun_all_business_units_v FABUV,
       por_requisition_lines_all PRLA,
       por_req_distributions_all PRDA,
       rcv_shipment_lines rsl,
       rcv_shipment_headers rsh,
       rcv_transactions rt,--346003 344001
       poz_suppliers_v poz,
       po_headers_all pha,
       inv_material_txns imt,
       inv_transaction_types_tl ittt,
       po_lines_all pla,
       po_line_locations_all plla,
       po_distributions_all pda,
       hr_organization_units hrou,
       inv_org_parameters hou,
       gl_code_combinations GCC,
       (SELECT ecv.category_code,
               ev.category_set_id,
               ev.category_set_name,
               eic.category_id,
               eic.inventory_item_id,
               eic.organization_id,
               eipv.primary_uom_code,
               esib.item_number,
               item_tl.description
        FROM   egp_item_categories eic,
               egp_categories_vl ecv,
               egp_category_sets_vl ev,
               egp_item_primary_uoms_v eipv,
               egp_system_items_b esib,
               egp_system_items_tl item_tl
        WHERE  eic.inventory_item_id = esib.inventory_item_id
               AND eic.organization_id = esib.organization_id
               AND item_tl.inventory_item_id = esib.inventory_item_id
               AND item_tl.organization_id = esib.organization_id
               AND eic.category_id = ecv.category_id
               AND ev.category_set_id = eic.category_set_id
               AND ev.category_set_name = 'KCB PURCHASING CATALOG'
               AND eipv.inventory_item_id = eic.inventory_item_id
               AND item_tl.LANGUAGE = Userenv('LANG')) eitm
WHERE  1 = 1
       --Req
       AND PRHA.req_bu_id = FABUV.bu_id
       AND PRHA.requisition_header_id = PRLA.requisition_header_id
       AND PRDA.requisition_line_id = PRLA.requisition_line_id
       AND PDA.req_distribution_id = PRDA.distribution_id
       --
       AND GCC.code_combination_id = PDA.code_combination_id
       AND hou.organization_id = eitm.organization_id
       AND eitm.organization_id = hrou.organization_id
       AND rt.shipment_line_id = rsl.shipment_line_id
       AND rsl.shipment_header_id = rsh.shipment_header_id
       AND poz.vendor_id = pha.vendor_id
       AND pha.po_header_id = rsl.po_header_id
       AND pla.po_line_id = rsl.po_line_id
       AND pha.po_header_id = pda.po_header_id
       AND imt.rcv_transaction_id(+) = rt.transaction_id
       AND imt.transaction_type_id = ittt.transaction_type_id(+)
       AND pha.po_header_id = pla.po_header_id
       AND plla.po_line_id = pla.po_line_id
       AND eitm.inventory_item_id(+) = pla.item_id
       AND eitm.organization_id(+) = plla.ship_to_organization_id
       AND pla.po_line_id = pda.po_line_id
       AND ittt.LANGUAGE(+) = 'US'
       AND rt.transaction_type = 'RECEIVE'
AND 	(COALESCE(NULL,:P_PO_NUMBER) IS NULL
	 OR 
		 PHA.SEGMENT1 IN (:P_PO_NUMBER))
		 
AND 	(COALESCE(NULL,:P_RECEIPT_NUMBER) IS NULL
	 OR 	
		 RSH.RECEIPT_NUM IN (:P_RECEIPT_NUMBER))

AND 	(COALESCE(NULL,:P_RECEIPT_DATE) IS NULL
	 OR 
		 PLLA.NEED_BY_DATE IN (:P_RECEIPT_DATE))
ORDER  BY PHA.segment1,receipt_num 

--- AR Commision Agent Report
--------------
select hca.cust_account_id,
	
	 sum((trx_dist.amount
	+nvl(sgst.sgst_amount,0)
	+nvl(cgst.cgst_amount,0)
	+nvl(igst.igst_amount,0)
	-- Add Frieght
	)) line_amount,
	gcc.segment2 revenue_account,
	hca.account_number customer_account_number,
	hp.party_name customer_name,
    rcta.trx_number,
	rcta.trx_date,
	ar_rct.amount_applied,
	ar_rct.receipt_date
	
FROM
	ra_customer_trx_all rcta,
	ra_cust_trx_line_gl_dist_all trx_dist,
	hz_cust_accounts hca,
	hz_parties hp,
	(SELECT 
		DISTINCT trx_id,
		trx_line_id,
		trx_line_number,
		ABS (unrounded_tax_amt) igst_amount,
		tax_rate igst_rate,
		ABS (unrounded_taxable_amt) igst_taxable
	FROM zx_lines
	WHERE entity_code = 'TRANSACTIONS'
	AND tax LIKE '%IGST%'
	AND application_id = 222) igst,
	(SELECT 
		DISTINCT trx_id,
		trx_line_id,
		trx_line_number,
		ABS (unrounded_tax_amt) cgst_amount,
		tax_rate cgst_rate,
		ABS (unrounded_taxable_amt) cgst_taxable
	FROM zx_lines
	WHERE entity_code = 'TRANSACTIONS'
	AND tax LIKE '%CGST%'
	AND application_id = 222) cgst,
	(SELECT 
		DISTINCT trx_id,
		trx_line_id,
		trx_line_number,
		ABS (unrounded_tax_amt) sgst_amount,
		tax_rate sgst_rate,
		ABS (unrounded_taxable_amt) sgst_taxable
	FROM zx_lines
	WHERE entity_code = 'TRANSACTIONS'
	AND tax LIKE '%SGST%'
	AND application_id = 222) sgst,
		gl_code_combinations gcc,
	xla_transaction_entities xte,
	xla_ae_headers xah,
	xla_ae_lines xal,
	xla_distribution_links xdl,
	gl_import_references gir,
	gl_je_headers gjh,
	gl_je_lines gjl,
	 (select  araa.applied_customer_trx_id,sum(araa.amount_applied) amount_applied,
       LISTAGG(distinct to_char(araa.APPLY_DATE,'DD/MM/YYYY'), ' / ') WITHIN GROUP (ORDER BY to_char(araa.APPLY_DATE,'DD/MM/YYYY')) receipt_date
	  from 
      ar_cash_receipts_all acra,
      ar_receivable_applications_all araa
	  where 1=1 
	  --and araa.applied_customer_trx_id = rcta.customer_trx_id
      AND acra.cash_receipt_id = araa.cash_receipt_id
	  --and araa.applied_customer_trx_id=81066
	  group by araa.applied_customer_trx_id
	   ) ar_rct
WHERE 1=1
 AND ar_rct.applied_customer_trx_id = rcta.customer_trx_id
AND rcta.customer_trx_id = trx_dist.customer_trx_id	
AND rcta.bill_TO_CUSTOMER_ID = hca.cust_account_id
AND rcta.sold_to_party_id=hp.party_id
AND account_class='REV'
--Tax
AND trx_dist.customer_trx_id= igst.trx_id(+)
AND trx_dist.customer_trx_line_id = igst.trx_line_id(+)
AND trx_dist.customer_trx_id = sgst.trx_id(+)
AND trx_dist.customer_trx_line_id = sgst.trx_line_id(+)
AND trx_dist.customer_trx_id = cgst.trx_id(+)
AND trx_dist.customer_trx_line_id = cgst.trx_line_id(+)
AND	(hca.account_name IN (:p_cust)
    OR 
	COALESCE(:p_cust,NULL) IS NULL)
AND	TRUNC(rcta.trx_date) BETWEEN NVL(:p_inv_from,TRUNC(rcta.trx_date)) AND NVL(:p_inv_to,TRUNC(rcta.trx_date))
----
AND xte.source_id_int_1 = rcta.customer_trx_id
AND gcc.code_combination_id = gjl.code_combination_id
AND xte.entity_code = 'TRANSACTIONS'
AND xte.application_id = 222
AND xah.entity_id = xte.entity_id
AND xal.ae_header_id = xah.ae_header_id
AND xal.accounting_class_code = 'REVENUE'
AND xdl.ae_header_id = xah.ae_header_id
AND xdl.ae_line_num = xal.ae_line_num
AND xdl.source_distribution_id_num_1 = trx_dist.cust_trx_line_gl_dist_id
AND xdl.application_id = 222
AND gir.gl_sl_link_id = xal.gl_sl_link_id
AND gir.gl_sl_link_table='XLAJEL'
AND gjh.je_header_id = gir.je_header_id
AND gjl.je_header_id = gjh.je_header_id
AND gjl.je_line_num = gir.je_line_num
GROUP BY hca.cust_account_id,
	gcc.segment2 ,
	hca.account_number ,
	hp.party_name,
	rcta.trx_number,
	rcta.trx_date,
	ar_rct.amount_applied,
	ar_rct.receipt_date

--	IRN QR Report GTPL
-----------------------MAIN QUERY-------------------------------
SELECT 
DISTINCT * 
FROM
(
	WITH TAX_DETAILS AS (SELECT
					RCTLA_TAX.CUSTOMER_TRX_ID
					,RCTLA_TAX.LINK_TO_CUST_TRX_LINE_ID
					,ZL.TAX_RATE
					,ZL.TAX_RATE_TYPE
					,ZL.TAXABLE_AMT
					,ZL.TAX_AMT
					,ZL.TAX_REGIME_CODE
					,ZL.TAX
					,ZL.TAX_RATE_CODE
					,ZL.TAX_JURISDICTION_CODE
					,ZL.TAX_STATUS_CODE
					,ZL.TAX_CURRENCY_CODE
					,ZL.TRX_CURRENCY_CODE
					,ZL.TRX_LINE_NUMBER
					,ZL.TRX_LEVEL_TYPE
					,ZL.TRX_LINE_QUANTITY
					,ZL.TAX_LINE_NUMBER
					,ZL.TAX_LINE_ID				
				FROM 
					ZX_LINES ZL,
					RA_CUSTOMER_TRX_LINES_ALL RCTLA_TAX
				WHERE
					RCTLA_TAX.CUSTOMER_TRX_ID = ZL.TRX_ID
					AND RCTLA_TAX.TAX_LINE_ID = ZL.TAX_LINE_ID
					AND RCTLA_TAX.LINE_TYPE='TAX'
					-- AND ZL.ENTITY_CODE='TRANSACTION'
					 AND ZL.APPLICATION_ID=222
				)
		,GEORAPHY AS (SELECT
					DISTINCT GEOGRAPHY_ELEMENT1 COUNTRY		--COUNTRY
					,GEOGRAPHY_ELEMENT1_CODE COUNTRY_CODE
					,GEOGRAPHY_ELEMENT2 STATE			--STATE
					,GEOGRAPHY_ELEMENT2_CODE STATE_CODE
					-- ,GEOGRAPHY_ELEMENT3	CITY			--CITY
					-- ,GEOGRAPHY_ELEMENT3_CODE CITY_CODE
					-- ,GEOGRAPHY_ELEMENT4	POSTAL_CODE			--POSTAL CODE
					-- ,GEOGRAPHY_ELEMENT4_CODE POSTAL_CODE_CODE
				FROM
					HZ_GEOGRAPHIES
				WHERE
					GEOGRAPHY_USE='MASTER_REF'
					AND GEOGRAPHY_TYPE='STATE'			--('COUNTRY','COUNTY','ECONOMIC REGIONS','STATE','CITY','POSTAL_CODE')
					AND GEOGRAPHY_ELEMENT1_CODE='IN'
					AND SYSDATE BETWEEN START_DATE AND END_DATE
		)
		,TAX_REG_DETAILS AS (SELECT
						ZPTP.PARTY_ID
						,ZR_CUS_REG.REGISTRATION_NUMBER
					FROM
						ZX_PARTY_TAX_PROFILE ZPTP
						,ZX_REGISTRATIONS ZR_CUS_REG
					WHERE
						ZPTP.PARTY_TAX_PROFILE_ID = ZR_CUS_REG.PARTY_TAX_PROFILE_ID(+)
						AND (1=(CASE WHEN (SYSDATE >= ZR_CUS_REG.EFFECTIVE_FROM AND SYSDATE <= ZR_CUS_REG.EFFECTIVE_TO AND UPPER(ZR_CUS_REG.REGISTRATION_STATUS_CODE )='REGISTERED' ) THEN 1
							WHEN  (SYSDATE >= ZR_CUS_REG.EFFECTIVE_FROM AND ZR_CUS_REG.EFFECTIVE_TO IS NULL AND UPPER(ZR_CUS_REG.REGISTRATION_STATUS_CODE )='REGISTERED' ) THEN 1
							ELSE 2		--EXCLUDED END DATED
						            END )
					))
	SELECT
		----------------------Seller Details--------------------------------------------------------------
		'24AAFPB7029M017' --ZR.REGISTRATION_NUMBER --19/03 Sarang HArdcoded for testing
		SELLER_GSTIN
		,XEP.NAME SELLER_LEGAL_NAME						--NAME MUST BE AS PER PAN CARD
		,XEP.NAME SELLER_TRADE_NAME						--OPTIONAL
		,BU_ADDRESS.ADDRESS1 SELLER_ADDR1
		,BU_ADDRESS.ADDRESS2 SELLER_ADDR2					--OPTIONAL
		,BU_ADDRESS.CITY SELLER_LOCATION
		,BU_ADDRESS.POSTAL_CODE  --19/03 Sarang HArdcoded for testing
		SELLER_PIN_CODE
		,(CASE 
			WHEN BU_GEORAPHY.COUNTRY_CODE=BU_ADDRESS.COUNTRY THEN BU_GEORAPHY.STATE_CODE
			WHEN BU_GEORAPHY.COUNTRY_CODE!=BU_ADDRESS.COUNTRY THEN '96' 	--OTHER COUNTRY
			ELSE '97'		--OTHER TERRITORY
		END)  SELLER_STATE			--REFER G4G-10  --19/03 Sarang HArdcoded for testing
		,NULL SELLER_PHONE_NUMBER						--OPTIONAL
		,NULL SELLER_EMAIL_ID							--OPTIONAL
		------------------------Supply type---------------------------------------------------------------
		,'B2B' SUPPLY_TYPE_CODE		--REFER G4G-2 19/03 Sarang..Commented for OIC Testing
		-- (CASE
			-- WHEN 'Reverse Charge' THEN 'Y'
			-- WHEN 'Regular Charge' THEN 'N'
		-- END)	REVERSE_CHARGE    --REFER G4G-3
		,NULL REVERSE_CHARGE
		,NULL E_COMM_GSTIN
		,NULL IGST_ON_INTRA							--OPTIONAL
		------------------------Document Details-------------------------------------------------------
		,DECODE(RCTTA.TYPE,'DM','DBN','CM','CRN','INV','INV') DOCUMENT_TYPE	--REFER G4G-5	
		,RCTA.TRX_NUMBER DOCUMENT_NUMBER		
		,TO_CHAR(RCTA.TRX_DATE,'DD/MM/YYYY')  DOCUMENT_DATE
		-------------------------Buyer Details-----------------------------------------------------------
		-- ,(CASE 
			-- WHEN SITE_TAX.REGISTRATION_NUMBER IS NULL AND PROFILE_TAX.REGISTRATION_NUMBER IS NOT NULL THEN PROFILE_TAX.REGISTRATION_NUMBER
			-- WHEN PROFILE_TAX.REGISTRATION_NUMBER IS NULL AND SITE_TAX.REGISTRATION_NUMBER IS NOT NULL THEN SITE_TAX.REGISTRATION_NUMBER
			-- ELSE SITE_TAX.REGISTRATION_NUMBER
		-- END) 
		,NVL(SITE_TAX.REGISTRATION_NUMBER,PROFILE_TAX.REGISTRATION_NUMBER) 
		BUYER_GSTIN
		,HP_BILL.PARTY_NAME BUYER_LEGAL_NAME
		,HP_BILL.PARTY_NAME BUYER_TRADE_NAME					--OPTIONAL
		,(CASE 
			WHEN BILL_GEORAPHY.COUNTRY_CODE=HP_BILL.COUNTRY THEN BILL_GEORAPHY.STATE_CODE
			WHEN BILL_GEORAPHY.COUNTRY_CODE!=HP_BILL.COUNTRY THEN '96' 	--OTHER COUNTRY
			ELSE '97'		--OTHER TERRITORY
		END) BUYER_POS			--REFER G4G-10	EARLIER BILL_TO CITY
		,HP_BILL.ADDRESS1 BUYER_ADDR1
		,HP_BILL.ADDRESS2 BUYER_ADDR2					--OPTIONAL
		,HP_BILL.CITY BUYER_LOCATION
		,HP_BILL.POSTAL_CODE 	BUYER_PIN_CODE
		,(CASE 
			WHEN BILL_GEORAPHY.COUNTRY_CODE=HP_BILL.COUNTRY THEN BILL_GEORAPHY.STATE_CODE
			WHEN BILL_GEORAPHY.COUNTRY_CODE!=HP_BILL.COUNTRY THEN '96' 	--OTHER COUNTRY
			ELSE '97'		--OTHER TERRITORY
		END)  BUYER_STATE		--REFER G4G-10	EARLIER BILL_TO STATE
		,NULL BUYER_PHONE_NUMBER						--OPTIONAL
		,NULL BUYER_EMAIL_ID							--OPTIONAL
		------------------------Dispatch Details--------------------------------------------------------
		,XEP.NAME DISPATCH_NAME
		,(CASE
			WHEN WND.SHIP_FROM_LOCATION_ID IS NULL THEN BU_ADDRESS.ADDRESS1
			WHEN WND.SHIP_FROM_LOCATION_ID IS NOT NULL THEN WND.SHIP_FROM_ADDRESS1
		END)  DISPATCH_ADDR1
		,(CASE
			WHEN WND.SHIP_FROM_LOCATION_ID IS  NULL THEN BU_ADDRESS.ADDRESS2
			WHEN WND.SHIP_FROM_LOCATION_ID IS NOT NULL THEN WND.SHIP_FROM_ADDRESS2
		END) DISPATCH_ADDR2					--OPTIONAL
		,(CASE
			WHEN WND.SHIP_FROM_LOCATION_ID IS  NULL THEN BU_ADDRESS.CITY
			WHEN WND.SHIP_FROM_LOCATION_ID IS NOT NULL THEN WND.SHIP_FROM_CITY
		END) DISPATCH_LOCATION
		,(CASE
			WHEN WND.SHIP_FROM_LOCATION_ID IS  NULL THEN BU_ADDRESS.POSTAL_CODE
			WHEN WND.SHIP_FROM_LOCATION_ID IS NOT NULL THEN WND.SHIP_FROM_POSTAL_CODE
		END) DISPATCH_PIN_CODE
		,(CASE 
			WHEN BU_GEORAPHY.COUNTRY_CODE=BU_ADDRESS.COUNTRY AND WND.SHIP_FROM_LOCATION_ID IS NULL THEN BU_GEORAPHY.STATE_CODE
			WHEN BU_GEORAPHY.COUNTRY_CODE!=BU_ADDRESS.COUNTRY AND WND.SHIP_FROM_LOCATION_ID IS NULL THEN '96' 	--OTHER COUNTRY
			
			WHEN BU_GEORAPHY.COUNTRY_CODE=WND.SHIP_FROM_COUNTRY AND WND.SHIP_FROM_LOCATION_ID IS  NOT NULL THEN SHIP_FROM_GEORAPHY.STATE_CODE
			WHEN BU_GEORAPHY.COUNTRY_CODE!=WND.SHIP_FROM_COUNTRY AND WND.SHIP_FROM_LOCATION_ID IS NOT NULL THEN '96' 	--OTHER COUNTRY
			
			ELSE '97'		--OTHER TERRITORY
		END)  DISPATCH_STATE			--REFER G4G-10 EARLIER STATE
		------------------------Shipping Details---------------------------------------------------------
		,NVL(SITE_TAX.REGISTRATION_NUMBER,PROFILE_TAX.REGISTRATION_NUMBER)  
		SHIPPING_GSTIN			--OPTIONAL
		,HP_SHIP.PARTY_NAME SHIPPING_LEGAL_NAME
		,HP_SHIP.PARTY_NAME SHIPPING_TRADE_NAME					--OPTIONAL
		,(CASE
			WHEN WND.SHIP_TO_LOCATION_ID IS NULL THEN HP_SHIP.ADDRESS1
			WHEN WND.SHIP_TO_LOCATION_ID IS NOT NULL THEN WND.SHIP_TO_ADDRESS1
		END) SHIPPING_ADDR1
		,(CASE
			WHEN WND.SHIP_TO_LOCATION_ID IS NULL THEN HP_SHIP.ADDRESS2
			WHEN WND.SHIP_TO_LOCATION_ID IS NOT NULL THEN WND.SHIP_TO_ADDRESS2
		END) SHIPPING_ADDR2					--OPTIONAL
		,(CASE
			WHEN WND.SHIP_TO_LOCATION_ID IS NULL THEN HP_SHIP.CITY
			WHEN WND.SHIP_TO_LOCATION_ID IS NOT NULL THEN WND.SHIP_TO_CITY
		END) SHIPPING_LOCATION
		,(CASE
			WHEN WND.SHIP_TO_LOCATION_ID IS NULL THEN HP_SHIP.POSTAL_CODE
			WHEN WND.SHIP_TO_LOCATION_ID IS NOT NULL THEN WND.SHIP_TO_POSTAL_CODE
		END) SHIPPING_PIN_CODE  
		/*,(CASE 
			WHEN SHIP_GEORAPHY.COUNTRY_CODE=HP_SHIP.COUNTRY THEN SHIP_GEORAPHY.STATE_CODE
			WHEN SHIP_GEORAPHY.COUNTRY_CODE!=HP_SHIP.COUNTRY THEN '96' 	--OTHER COUNTRY
			ELSE '97'		--OTHER TERRITORY
		END) */
		,(CASE 
			WHEN SHIP_GEORAPHY.COUNTRY_CODE=HP_SHIP.COUNTRY AND WND.SHIP_TO_LOCATION_ID IS NULL THEN SHIP_GEORAPHY.STATE_CODE
			WHEN SHIP_GEORAPHY.COUNTRY_CODE!=HP_SHIP.COUNTRY AND WND.SHIP_TO_LOCATION_ID IS NULL THEN '96' 	--OTHER COUNTRY
			
			WHEN SHIP_TO_GEORAPHY.COUNTRY_CODE=WND.SHIP_TO_COUNTRY AND WND.SHIP_TO_LOCATION_ID IS  NOT NULL THEN SHIP_TO_GEORAPHY.STATE_CODE
			WHEN SHIP_TO_GEORAPHY.COUNTRY_CODE!=WND.SHIP_TO_COUNTRY AND WND.SHIP_TO_LOCATION_ID IS NOT NULL THEN '96' 	--OTHER COUNTRY
			
			ELSE '97'		--OTHER TERRITORY
		END)  SHIPPING_STATE			--REFER G4G-10 EARLIER SHIP_TO STATE
		------------------------Product Details---------------------------------------------------------
		--,1 ESIB.ITEM_NUMBER  19/03 Sarang..Commented for OIC Testing
		, ROW_NUMBER() OVER(PARTITION BY RCTA.CUSTOMER_TRX_ID ORDER BY RCTA.CUSTOMER_TRX_ID ASC) SI_NO			--UPDATED ON 21MAR22 AS PER SARANG'S REQUIREMENT, SEQUENCE NO FOR  TRX_LINE AND RESET FOR EXH TRX
		-- ,(SELECT
			-- DISTINCT TRIM(ESIT.DESCRIPTION)
		-- FROM 
			-- EGP_SYSTEM_ITEMS_TL ESIT
		-- WHERE
			-- ESIT.INVENTORY_ITEM_ID=RCTLA_LINE.INVENTORY_ITEM_ID
			-- AND ESIT.LANGUAGE=USERENV('LANG')
		-- )
		,NULL PRODUCT_DESCRIPTION					--OPTIONAL
		,(CASE
			WHEN RCTLA_LINE.PRODUCT_TYPE='SERVICES' THEN 'Y'
			WHEN RCTLA_LINE.PRODUCT_TYPE='GOODS' THEN 'N'
		END
		) IS_SERVICE	--PRODUCT_TYPE ON TRX LINE
		-- ,SUBSTR(ECB.CATEGORY_CODE,3) 
		,'995412' --SUBSTR(ECB.CATEGORY_CODE,3,LENGTH(ECB.CATEGORY_CODE))
		HSN_CODE --22/03 Sarang..HArdcoded for OIC Testing
		,NULL BAR_CODE							--OPTIONAL
		,abs(NVL2(RCTLA_LINE.QUANTITY_INVOICED,RCTLA_LINE.QUANTITY_INVOICED,RCTLA_LINE.QUANTITY_CREDITED)) QUANTITY
		,NULL FREE_QUANTITY							--OPTIONAL
		,RCTLA_LINE.UOM_CODE UNIT
		,abs(RCTLA_LINE.UNIT_SELLING_PRICE) UNIT_PRICE --23/03 sarang. Added Abs for CM
		,abs(RCTLA_LINE.EXTENDED_AMOUNT) GROSS_AMOUNT --23/03 sarang. Added Abs for CM
		,NULL DISCOUNT
		,NULL PRE_TAX_VALUE
		,abs(RCTLA_LINE.EXTENDED_AMOUNT) TAXABLE_VALUE --23/03 sarang. Added Abs for CM
		,(CASE
				WHEN CGST_TAX_DETAILS.TAX_RATE IS NOT NULL THEN CGST_TAX_DETAILS.TAX_RATE_CODE
				WHEN SGST_TAX_DETAILS.TAX_RATE IS NOT NULL THEN SGST_TAX_DETAILS.TAX_RATE_CODE
				WHEN IGST_TAX_DETAILS.TAX_RATE IS NOT NULL THEN IGST_TAX_DETAILS.TAX_RATE_CODE
		END) GST_RATE
		,abs(SGST_TAX_DETAILS.TAX_AMT) SGST_AMT --23/03 sarang. Added Abs for CM
		,abs(CGST_TAX_DETAILS.TAX_AMT) CGST_AMT --23/03 sarang. Added Abs for CM
		,abs(IGST_TAX_DETAILS.TAX_AMT)  IGST_AMT --23/03 sarang. Added Abs for CM
		,abs(CESS_TAX_DETAILS.TAX_RATE) CESS_RATE --23/03 sarang. Added Abs for CM
		,abs(CESS_TAX_DETAILS.TAX_AMT) CESS_AMT_ADVAL --23/03 sarang. Added Abs for CM
		,NULL CESS_NON_ADVAL_AMT						--OPTIONAL
		,NULL STATE_CESS_RATE							--OPTIONAL
		,NULL STATE_CESS_AMT_ADVAL						--OPTIONAL
		,NULL STATE_CESS_NON_ADVAL_AMT					--OPTIONAL
		,0 OTHER_CHARGES
		,abs(RCTLA_LINE.EXTENDED_AMOUNT
		+nvl(SGST_TAX_DETAILS.TAX_AMT,0)+nvl(CGST_TAX_DETAILS.TAX_AMT,0)+nvl(IGST_TAX_DETAILS.TAX_AMT,0)
		+nvl(CESS_TAX_DETAILS.TAX_AMT,0))  --19/03 Sarang Added tax amounts --23/03 sarang. Added Abs for CM
		 ITEM_TOTAL
		,NULL ORDER_LINE_REFERENCE						--OPTIONAL
		,NULL ORGIN_COUNTRY							--OPTIONAL
		,NULL UNIQUE_ITEM_SI_NO						--OPTIONAL
		---------------------Batch details------------------------------------------------------
		,NULL BATCH_NAME							--OPTIONAL
		,NULL BATCH_EXPIRY_DT							--OPTIONAL
		,NULL WARRANTY_DT							--OPTIONAL
		---------------------Attribute Details-------------------------------------------------
		,NULL ATTRIBUTE_DETAILS_OF_THE_ITEMS					--OPTIONAL
		,NULL ATTRIBUTE_VALUE_OF_THE_ITEM					--OPTIONAL
		---------------------Value Details----------------------------------------------------
		,abs(RCTLA_LINE.EXTENDED_AMOUNT) TOTAL_TAXABLE_VALUE --23/03 sarang. Added Abs for CM
		,abs(SGST_TAX_DETAILS.TAX_AMT) SGST_AMT_V --23/03 sarang. Added Abs for CM
		,abs(CGST_TAX_DETAILS.TAX_AMT) CGST_AMT_V  --23/03 sarang. Added Abs for CM
		,abs(IGST_TAX_DETAILS.TAX_AMT) IGST_AMT_V --23/03 sarang. Added Abs for CM
		,abs(CESS_TAX_DETAILS.TAX_AMT) CESS_AMT_V				--OPTIONAL --23/03 sarang. Added Abs for CM
		,NULL STATE_CESS_AMT							--OPTIONAL
		,NULL DISCOUNT1							--OPTIONAL
		,NULL OTHER_CHARGES1							--OPTIONAL
		,NULL ROUND_OFF
		,abs(RCTLA_LINE.EXTENDED_AMOUNT 
		+nvl(SGST_TAX_DETAILS.TAX_AMT,0)+nvl(CGST_TAX_DETAILS.TAX_AMT,0)+nvl(IGST_TAX_DETAILS.TAX_AMT,0)
		+nvl(CESS_TAX_DETAILS.TAX_AMT,0))  --19/03 Sarang Added tax amounts --23/03 sarang. Added Abs for CM
		TOTAL_INVOICE_VALUE
		,NULL TOTAL_INVOICE_VALUE_IN_ADDITIONAL_CURR			--OPTIONAL
		--------------------Export Details---------------------------------------------------
		,NULL SHIPPING_BILL_NO							--OPTIONAL
		,NULL SHIPPING_BILL_DT							--OPTIONAL
		,NULL PORT								--OPTIONAL
		,NULL SUPPLIER_REFUND							--OPTIONAL
		,NULL FOREIGN_CURRENCY						--OPTIONAL
		,NULL COUNTRY_CODE							--OPTIONAL
		,NULL EXPORT_DUTY_AMOUNT						--OPTIONAL
		-------------------E-way-bill Details APPLICABLE ONLY IF SHIPPING IS INTER STATE AND TRX_VALUE>50,000------------------------
		,WND.ATTRIBUTE2 TRANS_ID
		,WND.ATTRIBUTE1 TRANS_NAME							--OPTIONAL
		,WND.ATTRIBUTE5 TRANS_MODE
		,WND.ATTRIBUTE6 DISTANCE
		,WND.ATTRIBUTE7 TRANS_DOC_NO
		,TO_CHAR(WND.ATTRIBUTE_DATE1,'DD-MM-YYYY') TRANS_DOC_DATE
		,WND.ATTRIBUTE4 VEHICLE_NO
		,WND.ATTRIBUTE8 VEHICLE_TYPE
		
		
		----------------------Payment Details-------------------------------------
		,NULL PAYEE_NAME							--OPTIONAL
		,NULL ACCOUNT_NUMBER						--OPTIONAL
		,NULL MODE_								--OPTIONAL
		,NULL BRANCH_IFSC_CODE						--OPTIONAL
		,NULL TERM_OF_PAYMNT							--OPTIONAL
		,NULL PAYMENT_INSTRUCTION						--OPTIONAL
		,NULL CREDIT_TRANSFER							--OPTIONAL
		,NULL DIRECT_DEBIT							--OPTIONAL
		,NULL CREDIT_DAYS							--OPTIONAL
		,NULL PAID_AMOUNT							--OPTIONAL
		,NULL DUE_AMOUNT							--OPTIONAL
		---------------------Reference Details----------------------------
		,NULL REMARKS								--OPTIONAL
		,NULL INVOICE_PERIOD_START_DATE					--OPTIONAL
		,NULL INVOICE_PERIOD_END_DATE					--OPTIONAL
		---------------------Pre Doc Details- ONLY FOR CM---------
		,NULL ORIGINAL_INVOICE							--OPTIONAL
		,NULL PRECEDING_INVOICE_DATE						--OPTIONAL
		,NULL OTHER_REFERENCE						--OPTIONAL
		---------------------Contract Details--------------------------------
		,NULL RECEIPT_ADVICE_NO						--OPTIONAL
		,NULL DATE_OF_RECEIPT_ADVICE						--OPTIONAL
		,NULL LOT_BATCH_REFERENCE_NO					--OPTIONAL
		,NULL CONTRACT_REFERENCE_NUMBER					--OPTIONAL
		,NULL ANY_OTHER_REFERENCE						--OPTIONAL
		,NULL PROJECT_REFERENCE_NUMBER					--OPTIONAL
		,NULL VENDOR_PO_REFERENCE_NUMBER					--OPTIONAL
		,NULL VENDORS_PO_REFERENCE_DATE					--OPTIONAL
		--------------------Additional Details--------------------------------
		,NULL SUPPORTING_DOCUMENT_URL					--OPTIONAL
		,NULL SUPPORTING_DOCUMENT_IN_BASE64_FORMAT			--OPTIONAL
		,NULL ANY_ADDITIONAL_INFORMATION					--OPTIONAL
		---------------------Custom Details-----------------------------------
		,NULL CUSTOM								--OPTIONAL
		,NULL CUSTOM2								--OPTIONAL
		,NULL CUSTOM3								--OPTIONAL
		,NULL CUSTOM4								--OPTIONAL
		,NULL CUSTOM5								--OPTIONAL
		,NULL CUSTOM6								--OPTIONAL
		,NULL CUSTOM7								--OPTIONAL
		,NULL CUSTOM8								--OPTIONAL
		,NULL CUSTOM9								--OPTIONAL
		,NULL CUSTOM10								--OPTIONAL
		---------------------ADDITIONAL COLUMNS REQUIRED IN API---------------------------------------
		 -- ,'REG' TRANSACTION_MODE
		,(CASE
			WHEN 
				(((CASE
					WHEN WND.SHIP_FROM_LOCATION_ID IS NULL THEN BU_ADDRESS.LOCATION_ID
					WHEN WND.SHIP_FROM_LOCATION_ID IS NOT NULL THEN WND.SHIP_FROM_LOCATION_ID
				END)=BU_ADDRESS.LOCATION_ID
				)		
				AND
				((CASE
					WHEN WND.SHIP_TO_LOCATION_ID IS NULL THEN HP_SHIP.ADDRESS1||HP_SHIP.ADDRESS2||HP_SHIP.CITY||HP_SHIP.STATE||HP_SHIP.POSTAL_CODE||HP_SHIP.COUNTRY
					WHEN WND.SHIP_TO_LOCATION_ID IS NOT NULL THEN WND.SHIP_TO_CONCATINATED_ADDRESS
				END)=UPPER(HP_SHIP.ADDRESS1||HP_SHIP.ADDRESS2||HP_SHIP.CITY||HP_SHIP.STATE||HP_SHIP.POSTAL_CODE||HP_SHIP.COUNTRY))		
				)
			THEN 
				'REG'
			
			WHEN 
				((CASE
					WHEN WND.SHIP_FROM_LOCATION_ID IS NULL THEN BU_ADDRESS.LOCATION_ID
					WHEN WND.SHIP_FROM_LOCATION_ID IS NOT NULL THEN WND.SHIP_FROM_LOCATION_ID
				END)!=BU_ADDRESS.LOCATION_ID
				)
			THEN
				'DIS'
			WHEN
				((CASE
					WHEN WND.SHIP_TO_LOCATION_ID IS NULL THEN HP_SHIP.ADDRESS1||HP_SHIP.ADDRESS2||HP_SHIP.CITY||HP_SHIP.STATE||HP_SHIP.POSTAL_CODE||HP_SHIP.COUNTRY
					WHEN WND.SHIP_TO_LOCATION_ID IS NOT NULL THEN WND.SHIP_TO_CONCATINATED_ADDRESS
				END)!=UPPER(BU_ADDRESS.BU_CONCATINATED_ADDRESS))		
				
			THEN
				'SHP'
			WHEN
				(((CASE
					WHEN WND.SHIP_FROM_LOCATION_ID IS NULL THEN BU_ADDRESS.LOCATION_ID
					WHEN WND.SHIP_FROM_LOCATION_ID IS NOT NULL THEN WND.SHIP_FROM_LOCATION_ID
				END)!=BU_ADDRESS.LOCATION_ID
				)		
				AND
				(UPPER(CASE
					WHEN WND.SHIP_TO_LOCATION_ID IS NULL THEN HP_SHIP.ADDRESS1||HP_SHIP.ADDRESS2||HP_SHIP.CITY||HP_SHIP.STATE||HP_SHIP.POSTAL_CODE||HP_SHIP.COUNTRY
					WHEN WND.SHIP_TO_LOCATION_ID IS NOT NULL THEN WND.SHIP_TO_CONCATINATED_ADDRESS
				END)!=UPPER(HP_SHIP.ADDRESS1||HP_SHIP.ADDRESS2||HP_SHIP.CITY||HP_SHIP.STATE||HP_SHIP.POSTAL_CODE||HP_SHIP.COUNTRY))		--COMPARE SHIPPING AND BUYER
				)
			THEN	
				'CMB'				
		END
		) TRANSACTION_MODE
		
		,'1' EWAY_SUB_SUPPLY_TYPE
		,CGST_TAX_DETAILS.TAX_RATE CGST_TAX_RATE
		,SGST_TAX_DETAILS.TAX_RATE SGST_TAX_RATE
		,IGST_TAX_DETAILS.TAX_RATE IGST_TAX_RATE
		,RCTLA_LINE.TAX_INVOICE_NUMBER TAX_INVOICE_NUMBER
		,TO_CHAR(RCTLA_LINE.TAX_INVOICE_DATE,'DD/MM/YYYY') TAX_INVOICE_DATE
		,E_WAY.E_WAY_BILL_NO			-->ADDED
		,E_WAY.E_WAY_BILL_DATE			-->ADDED
		
	FROM
		HR_ALL_ORGANIZATION_UNITS HAO,
		-- ,HR_ORG_UNIT_CLASSIFICATIONS_F HAC
		-- ,INV_ORG_PARAMETERS IOP
		RA_CUSTOMER_TRX_ALL RCTA
		,RA_CUSTOMER_TRX_LINES_ALL RCTLA_LINE
		,RA_CUST_TRX_LINE_GL_DIST_ALL RCTL_DIST
		,RA_CUST_TRX_TYPES_ALL RCTTA
		-- ,HZ_LOCATIONS HL
		,HZ_CUST_ACCOUNTS HCA_BILL
		,HZ_CUST_SITE_USES_ALL HCSUA		--ADDED ON ON 21322 FOR SITE LEVEL TAX DETAILS
		,HZ_CUST_ACCT_SITES_ALL HCASA		--ADDED ON ON 21322 FOR SITE LEVEL TAX DETAILS
		,HZ_PARTIES HP_BILL
		,HZ_CUST_ACCOUNTS HCA_SHIP
		,HZ_PARTIES HP_SHIP
		,ZX_REGISTRATIONS ZR
		,HZ_PARTIES HP_ENTITY
		,XLE_ENTITY_PROFILES XEP
		---TABLES ADDED---
		,RA_BATCH_SOURCES_ALL RBSA
		,TAX_DETAILS CGST_TAX_DETAILS
		,TAX_DETAILS SGST_TAX_DETAILS
		,TAX_DETAILS IGST_TAX_DETAILS
		,TAX_DETAILS CESS_TAX_DETAILS 
		----------GEORAPHY TABLE--------------
		,GEORAPHY BU_GEORAPHY
		,GEORAPHY SHIP_FROM_GEORAPHY
		,GEORAPHY SHIP_TO_GEORAPHY
		,GEORAPHY BILL_GEORAPHY
		,GEORAPHY SHIP_GEORAPHY
		-------------INVENTORY TABLES-------
		,EGP_ITEM_CAT_ASSIGNMENTS EICA
		,EGP_CATEGORIES_B ECB
		,EGP_SYSTEM_ITEMS_B ESIB
		,EGP_CATEGORY_SETS_B ECSB
		-- ,EGP_SYSTEM_ITEMS_TL ESIT
		----------SHIPMENT TABLES---------------
		-- ,WSH_NEW_DELIVERIES WND
		-- ,WSH_DELIVERY_DETAILS WDD
		,(SELECT
			WND1.ATTRIBUTE2 
			,WND1.ATTRIBUTE1 
			,WND1.ATTRIBUTE_NUMBER1 
			,WND1.ATTRIBUTE3 
			,WND1.ATTRIBUTE4 
			,WND1.ATTRIBUTE5 
			,WND1.ATTRIBUTE6 
			,WND1.ATTRIBUTE7 
			,TO_CHAR(WND1.ATTRIBUTE_DATE1,'DD-MM-YYYY')  ATTRIBUTE_DATE1
			,WND1.ATTRIBUTE8 
			,WND1.DELIVERY_NAME
			,WDD.SHIP_FROM_LOCATION_ID
			,WDD.SHIP_TO_LOCATION_ID
			,SHIP_FROM_PDF.ADDRESS_LINE_1 SHIP_FROM_ADDRESS1
			,SHIP_FROM_PDF.ADDRESS_LINE_2 SHIP_FROM_ADDRESS2
			,SHIP_FROM_PDF.TOWN_OR_CITY SHIP_FROM_CITY
			,SHIP_FROM_PDF.POSTAL_CODE SHIP_FROM_POSTAL_CODE
			,SHIP_FROM_PDF.REGION_2 SHIP_FROM_STATE
			,SHIP_FROM_PDF.COUNTRY SHIP_FROM_COUNTRY
			,SHIP_FROM_PDF.ADDRESS_LINE_1||SHIP_FROM_PDF.ADDRESS_LINE_2||SHIP_FROM_PDF.TOWN_OR_CITY||SHIP_FROM_PDF.REGION_2||SHIP_FROM_PDF.POSTAL_CODE||SHIP_FROM_PDF.COUNTRY SHIP_FROM_CONCATINATED_ADDRESS
			,SHIP_TO_PDF.ADDRESS_LINE_1 SHIP_TO_ADDRESS1
			,SHIP_TO_PDF.ADDRESS_LINE_2 SHIP_TO_ADDRESS2
			,SHIP_TO_PDF.TOWN_OR_CITY SHIP_TO_CITY
			,SHIP_TO_PDF.POSTAL_CODE SHIP_TO_POSTAL_CODE
			,SHIP_TO_PDF.REGION_2 SHIP_TO_STATE
			,SHIP_TO_PDF.COUNTRY SHIP_TO_COUNTRY
			,SHIP_TO_PDF.ADDRESS_LINE_1||SHIP_TO_PDF.ADDRESS_LINE_2||SHIP_TO_PDF.TOWN_OR_CITY||SHIP_TO_PDF.REGION_2||SHIP_TO_PDF.POSTAL_CODE||SHIP_TO_PDF.COUNTRY SHIP_TO_CONCATINATED_ADDRESS
		FROM 
			WSH_NEW_DELIVERIES WND1
			,WSH_DELIVERY_DETAILS WDD
			,PER_LOCATION_DETAILS_F SHIP_FROM_PLDF
			,PER_ADDRESSES_F  SHIP_FROM_PDF
			,PER_LOCATION_DETAILS_F  SHIP_TO_PLDF
			,PER_ADDRESSES_F  SHIP_TO_PDF
		WHERE
			WND1.DELIVERY_ID=WDD.DELIVERY_DETAIL_ID
			AND WDD.SHIP_FROM_LOCATION_ID=SHIP_FROM_PLDF.LOCATION_ID
			AND SHIP_FROM_PLDF.MAIN_ADDRESS_ID=SHIP_FROM_PDF.ADDRESS_ID
			AND WDD.SHIP_TO_LOCATION_ID=SHIP_TO_PLDF.LOCATION_ID
			AND SHIP_TO_PLDF.MAIN_ADDRESS_ID=SHIP_TO_PDF.ADDRESS_ID
			AND WND1.SOURCE_LINE_TYPE IN  ('TRANSFER_ORDER')				
		 ) WND
		 
		 ,(SELECT
			HAO.ORGANIZATION_ID
			,PL.LOCATION_ID
			,PDF.ADDRESS_LINE_1 ADDRESS1
			,PDF.ADDRESS_LINE_2 ADDRESS2
			,PDF.TOWN_OR_CITY CITY
			,PDF.POSTAL_CODE
			,PDF.REGION_2 STATE
			,PDF.COUNTRY
			,PDF.ADDRESS_LINE_1||PDF.ADDRESS_LINE_2||PDF.TOWN_OR_CITY||PDF.REGION_2||PDF.POSTAL_CODE||PDF.COUNTRY BU_CONCATINATED_ADDRESS
		FROM
			HR_ALL_ORGANIZATION_UNITS HAO
			,HR_ORG_UNIT_CLASSIFICATIONS_F HAC
			,PER_LOCATIONS PL
			,PER_LOCATION_DETAILS_F PLDF
			,PER_ADDRESSES_F PDF
		WHERE
			HAO.ORGANIZATION_ID = HAC.ORGANIZATION_ID
			--FILTER---
			AND HAC.CLASSIFICATION_CODE IN ('FUN_BUSINESS_UNIT')
			AND HAO.LOCATION_ID=PL.LOCATION_ID	
			AND PL.LOCATION_ID=PLDF.LOCATION_ID
			AND PLDF.MAIN_ADDRESS_ID=PDF.ADDRESS_ID
			--ADDED ON 4APR22
			AND SYSDATE BETWEEN HAC.EFFECTIVE_START_DATE AND HAC.EFFECTIVE_END_DATE
			AND SYSDATE BETWEEN PLDF.EFFECTIVE_START_DATE AND PLDF.EFFECTIVE_END_DATE
			AND SYSDATE BETWEEN PDF.EFFECTIVE_START_DATE AND PDF.EFFECTIVE_END_DATE
		) BU_ADDRESS
		,(SELECT
				WND1.ATTRIBUTE2  E_WAY_BILL_NO
				,TO_CHAR(WND1.ATTRIBUTE_DATE1,'DD-MM-YYYY')  E_WAY_BILL_DATE
				,WND1.DELIVERY_NAME
			FROM 
				WSH_NEW_DELIVERIES WND1
			WHERE
				WND1.SOURCE_LINE_TYPE IN  ('TRANSFER_ORDER')				
		 ) E_WAY
		-- ,(SELECT
			-- ZPTP.PARTY_ID
			-- ,ZR_CUS_REG.REGISTRATION_NUMBER
		-- FROM
			-- ZX_PARTY_TAX_PROFILE ZPTP
			-- ,ZX_REGISTRATIONS ZR_CUS_REG
		-- WHERE
			-- ZPTP.PARTY_TAX_PROFILE_ID = ZR_CUS_REG.PARTY_TAX_PROFILE_ID(+)
			-- AND (1=(CASE WHEN (SYSDATE >= ZR_CUS_REG.EFFECTIVE_FROM AND SYSDATE <= ZR_CUS_REG.EFFECTIVE_TO AND UPPER(ZR_CUS_REG.REGISTRATION_STATUS_CODE )='REGISTERED' ) THEN 1
				-- WHEN  (SYSDATE >= ZR_CUS_REG.EFFECTIVE_FROM AND ZR_CUS_REG.EFFECTIVE_TO IS NULL AND UPPER(ZR_CUS_REG.REGISTRATION_STATUS_CODE )='REGISTERED' ) THEN 1
				-- ELSE 2		--EXCLUDED END DATED
			            -- END )
		-- )) CUSTOMER_GST
		,TAX_REG_DETAILS PROFILE_TAX
		,TAX_REG_DETAILS SITE_TAX
		 ,JG_TAX_INVOICE_REFERENCES JTIR
		 ,EGP_CATEGORY_SET_VALID_CATS ECSVC
	WHERE 1=1
	--and rcta.trx_number in ('178000') --22/03 Sarang added for OIC Testing
		-- HOUFT.ORGANIZATION_ID = RCTA.ORG_ID
		-- AND HAO.ORGANIZATION_ID = HAC.ORGANIZATION_ID
		AND HAO.ORGANIZATION_ID = RCTA.ORG_ID
		AND BU_ADDRESS.ORGANIZATION_ID = RCTA.ORG_ID
		
		-- AND HOUFT.ORGANIZATION_ID = IOP.ORGANIZATION_ID(+)
		AND RCTA.CUST_TRX_TYPE_SEQ_ID = RCTTA.CUST_TRX_TYPE_SEQ_ID(+)
		AND RCTA.CUSTOMER_TRX_ID = RCTLA_LINE.CUSTOMER_TRX_ID
		AND RCTA.CUSTOMER_TRX_ID=RCTL_DIST.CUSTOMER_TRX_ID
		AND RCTA.CUSTOMER_TRX_ID=JTIR.TRX_ID
		AND RCTLA_LINE.CUSTOMER_TRX_LINE_ID=RCTL_DIST.CUSTOMER_TRX_LINE_ID
		-- AND RCTA.SHIP_TO_ADDRESS_ID = HL.LOCATION_ID
		AND RCTA.BILL_TO_CUSTOMER_ID = HCA_BILL.CUST_ACCOUNT_ID(+)
		AND RCTA.BILL_TO_SITE_USE_ID=HCSUA.SITE_USE_ID		--ADDED ON ON 21322 FOR SITE LEVEL TAX DETAILS
		AND HCSUA.CUST_ACCT_SITE_ID=HCASA.CUST_ACCT_SITE_ID		--ADDED ON ON 21322 FOR SITE LEVEL TAX DETAILS
		-- AND RCTA.BILL_TO_CUSTOMER_ID=HCASA.CUST_ACCOUNT_ID		--ADDED TO FIX MISSING GST#
		AND HCA_BILL.PARTY_ID = HP_BILL.PARTY_ID
		AND HCA_SHIP.CUST_ACCOUNT_ID =NVL2(RCTA.SHIP_TO_CUSTOMER_ID,RCTA.SHIP_TO_CUSTOMER_ID,RCTA.BILL_TO_CUSTOMER_ID) --IF SHIP_TO IS NULL, USE BILL_TO SINCE GTPL HAS ONLY 1 ACCOUNT FOR BILL_TO AND SHIP_TO
		AND HCA_SHIP.PARTY_ID = HP_SHIP.PARTY_ID
		AND RCTA.FIRST_PTY_REG_ID = ZR.REGISTRATION_ID(+)
		
		-- AND (HCASA.PARTY_SITE_ID= CUSTOMER_GST.PARTY_ID OR HP_BILL.PARTY_ID = CUSTOMER_GST.PARTY_ID )
		AND HCASA.PARTY_SITE_ID=SITE_TAX.PARTY_ID(+)
		AND HP_BILL.PARTY_ID = PROFILE_TAX.PARTY_ID(+)
		-- AND 1=(CASE
				-- WHEN HP_BILL.PARTY_ID = CUSTOMER_GST.PARTY_ID THEN 1	--PROFILE LEVEL TAX REG#
				-- WHEN HCASA.PARTY_SITE_ID= CUSTOMER_GST.PARTY_ID THEN 1	--ADDED ON ON 21322 FOR SITE LEVEL TAX DETAILS
				-- ELSE 1		--IF NOT AVAILABLE 
		            -- END)
		-- AND (1=(CASE WHEN (SYSDATE >= ZR.EFFECTIVE_FROM AND SYSDATE <= ZR.EFFECTIVE_TO) THEN 1
			-- WHEN  (SYSDATE >= ZR.EFFECTIVE_FROM AND ZR.EFFECTIVE_TO IS NULL) THEN 1
			-- ELSE 1
		            -- END )
		-- AND UPPER(ZR.REGISTRATION_STATUS_CODE (+))='REGISTERED'
		-- -- AND ZR_CUS_REG.DEFAULT_REGISTRATION_FLAG='Y'	--ADDED ON 21322
		-- )		
		
		AND RCTA.LEGAL_ENTITY_ID = XEP.LEGAL_ENTITY_ID
		AND XEP.PARTY_ID = HP_ENTITY.PARTY_ID
		AND UPPER(BU_ADDRESS.STATE)=UPPER(BU_GEORAPHY.STATE(+))	--FOR BU
		AND UPPER(WND.SHIP_FROM_STATE)=UPPER(SHIP_FROM_GEORAPHY.STATE(+))	--FOR DISPATCH SHIP FROM LOCATION
		AND UPPER(HP_BILL.STATE)=UPPER(BILL_GEORAPHY.STATE(+))			--FOR BILL_TO FROM RCTA
		AND UPPER(HP_SHIP.STATE)=UPPER(SHIP_GEORAPHY.STATE(+))			--FOR SHIPPING  FROM RCTA
		AND UPPER(WND.SHIP_TO_STATE)=UPPER(SHIP_TO_GEORAPHY.STATE(+))	--FOR SHIPPING FROM SHIPMENT
		-------JOINS---
		AND (ESIB.INVENTORY_ITEM_ID=EICA.INVENTORY_ITEM_ID
		AND EICA.CATEGORY_SET_ID=ECSB.CATEGORY_SET_ID
		AND EICA.CATEGORY_ID=ECB.CATEGORY_ID
		AND EICA.CATEGORY_SET_ID=ECSVC.CATEGORY_SET_ID
		AND EICA.CATEGORY_ID=ECSVC.CATEGORY_ID
		AND ESIB.ORGANIZATION_ID=ESIB.MASTER_ORG_ID
		AND ESIB.ORGANIZATION_ID=EICA.ORGANIZATION_ID		--ADDED ON 4APR22
		AND  RCTLA_LINE.WAREHOUSE_ID=ESIB.ORGANIZATION_ID(+)		--ADDED ON 4APR22
	
		AND RCTLA_LINE.INVENTORY_ITEM_ID = ESIB.INVENTORY_ITEM_ID(+))
		
		
		AND RCTLA_LINE.INTERFACE_LINE_ATTRIBUTE7=WND.DELIVERY_NAME(+)
		
		
		---------------TAX-------------------
		---------------CGST------------------
		AND RCTA.CUSTOMER_TRX_ID = CGST_TAX_DETAILS.CUSTOMER_TRX_ID(+)
		 AND RCTLA_LINE.CUSTOMER_TRX_LINE_ID = CGST_TAX_DETAILS.LINK_TO_CUST_TRX_LINE_ID(+) 
		 ---------------SGST------------------
		AND RCTA.CUSTOMER_TRX_ID = SGST_TAX_DETAILS.CUSTOMER_TRX_ID(+)
		 AND RCTLA_LINE.CUSTOMER_TRX_LINE_ID = SGST_TAX_DETAILS.LINK_TO_CUST_TRX_LINE_ID(+)
		---------------IGST------------------
		AND RCTA.CUSTOMER_TRX_ID = IGST_TAX_DETAILS.CUSTOMER_TRX_ID(+)
		 AND RCTLA_LINE.CUSTOMER_TRX_LINE_ID = IGST_TAX_DETAILS.LINK_TO_CUST_TRX_LINE_ID(+)
		---------------CESS------------------
		AND RCTA.CUSTOMER_TRX_ID = CESS_TAX_DETAILS.CUSTOMER_TRX_ID(+)
		 AND RCTLA_LINE.CUSTOMER_TRX_LINE_ID = CESS_TAX_DETAILS.LINK_TO_CUST_TRX_LINE_ID(+)
		 
		 
		------velocis joins------
		AND RCTA.BATCH_SOURCE_SEQ_ID = RBSA.BATCH_SOURCE_SEQ_ID(+)
		------E_WAY JOIN------
		AND RCTLA_LINE.INTERFACE_LINE_ATTRIBUTE7=E_WAY.DELIVERY_NAME(+)
		
		--FILTER--
		AND RCTA.COMPLETE_FLAG='Y'
		AND RCTLA_LINE.LINE_TYPE='LINE'
		AND RCTL_DIST.ACCOUNT_CLASS!='TAX'
		AND RCTL_DIST.GL_DATE IS NOT NULL
		AND UPPER(CGST_TAX_DETAILS.TAX(+))='IN CGST'
		AND UPPER(SGST_TAX_DETAILS.TAX(+))='IN SGST'
		AND UPPER(IGST_TAX_DETAILS.TAX(+))='IN IGST'
		AND UPPER(CESS_TAX_DETAILS.TAX(+))='IN CESS' 
		AND UPPER(ECSB.CATALOG_CODE)='PROCUREMENT_CATALOG'
		AND RCTLA_LINE.TAX_INVOICE_NUMBER IS NOT NULL
		-- AND HAC.CLASSIFICATION_CODE IN ('FUN_BUSINESS_UNIT')
		-- AND ESIT.LANGUAGE=USERENV('LANG')
		AND ( UPPER(RBSA.NAME) NOT LIKE 'MQ%' OR UPPER(RBSA.NAME) NOT LIKE 'EDGE%' OR UPPER(RBSA.NAME) NOT LIKE 'HEIGHT 8%')	--FILTER TRANSACTION FROM MQ,EDGE AND HEIGHT8
		AND RCTLA_LINE.GLOBAL_ATTRIBUTE3 IS NULL 		--SEND ONLY UNPROCESSED TRANSACTIONS WHERE IRN IS NOT GENERATED
		AND JTIR.RECORD_TYPE_CODE='GST_EINV_OUTBOUND'
		--AND RCTA.TRX_NUMBER='100020999'
		--AND RCTA.TRX_NUMBER IN ('1008','1012','130001','152000','148000','141000','10000','10037999')
		---------------PARAMETERS------------------------------
		-- AND RCTA.ORG_ID=:P_BU
		-- AND HP_BILL.PARTY_NAME=:P_CUSTOMER
		-- AND ( TO_DATE(TO_CHAR(RCTA.TRX_DATE, 'DD-MM-YYYY'), 'DD-MM-YYYY') BETWEEN TO_DATE(TO_CHAR(:P_FROM_DATE, 'DD-MM-YYYY'), 'DD-MM-YYYY') AND TO_DATE(TO_CHAR(:P_TO_DATE, 'DD-MM-YYYY'), 'DD-MM-YYYY') )
)

=====================================================================================
--AR COMMISSION FOR AGENT REPORT BY SAMBA
Select
  CUST_INV.line_amount,
  CUST_INV.revenue_account,
  CUST_INV.customer_account_number,
  CUST_INV.customer_name,
  AgenT_Q.agent,
  AgenT_Q.percentage,
  AgenT_Q.DIVISION,
  AgenT_Q.Supplier_number,
  round(CUST_INV.line_amount*(AgenT_Q.percentage*0.01),2) PERCENTAGE_AMOUNT
 
from (select hca.cust_account_id,

sum((trx_dist.amount
+nvl(sgst.sgst_amount,0)
+nvl(cgst.cgst_amount,0)
+nvl(igst.igst_amount,0)
-- Add Frieght
)) line_amount,
gcc.segment2 revenue_account,
hca.account_number customer_account_number,
hp.party_name customer_name


FROM
ra_customer_trx_all rcta,
ra_cust_trx_line_gl_dist_all trx_dist,
hz_cust_accounts hca,
hz_parties hp,
(SELECT
DISTINCT trx_id,
trx_line_id,
trx_line_number,
ABS (unrounded_tax_amt) igst_amount,
tax_rate igst_rate,
ABS (unrounded_taxable_amt) igst_taxable
FROM zx_lines
WHERE entity_code = 'TRANSACTIONS'
AND tax LIKE '%IGST%'
AND application_id = 222) igst,
(SELECT
DISTINCT trx_id,
trx_line_id,
trx_line_number,
ABS (unrounded_tax_amt) cgst_amount,
tax_rate cgst_rate,
ABS (unrounded_taxable_amt) cgst_taxable
FROM zx_lines
WHERE entity_code = 'TRANSACTIONS'
AND tax LIKE '%CGST%'
AND application_id = 222) cgst,
(SELECT
DISTINCT trx_id,
trx_line_id,
trx_line_number,
ABS (unrounded_tax_amt) sgst_amount,
tax_rate sgst_rate,
ABS (unrounded_taxable_amt) sgst_taxable
FROM zx_lines
WHERE entity_code = 'TRANSACTIONS'
AND tax LIKE '%SGST%'
AND application_id = 222) sgst,
gl_code_combinations gcc,
xla_transaction_entities xte,
xla_ae_headers xah,
xla_ae_lines xal,
xla_distribution_links xdl,
gl_import_references gir,
gl_je_headers gjh,
gl_je_lines gjl
WHERE 1=1
AND rcta.customer_trx_id = trx_dist.customer_trx_id
AND rcta.bill_TO_CUSTOMER_ID = hca.cust_account_id
AND rcta.sold_to_party_id=hp.party_id
--AND rcta.trx_number='56000'
AND account_class='REV'
--Tax
AND trx_dist.customer_trx_id= igst.trx_id(+)
AND trx_dist.customer_trx_line_id = igst.trx_line_id(+)
AND trx_dist.customer_trx_id = sgst.trx_id(+)
AND trx_dist.customer_trx_line_id = sgst.trx_line_id(+)
AND trx_dist.customer_trx_id = cgst.trx_id(+)
AND trx_dist.customer_trx_line_id = cgst.trx_line_id(+)
AND (rcta.trx_number IN (:p_inv)
OR
COALESCE(:p_inv,NULL) IS NULL)
AND TRUNC(rcta.trx_date) BETWEEN NVL(:p_inv_from,TRUNC(rcta.trx_date)) AND NVL(:p_inv_to,TRUNC(rcta.trx_date))
--
AND xte.source_id_int_1 = rcta.customer_trx_id
AND gcc.code_combination_id = gjl.code_combination_id
AND xte.entity_code = 'TRANSACTIONS'
AND xte.application_id = 222
AND xah.entity_id = xte.entity_id
AND xal.ae_header_id = xah.ae_header_id
AND xal.accounting_class_code = 'REVENUE'
AND xdl.ae_header_id = xah.ae_header_id
AND xdl.ae_line_num = xal.ae_line_num
AND xdl.source_distribution_id_num_1 = trx_dist.cust_trx_line_gl_dist_id
AND xdl.application_id = 222
AND gir.gl_sl_link_id = xal.gl_sl_link_id
AND gir.gl_sl_link_table='XLAJEL'
AND gjh.je_header_id = gir.je_header_id
AND gjl.je_header_id = gjh.je_header_id
AND gjl.je_line_num = gir.je_line_num
GROUP BY hca.cust_account_id,
gcc.segment2 ,
hca.account_number ,
hp.party_name) CUST_INV,
(select cust_account_id ACCOUNTZ_ID ,
           ATTRIBUTE3 agent,
           ATTRIBUTE_NUMBER1 percentage,
           ATTRIBUTE_NUMBER3 DIVISION ,
           ATTRIBUTE4 Supplier_number
           from hz_cust_accounts
           
           UNION
           select cust_account_id ACCOUNTZ_ID ,
           ATTRIBUTE7 agent,
           to_number(ATTRIBUTE8) percentage,
           ATTRIBUTE_NUMBER4 DIVISION ,
           ATTRIBUTE9 Supplier_number
           from hz_cust_accounts
            )
Agent_q
where CUST_INV.cust_account_id=Agent_q.ACCOUNTZ_ID(+)
 AND CUST_INV.revenue_account=Agent_q.DIVISION(+)

/*to remove time stamp
select to_char(:p_from_date,'dd/mm/yyyy')p_from_date_p,
      to_char(:p_to_date,'dd/mm/yyyy')p_to_date_p  */   

=========================================================================================================
















































































